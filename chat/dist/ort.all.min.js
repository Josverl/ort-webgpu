/*!
 * ONNX Runtime Web v1.18.0
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License.
 */
"use strict";var ort=(()=>{var dw=Object.create;var Xi=Object.defineProperty;var cw=Object.getOwnPropertyDescriptor;var fw=Object.getOwnPropertyNames;var pw=Object.getPrototypeOf,mw=Object.prototype.hasOwnProperty;var D=(r,e)=>()=>(r&&(e=r(r=0)),e);var st=(r,e)=>()=>(e||r((e={exports:{}}).exports,e),e.exports),Qr=(r,e)=>{for(var n in e)Xi(r,n,{get:e[n],enumerable:!0})},nd=(r,e,n,t)=>{if(e&&typeof e=="object"||typeof e=="function")for(let o of fw(e))!mw.call(r,o)&&o!==n&&Xi(r,o,{get:()=>e[o],enumerable:!(t=cw(e,o))||t.enumerable});return r};var qn=(r,e,n)=>(n=r!=null?dw(pw(r)):{},nd(e||!r||!r.__esModule?Xi(n,"default",{value:r,enumerable:!0}):n,r)),Ir=r=>nd(Xi({},"__esModule",{value:!0}),r);var Zi,bn,Wr,hw,Ji,Qi=D(()=>{"use strict";Zi=new Map,bn=[],Wr=(r,e,n)=>{if(e&&typeof e.init=="function"&&typeof e.createInferenceSessionHandler=="function"){let t=Zi.get(r);if(t===void 0)Zi.set(r,{backend:e,priority:n});else{if(t.priority>n)return;if(t.priority===n&&t.backend!==e)throw new Error(`cannot register backend "${r}" using priority ${n}`)}if(n>=0){let o=bn.indexOf(r);o!==-1&&bn.splice(o,1);for(let i=0;i<bn.length;i++)if(Zi.get(bn[i]).priority<=n){bn.splice(i,0,r);return}bn.push(r)}return}throw new TypeError("not a valid backend")},hw=async r=>{let e=Zi.get(r);if(!e)return"backend not found.";if(e.initialized)return e.backend;if(e.aborted)return e.error;{let n=!!e.initPromise;try{return n||(e.initPromise=e.backend.init(r)),await e.initPromise,e.initialized=!0,e.backend}catch(t){return n||(e.error=`${t}`,e.aborted=!0),e.error}finally{delete e.initPromise}}},Ji=async r=>{let e=r.executionProviders||[],n=e.map(u=>typeof u=="string"?u:u.name),t=n.length===0?bn:n,o,i=[],s=new Set;for(let u of t){let l=await hw(u);typeof l=="string"?i.push({name:u,err:l}):(o||(o=l),o===l&&s.add(u))}if(!o)throw new Error(`no available backend found. ERR: ${i.map(u=>`[${u.name}] ${u.err}`).join(", ")}`);for(let{name:u,err:l}of i)n.includes(u)&&console.warn(`removing requested execution provider "${u}" from session options because it is not available: ${l}`);let a=e.filter(u=>s.has(typeof u=="string"?u:u.name));return[o,new Proxy(r,{get:(u,l)=>l==="executionProviders"?a:Reflect.get(u,l)})]}});var od=D(()=>{"use strict";Qi()});var id,ad=D(()=>{"use strict";id="1.18.0"});var sd,Ar,Fs=D(()=>{"use strict";ad();sd="warning",Ar={wasm:{},webgl:{},webgpu:{},versions:{common:id},set logLevel(r){if(r!==void 0){if(typeof r!="string"||["verbose","info","warning","error","fatal"].indexOf(r)===-1)throw new Error(`Unsupported logging level: ${r}`);sd=r}},get logLevel(){return sd}};Object.defineProperty(Ar,"logLevel",{enumerable:!0})});var _e,ud=D(()=>{"use strict";Fs();_e=Ar});var ld,dd,cd=D(()=>{"use strict";ld=(r,e)=>{let n=typeof document<"u"?document.createElement("canvas"):new OffscreenCanvas(1,1);n.width=r.dims[3],n.height=r.dims[2];let t=n.getContext("2d");if(t!=null){let o,i;e?.tensorLayout!==void 0&&e.tensorLayout==="NHWC"?(o=r.dims[2],i=r.dims[3]):(o=r.dims[3],i=r.dims[2]);let s=e?.format!==void 0?e.format:"RGB",a=e?.norm,u,l;a===void 0||a.mean===void 0?u=[255,255,255,255]:typeof a.mean=="number"?u=[a.mean,a.mean,a.mean,a.mean]:(u=[a.mean[0],a.mean[1],a.mean[2],0],a.mean[3]!==void 0&&(u[3]=a.mean[3])),a===void 0||a.bias===void 0?l=[0,0,0,0]:typeof a.bias=="number"?l=[a.bias,a.bias,a.bias,a.bias]:(l=[a.bias[0],a.bias[1],a.bias[2],0],a.bias[3]!==void 0&&(l[3]=a.bias[3]));let d=i*o,p=0,h=d,y=d*2,b=-1;s==="RGBA"?(p=0,h=d,y=d*2,b=d*3):s==="RGB"?(p=0,h=d,y=d*2):s==="RBG"&&(p=0,y=d,h=d*2);for(let w=0;w<i;w++)for(let T=0;T<o;T++){let x=(r.data[p++]-l[0])*u[0],_=(r.data[h++]-l[1])*u[1],A=(r.data[y++]-l[2])*u[2],P=b===-1?255:(r.data[b++]-l[3])*u[3];t.fillStyle="rgba("+x+","+_+","+A+","+P+")",t.fillRect(T,w,1,1)}if("toDataURL"in n)return n.toDataURL();throw new Error("toDataURL is not supported")}else throw new Error("Can not access image data")},dd=(r,e)=>{let n=typeof document<"u"?document.createElement("canvas").getContext("2d"):new OffscreenCanvas(1,1).getContext("2d"),t;if(n!=null){let o,i,s;e?.tensorLayout!==void 0&&e.tensorLayout==="NHWC"?(o=r.dims[2],i=r.dims[1],s=r.dims[3]):(o=r.dims[3],i=r.dims[2],s=r.dims[1]);let a=e!==void 0&&e.format!==void 0?e.format:"RGB",u=e?.norm,l,d;u===void 0||u.mean===void 0?l=[255,255,255,255]:typeof u.mean=="number"?l=[u.mean,u.mean,u.mean,u.mean]:(l=[u.mean[0],u.mean[1],u.mean[2],255],u.mean[3]!==void 0&&(l[3]=u.mean[3])),u===void 0||u.bias===void 0?d=[0,0,0,0]:typeof u.bias=="number"?d=[u.bias,u.bias,u.bias,u.bias]:(d=[u.bias[0],u.bias[1],u.bias[2],0],u.bias[3]!==void 0&&(d[3]=u.bias[3]));let p=i*o;if(e!==void 0&&(e.format!==void 0&&s===4&&e.format!=="RGBA"||s===3&&e.format!=="RGB"&&e.format!=="BGR"))throw new Error("Tensor format doesn't match input tensor dims");let h=4,y=0,b=1,w=2,T=3,x=0,_=p,A=p*2,P=-1;a==="RGBA"?(x=0,_=p,A=p*2,P=p*3):a==="RGB"?(x=0,_=p,A=p*2):a==="RBG"&&(x=0,A=p,_=p*2),t=n.createImageData(o,i);for(let k=0;k<i*o;y+=h,b+=h,w+=h,T+=h,k++)t.data[y]=(r.data[x++]-d[0])*l[0],t.data[b]=(r.data[_++]-d[1])*l[1],t.data[w]=(r.data[A++]-d[2])*l[2],t.data[T]=P===-1?255:(r.data[P++]-d[3])*l[3]}else throw new Error("Can not access image data");return t}});var Vs,fd,pd,md,hd,gd=D(()=>{"use strict";ea();Vs=(r,e)=>{if(r===void 0)throw new Error("Image buffer must be defined");if(e.height===void 0||e.width===void 0)throw new Error("Image height and width must be defined");if(e.tensorLayout==="NHWC")throw new Error("NHWC Tensor layout is not supported yet");let{height:n,width:t}=e,o=e.norm??{mean:255,bias:0},i,s;typeof o.mean=="number"?i=[o.mean,o.mean,o.mean,o.mean]:i=[o.mean[0],o.mean[1],o.mean[2],o.mean[3]??255],typeof o.bias=="number"?s=[o.bias,o.bias,o.bias,o.bias]:s=[o.bias[0],o.bias[1],o.bias[2],o.bias[3]??0];let a=e.format!==void 0?e.format:"RGBA",u=e.tensorFormat!==void 0&&e.tensorFormat!==void 0?e.tensorFormat:"RGB",l=n*t,d=u==="RGBA"?new Float32Array(l*4):new Float32Array(l*3),p=4,h=0,y=1,b=2,w=3,T=0,x=l,_=l*2,A=-1;a==="RGB"&&(p=3,h=0,y=1,b=2,w=-1),u==="RGBA"?A=l*3:u==="RBG"?(T=0,_=l,x=l*2):u==="BGR"&&(_=0,x=l,T=l*2);for(let k=0;k<l;k++,h+=p,b+=p,y+=p,w+=p)d[T++]=(r[h]+s[0])/i[0],d[x++]=(r[y]+s[1])/i[1],d[_++]=(r[b]+s[2])/i[2],A!==-1&&w!==-1&&(d[A++]=(r[w]+s[3])/i[3]);return u==="RGBA"?new Ut("float32",d,[1,4,n,t]):new Ut("float32",d,[1,3,n,t])},fd=async(r,e)=>{let n=typeof HTMLImageElement<"u"&&r instanceof HTMLImageElement,t=typeof ImageData<"u"&&r instanceof ImageData,o=typeof ImageBitmap<"u"&&r instanceof ImageBitmap,i=typeof r=="string",s,a=e??{},u=()=>{if(typeof document<"u")return document.createElement("canvas");if(typeof OffscreenCanvas<"u")return new OffscreenCanvas(1,1);throw new Error("Canvas is not supported")},l=d=>d instanceof HTMLCanvasElement||d instanceof OffscreenCanvas?d.getContext("2d"):null;if(n){let d=u();d.width=r.width,d.height=r.height;let p=l(d);if(p!=null){let h=r.height,y=r.width;if(e!==void 0&&e.resizedHeight!==void 0&&e.resizedWidth!==void 0&&(h=e.resizedHeight,y=e.resizedWidth),e!==void 0){if(a=e,e.tensorFormat!==void 0)throw new Error("Image input config format must be RGBA for HTMLImageElement");a.tensorFormat="RGBA",a.height=h,a.width=y}else a.tensorFormat="RGBA",a.height=h,a.width=y;p.drawImage(r,0,0),s=p.getImageData(0,0,y,h).data}else throw new Error("Can not access image data")}else if(t){let d,p;if(e!==void 0&&e.resizedWidth!==void 0&&e.resizedHeight!==void 0?(d=e.resizedHeight,p=e.resizedWidth):(d=r.height,p=r.width),e!==void 0&&(a=e),a.format="RGBA",a.height=d,a.width=p,e!==void 0){let h=u();h.width=p,h.height=d;let y=l(h);if(y!=null)y.putImageData(r,0,0),s=y.getImageData(0,0,p,d).data;else throw new Error("Can not access image data")}else s=r.data}else if(o){if(e===void 0)throw new Error("Please provide image config with format for Imagebitmap");let d=u();d.width=r.width,d.height=r.height;let p=l(d);if(p!=null){let h=r.height,y=r.width;return p.drawImage(r,0,0,y,h),s=p.getImageData(0,0,y,h).data,a.height=h,a.width=y,Vs(s,a)}else throw new Error("Can not access image data")}else{if(i)return new Promise((d,p)=>{let h=u(),y=l(h);if(!r||!y)return p();let b=new Image;b.crossOrigin="Anonymous",b.src=r,b.onload=()=>{h.width=b.width,h.height=b.height,y.drawImage(b,0,0,h.width,h.height);let w=y.getImageData(0,0,h.width,h.height);a.height=h.height,a.width=h.width,d(Vs(w.data,a))}});throw new Error("Input data provided is not supported - aborted tensor creation")}if(s!==void 0)return Vs(s,a);throw new Error("Input data provided is not supported - aborted tensor creation")},pd=(r,e)=>{let{width:n,height:t,download:o,dispose:i}=e,s=[1,t,n,4];return new Ut({location:"texture",type:"float32",texture:r,dims:s,download:o,dispose:i})},md=(r,e)=>{let{dataType:n,dims:t,download:o,dispose:i}=e;return new Ut({location:"gpu-buffer",type:n??"float32",gpuBuffer:r,dims:t,download:o,dispose:i})},hd=(r,e,n)=>new Ut({location:"cpu-pinned",type:r,data:e,dims:n??[e.length]})});var vn,Bo,yd,bd,vd=D(()=>{"use strict";vn=new Map([["float32",Float32Array],["uint8",Uint8Array],["int8",Int8Array],["uint16",Uint16Array],["int16",Int16Array],["int32",Int32Array],["bool",Uint8Array],["float64",Float64Array],["uint32",Uint32Array]]),Bo=new Map([[Float32Array,"float32"],[Uint8Array,"uint8"],[Int8Array,"int8"],[Uint16Array,"uint16"],[Int16Array,"int16"],[Int32Array,"int32"],[Float64Array,"float64"],[Uint32Array,"uint32"]]),yd=!1,bd=()=>{if(!yd){yd=!0;let r=typeof BigInt64Array<"u"&&BigInt64Array.from,e=typeof BigUint64Array<"u"&&BigUint64Array.from,n=typeof Float16Array<"u"&&Float16Array.from;r&&(vn.set("int64",BigInt64Array),Bo.set(BigInt64Array,"int64")),e&&(vn.set("uint64",BigUint64Array),Bo.set(BigUint64Array,"uint64")),n?(vn.set("float16",Float16Array),Bo.set(Float16Array,"float16")):vn.set("float16",Uint16Array)}}});var wd,_d,xd=D(()=>{"use strict";ea();wd=r=>{let e=1;for(let n=0;n<r.length;n++){let t=r[n];if(typeof t!="number"||!Number.isSafeInteger(t))throw new TypeError(`dims[${n}] must be an integer, got: ${t}`);if(t<0)throw new RangeError(`dims[${n}] must be a non-negative integer, got: ${t}`);e*=t}return e},_d=(r,e)=>{switch(r.location){case"cpu":return new Ut(r.type,r.data,e);case"cpu-pinned":return new Ut({location:"cpu-pinned",data:r.data,type:r.type,dims:e});case"texture":return new Ut({location:"texture",texture:r.texture,type:r.type,dims:e});case"gpu-buffer":return new Ut({location:"gpu-buffer",gpuBuffer:r.gpuBuffer,type:r.type,dims:e});default:throw new Error(`tensorReshape: tensor location ${r.location} is not supported`)}}});var Ut,ea=D(()=>{"use strict";cd();gd();vd();xd();Ut=class{constructor(e,n,t){bd();let o,i;if(typeof e=="object"&&"location"in e)switch(this.dataLocation=e.location,o=e.type,i=e.dims,e.location){case"cpu-pinned":{let a=vn.get(o);if(!a)throw new TypeError(`unsupported type "${o}" to create tensor from pinned buffer`);if(!(e.data instanceof a))throw new TypeError(`buffer should be of type ${a.name}`);this.cpuData=e.data;break}case"texture":{if(o!=="float32")throw new TypeError(`unsupported type "${o}" to create tensor from texture`);this.gpuTextureData=e.texture,this.downloader=e.download,this.disposer=e.dispose;break}case"gpu-buffer":{if(o!=="float32"&&o!=="float16"&&o!=="int32"&&o!=="int64"&&o!=="uint32"&&o!=="uint8"&&o!=="bool")throw new TypeError(`unsupported type "${o}" to create tensor from gpu buffer`);this.gpuBufferData=e.gpuBuffer,this.downloader=e.download,this.disposer=e.dispose;break}default:throw new Error(`Tensor constructor: unsupported location '${this.dataLocation}'`)}else{let a,u;if(typeof e=="string")if(o=e,u=t,e==="string"){if(!Array.isArray(n))throw new TypeError("A string tensor's data must be a string array.");a=n}else{let l=vn.get(e);if(l===void 0)throw new TypeError(`Unsupported tensor type: ${e}.`);if(Array.isArray(n)){if(e==="float16"&&l===Uint16Array)throw new TypeError("Creating a float16 tensor from number array is not supported. Please use Uint16Array as data.");e==="uint64"||e==="int64"?a=l.from(n,BigInt):a=l.from(n)}else if(n instanceof l)a=n;else throw new TypeError(`A ${o} tensor's data must be type of ${l}`)}else if(u=n,Array.isArray(e)){if(e.length===0)throw new TypeError("Tensor type cannot be inferred from an empty array.");let l=typeof e[0];if(l==="string")o="string",a=e;else if(l==="boolean")o="bool",a=Uint8Array.from(e);else throw new TypeError(`Invalid element type of data array: ${l}.`)}else{let l=Bo.get(e.constructor);if(l===void 0)throw new TypeError(`Unsupported type for tensor data: ${e.constructor}.`);o=l,a=e}if(u===void 0)u=[a.length];else if(!Array.isArray(u))throw new TypeError("A tensor's dims must be a number array");i=u,this.cpuData=a,this.dataLocation="cpu"}let s=wd(i);if(this.cpuData&&s!==this.cpuData.length)throw new Error(`Tensor's size(${s}) does not match data length(${this.cpuData.length}).`);this.type=o,this.dims=i,this.size=s}static async fromImage(e,n){return fd(e,n)}static fromTexture(e,n){return pd(e,n)}static fromGpuBuffer(e,n){return md(e,n)}static fromPinnedBuffer(e,n,t){return hd(e,n,t)}toDataURL(e){return ld(this,e)}toImageData(e){return dd(this,e)}get data(){if(this.ensureValid(),!this.cpuData)throw new Error("The data is not on CPU. Use `getData()` to download GPU data to CPU, or use `texture` or `gpuBuffer` property to access the GPU data directly.");return this.cpuData}get location(){return this.dataLocation}get texture(){if(this.ensureValid(),!this.gpuTextureData)throw new Error("The data is not stored as a WebGL texture.");return this.gpuTextureData}get gpuBuffer(){if(this.ensureValid(),!this.gpuBufferData)throw new Error("The data is not stored as a WebGPU buffer.");return this.gpuBufferData}async getData(e){switch(this.ensureValid(),this.dataLocation){case"cpu":case"cpu-pinned":return this.data;case"texture":case"gpu-buffer":{if(!this.downloader)throw new Error("The current tensor is not created with a specified data downloader.");if(this.isDownloading)throw new Error("The current tensor is being downloaded.");try{this.isDownloading=!0;let n=await this.downloader();return this.downloader=void 0,this.dataLocation="cpu",this.cpuData=n,e&&this.disposer&&(this.disposer(),this.disposer=void 0),n}finally{this.isDownloading=!1}}default:throw new Error(`cannot get data from location: ${this.dataLocation}`)}}dispose(){if(this.isDownloading)throw new Error("The current tensor is being downloaded.");this.disposer&&(this.disposer(),this.disposer=void 0),this.cpuData=void 0,this.gpuTextureData=void 0,this.gpuBufferData=void 0,this.downloader=void 0,this.isDownloading=void 0,this.dataLocation="none"}ensureValid(){if(this.dataLocation==="none")throw new Error("The tensor is disposed.")}reshape(e){if(this.ensureValid(),this.downloader||this.disposer)throw new Error("Cannot reshape a tensor that owns GPU resource.");return _d(this,e)}}});var St,ta=D(()=>{"use strict";ea();St=Ut});var ra,$d,jt,Ft,Gs=D(()=>{"use strict";Fs();ra=(r,e)=>{},$d=(r,e)=>{},jt=r=>{(typeof Ar.trace>"u"?!Ar.wasm.trace:!Ar.trace)||$d("BEGIN",r)},Ft=r=>{(typeof Ar.trace>"u"?!Ar.wasm.trace:!Ar.trace)||$d("END",r)}});var na,Td=D(()=>{"use strict";Qi();ta();Gs();na=class r{constructor(e){this.handler=e}async run(e,n,t){jt();let o={},i={};if(typeof e!="object"||e===null||e instanceof St||Array.isArray(e))throw new TypeError("'feeds' must be an object that use input names as keys and OnnxValue as corresponding values.");let s=!0;if(typeof n=="object"){if(n===null)throw new TypeError("Unexpected argument[1]: cannot be null.");if(n instanceof St)throw new TypeError("'fetches' cannot be a Tensor");if(Array.isArray(n)){if(n.length===0)throw new TypeError("'fetches' cannot be an empty array.");s=!1;for(let l of n){if(typeof l!="string")throw new TypeError("'fetches' must be a string array or an object.");if(this.outputNames.indexOf(l)===-1)throw new RangeError(`'fetches' contains invalid output name: ${l}.`);o[l]=null}if(typeof t=="object"&&t!==null)i=t;else if(typeof t<"u")throw new TypeError("'options' must be an object.")}else{let l=!1,d=Object.getOwnPropertyNames(n);for(let p of this.outputNames)if(d.indexOf(p)!==-1){let h=n[p];(h===null||h instanceof St)&&(l=!0,s=!1,o[p]=h)}if(l){if(typeof t=="object"&&t!==null)i=t;else if(typeof t<"u")throw new TypeError("'options' must be an object.")}else i=n}}else if(typeof n<"u")throw new TypeError("Unexpected argument[1]: must be 'fetches' or 'options'.");for(let l of this.inputNames)if(typeof e[l]>"u")throw new Error(`input '${l}' is missing in 'feeds'.`);if(s)for(let l of this.outputNames)o[l]=null;let a=await this.handler.run(e,o,i),u={};for(let l in a)if(Object.hasOwnProperty.call(a,l)){let d=a[l];d instanceof St?u[l]=d:u[l]=new St(d.type,d.data,d.dims)}return Ft(),u}async release(){return this.handler.dispose()}static async create(e,n,t,o){jt();let i,s={};if(typeof e=="string"){if(i=e,typeof n=="object"&&n!==null)s=n;else if(typeof n<"u")throw new TypeError("'options' must be an object.")}else if(e instanceof Uint8Array){if(i=e,typeof n=="object"&&n!==null)s=n;else if(typeof n<"u")throw new TypeError("'options' must be an object.")}else if(e instanceof ArrayBuffer||typeof SharedArrayBuffer<"u"&&e instanceof SharedArrayBuffer){let d=e,p=0,h=e.byteLength;if(typeof n=="object"&&n!==null)s=n;else if(typeof n=="number"){if(p=n,!Number.isSafeInteger(p))throw new RangeError("'byteOffset' must be an integer.");if(p<0||p>=d.byteLength)throw new RangeError(`'byteOffset' is out of range [0, ${d.byteLength}).`);if(h=e.byteLength-p,typeof t=="number"){if(h=t,!Number.isSafeInteger(h))throw new RangeError("'byteLength' must be an integer.");if(h<=0||p+h>d.byteLength)throw new RangeError(`'byteLength' is out of range (0, ${d.byteLength-p}].`);if(typeof o=="object"&&o!==null)s=o;else if(typeof o<"u")throw new TypeError("'options' must be an object.")}else if(typeof t<"u")throw new TypeError("'byteLength' must be a number.")}else if(typeof n<"u")throw new TypeError("'options' must be an object.");i=new Uint8Array(d,p,h)}else throw new TypeError("Unexpected argument[0]: must be 'path' or 'buffer'.");let[a,u]=await Ji(s),l=await a.createInferenceSessionHandler(i,u);return Ft(),new r(l)}startProfiling(){this.handler.startProfiling()}endProfiling(){this.handler.endProfiling()}get inputNames(){return this.handler.inputNames}get outputNames(){return this.handler.outputNames}}});var Sd,Id=D(()=>{"use strict";Td();Sd=na});var Ad=D(()=>{"use strict"});var Od=D(()=>{"use strict"});var Ed=D(()=>{"use strict"});var Cd=D(()=>{"use strict"});var gw,oa,Pd=D(()=>{"use strict";Qi();ta();gw="Training backend could not be resolved. Make sure you're using the correct configuration & WebAssembly files.",oa=class r{constructor(e,n,t){this.handler=e,this.hasOptimizerModel=n,this.hasEvalModel=t}get trainingInputNames(){return this.handler.inputNames}get trainingOutputNames(){return this.handler.outputNames}get evalInputNames(){if(this.hasEvalModel)return this.handler.evalInputNames;throw new Error("This training session has no evalModel loaded.")}get evalOutputNames(){if(this.hasEvalModel)return this.handler.evalOutputNames;throw new Error("This training session has no evalModel loaded.")}static async create(e,n){let t=e.evalModel||"",o=e.optimizerModel||"",i=n||{},[s,a]=await Ji(i);if(s.createTrainingSessionHandler){let u=await s.createTrainingSessionHandler(e.checkpointState,e.trainModel,t,o,a);return new r(u,!!e.optimizerModel,!!e.evalModel)}else throw new Error(gw)}typeNarrowingForRunStep(e,n,t,o,i){let s={},a={};if(typeof t!="object"||t===null||t instanceof St||Array.isArray(t))throw new TypeError("'feeds' must be an object that use input names as keys and OnnxValue as corresponding values.");let u=!0;if(typeof o=="object"){if(o===null)throw new TypeError("Unexpected argument[1]: cannot be null.");if(o instanceof St)throw new TypeError("'fetches' cannot be a Tensor");if(Array.isArray(o)){if(o.length===0)throw new TypeError("'fetches' cannot be an empty array.");u=!1;for(let l of o){if(typeof l!="string")throw new TypeError("'fetches' must be a string array or an object.");if(n.indexOf(l)===-1)throw new RangeError(`'fetches' contains invalid output name: ${l}.`);s[l]=null}if(typeof i=="object"&&i!==null)a=i;else if(typeof i<"u")throw new TypeError("'options' must be an object.")}else{let l=!1,d=Object.getOwnPropertyNames(o);for(let p of n)if(d.indexOf(p)!==-1){let h=o[p];(h===null||h instanceof St)&&(l=!0,u=!1,s[p]=h)}if(l){if(typeof i=="object"&&i!==null)a=i;else if(typeof i<"u")throw new TypeError("'options' must be an object.")}else a=o}}else if(typeof o<"u")throw new TypeError("Unexpected argument[1]: must be 'fetches' or 'options'.");for(let l of e)if(typeof t[l]>"u")throw new Error(`input '${l}' is missing in 'feeds'.`);if(u)for(let l of n)s[l]=null;return[s,a]}convertHandlerReturnTypeToMapOfTensors(e){let n={};for(let t in e)if(Object.hasOwnProperty.call(e,t)){let o=e[t];o instanceof St?n[t]=o:n[t]=new St(o.type,o.data,o.dims)}return n}async lazyResetGrad(){await this.handler.lazyResetGrad()}async runTrainStep(e,n,t){let[o,i]=this.typeNarrowingForRunStep(this.trainingInputNames,this.trainingOutputNames,e,n,t),s=await this.handler.runTrainStep(e,o,i);return this.convertHandlerReturnTypeToMapOfTensors(s)}async runOptimizerStep(e){if(this.hasOptimizerModel)await this.handler.runOptimizerStep(e||{});else throw new Error("This TrainingSession has no OptimizerModel loaded.")}async runEvalStep(e,n,t){if(this.hasEvalModel){let[o,i]=this.typeNarrowingForRunStep(this.evalInputNames,this.evalOutputNames,e,n,t),s=await this.handler.runEvalStep(e,o,i);return this.convertHandlerReturnTypeToMapOfTensors(s)}else throw new Error("This TrainingSession has no EvalModel loaded.")}async getParametersSize(e=!0){return this.handler.getParametersSize(e)}async loadParametersBuffer(e,n=!0){let t=await this.getParametersSize(n);if(e.length!==4*t)throw new Error("Size of the buffer passed into loadParametersBuffer must match the number of parameters in the model. Please use getParametersSize method to check.");return this.handler.loadParametersBuffer(e,n)}async getContiguousParameters(e=!0){return this.handler.getContiguousParameters(e)}async release(){return this.handler.dispose()}}});var kd,Dd=D(()=>{"use strict";Pd();kd=oa});var Ws={};Qr(Ws,{InferenceSession:()=>Sd,TRACE:()=>ra,TRACE_FUNC_BEGIN:()=>jt,TRACE_FUNC_END:()=>Ft,Tensor:()=>St,TrainingSession:()=>kd,env:()=>_e,registerBackend:()=>Wr});var Rt=D(()=>{"use strict";od();ud();Id();ta();Ad();Od();Gs();Ed();Cd();Dd()});function en(r,e,n,t){if(e===void 0)return bw(r);if(n===void 0)ia(r,e,1);else if(typeof n=="number"&&t===void 0)ia(r,e,n);else if(typeof n=="string"&&t===void 0)ia(r,n,1,e);else if(typeof n=="string"&&typeof t=="number")ia(r,n,t,e);else throw new TypeError("input is valid")}function bw(r){return{verbose:en.verbose.bind(null,r),info:en.info.bind(null,r),warning:en.warning.bind(null,r),error:en.error.bind(null,r),fatal:en.fatal.bind(null,r)}}function ia(r,e,n,t){let o=Ro[t||""]||Ro[""];Rd[r]<Rd[o.minimalSeverity]||(o.logDateTime&&(e=`${new Date().toISOString()}|${e}`),o.logSourceLocation,yw[o.provider].log(r,e,t))}var Hs,js,Rd,yw,zd,Ro,Qe,sa,ua,la,aa,nr=D(()=>{"use strict";Hs=class{log(e,n,t){}},js=class{log(e,n,t){console.log(`${this.color(e)} ${t?"\x1B[35m"+t+"\x1B[0m ":""}${n}`)}color(e){switch(e){case"verbose":return"\x1B[34;40mv\x1B[0m";case"info":return"\x1B[32mi\x1B[0m";case"warning":return"\x1B[30;43mw\x1B[0m";case"error":return"\x1B[31;40me\x1B[0m";case"fatal":return"\x1B[101mf\x1B[0m";default:throw new Error(`unsupported severity: ${e}`)}}},Rd={verbose:1e3,info:2e3,warning:4e3,error:5e3,fatal:6e3},yw={none:new Hs,console:new js},zd={provider:"console",minimalSeverity:"warning",logDateTime:!0,logSourceLocation:!1},Ro={"":zd};(u=>{function r(l,d){u("verbose",l,d)}u.verbose=r;function e(l,d){u("info",l,d)}u.info=e;function n(l,d){u("warning",l,d)}u.warning=n;function t(l,d){u("error",l,d)}u.error=t;function o(l,d){u("fatal",l,d)}u.fatal=o;function i(l){Ro={},s("",l||{})}u.reset=i;function s(l,d){if(l==="*")i(d);else{let p=Ro[l]||zd;Ro[l]={provider:d.provider||p.provider,minimalSeverity:d.minimalSeverity||p.minimalSeverity,logDateTime:d.logDateTime===void 0?p.logDateTime:d.logDateTime,logSourceLocation:d.logSourceLocation===void 0?p.logSourceLocation:d.logSourceLocation}}}u.set=s;function a(l){let d={};l.logLevel&&(d.minimalSeverity=l.logLevel),s("",d)}u.setWithEnv=a})(en||={});Qe=en,sa=class{constructor(e,n,t,o,i,s){this.category=e;this.name=n;this.startTime=t;this.endCallback=o;this.timer=i;this.ctx=s}async end(){return this.endCallback(this)}async checkTimer(){if(this.ctx===void 0||this.timer===void 0)throw new Error("No webgl timer found");return this.ctx.endTimer(),this.ctx.waitForQueryAndGetTime(this.timer)}},ua=class{constructor(e,n,t,o){this.category=e;this.name=n;this.startTime=t;this.endTime=o}},la=class{constructor(e,n,t){this._started=!1;this._flushPointer=0;this._started=!1,this._maxNumberEvents=e===void 0?1e4:e,this._flushBatchSize=n===void 0?10:n,this._flushIntervalInMilliseconds=t===void 0?5e3:t}static create(e){return e===void 0?new this:new this(e.maxNumberEvents,e.flushBatchSize,e.flushIntervalInMilliseconds)}start(){this._started=!0,this._timingEvents=[],this._flushTime=aa(),this._flushPointer=0}stop(){for(this._started=!1;this._flushPointer<this._timingEvents.length;this._flushPointer++)this.logOneEvent(this._timingEvents[this._flushPointer])}event(e,n,t,o){let i=this._started?this.begin(e,n,o):void 0,s=!1,a=t();if(a&&typeof a.then=="function")return s=!0,new Promise((u,l)=>{a.then(async d=>{i&&await i.end(),u(d)},async d=>{i&&await i.end(),l(d)})});if(!s&&i){let u=i.end();if(u&&typeof u.then=="function")return new Promise((l,d)=>{u.then(()=>{l(a)},p=>{d(p)})})}return a}begin(e,n,t){if(!this._started)throw new Error("profiler is not started yet");if(t===void 0){let o=aa();return this.flush(o),new sa(e,n,o,i=>this.endSync(i))}else{let o=t.beginTimer();return new sa(e,n,0,async i=>this.end(i),o,t)}}async end(e){let n=await e.checkTimer();this._timingEvents.length<this._maxNumberEvents&&(this._timingEvents.push(new ua(e.category,e.name,e.startTime,n)),this.flush(n))}endSync(e){let n=aa();this._timingEvents.length<this._maxNumberEvents&&(this._timingEvents.push(new ua(e.category,e.name,e.startTime,n)),this.flush(n))}logOneEvent(e){Qe.verbose(`Profiler.${e.category}`,`${(e.endTime-e.startTime).toFixed(2)}ms on event '${e.name}' at ${e.endTime.toFixed(2)}`)}flush(e){if(this._timingEvents.length-this._flushPointer>=this._flushBatchSize||e-this._flushTime>=this._flushIntervalInMilliseconds){for(let n=this._flushPointer;this._flushPointer<n+this._flushBatchSize&&this._flushPointer<this._timingEvents.length;this._flushPointer++)this.logOneEvent(this._timingEvents[this._flushPointer]);this._flushTime=aa()}}get started(){return this._started}},aa=typeof performance<"u"&&performance.now?()=>performance.now():Date.now});function Md(r,e,n){for(let t of n){let o=t[0],i=t[1],s=t[2],a=t[3],u=t[4];if(r.opType===o){for(let l of e)if((l.domain===i||l.domain==="ai.onnx"&&i==="")&&vw(l.version,s))return{opImpl:a,opInit:u}}}throw new TypeError(`cannot resolve operator '${r.opType}' with opsets: ${e.map(t=>`${t.domain||"ai.onnx"} v${t.version}`).join(", ")}`)}function vw(r,e){if(e.endsWith("+")){let n=Number.parseInt(e.substring(0,e.length-1),10);return!isNaN(n)&&n<=r}else if(e.split("-").length===2){let n=e.split("-"),t=Number.parseInt(n[0],10),o=Number.parseInt(n[1],10);return!isNaN(t)&&!isNaN(o)&&t<=r&&r<=o}else return Number.parseInt(e,10)===r}var Nd=D(()=>{"use strict"});var Ld=st(qs=>{"use strict";qs.__esModule=!0;var ww=function(){function r(e){if(!e)throw new TypeError("Invalid argument; `value` has no value.");this.value=r.EMPTY,e&&r.isGuid(e)&&(this.value=e)}return r.isGuid=function(e){var n=e.toString();return e&&(e instanceof r||r.validator.test(n))},r.create=function(){return new r([r.gen(2),r.gen(1),r.gen(1),r.gen(1),r.gen(3)].join("-"))},r.createEmpty=function(){return new r("emptyguid")},r.parse=function(e){return new r(e)},r.raw=function(){return[r.gen(2),r.gen(1),r.gen(1),r.gen(1),r.gen(3)].join("-")},r.gen=function(e){for(var n="",t=0;t<e;t++)n+=((1+Math.random())*65536|0).toString(16).substring(1);return n},r.prototype.equals=function(e){return r.isGuid(e)&&this.value===e.toString()},r.prototype.isEmpty=function(){return this.value===r.EMPTY},r.prototype.toString=function(){return this.value},r.prototype.toJSON=function(){return{value:this.value}},r.validator=new RegExp("^[a-z0-9]{8}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{12}$","i"),r.EMPTY="00000000-0000-0000-0000-000000000000",r}();qs.Guid=ww});function ut(r,e,n){this.low=r|0,this.high=e|0,this.unsigned=!!n}function zt(r){return(r&&r.__isLong__)===!0}function Ud(r){var e=Math.clz32(r&-r);return r?31-e:e}function wn(r,e){var n,t,o;return e?(r>>>=0,(o=0<=r&&r<256)&&(t=Vd[r],t)?t:(n=Xe(r,0,!0),o&&(Vd[r]=n),n)):(r|=0,(o=-128<=r&&r<128)&&(t=Fd[r],t)?t:(n=Xe(r,r<0?-1:0,!1),o&&(Fd[r]=n),n))}function ir(r,e){if(isNaN(r))return e?Hr:pr;if(e){if(r<0)return Hr;if(r>=jd)return Yd}else{if(r<=-Wd)return qt;if(r+1>=Wd)return Kd}return r<0?ir(-r,e).neg():Xe(r%Yn|0,r/Yn|0,e)}function Xe(r,e,n){return new ut(r,e,n)}function Ys(r,e,n){if(r.length===0)throw Error("empty string");if(typeof e=="number"?(n=e,e=!1):e=!!e,r==="NaN"||r==="Infinity"||r==="+Infinity"||r==="-Infinity")return e?Hr:pr;if(n=n||10,n<2||36<n)throw RangeError("radix");var t;if((t=r.indexOf("-"))>0)throw Error("interior hyphen");if(t===0)return Ys(r.substring(1),e,n).neg();for(var o=ir(da(n,8)),i=pr,s=0;s<r.length;s+=8){var a=Math.min(8,r.length-s),u=parseInt(r.substring(s,s+a),n);if(a<8){var l=ir(da(n,a));i=i.mul(l).add(ir(u))}else i=i.mul(o),i=i.add(ir(u))}return i.unsigned=e,i}function mr(r,e){return typeof r=="number"?ir(r,e):typeof r=="string"?Ys(r,e):Xe(r.low,r.high,typeof e=="boolean"?e:r.unsigned)}var or,Fd,Vd,da,Gd,_w,Yn,jd,Wd,Hd,pr,Hr,Kn,qd,Ks,Kd,Yd,qt,J,jr,Xs=D(()=>{or=null;try{or=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch{}ut.prototype.__isLong__;Object.defineProperty(ut.prototype,"__isLong__",{value:!0});ut.isLong=zt;Fd={},Vd={};ut.fromInt=wn;ut.fromNumber=ir;ut.fromBits=Xe;da=Math.pow;ut.fromString=Ys;ut.fromValue=mr;Gd=65536,_w=1<<24,Yn=Gd*Gd,jd=Yn*Yn,Wd=jd/2,Hd=wn(_w),pr=wn(0);ut.ZERO=pr;Hr=wn(0,!0);ut.UZERO=Hr;Kn=wn(1);ut.ONE=Kn;qd=wn(1,!0);ut.UONE=qd;Ks=wn(-1);ut.NEG_ONE=Ks;Kd=Xe(-1,2147483647,!1);ut.MAX_VALUE=Kd;Yd=Xe(-1,-1,!0);ut.MAX_UNSIGNED_VALUE=Yd;qt=Xe(0,-2147483648,!1);ut.MIN_VALUE=qt;J=ut.prototype;J.toInt=function(){return this.unsigned?this.low>>>0:this.low};J.toNumber=function(){return this.unsigned?(this.high>>>0)*Yn+(this.low>>>0):this.high*Yn+(this.low>>>0)};J.toString=function(e){if(e=e||10,e<2||36<e)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative())if(this.eq(qt)){var n=ir(e),t=this.div(n),o=t.mul(n).sub(this);return t.toString(e)+o.toInt().toString(e)}else return"-"+this.neg().toString(e);for(var i=ir(da(e,6),this.unsigned),s=this,a="";;){var u=s.div(i),l=s.sub(u.mul(i)).toInt()>>>0,d=l.toString(e);if(s=u,s.isZero())return d+a;for(;d.length<6;)d="0"+d;a=""+d+a}};J.getHighBits=function(){return this.high};J.getHighBitsUnsigned=function(){return this.high>>>0};J.getLowBits=function(){return this.low};J.getLowBitsUnsigned=function(){return this.low>>>0};J.getNumBitsAbs=function(){if(this.isNegative())return this.eq(qt)?64:this.neg().getNumBitsAbs();for(var e=this.high!=0?this.high:this.low,n=31;n>0&&!(e&1<<n);n--);return this.high!=0?n+33:n+1};J.isZero=function(){return this.high===0&&this.low===0};J.eqz=J.isZero;J.isNegative=function(){return!this.unsigned&&this.high<0};J.isPositive=function(){return this.unsigned||this.high>=0};J.isOdd=function(){return(this.low&1)===1};J.isEven=function(){return(this.low&1)===0};J.equals=function(e){return zt(e)||(e=mr(e)),this.unsigned!==e.unsigned&&this.high>>>31===1&&e.high>>>31===1?!1:this.high===e.high&&this.low===e.low};J.eq=J.equals;J.notEquals=function(e){return!this.eq(e)};J.neq=J.notEquals;J.ne=J.notEquals;J.lessThan=function(e){return this.comp(e)<0};J.lt=J.lessThan;J.lessThanOrEqual=function(e){return this.comp(e)<=0};J.lte=J.lessThanOrEqual;J.le=J.lessThanOrEqual;J.greaterThan=function(e){return this.comp(e)>0};J.gt=J.greaterThan;J.greaterThanOrEqual=function(e){return this.comp(e)>=0};J.gte=J.greaterThanOrEqual;J.ge=J.greaterThanOrEqual;J.compare=function(e){if(zt(e)||(e=mr(e)),this.eq(e))return 0;var n=this.isNegative(),t=e.isNegative();return n&&!t?-1:!n&&t?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1};J.comp=J.compare;J.negate=function(){return!this.unsigned&&this.eq(qt)?qt:this.not().add(Kn)};J.neg=J.negate;J.add=function(e){zt(e)||(e=mr(e));var n=this.high>>>16,t=this.high&65535,o=this.low>>>16,i=this.low&65535,s=e.high>>>16,a=e.high&65535,u=e.low>>>16,l=e.low&65535,d=0,p=0,h=0,y=0;return y+=i+l,h+=y>>>16,y&=65535,h+=o+u,p+=h>>>16,h&=65535,p+=t+a,d+=p>>>16,p&=65535,d+=n+s,d&=65535,Xe(h<<16|y,d<<16|p,this.unsigned)};J.subtract=function(e){return zt(e)||(e=mr(e)),this.add(e.neg())};J.sub=J.subtract;J.multiply=function(e){if(this.isZero())return this;if(zt(e)||(e=mr(e)),or){var n=or.mul(this.low,this.high,e.low,e.high);return Xe(n,or.get_high(),this.unsigned)}if(e.isZero())return this.unsigned?Hr:pr;if(this.eq(qt))return e.isOdd()?qt:pr;if(e.eq(qt))return this.isOdd()?qt:pr;if(this.isNegative())return e.isNegative()?this.neg().mul(e.neg()):this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt(Hd)&&e.lt(Hd))return ir(this.toNumber()*e.toNumber(),this.unsigned);var t=this.high>>>16,o=this.high&65535,i=this.low>>>16,s=this.low&65535,a=e.high>>>16,u=e.high&65535,l=e.low>>>16,d=e.low&65535,p=0,h=0,y=0,b=0;return b+=s*d,y+=b>>>16,b&=65535,y+=i*d,h+=y>>>16,y&=65535,y+=s*l,h+=y>>>16,y&=65535,h+=o*d,p+=h>>>16,h&=65535,h+=i*l,p+=h>>>16,h&=65535,h+=s*u,p+=h>>>16,h&=65535,p+=t*d+o*l+i*u+s*a,p&=65535,Xe(y<<16|b,p<<16|h,this.unsigned)};J.mul=J.multiply;J.divide=function(e){if(zt(e)||(e=mr(e)),e.isZero())throw Error("division by zero");if(or){if(!this.unsigned&&this.high===-2147483648&&e.low===-1&&e.high===-1)return this;var n=(this.unsigned?or.div_u:or.div_s)(this.low,this.high,e.low,e.high);return Xe(n,or.get_high(),this.unsigned)}if(this.isZero())return this.unsigned?Hr:pr;var t,o,i;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return Hr;if(e.gt(this.shru(1)))return qd;i=Hr}else{if(this.eq(qt)){if(e.eq(Kn)||e.eq(Ks))return qt;if(e.eq(qt))return Kn;var s=this.shr(1);return t=s.div(e).shl(1),t.eq(pr)?e.isNegative()?Kn:Ks:(o=this.sub(e.mul(t)),i=t.add(o.div(e)),i)}else if(e.eq(qt))return this.unsigned?Hr:pr;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();i=pr}for(o=this;o.gte(e);){t=Math.max(1,Math.floor(o.toNumber()/e.toNumber()));for(var a=Math.ceil(Math.log(t)/Math.LN2),u=a<=48?1:da(2,a-48),l=ir(t),d=l.mul(e);d.isNegative()||d.gt(o);)t-=u,l=ir(t,this.unsigned),d=l.mul(e);l.isZero()&&(l=Kn),i=i.add(l),o=o.sub(d)}return i};J.div=J.divide;J.modulo=function(e){if(zt(e)||(e=mr(e)),or){var n=(this.unsigned?or.rem_u:or.rem_s)(this.low,this.high,e.low,e.high);return Xe(n,or.get_high(),this.unsigned)}return this.sub(this.div(e).mul(e))};J.mod=J.modulo;J.rem=J.modulo;J.not=function(){return Xe(~this.low,~this.high,this.unsigned)};J.countLeadingZeros=function(){return this.high?Math.clz32(this.high):Math.clz32(this.low)+32};J.clz=J.countLeadingZeros;J.countTrailingZeros=function(){return this.low?Ud(this.low):Ud(this.high)+32};J.ctz=J.countTrailingZeros;J.and=function(e){return zt(e)||(e=mr(e)),Xe(this.low&e.low,this.high&e.high,this.unsigned)};J.or=function(e){return zt(e)||(e=mr(e)),Xe(this.low|e.low,this.high|e.high,this.unsigned)};J.xor=function(e){return zt(e)||(e=mr(e)),Xe(this.low^e.low,this.high^e.high,this.unsigned)};J.shiftLeft=function(e){return zt(e)&&(e=e.toInt()),(e&=63)===0?this:e<32?Xe(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):Xe(0,this.low<<e-32,this.unsigned)};J.shl=J.shiftLeft;J.shiftRight=function(e){return zt(e)&&(e=e.toInt()),(e&=63)===0?this:e<32?Xe(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):Xe(this.high>>e-32,this.high>=0?0:-1,this.unsigned)};J.shr=J.shiftRight;J.shiftRightUnsigned=function(e){return zt(e)&&(e=e.toInt()),(e&=63)===0?this:e<32?Xe(this.low>>>e|this.high<<32-e,this.high>>>e,this.unsigned):e===32?Xe(this.high,0,this.unsigned):Xe(this.high>>>e-32,0,this.unsigned)};J.shru=J.shiftRightUnsigned;J.shr_u=J.shiftRightUnsigned;J.rotateLeft=function(e){var n;return zt(e)&&(e=e.toInt()),(e&=63)===0?this:e===32?Xe(this.high,this.low,this.unsigned):e<32?(n=32-e,Xe(this.low<<e|this.high>>>n,this.high<<e|this.low>>>n,this.unsigned)):(e-=32,n=32-e,Xe(this.high<<e|this.low>>>n,this.low<<e|this.high>>>n,this.unsigned))};J.rotl=J.rotateLeft;J.rotateRight=function(e){var n;return zt(e)&&(e=e.toInt()),(e&=63)===0?this:e===32?Xe(this.high,this.low,this.unsigned):e<32?(n=32-e,Xe(this.high<<n|this.low>>>e,this.low<<n|this.high>>>e,this.unsigned)):(e-=32,n=32-e,Xe(this.low<<n|this.high>>>e,this.high<<n|this.low>>>e,this.unsigned))};J.rotr=J.rotateRight;J.toSigned=function(){return this.unsigned?Xe(this.low,this.high,!1):this};J.toUnsigned=function(){return this.unsigned?this:Xe(this.low,this.high,!0)};J.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()};J.toBytesLE=function(){var e=this.high,n=this.low;return[n&255,n>>>8&255,n>>>16&255,n>>>24,e&255,e>>>8&255,e>>>16&255,e>>>24]};J.toBytesBE=function(){var e=this.high,n=this.low;return[e>>>24,e>>>16&255,e>>>8&255,e&255,n>>>24,n>>>16&255,n>>>8&255,n&255]};ut.fromBytes=function(e,n,t){return t?ut.fromBytesLE(e,n):ut.fromBytesBE(e,n)};ut.fromBytesLE=function(e,n){return new ut(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,n)};ut.fromBytesBE=function(e,n){return new ut(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],n)};jr=ut});var B,ca=D(()=>{B={};B.Offset;B.Table;B.SIZEOF_SHORT=2;B.SIZEOF_INT=4;B.FILE_IDENTIFIER_LENGTH=4;B.SIZE_PREFIX_LENGTH=4;B.Encoding={UTF8_BYTES:1,UTF16_STRING:2};B.int32=new Int32Array(2);B.float32=new Float32Array(B.int32.buffer);B.float64=new Float64Array(B.int32.buffer);B.isLittleEndian=new Uint16Array(new Uint8Array([1,0]).buffer)[0]===1;B.Long=function(r,e){this.low=r|0,this.high=e|0};B.Long.create=function(r,e){return r==0&&e==0?B.Long.ZERO:new B.Long(r,e)};B.Long.prototype.toFloat64=function(){return(this.low>>>0)+this.high*4294967296};B.Long.prototype.equals=function(r){return this.low==r.low&&this.high==r.high};B.Long.ZERO=new B.Long(0,0);B.Builder=function(r){if(r)var e=r;else var e=1024;this.bb=B.ByteBuffer.allocate(e),this.space=e,this.minalign=1,this.vtable=null,this.vtable_in_use=0,this.isNested=!1,this.object_start=0,this.vtables=[],this.vector_num_elems=0,this.force_defaults=!1};B.Builder.prototype.clear=function(){this.bb.clear(),this.space=this.bb.capacity(),this.minalign=1,this.vtable=null,this.vtable_in_use=0,this.isNested=!1,this.object_start=0,this.vtables=[],this.vector_num_elems=0,this.force_defaults=!1};B.Builder.prototype.forceDefaults=function(r){this.force_defaults=r};B.Builder.prototype.dataBuffer=function(){return this.bb};B.Builder.prototype.asUint8Array=function(){return this.bb.bytes().subarray(this.bb.position(),this.bb.position()+this.offset())};B.Builder.prototype.prep=function(r,e){r>this.minalign&&(this.minalign=r);for(var n=~(this.bb.capacity()-this.space+e)+1&r-1;this.space<n+r+e;){var t=this.bb.capacity();this.bb=B.Builder.growByteBuffer(this.bb),this.space+=this.bb.capacity()-t}this.pad(n)};B.Builder.prototype.pad=function(r){for(var e=0;e<r;e++)this.bb.writeInt8(--this.space,0)};B.Builder.prototype.writeInt8=function(r){this.bb.writeInt8(this.space-=1,r)};B.Builder.prototype.writeInt16=function(r){this.bb.writeInt16(this.space-=2,r)};B.Builder.prototype.writeInt32=function(r){this.bb.writeInt32(this.space-=4,r)};B.Builder.prototype.writeInt64=function(r){this.bb.writeInt64(this.space-=8,r)};B.Builder.prototype.writeFloat32=function(r){this.bb.writeFloat32(this.space-=4,r)};B.Builder.prototype.writeFloat64=function(r){this.bb.writeFloat64(this.space-=8,r)};B.Builder.prototype.addInt8=function(r){this.prep(1,0),this.writeInt8(r)};B.Builder.prototype.addInt16=function(r){this.prep(2,0),this.writeInt16(r)};B.Builder.prototype.addInt32=function(r){this.prep(4,0),this.writeInt32(r)};B.Builder.prototype.addInt64=function(r){this.prep(8,0),this.writeInt64(r)};B.Builder.prototype.addFloat32=function(r){this.prep(4,0),this.writeFloat32(r)};B.Builder.prototype.addFloat64=function(r){this.prep(8,0),this.writeFloat64(r)};B.Builder.prototype.addFieldInt8=function(r,e,n){(this.force_defaults||e!=n)&&(this.addInt8(e),this.slot(r))};B.Builder.prototype.addFieldInt16=function(r,e,n){(this.force_defaults||e!=n)&&(this.addInt16(e),this.slot(r))};B.Builder.prototype.addFieldInt32=function(r,e,n){(this.force_defaults||e!=n)&&(this.addInt32(e),this.slot(r))};B.Builder.prototype.addFieldInt64=function(r,e,n){(this.force_defaults||!e.equals(n))&&(this.addInt64(e),this.slot(r))};B.Builder.prototype.addFieldFloat32=function(r,e,n){(this.force_defaults||e!=n)&&(this.addFloat32(e),this.slot(r))};B.Builder.prototype.addFieldFloat64=function(r,e,n){(this.force_defaults||e!=n)&&(this.addFloat64(e),this.slot(r))};B.Builder.prototype.addFieldOffset=function(r,e,n){(this.force_defaults||e!=n)&&(this.addOffset(e),this.slot(r))};B.Builder.prototype.addFieldStruct=function(r,e,n){e!=n&&(this.nested(e),this.slot(r))};B.Builder.prototype.nested=function(r){if(r!=this.offset())throw new Error("FlatBuffers: struct must be serialized inline.")};B.Builder.prototype.notNested=function(){if(this.isNested)throw new Error("FlatBuffers: object serialization must not be nested.")};B.Builder.prototype.slot=function(r){this.vtable[r]=this.offset()};B.Builder.prototype.offset=function(){return this.bb.capacity()-this.space};B.Builder.growByteBuffer=function(r){var e=r.capacity();if(e&3221225472)throw new Error("FlatBuffers: cannot grow buffer beyond 2 gigabytes.");var n=e<<1,t=B.ByteBuffer.allocate(n);return t.setPosition(n-e),t.bytes().set(r.bytes(),n-e),t};B.Builder.prototype.addOffset=function(r){this.prep(B.SIZEOF_INT,0),this.writeInt32(this.offset()-r+B.SIZEOF_INT)};B.Builder.prototype.startObject=function(r){this.notNested(),this.vtable==null&&(this.vtable=[]),this.vtable_in_use=r;for(var e=0;e<r;e++)this.vtable[e]=0;this.isNested=!0,this.object_start=this.offset()};B.Builder.prototype.endObject=function(){if(this.vtable==null||!this.isNested)throw new Error("FlatBuffers: endObject called without startObject");this.addInt32(0);for(var r=this.offset(),e=this.vtable_in_use-1;e>=0&&this.vtable[e]==0;e--);for(var n=e+1;e>=0;e--)this.addInt16(this.vtable[e]!=0?r-this.vtable[e]:0);var t=2;this.addInt16(r-this.object_start);var o=(n+t)*B.SIZEOF_SHORT;this.addInt16(o);var i=0,s=this.space;e:for(e=0;e<this.vtables.length;e++){var a=this.bb.capacity()-this.vtables[e];if(o==this.bb.readInt16(a)){for(var u=B.SIZEOF_SHORT;u<o;u+=B.SIZEOF_SHORT)if(this.bb.readInt16(s+u)!=this.bb.readInt16(a+u))continue e;i=this.vtables[e];break}}return i?(this.space=this.bb.capacity()-r,this.bb.writeInt32(this.space,i-r)):(this.vtables.push(this.offset()),this.bb.writeInt32(this.bb.capacity()-r,this.offset()-r)),this.isNested=!1,r};B.Builder.prototype.finish=function(r,e,n){var t=n?B.SIZE_PREFIX_LENGTH:0;if(e){var o=e;if(this.prep(this.minalign,B.SIZEOF_INT+B.FILE_IDENTIFIER_LENGTH+t),o.length!=B.FILE_IDENTIFIER_LENGTH)throw new Error("FlatBuffers: file identifier must be length "+B.FILE_IDENTIFIER_LENGTH);for(var i=B.FILE_IDENTIFIER_LENGTH-1;i>=0;i--)this.writeInt8(o.charCodeAt(i))}this.prep(this.minalign,B.SIZEOF_INT+t),this.addOffset(r),t&&this.addInt32(this.bb.capacity()-this.space),this.bb.setPosition(this.space)};B.Builder.prototype.finishSizePrefixed=function(r,e){this.finish(r,e,!0)};B.Builder.prototype.requiredField=function(r,e){var n=this.bb.capacity()-r,t=n-this.bb.readInt32(n),o=this.bb.readInt16(t+e)!=0;if(!o)throw new Error("FlatBuffers: field "+e+" must be set")};B.Builder.prototype.startVector=function(r,e,n){this.notNested(),this.vector_num_elems=e,this.prep(B.SIZEOF_INT,r*e),this.prep(n,r*e)};B.Builder.prototype.endVector=function(){return this.writeInt32(this.vector_num_elems),this.offset()};B.Builder.prototype.createString=function(r){if(r instanceof Uint8Array)var e=r;else for(var e=[],n=0;n<r.length;){var t,o=r.charCodeAt(n++);if(o<55296||o>=56320)t=o;else{var i=r.charCodeAt(n++);t=(o<<10)+i+(65536-56623104-56320)}t<128?e.push(t):(t<2048?e.push(t>>6&31|192):(t<65536?e.push(t>>12&15|224):e.push(t>>18&7|240,t>>12&63|128),e.push(t>>6&63|128)),e.push(t&63|128))}this.addInt8(0),this.startVector(1,e.length,1),this.bb.setPosition(this.space-=e.length);for(var n=0,s=this.space,a=this.bb.bytes();n<e.length;n++)a[s++]=e[n];return this.endVector()};B.Builder.prototype.createLong=function(r,e){return B.Long.create(r,e)};B.ByteBuffer=function(r){this.bytes_=r,this.position_=0};B.ByteBuffer.allocate=function(r){return new B.ByteBuffer(new Uint8Array(r))};B.ByteBuffer.prototype.clear=function(){this.position_=0};B.ByteBuffer.prototype.bytes=function(){return this.bytes_};B.ByteBuffer.prototype.position=function(){return this.position_};B.ByteBuffer.prototype.setPosition=function(r){this.position_=r};B.ByteBuffer.prototype.capacity=function(){return this.bytes_.length};B.ByteBuffer.prototype.readInt8=function(r){return this.readUint8(r)<<24>>24};B.ByteBuffer.prototype.readUint8=function(r){return this.bytes_[r]};B.ByteBuffer.prototype.readInt16=function(r){return this.readUint16(r)<<16>>16};B.ByteBuffer.prototype.readUint16=function(r){return this.bytes_[r]|this.bytes_[r+1]<<8};B.ByteBuffer.prototype.readInt32=function(r){return this.bytes_[r]|this.bytes_[r+1]<<8|this.bytes_[r+2]<<16|this.bytes_[r+3]<<24};B.ByteBuffer.prototype.readUint32=function(r){return this.readInt32(r)>>>0};B.ByteBuffer.prototype.readInt64=function(r){return new B.Long(this.readInt32(r),this.readInt32(r+4))};B.ByteBuffer.prototype.readUint64=function(r){return new B.Long(this.readUint32(r),this.readUint32(r+4))};B.ByteBuffer.prototype.readFloat32=function(r){return B.int32[0]=this.readInt32(r),B.float32[0]};B.ByteBuffer.prototype.readFloat64=function(r){return B.int32[B.isLittleEndian?0:1]=this.readInt32(r),B.int32[B.isLittleEndian?1:0]=this.readInt32(r+4),B.float64[0]};B.ByteBuffer.prototype.writeInt8=function(r,e){this.bytes_[r]=e};B.ByteBuffer.prototype.writeUint8=function(r,e){this.bytes_[r]=e};B.ByteBuffer.prototype.writeInt16=function(r,e){this.bytes_[r]=e,this.bytes_[r+1]=e>>8};B.ByteBuffer.prototype.writeUint16=function(r,e){this.bytes_[r]=e,this.bytes_[r+1]=e>>8};B.ByteBuffer.prototype.writeInt32=function(r,e){this.bytes_[r]=e,this.bytes_[r+1]=e>>8,this.bytes_[r+2]=e>>16,this.bytes_[r+3]=e>>24};B.ByteBuffer.prototype.writeUint32=function(r,e){this.bytes_[r]=e,this.bytes_[r+1]=e>>8,this.bytes_[r+2]=e>>16,this.bytes_[r+3]=e>>24};B.ByteBuffer.prototype.writeInt64=function(r,e){this.writeInt32(r,e.low),this.writeInt32(r+4,e.high)};B.ByteBuffer.prototype.writeUint64=function(r,e){this.writeUint32(r,e.low),this.writeUint32(r+4,e.high)};B.ByteBuffer.prototype.writeFloat32=function(r,e){B.float32[0]=e,this.writeInt32(r,B.int32[0])};B.ByteBuffer.prototype.writeFloat64=function(r,e){B.float64[0]=e,this.writeInt32(r,B.int32[B.isLittleEndian?0:1]),this.writeInt32(r+4,B.int32[B.isLittleEndian?1:0])};B.ByteBuffer.prototype.getBufferIdentifier=function(){if(this.bytes_.length<this.position_+B.SIZEOF_INT+B.FILE_IDENTIFIER_LENGTH)throw new Error("FlatBuffers: ByteBuffer is too short to contain an identifier.");for(var r="",e=0;e<B.FILE_IDENTIFIER_LENGTH;e++)r+=String.fromCharCode(this.readInt8(this.position_+B.SIZEOF_INT+e));return r};B.ByteBuffer.prototype.__offset=function(r,e){var n=r-this.readInt32(r);return e<this.readInt16(n)?this.readInt16(n+e):0};B.ByteBuffer.prototype.__union=function(r,e){return r.bb_pos=e+this.readInt32(e),r.bb=this,r};B.ByteBuffer.prototype.__string=function(r,e){r+=this.readInt32(r);var n=this.readInt32(r),t="",o=0;if(r+=B.SIZEOF_INT,e===B.Encoding.UTF8_BYTES)return this.bytes_.subarray(r,r+n);for(;o<n;){var i,s=this.readUint8(r+o++);if(s<192)i=s;else{var a=this.readUint8(r+o++);if(s<224)i=(s&31)<<6|a&63;else{var u=this.readUint8(r+o++);if(s<240)i=(s&15)<<12|(a&63)<<6|u&63;else{var l=this.readUint8(r+o++);i=(s&7)<<18|(a&63)<<12|(u&63)<<6|l&63}}}i<65536?t+=String.fromCharCode(i):(i-=65536,t+=String.fromCharCode((i>>10)+55296,(i&1024-1)+56320))}return t};B.ByteBuffer.prototype.__indirect=function(r){return r+this.readInt32(r)};B.ByteBuffer.prototype.__vector=function(r){return r+this.readInt32(r)+B.SIZEOF_INT};B.ByteBuffer.prototype.__vector_len=function(r){return this.readInt32(r+this.readInt32(r))};B.ByteBuffer.prototype.__has_identifier=function(r){if(r.length!=B.FILE_IDENTIFIER_LENGTH)throw new Error("FlatBuffers: file identifier must be length "+B.FILE_IDENTIFIER_LENGTH);for(var e=0;e<B.FILE_IDENTIFIER_LENGTH;e++)if(r.charCodeAt(e)!=this.readInt8(this.position_+B.SIZEOF_INT+e))return!1;return!0};B.ByteBuffer.prototype.createLong=function(r,e){return B.Long.create(r,e)}});var ce,zo=D(()=>{"use strict";ca();(e=>{let r;(t=>{let n;(i=>{let o;(A=>(A[A.UNDEFINED=0]="UNDEFINED",A[A.FLOAT=1]="FLOAT",A[A.INT=2]="INT",A[A.STRING=3]="STRING",A[A.TENSOR=4]="TENSOR",A[A.GRAPH=5]="GRAPH",A[A.FLOATS=6]="FLOATS",A[A.INTS=7]="INTS",A[A.STRINGS=8]="STRINGS",A[A.TENSORS=9]="TENSORS",A[A.GRAPHS=10]="GRAPHS",A[A.SPARSE_TENSOR=11]="SPARSE_TENSOR",A[A.SPARSE_TENSORS=12]="SPARSE_TENSORS"))(o=i.AttributeType||={})})(n=t.fbs||={})})(r=e.experimental||={})})(ce||={});(e=>{let r;(t=>{let n;(i=>{let o;(l=>(l[l.UNKNOWN=0]="UNKNOWN",l[l.VALUE=1]="VALUE",l[l.PARAM=2]="PARAM"))(o=i.DimensionValueType||={})})(n=t.fbs||={})})(r=e.experimental||={})})(ce||={});(e=>{let r;(t=>{let n;(i=>{let o;(X=>(X[X.UNDEFINED=0]="UNDEFINED",X[X.FLOAT=1]="FLOAT",X[X.UINT8=2]="UINT8",X[X.INT8=3]="INT8",X[X.UINT16=4]="UINT16",X[X.INT16=5]="INT16",X[X.INT32=6]="INT32",X[X.INT64=7]="INT64",X[X.STRING=8]="STRING",X[X.BOOL=9]="BOOL",X[X.FLOAT16=10]="FLOAT16",X[X.DOUBLE=11]="DOUBLE",X[X.UINT32=12]="UINT32",X[X.UINT64=13]="UINT64",X[X.COMPLEX64=14]="COMPLEX64",X[X.COMPLEX128=15]="COMPLEX128",X[X.BFLOAT16=16]="BFLOAT16",X[X.FLOAT8E4M3FN=17]="FLOAT8E4M3FN",X[X.FLOAT8E4M3FNUZ=18]="FLOAT8E4M3FNUZ",X[X.FLOAT8E5M2=19]="FLOAT8E5M2",X[X.FLOAT8E5M2FNUZ=20]="FLOAT8E5M2FNUZ"))(o=i.TensorDataType||={})})(n=t.fbs||={})})(r=e.experimental||={})})(ce||={});(e=>{let r;(t=>{let n;(i=>{let o;(u=>(u[u.Primitive=0]="Primitive",u[u.Fused=1]="Fused"))(o=i.NodeType||={})})(n=t.fbs||={})})(r=e.experimental||={})})(ce||={});(e=>{let r;(t=>{let n;(i=>{let o;(d=>(d[d.NONE=0]="NONE",d[d.tensor_type=1]="tensor_type",d[d.sequence_type=2]="sequence_type",d[d.map_type=3]="map_type"))(o=i.TypeInfoValue||={})})(n=t.fbs||={})})(r=e.experimental||={})})(ce||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,u){return this.bb_pos=a,this.bb=u,this}static getRootAsShape(a,u){return(u||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsShape(a,u){return a.setPosition(a.position()+B.SIZE_PREFIX_LENGTH),(u||new o).__init(a.readInt32(a.position())+a.position(),a)}dim(a,u){let l=this.bb.__offset(this.bb_pos,4);return l?(u||new e.experimental.fbs.Dimension).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+l)+a*4),this.bb):null}dimLength(){let a=this.bb.__offset(this.bb_pos,4);return a?this.bb.__vector_len(this.bb_pos+a):0}static startShape(a){a.startObject(1)}static addDim(a,u){a.addFieldOffset(0,u,0)}static createDimVector(a,u){a.startVector(4,u.length,4);for(let l=u.length-1;l>=0;l--)a.addOffset(u[l]);return a.endVector()}static startDimVector(a,u){a.startVector(4,u,4)}static endShape(a){return a.endObject()}static createShape(a,u){return o.startShape(a),o.addDim(a,u),o.endShape(a)}}i.Shape=o})(n=t.fbs||={})})(r=e.experimental||={})})(ce||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,u){return this.bb_pos=a,this.bb=u,this}static getRootAsDimension(a,u){return(u||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsDimension(a,u){return a.setPosition(a.position()+B.SIZE_PREFIX_LENGTH),(u||new o).__init(a.readInt32(a.position())+a.position(),a)}value(a){let u=this.bb.__offset(this.bb_pos,4);return u?(a||new e.experimental.fbs.DimensionValue).__init(this.bb.__indirect(this.bb_pos+u),this.bb):null}denotation(a){let u=this.bb.__offset(this.bb_pos,6);return u?this.bb.__string(this.bb_pos+u,a):null}static startDimension(a){a.startObject(2)}static addValue(a,u){a.addFieldOffset(0,u,0)}static addDenotation(a,u){a.addFieldOffset(1,u,0)}static endDimension(a){return a.endObject()}static createDimension(a,u,l){return o.startDimension(a),o.addValue(a,u),o.addDenotation(a,l),o.endDimension(a)}}i.Dimension=o})(n=t.fbs||={})})(r=e.experimental||={})})(ce||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,u){return this.bb_pos=a,this.bb=u,this}static getRootAsDimensionValue(a,u){return(u||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsDimensionValue(a,u){return a.setPosition(a.position()+B.SIZE_PREFIX_LENGTH),(u||new o).__init(a.readInt32(a.position())+a.position(),a)}dimType(){let a=this.bb.__offset(this.bb_pos,4);return a?this.bb.readInt8(this.bb_pos+a):0}dimValue(){let a=this.bb.__offset(this.bb_pos,6);return a?this.bb.readInt64(this.bb_pos+a):this.bb.createLong(0,0)}dimParam(a){let u=this.bb.__offset(this.bb_pos,8);return u?this.bb.__string(this.bb_pos+u,a):null}static startDimensionValue(a){a.startObject(3)}static addDimType(a,u){a.addFieldInt8(0,u,0)}static addDimValue(a,u){a.addFieldInt64(1,u,a.createLong(0,0))}static addDimParam(a,u){a.addFieldOffset(2,u,0)}static endDimensionValue(a){return a.endObject()}static createDimensionValue(a,u,l,d){return o.startDimensionValue(a),o.addDimType(a,u),o.addDimValue(a,l),o.addDimParam(a,d),o.endDimensionValue(a)}}i.DimensionValue=o})(n=t.fbs||={})})(r=e.experimental||={})})(ce||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,u){return this.bb_pos=a,this.bb=u,this}static getRootAsTensorTypeAndShape(a,u){return(u||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsTensorTypeAndShape(a,u){return a.setPosition(a.position()+B.SIZE_PREFIX_LENGTH),(u||new o).__init(a.readInt32(a.position())+a.position(),a)}elemType(){let a=this.bb.__offset(this.bb_pos,4);return a?this.bb.readInt32(this.bb_pos+a):0}shape(a){let u=this.bb.__offset(this.bb_pos,6);return u?(a||new e.experimental.fbs.Shape).__init(this.bb.__indirect(this.bb_pos+u),this.bb):null}static startTensorTypeAndShape(a){a.startObject(2)}static addElemType(a,u){a.addFieldInt32(0,u,0)}static addShape(a,u){a.addFieldOffset(1,u,0)}static endTensorTypeAndShape(a){return a.endObject()}static createTensorTypeAndShape(a,u,l){return o.startTensorTypeAndShape(a),o.addElemType(a,u),o.addShape(a,l),o.endTensorTypeAndShape(a)}}i.TensorTypeAndShape=o})(n=t.fbs||={})})(r=e.experimental||={})})(ce||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,u){return this.bb_pos=a,this.bb=u,this}static getRootAsMapType(a,u){return(u||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsMapType(a,u){return a.setPosition(a.position()+B.SIZE_PREFIX_LENGTH),(u||new o).__init(a.readInt32(a.position())+a.position(),a)}keyType(){let a=this.bb.__offset(this.bb_pos,4);return a?this.bb.readInt32(this.bb_pos+a):0}valueType(a){let u=this.bb.__offset(this.bb_pos,6);return u?(a||new e.experimental.fbs.TypeInfo).__init(this.bb.__indirect(this.bb_pos+u),this.bb):null}static startMapType(a){a.startObject(2)}static addKeyType(a,u){a.addFieldInt32(0,u,0)}static addValueType(a,u){a.addFieldOffset(1,u,0)}static endMapType(a){return a.endObject()}static createMapType(a,u,l){return o.startMapType(a),o.addKeyType(a,u),o.addValueType(a,l),o.endMapType(a)}}i.MapType=o})(n=t.fbs||={})})(r=e.experimental||={})})(ce||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,u){return this.bb_pos=a,this.bb=u,this}static getRootAsSequenceType(a,u){return(u||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsSequenceType(a,u){return a.setPosition(a.position()+B.SIZE_PREFIX_LENGTH),(u||new o).__init(a.readInt32(a.position())+a.position(),a)}elemType(a){let u=this.bb.__offset(this.bb_pos,4);return u?(a||new e.experimental.fbs.TypeInfo).__init(this.bb.__indirect(this.bb_pos+u),this.bb):null}static startSequenceType(a){a.startObject(1)}static addElemType(a,u){a.addFieldOffset(0,u,0)}static endSequenceType(a){return a.endObject()}static createSequenceType(a,u){return o.startSequenceType(a),o.addElemType(a,u),o.endSequenceType(a)}}i.SequenceType=o})(n=t.fbs||={})})(r=e.experimental||={})})(ce||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,u){return this.bb_pos=a,this.bb=u,this}nodeIndex(){return this.bb.readUint32(this.bb_pos)}srcArgIndex(){return this.bb.readInt32(this.bb_pos+4)}dstArgIndex(){return this.bb.readInt32(this.bb_pos+8)}static createEdgeEnd(a,u,l,d){return a.prep(4,12),a.writeInt32(d),a.writeInt32(l),a.writeInt32(u),a.offset()}}i.EdgeEnd=o})(n=t.fbs||={})})(r=e.experimental||={})})(ce||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,u){return this.bb_pos=a,this.bb=u,this}static getRootAsNodeEdge(a,u){return(u||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsNodeEdge(a,u){return a.setPosition(a.position()+B.SIZE_PREFIX_LENGTH),(u||new o).__init(a.readInt32(a.position())+a.position(),a)}nodeIndex(){let a=this.bb.__offset(this.bb_pos,4);return a?this.bb.readUint32(this.bb_pos+a):0}inputEdges(a,u){let l=this.bb.__offset(this.bb_pos,6);return l?(u||new e.experimental.fbs.EdgeEnd).__init(this.bb.__vector(this.bb_pos+l)+a*12,this.bb):null}inputEdgesLength(){let a=this.bb.__offset(this.bb_pos,6);return a?this.bb.__vector_len(this.bb_pos+a):0}outputEdges(a,u){let l=this.bb.__offset(this.bb_pos,8);return l?(u||new e.experimental.fbs.EdgeEnd).__init(this.bb.__vector(this.bb_pos+l)+a*12,this.bb):null}outputEdgesLength(){let a=this.bb.__offset(this.bb_pos,8);return a?this.bb.__vector_len(this.bb_pos+a):0}static startNodeEdge(a){a.startObject(3)}static addNodeIndex(a,u){a.addFieldInt32(0,u,0)}static addInputEdges(a,u){a.addFieldOffset(1,u,0)}static startInputEdgesVector(a,u){a.startVector(12,u,4)}static addOutputEdges(a,u){a.addFieldOffset(2,u,0)}static startOutputEdgesVector(a,u){a.startVector(12,u,4)}static endNodeEdge(a){return a.endObject()}static createNodeEdge(a,u,l,d){return o.startNodeEdge(a),o.addNodeIndex(a,u),o.addInputEdges(a,l),o.addOutputEdges(a,d),o.endNodeEdge(a)}}i.NodeEdge=o})(n=t.fbs||={})})(r=e.experimental||={})})(ce||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,u){return this.bb_pos=a,this.bb=u,this}static getRootAsNode(a,u){return(u||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsNode(a,u){return a.setPosition(a.position()+B.SIZE_PREFIX_LENGTH),(u||new o).__init(a.readInt32(a.position())+a.position(),a)}name(a){let u=this.bb.__offset(this.bb_pos,4);return u?this.bb.__string(this.bb_pos+u,a):null}docString(a){let u=this.bb.__offset(this.bb_pos,6);return u?this.bb.__string(this.bb_pos+u,a):null}domain(a){let u=this.bb.__offset(this.bb_pos,8);return u?this.bb.__string(this.bb_pos+u,a):null}sinceVersion(){let a=this.bb.__offset(this.bb_pos,10);return a?this.bb.readInt32(this.bb_pos+a):0}index(){let a=this.bb.__offset(this.bb_pos,12);return a?this.bb.readUint32(this.bb_pos+a):0}opType(a){let u=this.bb.__offset(this.bb_pos,14);return u?this.bb.__string(this.bb_pos+u,a):null}type(){let a=this.bb.__offset(this.bb_pos,16);return a?this.bb.readInt32(this.bb_pos+a):0}executionProviderType(a){let u=this.bb.__offset(this.bb_pos,18);return u?this.bb.__string(this.bb_pos+u,a):null}inputs(a,u){let l=this.bb.__offset(this.bb_pos,20);return l?this.bb.__string(this.bb.__vector(this.bb_pos+l)+a*4,u):null}inputsLength(){let a=this.bb.__offset(this.bb_pos,20);return a?this.bb.__vector_len(this.bb_pos+a):0}outputs(a,u){let l=this.bb.__offset(this.bb_pos,22);return l?this.bb.__string(this.bb.__vector(this.bb_pos+l)+a*4,u):null}outputsLength(){let a=this.bb.__offset(this.bb_pos,22);return a?this.bb.__vector_len(this.bb_pos+a):0}attributes(a,u){let l=this.bb.__offset(this.bb_pos,24);return l?(u||new e.experimental.fbs.Attribute).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+l)+a*4),this.bb):null}attributesLength(){let a=this.bb.__offset(this.bb_pos,24);return a?this.bb.__vector_len(this.bb_pos+a):0}inputArgCounts(a){let u=this.bb.__offset(this.bb_pos,26);return u?this.bb.readInt32(this.bb.__vector(this.bb_pos+u)+a*4):0}inputArgCountsLength(){let a=this.bb.__offset(this.bb_pos,26);return a?this.bb.__vector_len(this.bb_pos+a):0}inputArgCountsArray(){let a=this.bb.__offset(this.bb_pos,26);return a?new Int32Array(this.bb.bytes().buffer,this.bb.bytes().byteOffset+this.bb.__vector(this.bb_pos+a),this.bb.__vector_len(this.bb_pos+a)):null}implicitInputs(a,u){let l=this.bb.__offset(this.bb_pos,28);return l?this.bb.__string(this.bb.__vector(this.bb_pos+l)+a*4,u):null}implicitInputsLength(){let a=this.bb.__offset(this.bb_pos,28);return a?this.bb.__vector_len(this.bb_pos+a):0}static startNode(a){a.startObject(13)}static addName(a,u){a.addFieldOffset(0,u,0)}static addDocString(a,u){a.addFieldOffset(1,u,0)}static addDomain(a,u){a.addFieldOffset(2,u,0)}static addSinceVersion(a,u){a.addFieldInt32(3,u,0)}static addIndex(a,u){a.addFieldInt32(4,u,0)}static addOpType(a,u){a.addFieldOffset(5,u,0)}static addType(a,u){a.addFieldInt32(6,u,0)}static addExecutionProviderType(a,u){a.addFieldOffset(7,u,0)}static addInputs(a,u){a.addFieldOffset(8,u,0)}static createInputsVector(a,u){a.startVector(4,u.length,4);for(let l=u.length-1;l>=0;l--)a.addOffset(u[l]);return a.endVector()}static startInputsVector(a,u){a.startVector(4,u,4)}static addOutputs(a,u){a.addFieldOffset(9,u,0)}static createOutputsVector(a,u){a.startVector(4,u.length,4);for(let l=u.length-1;l>=0;l--)a.addOffset(u[l]);return a.endVector()}static startOutputsVector(a,u){a.startVector(4,u,4)}static addAttributes(a,u){a.addFieldOffset(10,u,0)}static createAttributesVector(a,u){a.startVector(4,u.length,4);for(let l=u.length-1;l>=0;l--)a.addOffset(u[l]);return a.endVector()}static startAttributesVector(a,u){a.startVector(4,u,4)}static addInputArgCounts(a,u){a.addFieldOffset(11,u,0)}static createInputArgCountsVector(a,u){a.startVector(4,u.length,4);for(let l=u.length-1;l>=0;l--)a.addInt32(u[l]);return a.endVector()}static startInputArgCountsVector(a,u){a.startVector(4,u,4)}static addImplicitInputs(a,u){a.addFieldOffset(12,u,0)}static createImplicitInputsVector(a,u){a.startVector(4,u.length,4);for(let l=u.length-1;l>=0;l--)a.addOffset(u[l]);return a.endVector()}static startImplicitInputsVector(a,u){a.startVector(4,u,4)}static endNode(a){return a.endObject()}static createNode(a,u,l,d,p,h,y,b,w,T,x,_,A,P){return o.startNode(a),o.addName(a,u),o.addDocString(a,l),o.addDomain(a,d),o.addSinceVersion(a,p),o.addIndex(a,h),o.addOpType(a,y),o.addType(a,b),o.addExecutionProviderType(a,w),o.addInputs(a,T),o.addOutputs(a,x),o.addAttributes(a,_),o.addInputArgCounts(a,A),o.addImplicitInputs(a,P),o.endNode(a)}}i.Node=o})(n=t.fbs||={})})(r=e.experimental||={})})(ce||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,u){return this.bb_pos=a,this.bb=u,this}static getRootAsValueInfo(a,u){return(u||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsValueInfo(a,u){return a.setPosition(a.position()+B.SIZE_PREFIX_LENGTH),(u||new o).__init(a.readInt32(a.position())+a.position(),a)}name(a){let u=this.bb.__offset(this.bb_pos,4);return u?this.bb.__string(this.bb_pos+u,a):null}docString(a){let u=this.bb.__offset(this.bb_pos,6);return u?this.bb.__string(this.bb_pos+u,a):null}type(a){let u=this.bb.__offset(this.bb_pos,8);return u?(a||new e.experimental.fbs.TypeInfo).__init(this.bb.__indirect(this.bb_pos+u),this.bb):null}static startValueInfo(a){a.startObject(3)}static addName(a,u){a.addFieldOffset(0,u,0)}static addDocString(a,u){a.addFieldOffset(1,u,0)}static addType(a,u){a.addFieldOffset(2,u,0)}static endValueInfo(a){return a.endObject()}static createValueInfo(a,u,l,d){return o.startValueInfo(a),o.addName(a,u),o.addDocString(a,l),o.addType(a,d),o.endValueInfo(a)}}i.ValueInfo=o})(n=t.fbs||={})})(r=e.experimental||={})})(ce||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,u){return this.bb_pos=a,this.bb=u,this}static getRootAsTypeInfo(a,u){return(u||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsTypeInfo(a,u){return a.setPosition(a.position()+B.SIZE_PREFIX_LENGTH),(u||new o).__init(a.readInt32(a.position())+a.position(),a)}denotation(a){let u=this.bb.__offset(this.bb_pos,4);return u?this.bb.__string(this.bb_pos+u,a):null}valueType(){let a=this.bb.__offset(this.bb_pos,6);return a?this.bb.readUint8(this.bb_pos+a):0}value(a){let u=this.bb.__offset(this.bb_pos,8);return u?this.bb.__union(a,this.bb_pos+u):null}static startTypeInfo(a){a.startObject(3)}static addDenotation(a,u){a.addFieldOffset(0,u,0)}static addValueType(a,u){a.addFieldInt8(1,u,0)}static addValue(a,u){a.addFieldOffset(2,u,0)}static endTypeInfo(a){return a.endObject()}static createTypeInfo(a,u,l,d){return o.startTypeInfo(a),o.addDenotation(a,u),o.addValueType(a,l),o.addValue(a,d),o.endTypeInfo(a)}}i.TypeInfo=o})(n=t.fbs||={})})(r=e.experimental||={})})(ce||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,u){return this.bb_pos=a,this.bb=u,this}static getRootAsOperatorSetId(a,u){return(u||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsOperatorSetId(a,u){return a.setPosition(a.position()+B.SIZE_PREFIX_LENGTH),(u||new o).__init(a.readInt32(a.position())+a.position(),a)}domain(a){let u=this.bb.__offset(this.bb_pos,4);return u?this.bb.__string(this.bb_pos+u,a):null}version(){let a=this.bb.__offset(this.bb_pos,6);return a?this.bb.readInt64(this.bb_pos+a):this.bb.createLong(0,0)}static startOperatorSetId(a){a.startObject(2)}static addDomain(a,u){a.addFieldOffset(0,u,0)}static addVersion(a,u){a.addFieldInt64(1,u,a.createLong(0,0))}static endOperatorSetId(a){return a.endObject()}static createOperatorSetId(a,u,l){return o.startOperatorSetId(a),o.addDomain(a,u),o.addVersion(a,l),o.endOperatorSetId(a)}}i.OperatorSetId=o})(n=t.fbs||={})})(r=e.experimental||={})})(ce||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,u){return this.bb_pos=a,this.bb=u,this}static getRootAsTensor(a,u){return(u||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsTensor(a,u){return a.setPosition(a.position()+B.SIZE_PREFIX_LENGTH),(u||new o).__init(a.readInt32(a.position())+a.position(),a)}name(a){let u=this.bb.__offset(this.bb_pos,4);return u?this.bb.__string(this.bb_pos+u,a):null}docString(a){let u=this.bb.__offset(this.bb_pos,6);return u?this.bb.__string(this.bb_pos+u,a):null}dims(a){let u=this.bb.__offset(this.bb_pos,8);return u?this.bb.readInt64(this.bb.__vector(this.bb_pos+u)+a*8):this.bb.createLong(0,0)}dimsLength(){let a=this.bb.__offset(this.bb_pos,8);return a?this.bb.__vector_len(this.bb_pos+a):0}dataType(){let a=this.bb.__offset(this.bb_pos,10);return a?this.bb.readInt32(this.bb_pos+a):0}rawData(a){let u=this.bb.__offset(this.bb_pos,12);return u?this.bb.readUint8(this.bb.__vector(this.bb_pos+u)+a):0}rawDataLength(){let a=this.bb.__offset(this.bb_pos,12);return a?this.bb.__vector_len(this.bb_pos+a):0}rawDataArray(){let a=this.bb.__offset(this.bb_pos,12);return a?new Uint8Array(this.bb.bytes().buffer,this.bb.bytes().byteOffset+this.bb.__vector(this.bb_pos+a),this.bb.__vector_len(this.bb_pos+a)):null}stringData(a,u){let l=this.bb.__offset(this.bb_pos,14);return l?this.bb.__string(this.bb.__vector(this.bb_pos+l)+a*4,u):null}stringDataLength(){let a=this.bb.__offset(this.bb_pos,14);return a?this.bb.__vector_len(this.bb_pos+a):0}static startTensor(a){a.startObject(6)}static addName(a,u){a.addFieldOffset(0,u,0)}static addDocString(a,u){a.addFieldOffset(1,u,0)}static addDims(a,u){a.addFieldOffset(2,u,0)}static createDimsVector(a,u){a.startVector(8,u.length,8);for(let l=u.length-1;l>=0;l--)a.addInt64(u[l]);return a.endVector()}static startDimsVector(a,u){a.startVector(8,u,8)}static addDataType(a,u){a.addFieldInt32(3,u,0)}static addRawData(a,u){a.addFieldOffset(4,u,0)}static createRawDataVector(a,u){a.startVector(1,u.length,1);for(let l=u.length-1;l>=0;l--)a.addInt8(u[l]);return a.endVector()}static startRawDataVector(a,u){a.startVector(1,u,1)}static addStringData(a,u){a.addFieldOffset(5,u,0)}static createStringDataVector(a,u){a.startVector(4,u.length,4);for(let l=u.length-1;l>=0;l--)a.addOffset(u[l]);return a.endVector()}static startStringDataVector(a,u){a.startVector(4,u,4)}static endTensor(a){return a.endObject()}static createTensor(a,u,l,d,p,h,y){return o.startTensor(a),o.addName(a,u),o.addDocString(a,l),o.addDims(a,d),o.addDataType(a,p),o.addRawData(a,h),o.addStringData(a,y),o.endTensor(a)}}i.Tensor=o})(n=t.fbs||={})})(r=e.experimental||={})})(ce||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,u){return this.bb_pos=a,this.bb=u,this}static getRootAsSparseTensor(a,u){return(u||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsSparseTensor(a,u){return a.setPosition(a.position()+B.SIZE_PREFIX_LENGTH),(u||new o).__init(a.readInt32(a.position())+a.position(),a)}values(a){let u=this.bb.__offset(this.bb_pos,4);return u?(a||new e.experimental.fbs.Tensor).__init(this.bb.__indirect(this.bb_pos+u),this.bb):null}indices(a){let u=this.bb.__offset(this.bb_pos,6);return u?(a||new e.experimental.fbs.Tensor).__init(this.bb.__indirect(this.bb_pos+u),this.bb):null}dims(a){let u=this.bb.__offset(this.bb_pos,8);return u?this.bb.readInt64(this.bb.__vector(this.bb_pos+u)+a*8):this.bb.createLong(0,0)}dimsLength(){let a=this.bb.__offset(this.bb_pos,8);return a?this.bb.__vector_len(this.bb_pos+a):0}static startSparseTensor(a){a.startObject(3)}static addValues(a,u){a.addFieldOffset(0,u,0)}static addIndices(a,u){a.addFieldOffset(1,u,0)}static addDims(a,u){a.addFieldOffset(2,u,0)}static createDimsVector(a,u){a.startVector(8,u.length,8);for(let l=u.length-1;l>=0;l--)a.addInt64(u[l]);return a.endVector()}static startDimsVector(a,u){a.startVector(8,u,8)}static endSparseTensor(a){return a.endObject()}static createSparseTensor(a,u,l,d){return o.startSparseTensor(a),o.addValues(a,u),o.addIndices(a,l),o.addDims(a,d),o.endSparseTensor(a)}}i.SparseTensor=o})(n=t.fbs||={})})(r=e.experimental||={})})(ce||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,u){return this.bb_pos=a,this.bb=u,this}static getRootAsAttribute(a,u){return(u||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsAttribute(a,u){return a.setPosition(a.position()+B.SIZE_PREFIX_LENGTH),(u||new o).__init(a.readInt32(a.position())+a.position(),a)}name(a){let u=this.bb.__offset(this.bb_pos,4);return u?this.bb.__string(this.bb_pos+u,a):null}docString(a){let u=this.bb.__offset(this.bb_pos,6);return u?this.bb.__string(this.bb_pos+u,a):null}type(){let a=this.bb.__offset(this.bb_pos,8);return a?this.bb.readInt32(this.bb_pos+a):0}f(){let a=this.bb.__offset(this.bb_pos,10);return a?this.bb.readFloat32(this.bb_pos+a):0}i(){let a=this.bb.__offset(this.bb_pos,12);return a?this.bb.readInt64(this.bb_pos+a):this.bb.createLong(0,0)}s(a){let u=this.bb.__offset(this.bb_pos,14);return u?this.bb.__string(this.bb_pos+u,a):null}t(a){let u=this.bb.__offset(this.bb_pos,16);return u?(a||new e.experimental.fbs.Tensor).__init(this.bb.__indirect(this.bb_pos+u),this.bb):null}g(a){let u=this.bb.__offset(this.bb_pos,18);return u?(a||new e.experimental.fbs.Graph).__init(this.bb.__indirect(this.bb_pos+u),this.bb):null}floats(a){let u=this.bb.__offset(this.bb_pos,20);return u?this.bb.readFloat32(this.bb.__vector(this.bb_pos+u)+a*4):0}floatsLength(){let a=this.bb.__offset(this.bb_pos,20);return a?this.bb.__vector_len(this.bb_pos+a):0}floatsArray(){let a=this.bb.__offset(this.bb_pos,20);return a?new Float32Array(this.bb.bytes().buffer,this.bb.bytes().byteOffset+this.bb.__vector(this.bb_pos+a),this.bb.__vector_len(this.bb_pos+a)):null}ints(a){let u=this.bb.__offset(this.bb_pos,22);return u?this.bb.readInt64(this.bb.__vector(this.bb_pos+u)+a*8):this.bb.createLong(0,0)}intsLength(){let a=this.bb.__offset(this.bb_pos,22);return a?this.bb.__vector_len(this.bb_pos+a):0}strings(a,u){let l=this.bb.__offset(this.bb_pos,24);return l?this.bb.__string(this.bb.__vector(this.bb_pos+l)+a*4,u):null}stringsLength(){let a=this.bb.__offset(this.bb_pos,24);return a?this.bb.__vector_len(this.bb_pos+a):0}tensors(a,u){let l=this.bb.__offset(this.bb_pos,26);return l?(u||new e.experimental.fbs.Tensor).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+l)+a*4),this.bb):null}tensorsLength(){let a=this.bb.__offset(this.bb_pos,26);return a?this.bb.__vector_len(this.bb_pos+a):0}graphs(a,u){let l=this.bb.__offset(this.bb_pos,28);return l?(u||new e.experimental.fbs.Graph).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+l)+a*4),this.bb):null}graphsLength(){let a=this.bb.__offset(this.bb_pos,28);return a?this.bb.__vector_len(this.bb_pos+a):0}static startAttribute(a){a.startObject(13)}static addName(a,u){a.addFieldOffset(0,u,0)}static addDocString(a,u){a.addFieldOffset(1,u,0)}static addType(a,u){a.addFieldInt32(2,u,0)}static addF(a,u){a.addFieldFloat32(3,u,0)}static addI(a,u){a.addFieldInt64(4,u,a.createLong(0,0))}static addS(a,u){a.addFieldOffset(5,u,0)}static addT(a,u){a.addFieldOffset(6,u,0)}static addG(a,u){a.addFieldOffset(7,u,0)}static addFloats(a,u){a.addFieldOffset(8,u,0)}static createFloatsVector(a,u){a.startVector(4,u.length,4);for(let l=u.length-1;l>=0;l--)a.addFloat32(u[l]);return a.endVector()}static startFloatsVector(a,u){a.startVector(4,u,4)}static addInts(a,u){a.addFieldOffset(9,u,0)}static createIntsVector(a,u){a.startVector(8,u.length,8);for(let l=u.length-1;l>=0;l--)a.addInt64(u[l]);return a.endVector()}static startIntsVector(a,u){a.startVector(8,u,8)}static addStrings(a,u){a.addFieldOffset(10,u,0)}static createStringsVector(a,u){a.startVector(4,u.length,4);for(let l=u.length-1;l>=0;l--)a.addOffset(u[l]);return a.endVector()}static startStringsVector(a,u){a.startVector(4,u,4)}static addTensors(a,u){a.addFieldOffset(11,u,0)}static createTensorsVector(a,u){a.startVector(4,u.length,4);for(let l=u.length-1;l>=0;l--)a.addOffset(u[l]);return a.endVector()}static startTensorsVector(a,u){a.startVector(4,u,4)}static addGraphs(a,u){a.addFieldOffset(12,u,0)}static createGraphsVector(a,u){a.startVector(4,u.length,4);for(let l=u.length-1;l>=0;l--)a.addOffset(u[l]);return a.endVector()}static startGraphsVector(a,u){a.startVector(4,u,4)}static endAttribute(a){return a.endObject()}static createAttribute(a,u,l,d,p,h,y,b,w,T,x,_,A,P){return o.startAttribute(a),o.addName(a,u),o.addDocString(a,l),o.addType(a,d),o.addF(a,p),o.addI(a,h),o.addS(a,y),o.addT(a,b),o.addG(a,w),o.addFloats(a,T),o.addInts(a,x),o.addStrings(a,_),o.addTensors(a,A),o.addGraphs(a,P),o.endAttribute(a)}}i.Attribute=o})(n=t.fbs||={})})(r=e.experimental||={})})(ce||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,u){return this.bb_pos=a,this.bb=u,this}static getRootAsGraph(a,u){return(u||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsGraph(a,u){return a.setPosition(a.position()+B.SIZE_PREFIX_LENGTH),(u||new o).__init(a.readInt32(a.position())+a.position(),a)}initializers(a,u){let l=this.bb.__offset(this.bb_pos,4);return l?(u||new e.experimental.fbs.Tensor).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+l)+a*4),this.bb):null}initializersLength(){let a=this.bb.__offset(this.bb_pos,4);return a?this.bb.__vector_len(this.bb_pos+a):0}nodeArgs(a,u){let l=this.bb.__offset(this.bb_pos,6);return l?(u||new e.experimental.fbs.ValueInfo).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+l)+a*4),this.bb):null}nodeArgsLength(){let a=this.bb.__offset(this.bb_pos,6);return a?this.bb.__vector_len(this.bb_pos+a):0}nodes(a,u){let l=this.bb.__offset(this.bb_pos,8);return l?(u||new e.experimental.fbs.Node).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+l)+a*4),this.bb):null}nodesLength(){let a=this.bb.__offset(this.bb_pos,8);return a?this.bb.__vector_len(this.bb_pos+a):0}maxNodeIndex(){let a=this.bb.__offset(this.bb_pos,10);return a?this.bb.readUint32(this.bb_pos+a):0}nodeEdges(a,u){let l=this.bb.__offset(this.bb_pos,12);return l?(u||new e.experimental.fbs.NodeEdge).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+l)+a*4),this.bb):null}nodeEdgesLength(){let a=this.bb.__offset(this.bb_pos,12);return a?this.bb.__vector_len(this.bb_pos+a):0}inputs(a,u){let l=this.bb.__offset(this.bb_pos,14);return l?this.bb.__string(this.bb.__vector(this.bb_pos+l)+a*4,u):null}inputsLength(){let a=this.bb.__offset(this.bb_pos,14);return a?this.bb.__vector_len(this.bb_pos+a):0}outputs(a,u){let l=this.bb.__offset(this.bb_pos,16);return l?this.bb.__string(this.bb.__vector(this.bb_pos+l)+a*4,u):null}outputsLength(){let a=this.bb.__offset(this.bb_pos,16);return a?this.bb.__vector_len(this.bb_pos+a):0}sparseInitializers(a,u){let l=this.bb.__offset(this.bb_pos,18);return l?(u||new e.experimental.fbs.SparseTensor).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+l)+a*4),this.bb):null}sparseInitializersLength(){let a=this.bb.__offset(this.bb_pos,18);return a?this.bb.__vector_len(this.bb_pos+a):0}static startGraph(a){a.startObject(8)}static addInitializers(a,u){a.addFieldOffset(0,u,0)}static createInitializersVector(a,u){a.startVector(4,u.length,4);for(let l=u.length-1;l>=0;l--)a.addOffset(u[l]);return a.endVector()}static startInitializersVector(a,u){a.startVector(4,u,4)}static addNodeArgs(a,u){a.addFieldOffset(1,u,0)}static createNodeArgsVector(a,u){a.startVector(4,u.length,4);for(let l=u.length-1;l>=0;l--)a.addOffset(u[l]);return a.endVector()}static startNodeArgsVector(a,u){a.startVector(4,u,4)}static addNodes(a,u){a.addFieldOffset(2,u,0)}static createNodesVector(a,u){a.startVector(4,u.length,4);for(let l=u.length-1;l>=0;l--)a.addOffset(u[l]);return a.endVector()}static startNodesVector(a,u){a.startVector(4,u,4)}static addMaxNodeIndex(a,u){a.addFieldInt32(3,u,0)}static addNodeEdges(a,u){a.addFieldOffset(4,u,0)}static createNodeEdgesVector(a,u){a.startVector(4,u.length,4);for(let l=u.length-1;l>=0;l--)a.addOffset(u[l]);return a.endVector()}static startNodeEdgesVector(a,u){a.startVector(4,u,4)}static addInputs(a,u){a.addFieldOffset(5,u,0)}static createInputsVector(a,u){a.startVector(4,u.length,4);for(let l=u.length-1;l>=0;l--)a.addOffset(u[l]);return a.endVector()}static startInputsVector(a,u){a.startVector(4,u,4)}static addOutputs(a,u){a.addFieldOffset(6,u,0)}static createOutputsVector(a,u){a.startVector(4,u.length,4);for(let l=u.length-1;l>=0;l--)a.addOffset(u[l]);return a.endVector()}static startOutputsVector(a,u){a.startVector(4,u,4)}static addSparseInitializers(a,u){a.addFieldOffset(7,u,0)}static createSparseInitializersVector(a,u){a.startVector(4,u.length,4);for(let l=u.length-1;l>=0;l--)a.addOffset(u[l]);return a.endVector()}static startSparseInitializersVector(a,u){a.startVector(4,u,4)}static endGraph(a){return a.endObject()}static createGraph(a,u,l,d,p,h,y,b,w){return o.startGraph(a),o.addInitializers(a,u),o.addNodeArgs(a,l),o.addNodes(a,d),o.addMaxNodeIndex(a,p),o.addNodeEdges(a,h),o.addInputs(a,y),o.addOutputs(a,b),o.addSparseInitializers(a,w),o.endGraph(a)}}i.Graph=o})(n=t.fbs||={})})(r=e.experimental||={})})(ce||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,u){return this.bb_pos=a,this.bb=u,this}static getRootAsModel(a,u){return(u||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsModel(a,u){return a.setPosition(a.position()+B.SIZE_PREFIX_LENGTH),(u||new o).__init(a.readInt32(a.position())+a.position(),a)}irVersion(){let a=this.bb.__offset(this.bb_pos,4);return a?this.bb.readInt64(this.bb_pos+a):this.bb.createLong(0,0)}opsetImport(a,u){let l=this.bb.__offset(this.bb_pos,6);return l?(u||new e.experimental.fbs.OperatorSetId).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+l)+a*4),this.bb):null}opsetImportLength(){let a=this.bb.__offset(this.bb_pos,6);return a?this.bb.__vector_len(this.bb_pos+a):0}producerName(a){let u=this.bb.__offset(this.bb_pos,8);return u?this.bb.__string(this.bb_pos+u,a):null}producerVersion(a){let u=this.bb.__offset(this.bb_pos,10);return u?this.bb.__string(this.bb_pos+u,a):null}domain(a){let u=this.bb.__offset(this.bb_pos,12);return u?this.bb.__string(this.bb_pos+u,a):null}modelVersion(){let a=this.bb.__offset(this.bb_pos,14);return a?this.bb.readInt64(this.bb_pos+a):this.bb.createLong(0,0)}docString(a){let u=this.bb.__offset(this.bb_pos,16);return u?this.bb.__string(this.bb_pos+u,a):null}graph(a){let u=this.bb.__offset(this.bb_pos,18);return u?(a||new e.experimental.fbs.Graph).__init(this.bb.__indirect(this.bb_pos+u),this.bb):null}graphDocString(a){let u=this.bb.__offset(this.bb_pos,20);return u?this.bb.__string(this.bb_pos+u,a):null}static startModel(a){a.startObject(9)}static addIrVersion(a,u){a.addFieldInt64(0,u,a.createLong(0,0))}static addOpsetImport(a,u){a.addFieldOffset(1,u,0)}static createOpsetImportVector(a,u){a.startVector(4,u.length,4);for(let l=u.length-1;l>=0;l--)a.addOffset(u[l]);return a.endVector()}static startOpsetImportVector(a,u){a.startVector(4,u,4)}static addProducerName(a,u){a.addFieldOffset(2,u,0)}static addProducerVersion(a,u){a.addFieldOffset(3,u,0)}static addDomain(a,u){a.addFieldOffset(4,u,0)}static addModelVersion(a,u){a.addFieldInt64(5,u,a.createLong(0,0))}static addDocString(a,u){a.addFieldOffset(6,u,0)}static addGraph(a,u){a.addFieldOffset(7,u,0)}static addGraphDocString(a,u){a.addFieldOffset(8,u,0)}static endModel(a){return a.endObject()}static createModel(a,u,l,d,p,h,y,b,w,T){return o.startModel(a),o.addIrVersion(a,u),o.addOpsetImport(a,l),o.addProducerName(a,d),o.addProducerVersion(a,p),o.addDomain(a,h),o.addModelVersion(a,y),o.addDocString(a,b),o.addGraph(a,w),o.addGraphDocString(a,T),o.endModel(a)}}i.Model=o})(n=t.fbs||={})})(r=e.experimental||={})})(ce||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,u){return this.bb_pos=a,this.bb=u,this}static getRootAsKernelCreateInfos(a,u){return(u||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsKernelCreateInfos(a,u){return a.setPosition(a.position()+B.SIZE_PREFIX_LENGTH),(u||new o).__init(a.readInt32(a.position())+a.position(),a)}nodeIndices(a){let u=this.bb.__offset(this.bb_pos,4);return u?this.bb.readUint32(this.bb.__vector(this.bb_pos+u)+a*4):0}nodeIndicesLength(){let a=this.bb.__offset(this.bb_pos,4);return a?this.bb.__vector_len(this.bb_pos+a):0}nodeIndicesArray(){let a=this.bb.__offset(this.bb_pos,4);return a?new Uint32Array(this.bb.bytes().buffer,this.bb.bytes().byteOffset+this.bb.__vector(this.bb_pos+a),this.bb.__vector_len(this.bb_pos+a)):null}kernelDefHashes(a){let u=this.bb.__offset(this.bb_pos,6);return u?this.bb.readUint64(this.bb.__vector(this.bb_pos+u)+a*8):this.bb.createLong(0,0)}kernelDefHashesLength(){let a=this.bb.__offset(this.bb_pos,6);return a?this.bb.__vector_len(this.bb_pos+a):0}static startKernelCreateInfos(a){a.startObject(2)}static addNodeIndices(a,u){a.addFieldOffset(0,u,0)}static createNodeIndicesVector(a,u){a.startVector(4,u.length,4);for(let l=u.length-1;l>=0;l--)a.addInt32(u[l]);return a.endVector()}static startNodeIndicesVector(a,u){a.startVector(4,u,4)}static addKernelDefHashes(a,u){a.addFieldOffset(1,u,0)}static createKernelDefHashesVector(a,u){a.startVector(8,u.length,8);for(let l=u.length-1;l>=0;l--)a.addInt64(u[l]);return a.endVector()}static startKernelDefHashesVector(a,u){a.startVector(8,u,8)}static endKernelCreateInfos(a){return a.endObject()}static createKernelCreateInfos(a,u,l){return o.startKernelCreateInfos(a),o.addNodeIndices(a,u),o.addKernelDefHashes(a,l),o.endKernelCreateInfos(a)}}i.KernelCreateInfos=o})(n=t.fbs||={})})(r=e.experimental||={})})(ce||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,u){return this.bb_pos=a,this.bb=u,this}static getRootAsSubGraphSessionState(a,u){return(u||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsSubGraphSessionState(a,u){return a.setPosition(a.position()+B.SIZE_PREFIX_LENGTH),(u||new o).__init(a.readInt32(a.position())+a.position(),a)}graphId(a){let u=this.bb.__offset(this.bb_pos,4);return u?this.bb.__string(this.bb_pos+u,a):null}sessionState(a){let u=this.bb.__offset(this.bb_pos,6);return u?(a||new e.experimental.fbs.SessionState).__init(this.bb.__indirect(this.bb_pos+u),this.bb):null}static startSubGraphSessionState(a){a.startObject(2)}static addGraphId(a,u){a.addFieldOffset(0,u,0)}static addSessionState(a,u){a.addFieldOffset(1,u,0)}static endSubGraphSessionState(a){let u=a.endObject();return a.requiredField(u,4),u}static createSubGraphSessionState(a,u,l){return o.startSubGraphSessionState(a),o.addGraphId(a,u),o.addSessionState(a,l),o.endSubGraphSessionState(a)}}i.SubGraphSessionState=o})(n=t.fbs||={})})(r=e.experimental||={})})(ce||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,u){return this.bb_pos=a,this.bb=u,this}static getRootAsSessionState(a,u){return(u||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsSessionState(a,u){return a.setPosition(a.position()+B.SIZE_PREFIX_LENGTH),(u||new o).__init(a.readInt32(a.position())+a.position(),a)}kernels(a){let u=this.bb.__offset(this.bb_pos,4);return u?(a||new e.experimental.fbs.KernelCreateInfos).__init(this.bb.__indirect(this.bb_pos+u),this.bb):null}subGraphSessionStates(a,u){let l=this.bb.__offset(this.bb_pos,6);return l?(u||new e.experimental.fbs.SubGraphSessionState).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+l)+a*4),this.bb):null}subGraphSessionStatesLength(){let a=this.bb.__offset(this.bb_pos,6);return a?this.bb.__vector_len(this.bb_pos+a):0}static startSessionState(a){a.startObject(2)}static addKernels(a,u){a.addFieldOffset(0,u,0)}static addSubGraphSessionStates(a,u){a.addFieldOffset(1,u,0)}static createSubGraphSessionStatesVector(a,u){a.startVector(4,u.length,4);for(let l=u.length-1;l>=0;l--)a.addOffset(u[l]);return a.endVector()}static startSubGraphSessionStatesVector(a,u){a.startVector(4,u,4)}static endSessionState(a){return a.endObject()}static createSessionState(a,u,l){return o.startSessionState(a),o.addKernels(a,u),o.addSubGraphSessionStates(a,l),o.endSessionState(a)}}i.SessionState=o})(n=t.fbs||={})})(r=e.experimental||={})})(ce||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,u){return this.bb_pos=a,this.bb=u,this}static getRootAsInferenceSession(a,u){return(u||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsInferenceSession(a,u){return a.setPosition(a.position()+B.SIZE_PREFIX_LENGTH),(u||new o).__init(a.readInt32(a.position())+a.position(),a)}static bufferHasIdentifier(a){return a.__has_identifier("ORTM")}ortVersion(a){let u=this.bb.__offset(this.bb_pos,4);return u?this.bb.__string(this.bb_pos+u,a):null}model(a){let u=this.bb.__offset(this.bb_pos,6);return u?(a||new e.experimental.fbs.Model).__init(this.bb.__indirect(this.bb_pos+u),this.bb):null}sessionState(a){let u=this.bb.__offset(this.bb_pos,8);return u?(a||new e.experimental.fbs.SessionState).__init(this.bb.__indirect(this.bb_pos+u),this.bb):null}static startInferenceSession(a){a.startObject(3)}static addOrtVersion(a,u){a.addFieldOffset(0,u,0)}static addModel(a,u){a.addFieldOffset(1,u,0)}static addSessionState(a,u){a.addFieldOffset(2,u,0)}static endInferenceSession(a){return a.endObject()}static finishInferenceSessionBuffer(a,u){a.finish(u,"ORTM")}static finishSizePrefixedInferenceSessionBuffer(a,u){a.finish(u,"ORTM",!0)}static createInferenceSession(a,u,l,d){return o.startInferenceSession(a),o.addOrtVersion(a,u),o.addModel(a,l),o.addSessionState(a,d),o.endInferenceSession(a)}}i.InferenceSession=o})(n=t.fbs||={})})(r=e.experimental||={})})(ce||={})});var Zd=st((jS,Xd)=>{"use strict";Xd.exports=xw;function xw(r,e){for(var n=new Array(arguments.length-1),t=0,o=2,i=!0;o<arguments.length;)n[t++]=arguments[o++];return new Promise(function(a,u){n[t]=function(d){if(i)if(i=!1,d)u(d);else{for(var p=new Array(arguments.length-1),h=0;h<p.length;)p[h++]=arguments[h];a.apply(null,p)}};try{r.apply(e||null,n)}catch(l){i&&(i=!1,u(l))}})}});var tc=st(ec=>{"use strict";var fa=ec;fa.length=function(e){var n=e.length;if(!n)return 0;for(var t=0;--n%4>1&&e.charAt(n)==="=";)++t;return Math.ceil(e.length*3)/4-t};var Xn=new Array(64),Qd=new Array(123);for(hr=0;hr<64;)Qd[Xn[hr]=hr<26?hr+65:hr<52?hr+71:hr<62?hr-4:hr-59|43]=hr++;var hr;fa.encode=function(e,n,t){for(var o=null,i=[],s=0,a=0,u;n<t;){var l=e[n++];switch(a){case 0:i[s++]=Xn[l>>2],u=(l&3)<<4,a=1;break;case 1:i[s++]=Xn[u|l>>4],u=(l&15)<<2,a=2;break;case 2:i[s++]=Xn[u|l>>6],i[s++]=Xn[l&63],a=0;break}s>8191&&((o||(o=[])).push(String.fromCharCode.apply(String,i)),s=0)}return a&&(i[s++]=Xn[u],i[s++]=61,a===1&&(i[s++]=61)),o?(s&&o.push(String.fromCharCode.apply(String,i.slice(0,s))),o.join("")):String.fromCharCode.apply(String,i.slice(0,s))};var Jd="invalid encoding";fa.decode=function(e,n,t){for(var o=t,i=0,s,a=0;a<e.length;){var u=e.charCodeAt(a++);if(u===61&&i>1)break;if((u=Qd[u])===void 0)throw Error(Jd);switch(i){case 0:s=u,i=1;break;case 1:n[t++]=s<<2|(u&48)>>4,s=u,i=2;break;case 2:n[t++]=(s&15)<<4|(u&60)>>2,s=u,i=3;break;case 3:n[t++]=(s&3)<<6|u,i=0;break}}if(i===1)throw Error(Jd);return t-o};fa.test=function(e){return/^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/.test(e)}});var nc=st((KS,rc)=>{"use strict";rc.exports=pa;function pa(){this._listeners={}}pa.prototype.on=function(e,n,t){return(this._listeners[e]||(this._listeners[e]=[])).push({fn:n,ctx:t||this}),this};pa.prototype.off=function(e,n){if(e===void 0)this._listeners={};else if(n===void 0)this._listeners[e]=[];else for(var t=this._listeners[e],o=0;o<t.length;)t[o].fn===n?t.splice(o,1):++o;return this};pa.prototype.emit=function(e){var n=this._listeners[e];if(n){for(var t=[],o=1;o<arguments.length;)t.push(arguments[o++]);for(o=0;o<n.length;)n[o].fn.apply(n[o++].ctx,t)}return this}});var dc=st((YS,lc)=>{"use strict";lc.exports=oc(oc);function oc(r){return typeof Float32Array<"u"?function(){var e=new Float32Array([-0]),n=new Uint8Array(e.buffer),t=n[3]===128;function o(u,l,d){e[0]=u,l[d]=n[0],l[d+1]=n[1],l[d+2]=n[2],l[d+3]=n[3]}function i(u,l,d){e[0]=u,l[d]=n[3],l[d+1]=n[2],l[d+2]=n[1],l[d+3]=n[0]}r.writeFloatLE=t?o:i,r.writeFloatBE=t?i:o;function s(u,l){return n[0]=u[l],n[1]=u[l+1],n[2]=u[l+2],n[3]=u[l+3],e[0]}function a(u,l){return n[3]=u[l],n[2]=u[l+1],n[1]=u[l+2],n[0]=u[l+3],e[0]}r.readFloatLE=t?s:a,r.readFloatBE=t?a:s}():function(){function e(t,o,i,s){var a=o<0?1:0;if(a&&(o=-o),o===0)t(1/o>0?0:2147483648,i,s);else if(isNaN(o))t(2143289344,i,s);else if(o>34028234663852886e22)t((a<<31|2139095040)>>>0,i,s);else if(o<11754943508222875e-54)t((a<<31|Math.round(o/1401298464324817e-60))>>>0,i,s);else{var u=Math.floor(Math.log(o)/Math.LN2),l=Math.round(o*Math.pow(2,-u)*8388608)&8388607;t((a<<31|u+127<<23|l)>>>0,i,s)}}r.writeFloatLE=e.bind(null,ic),r.writeFloatBE=e.bind(null,ac);function n(t,o,i){var s=t(o,i),a=(s>>31)*2+1,u=s>>>23&255,l=s&8388607;return u===255?l?NaN:a*(1/0):u===0?a*1401298464324817e-60*l:a*Math.pow(2,u-150)*(l+8388608)}r.readFloatLE=n.bind(null,sc),r.readFloatBE=n.bind(null,uc)}(),typeof Float64Array<"u"?function(){var e=new Float64Array([-0]),n=new Uint8Array(e.buffer),t=n[7]===128;function o(u,l,d){e[0]=u,l[d]=n[0],l[d+1]=n[1],l[d+2]=n[2],l[d+3]=n[3],l[d+4]=n[4],l[d+5]=n[5],l[d+6]=n[6],l[d+7]=n[7]}function i(u,l,d){e[0]=u,l[d]=n[7],l[d+1]=n[6],l[d+2]=n[5],l[d+3]=n[4],l[d+4]=n[3],l[d+5]=n[2],l[d+6]=n[1],l[d+7]=n[0]}r.writeDoubleLE=t?o:i,r.writeDoubleBE=t?i:o;function s(u,l){return n[0]=u[l],n[1]=u[l+1],n[2]=u[l+2],n[3]=u[l+3],n[4]=u[l+4],n[5]=u[l+5],n[6]=u[l+6],n[7]=u[l+7],e[0]}function a(u,l){return n[7]=u[l],n[6]=u[l+1],n[5]=u[l+2],n[4]=u[l+3],n[3]=u[l+4],n[2]=u[l+5],n[1]=u[l+6],n[0]=u[l+7],e[0]}r.readDoubleLE=t?s:a,r.readDoubleBE=t?a:s}():function(){function e(t,o,i,s,a,u){var l=s<0?1:0;if(l&&(s=-s),s===0)t(0,a,u+o),t(1/s>0?0:2147483648,a,u+i);else if(isNaN(s))t(0,a,u+o),t(2146959360,a,u+i);else if(s>17976931348623157e292)t(0,a,u+o),t((l<<31|2146435072)>>>0,a,u+i);else{var d;if(s<22250738585072014e-324)d=s/5e-324,t(d>>>0,a,u+o),t((l<<31|d/4294967296)>>>0,a,u+i);else{var p=Math.floor(Math.log(s)/Math.LN2);p===1024&&(p=1023),d=s*Math.pow(2,-p),t(d*4503599627370496>>>0,a,u+o),t((l<<31|p+1023<<20|d*1048576&1048575)>>>0,a,u+i)}}}r.writeDoubleLE=e.bind(null,ic,0,4),r.writeDoubleBE=e.bind(null,ac,4,0);function n(t,o,i,s,a){var u=t(s,a+o),l=t(s,a+i),d=(l>>31)*2+1,p=l>>>20&2047,h=4294967296*(l&1048575)+u;return p===2047?h?NaN:d*(1/0):p===0?d*5e-324*h:d*Math.pow(2,p-1075)*(h+4503599627370496)}r.readDoubleLE=n.bind(null,sc,0,4),r.readDoubleBE=n.bind(null,uc,4,0)}(),r}function ic(r,e,n){e[n]=r&255,e[n+1]=r>>>8&255,e[n+2]=r>>>16&255,e[n+3]=r>>>24}function ac(r,e,n){e[n]=r>>>24,e[n+1]=r>>>16&255,e[n+2]=r>>>8&255,e[n+3]=r&255}function sc(r,e){return(r[e]|r[e+1]<<8|r[e+2]<<16|r[e+3]<<24)>>>0}function uc(r,e){return(r[e]<<24|r[e+1]<<16|r[e+2]<<8|r[e+3])>>>0}});var cc=st((exports,module)=>{"use strict";module.exports=inquire;function inquire(moduleName){try{var mod=eval("quire".replace(/^/,"re"))(moduleName);if(mod&&(mod.length||Object.keys(mod).length))return mod}catch(r){}return null}});var pc=st(fc=>{"use strict";var Zs=fc;Zs.length=function(e){for(var n=0,t=0,o=0;o<e.length;++o)t=e.charCodeAt(o),t<128?n+=1:t<2048?n+=2:(t&64512)===55296&&(e.charCodeAt(o+1)&64512)===56320?(++o,n+=4):n+=3;return n};Zs.read=function(e,n,t){var o=t-n;if(o<1)return"";for(var i=null,s=[],a=0,u;n<t;)u=e[n++],u<128?s[a++]=u:u>191&&u<224?s[a++]=(u&31)<<6|e[n++]&63:u>239&&u<365?(u=((u&7)<<18|(e[n++]&63)<<12|(e[n++]&63)<<6|e[n++]&63)-65536,s[a++]=55296+(u>>10),s[a++]=56320+(u&1023)):s[a++]=(u&15)<<12|(e[n++]&63)<<6|e[n++]&63,a>8191&&((i||(i=[])).push(String.fromCharCode.apply(String,s)),a=0);return i?(a&&i.push(String.fromCharCode.apply(String,s.slice(0,a))),i.join("")):String.fromCharCode.apply(String,s.slice(0,a))};Zs.write=function(e,n,t){for(var o=t,i,s,a=0;a<e.length;++a)i=e.charCodeAt(a),i<128?n[t++]=i:i<2048?(n[t++]=i>>6|192,n[t++]=i&63|128):(i&64512)===55296&&((s=e.charCodeAt(a+1))&64512)===56320?(i=65536+((i&1023)<<10)+(s&1023),++a,n[t++]=i>>18|240,n[t++]=i>>12&63|128,n[t++]=i>>6&63|128,n[t++]=i&63|128):(n[t++]=i>>12|224,n[t++]=i>>6&63|128,n[t++]=i&63|128);return t-o}});var hc=st((ZS,mc)=>{"use strict";mc.exports=$w;function $w(r,e,n){var t=n||8192,o=t>>>1,i=null,s=t;return function(u){if(u<1||u>o)return r(u);s+u>t&&(i=r(t),s=0);var l=e.call(i,s,s+=u);return s&7&&(s=(s|7)+1),l}}});var yc=st((JS,gc)=>{"use strict";gc.exports=It;var Mo=rn();function It(r,e){this.lo=r>>>0,this.hi=e>>>0}var _n=It.zero=new It(0,0);_n.toNumber=function(){return 0};_n.zzEncode=_n.zzDecode=function(){return this};_n.length=function(){return 1};var Tw=It.zeroHash="\0\0\0\0\0\0\0\0";It.fromNumber=function(e){if(e===0)return _n;var n=e<0;n&&(e=-e);var t=e>>>0,o=(e-t)/4294967296>>>0;return n&&(o=~o>>>0,t=~t>>>0,++t>4294967295&&(t=0,++o>4294967295&&(o=0))),new It(t,o)};It.from=function(e){if(typeof e=="number")return It.fromNumber(e);if(Mo.isString(e))if(Mo.Long)e=Mo.Long.fromString(e);else return It.fromNumber(parseInt(e,10));return e.low||e.high?new It(e.low>>>0,e.high>>>0):_n};It.prototype.toNumber=function(e){if(!e&&this.hi>>>31){var n=~this.lo+1>>>0,t=~this.hi>>>0;return n||(t=t+1>>>0),-(n+t*4294967296)}return this.lo+this.hi*4294967296};It.prototype.toLong=function(e){return Mo.Long?new Mo.Long(this.lo|0,this.hi|0,!!e):{low:this.lo|0,high:this.hi|0,unsigned:!!e}};var tn=String.prototype.charCodeAt;It.fromHash=function(e){return e===Tw?_n:new It((tn.call(e,0)|tn.call(e,1)<<8|tn.call(e,2)<<16|tn.call(e,3)<<24)>>>0,(tn.call(e,4)|tn.call(e,5)<<8|tn.call(e,6)<<16|tn.call(e,7)<<24)>>>0)};It.prototype.toHash=function(){return String.fromCharCode(this.lo&255,this.lo>>>8&255,this.lo>>>16&255,this.lo>>>24,this.hi&255,this.hi>>>8&255,this.hi>>>16&255,this.hi>>>24)};It.prototype.zzEncode=function(){var e=this.hi>>31;return this.hi=((this.hi<<1|this.lo>>>31)^e)>>>0,this.lo=(this.lo<<1^e)>>>0,this};It.prototype.zzDecode=function(){var e=-(this.lo&1);return this.lo=((this.lo>>>1|this.hi<<31)^e)>>>0,this.hi=(this.hi>>>1^e)>>>0,this};It.prototype.length=function(){var e=this.lo,n=(this.lo>>>28|this.hi<<4)>>>0,t=this.hi>>>24;return t===0?n===0?e<16384?e<128?1:2:e<2097152?3:4:n<16384?n<128?5:6:n<2097152?7:8:t<128?9:10}});var rn=st(Js=>{"use strict";var me=Js;me.asPromise=Zd();me.base64=tc();me.EventEmitter=nc();me.float=dc();me.inquire=cc();me.utf8=pc();me.pool=hc();me.LongBits=yc();me.isNode=!!(typeof global<"u"&&global&&global.process&&global.process.versions&&global.process.versions.node);me.global=me.isNode&&global||typeof window<"u"&&window||typeof self<"u"&&self||Js;me.emptyArray=Object.freeze?Object.freeze([]):[];me.emptyObject=Object.freeze?Object.freeze({}):{};me.isInteger=Number.isInteger||function(e){return typeof e=="number"&&isFinite(e)&&Math.floor(e)===e};me.isString=function(e){return typeof e=="string"||e instanceof String};me.isObject=function(e){return e&&typeof e=="object"};me.isset=me.isSet=function(e,n){var t=e[n];return t!=null&&e.hasOwnProperty(n)?typeof t!="object"||(Array.isArray(t)?t.length:Object.keys(t).length)>0:!1};me.Buffer=function(){try{var r=me.inquire("buffer").Buffer;return r.prototype.utf8Write?r:null}catch{return null}}();me._Buffer_from=null;me._Buffer_allocUnsafe=null;me.newBuffer=function(e){return typeof e=="number"?me.Buffer?me._Buffer_allocUnsafe(e):new me.Array(e):me.Buffer?me._Buffer_from(e):typeof Uint8Array>"u"?e:new Uint8Array(e)};me.Array=typeof Uint8Array<"u"?Uint8Array:Array;me.Long=me.global.dcodeIO&&me.global.dcodeIO.Long||me.global.Long||me.inquire("long");me.key2Re=/^true|false|0|1$/;me.key32Re=/^-?(?:0|[1-9][0-9]*)$/;me.key64Re=/^(?:[\\x00-\\xff]{8}|-?(?:0|[1-9][0-9]*))$/;me.longToHash=function(e){return e?me.LongBits.from(e).toHash():me.LongBits.zeroHash};me.longFromHash=function(e,n){var t=me.LongBits.fromHash(e);return me.Long?me.Long.fromBits(t.lo,t.hi,n):t.toNumber(!!n)};function bc(r,e,n){for(var t=Object.keys(e),o=0;o<t.length;++o)(r[t[o]]===void 0||!n)&&(r[t[o]]=e[t[o]]);return r}me.merge=bc;me.lcFirst=function(e){return e.charAt(0).toLowerCase()+e.substring(1)};function vc(r){function e(n,t){if(!(this instanceof e))return new e(n,t);Object.defineProperty(this,"message",{get:function(){return n}}),Error.captureStackTrace?Error.captureStackTrace(this,e):Object.defineProperty(this,"stack",{value:new Error().stack||""}),t&&bc(this,t)}return e.prototype=Object.create(Error.prototype,{constructor:{value:e,writable:!0,enumerable:!1,configurable:!0},name:{get:function(){return r},set:void 0,enumerable:!1,configurable:!0},toString:{value:function(){return this.name+": "+this.message},writable:!0,enumerable:!1,configurable:!0}}),e}me.newError=vc;me.ProtocolError=vc("ProtocolError");me.oneOfGetter=function(e){for(var n={},t=0;t<e.length;++t)n[e[t]]=1;return function(){for(var o=Object.keys(this),i=o.length-1;i>-1;--i)if(n[o[i]]===1&&this[o[i]]!==void 0&&this[o[i]]!==null)return o[i]}};me.oneOfSetter=function(e){return function(n){for(var t=0;t<e.length;++t)e[t]!==n&&delete this[e[t]]}};me.toJSONOptions={longs:String,enums:String,bytes:String,json:!0};me._configure=function(){var r=me.Buffer;if(!r){me._Buffer_from=me._Buffer_allocUnsafe=null;return}me._Buffer_from=r.from!==Uint8Array.from&&r.from||function(n,t){return new r(n,t)},me._Buffer_allocUnsafe=r.allocUnsafe||function(n){return new r(n)}}});var iu=st((eI,$c)=>{"use strict";$c.exports=Ke;var ar=rn(),Qs,ma=ar.LongBits,wc=ar.base64,_c=ar.utf8;function No(r,e,n){this.fn=r,this.len=e,this.next=void 0,this.val=n}function tu(){}function Sw(r){this.head=r.head,this.tail=r.tail,this.len=r.len,this.next=r.states}function Ke(){this.len=0,this.head=new No(tu,0,0),this.tail=this.head,this.states=null}var xc=function(){return ar.Buffer?function(){return(Ke.create=function(){return new Qs})()}:function(){return new Ke}};Ke.create=xc();Ke.alloc=function(e){return new ar.Array(e)};ar.Array!==Array&&(Ke.alloc=ar.pool(Ke.alloc,ar.Array.prototype.subarray));Ke.prototype._push=function(e,n,t){return this.tail=this.tail.next=new No(e,n,t),this.len+=n,this};function ru(r,e,n){e[n]=r&255}function Iw(r,e,n){for(;r>127;)e[n++]=r&127|128,r>>>=7;e[n]=r}function nu(r,e){this.len=r,this.next=void 0,this.val=e}nu.prototype=Object.create(No.prototype);nu.prototype.fn=Iw;Ke.prototype.uint32=function(e){return this.len+=(this.tail=this.tail.next=new nu((e=e>>>0)<128?1:e<16384?2:e<2097152?3:e<268435456?4:5,e)).len,this};Ke.prototype.int32=function(e){return e<0?this._push(ou,10,ma.fromNumber(e)):this.uint32(e)};Ke.prototype.sint32=function(e){return this.uint32((e<<1^e>>31)>>>0)};function ou(r,e,n){for(;r.hi;)e[n++]=r.lo&127|128,r.lo=(r.lo>>>7|r.hi<<25)>>>0,r.hi>>>=7;for(;r.lo>127;)e[n++]=r.lo&127|128,r.lo=r.lo>>>7;e[n++]=r.lo}Ke.prototype.uint64=function(e){var n=ma.from(e);return this._push(ou,n.length(),n)};Ke.prototype.int64=Ke.prototype.uint64;Ke.prototype.sint64=function(e){var n=ma.from(e).zzEncode();return this._push(ou,n.length(),n)};Ke.prototype.bool=function(e){return this._push(ru,1,e?1:0)};function eu(r,e,n){e[n]=r&255,e[n+1]=r>>>8&255,e[n+2]=r>>>16&255,e[n+3]=r>>>24}Ke.prototype.fixed32=function(e){return this._push(eu,4,e>>>0)};Ke.prototype.sfixed32=Ke.prototype.fixed32;Ke.prototype.fixed64=function(e){var n=ma.from(e);return this._push(eu,4,n.lo)._push(eu,4,n.hi)};Ke.prototype.sfixed64=Ke.prototype.fixed64;Ke.prototype.float=function(e){return this._push(ar.float.writeFloatLE,4,e)};Ke.prototype.double=function(e){return this._push(ar.float.writeDoubleLE,8,e)};var Aw=ar.Array.prototype.set?function(e,n,t){n.set(e,t)}:function(e,n,t){for(var o=0;o<e.length;++o)n[t+o]=e[o]};Ke.prototype.bytes=function(e){var n=e.length>>>0;if(!n)return this._push(ru,1,0);if(ar.isString(e)){var t=Ke.alloc(n=wc.length(e));wc.decode(e,t,0),e=t}return this.uint32(n)._push(Aw,n,e)};Ke.prototype.string=function(e){var n=_c.length(e);return n?this.uint32(n)._push(_c.write,n,e):this._push(ru,1,0)};Ke.prototype.fork=function(){return this.states=new Sw(this),this.head=this.tail=new No(tu,0,0),this.len=0,this};Ke.prototype.reset=function(){return this.states?(this.head=this.states.head,this.tail=this.states.tail,this.len=this.states.len,this.states=this.states.next):(this.head=this.tail=new No(tu,0,0),this.len=0),this};Ke.prototype.ldelim=function(){var e=this.head,n=this.tail,t=this.len;return this.reset().uint32(t),t&&(this.tail.next=e.next,this.tail=n,this.len+=t),this};Ke.prototype.finish=function(){for(var e=this.head.next,n=this.constructor.alloc(this.len),t=0;e;)e.fn(e.val,n,t),t+=e.len,e=e.next;return n};Ke._configure=function(r){Qs=r,Ke.create=xc(),Qs._configure()}});var Ic=st((tI,Sc)=>{"use strict";Sc.exports=Or;var Tc=iu();(Or.prototype=Object.create(Tc.prototype)).constructor=Or;var nn=rn();function Or(){Tc.call(this)}Or._configure=function(){Or.alloc=nn._Buffer_allocUnsafe,Or.writeBytesBuffer=nn.Buffer&&nn.Buffer.prototype instanceof Uint8Array&&nn.Buffer.prototype.set.name==="set"?function(e,n,t){n.set(e,t)}:function(e,n,t){if(e.copy)e.copy(n,t,0,e.length);else for(var o=0;o<e.length;)n[t++]=e[o++]}};Or.prototype.bytes=function(e){nn.isString(e)&&(e=nn._Buffer_from(e,"base64"));var n=e.length>>>0;return this.uint32(n),n&&this._push(Or.writeBytesBuffer,n,e),this};function Ow(r,e,n){r.length<40?nn.utf8.write(r,e,n):e.utf8Write?e.utf8Write(r,n):e.write(r,n)}Or.prototype.string=function(e){var n=nn.Buffer.byteLength(e);return this.uint32(n),n&&this._push(Ow,n,e),this};Or._configure()});var uu=st((rI,Pc)=>{"use strict";Pc.exports=bt;var Er=rn(),su,Ec=Er.LongBits,Ew=Er.utf8;function gr(r,e){return RangeError("index out of range: "+r.pos+" + "+(e||1)+" > "+r.len)}function bt(r){this.buf=r,this.pos=0,this.len=r.length}var Ac=typeof Uint8Array<"u"?function(e){if(e instanceof Uint8Array||Array.isArray(e))return new bt(e);throw Error("illegal buffer")}:function(e){if(Array.isArray(e))return new bt(e);throw Error("illegal buffer")},Cc=function(){return Er.Buffer?function(n){return(bt.create=function(o){return Er.Buffer.isBuffer(o)?new su(o):Ac(o)})(n)}:Ac};bt.create=Cc();bt.prototype._slice=Er.Array.prototype.subarray||Er.Array.prototype.slice;bt.prototype.uint32=function(){var e=4294967295;return function(){if(e=(this.buf[this.pos]&127)>>>0,this.buf[this.pos++]<128||(e=(e|(this.buf[this.pos]&127)<<7)>>>0,this.buf[this.pos++]<128)||(e=(e|(this.buf[this.pos]&127)<<14)>>>0,this.buf[this.pos++]<128)||(e=(e|(this.buf[this.pos]&127)<<21)>>>0,this.buf[this.pos++]<128)||(e=(e|(this.buf[this.pos]&15)<<28)>>>0,this.buf[this.pos++]<128))return e;if((this.pos+=5)>this.len)throw this.pos=this.len,gr(this,10);return e}}();bt.prototype.int32=function(){return this.uint32()|0};bt.prototype.sint32=function(){var e=this.uint32();return e>>>1^-(e&1)|0};function au(){var r=new Ec(0,0),e=0;if(this.len-this.pos>4){for(;e<4;++e)if(r.lo=(r.lo|(this.buf[this.pos]&127)<<e*7)>>>0,this.buf[this.pos++]<128)return r;if(r.lo=(r.lo|(this.buf[this.pos]&127)<<28)>>>0,r.hi=(r.hi|(this.buf[this.pos]&127)>>4)>>>0,this.buf[this.pos++]<128)return r;e=0}else{for(;e<3;++e){if(this.pos>=this.len)throw gr(this);if(r.lo=(r.lo|(this.buf[this.pos]&127)<<e*7)>>>0,this.buf[this.pos++]<128)return r}return r.lo=(r.lo|(this.buf[this.pos++]&127)<<e*7)>>>0,r}if(this.len-this.pos>4){for(;e<5;++e)if(r.hi=(r.hi|(this.buf[this.pos]&127)<<e*7+3)>>>0,this.buf[this.pos++]<128)return r}else for(;e<5;++e){if(this.pos>=this.len)throw gr(this);if(r.hi=(r.hi|(this.buf[this.pos]&127)<<e*7+3)>>>0,this.buf[this.pos++]<128)return r}throw Error("invalid varint encoding")}bt.prototype.bool=function(){return this.uint32()!==0};function ha(r,e){return(r[e-4]|r[e-3]<<8|r[e-2]<<16|r[e-1]<<24)>>>0}bt.prototype.fixed32=function(){if(this.pos+4>this.len)throw gr(this,4);return ha(this.buf,this.pos+=4)};bt.prototype.sfixed32=function(){if(this.pos+4>this.len)throw gr(this,4);return ha(this.buf,this.pos+=4)|0};function Oc(){if(this.pos+8>this.len)throw gr(this,8);return new Ec(ha(this.buf,this.pos+=4),ha(this.buf,this.pos+=4))}bt.prototype.float=function(){if(this.pos+4>this.len)throw gr(this,4);var e=Er.float.readFloatLE(this.buf,this.pos);return this.pos+=4,e};bt.prototype.double=function(){if(this.pos+8>this.len)throw gr(this,4);var e=Er.float.readDoubleLE(this.buf,this.pos);return this.pos+=8,e};bt.prototype.bytes=function(){var e=this.uint32(),n=this.pos,t=this.pos+e;if(t>this.len)throw gr(this,e);return this.pos+=e,Array.isArray(this.buf)?this.buf.slice(n,t):n===t?new this.buf.constructor(0):this._slice.call(this.buf,n,t)};bt.prototype.string=function(){var e=this.bytes();return Ew.read(e,0,e.length)};bt.prototype.skip=function(e){if(typeof e=="number"){if(this.pos+e>this.len)throw gr(this,e);this.pos+=e}else do if(this.pos>=this.len)throw gr(this);while(this.buf[this.pos++]&128);return this};bt.prototype.skipType=function(r){switch(r){case 0:this.skip();break;case 1:this.skip(8);break;case 2:this.skip(this.uint32());break;case 3:for(;(r=this.uint32()&7)!==4;)this.skipType(r);break;case 5:this.skip(4);break;default:throw Error("invalid wire type "+r+" at offset "+this.pos)}return this};bt._configure=function(r){su=r,bt.create=Cc(),su._configure();var e=Er.Long?"toLong":"toNumber";Er.merge(bt.prototype,{int64:function(){return au.call(this)[e](!1)},uint64:function(){return au.call(this)[e](!0)},sint64:function(){return au.call(this).zzDecode()[e](!1)},fixed64:function(){return Oc.call(this)[e](!0)},sfixed64:function(){return Oc.call(this)[e](!1)}})}});var Rc=st((nI,Bc)=>{"use strict";Bc.exports=xn;var Dc=uu();(xn.prototype=Object.create(Dc.prototype)).constructor=xn;var kc=rn();function xn(r){Dc.call(this,r)}xn._configure=function(){kc.Buffer&&(xn.prototype._slice=kc.Buffer.prototype.slice)};xn.prototype.string=function(){var e=this.uint32();return this.buf.utf8Slice?this.buf.utf8Slice(this.pos,this.pos=Math.min(this.pos+e,this.len)):this.buf.toString("utf-8",this.pos,this.pos=Math.min(this.pos+e,this.len))};xn._configure()});var Mc=st((oI,zc)=>{"use strict";zc.exports=Lo;var lu=rn();(Lo.prototype=Object.create(lu.EventEmitter.prototype)).constructor=Lo;function Lo(r,e,n){if(typeof r!="function")throw TypeError("rpcImpl must be a function");lu.EventEmitter.call(this),this.rpcImpl=r,this.requestDelimited=!!e,this.responseDelimited=!!n}Lo.prototype.rpcCall=function r(e,n,t,o,i){if(!o)throw TypeError("request must be specified");var s=this;if(!i)return lu.asPromise(r,s,e,n,t,o);if(!s.rpcImpl){setTimeout(function(){i(Error("already ended"))},0);return}try{return s.rpcImpl(e,n[s.requestDelimited?"encodeDelimited":"encode"](o).finish(),function(u,l){if(u)return s.emit("error",u,e),i(u);if(l===null){s.end(!0);return}if(!(l instanceof t))try{l=t[s.responseDelimited?"decodeDelimited":"decode"](l)}catch(d){return s.emit("error",d,e),i(d)}return s.emit("data",l,e),i(null,l)})}catch(a){s.emit("error",a,e),setTimeout(function(){i(a)},0);return}};Lo.prototype.end=function(e){return this.rpcImpl&&(e||this.rpcImpl(null,null,null),this.rpcImpl=null,this.emit("end").off()),this}});var Lc=st(Nc=>{"use strict";var Cw=Nc;Cw.Service=Mc()});var Fc=st((aI,Uc)=>{"use strict";Uc.exports={}});var Wc=st(Gc=>{"use strict";var Kt=Gc;Kt.build="minimal";Kt.Writer=iu();Kt.BufferWriter=Ic();Kt.Reader=uu();Kt.BufferReader=Rc();Kt.util=rn();Kt.rpc=Lc();Kt.roots=Fc();Kt.configure=Vc;function Vc(){Kt.util._configure(),Kt.Writer._configure(Kt.BufferWriter),Kt.Reader._configure(Kt.BufferReader)}Vc()});var jc=st((uI,Hc)=>{"use strict";Hc.exports=Wc()});var Zn=st((lI,qc)=>{"use strict";var lt=jc(),re=lt.Reader,vt=lt.Writer,E=lt.util,I=lt.roots.default||(lt.roots.default={});I.onnx=function(){var r={};return r.Version=function(){var e={},n=Object.create(e);return n[e[0]="_START_VERSION"]=0,n[e[1]="IR_VERSION_2017_10_10"]=1,n[e[2]="IR_VERSION_2017_10_30"]=2,n[e[3]="IR_VERSION_2017_11_3"]=3,n[e[4]="IR_VERSION_2019_1_22"]=4,n[e[5]="IR_VERSION_2019_3_18"]=5,n[e[6]="IR_VERSION_2019_9_19"]=6,n[e[7]="IR_VERSION_2020_5_8"]=7,n[e[8]="IR_VERSION_2021_7_30"]=8,n[e[9]="IR_VERSION"]=9,n}(),r.AttributeProto=function(){function e(n){if(this.floats=[],this.ints=[],this.strings=[],this.tensors=[],this.graphs=[],this.sparseTensors=[],this.typeProtos=[],n)for(var t=Object.keys(n),o=0;o<t.length;++o)n[t[o]]!=null&&(this[t[o]]=n[t[o]])}return e.prototype.name="",e.prototype.refAttrName="",e.prototype.docString="",e.prototype.type=0,e.prototype.f=0,e.prototype.i=E.Long?E.Long.fromBits(0,0,!1):0,e.prototype.s=E.newBuffer([]),e.prototype.t=null,e.prototype.g=null,e.prototype.sparseTensor=null,e.prototype.tp=null,e.prototype.floats=E.emptyArray,e.prototype.ints=E.emptyArray,e.prototype.strings=E.emptyArray,e.prototype.tensors=E.emptyArray,e.prototype.graphs=E.emptyArray,e.prototype.sparseTensors=E.emptyArray,e.prototype.typeProtos=E.emptyArray,e.create=function(t){return new e(t)},e.encode=function(t,o){if(o||(o=vt.create()),t.name!=null&&Object.hasOwnProperty.call(t,"name")&&o.uint32(10).string(t.name),t.f!=null&&Object.hasOwnProperty.call(t,"f")&&o.uint32(21).float(t.f),t.i!=null&&Object.hasOwnProperty.call(t,"i")&&o.uint32(24).int64(t.i),t.s!=null&&Object.hasOwnProperty.call(t,"s")&&o.uint32(34).bytes(t.s),t.t!=null&&Object.hasOwnProperty.call(t,"t")&&I.onnx.TensorProto.encode(t.t,o.uint32(42).fork()).ldelim(),t.g!=null&&Object.hasOwnProperty.call(t,"g")&&I.onnx.GraphProto.encode(t.g,o.uint32(50).fork()).ldelim(),t.floats!=null&&t.floats.length){o.uint32(58).fork();for(var i=0;i<t.floats.length;++i)o.float(t.floats[i]);o.ldelim()}if(t.ints!=null&&t.ints.length){o.uint32(66).fork();for(var i=0;i<t.ints.length;++i)o.int64(t.ints[i]);o.ldelim()}if(t.strings!=null&&t.strings.length)for(var i=0;i<t.strings.length;++i)o.uint32(74).bytes(t.strings[i]);if(t.tensors!=null&&t.tensors.length)for(var i=0;i<t.tensors.length;++i)I.onnx.TensorProto.encode(t.tensors[i],o.uint32(82).fork()).ldelim();if(t.graphs!=null&&t.graphs.length)for(var i=0;i<t.graphs.length;++i)I.onnx.GraphProto.encode(t.graphs[i],o.uint32(90).fork()).ldelim();if(t.docString!=null&&Object.hasOwnProperty.call(t,"docString")&&o.uint32(106).string(t.docString),t.tp!=null&&Object.hasOwnProperty.call(t,"tp")&&I.onnx.TypeProto.encode(t.tp,o.uint32(114).fork()).ldelim(),t.typeProtos!=null&&t.typeProtos.length)for(var i=0;i<t.typeProtos.length;++i)I.onnx.TypeProto.encode(t.typeProtos[i],o.uint32(122).fork()).ldelim();if(t.type!=null&&Object.hasOwnProperty.call(t,"type")&&o.uint32(160).int32(t.type),t.refAttrName!=null&&Object.hasOwnProperty.call(t,"refAttrName")&&o.uint32(170).string(t.refAttrName),t.sparseTensor!=null&&Object.hasOwnProperty.call(t,"sparseTensor")&&I.onnx.SparseTensorProto.encode(t.sparseTensor,o.uint32(178).fork()).ldelim(),t.sparseTensors!=null&&t.sparseTensors.length)for(var i=0;i<t.sparseTensors.length;++i)I.onnx.SparseTensorProto.encode(t.sparseTensors[i],o.uint32(186).fork()).ldelim();return o},e.encodeDelimited=function(t,o){return this.encode(t,o).ldelim()},e.decode=function(t,o){t instanceof re||(t=re.create(t));for(var i=o===void 0?t.len:t.pos+o,s=new I.onnx.AttributeProto;t.pos<i;){var a=t.uint32();switch(a>>>3){case 1:{s.name=t.string();break}case 21:{s.refAttrName=t.string();break}case 13:{s.docString=t.string();break}case 20:{s.type=t.int32();break}case 2:{s.f=t.float();break}case 3:{s.i=t.int64();break}case 4:{s.s=t.bytes();break}case 5:{s.t=I.onnx.TensorProto.decode(t,t.uint32());break}case 6:{s.g=I.onnx.GraphProto.decode(t,t.uint32());break}case 22:{s.sparseTensor=I.onnx.SparseTensorProto.decode(t,t.uint32());break}case 14:{s.tp=I.onnx.TypeProto.decode(t,t.uint32());break}case 7:{if(s.floats&&s.floats.length||(s.floats=[]),(a&7)===2)for(var u=t.uint32()+t.pos;t.pos<u;)s.floats.push(t.float());else s.floats.push(t.float());break}case 8:{if(s.ints&&s.ints.length||(s.ints=[]),(a&7)===2)for(var u=t.uint32()+t.pos;t.pos<u;)s.ints.push(t.int64());else s.ints.push(t.int64());break}case 9:{s.strings&&s.strings.length||(s.strings=[]),s.strings.push(t.bytes());break}case 10:{s.tensors&&s.tensors.length||(s.tensors=[]),s.tensors.push(I.onnx.TensorProto.decode(t,t.uint32()));break}case 11:{s.graphs&&s.graphs.length||(s.graphs=[]),s.graphs.push(I.onnx.GraphProto.decode(t,t.uint32()));break}case 23:{s.sparseTensors&&s.sparseTensors.length||(s.sparseTensors=[]),s.sparseTensors.push(I.onnx.SparseTensorProto.decode(t,t.uint32()));break}case 15:{s.typeProtos&&s.typeProtos.length||(s.typeProtos=[]),s.typeProtos.push(I.onnx.TypeProto.decode(t,t.uint32()));break}default:t.skipType(a&7);break}}return s},e.decodeDelimited=function(t){return t instanceof re||(t=new re(t)),this.decode(t,t.uint32())},e.verify=function(t){if(typeof t!="object"||t===null)return"object expected";if(t.name!=null&&t.hasOwnProperty("name")&&!E.isString(t.name))return"name: string expected";if(t.refAttrName!=null&&t.hasOwnProperty("refAttrName")&&!E.isString(t.refAttrName))return"refAttrName: string expected";if(t.docString!=null&&t.hasOwnProperty("docString")&&!E.isString(t.docString))return"docString: string expected";if(t.type!=null&&t.hasOwnProperty("type"))switch(t.type){default:return"type: enum value expected";case 0:case 1:case 2:case 3:case 4:case 5:case 11:case 13:case 6:case 7:case 8:case 9:case 10:case 12:case 14:break}if(t.f!=null&&t.hasOwnProperty("f")&&typeof t.f!="number")return"f: number expected";if(t.i!=null&&t.hasOwnProperty("i")&&!E.isInteger(t.i)&&!(t.i&&E.isInteger(t.i.low)&&E.isInteger(t.i.high)))return"i: integer|Long expected";if(t.s!=null&&t.hasOwnProperty("s")&&!(t.s&&typeof t.s.length=="number"||E.isString(t.s)))return"s: buffer expected";if(t.t!=null&&t.hasOwnProperty("t")){var o=I.onnx.TensorProto.verify(t.t);if(o)return"t."+o}if(t.g!=null&&t.hasOwnProperty("g")){var o=I.onnx.GraphProto.verify(t.g);if(o)return"g."+o}if(t.sparseTensor!=null&&t.hasOwnProperty("sparseTensor")){var o=I.onnx.SparseTensorProto.verify(t.sparseTensor);if(o)return"sparseTensor."+o}if(t.tp!=null&&t.hasOwnProperty("tp")){var o=I.onnx.TypeProto.verify(t.tp);if(o)return"tp."+o}if(t.floats!=null&&t.hasOwnProperty("floats")){if(!Array.isArray(t.floats))return"floats: array expected";for(var i=0;i<t.floats.length;++i)if(typeof t.floats[i]!="number")return"floats: number[] expected"}if(t.ints!=null&&t.hasOwnProperty("ints")){if(!Array.isArray(t.ints))return"ints: array expected";for(var i=0;i<t.ints.length;++i)if(!E.isInteger(t.ints[i])&&!(t.ints[i]&&E.isInteger(t.ints[i].low)&&E.isInteger(t.ints[i].high)))return"ints: integer|Long[] expected"}if(t.strings!=null&&t.hasOwnProperty("strings")){if(!Array.isArray(t.strings))return"strings: array expected";for(var i=0;i<t.strings.length;++i)if(!(t.strings[i]&&typeof t.strings[i].length=="number"||E.isString(t.strings[i])))return"strings: buffer[] expected"}if(t.tensors!=null&&t.hasOwnProperty("tensors")){if(!Array.isArray(t.tensors))return"tensors: array expected";for(var i=0;i<t.tensors.length;++i){var o=I.onnx.TensorProto.verify(t.tensors[i]);if(o)return"tensors."+o}}if(t.graphs!=null&&t.hasOwnProperty("graphs")){if(!Array.isArray(t.graphs))return"graphs: array expected";for(var i=0;i<t.graphs.length;++i){var o=I.onnx.GraphProto.verify(t.graphs[i]);if(o)return"graphs."+o}}if(t.sparseTensors!=null&&t.hasOwnProperty("sparseTensors")){if(!Array.isArray(t.sparseTensors))return"sparseTensors: array expected";for(var i=0;i<t.sparseTensors.length;++i){var o=I.onnx.SparseTensorProto.verify(t.sparseTensors[i]);if(o)return"sparseTensors."+o}}if(t.typeProtos!=null&&t.hasOwnProperty("typeProtos")){if(!Array.isArray(t.typeProtos))return"typeProtos: array expected";for(var i=0;i<t.typeProtos.length;++i){var o=I.onnx.TypeProto.verify(t.typeProtos[i]);if(o)return"typeProtos."+o}}return null},e.fromObject=function(t){if(t instanceof I.onnx.AttributeProto)return t;var o=new I.onnx.AttributeProto;switch(t.name!=null&&(o.name=String(t.name)),t.refAttrName!=null&&(o.refAttrName=String(t.refAttrName)),t.docString!=null&&(o.docString=String(t.docString)),t.type){default:if(typeof t.type=="number"){o.type=t.type;break}break;case"UNDEFINED":case 0:o.type=0;break;case"FLOAT":case 1:o.type=1;break;case"INT":case 2:o.type=2;break;case"STRING":case 3:o.type=3;break;case"TENSOR":case 4:o.type=4;break;case"GRAPH":case 5:o.type=5;break;case"SPARSE_TENSOR":case 11:o.type=11;break;case"TYPE_PROTO":case 13:o.type=13;break;case"FLOATS":case 6:o.type=6;break;case"INTS":case 7:o.type=7;break;case"STRINGS":case 8:o.type=8;break;case"TENSORS":case 9:o.type=9;break;case"GRAPHS":case 10:o.type=10;break;case"SPARSE_TENSORS":case 12:o.type=12;break;case"TYPE_PROTOS":case 14:o.type=14;break}if(t.f!=null&&(o.f=Number(t.f)),t.i!=null&&(E.Long?(o.i=E.Long.fromValue(t.i)).unsigned=!1:typeof t.i=="string"?o.i=parseInt(t.i,10):typeof t.i=="number"?o.i=t.i:typeof t.i=="object"&&(o.i=new E.LongBits(t.i.low>>>0,t.i.high>>>0).toNumber())),t.s!=null&&(typeof t.s=="string"?E.base64.decode(t.s,o.s=E.newBuffer(E.base64.length(t.s)),0):t.s.length>=0&&(o.s=t.s)),t.t!=null){if(typeof t.t!="object")throw TypeError(".onnx.AttributeProto.t: object expected");o.t=I.onnx.TensorProto.fromObject(t.t)}if(t.g!=null){if(typeof t.g!="object")throw TypeError(".onnx.AttributeProto.g: object expected");o.g=I.onnx.GraphProto.fromObject(t.g)}if(t.sparseTensor!=null){if(typeof t.sparseTensor!="object")throw TypeError(".onnx.AttributeProto.sparseTensor: object expected");o.sparseTensor=I.onnx.SparseTensorProto.fromObject(t.sparseTensor)}if(t.tp!=null){if(typeof t.tp!="object")throw TypeError(".onnx.AttributeProto.tp: object expected");o.tp=I.onnx.TypeProto.fromObject(t.tp)}if(t.floats){if(!Array.isArray(t.floats))throw TypeError(".onnx.AttributeProto.floats: array expected");o.floats=[];for(var i=0;i<t.floats.length;++i)o.floats[i]=Number(t.floats[i])}if(t.ints){if(!Array.isArray(t.ints))throw TypeError(".onnx.AttributeProto.ints: array expected");o.ints=[];for(var i=0;i<t.ints.length;++i)E.Long?(o.ints[i]=E.Long.fromValue(t.ints[i])).unsigned=!1:typeof t.ints[i]=="string"?o.ints[i]=parseInt(t.ints[i],10):typeof t.ints[i]=="number"?o.ints[i]=t.ints[i]:typeof t.ints[i]=="object"&&(o.ints[i]=new E.LongBits(t.ints[i].low>>>0,t.ints[i].high>>>0).toNumber())}if(t.strings){if(!Array.isArray(t.strings))throw TypeError(".onnx.AttributeProto.strings: array expected");o.strings=[];for(var i=0;i<t.strings.length;++i)typeof t.strings[i]=="string"?E.base64.decode(t.strings[i],o.strings[i]=E.newBuffer(E.base64.length(t.strings[i])),0):t.strings[i].length>=0&&(o.strings[i]=t.strings[i])}if(t.tensors){if(!Array.isArray(t.tensors))throw TypeError(".onnx.AttributeProto.tensors: array expected");o.tensors=[];for(var i=0;i<t.tensors.length;++i){if(typeof t.tensors[i]!="object")throw TypeError(".onnx.AttributeProto.tensors: object expected");o.tensors[i]=I.onnx.TensorProto.fromObject(t.tensors[i])}}if(t.graphs){if(!Array.isArray(t.graphs))throw TypeError(".onnx.AttributeProto.graphs: array expected");o.graphs=[];for(var i=0;i<t.graphs.length;++i){if(typeof t.graphs[i]!="object")throw TypeError(".onnx.AttributeProto.graphs: object expected");o.graphs[i]=I.onnx.GraphProto.fromObject(t.graphs[i])}}if(t.sparseTensors){if(!Array.isArray(t.sparseTensors))throw TypeError(".onnx.AttributeProto.sparseTensors: array expected");o.sparseTensors=[];for(var i=0;i<t.sparseTensors.length;++i){if(typeof t.sparseTensors[i]!="object")throw TypeError(".onnx.AttributeProto.sparseTensors: object expected");o.sparseTensors[i]=I.onnx.SparseTensorProto.fromObject(t.sparseTensors[i])}}if(t.typeProtos){if(!Array.isArray(t.typeProtos))throw TypeError(".onnx.AttributeProto.typeProtos: array expected");o.typeProtos=[];for(var i=0;i<t.typeProtos.length;++i){if(typeof t.typeProtos[i]!="object")throw TypeError(".onnx.AttributeProto.typeProtos: object expected");o.typeProtos[i]=I.onnx.TypeProto.fromObject(t.typeProtos[i])}}return o},e.toObject=function(t,o){o||(o={});var i={};if((o.arrays||o.defaults)&&(i.floats=[],i.ints=[],i.strings=[],i.tensors=[],i.graphs=[],i.typeProtos=[],i.sparseTensors=[]),o.defaults){if(i.name="",i.f=0,E.Long){var s=new E.Long(0,0,!1);i.i=o.longs===String?s.toString():o.longs===Number?s.toNumber():s}else i.i=o.longs===String?"0":0;o.bytes===String?i.s="":(i.s=[],o.bytes!==Array&&(i.s=E.newBuffer(i.s))),i.t=null,i.g=null,i.docString="",i.tp=null,i.type=o.enums===String?"UNDEFINED":0,i.refAttrName="",i.sparseTensor=null}if(t.name!=null&&t.hasOwnProperty("name")&&(i.name=t.name),t.f!=null&&t.hasOwnProperty("f")&&(i.f=o.json&&!isFinite(t.f)?String(t.f):t.f),t.i!=null&&t.hasOwnProperty("i")&&(typeof t.i=="number"?i.i=o.longs===String?String(t.i):t.i:i.i=o.longs===String?E.Long.prototype.toString.call(t.i):o.longs===Number?new E.LongBits(t.i.low>>>0,t.i.high>>>0).toNumber():t.i),t.s!=null&&t.hasOwnProperty("s")&&(i.s=o.bytes===String?E.base64.encode(t.s,0,t.s.length):o.bytes===Array?Array.prototype.slice.call(t.s):t.s),t.t!=null&&t.hasOwnProperty("t")&&(i.t=I.onnx.TensorProto.toObject(t.t,o)),t.g!=null&&t.hasOwnProperty("g")&&(i.g=I.onnx.GraphProto.toObject(t.g,o)),t.floats&&t.floats.length){i.floats=[];for(var a=0;a<t.floats.length;++a)i.floats[a]=o.json&&!isFinite(t.floats[a])?String(t.floats[a]):t.floats[a]}if(t.ints&&t.ints.length){i.ints=[];for(var a=0;a<t.ints.length;++a)typeof t.ints[a]=="number"?i.ints[a]=o.longs===String?String(t.ints[a]):t.ints[a]:i.ints[a]=o.longs===String?E.Long.prototype.toString.call(t.ints[a]):o.longs===Number?new E.LongBits(t.ints[a].low>>>0,t.ints[a].high>>>0).toNumber():t.ints[a]}if(t.strings&&t.strings.length){i.strings=[];for(var a=0;a<t.strings.length;++a)i.strings[a]=o.bytes===String?E.base64.encode(t.strings[a],0,t.strings[a].length):o.bytes===Array?Array.prototype.slice.call(t.strings[a]):t.strings[a]}if(t.tensors&&t.tensors.length){i.tensors=[];for(var a=0;a<t.tensors.length;++a)i.tensors[a]=I.onnx.TensorProto.toObject(t.tensors[a],o)}if(t.graphs&&t.graphs.length){i.graphs=[];for(var a=0;a<t.graphs.length;++a)i.graphs[a]=I.onnx.GraphProto.toObject(t.graphs[a],o)}if(t.docString!=null&&t.hasOwnProperty("docString")&&(i.docString=t.docString),t.tp!=null&&t.hasOwnProperty("tp")&&(i.tp=I.onnx.TypeProto.toObject(t.tp,o)),t.typeProtos&&t.typeProtos.length){i.typeProtos=[];for(var a=0;a<t.typeProtos.length;++a)i.typeProtos[a]=I.onnx.TypeProto.toObject(t.typeProtos[a],o)}if(t.type!=null&&t.hasOwnProperty("type")&&(i.type=o.enums===String?I.onnx.AttributeProto.AttributeType[t.type]===void 0?t.type:I.onnx.AttributeProto.AttributeType[t.type]:t.type),t.refAttrName!=null&&t.hasOwnProperty("refAttrName")&&(i.refAttrName=t.refAttrName),t.sparseTensor!=null&&t.hasOwnProperty("sparseTensor")&&(i.sparseTensor=I.onnx.SparseTensorProto.toObject(t.sparseTensor,o)),t.sparseTensors&&t.sparseTensors.length){i.sparseTensors=[];for(var a=0;a<t.sparseTensors.length;++a)i.sparseTensors[a]=I.onnx.SparseTensorProto.toObject(t.sparseTensors[a],o)}return i},e.prototype.toJSON=function(){return this.constructor.toObject(this,lt.util.toJSONOptions)},e.getTypeUrl=function(t){return t===void 0&&(t="type.googleapis.com"),t+"/onnx.AttributeProto"},e.AttributeType=function(){var n={},t=Object.create(n);return t[n[0]="UNDEFINED"]=0,t[n[1]="FLOAT"]=1,t[n[2]="INT"]=2,t[n[3]="STRING"]=3,t[n[4]="TENSOR"]=4,t[n[5]="GRAPH"]=5,t[n[11]="SPARSE_TENSOR"]=11,t[n[13]="TYPE_PROTO"]=13,t[n[6]="FLOATS"]=6,t[n[7]="INTS"]=7,t[n[8]="STRINGS"]=8,t[n[9]="TENSORS"]=9,t[n[10]="GRAPHS"]=10,t[n[12]="SPARSE_TENSORS"]=12,t[n[14]="TYPE_PROTOS"]=14,t}(),e}(),r.ValueInfoProto=function(){function e(n){if(n)for(var t=Object.keys(n),o=0;o<t.length;++o)n[t[o]]!=null&&(this[t[o]]=n[t[o]])}return e.prototype.name="",e.prototype.type=null,e.prototype.docString="",e.create=function(t){return new e(t)},e.encode=function(t,o){return o||(o=vt.create()),t.name!=null&&Object.hasOwnProperty.call(t,"name")&&o.uint32(10).string(t.name),t.type!=null&&Object.hasOwnProperty.call(t,"type")&&I.onnx.TypeProto.encode(t.type,o.uint32(18).fork()).ldelim(),t.docString!=null&&Object.hasOwnProperty.call(t,"docString")&&o.uint32(26).string(t.docString),o},e.encodeDelimited=function(t,o){return this.encode(t,o).ldelim()},e.decode=function(t,o){t instanceof re||(t=re.create(t));for(var i=o===void 0?t.len:t.pos+o,s=new I.onnx.ValueInfoProto;t.pos<i;){var a=t.uint32();switch(a>>>3){case 1:{s.name=t.string();break}case 2:{s.type=I.onnx.TypeProto.decode(t,t.uint32());break}case 3:{s.docString=t.string();break}default:t.skipType(a&7);break}}return s},e.decodeDelimited=function(t){return t instanceof re||(t=new re(t)),this.decode(t,t.uint32())},e.verify=function(t){if(typeof t!="object"||t===null)return"object expected";if(t.name!=null&&t.hasOwnProperty("name")&&!E.isString(t.name))return"name: string expected";if(t.type!=null&&t.hasOwnProperty("type")){var o=I.onnx.TypeProto.verify(t.type);if(o)return"type."+o}return t.docString!=null&&t.hasOwnProperty("docString")&&!E.isString(t.docString)?"docString: string expected":null},e.fromObject=function(t){if(t instanceof I.onnx.ValueInfoProto)return t;var o=new I.onnx.ValueInfoProto;if(t.name!=null&&(o.name=String(t.name)),t.type!=null){if(typeof t.type!="object")throw TypeError(".onnx.ValueInfoProto.type: object expected");o.type=I.onnx.TypeProto.fromObject(t.type)}return t.docString!=null&&(o.docString=String(t.docString)),o},e.toObject=function(t,o){o||(o={});var i={};return o.defaults&&(i.name="",i.type=null,i.docString=""),t.name!=null&&t.hasOwnProperty("name")&&(i.name=t.name),t.type!=null&&t.hasOwnProperty("type")&&(i.type=I.onnx.TypeProto.toObject(t.type,o)),t.docString!=null&&t.hasOwnProperty("docString")&&(i.docString=t.docString),i},e.prototype.toJSON=function(){return this.constructor.toObject(this,lt.util.toJSONOptions)},e.getTypeUrl=function(t){return t===void 0&&(t="type.googleapis.com"),t+"/onnx.ValueInfoProto"},e}(),r.NodeProto=function(){function e(n){if(this.input=[],this.output=[],this.attribute=[],n)for(var t=Object.keys(n),o=0;o<t.length;++o)n[t[o]]!=null&&(this[t[o]]=n[t[o]])}return e.prototype.input=E.emptyArray,e.prototype.output=E.emptyArray,e.prototype.name="",e.prototype.opType="",e.prototype.domain="",e.prototype.attribute=E.emptyArray,e.prototype.docString="",e.create=function(t){return new e(t)},e.encode=function(t,o){if(o||(o=vt.create()),t.input!=null&&t.input.length)for(var i=0;i<t.input.length;++i)o.uint32(10).string(t.input[i]);if(t.output!=null&&t.output.length)for(var i=0;i<t.output.length;++i)o.uint32(18).string(t.output[i]);if(t.name!=null&&Object.hasOwnProperty.call(t,"name")&&o.uint32(26).string(t.name),t.opType!=null&&Object.hasOwnProperty.call(t,"opType")&&o.uint32(34).string(t.opType),t.attribute!=null&&t.attribute.length)for(var i=0;i<t.attribute.length;++i)I.onnx.AttributeProto.encode(t.attribute[i],o.uint32(42).fork()).ldelim();return t.docString!=null&&Object.hasOwnProperty.call(t,"docString")&&o.uint32(50).string(t.docString),t.domain!=null&&Object.hasOwnProperty.call(t,"domain")&&o.uint32(58).string(t.domain),o},e.encodeDelimited=function(t,o){return this.encode(t,o).ldelim()},e.decode=function(t,o){t instanceof re||(t=re.create(t));for(var i=o===void 0?t.len:t.pos+o,s=new I.onnx.NodeProto;t.pos<i;){var a=t.uint32();switch(a>>>3){case 1:{s.input&&s.input.length||(s.input=[]),s.input.push(t.string());break}case 2:{s.output&&s.output.length||(s.output=[]),s.output.push(t.string());break}case 3:{s.name=t.string();break}case 4:{s.opType=t.string();break}case 7:{s.domain=t.string();break}case 5:{s.attribute&&s.attribute.length||(s.attribute=[]),s.attribute.push(I.onnx.AttributeProto.decode(t,t.uint32()));break}case 6:{s.docString=t.string();break}default:t.skipType(a&7);break}}return s},e.decodeDelimited=function(t){return t instanceof re||(t=new re(t)),this.decode(t,t.uint32())},e.verify=function(t){if(typeof t!="object"||t===null)return"object expected";if(t.input!=null&&t.hasOwnProperty("input")){if(!Array.isArray(t.input))return"input: array expected";for(var o=0;o<t.input.length;++o)if(!E.isString(t.input[o]))return"input: string[] expected"}if(t.output!=null&&t.hasOwnProperty("output")){if(!Array.isArray(t.output))return"output: array expected";for(var o=0;o<t.output.length;++o)if(!E.isString(t.output[o]))return"output: string[] expected"}if(t.name!=null&&t.hasOwnProperty("name")&&!E.isString(t.name))return"name: string expected";if(t.opType!=null&&t.hasOwnProperty("opType")&&!E.isString(t.opType))return"opType: string expected";if(t.domain!=null&&t.hasOwnProperty("domain")&&!E.isString(t.domain))return"domain: string expected";if(t.attribute!=null&&t.hasOwnProperty("attribute")){if(!Array.isArray(t.attribute))return"attribute: array expected";for(var o=0;o<t.attribute.length;++o){var i=I.onnx.AttributeProto.verify(t.attribute[o]);if(i)return"attribute."+i}}return t.docString!=null&&t.hasOwnProperty("docString")&&!E.isString(t.docString)?"docString: string expected":null},e.fromObject=function(t){if(t instanceof I.onnx.NodeProto)return t;var o=new I.onnx.NodeProto;if(t.input){if(!Array.isArray(t.input))throw TypeError(".onnx.NodeProto.input: array expected");o.input=[];for(var i=0;i<t.input.length;++i)o.input[i]=String(t.input[i])}if(t.output){if(!Array.isArray(t.output))throw TypeError(".onnx.NodeProto.output: array expected");o.output=[];for(var i=0;i<t.output.length;++i)o.output[i]=String(t.output[i])}if(t.name!=null&&(o.name=String(t.name)),t.opType!=null&&(o.opType=String(t.opType)),t.domain!=null&&(o.domain=String(t.domain)),t.attribute){if(!Array.isArray(t.attribute))throw TypeError(".onnx.NodeProto.attribute: array expected");o.attribute=[];for(var i=0;i<t.attribute.length;++i){if(typeof t.attribute[i]!="object")throw TypeError(".onnx.NodeProto.attribute: object expected");o.attribute[i]=I.onnx.AttributeProto.fromObject(t.attribute[i])}}return t.docString!=null&&(o.docString=String(t.docString)),o},e.toObject=function(t,o){o||(o={});var i={};if((o.arrays||o.defaults)&&(i.input=[],i.output=[],i.attribute=[]),o.defaults&&(i.name="",i.opType="",i.docString="",i.domain=""),t.input&&t.input.length){i.input=[];for(var s=0;s<t.input.length;++s)i.input[s]=t.input[s]}if(t.output&&t.output.length){i.output=[];for(var s=0;s<t.output.length;++s)i.output[s]=t.output[s]}if(t.name!=null&&t.hasOwnProperty("name")&&(i.name=t.name),t.opType!=null&&t.hasOwnProperty("opType")&&(i.opType=t.opType),t.attribute&&t.attribute.length){i.attribute=[];for(var s=0;s<t.attribute.length;++s)i.attribute[s]=I.onnx.AttributeProto.toObject(t.attribute[s],o)}return t.docString!=null&&t.hasOwnProperty("docString")&&(i.docString=t.docString),t.domain!=null&&t.hasOwnProperty("domain")&&(i.domain=t.domain),i},e.prototype.toJSON=function(){return this.constructor.toObject(this,lt.util.toJSONOptions)},e.getTypeUrl=function(t){return t===void 0&&(t="type.googleapis.com"),t+"/onnx.NodeProto"},e}(),r.TrainingInfoProto=function(){function e(n){if(this.initializationBinding=[],this.updateBinding=[],n)for(var t=Object.keys(n),o=0;o<t.length;++o)n[t[o]]!=null&&(this[t[o]]=n[t[o]])}return e.prototype.initialization=null,e.prototype.algorithm=null,e.prototype.initializationBinding=E.emptyArray,e.prototype.updateBinding=E.emptyArray,e.create=function(t){return new e(t)},e.encode=function(t,o){if(o||(o=vt.create()),t.initialization!=null&&Object.hasOwnProperty.call(t,"initialization")&&I.onnx.GraphProto.encode(t.initialization,o.uint32(10).fork()).ldelim(),t.algorithm!=null&&Object.hasOwnProperty.call(t,"algorithm")&&I.onnx.GraphProto.encode(t.algorithm,o.uint32(18).fork()).ldelim(),t.initializationBinding!=null&&t.initializationBinding.length)for(var i=0;i<t.initializationBinding.length;++i)I.onnx.StringStringEntryProto.encode(t.initializationBinding[i],o.uint32(26).fork()).ldelim();if(t.updateBinding!=null&&t.updateBinding.length)for(var i=0;i<t.updateBinding.length;++i)I.onnx.StringStringEntryProto.encode(t.updateBinding[i],o.uint32(34).fork()).ldelim();return o},e.encodeDelimited=function(t,o){return this.encode(t,o).ldelim()},e.decode=function(t,o){t instanceof re||(t=re.create(t));for(var i=o===void 0?t.len:t.pos+o,s=new I.onnx.TrainingInfoProto;t.pos<i;){var a=t.uint32();switch(a>>>3){case 1:{s.initialization=I.onnx.GraphProto.decode(t,t.uint32());break}case 2:{s.algorithm=I.onnx.GraphProto.decode(t,t.uint32());break}case 3:{s.initializationBinding&&s.initializationBinding.length||(s.initializationBinding=[]),s.initializationBinding.push(I.onnx.StringStringEntryProto.decode(t,t.uint32()));break}case 4:{s.updateBinding&&s.updateBinding.length||(s.updateBinding=[]),s.updateBinding.push(I.onnx.StringStringEntryProto.decode(t,t.uint32()));break}default:t.skipType(a&7);break}}return s},e.decodeDelimited=function(t){return t instanceof re||(t=new re(t)),this.decode(t,t.uint32())},e.verify=function(t){if(typeof t!="object"||t===null)return"object expected";if(t.initialization!=null&&t.hasOwnProperty("initialization")){var o=I.onnx.GraphProto.verify(t.initialization);if(o)return"initialization."+o}if(t.algorithm!=null&&t.hasOwnProperty("algorithm")){var o=I.onnx.GraphProto.verify(t.algorithm);if(o)return"algorithm."+o}if(t.initializationBinding!=null&&t.hasOwnProperty("initializationBinding")){if(!Array.isArray(t.initializationBinding))return"initializationBinding: array expected";for(var i=0;i<t.initializationBinding.length;++i){var o=I.onnx.StringStringEntryProto.verify(t.initializationBinding[i]);if(o)return"initializationBinding."+o}}if(t.updateBinding!=null&&t.hasOwnProperty("updateBinding")){if(!Array.isArray(t.updateBinding))return"updateBinding: array expected";for(var i=0;i<t.updateBinding.length;++i){var o=I.onnx.StringStringEntryProto.verify(t.updateBinding[i]);if(o)return"updateBinding."+o}}return null},e.fromObject=function(t){if(t instanceof I.onnx.TrainingInfoProto)return t;var o=new I.onnx.TrainingInfoProto;if(t.initialization!=null){if(typeof t.initialization!="object")throw TypeError(".onnx.TrainingInfoProto.initialization: object expected");o.initialization=I.onnx.GraphProto.fromObject(t.initialization)}if(t.algorithm!=null){if(typeof t.algorithm!="object")throw TypeError(".onnx.TrainingInfoProto.algorithm: object expected");o.algorithm=I.onnx.GraphProto.fromObject(t.algorithm)}if(t.initializationBinding){if(!Array.isArray(t.initializationBinding))throw TypeError(".onnx.TrainingInfoProto.initializationBinding: array expected");o.initializationBinding=[];for(var i=0;i<t.initializationBinding.length;++i){if(typeof t.initializationBinding[i]!="object")throw TypeError(".onnx.TrainingInfoProto.initializationBinding: object expected");o.initializationBinding[i]=I.onnx.StringStringEntryProto.fromObject(t.initializationBinding[i])}}if(t.updateBinding){if(!Array.isArray(t.updateBinding))throw TypeError(".onnx.TrainingInfoProto.updateBinding: array expected");o.updateBinding=[];for(var i=0;i<t.updateBinding.length;++i){if(typeof t.updateBinding[i]!="object")throw TypeError(".onnx.TrainingInfoProto.updateBinding: object expected");o.updateBinding[i]=I.onnx.StringStringEntryProto.fromObject(t.updateBinding[i])}}return o},e.toObject=function(t,o){o||(o={});var i={};if((o.arrays||o.defaults)&&(i.initializationBinding=[],i.updateBinding=[]),o.defaults&&(i.initialization=null,i.algorithm=null),t.initialization!=null&&t.hasOwnProperty("initialization")&&(i.initialization=I.onnx.GraphProto.toObject(t.initialization,o)),t.algorithm!=null&&t.hasOwnProperty("algorithm")&&(i.algorithm=I.onnx.GraphProto.toObject(t.algorithm,o)),t.initializationBinding&&t.initializationBinding.length){i.initializationBinding=[];for(var s=0;s<t.initializationBinding.length;++s)i.initializationBinding[s]=I.onnx.StringStringEntryProto.toObject(t.initializationBinding[s],o)}if(t.updateBinding&&t.updateBinding.length){i.updateBinding=[];for(var s=0;s<t.updateBinding.length;++s)i.updateBinding[s]=I.onnx.StringStringEntryProto.toObject(t.updateBinding[s],o)}return i},e.prototype.toJSON=function(){return this.constructor.toObject(this,lt.util.toJSONOptions)},e.getTypeUrl=function(t){return t===void 0&&(t="type.googleapis.com"),t+"/onnx.TrainingInfoProto"},e}(),r.ModelProto=function(){function e(n){if(this.opsetImport=[],this.metadataProps=[],this.trainingInfo=[],this.functions=[],n)for(var t=Object.keys(n),o=0;o<t.length;++o)n[t[o]]!=null&&(this[t[o]]=n[t[o]])}return e.prototype.irVersion=E.Long?E.Long.fromBits(0,0,!1):0,e.prototype.opsetImport=E.emptyArray,e.prototype.producerName="",e.prototype.producerVersion="",e.prototype.domain="",e.prototype.modelVersion=E.Long?E.Long.fromBits(0,0,!1):0,e.prototype.docString="",e.prototype.graph=null,e.prototype.metadataProps=E.emptyArray,e.prototype.trainingInfo=E.emptyArray,e.prototype.functions=E.emptyArray,e.create=function(t){return new e(t)},e.encode=function(t,o){if(o||(o=vt.create()),t.irVersion!=null&&Object.hasOwnProperty.call(t,"irVersion")&&o.uint32(8).int64(t.irVersion),t.producerName!=null&&Object.hasOwnProperty.call(t,"producerName")&&o.uint32(18).string(t.producerName),t.producerVersion!=null&&Object.hasOwnProperty.call(t,"producerVersion")&&o.uint32(26).string(t.producerVersion),t.domain!=null&&Object.hasOwnProperty.call(t,"domain")&&o.uint32(34).string(t.domain),t.modelVersion!=null&&Object.hasOwnProperty.call(t,"modelVersion")&&o.uint32(40).int64(t.modelVersion),t.docString!=null&&Object.hasOwnProperty.call(t,"docString")&&o.uint32(50).string(t.docString),t.graph!=null&&Object.hasOwnProperty.call(t,"graph")&&I.onnx.GraphProto.encode(t.graph,o.uint32(58).fork()).ldelim(),t.opsetImport!=null&&t.opsetImport.length)for(var i=0;i<t.opsetImport.length;++i)I.onnx.OperatorSetIdProto.encode(t.opsetImport[i],o.uint32(66).fork()).ldelim();if(t.metadataProps!=null&&t.metadataProps.length)for(var i=0;i<t.metadataProps.length;++i)I.onnx.StringStringEntryProto.encode(t.metadataProps[i],o.uint32(114).fork()).ldelim();if(t.trainingInfo!=null&&t.trainingInfo.length)for(var i=0;i<t.trainingInfo.length;++i)I.onnx.TrainingInfoProto.encode(t.trainingInfo[i],o.uint32(162).fork()).ldelim();if(t.functions!=null&&t.functions.length)for(var i=0;i<t.functions.length;++i)I.onnx.FunctionProto.encode(t.functions[i],o.uint32(202).fork()).ldelim();return o},e.encodeDelimited=function(t,o){return this.encode(t,o).ldelim()},e.decode=function(t,o){t instanceof re||(t=re.create(t));for(var i=o===void 0?t.len:t.pos+o,s=new I.onnx.ModelProto;t.pos<i;){var a=t.uint32();switch(a>>>3){case 1:{s.irVersion=t.int64();break}case 8:{s.opsetImport&&s.opsetImport.length||(s.opsetImport=[]),s.opsetImport.push(I.onnx.OperatorSetIdProto.decode(t,t.uint32()));break}case 2:{s.producerName=t.string();break}case 3:{s.producerVersion=t.string();break}case 4:{s.domain=t.string();break}case 5:{s.modelVersion=t.int64();break}case 6:{s.docString=t.string();break}case 7:{s.graph=I.onnx.GraphProto.decode(t,t.uint32());break}case 14:{s.metadataProps&&s.metadataProps.length||(s.metadataProps=[]),s.metadataProps.push(I.onnx.StringStringEntryProto.decode(t,t.uint32()));break}case 20:{s.trainingInfo&&s.trainingInfo.length||(s.trainingInfo=[]),s.trainingInfo.push(I.onnx.TrainingInfoProto.decode(t,t.uint32()));break}case 25:{s.functions&&s.functions.length||(s.functions=[]),s.functions.push(I.onnx.FunctionProto.decode(t,t.uint32()));break}default:t.skipType(a&7);break}}return s},e.decodeDelimited=function(t){return t instanceof re||(t=new re(t)),this.decode(t,t.uint32())},e.verify=function(t){if(typeof t!="object"||t===null)return"object expected";if(t.irVersion!=null&&t.hasOwnProperty("irVersion")&&!E.isInteger(t.irVersion)&&!(t.irVersion&&E.isInteger(t.irVersion.low)&&E.isInteger(t.irVersion.high)))return"irVersion: integer|Long expected";if(t.opsetImport!=null&&t.hasOwnProperty("opsetImport")){if(!Array.isArray(t.opsetImport))return"opsetImport: array expected";for(var o=0;o<t.opsetImport.length;++o){var i=I.onnx.OperatorSetIdProto.verify(t.opsetImport[o]);if(i)return"opsetImport."+i}}if(t.producerName!=null&&t.hasOwnProperty("producerName")&&!E.isString(t.producerName))return"producerName: string expected";if(t.producerVersion!=null&&t.hasOwnProperty("producerVersion")&&!E.isString(t.producerVersion))return"producerVersion: string expected";if(t.domain!=null&&t.hasOwnProperty("domain")&&!E.isString(t.domain))return"domain: string expected";if(t.modelVersion!=null&&t.hasOwnProperty("modelVersion")&&!E.isInteger(t.modelVersion)&&!(t.modelVersion&&E.isInteger(t.modelVersion.low)&&E.isInteger(t.modelVersion.high)))return"modelVersion: integer|Long expected";if(t.docString!=null&&t.hasOwnProperty("docString")&&!E.isString(t.docString))return"docString: string expected";if(t.graph!=null&&t.hasOwnProperty("graph")){var i=I.onnx.GraphProto.verify(t.graph);if(i)return"graph."+i}if(t.metadataProps!=null&&t.hasOwnProperty("metadataProps")){if(!Array.isArray(t.metadataProps))return"metadataProps: array expected";for(var o=0;o<t.metadataProps.length;++o){var i=I.onnx.StringStringEntryProto.verify(t.metadataProps[o]);if(i)return"metadataProps."+i}}if(t.trainingInfo!=null&&t.hasOwnProperty("trainingInfo")){if(!Array.isArray(t.trainingInfo))return"trainingInfo: array expected";for(var o=0;o<t.trainingInfo.length;++o){var i=I.onnx.TrainingInfoProto.verify(t.trainingInfo[o]);if(i)return"trainingInfo."+i}}if(t.functions!=null&&t.hasOwnProperty("functions")){if(!Array.isArray(t.functions))return"functions: array expected";for(var o=0;o<t.functions.length;++o){var i=I.onnx.FunctionProto.verify(t.functions[o]);if(i)return"functions."+i}}return null},e.fromObject=function(t){if(t instanceof I.onnx.ModelProto)return t;var o=new I.onnx.ModelProto;if(t.irVersion!=null&&(E.Long?(o.irVersion=E.Long.fromValue(t.irVersion)).unsigned=!1:typeof t.irVersion=="string"?o.irVersion=parseInt(t.irVersion,10):typeof t.irVersion=="number"?o.irVersion=t.irVersion:typeof t.irVersion=="object"&&(o.irVersion=new E.LongBits(t.irVersion.low>>>0,t.irVersion.high>>>0).toNumber())),t.opsetImport){if(!Array.isArray(t.opsetImport))throw TypeError(".onnx.ModelProto.opsetImport: array expected");o.opsetImport=[];for(var i=0;i<t.opsetImport.length;++i){if(typeof t.opsetImport[i]!="object")throw TypeError(".onnx.ModelProto.opsetImport: object expected");o.opsetImport[i]=I.onnx.OperatorSetIdProto.fromObject(t.opsetImport[i])}}if(t.producerName!=null&&(o.producerName=String(t.producerName)),t.producerVersion!=null&&(o.producerVersion=String(t.producerVersion)),t.domain!=null&&(o.domain=String(t.domain)),t.modelVersion!=null&&(E.Long?(o.modelVersion=E.Long.fromValue(t.modelVersion)).unsigned=!1:typeof t.modelVersion=="string"?o.modelVersion=parseInt(t.modelVersion,10):typeof t.modelVersion=="number"?o.modelVersion=t.modelVersion:typeof t.modelVersion=="object"&&(o.modelVersion=new E.LongBits(t.modelVersion.low>>>0,t.modelVersion.high>>>0).toNumber())),t.docString!=null&&(o.docString=String(t.docString)),t.graph!=null){if(typeof t.graph!="object")throw TypeError(".onnx.ModelProto.graph: object expected");o.graph=I.onnx.GraphProto.fromObject(t.graph)}if(t.metadataProps){if(!Array.isArray(t.metadataProps))throw TypeError(".onnx.ModelProto.metadataProps: array expected");o.metadataProps=[];for(var i=0;i<t.metadataProps.length;++i){if(typeof t.metadataProps[i]!="object")throw TypeError(".onnx.ModelProto.metadataProps: object expected");o.metadataProps[i]=I.onnx.StringStringEntryProto.fromObject(t.metadataProps[i])}}if(t.trainingInfo){if(!Array.isArray(t.trainingInfo))throw TypeError(".onnx.ModelProto.trainingInfo: array expected");o.trainingInfo=[];for(var i=0;i<t.trainingInfo.length;++i){if(typeof t.trainingInfo[i]!="object")throw TypeError(".onnx.ModelProto.trainingInfo: object expected");o.trainingInfo[i]=I.onnx.TrainingInfoProto.fromObject(t.trainingInfo[i])}}if(t.functions){if(!Array.isArray(t.functions))throw TypeError(".onnx.ModelProto.functions: array expected");o.functions=[];for(var i=0;i<t.functions.length;++i){if(typeof t.functions[i]!="object")throw TypeError(".onnx.ModelProto.functions: object expected");o.functions[i]=I.onnx.FunctionProto.fromObject(t.functions[i])}}return o},e.toObject=function(t,o){o||(o={});var i={};if((o.arrays||o.defaults)&&(i.opsetImport=[],i.metadataProps=[],i.trainingInfo=[],i.functions=[]),o.defaults){if(E.Long){var s=new E.Long(0,0,!1);i.irVersion=o.longs===String?s.toString():o.longs===Number?s.toNumber():s}else i.irVersion=o.longs===String?"0":0;if(i.producerName="",i.producerVersion="",i.domain="",E.Long){var s=new E.Long(0,0,!1);i.modelVersion=o.longs===String?s.toString():o.longs===Number?s.toNumber():s}else i.modelVersion=o.longs===String?"0":0;i.docString="",i.graph=null}if(t.irVersion!=null&&t.hasOwnProperty("irVersion")&&(typeof t.irVersion=="number"?i.irVersion=o.longs===String?String(t.irVersion):t.irVersion:i.irVersion=o.longs===String?E.Long.prototype.toString.call(t.irVersion):o.longs===Number?new E.LongBits(t.irVersion.low>>>0,t.irVersion.high>>>0).toNumber():t.irVersion),t.producerName!=null&&t.hasOwnProperty("producerName")&&(i.producerName=t.producerName),t.producerVersion!=null&&t.hasOwnProperty("producerVersion")&&(i.producerVersion=t.producerVersion),t.domain!=null&&t.hasOwnProperty("domain")&&(i.domain=t.domain),t.modelVersion!=null&&t.hasOwnProperty("modelVersion")&&(typeof t.modelVersion=="number"?i.modelVersion=o.longs===String?String(t.modelVersion):t.modelVersion:i.modelVersion=o.longs===String?E.Long.prototype.toString.call(t.modelVersion):o.longs===Number?new E.LongBits(t.modelVersion.low>>>0,t.modelVersion.high>>>0).toNumber():t.modelVersion),t.docString!=null&&t.hasOwnProperty("docString")&&(i.docString=t.docString),t.graph!=null&&t.hasOwnProperty("graph")&&(i.graph=I.onnx.GraphProto.toObject(t.graph,o)),t.opsetImport&&t.opsetImport.length){i.opsetImport=[];for(var a=0;a<t.opsetImport.length;++a)i.opsetImport[a]=I.onnx.OperatorSetIdProto.toObject(t.opsetImport[a],o)}if(t.metadataProps&&t.metadataProps.length){i.metadataProps=[];for(var a=0;a<t.metadataProps.length;++a)i.metadataProps[a]=I.onnx.StringStringEntryProto.toObject(t.metadataProps[a],o)}if(t.trainingInfo&&t.trainingInfo.length){i.trainingInfo=[];for(var a=0;a<t.trainingInfo.length;++a)i.trainingInfo[a]=I.onnx.TrainingInfoProto.toObject(t.trainingInfo[a],o)}if(t.functions&&t.functions.length){i.functions=[];for(var a=0;a<t.functions.length;++a)i.functions[a]=I.onnx.FunctionProto.toObject(t.functions[a],o)}return i},e.prototype.toJSON=function(){return this.constructor.toObject(this,lt.util.toJSONOptions)},e.getTypeUrl=function(t){return t===void 0&&(t="type.googleapis.com"),t+"/onnx.ModelProto"},e}(),r.StringStringEntryProto=function(){function e(n){if(n)for(var t=Object.keys(n),o=0;o<t.length;++o)n[t[o]]!=null&&(this[t[o]]=n[t[o]])}return e.prototype.key="",e.prototype.value="",e.create=function(t){return new e(t)},e.encode=function(t,o){return o||(o=vt.create()),t.key!=null&&Object.hasOwnProperty.call(t,"key")&&o.uint32(10).string(t.key),t.value!=null&&Object.hasOwnProperty.call(t,"value")&&o.uint32(18).string(t.value),o},e.encodeDelimited=function(t,o){return this.encode(t,o).ldelim()},e.decode=function(t,o){t instanceof re||(t=re.create(t));for(var i=o===void 0?t.len:t.pos+o,s=new I.onnx.StringStringEntryProto;t.pos<i;){var a=t.uint32();switch(a>>>3){case 1:{s.key=t.string();break}case 2:{s.value=t.string();break}default:t.skipType(a&7);break}}return s},e.decodeDelimited=function(t){return t instanceof re||(t=new re(t)),this.decode(t,t.uint32())},e.verify=function(t){return typeof t!="object"||t===null?"object expected":t.key!=null&&t.hasOwnProperty("key")&&!E.isString(t.key)?"key: string expected":t.value!=null&&t.hasOwnProperty("value")&&!E.isString(t.value)?"value: string expected":null},e.fromObject=function(t){if(t instanceof I.onnx.StringStringEntryProto)return t;var o=new I.onnx.StringStringEntryProto;return t.key!=null&&(o.key=String(t.key)),t.value!=null&&(o.value=String(t.value)),o},e.toObject=function(t,o){o||(o={});var i={};return o.defaults&&(i.key="",i.value=""),t.key!=null&&t.hasOwnProperty("key")&&(i.key=t.key),t.value!=null&&t.hasOwnProperty("value")&&(i.value=t.value),i},e.prototype.toJSON=function(){return this.constructor.toObject(this,lt.util.toJSONOptions)},e.getTypeUrl=function(t){return t===void 0&&(t="type.googleapis.com"),t+"/onnx.StringStringEntryProto"},e}(),r.TensorAnnotation=function(){function e(n){if(this.quantParameterTensorNames=[],n)for(var t=Object.keys(n),o=0;o<t.length;++o)n[t[o]]!=null&&(this[t[o]]=n[t[o]])}return e.prototype.tensorName="",e.prototype.quantParameterTensorNames=E.emptyArray,e.create=function(t){return new e(t)},e.encode=function(t,o){if(o||(o=vt.create()),t.tensorName!=null&&Object.hasOwnProperty.call(t,"tensorName")&&o.uint32(10).string(t.tensorName),t.quantParameterTensorNames!=null&&t.quantParameterTensorNames.length)for(var i=0;i<t.quantParameterTensorNames.length;++i)I.onnx.StringStringEntryProto.encode(t.quantParameterTensorNames[i],o.uint32(18).fork()).ldelim();return o},e.encodeDelimited=function(t,o){return this.encode(t,o).ldelim()},e.decode=function(t,o){t instanceof re||(t=re.create(t));for(var i=o===void 0?t.len:t.pos+o,s=new I.onnx.TensorAnnotation;t.pos<i;){var a=t.uint32();switch(a>>>3){case 1:{s.tensorName=t.string();break}case 2:{s.quantParameterTensorNames&&s.quantParameterTensorNames.length||(s.quantParameterTensorNames=[]),s.quantParameterTensorNames.push(I.onnx.StringStringEntryProto.decode(t,t.uint32()));break}default:t.skipType(a&7);break}}return s},e.decodeDelimited=function(t){return t instanceof re||(t=new re(t)),this.decode(t,t.uint32())},e.verify=function(t){if(typeof t!="object"||t===null)return"object expected";if(t.tensorName!=null&&t.hasOwnProperty("tensorName")&&!E.isString(t.tensorName))return"tensorName: string expected";if(t.quantParameterTensorNames!=null&&t.hasOwnProperty("quantParameterTensorNames")){if(!Array.isArray(t.quantParameterTensorNames))return"quantParameterTensorNames: array expected";for(var o=0;o<t.quantParameterTensorNames.length;++o){var i=I.onnx.StringStringEntryProto.verify(t.quantParameterTensorNames[o]);if(i)return"quantParameterTensorNames."+i}}return null},e.fromObject=function(t){if(t instanceof I.onnx.TensorAnnotation)return t;var o=new I.onnx.TensorAnnotation;if(t.tensorName!=null&&(o.tensorName=String(t.tensorName)),t.quantParameterTensorNames){if(!Array.isArray(t.quantParameterTensorNames))throw TypeError(".onnx.TensorAnnotation.quantParameterTensorNames: array expected");o.quantParameterTensorNames=[];for(var i=0;i<t.quantParameterTensorNames.length;++i){if(typeof t.quantParameterTensorNames[i]!="object")throw TypeError(".onnx.TensorAnnotation.quantParameterTensorNames: object expected");o.quantParameterTensorNames[i]=I.onnx.StringStringEntryProto.fromObject(t.quantParameterTensorNames[i])}}return o},e.toObject=function(t,o){o||(o={});var i={};if((o.arrays||o.defaults)&&(i.quantParameterTensorNames=[]),o.defaults&&(i.tensorName=""),t.tensorName!=null&&t.hasOwnProperty("tensorName")&&(i.tensorName=t.tensorName),t.quantParameterTensorNames&&t.quantParameterTensorNames.length){i.quantParameterTensorNames=[];for(var s=0;s<t.quantParameterTensorNames.length;++s)i.quantParameterTensorNames[s]=I.onnx.StringStringEntryProto.toObject(t.quantParameterTensorNames[s],o)}return i},e.prototype.toJSON=function(){return this.constructor.toObject(this,lt.util.toJSONOptions)},e.getTypeUrl=function(t){return t===void 0&&(t="type.googleapis.com"),t+"/onnx.TensorAnnotation"},e}(),r.GraphProto=function(){function e(n){if(this.node=[],this.initializer=[],this.sparseInitializer=[],this.input=[],this.output=[],this.valueInfo=[],this.quantizationAnnotation=[],n)for(var t=Object.keys(n),o=0;o<t.length;++o)n[t[o]]!=null&&(this[t[o]]=n[t[o]])}return e.prototype.node=E.emptyArray,e.prototype.name="",e.prototype.initializer=E.emptyArray,e.prototype.sparseInitializer=E.emptyArray,e.prototype.docString="",e.prototype.input=E.emptyArray,e.prototype.output=E.emptyArray,e.prototype.valueInfo=E.emptyArray,e.prototype.quantizationAnnotation=E.emptyArray,e.create=function(t){return new e(t)},e.encode=function(t,o){if(o||(o=vt.create()),t.node!=null&&t.node.length)for(var i=0;i<t.node.length;++i)I.onnx.NodeProto.encode(t.node[i],o.uint32(10).fork()).ldelim();if(t.name!=null&&Object.hasOwnProperty.call(t,"name")&&o.uint32(18).string(t.name),t.initializer!=null&&t.initializer.length)for(var i=0;i<t.initializer.length;++i)I.onnx.TensorProto.encode(t.initializer[i],o.uint32(42).fork()).ldelim();if(t.docString!=null&&Object.hasOwnProperty.call(t,"docString")&&o.uint32(82).string(t.docString),t.input!=null&&t.input.length)for(var i=0;i<t.input.length;++i)I.onnx.ValueInfoProto.encode(t.input[i],o.uint32(90).fork()).ldelim();if(t.output!=null&&t.output.length)for(var i=0;i<t.output.length;++i)I.onnx.ValueInfoProto.encode(t.output[i],o.uint32(98).fork()).ldelim();if(t.valueInfo!=null&&t.valueInfo.length)for(var i=0;i<t.valueInfo.length;++i)I.onnx.ValueInfoProto.encode(t.valueInfo[i],o.uint32(106).fork()).ldelim();if(t.quantizationAnnotation!=null&&t.quantizationAnnotation.length)for(var i=0;i<t.quantizationAnnotation.length;++i)I.onnx.TensorAnnotation.encode(t.quantizationAnnotation[i],o.uint32(114).fork()).ldelim();if(t.sparseInitializer!=null&&t.sparseInitializer.length)for(var i=0;i<t.sparseInitializer.length;++i)I.onnx.SparseTensorProto.encode(t.sparseInitializer[i],o.uint32(122).fork()).ldelim();return o},e.encodeDelimited=function(t,o){return this.encode(t,o).ldelim()},e.decode=function(t,o){t instanceof re||(t=re.create(t));for(var i=o===void 0?t.len:t.pos+o,s=new I.onnx.GraphProto;t.pos<i;){var a=t.uint32();switch(a>>>3){case 1:{s.node&&s.node.length||(s.node=[]),s.node.push(I.onnx.NodeProto.decode(t,t.uint32()));break}case 2:{s.name=t.string();break}case 5:{s.initializer&&s.initializer.length||(s.initializer=[]),s.initializer.push(I.onnx.TensorProto.decode(t,t.uint32()));break}case 15:{s.sparseInitializer&&s.sparseInitializer.length||(s.sparseInitializer=[]),s.sparseInitializer.push(I.onnx.SparseTensorProto.decode(t,t.uint32()));break}case 10:{s.docString=t.string();break}case 11:{s.input&&s.input.length||(s.input=[]),s.input.push(I.onnx.ValueInfoProto.decode(t,t.uint32()));break}case 12:{s.output&&s.output.length||(s.output=[]),s.output.push(I.onnx.ValueInfoProto.decode(t,t.uint32()));break}case 13:{s.valueInfo&&s.valueInfo.length||(s.valueInfo=[]),s.valueInfo.push(I.onnx.ValueInfoProto.decode(t,t.uint32()));break}case 14:{s.quantizationAnnotation&&s.quantizationAnnotation.length||(s.quantizationAnnotation=[]),s.quantizationAnnotation.push(I.onnx.TensorAnnotation.decode(t,t.uint32()));break}default:t.skipType(a&7);break}}return s},e.decodeDelimited=function(t){return t instanceof re||(t=new re(t)),this.decode(t,t.uint32())},e.verify=function(t){if(typeof t!="object"||t===null)return"object expected";if(t.node!=null&&t.hasOwnProperty("node")){if(!Array.isArray(t.node))return"node: array expected";for(var o=0;o<t.node.length;++o){var i=I.onnx.NodeProto.verify(t.node[o]);if(i)return"node."+i}}if(t.name!=null&&t.hasOwnProperty("name")&&!E.isString(t.name))return"name: string expected";if(t.initializer!=null&&t.hasOwnProperty("initializer")){if(!Array.isArray(t.initializer))return"initializer: array expected";for(var o=0;o<t.initializer.length;++o){var i=I.onnx.TensorProto.verify(t.initializer[o]);if(i)return"initializer."+i}}if(t.sparseInitializer!=null&&t.hasOwnProperty("sparseInitializer")){if(!Array.isArray(t.sparseInitializer))return"sparseInitializer: array expected";for(var o=0;o<t.sparseInitializer.length;++o){var i=I.onnx.SparseTensorProto.verify(t.sparseInitializer[o]);if(i)return"sparseInitializer."+i}}if(t.docString!=null&&t.hasOwnProperty("docString")&&!E.isString(t.docString))return"docString: string expected";if(t.input!=null&&t.hasOwnProperty("input")){if(!Array.isArray(t.input))return"input: array expected";for(var o=0;o<t.input.length;++o){var i=I.onnx.ValueInfoProto.verify(t.input[o]);if(i)return"input."+i}}if(t.output!=null&&t.hasOwnProperty("output")){if(!Array.isArray(t.output))return"output: array expected";for(var o=0;o<t.output.length;++o){var i=I.onnx.ValueInfoProto.verify(t.output[o]);if(i)return"output."+i}}if(t.valueInfo!=null&&t.hasOwnProperty("valueInfo")){if(!Array.isArray(t.valueInfo))return"valueInfo: array expected";for(var o=0;o<t.valueInfo.length;++o){var i=I.onnx.ValueInfoProto.verify(t.valueInfo[o]);if(i)return"valueInfo."+i}}if(t.quantizationAnnotation!=null&&t.hasOwnProperty("quantizationAnnotation")){if(!Array.isArray(t.quantizationAnnotation))return"quantizationAnnotation: array expected";for(var o=0;o<t.quantizationAnnotation.length;++o){var i=I.onnx.TensorAnnotation.verify(t.quantizationAnnotation[o]);if(i)return"quantizationAnnotation."+i}}return null},e.fromObject=function(t){if(t instanceof I.onnx.GraphProto)return t;var o=new I.onnx.GraphProto;if(t.node){if(!Array.isArray(t.node))throw TypeError(".onnx.GraphProto.node: array expected");o.node=[];for(var i=0;i<t.node.length;++i){if(typeof t.node[i]!="object")throw TypeError(".onnx.GraphProto.node: object expected");o.node[i]=I.onnx.NodeProto.fromObject(t.node[i])}}if(t.name!=null&&(o.name=String(t.name)),t.initializer){if(!Array.isArray(t.initializer))throw TypeError(".onnx.GraphProto.initializer: array expected");o.initializer=[];for(var i=0;i<t.initializer.length;++i){if(typeof t.initializer[i]!="object")throw TypeError(".onnx.GraphProto.initializer: object expected");o.initializer[i]=I.onnx.TensorProto.fromObject(t.initializer[i])}}if(t.sparseInitializer){if(!Array.isArray(t.sparseInitializer))throw TypeError(".onnx.GraphProto.sparseInitializer: array expected");o.sparseInitializer=[];for(var i=0;i<t.sparseInitializer.length;++i){if(typeof t.sparseInitializer[i]!="object")throw TypeError(".onnx.GraphProto.sparseInitializer: object expected");o.sparseInitializer[i]=I.onnx.SparseTensorProto.fromObject(t.sparseInitializer[i])}}if(t.docString!=null&&(o.docString=String(t.docString)),t.input){if(!Array.isArray(t.input))throw TypeError(".onnx.GraphProto.input: array expected");o.input=[];for(var i=0;i<t.input.length;++i){if(typeof t.input[i]!="object")throw TypeError(".onnx.GraphProto.input: object expected");o.input[i]=I.onnx.ValueInfoProto.fromObject(t.input[i])}}if(t.output){if(!Array.isArray(t.output))throw TypeError(".onnx.GraphProto.output: array expected");o.output=[];for(var i=0;i<t.output.length;++i){if(typeof t.output[i]!="object")throw TypeError(".onnx.GraphProto.output: object expected");o.output[i]=I.onnx.ValueInfoProto.fromObject(t.output[i])}}if(t.valueInfo){if(!Array.isArray(t.valueInfo))throw TypeError(".onnx.GraphProto.valueInfo: array expected");o.valueInfo=[];for(var i=0;i<t.valueInfo.length;++i){if(typeof t.valueInfo[i]!="object")throw TypeError(".onnx.GraphProto.valueInfo: object expected");o.valueInfo[i]=I.onnx.ValueInfoProto.fromObject(t.valueInfo[i])}}if(t.quantizationAnnotation){if(!Array.isArray(t.quantizationAnnotation))throw TypeError(".onnx.GraphProto.quantizationAnnotation: array expected");o.quantizationAnnotation=[];for(var i=0;i<t.quantizationAnnotation.length;++i){if(typeof t.quantizationAnnotation[i]!="object")throw TypeError(".onnx.GraphProto.quantizationAnnotation: object expected");o.quantizationAnnotation[i]=I.onnx.TensorAnnotation.fromObject(t.quantizationAnnotation[i])}}return o},e.toObject=function(t,o){o||(o={});var i={};if((o.arrays||o.defaults)&&(i.node=[],i.initializer=[],i.input=[],i.output=[],i.valueInfo=[],i.quantizationAnnotation=[],i.sparseInitializer=[]),o.defaults&&(i.name="",i.docString=""),t.node&&t.node.length){i.node=[];for(var s=0;s<t.node.length;++s)i.node[s]=I.onnx.NodeProto.toObject(t.node[s],o)}if(t.name!=null&&t.hasOwnProperty("name")&&(i.name=t.name),t.initializer&&t.initializer.length){i.initializer=[];for(var s=0;s<t.initializer.length;++s)i.initializer[s]=I.onnx.TensorProto.toObject(t.initializer[s],o)}if(t.docString!=null&&t.hasOwnProperty("docString")&&(i.docString=t.docString),t.input&&t.input.length){i.input=[];for(var s=0;s<t.input.length;++s)i.input[s]=I.onnx.ValueInfoProto.toObject(t.input[s],o)}if(t.output&&t.output.length){i.output=[];for(var s=0;s<t.output.length;++s)i.output[s]=I.onnx.ValueInfoProto.toObject(t.output[s],o)}if(t.valueInfo&&t.valueInfo.length){i.valueInfo=[];for(var s=0;s<t.valueInfo.length;++s)i.valueInfo[s]=I.onnx.ValueInfoProto.toObject(t.valueInfo[s],o)}if(t.quantizationAnnotation&&t.quantizationAnnotation.length){i.quantizationAnnotation=[];for(var s=0;s<t.quantizationAnnotation.length;++s)i.quantizationAnnotation[s]=I.onnx.TensorAnnotation.toObject(t.quantizationAnnotation[s],o)}if(t.sparseInitializer&&t.sparseInitializer.length){i.sparseInitializer=[];for(var s=0;s<t.sparseInitializer.length;++s)i.sparseInitializer[s]=I.onnx.SparseTensorProto.toObject(t.sparseInitializer[s],o)}return i},e.prototype.toJSON=function(){return this.constructor.toObject(this,lt.util.toJSONOptions)},e.getTypeUrl=function(t){return t===void 0&&(t="type.googleapis.com"),t+"/onnx.GraphProto"},e}(),r.TensorProto=function(){function e(n){if(this.dims=[],this.floatData=[],this.int32Data=[],this.stringData=[],this.int64Data=[],this.externalData=[],this.doubleData=[],this.uint64Data=[],n)for(var t=Object.keys(n),o=0;o<t.length;++o)n[t[o]]!=null&&(this[t[o]]=n[t[o]])}return e.prototype.dims=E.emptyArray,e.prototype.dataType=0,e.prototype.segment=null,e.prototype.floatData=E.emptyArray,e.prototype.int32Data=E.emptyArray,e.prototype.stringData=E.emptyArray,e.prototype.int64Data=E.emptyArray,e.prototype.name="",e.prototype.docString="",e.prototype.rawData=E.newBuffer([]),e.prototype.externalData=E.emptyArray,e.prototype.dataLocation=0,e.prototype.doubleData=E.emptyArray,e.prototype.uint64Data=E.emptyArray,e.create=function(t){return new e(t)},e.encode=function(t,o){if(o||(o=vt.create()),t.dims!=null&&t.dims.length){o.uint32(10).fork();for(var i=0;i<t.dims.length;++i)o.int64(t.dims[i]);o.ldelim()}if(t.dataType!=null&&Object.hasOwnProperty.call(t,"dataType")&&o.uint32(16).int32(t.dataType),t.segment!=null&&Object.hasOwnProperty.call(t,"segment")&&I.onnx.TensorProto.Segment.encode(t.segment,o.uint32(26).fork()).ldelim(),t.floatData!=null&&t.floatData.length){o.uint32(34).fork();for(var i=0;i<t.floatData.length;++i)o.float(t.floatData[i]);o.ldelim()}if(t.int32Data!=null&&t.int32Data.length){o.uint32(42).fork();for(var i=0;i<t.int32Data.length;++i)o.int32(t.int32Data[i]);o.ldelim()}if(t.stringData!=null&&t.stringData.length)for(var i=0;i<t.stringData.length;++i)o.uint32(50).bytes(t.stringData[i]);if(t.int64Data!=null&&t.int64Data.length){o.uint32(58).fork();for(var i=0;i<t.int64Data.length;++i)o.int64(t.int64Data[i]);o.ldelim()}if(t.name!=null&&Object.hasOwnProperty.call(t,"name")&&o.uint32(66).string(t.name),t.rawData!=null&&Object.hasOwnProperty.call(t,"rawData")&&o.uint32(74).bytes(t.rawData),t.doubleData!=null&&t.doubleData.length){o.uint32(82).fork();for(var i=0;i<t.doubleData.length;++i)o.double(t.doubleData[i]);o.ldelim()}if(t.uint64Data!=null&&t.uint64Data.length){o.uint32(90).fork();for(var i=0;i<t.uint64Data.length;++i)o.uint64(t.uint64Data[i]);o.ldelim()}if(t.docString!=null&&Object.hasOwnProperty.call(t,"docString")&&o.uint32(98).string(t.docString),t.externalData!=null&&t.externalData.length)for(var i=0;i<t.externalData.length;++i)I.onnx.StringStringEntryProto.encode(t.externalData[i],o.uint32(106).fork()).ldelim();return t.dataLocation!=null&&Object.hasOwnProperty.call(t,"dataLocation")&&o.uint32(112).int32(t.dataLocation),o},e.encodeDelimited=function(t,o){return this.encode(t,o).ldelim()},e.decode=function(t,o){t instanceof re||(t=re.create(t));for(var i=o===void 0?t.len:t.pos+o,s=new I.onnx.TensorProto;t.pos<i;){var a=t.uint32();switch(a>>>3){case 1:{if(s.dims&&s.dims.length||(s.dims=[]),(a&7)===2)for(var u=t.uint32()+t.pos;t.pos<u;)s.dims.push(t.int64());else s.dims.push(t.int64());break}case 2:{s.dataType=t.int32();break}case 3:{s.segment=I.onnx.TensorProto.Segment.decode(t,t.uint32());break}case 4:{if(s.floatData&&s.floatData.length||(s.floatData=[]),(a&7)===2)for(var u=t.uint32()+t.pos;t.pos<u;)s.floatData.push(t.float());else s.floatData.push(t.float());break}case 5:{if(s.int32Data&&s.int32Data.length||(s.int32Data=[]),(a&7)===2)for(var u=t.uint32()+t.pos;t.pos<u;)s.int32Data.push(t.int32());else s.int32Data.push(t.int32());break}case 6:{s.stringData&&s.stringData.length||(s.stringData=[]),s.stringData.push(t.bytes());break}case 7:{if(s.int64Data&&s.int64Data.length||(s.int64Data=[]),(a&7)===2)for(var u=t.uint32()+t.pos;t.pos<u;)s.int64Data.push(t.int64());else s.int64Data.push(t.int64());break}case 8:{s.name=t.string();break}case 12:{s.docString=t.string();break}case 9:{s.rawData=t.bytes();break}case 13:{s.externalData&&s.externalData.length||(s.externalData=[]),s.externalData.push(I.onnx.StringStringEntryProto.decode(t,t.uint32()));break}case 14:{s.dataLocation=t.int32();break}case 10:{if(s.doubleData&&s.doubleData.length||(s.doubleData=[]),(a&7)===2)for(var u=t.uint32()+t.pos;t.pos<u;)s.doubleData.push(t.double());else s.doubleData.push(t.double());break}case 11:{if(s.uint64Data&&s.uint64Data.length||(s.uint64Data=[]),(a&7)===2)for(var u=t.uint32()+t.pos;t.pos<u;)s.uint64Data.push(t.uint64());else s.uint64Data.push(t.uint64());break}default:t.skipType(a&7);break}}return s},e.decodeDelimited=function(t){return t instanceof re||(t=new re(t)),this.decode(t,t.uint32())},e.verify=function(t){if(typeof t!="object"||t===null)return"object expected";if(t.dims!=null&&t.hasOwnProperty("dims")){if(!Array.isArray(t.dims))return"dims: array expected";for(var o=0;o<t.dims.length;++o)if(!E.isInteger(t.dims[o])&&!(t.dims[o]&&E.isInteger(t.dims[o].low)&&E.isInteger(t.dims[o].high)))return"dims: integer|Long[] expected"}if(t.dataType!=null&&t.hasOwnProperty("dataType")&&!E.isInteger(t.dataType))return"dataType: integer expected";if(t.segment!=null&&t.hasOwnProperty("segment")){var i=I.onnx.TensorProto.Segment.verify(t.segment);if(i)return"segment."+i}if(t.floatData!=null&&t.hasOwnProperty("floatData")){if(!Array.isArray(t.floatData))return"floatData: array expected";for(var o=0;o<t.floatData.length;++o)if(typeof t.floatData[o]!="number")return"floatData: number[] expected"}if(t.int32Data!=null&&t.hasOwnProperty("int32Data")){if(!Array.isArray(t.int32Data))return"int32Data: array expected";for(var o=0;o<t.int32Data.length;++o)if(!E.isInteger(t.int32Data[o]))return"int32Data: integer[] expected"}if(t.stringData!=null&&t.hasOwnProperty("stringData")){if(!Array.isArray(t.stringData))return"stringData: array expected";for(var o=0;o<t.stringData.length;++o)if(!(t.stringData[o]&&typeof t.stringData[o].length=="number"||E.isString(t.stringData[o])))return"stringData: buffer[] expected"}if(t.int64Data!=null&&t.hasOwnProperty("int64Data")){if(!Array.isArray(t.int64Data))return"int64Data: array expected";for(var o=0;o<t.int64Data.length;++o)if(!E.isInteger(t.int64Data[o])&&!(t.int64Data[o]&&E.isInteger(t.int64Data[o].low)&&E.isInteger(t.int64Data[o].high)))return"int64Data: integer|Long[] expected"}if(t.name!=null&&t.hasOwnProperty("name")&&!E.isString(t.name))return"name: string expected";if(t.docString!=null&&t.hasOwnProperty("docString")&&!E.isString(t.docString))return"docString: string expected";if(t.rawData!=null&&t.hasOwnProperty("rawData")&&!(t.rawData&&typeof t.rawData.length=="number"||E.isString(t.rawData)))return"rawData: buffer expected";if(t.externalData!=null&&t.hasOwnProperty("externalData")){if(!Array.isArray(t.externalData))return"externalData: array expected";for(var o=0;o<t.externalData.length;++o){var i=I.onnx.StringStringEntryProto.verify(t.externalData[o]);if(i)return"externalData."+i}}if(t.dataLocation!=null&&t.hasOwnProperty("dataLocation"))switch(t.dataLocation){default:return"dataLocation: enum value expected";case 0:case 1:break}if(t.doubleData!=null&&t.hasOwnProperty("doubleData")){if(!Array.isArray(t.doubleData))return"doubleData: array expected";for(var o=0;o<t.doubleData.length;++o)if(typeof t.doubleData[o]!="number")return"doubleData: number[] expected"}if(t.uint64Data!=null&&t.hasOwnProperty("uint64Data")){if(!Array.isArray(t.uint64Data))return"uint64Data: array expected";for(var o=0;o<t.uint64Data.length;++o)if(!E.isInteger(t.uint64Data[o])&&!(t.uint64Data[o]&&E.isInteger(t.uint64Data[o].low)&&E.isInteger(t.uint64Data[o].high)))return"uint64Data: integer|Long[] expected"}return null},e.fromObject=function(t){if(t instanceof I.onnx.TensorProto)return t;var o=new I.onnx.TensorProto;if(t.dims){if(!Array.isArray(t.dims))throw TypeError(".onnx.TensorProto.dims: array expected");o.dims=[];for(var i=0;i<t.dims.length;++i)E.Long?(o.dims[i]=E.Long.fromValue(t.dims[i])).unsigned=!1:typeof t.dims[i]=="string"?o.dims[i]=parseInt(t.dims[i],10):typeof t.dims[i]=="number"?o.dims[i]=t.dims[i]:typeof t.dims[i]=="object"&&(o.dims[i]=new E.LongBits(t.dims[i].low>>>0,t.dims[i].high>>>0).toNumber())}if(t.dataType!=null&&(o.dataType=t.dataType|0),t.segment!=null){if(typeof t.segment!="object")throw TypeError(".onnx.TensorProto.segment: object expected");o.segment=I.onnx.TensorProto.Segment.fromObject(t.segment)}if(t.floatData){if(!Array.isArray(t.floatData))throw TypeError(".onnx.TensorProto.floatData: array expected");o.floatData=[];for(var i=0;i<t.floatData.length;++i)o.floatData[i]=Number(t.floatData[i])}if(t.int32Data){if(!Array.isArray(t.int32Data))throw TypeError(".onnx.TensorProto.int32Data: array expected");o.int32Data=[];for(var i=0;i<t.int32Data.length;++i)o.int32Data[i]=t.int32Data[i]|0}if(t.stringData){if(!Array.isArray(t.stringData))throw TypeError(".onnx.TensorProto.stringData: array expected");o.stringData=[];for(var i=0;i<t.stringData.length;++i)typeof t.stringData[i]=="string"?E.base64.decode(t.stringData[i],o.stringData[i]=E.newBuffer(E.base64.length(t.stringData[i])),0):t.stringData[i].length>=0&&(o.stringData[i]=t.stringData[i])}if(t.int64Data){if(!Array.isArray(t.int64Data))throw TypeError(".onnx.TensorProto.int64Data: array expected");o.int64Data=[];for(var i=0;i<t.int64Data.length;++i)E.Long?(o.int64Data[i]=E.Long.fromValue(t.int64Data[i])).unsigned=!1:typeof t.int64Data[i]=="string"?o.int64Data[i]=parseInt(t.int64Data[i],10):typeof t.int64Data[i]=="number"?o.int64Data[i]=t.int64Data[i]:typeof t.int64Data[i]=="object"&&(o.int64Data[i]=new E.LongBits(t.int64Data[i].low>>>0,t.int64Data[i].high>>>0).toNumber())}if(t.name!=null&&(o.name=String(t.name)),t.docString!=null&&(o.docString=String(t.docString)),t.rawData!=null&&(typeof t.rawData=="string"?E.base64.decode(t.rawData,o.rawData=E.newBuffer(E.base64.length(t.rawData)),0):t.rawData.length>=0&&(o.rawData=t.rawData)),t.externalData){if(!Array.isArray(t.externalData))throw TypeError(".onnx.TensorProto.externalData: array expected");o.externalData=[];for(var i=0;i<t.externalData.length;++i){if(typeof t.externalData[i]!="object")throw TypeError(".onnx.TensorProto.externalData: object expected");o.externalData[i]=I.onnx.StringStringEntryProto.fromObject(t.externalData[i])}}switch(t.dataLocation){default:if(typeof t.dataLocation=="number"){o.dataLocation=t.dataLocation;break}break;case"DEFAULT":case 0:o.dataLocation=0;break;case"EXTERNAL":case 1:o.dataLocation=1;break}if(t.doubleData){if(!Array.isArray(t.doubleData))throw TypeError(".onnx.TensorProto.doubleData: array expected");o.doubleData=[];for(var i=0;i<t.doubleData.length;++i)o.doubleData[i]=Number(t.doubleData[i])}if(t.uint64Data){if(!Array.isArray(t.uint64Data))throw TypeError(".onnx.TensorProto.uint64Data: array expected");o.uint64Data=[];for(var i=0;i<t.uint64Data.length;++i)E.Long?(o.uint64Data[i]=E.Long.fromValue(t.uint64Data[i])).unsigned=!0:typeof t.uint64Data[i]=="string"?o.uint64Data[i]=parseInt(t.uint64Data[i],10):typeof t.uint64Data[i]=="number"?o.uint64Data[i]=t.uint64Data[i]:typeof t.uint64Data[i]=="object"&&(o.uint64Data[i]=new E.LongBits(t.uint64Data[i].low>>>0,t.uint64Data[i].high>>>0).toNumber(!0))}return o},e.toObject=function(t,o){o||(o={});var i={};if((o.arrays||o.defaults)&&(i.dims=[],i.floatData=[],i.int32Data=[],i.stringData=[],i.int64Data=[],i.doubleData=[],i.uint64Data=[],i.externalData=[]),o.defaults&&(i.dataType=0,i.segment=null,i.name="",o.bytes===String?i.rawData="":(i.rawData=[],o.bytes!==Array&&(i.rawData=E.newBuffer(i.rawData))),i.docString="",i.dataLocation=o.enums===String?"DEFAULT":0),t.dims&&t.dims.length){i.dims=[];for(var s=0;s<t.dims.length;++s)typeof t.dims[s]=="number"?i.dims[s]=o.longs===String?String(t.dims[s]):t.dims[s]:i.dims[s]=o.longs===String?E.Long.prototype.toString.call(t.dims[s]):o.longs===Number?new E.LongBits(t.dims[s].low>>>0,t.dims[s].high>>>0).toNumber():t.dims[s]}if(t.dataType!=null&&t.hasOwnProperty("dataType")&&(i.dataType=t.dataType),t.segment!=null&&t.hasOwnProperty("segment")&&(i.segment=I.onnx.TensorProto.Segment.toObject(t.segment,o)),t.floatData&&t.floatData.length){i.floatData=[];for(var s=0;s<t.floatData.length;++s)i.floatData[s]=o.json&&!isFinite(t.floatData[s])?String(t.floatData[s]):t.floatData[s]}if(t.int32Data&&t.int32Data.length){i.int32Data=[];for(var s=0;s<t.int32Data.length;++s)i.int32Data[s]=t.int32Data[s]}if(t.stringData&&t.stringData.length){i.stringData=[];for(var s=0;s<t.stringData.length;++s)i.stringData[s]=o.bytes===String?E.base64.encode(t.stringData[s],0,t.stringData[s].length):o.bytes===Array?Array.prototype.slice.call(t.stringData[s]):t.stringData[s]}if(t.int64Data&&t.int64Data.length){i.int64Data=[];for(var s=0;s<t.int64Data.length;++s)typeof t.int64Data[s]=="number"?i.int64Data[s]=o.longs===String?String(t.int64Data[s]):t.int64Data[s]:i.int64Data[s]=o.longs===String?E.Long.prototype.toString.call(t.int64Data[s]):o.longs===Number?new E.LongBits(t.int64Data[s].low>>>0,t.int64Data[s].high>>>0).toNumber():t.int64Data[s]}if(t.name!=null&&t.hasOwnProperty("name")&&(i.name=t.name),t.rawData!=null&&t.hasOwnProperty("rawData")&&(i.rawData=o.bytes===String?E.base64.encode(t.rawData,0,t.rawData.length):o.bytes===Array?Array.prototype.slice.call(t.rawData):t.rawData),t.doubleData&&t.doubleData.length){i.doubleData=[];for(var s=0;s<t.doubleData.length;++s)i.doubleData[s]=o.json&&!isFinite(t.doubleData[s])?String(t.doubleData[s]):t.doubleData[s]}if(t.uint64Data&&t.uint64Data.length){i.uint64Data=[];for(var s=0;s<t.uint64Data.length;++s)typeof t.uint64Data[s]=="number"?i.uint64Data[s]=o.longs===String?String(t.uint64Data[s]):t.uint64Data[s]:i.uint64Data[s]=o.longs===String?E.Long.prototype.toString.call(t.uint64Data[s]):o.longs===Number?new E.LongBits(t.uint64Data[s].low>>>0,t.uint64Data[s].high>>>0).toNumber(!0):t.uint64Data[s]}if(t.docString!=null&&t.hasOwnProperty("docString")&&(i.docString=t.docString),t.externalData&&t.externalData.length){i.externalData=[];for(var s=0;s<t.externalData.length;++s)i.externalData[s]=I.onnx.StringStringEntryProto.toObject(t.externalData[s],o)}return t.dataLocation!=null&&t.hasOwnProperty("dataLocation")&&(i.dataLocation=o.enums===String?I.onnx.TensorProto.DataLocation[t.dataLocation]===void 0?t.dataLocation:I.onnx.TensorProto.DataLocation[t.dataLocation]:t.dataLocation),i},e.prototype.toJSON=function(){return this.constructor.toObject(this,lt.util.toJSONOptions)},e.getTypeUrl=function(t){return t===void 0&&(t="type.googleapis.com"),t+"/onnx.TensorProto"},e.DataType=function(){var n={},t=Object.create(n);return t[n[0]="UNDEFINED"]=0,t[n[1]="FLOAT"]=1,t[n[2]="UINT8"]=2,t[n[3]="INT8"]=3,t[n[4]="UINT16"]=4,t[n[5]="INT16"]=5,t[n[6]="INT32"]=6,t[n[7]="INT64"]=7,t[n[8]="STRING"]=8,t[n[9]="BOOL"]=9,t[n[10]="FLOAT16"]=10,t[n[11]="DOUBLE"]=11,t[n[12]="UINT32"]=12,t[n[13]="UINT64"]=13,t[n[14]="COMPLEX64"]=14,t[n[15]="COMPLEX128"]=15,t[n[16]="BFLOAT16"]=16,t[n[17]="FLOAT8E4M3FN"]=17,t[n[18]="FLOAT8E4M3FNUZ"]=18,t[n[19]="FLOAT8E5M2"]=19,t[n[20]="FLOAT8E5M2FNUZ"]=20,t}(),e.Segment=function(){function n(t){if(t)for(var o=Object.keys(t),i=0;i<o.length;++i)t[o[i]]!=null&&(this[o[i]]=t[o[i]])}return n.prototype.begin=E.Long?E.Long.fromBits(0,0,!1):0,n.prototype.end=E.Long?E.Long.fromBits(0,0,!1):0,n.create=function(o){return new n(o)},n.encode=function(o,i){return i||(i=vt.create()),o.begin!=null&&Object.hasOwnProperty.call(o,"begin")&&i.uint32(8).int64(o.begin),o.end!=null&&Object.hasOwnProperty.call(o,"end")&&i.uint32(16).int64(o.end),i},n.encodeDelimited=function(o,i){return this.encode(o,i).ldelim()},n.decode=function(o,i){o instanceof re||(o=re.create(o));for(var s=i===void 0?o.len:o.pos+i,a=new I.onnx.TensorProto.Segment;o.pos<s;){var u=o.uint32();switch(u>>>3){case 1:{a.begin=o.int64();break}case 2:{a.end=o.int64();break}default:o.skipType(u&7);break}}return a},n.decodeDelimited=function(o){return o instanceof re||(o=new re(o)),this.decode(o,o.uint32())},n.verify=function(o){return typeof o!="object"||o===null?"object expected":o.begin!=null&&o.hasOwnProperty("begin")&&!E.isInteger(o.begin)&&!(o.begin&&E.isInteger(o.begin.low)&&E.isInteger(o.begin.high))?"begin: integer|Long expected":o.end!=null&&o.hasOwnProperty("end")&&!E.isInteger(o.end)&&!(o.end&&E.isInteger(o.end.low)&&E.isInteger(o.end.high))?"end: integer|Long expected":null},n.fromObject=function(o){if(o instanceof I.onnx.TensorProto.Segment)return o;var i=new I.onnx.TensorProto.Segment;return o.begin!=null&&(E.Long?(i.begin=E.Long.fromValue(o.begin)).unsigned=!1:typeof o.begin=="string"?i.begin=parseInt(o.begin,10):typeof o.begin=="number"?i.begin=o.begin:typeof o.begin=="object"&&(i.begin=new E.LongBits(o.begin.low>>>0,o.begin.high>>>0).toNumber())),o.end!=null&&(E.Long?(i.end=E.Long.fromValue(o.end)).unsigned=!1:typeof o.end=="string"?i.end=parseInt(o.end,10):typeof o.end=="number"?i.end=o.end:typeof o.end=="object"&&(i.end=new E.LongBits(o.end.low>>>0,o.end.high>>>0).toNumber())),i},n.toObject=function(o,i){i||(i={});var s={};if(i.defaults){if(E.Long){var a=new E.Long(0,0,!1);s.begin=i.longs===String?a.toString():i.longs===Number?a.toNumber():a}else s.begin=i.longs===String?"0":0;if(E.Long){var a=new E.Long(0,0,!1);s.end=i.longs===String?a.toString():i.longs===Number?a.toNumber():a}else s.end=i.longs===String?"0":0}return o.begin!=null&&o.hasOwnProperty("begin")&&(typeof o.begin=="number"?s.begin=i.longs===String?String(o.begin):o.begin:s.begin=i.longs===String?E.Long.prototype.toString.call(o.begin):i.longs===Number?new E.LongBits(o.begin.low>>>0,o.begin.high>>>0).toNumber():o.begin),o.end!=null&&o.hasOwnProperty("end")&&(typeof o.end=="number"?s.end=i.longs===String?String(o.end):o.end:s.end=i.longs===String?E.Long.prototype.toString.call(o.end):i.longs===Number?new E.LongBits(o.end.low>>>0,o.end.high>>>0).toNumber():o.end),s},n.prototype.toJSON=function(){return this.constructor.toObject(this,lt.util.toJSONOptions)},n.getTypeUrl=function(o){return o===void 0&&(o="type.googleapis.com"),o+"/onnx.TensorProto.Segment"},n}(),e.DataLocation=function(){var n={},t=Object.create(n);return t[n[0]="DEFAULT"]=0,t[n[1]="EXTERNAL"]=1,t}(),e}(),r.SparseTensorProto=function(){function e(n){if(this.dims=[],n)for(var t=Object.keys(n),o=0;o<t.length;++o)n[t[o]]!=null&&(this[t[o]]=n[t[o]])}return e.prototype.values=null,e.prototype.indices=null,e.prototype.dims=E.emptyArray,e.create=function(t){return new e(t)},e.encode=function(t,o){if(o||(o=vt.create()),t.values!=null&&Object.hasOwnProperty.call(t,"values")&&I.onnx.TensorProto.encode(t.values,o.uint32(10).fork()).ldelim(),t.indices!=null&&Object.hasOwnProperty.call(t,"indices")&&I.onnx.TensorProto.encode(t.indices,o.uint32(18).fork()).ldelim(),t.dims!=null&&t.dims.length){o.uint32(26).fork();for(var i=0;i<t.dims.length;++i)o.int64(t.dims[i]);o.ldelim()}return o},e.encodeDelimited=function(t,o){return this.encode(t,o).ldelim()},e.decode=function(t,o){t instanceof re||(t=re.create(t));for(var i=o===void 0?t.len:t.pos+o,s=new I.onnx.SparseTensorProto;t.pos<i;){var a=t.uint32();switch(a>>>3){case 1:{s.values=I.onnx.TensorProto.decode(t,t.uint32());break}case 2:{s.indices=I.onnx.TensorProto.decode(t,t.uint32());break}case 3:{if(s.dims&&s.dims.length||(s.dims=[]),(a&7)===2)for(var u=t.uint32()+t.pos;t.pos<u;)s.dims.push(t.int64());else s.dims.push(t.int64());break}default:t.skipType(a&7);break}}return s},e.decodeDelimited=function(t){return t instanceof re||(t=new re(t)),this.decode(t,t.uint32())},e.verify=function(t){if(typeof t!="object"||t===null)return"object expected";if(t.values!=null&&t.hasOwnProperty("values")){var o=I.onnx.TensorProto.verify(t.values);if(o)return"values."+o}if(t.indices!=null&&t.hasOwnProperty("indices")){var o=I.onnx.TensorProto.verify(t.indices);if(o)return"indices."+o}if(t.dims!=null&&t.hasOwnProperty("dims")){if(!Array.isArray(t.dims))return"dims: array expected";for(var i=0;i<t.dims.length;++i)if(!E.isInteger(t.dims[i])&&!(t.dims[i]&&E.isInteger(t.dims[i].low)&&E.isInteger(t.dims[i].high)))return"dims: integer|Long[] expected"}return null},e.fromObject=function(t){if(t instanceof I.onnx.SparseTensorProto)return t;var o=new I.onnx.SparseTensorProto;if(t.values!=null){if(typeof t.values!="object")throw TypeError(".onnx.SparseTensorProto.values: object expected");o.values=I.onnx.TensorProto.fromObject(t.values)}if(t.indices!=null){if(typeof t.indices!="object")throw TypeError(".onnx.SparseTensorProto.indices: object expected");o.indices=I.onnx.TensorProto.fromObject(t.indices)}if(t.dims){if(!Array.isArray(t.dims))throw TypeError(".onnx.SparseTensorProto.dims: array expected");o.dims=[];for(var i=0;i<t.dims.length;++i)E.Long?(o.dims[i]=E.Long.fromValue(t.dims[i])).unsigned=!1:typeof t.dims[i]=="string"?o.dims[i]=parseInt(t.dims[i],10):typeof t.dims[i]=="number"?o.dims[i]=t.dims[i]:typeof t.dims[i]=="object"&&(o.dims[i]=new E.LongBits(t.dims[i].low>>>0,t.dims[i].high>>>0).toNumber())}return o},e.toObject=function(t,o){o||(o={});var i={};if((o.arrays||o.defaults)&&(i.dims=[]),o.defaults&&(i.values=null,i.indices=null),t.values!=null&&t.hasOwnProperty("values")&&(i.values=I.onnx.TensorProto.toObject(t.values,o)),t.indices!=null&&t.hasOwnProperty("indices")&&(i.indices=I.onnx.TensorProto.toObject(t.indices,o)),t.dims&&t.dims.length){i.dims=[];for(var s=0;s<t.dims.length;++s)typeof t.dims[s]=="number"?i.dims[s]=o.longs===String?String(t.dims[s]):t.dims[s]:i.dims[s]=o.longs===String?E.Long.prototype.toString.call(t.dims[s]):o.longs===Number?new E.LongBits(t.dims[s].low>>>0,t.dims[s].high>>>0).toNumber():t.dims[s]}return i},e.prototype.toJSON=function(){return this.constructor.toObject(this,lt.util.toJSONOptions)},e.getTypeUrl=function(t){return t===void 0&&(t="type.googleapis.com"),t+"/onnx.SparseTensorProto"},e}(),r.TensorShapeProto=function(){function e(n){if(this.dim=[],n)for(var t=Object.keys(n),o=0;o<t.length;++o)n[t[o]]!=null&&(this[t[o]]=n[t[o]])}return e.prototype.dim=E.emptyArray,e.create=function(t){return new e(t)},e.encode=function(t,o){if(o||(o=vt.create()),t.dim!=null&&t.dim.length)for(var i=0;i<t.dim.length;++i)I.onnx.TensorShapeProto.Dimension.encode(t.dim[i],o.uint32(10).fork()).ldelim();return o},e.encodeDelimited=function(t,o){return this.encode(t,o).ldelim()},e.decode=function(t,o){t instanceof re||(t=re.create(t));for(var i=o===void 0?t.len:t.pos+o,s=new I.onnx.TensorShapeProto;t.pos<i;){var a=t.uint32();switch(a>>>3){case 1:{s.dim&&s.dim.length||(s.dim=[]),s.dim.push(I.onnx.TensorShapeProto.Dimension.decode(t,t.uint32()));break}default:t.skipType(a&7);break}}return s},e.decodeDelimited=function(t){return t instanceof re||(t=new re(t)),this.decode(t,t.uint32())},e.verify=function(t){if(typeof t!="object"||t===null)return"object expected";if(t.dim!=null&&t.hasOwnProperty("dim")){if(!Array.isArray(t.dim))return"dim: array expected";for(var o=0;o<t.dim.length;++o){var i=I.onnx.TensorShapeProto.Dimension.verify(t.dim[o]);if(i)return"dim."+i}}return null},e.fromObject=function(t){if(t instanceof I.onnx.TensorShapeProto)return t;var o=new I.onnx.TensorShapeProto;if(t.dim){if(!Array.isArray(t.dim))throw TypeError(".onnx.TensorShapeProto.dim: array expected");o.dim=[];for(var i=0;i<t.dim.length;++i){if(typeof t.dim[i]!="object")throw TypeError(".onnx.TensorShapeProto.dim: object expected");o.dim[i]=I.onnx.TensorShapeProto.Dimension.fromObject(t.dim[i])}}return o},e.toObject=function(t,o){o||(o={});var i={};if((o.arrays||o.defaults)&&(i.dim=[]),t.dim&&t.dim.length){i.dim=[];for(var s=0;s<t.dim.length;++s)i.dim[s]=I.onnx.TensorShapeProto.Dimension.toObject(t.dim[s],o)}return i},e.prototype.toJSON=function(){return this.constructor.toObject(this,lt.util.toJSONOptions)},e.getTypeUrl=function(t){return t===void 0&&(t="type.googleapis.com"),t+"/onnx.TensorShapeProto"},e.Dimension=function(){function n(o){if(o)for(var i=Object.keys(o),s=0;s<i.length;++s)o[i[s]]!=null&&(this[i[s]]=o[i[s]])}n.prototype.dimValue=null,n.prototype.dimParam=null,n.prototype.denotation="";var t;return Object.defineProperty(n.prototype,"value",{get:E.oneOfGetter(t=["dimValue","dimParam"]),set:E.oneOfSetter(t)}),n.create=function(i){return new n(i)},n.encode=function(i,s){return s||(s=vt.create()),i.dimValue!=null&&Object.hasOwnProperty.call(i,"dimValue")&&s.uint32(8).int64(i.dimValue),i.dimParam!=null&&Object.hasOwnProperty.call(i,"dimParam")&&s.uint32(18).string(i.dimParam),i.denotation!=null&&Object.hasOwnProperty.call(i,"denotation")&&s.uint32(26).string(i.denotation),s},n.encodeDelimited=function(i,s){return this.encode(i,s).ldelim()},n.decode=function(i,s){i instanceof re||(i=re.create(i));for(var a=s===void 0?i.len:i.pos+s,u=new I.onnx.TensorShapeProto.Dimension;i.pos<a;){var l=i.uint32();switch(l>>>3){case 1:{u.dimValue=i.int64();break}case 2:{u.dimParam=i.string();break}case 3:{u.denotation=i.string();break}default:i.skipType(l&7);break}}return u},n.decodeDelimited=function(i){return i instanceof re||(i=new re(i)),this.decode(i,i.uint32())},n.verify=function(i){if(typeof i!="object"||i===null)return"object expected";var s={};if(i.dimValue!=null&&i.hasOwnProperty("dimValue")&&(s.value=1,!E.isInteger(i.dimValue)&&!(i.dimValue&&E.isInteger(i.dimValue.low)&&E.isInteger(i.dimValue.high))))return"dimValue: integer|Long expected";if(i.dimParam!=null&&i.hasOwnProperty("dimParam")){if(s.value===1)return"value: multiple values";if(s.value=1,!E.isString(i.dimParam))return"dimParam: string expected"}return i.denotation!=null&&i.hasOwnProperty("denotation")&&!E.isString(i.denotation)?"denotation: string expected":null},n.fromObject=function(i){if(i instanceof I.onnx.TensorShapeProto.Dimension)return i;var s=new I.onnx.TensorShapeProto.Dimension;return i.dimValue!=null&&(E.Long?(s.dimValue=E.Long.fromValue(i.dimValue)).unsigned=!1:typeof i.dimValue=="string"?s.dimValue=parseInt(i.dimValue,10):typeof i.dimValue=="number"?s.dimValue=i.dimValue:typeof i.dimValue=="object"&&(s.dimValue=new E.LongBits(i.dimValue.low>>>0,i.dimValue.high>>>0).toNumber())),i.dimParam!=null&&(s.dimParam=String(i.dimParam)),i.denotation!=null&&(s.denotation=String(i.denotation)),s},n.toObject=function(i,s){s||(s={});var a={};return s.defaults&&(a.denotation=""),i.dimValue!=null&&i.hasOwnProperty("dimValue")&&(typeof i.dimValue=="number"?a.dimValue=s.longs===String?String(i.dimValue):i.dimValue:a.dimValue=s.longs===String?E.Long.prototype.toString.call(i.dimValue):s.longs===Number?new E.LongBits(i.dimValue.low>>>0,i.dimValue.high>>>0).toNumber():i.dimValue,s.oneofs&&(a.value="dimValue")),i.dimParam!=null&&i.hasOwnProperty("dimParam")&&(a.dimParam=i.dimParam,s.oneofs&&(a.value="dimParam")),i.denotation!=null&&i.hasOwnProperty("denotation")&&(a.denotation=i.denotation),a},n.prototype.toJSON=function(){return this.constructor.toObject(this,lt.util.toJSONOptions)},n.getTypeUrl=function(i){return i===void 0&&(i="type.googleapis.com"),i+"/onnx.TensorShapeProto.Dimension"},n}(),e}(),r.TypeProto=function(){function e(t){if(t)for(var o=Object.keys(t),i=0;i<o.length;++i)t[o[i]]!=null&&(this[o[i]]=t[o[i]])}e.prototype.tensorType=null,e.prototype.sequenceType=null,e.prototype.mapType=null,e.prototype.optionalType=null,e.prototype.sparseTensorType=null,e.prototype.denotation="";var n;return Object.defineProperty(e.prototype,"value",{get:E.oneOfGetter(n=["tensorType","sequenceType","mapType","optionalType","sparseTensorType"]),set:E.oneOfSetter(n)}),e.create=function(o){return new e(o)},e.encode=function(o,i){return i||(i=vt.create()),o.tensorType!=null&&Object.hasOwnProperty.call(o,"tensorType")&&I.onnx.TypeProto.Tensor.encode(o.tensorType,i.uint32(10).fork()).ldelim(),o.sequenceType!=null&&Object.hasOwnProperty.call(o,"sequenceType")&&I.onnx.TypeProto.Sequence.encode(o.sequenceType,i.uint32(34).fork()).ldelim(),o.mapType!=null&&Object.hasOwnProperty.call(o,"mapType")&&I.onnx.TypeProto.Map.encode(o.mapType,i.uint32(42).fork()).ldelim(),o.denotation!=null&&Object.hasOwnProperty.call(o,"denotation")&&i.uint32(50).string(o.denotation),o.sparseTensorType!=null&&Object.hasOwnProperty.call(o,"sparseTensorType")&&I.onnx.TypeProto.SparseTensor.encode(o.sparseTensorType,i.uint32(66).fork()).ldelim(),o.optionalType!=null&&Object.hasOwnProperty.call(o,"optionalType")&&I.onnx.TypeProto.Optional.encode(o.optionalType,i.uint32(74).fork()).ldelim(),i},e.encodeDelimited=function(o,i){return this.encode(o,i).ldelim()},e.decode=function(o,i){o instanceof re||(o=re.create(o));for(var s=i===void 0?o.len:o.pos+i,a=new I.onnx.TypeProto;o.pos<s;){var u=o.uint32();switch(u>>>3){case 1:{a.tensorType=I.onnx.TypeProto.Tensor.decode(o,o.uint32());break}case 4:{a.sequenceType=I.onnx.TypeProto.Sequence.decode(o,o.uint32());break}case 5:{a.mapType=I.onnx.TypeProto.Map.decode(o,o.uint32());break}case 9:{a.optionalType=I.onnx.TypeProto.Optional.decode(o,o.uint32());break}case 8:{a.sparseTensorType=I.onnx.TypeProto.SparseTensor.decode(o,o.uint32());break}case 6:{a.denotation=o.string();break}default:o.skipType(u&7);break}}return a},e.decodeDelimited=function(o){return o instanceof re||(o=new re(o)),this.decode(o,o.uint32())},e.verify=function(o){if(typeof o!="object"||o===null)return"object expected";var i={};if(o.tensorType!=null&&o.hasOwnProperty("tensorType")){i.value=1;{var s=I.onnx.TypeProto.Tensor.verify(o.tensorType);if(s)return"tensorType."+s}}if(o.sequenceType!=null&&o.hasOwnProperty("sequenceType")){if(i.value===1)return"value: multiple values";i.value=1;{var s=I.onnx.TypeProto.Sequence.verify(o.sequenceType);if(s)return"sequenceType."+s}}if(o.mapType!=null&&o.hasOwnProperty("mapType")){if(i.value===1)return"value: multiple values";i.value=1;{var s=I.onnx.TypeProto.Map.verify(o.mapType);if(s)return"mapType."+s}}if(o.optionalType!=null&&o.hasOwnProperty("optionalType")){if(i.value===1)return"value: multiple values";i.value=1;{var s=I.onnx.TypeProto.Optional.verify(o.optionalType);if(s)return"optionalType."+s}}if(o.sparseTensorType!=null&&o.hasOwnProperty("sparseTensorType")){if(i.value===1)return"value: multiple values";i.value=1;{var s=I.onnx.TypeProto.SparseTensor.verify(o.sparseTensorType);if(s)return"sparseTensorType."+s}}return o.denotation!=null&&o.hasOwnProperty("denotation")&&!E.isString(o.denotation)?"denotation: string expected":null},e.fromObject=function(o){if(o instanceof I.onnx.TypeProto)return o;var i=new I.onnx.TypeProto;if(o.tensorType!=null){if(typeof o.tensorType!="object")throw TypeError(".onnx.TypeProto.tensorType: object expected");i.tensorType=I.onnx.TypeProto.Tensor.fromObject(o.tensorType)}if(o.sequenceType!=null){if(typeof o.sequenceType!="object")throw TypeError(".onnx.TypeProto.sequenceType: object expected");i.sequenceType=I.onnx.TypeProto.Sequence.fromObject(o.sequenceType)}if(o.mapType!=null){if(typeof o.mapType!="object")throw TypeError(".onnx.TypeProto.mapType: object expected");i.mapType=I.onnx.TypeProto.Map.fromObject(o.mapType)}if(o.optionalType!=null){if(typeof o.optionalType!="object")throw TypeError(".onnx.TypeProto.optionalType: object expected");i.optionalType=I.onnx.TypeProto.Optional.fromObject(o.optionalType)}if(o.sparseTensorType!=null){if(typeof o.sparseTensorType!="object")throw TypeError(".onnx.TypeProto.sparseTensorType: object expected");i.sparseTensorType=I.onnx.TypeProto.SparseTensor.fromObject(o.sparseTensorType)}return o.denotation!=null&&(i.denotation=String(o.denotation)),i},e.toObject=function(o,i){i||(i={});var s={};return i.defaults&&(s.denotation=""),o.tensorType!=null&&o.hasOwnProperty("tensorType")&&(s.tensorType=I.onnx.TypeProto.Tensor.toObject(o.tensorType,i),i.oneofs&&(s.value="tensorType")),o.sequenceType!=null&&o.hasOwnProperty("sequenceType")&&(s.sequenceType=I.onnx.TypeProto.Sequence.toObject(o.sequenceType,i),i.oneofs&&(s.value="sequenceType")),o.mapType!=null&&o.hasOwnProperty("mapType")&&(s.mapType=I.onnx.TypeProto.Map.toObject(o.mapType,i),i.oneofs&&(s.value="mapType")),o.denotation!=null&&o.hasOwnProperty("denotation")&&(s.denotation=o.denotation),o.sparseTensorType!=null&&o.hasOwnProperty("sparseTensorType")&&(s.sparseTensorType=I.onnx.TypeProto.SparseTensor.toObject(o.sparseTensorType,i),i.oneofs&&(s.value="sparseTensorType")),o.optionalType!=null&&o.hasOwnProperty("optionalType")&&(s.optionalType=I.onnx.TypeProto.Optional.toObject(o.optionalType,i),i.oneofs&&(s.value="optionalType")),s},e.prototype.toJSON=function(){return this.constructor.toObject(this,lt.util.toJSONOptions)},e.getTypeUrl=function(o){return o===void 0&&(o="type.googleapis.com"),o+"/onnx.TypeProto"},e.Tensor=function(){function t(o){if(o)for(var i=Object.keys(o),s=0;s<i.length;++s)o[i[s]]!=null&&(this[i[s]]=o[i[s]])}return t.prototype.elemType=0,t.prototype.shape=null,t.create=function(i){return new t(i)},t.encode=function(i,s){return s||(s=vt.create()),i.elemType!=null&&Object.hasOwnProperty.call(i,"elemType")&&s.uint32(8).int32(i.elemType),i.shape!=null&&Object.hasOwnProperty.call(i,"shape")&&I.onnx.TensorShapeProto.encode(i.shape,s.uint32(18).fork()).ldelim(),s},t.encodeDelimited=function(i,s){return this.encode(i,s).ldelim()},t.decode=function(i,s){i instanceof re||(i=re.create(i));for(var a=s===void 0?i.len:i.pos+s,u=new I.onnx.TypeProto.Tensor;i.pos<a;){var l=i.uint32();switch(l>>>3){case 1:{u.elemType=i.int32();break}case 2:{u.shape=I.onnx.TensorShapeProto.decode(i,i.uint32());break}default:i.skipType(l&7);break}}return u},t.decodeDelimited=function(i){return i instanceof re||(i=new re(i)),this.decode(i,i.uint32())},t.verify=function(i){if(typeof i!="object"||i===null)return"object expected";if(i.elemType!=null&&i.hasOwnProperty("elemType")&&!E.isInteger(i.elemType))return"elemType: integer expected";if(i.shape!=null&&i.hasOwnProperty("shape")){var s=I.onnx.TensorShapeProto.verify(i.shape);if(s)return"shape."+s}return null},t.fromObject=function(i){if(i instanceof I.onnx.TypeProto.Tensor)return i;var s=new I.onnx.TypeProto.Tensor;if(i.elemType!=null&&(s.elemType=i.elemType|0),i.shape!=null){if(typeof i.shape!="object")throw TypeError(".onnx.TypeProto.Tensor.shape: object expected");s.shape=I.onnx.TensorShapeProto.fromObject(i.shape)}return s},t.toObject=function(i,s){s||(s={});var a={};return s.defaults&&(a.elemType=0,a.shape=null),i.elemType!=null&&i.hasOwnProperty("elemType")&&(a.elemType=i.elemType),i.shape!=null&&i.hasOwnProperty("shape")&&(a.shape=I.onnx.TensorShapeProto.toObject(i.shape,s)),a},t.prototype.toJSON=function(){return this.constructor.toObject(this,lt.util.toJSONOptions)},t.getTypeUrl=function(i){return i===void 0&&(i="type.googleapis.com"),i+"/onnx.TypeProto.Tensor"},t}(),e.Sequence=function(){function t(o){if(o)for(var i=Object.keys(o),s=0;s<i.length;++s)o[i[s]]!=null&&(this[i[s]]=o[i[s]])}return t.prototype.elemType=null,t.create=function(i){return new t(i)},t.encode=function(i,s){return s||(s=vt.create()),i.elemType!=null&&Object.hasOwnProperty.call(i,"elemType")&&I.onnx.TypeProto.encode(i.elemType,s.uint32(10).fork()).ldelim(),s},t.encodeDelimited=function(i,s){return this.encode(i,s).ldelim()},t.decode=function(i,s){i instanceof re||(i=re.create(i));for(var a=s===void 0?i.len:i.pos+s,u=new I.onnx.TypeProto.Sequence;i.pos<a;){var l=i.uint32();switch(l>>>3){case 1:{u.elemType=I.onnx.TypeProto.decode(i,i.uint32());break}default:i.skipType(l&7);break}}return u},t.decodeDelimited=function(i){return i instanceof re||(i=new re(i)),this.decode(i,i.uint32())},t.verify=function(i){if(typeof i!="object"||i===null)return"object expected";if(i.elemType!=null&&i.hasOwnProperty("elemType")){var s=I.onnx.TypeProto.verify(i.elemType);if(s)return"elemType."+s}return null},t.fromObject=function(i){if(i instanceof I.onnx.TypeProto.Sequence)return i;var s=new I.onnx.TypeProto.Sequence;if(i.elemType!=null){if(typeof i.elemType!="object")throw TypeError(".onnx.TypeProto.Sequence.elemType: object expected");s.elemType=I.onnx.TypeProto.fromObject(i.elemType)}return s},t.toObject=function(i,s){s||(s={});var a={};return s.defaults&&(a.elemType=null),i.elemType!=null&&i.hasOwnProperty("elemType")&&(a.elemType=I.onnx.TypeProto.toObject(i.elemType,s)),a},t.prototype.toJSON=function(){return this.constructor.toObject(this,lt.util.toJSONOptions)},t.getTypeUrl=function(i){return i===void 0&&(i="type.googleapis.com"),i+"/onnx.TypeProto.Sequence"},t}(),e.Map=function(){function t(o){if(o)for(var i=Object.keys(o),s=0;s<i.length;++s)o[i[s]]!=null&&(this[i[s]]=o[i[s]])}return t.prototype.keyType=0,t.prototype.valueType=null,t.create=function(i){return new t(i)},t.encode=function(i,s){return s||(s=vt.create()),i.keyType!=null&&Object.hasOwnProperty.call(i,"keyType")&&s.uint32(8).int32(i.keyType),i.valueType!=null&&Object.hasOwnProperty.call(i,"valueType")&&I.onnx.TypeProto.encode(i.valueType,s.uint32(18).fork()).ldelim(),s},t.encodeDelimited=function(i,s){return this.encode(i,s).ldelim()},t.decode=function(i,s){i instanceof re||(i=re.create(i));for(var a=s===void 0?i.len:i.pos+s,u=new I.onnx.TypeProto.Map;i.pos<a;){var l=i.uint32();switch(l>>>3){case 1:{u.keyType=i.int32();break}case 2:{u.valueType=I.onnx.TypeProto.decode(i,i.uint32());break}default:i.skipType(l&7);break}}return u},t.decodeDelimited=function(i){return i instanceof re||(i=new re(i)),this.decode(i,i.uint32())},t.verify=function(i){if(typeof i!="object"||i===null)return"object expected";if(i.keyType!=null&&i.hasOwnProperty("keyType")&&!E.isInteger(i.keyType))return"keyType: integer expected";if(i.valueType!=null&&i.hasOwnProperty("valueType")){var s=I.onnx.TypeProto.verify(i.valueType);if(s)return"valueType."+s}return null},t.fromObject=function(i){if(i instanceof I.onnx.TypeProto.Map)return i;var s=new I.onnx.TypeProto.Map;if(i.keyType!=null&&(s.keyType=i.keyType|0),i.valueType!=null){if(typeof i.valueType!="object")throw TypeError(".onnx.TypeProto.Map.valueType: object expected");s.valueType=I.onnx.TypeProto.fromObject(i.valueType)}return s},t.toObject=function(i,s){s||(s={});var a={};return s.defaults&&(a.keyType=0,a.valueType=null),i.keyType!=null&&i.hasOwnProperty("keyType")&&(a.keyType=i.keyType),i.valueType!=null&&i.hasOwnProperty("valueType")&&(a.valueType=I.onnx.TypeProto.toObject(i.valueType,s)),a},t.prototype.toJSON=function(){return this.constructor.toObject(this,lt.util.toJSONOptions)},t.getTypeUrl=function(i){return i===void 0&&(i="type.googleapis.com"),i+"/onnx.TypeProto.Map"},t}(),e.Optional=function(){function t(o){if(o)for(var i=Object.keys(o),s=0;s<i.length;++s)o[i[s]]!=null&&(this[i[s]]=o[i[s]])}return t.prototype.elemType=null,t.create=function(i){return new t(i)},t.encode=function(i,s){return s||(s=vt.create()),i.elemType!=null&&Object.hasOwnProperty.call(i,"elemType")&&I.onnx.TypeProto.encode(i.elemType,s.uint32(10).fork()).ldelim(),s},t.encodeDelimited=function(i,s){return this.encode(i,s).ldelim()},t.decode=function(i,s){i instanceof re||(i=re.create(i));for(var a=s===void 0?i.len:i.pos+s,u=new I.onnx.TypeProto.Optional;i.pos<a;){var l=i.uint32();switch(l>>>3){case 1:{u.elemType=I.onnx.TypeProto.decode(i,i.uint32());break}default:i.skipType(l&7);break}}return u},t.decodeDelimited=function(i){return i instanceof re||(i=new re(i)),this.decode(i,i.uint32())},t.verify=function(i){if(typeof i!="object"||i===null)return"object expected";if(i.elemType!=null&&i.hasOwnProperty("elemType")){var s=I.onnx.TypeProto.verify(i.elemType);if(s)return"elemType."+s}return null},t.fromObject=function(i){if(i instanceof I.onnx.TypeProto.Optional)return i;var s=new I.onnx.TypeProto.Optional;if(i.elemType!=null){if(typeof i.elemType!="object")throw TypeError(".onnx.TypeProto.Optional.elemType: object expected");s.elemType=I.onnx.TypeProto.fromObject(i.elemType)}return s},t.toObject=function(i,s){s||(s={});var a={};return s.defaults&&(a.elemType=null),i.elemType!=null&&i.hasOwnProperty("elemType")&&(a.elemType=I.onnx.TypeProto.toObject(i.elemType,s)),a},t.prototype.toJSON=function(){return this.constructor.toObject(this,lt.util.toJSONOptions)},t.getTypeUrl=function(i){return i===void 0&&(i="type.googleapis.com"),i+"/onnx.TypeProto.Optional"},t}(),e.SparseTensor=function(){function t(o){if(o)for(var i=Object.keys(o),s=0;s<i.length;++s)o[i[s]]!=null&&(this[i[s]]=o[i[s]])}return t.prototype.elemType=0,t.prototype.shape=null,t.create=function(i){return new t(i)},t.encode=function(i,s){return s||(s=vt.create()),i.elemType!=null&&Object.hasOwnProperty.call(i,"elemType")&&s.uint32(8).int32(i.elemType),i.shape!=null&&Object.hasOwnProperty.call(i,"shape")&&I.onnx.TensorShapeProto.encode(i.shape,s.uint32(18).fork()).ldelim(),s},t.encodeDelimited=function(i,s){return this.encode(i,s).ldelim()},t.decode=function(i,s){i instanceof re||(i=re.create(i));for(var a=s===void 0?i.len:i.pos+s,u=new I.onnx.TypeProto.SparseTensor;i.pos<a;){var l=i.uint32();switch(l>>>3){case 1:{u.elemType=i.int32();break}case 2:{u.shape=I.onnx.TensorShapeProto.decode(i,i.uint32());break}default:i.skipType(l&7);break}}return u},t.decodeDelimited=function(i){return i instanceof re||(i=new re(i)),this.decode(i,i.uint32())},t.verify=function(i){if(typeof i!="object"||i===null)return"object expected";if(i.elemType!=null&&i.hasOwnProperty("elemType")&&!E.isInteger(i.elemType))return"elemType: integer expected";if(i.shape!=null&&i.hasOwnProperty("shape")){var s=I.onnx.TensorShapeProto.verify(i.shape);if(s)return"shape."+s}return null},t.fromObject=function(i){if(i instanceof I.onnx.TypeProto.SparseTensor)return i;var s=new I.onnx.TypeProto.SparseTensor;if(i.elemType!=null&&(s.elemType=i.elemType|0),i.shape!=null){if(typeof i.shape!="object")throw TypeError(".onnx.TypeProto.SparseTensor.shape: object expected");s.shape=I.onnx.TensorShapeProto.fromObject(i.shape)}return s},t.toObject=function(i,s){s||(s={});var a={};return s.defaults&&(a.elemType=0,a.shape=null),i.elemType!=null&&i.hasOwnProperty("elemType")&&(a.elemType=i.elemType),i.shape!=null&&i.hasOwnProperty("shape")&&(a.shape=I.onnx.TensorShapeProto.toObject(i.shape,s)),a},t.prototype.toJSON=function(){return this.constructor.toObject(this,lt.util.toJSONOptions)},t.getTypeUrl=function(i){return i===void 0&&(i="type.googleapis.com"),i+"/onnx.TypeProto.SparseTensor"},t}(),e}(),r.OperatorSetIdProto=function(){function e(n){if(n)for(var t=Object.keys(n),o=0;o<t.length;++o)n[t[o]]!=null&&(this[t[o]]=n[t[o]])}return e.prototype.domain="",e.prototype.version=E.Long?E.Long.fromBits(0,0,!1):0,e.create=function(t){return new e(t)},e.encode=function(t,o){return o||(o=vt.create()),t.domain!=null&&Object.hasOwnProperty.call(t,"domain")&&o.uint32(10).string(t.domain),t.version!=null&&Object.hasOwnProperty.call(t,"version")&&o.uint32(16).int64(t.version),o},e.encodeDelimited=function(t,o){return this.encode(t,o).ldelim()},e.decode=function(t,o){t instanceof re||(t=re.create(t));for(var i=o===void 0?t.len:t.pos+o,s=new I.onnx.OperatorSetIdProto;t.pos<i;){var a=t.uint32();switch(a>>>3){case 1:{s.domain=t.string();break}case 2:{s.version=t.int64();break}default:t.skipType(a&7);break}}return s},e.decodeDelimited=function(t){return t instanceof re||(t=new re(t)),this.decode(t,t.uint32())},e.verify=function(t){return typeof t!="object"||t===null?"object expected":t.domain!=null&&t.hasOwnProperty("domain")&&!E.isString(t.domain)?"domain: string expected":t.version!=null&&t.hasOwnProperty("version")&&!E.isInteger(t.version)&&!(t.version&&E.isInteger(t.version.low)&&E.isInteger(t.version.high))?"version: integer|Long expected":null},e.fromObject=function(t){if(t instanceof I.onnx.OperatorSetIdProto)return t;var o=new I.onnx.OperatorSetIdProto;return t.domain!=null&&(o.domain=String(t.domain)),t.version!=null&&(E.Long?(o.version=E.Long.fromValue(t.version)).unsigned=!1:typeof t.version=="string"?o.version=parseInt(t.version,10):typeof t.version=="number"?o.version=t.version:typeof t.version=="object"&&(o.version=new E.LongBits(t.version.low>>>0,t.version.high>>>0).toNumber())),o},e.toObject=function(t,o){o||(o={});var i={};if(o.defaults)if(i.domain="",E.Long){var s=new E.Long(0,0,!1);i.version=o.longs===String?s.toString():o.longs===Number?s.toNumber():s}else i.version=o.longs===String?"0":0;return t.domain!=null&&t.hasOwnProperty("domain")&&(i.domain=t.domain),t.version!=null&&t.hasOwnProperty("version")&&(typeof t.version=="number"?i.version=o.longs===String?String(t.version):t.version:i.version=o.longs===String?E.Long.prototype.toString.call(t.version):o.longs===Number?new E.LongBits(t.version.low>>>0,t.version.high>>>0).toNumber():t.version),i},e.prototype.toJSON=function(){return this.constructor.toObject(this,lt.util.toJSONOptions)},e.getTypeUrl=function(t){return t===void 0&&(t="type.googleapis.com"),t+"/onnx.OperatorSetIdProto"},e}(),r.OperatorStatus=function(){var e={},n=Object.create(e);return n[e[0]="EXPERIMENTAL"]=0,n[e[1]="STABLE"]=1,n}(),r.FunctionProto=function(){function e(n){if(this.input=[],this.output=[],this.attribute=[],this.attributeProto=[],this.node=[],this.opsetImport=[],n)for(var t=Object.keys(n),o=0;o<t.length;++o)n[t[o]]!=null&&(this[t[o]]=n[t[o]])}return e.prototype.name="",e.prototype.input=E.emptyArray,e.prototype.output=E.emptyArray,e.prototype.attribute=E.emptyArray,e.prototype.attributeProto=E.emptyArray,e.prototype.node=E.emptyArray,e.prototype.docString="",e.prototype.opsetImport=E.emptyArray,e.prototype.domain="",e.create=function(t){return new e(t)},e.encode=function(t,o){if(o||(o=vt.create()),t.name!=null&&Object.hasOwnProperty.call(t,"name")&&o.uint32(10).string(t.name),t.input!=null&&t.input.length)for(var i=0;i<t.input.length;++i)o.uint32(34).string(t.input[i]);if(t.output!=null&&t.output.length)for(var i=0;i<t.output.length;++i)o.uint32(42).string(t.output[i]);if(t.attribute!=null&&t.attribute.length)for(var i=0;i<t.attribute.length;++i)o.uint32(50).string(t.attribute[i]);if(t.node!=null&&t.node.length)for(var i=0;i<t.node.length;++i)I.onnx.NodeProto.encode(t.node[i],o.uint32(58).fork()).ldelim();if(t.docString!=null&&Object.hasOwnProperty.call(t,"docString")&&o.uint32(66).string(t.docString),t.opsetImport!=null&&t.opsetImport.length)for(var i=0;i<t.opsetImport.length;++i)I.onnx.OperatorSetIdProto.encode(t.opsetImport[i],o.uint32(74).fork()).ldelim();if(t.domain!=null&&Object.hasOwnProperty.call(t,"domain")&&o.uint32(82).string(t.domain),t.attributeProto!=null&&t.attributeProto.length)for(var i=0;i<t.attributeProto.length;++i)I.onnx.AttributeProto.encode(t.attributeProto[i],o.uint32(90).fork()).ldelim();return o},e.encodeDelimited=function(t,o){return this.encode(t,o).ldelim()},e.decode=function(t,o){t instanceof re||(t=re.create(t));for(var i=o===void 0?t.len:t.pos+o,s=new I.onnx.FunctionProto;t.pos<i;){var a=t.uint32();switch(a>>>3){case 1:{s.name=t.string();break}case 4:{s.input&&s.input.length||(s.input=[]),s.input.push(t.string());break}case 5:{s.output&&s.output.length||(s.output=[]),s.output.push(t.string());break}case 6:{s.attribute&&s.attribute.length||(s.attribute=[]),s.attribute.push(t.string());break}case 11:{s.attributeProto&&s.attributeProto.length||(s.attributeProto=[]),s.attributeProto.push(I.onnx.AttributeProto.decode(t,t.uint32()));break}case 7:{s.node&&s.node.length||(s.node=[]),s.node.push(I.onnx.NodeProto.decode(t,t.uint32()));break}case 8:{s.docString=t.string();break}case 9:{s.opsetImport&&s.opsetImport.length||(s.opsetImport=[]),s.opsetImport.push(I.onnx.OperatorSetIdProto.decode(t,t.uint32()));break}case 10:{s.domain=t.string();break}default:t.skipType(a&7);break}}return s},e.decodeDelimited=function(t){return t instanceof re||(t=new re(t)),this.decode(t,t.uint32())},e.verify=function(t){if(typeof t!="object"||t===null)return"object expected";if(t.name!=null&&t.hasOwnProperty("name")&&!E.isString(t.name))return"name: string expected";if(t.input!=null&&t.hasOwnProperty("input")){if(!Array.isArray(t.input))return"input: array expected";for(var o=0;o<t.input.length;++o)if(!E.isString(t.input[o]))return"input: string[] expected"}if(t.output!=null&&t.hasOwnProperty("output")){if(!Array.isArray(t.output))return"output: array expected";for(var o=0;o<t.output.length;++o)if(!E.isString(t.output[o]))return"output: string[] expected"}if(t.attribute!=null&&t.hasOwnProperty("attribute")){if(!Array.isArray(t.attribute))return"attribute: array expected";for(var o=0;o<t.attribute.length;++o)if(!E.isString(t.attribute[o]))return"attribute: string[] expected"}if(t.attributeProto!=null&&t.hasOwnProperty("attributeProto")){if(!Array.isArray(t.attributeProto))return"attributeProto: array expected";for(var o=0;o<t.attributeProto.length;++o){var i=I.onnx.AttributeProto.verify(t.attributeProto[o]);if(i)return"attributeProto."+i}}if(t.node!=null&&t.hasOwnProperty("node")){if(!Array.isArray(t.node))return"node: array expected";for(var o=0;o<t.node.length;++o){var i=I.onnx.NodeProto.verify(t.node[o]);if(i)return"node."+i}}if(t.docString!=null&&t.hasOwnProperty("docString")&&!E.isString(t.docString))return"docString: string expected";if(t.opsetImport!=null&&t.hasOwnProperty("opsetImport")){if(!Array.isArray(t.opsetImport))return"opsetImport: array expected";for(var o=0;o<t.opsetImport.length;++o){var i=I.onnx.OperatorSetIdProto.verify(t.opsetImport[o]);if(i)return"opsetImport."+i}}return t.domain!=null&&t.hasOwnProperty("domain")&&!E.isString(t.domain)?"domain: string expected":null},e.fromObject=function(t){if(t instanceof I.onnx.FunctionProto)return t;var o=new I.onnx.FunctionProto;if(t.name!=null&&(o.name=String(t.name)),t.input){if(!Array.isArray(t.input))throw TypeError(".onnx.FunctionProto.input: array expected");o.input=[];for(var i=0;i<t.input.length;++i)o.input[i]=String(t.input[i])}if(t.output){if(!Array.isArray(t.output))throw TypeError(".onnx.FunctionProto.output: array expected");o.output=[];for(var i=0;i<t.output.length;++i)o.output[i]=String(t.output[i])}if(t.attribute){if(!Array.isArray(t.attribute))throw TypeError(".onnx.FunctionProto.attribute: array expected");o.attribute=[];for(var i=0;i<t.attribute.length;++i)o.attribute[i]=String(t.attribute[i])}if(t.attributeProto){if(!Array.isArray(t.attributeProto))throw TypeError(".onnx.FunctionProto.attributeProto: array expected");o.attributeProto=[];for(var i=0;i<t.attributeProto.length;++i){if(typeof t.attributeProto[i]!="object")throw TypeError(".onnx.FunctionProto.attributeProto: object expected");o.attributeProto[i]=I.onnx.AttributeProto.fromObject(t.attributeProto[i])}}if(t.node){if(!Array.isArray(t.node))throw TypeError(".onnx.FunctionProto.node: array expected");o.node=[];for(var i=0;i<t.node.length;++i){if(typeof t.node[i]!="object")throw TypeError(".onnx.FunctionProto.node: object expected");o.node[i]=I.onnx.NodeProto.fromObject(t.node[i])}}if(t.docString!=null&&(o.docString=String(t.docString)),t.opsetImport){if(!Array.isArray(t.opsetImport))throw TypeError(".onnx.FunctionProto.opsetImport: array expected");o.opsetImport=[];for(var i=0;i<t.opsetImport.length;++i){if(typeof t.opsetImport[i]!="object")throw TypeError(".onnx.FunctionProto.opsetImport: object expected");o.opsetImport[i]=I.onnx.OperatorSetIdProto.fromObject(t.opsetImport[i])}}return t.domain!=null&&(o.domain=String(t.domain)),o},e.toObject=function(t,o){o||(o={});var i={};if((o.arrays||o.defaults)&&(i.input=[],i.output=[],i.attribute=[],i.node=[],i.opsetImport=[],i.attributeProto=[]),o.defaults&&(i.name="",i.docString="",i.domain=""),t.name!=null&&t.hasOwnProperty("name")&&(i.name=t.name),t.input&&t.input.length){i.input=[];for(var s=0;s<t.input.length;++s)i.input[s]=t.input[s]}if(t.output&&t.output.length){i.output=[];for(var s=0;s<t.output.length;++s)i.output[s]=t.output[s]}if(t.attribute&&t.attribute.length){i.attribute=[];for(var s=0;s<t.attribute.length;++s)i.attribute[s]=t.attribute[s]}if(t.node&&t.node.length){i.node=[];for(var s=0;s<t.node.length;++s)i.node[s]=I.onnx.NodeProto.toObject(t.node[s],o)}if(t.docString!=null&&t.hasOwnProperty("docString")&&(i.docString=t.docString),t.opsetImport&&t.opsetImport.length){i.opsetImport=[];for(var s=0;s<t.opsetImport.length;++s)i.opsetImport[s]=I.onnx.OperatorSetIdProto.toObject(t.opsetImport[s],o)}if(t.domain!=null&&t.hasOwnProperty("domain")&&(i.domain=t.domain),t.attributeProto&&t.attributeProto.length){i.attributeProto=[];for(var s=0;s<t.attributeProto.length;++s)i.attributeProto[s]=I.onnx.AttributeProto.toObject(t.attributeProto[s],o)}return i},e.prototype.toJSON=function(){return this.constructor.toObject(this,lt.util.toJSONOptions)},e.getTypeUrl=function(t){return t===void 0&&(t="type.googleapis.com"),t+"/onnx.FunctionProto"},e}(),r}();qc.exports=I});function Jn(r,e){if(!r)throw new Error(typeof e=="string"?e:e())}function Fo(r){return new TextDecoder().decode(r)}var dt,$n,du,Vt,ga,kt,Yt,le,Uo,Tn,Sn,In,Ze=D(()=>{"use strict";ca();Xs();dt=qn(Zn());An();$n=class{static arraysEqual(e,n){if(e.length!==n.length)return!1;for(let t=0;t<e.length;t++)if(e[t]!==n[t])return!1;return!0}},du=class{static preprocessInputShapes(e,n){let t=e.length===1?[1,e[0]]:e,o=n.length===1?[n[0],1]:n;return[t,o]}static postprocessOutputShape(e,n,t){n===1&&e.splice(e.length-2,1),t===1&&e.pop()}static calcMatMulShape(e,n){return e[1]!==n[0]?void 0:[e[0],n[1]]}},Vt=class r{static calcShape(e,n,t=!1){let o=e.length,i=n.length;if(o===0)return n;if(i===0)return e;let s=Math.max(e.length,n.length),a=new Array(s);if(t){if(o<2||i<2)return;let u=du.calcMatMulShape([e[o-2],e[o-1]],[n[i-2],n[i-1]]);if(u===void 0)return;[a[s-2],a[s-1]]=u}for(let u=t?3:1;u<=s;u++){let l=o-u<0?1:e[o-u],d=i-u<0?1:n[i-u];if(l!==d&&l>1&&d>1)return;a[s-u]=Math.max(l,d)}return a}static index(e,n){let t=new Array(n.length);return r.fillIndex(e,n,t),t}static fillIndex(e,n,t){let o=e.length-n.length;for(let i=0;i<n.length;i++)t[i]=e[o+i]%n[i]}static calc(e,n,t,o,i){let s=r.calcShape(e.dims,n.dims);if(s){if(o&&!le.areEqual(s,e.dims))return;let a=le.size(s),u=o?e:new Tt(s,i||e.type);if(s.length===0)u.set([],t(e.get([]),n.get([])));else{let l=new Array(s.length),d=new Array(e.dims.length),p=new Array(n.dims.length),h=0,y=0,b=!1,w=!1;e.dims.length===0&&(h=e.get([]),b=!0),n.dims.length===0&&(y=n.get([]),w=!0);let T;for(let x=0;x<a;x++){T=x;for(let _=s.length-1;_>=0;_--)l[_]=T%s[_],T=Math.floor(T/s[_]);b||(r.fillIndex(l,e.dims,d),h=e.get(d)),w||(r.fillIndex(l,n.dims,p),y=n.get(p)),u.set(l,t(h,y))}}return u}}static isValidBroadcast(e,n){let t=e.length,o=n.length;if(t>o)return!1;for(let i=1;i<=t;i++)if(e[t-i]!==1&&e[t-i]!==n[o-i])return!1;return!0}static getBroadcastDims(e,n){let t=e.length,o=[];for(let i=0;i<t;i++){let s=t-1-i,a=e[s]||1;(n[n.length-1-i]||1)>1&&a===1&&o.unshift(s)}return o}},ga=class{static getShapeOfGemmResult(e,n,t,o,i){if(e.length!==2||t.length!==2)throw new Error("shape need to be of size 2");let s,a,u;n?(s=e[1],a=e[0]):(s=e[0],a=e[1]);let l=-1;if(o?(u=t[0],l=1):(u=t[1],l=0),t[l]!==a)throw new Error("dimension mismatch");if(s<=0||u<=0||a<=0)throw new Error("invalid shape specified");if(i&&!Vt.isValidBroadcast(i,[s,u]))throw new Error("gemm: invalid bias shape for broadcast");return[s,u,a]}},kt=class r{static tensorDataTypeFromProto(e){switch(e){case dt.onnx.TensorProto.DataType.INT8:return"int8";case dt.onnx.TensorProto.DataType.UINT8:return"uint8";case dt.onnx.TensorProto.DataType.BOOL:return"bool";case dt.onnx.TensorProto.DataType.INT16:return"int16";case dt.onnx.TensorProto.DataType.UINT16:return"uint16";case dt.onnx.TensorProto.DataType.INT32:return"int32";case dt.onnx.TensorProto.DataType.UINT32:return"uint32";case dt.onnx.TensorProto.DataType.FLOAT:return"float32";case dt.onnx.TensorProto.DataType.DOUBLE:return"float64";case dt.onnx.TensorProto.DataType.STRING:return"string";case dt.onnx.TensorProto.DataType.INT64:return"int32";case dt.onnx.TensorProto.DataType.UINT64:return"uint32";default:throw new Error(`unsupported data type: ${dt.onnx.TensorProto.DataType[e]}`)}}static tensorDataTypeStringToEnum(e){switch(e){case"int8":return dt.onnx.TensorProto.DataType.INT8;case"uint8":return dt.onnx.TensorProto.DataType.UINT8;case"bool":return dt.onnx.TensorProto.DataType.BOOL;case"int16":return dt.onnx.TensorProto.DataType.INT16;case"uint16":return dt.onnx.TensorProto.DataType.UINT16;case"int32":return dt.onnx.TensorProto.DataType.INT32;case"uint32":return dt.onnx.TensorProto.DataType.UINT32;case"float32":return dt.onnx.TensorProto.DataType.FLOAT;case"float64":return dt.onnx.TensorProto.DataType.DOUBLE;case"string":return dt.onnx.TensorProto.DataType.STRING;case"int64":return dt.onnx.TensorProto.DataType.INT64;case"uint64":return dt.onnx.TensorProto.DataType.UINT64;default:throw new Error(`unsupported data type: ${e}`)}}static tensorDimsFromProto(e){return e.map(n=>jr.isLong(n)?n.toNumber():n)}static tensorValueTypeFromProto(e){return{tensorType:r.tensorDataTypeFromProto(e.elemType),shape:{dims:r.tensorDimsFromProto(e.shape.dim.map(n=>n.dimValue))}}}static tensorDimsFromORTFormat(e){let n=[];for(let t=0;t<e.dimsLength();t++)n.push(Yt.longToNumber(e.dims(t)));return n}static tensorAttributesFromORTFormat(e){let n=[];for(let t=0;t<e.attributesLength();t++)n.push(e.attributes(t));return n}},Yt=class{static longToNumber(e,n){return jr.isLong(e)?e.toNumber():e instanceof B.Long?jr.fromValue({low:e.low,high:e.high,unsigned:n??!1}).toNumber():e}static isLong(e){return jr.isLong(e)||e instanceof B.Long}},le=class r{static size(e){return r.getSizeFromDimensionRange(e,0,e.length)}static sizeFromDimension(e,n){if(n<0||n>e.length)throw new Error(`invalid dimension of ${n} for sizeFromDimension as Tensor has ${e.length} dimensions.`);return r.getSizeFromDimensionRange(e,n,e.length)}static sizeToDimension(e,n){if(n<0||n>e.length)throw new Error(`invalid dimension of ${n} for sizeToDimension as Tensor has ${e.length} dimensions.`);return r.getSizeFromDimensionRange(e,0,n)}static getSizeFromDimensionRange(e,n,t){let o=1;for(let i=n;i<t;i++){if(e[i]<=0)throw new Error("cannot get valid size from specified dimension range. Most likely the range contains 0 or negative values in them.");o*=e[i]}return o}static computeStrides(e){let n=e.length;if(n===0)return[];if(n===1)return[1];let t=new Array(n);t[n-1]=1,t[n-2]=e[n-1];for(let o=n-3;o>=0;--o)t[o]=t[o+1]*e[o+1];return t}static transpose(e){return e.slice().reverse()}static indicesToOffset(e,n,t){t===void 0&&(t=e.length);let o=0;for(let i=0;i<t;++i)o+=n[i]*e[i];return o}static offsetToIndices(e,n){let t=n.length;if(t===0)return[];if(t===1)return[e*n[0]];let o=new Array(n.length);for(let i=0;i<o.length-1;++i)o[i]=Math.floor(e/n[i]),e-=o[i]*n[i];return o[o.length-1]=e,o}static normalizeAxis(e,n){if(e<-n&&e>=n)throw new Error("unsupported axis for this operation.");return e<0?e+n:e}static normalizeAxes(e,n){return e.map(t=>this.normalizeAxis(t,n))}static incrementIndex(e,n,t){if(n.length===0||e.length===0)throw new Error("Index incrementing unsupported for scalar Tensor");if(t===void 0)t=n.length;else if(t<=0||t>n.length)throw new Error("Incorrect axis to increment on");for(let o=t-1;o>=0&&(e[o]++,!(e[o]<n[o]));--o)e[o]=0}static calculateReshapedDims(e,n){if(n.length===0){if(e.length===0||r.size(e)===1)return[];throw new Error("cannot reshape to a scalar Tensor")}let t=n.length,o=new Array(t),i=-1,s=1;for(let u=0;u<t;u++){if(n[u]<-1)throw new Error("a dimension in shape hints cannot be less than -1");if(n[u]===-1){if(i!==-1)throw new Error("at most one dimension in shape hints can be -1");i=u}else{if(n[u]===0){if(u>=e.length)throw new Error("the dimension with value zero exceeds the dimension size of the input tensor");o[u]=e[u]}else o[u]=n[u];s*=o[u]}}let a=r.size(e);if(i!==-1){if(a%s!==0)throw new Error(`the input tensor cannot be reshaped to the requested shape. Input shape: [${e}] Output shape: [${n}]`);o[i]=a/s}else if(s!==a)throw new Error("reshapedDims and originalDims don't have matching sizes");return o}static sortBasedOnPerm(e,n){return n?n.map(t=>e[t]):e.slice().reverse()}static padShape(e,n){let t=e.length;return e.map((o,i)=>o+n[i]+n[i+t])}static areEqual(e,n){return e.length!==n.length?!1:e.every((t,o)=>t===n[o])}static validateDimsAndCalcSize(e){if(e.length>6)throw new TypeError("Only rank 0 to 6 is supported for tensor shape.");let n=1;for(let t of e){if(!Number.isInteger(t))throw new TypeError(`Invalid shape: ${t} is not an integer`);if(t<0||t>2147483647)throw new TypeError(`Invalid shape: length ${t} is not allowed`);n*=t}return n}static flattenShape(e,n){n<0&&(n+=e.length);let t=e.reduce((s,a)=>s*a,1),o=e.slice(n).reduce((s,a)=>s*a,1);return[t/o,o]}static squeezeShape(e,n){let t=new Array;n=r.normalizeAxes(n,e.length);for(let o=0;o<e.length;o++){let i=n.indexOf(o)>=0;if(i&&e[o]!==1)throw new Error("squeeze an axis of size different than 1");(n.length===0&&e[o]>1||n.length>0&&!i)&&t.push(e[o])}return t}static unsqueezeShape(e,n){let t=new Array(e.length+n.length);t.fill(0);for(let i=0;i<n.length;i++){let s=r.normalizeAxis(n[i],t.length);if(s>=t.length)throw new Error("'axes' has an out of range axis");if(t[s]!==0)throw new Error("'axes' has a duplicate axis");t[s]=1}let o=0;for(let i=0;i<t.length;i++)t[i]===0&&(t[i]=e[o++]);if(o!==e.length)throw new Error("the unsqueezed dimension could not be established");return t}},Uo=class r{static splitShape(e,n,t,o){if(t.length===0){if(!o)throw new Error("need to know number of outputs when the 'split' attribute is not specified");r.determineSplit(e[n],o,t)}let i=[],s=[0];for(let a=0;a<t.length;++a){a!==0&&s.push(s[a-1]+t[a-1]);let u=e.slice();u[n]=t[a],i.push(u)}return[i,s]}static determineSplit(e,n,t){if(e%n!==0)throw new Error("cannot split tensor to equal sized parts");for(let o=0;o<n;++o)t.push(e/n)}},Tn=class r{static adjustPoolAttributes(e,n,t,o,i,s){if(!e&&t.length!==n.length-2)throw new Error("length of specified kernel shapes should be 2 less than length of input dimensions");if(e)for(let a=0;a<n.length-2;a++)a>=t.length?t.push(n[a+2]):t[a]=n[a+2];for(let a=0;a<t.length;a++)if(a<o.length){if(o[a]<0)throw new Error("strides should be greater than or equal to 1")}else o.push(1);for(let a=0;a<t.length;a++)if(a<i.length){if(i[a]<0)throw new Error("dilations should be greater than or equal to 1")}else i.push(1);for(let a=0;a<t.length*2;a++)if(a<s.length){if(s[a]<0)throw new Error("pad should be greater than or equal to 1")}else s.push(0);for(let a=0;a<t.length;a++){if(t[a]<=0)throw new Error("kernel shapes need to be greater than 0");if(s[a]>=t[a]||s[a+t.length]>=t[a])throw new Error("pads should be smaller than kernel")}}static adjustPadsBasedOnAutoPad(e,n,t,o,i,s){if(s){if(i.length!==2*(e.length-2))throw new Error("length of pads should be twice the length of data dimensions");if(n.length!==e.length-2)throw new Error("length of strides should be the length of data dimensions");if(o.length!==e.length-2)throw new Error("length of kernel shapes should be the length of data dimensions");for(let a=0;a<e.length-2;a++)r.adjustPadAndReturnShape(e[a+2],n[a],t[a],o[a],i,a,a+e.length-2,s)}}static computePoolOutputShape(e,n,t,o,i,s,a){if(n.length<=0)throw new Error("input shape must be of size greater than 0");let u=[n[0],n[1]];return r.computeShapeHelper(e,n,u,t,o,i,s,a),u}static computeConvOutputShape(e,n,t,o,i,s,a){if(e.length<=0||n.length<=0)throw new Error("invalid input tensor dims or invalid filter tensor dims");let u=[e[0],n[0]];return r.computeShapeHelper(!1,e,u,t,o,i,s,a),u}static computeShapeHelper(e,n,t,o,i,s,a,u){if(e)for(let l=0;l<n.length-2;l++)t.push(1);else for(let l=0;l<n.length-2;l++)t.push(r.adjustPadAndReturnShape(n[l+2],o[l],i[l],s[l],a,l,l+n.length-2,u))}static adjustPadAndReturnShape(e,n,t,o,i,s,a,u){let l=t*(o-1)+1;if(u&&u!=="NOTSET")switch(u){case"VALID":return i[s]=0,i[a]=0,Math.floor((e-l)/n+1);case"SAME_LOWER":case"SAME_UPPER":if(t!==1)throw new Error("Dilation not supported for SAME_UPPER or SAME_LOWER");{let p=((e+n-1)/n-1)*n+o-e;return i[s]=Math.floor(u==="SAME_LOWER"?(p+1)/2:p/2),i[a]=p-i[s],Math.floor((e+p-o)/n+1)}default:throw new Error("Unsupported AutoPad type")}else return Math.floor((e+i[s]+i[a]-l)/n+1)}},Sn=-34028234663852886e22,In=34028234663852886e22});function Pw(r){switch(r){case"bool":case"int8":case"uint8":return 1;case"int16":case"uint16":return 2;case"int32":case"uint32":case"float32":return 4;case"float64":return 8;default:throw new Error(`cannot calculate sizeof() on type ${r}`)}}function Kc(r){switch(r){case Ne.onnx.TensorProto.DataType.UINT8:case Ne.onnx.TensorProto.DataType.INT8:case Ne.onnx.TensorProto.DataType.BOOL:return 1;case Ne.onnx.TensorProto.DataType.UINT16:case Ne.onnx.TensorProto.DataType.INT16:return 2;case Ne.onnx.TensorProto.DataType.FLOAT:case Ne.onnx.TensorProto.DataType.INT32:case Ne.onnx.TensorProto.DataType.UINT32:return 4;case Ne.onnx.TensorProto.DataType.INT64:case Ne.onnx.TensorProto.DataType.DOUBLE:case Ne.onnx.TensorProto.DataType.UINT64:return 8;default:throw new Error(`cannot calculate sizeof() on type ${Ne.onnx.TensorProto.DataType[r]}`)}}function kw(r,e){return new(Zc(e))(r)}function Zc(r){switch(r){case"bool":case"uint8":return Uint8Array;case"int8":return Int8Array;case"int16":return Int16Array;case"uint16":return Uint16Array;case"int32":return Int32Array;case"uint32":return Uint32Array;case"int64":return BigInt64Array;case"float32":return Float32Array;case"float64":return Float64Array;default:throw new Error("unspecified error")}}function fu(r,e){if(e===Ne.onnx.TensorProto.DataType.INT64||e===cu.TensorDataType.INT64){if(r.greaterThanOrEqual(2147483648)||r.lessThan(-2147483648))throw new TypeError("int64 is not supported")}else if(e===Ne.onnx.TensorProto.DataType.UINT32||e===cu.TensorDataType.UINT32||e===Ne.onnx.TensorProto.DataType.UINT64||e===cu.TensorDataType.UINT64){if(r.greaterThanOrEqual(4294967296)||r.lessThan(0))throw new TypeError("uint64 is not supported")}else throw new TypeError(`not a LONG type: ${Ne.onnx.TensorProto.DataType[e]}`);return r.toNumber()}function Yc(r,e,n){switch(e){case Ne.onnx.TensorProto.DataType.BOOL:case Ne.onnx.TensorProto.DataType.UINT8:return r.getUint8(n);case Ne.onnx.TensorProto.DataType.INT8:return r.getInt8(n);case Ne.onnx.TensorProto.DataType.UINT16:return r.getUint16(n,!0);case Ne.onnx.TensorProto.DataType.INT16:return r.getInt16(n,!0);case Ne.onnx.TensorProto.DataType.FLOAT:return r.getFloat32(n,!0);case Ne.onnx.TensorProto.DataType.INT32:return r.getInt32(n,!0);case Ne.onnx.TensorProto.DataType.UINT32:return r.getUint32(n,!0);case Ne.onnx.TensorProto.DataType.INT64:return fu(jr.fromBits(r.getUint32(n,!0),r.getUint32(n+4,!0),!1),e);case Ne.onnx.TensorProto.DataType.DOUBLE:return r.getFloat64(n,!0);case Ne.onnx.TensorProto.DataType.UINT64:return fu(jr.fromBits(r.getUint32(n,!0),r.getUint32(n+4,!0),!0),e);default:throw new Error(`cannot read from DataView for type ${Ne.onnx.TensorProto.DataType[e]}`)}}var Xc,Ne,cu,Tt,An=D(()=>{"use strict";Xc=qn(Ld());Xs();zo();Ne=qn(Zn());Ze();cu=ce.experimental.fbs,Tt=class r{constructor(e,n,t,o,i,s=Xc.Guid.create()){this.dims=e;this.type=n;this.dataProvider=t;this.asyncDataProvider=o;this.cache=i;this.dataId=s;this.size=le.validateDimsAndCalcSize(e);let a=this.size,u=t===void 0&&o===void 0&&i===void 0;if(i!==void 0&&i.length!==a)throw new RangeError("Input dims doesn't match data length.");if(n==="string"){if(i!==void 0&&(!Array.isArray(i)||!i.every(l=>typeof l=="string")))throw new TypeError("cache should be a string array");u&&(this.cache=new Array(a))}else{if(i!==void 0){let l=Zc(n);if(!(i instanceof l))throw new TypeError(`cache should be type ${l.name}`)}if(u){let l=new ArrayBuffer(a*Pw(n));this.cache=kw(l,n)}}}get data(){if(this.cache===void 0){let e=this.dataProvider(this.dataId);if(e.length!==this.size)throw new Error("Length of data provided by the Data Provider is inconsistent with the dims of this Tensor.");this.cache=e}return this.cache}get stringData(){if(this.type!=="string")throw new TypeError("data type is not string");return this.data}get integerData(){switch(this.type){case"uint8":case"int8":case"uint16":case"int16":case"int32":case"uint32":case"bool":return this.data;default:throw new TypeError("data type is not integer (uint8, int8, uint16, int16, int32, uint32, bool)")}}get floatData(){switch(this.type){case"float32":case"float64":return this.data;default:throw new TypeError("data type is not float (float32, float64)")}}get numberData(){if(this.type!=="string")return this.data;throw new TypeError("type cannot be non-number (string)")}get(e){return this.data[le.indicesToOffset(e,this.strides)]}set(e,n){this.data[le.indicesToOffset(e,this.strides)]=n}async getData(){return this.cache===void 0&&(this.cache=await this.asyncDataProvider(this.dataId)),this.cache}get strides(){return this._strides||(this._strides=le.computeStrides(this.dims)),this._strides}static fromProto(e){if(!e)throw new Error("cannot construct Value from an empty tensor");let n=kt.tensorDataTypeFromProto(e.dataType),t=kt.tensorDimsFromProto(e.dims),o=new r(t,n);if(n==="string")e.stringData.forEach((i,s)=>{o.data[s]=Fo(i)});else if(e.rawData&&typeof e.rawData.byteLength=="number"&&e.rawData.byteLength>0){let i=o.data,s=new DataView(e.rawData.buffer,e.rawData.byteOffset,e.rawData.byteLength),a=Kc(e.dataType),u=e.rawData.byteLength/a;if(e.rawData.byteLength%a!==0)throw new Error("invalid buffer length");if(i.length!==u)throw new Error("buffer length mismatch");for(let l=0;l<u;l++){let d=Yc(s,e.dataType,l*a);i[l]=d}}else{let i;switch(e.dataType){case Ne.onnx.TensorProto.DataType.FLOAT:i=e.floatData;break;case Ne.onnx.TensorProto.DataType.INT32:case Ne.onnx.TensorProto.DataType.INT16:case Ne.onnx.TensorProto.DataType.UINT16:case Ne.onnx.TensorProto.DataType.INT8:case Ne.onnx.TensorProto.DataType.UINT8:case Ne.onnx.TensorProto.DataType.BOOL:i=e.int32Data;break;case Ne.onnx.TensorProto.DataType.INT64:i=e.int64Data;break;case Ne.onnx.TensorProto.DataType.DOUBLE:i=e.doubleData;break;case Ne.onnx.TensorProto.DataType.UINT32:case Ne.onnx.TensorProto.DataType.UINT64:i=e.uint64Data;break;default:throw new Error("unspecific error")}if(i==null)throw new Error("failed to populate data from a tensorproto value");let s=o.data;if(s.length!==i.length)throw new Error("array length mismatch");for(let a=0;a<i.length;a++){let u=i[a];jr.isLong(u)?s[a]=fu(u,e.dataType):s[a]=u}}return o}static fromData(e,n,t){return new r(n,t,void 0,void 0,e)}static fromOrtTensor(e){if(!e)throw new Error("cannot construct Value from an empty tensor");let n=kt.tensorDimsFromORTFormat(e),t=kt.tensorDataTypeFromProto(e.dataType()),o=new r(n,t);if(t==="string")for(let i=0;i<e.stringDataLength();i++)o.data[i]=e.stringData(i);else if(e.rawDataArray()&&typeof e.rawDataLength()=="number"&&e.rawDataLength()>0){let i=o.data,s=new DataView(e.rawDataArray().buffer,e.rawDataArray().byteOffset,e.rawDataLength()),a=Kc(e.dataType()),u=e.rawDataLength()/a;if(e.rawDataLength()%a!==0)throw new Error("invalid buffer length");if(i.length!==u)throw new Error("buffer length mismatch");for(let l=0;l<u;l++){let d=Yc(s,e.dataType(),l*a);i[l]=d}}return o}}});function he(r){return r===1?Dw:Bw}function Jc(r){let e=he(r);return`${e.version}
      precision highp float;
      ${e.attribute} vec3 position;
      ${e.attribute} vec2 textureCoord;

      ${e.varyingVertex} vec2 TexCoords;

      void main()
      {
          gl_Position = vec4(position, 1.0);
          TexCoords = textureCoord;
      }`}function Qc(r){let e=he(r);return`${e.version}
    precision highp float;
    precision highp int;
    precision highp sampler2D;
    ${e.varyingFrag} vec2 TexCoords;
    ${e.outputDeclaration}
    const vec2 halfCR = vec2(0.5, 0.5);

    // Custom vector types to handle higher dimenalities.
    struct ivec5
    {
      int x;
      int y;
      int z;
      int w;
      int u;
    };

    struct ivec6
    {
      int x;
      int y;
      int z;
      int w;
      int u;
      int v;
    };

    int imod(int x, int y) {
      return x - y * (x / y);
    }

    `}function ef(r,e){let n=he(r);return`
  void main() {
    int indices[${e}];
    toVec(TexCoords, indices);
    vec4 result = vec4(process(indices));
    ${n.output} = result;
  }
  `}var Dw,Bw,pt=D(()=>{"use strict";Dw={version:"",attribute:"attribute",varyingVertex:"varying",varyingFrag:"varying",texture2D:"texture2D",output:"gl_FragColor",outputDeclaration:""},Bw={version:"#version 300 es",attribute:"in",varyingVertex:"out",varyingFrag:"in",texture2D:"texture",output:"outputColor",outputDeclaration:"out vec4 outputColor;"}});var He=D(()=>{"use strict"});async function pu(r,e=t=>0,n){return new Promise((t,o)=>{let i=0,s=()=>{if(r()){t();return}i++;let a=e(i);if(n!=null&&i>=n){o();return}setTimeout(s,a)};s()})}function ya(r){return Jn(typeof r<"u"&&r.length!==0,()=>"empty string found for sampler name"),"get"+r.charAt(0).toUpperCase()+r.slice(1)}function tf(r){return Jn(typeof r<"u"&&r.length!==0,()=>"empty string found for sampler name"),"get"+r.charAt(0).toUpperCase()+r.slice(1)+"AtOutCoords"}function Qn(r,e){let n=JSON.parse(JSON.stringify(r));return n=e,n}function eo(r,e){return e.map(n=>r[n]).join(", ")}function Gt(r){if(r<=1)return"int";if(r===2)return"ivec2";if(r===3)return"ivec3";if(r===4)return"ivec4";if(r===5)return"ivec5";if(r===6)return"ivec6";throw Error(`GPU for rank ${r} is not yet supported`)}function yr(r=6){return["x","y","z","w","u","v"].slice(0,r)}var Cr=D(()=>{"use strict";Ze()});function Rw(r,e){return yr(e).map(n=>`${r}.${n}`)}function to(r,e){return e===1?[r]:Rw(r,e)}function Pr(){return`
    float getChannel(vec4 frag, int dim) {
      int modCoord = imod(dim, 2);
      return modCoord == 0 ? frag.r : frag.g;
    }

    float getChannel(vec4 frag, vec2 innerDims) {
      vec2 modCoord = mod(innerDims, 2.);
      return modCoord.x == 0. ?
        (modCoord.y == 0. ? frag.r : frag.g) :
        (modCoord.y == 0. ? frag.b : frag.a);
    }
  `}var On=D(()=>{"use strict";Cr()});function Mw(r,e,n){if(r===0)return"false";if(r===1)return`rc > ${e[0]}`;let t="";for(let o=r-2;o<r;o++)t+=`${n[o]} >= ${e[o-r+2]}`,o<r-1&&(t+="||");return t}function Nw(r,e){let n=r.length;if(n===0)return"getA(), 0, 0, 0";if(n===1)return`getA(rc),
            rc + 1 >= ${r[0]} ? 0. : getA(rc + 1),
            0, 0`;let t="r, c",o="r, cp1",i="rp1, c",s="rp1, cp1",a="";if(n>2)for(let u=0;u<n-2;++u)a=a+`${e[u]},`;return`getA(${a}${t}),
          rEdge ? 0. : getA(${a}${i}),
          cEdge ? 0. : getA(${a}${o}),
          rEdge || cEdge ? 0. : getA(${a}${s})`}function Lw(r,e,n,t){return r===0||r===1?"":`
    int r = ${e[r-2]};
    int c = ${e[r-1]};
    int rp1 = ${e[r-2]} + 1;
    int cp1 = ${e[r-1]} + 1;
    bool rEdge = rp1 >= ${t};
    bool cEdge = cp1 >= ${n};
    `}var rf,zw,nf,of=D(()=>{"use strict";pt();He();Cr();On();rf={name:"pack",inputNames:["A"],inputTypes:[1]},zw=(r,e)=>{let n=he(r.session.backend.glContext.version),t=e.dims,o=t.length,i=e.dims.length,s=Gt(i),a=to("rc",i),u=Lw(i,a,t[t.length-2],t[t.length-1]),l;o===0?l=[1,1]:o===1?l=[t[0],1]:l=[t[i-1],t[i-2]];let d=Mw(i,l,a),p=Nw(t,a),h=`
        void main() {
          ${s} rc = getOutputCoords();

          if(${d}) {
            ${n.output} = vec4(0);
          } else {
            ${u}

            ${n.output} = vec4(${p});
          }
        }
      `;return{...rf,hasMain:!0,output:{dims:e.dims,type:e.type,textureType:2},shaderSource:h}},nf=(r,e)=>({...rf,get:()=>zw(r,e)})});function mu(r){if(r.length===0)return[1,1,1];let e=1;for(let n=0;n<r.length-2;++n)e*=r[n];return[e,r.length>1?r[r.length-2]:1,r[r.length-1]]}function sf(r,e){let n=!1;return r.length===0||e.length===0?n=!0:r.length<2||e.length<2?n=r[r.length-1]===e[e.length-1]:n=r[r.length-1]===e[e.length-1]&&r[r.length-2]===e[e.length-2],n}function Vw(r){let e=le.computeStrides(r),n=["b","r","c"],t="index";return`
    ivec3 inputCoordsFromReshapedOutCoords(int index) {
      ${e.map((i,s)=>{let a=`int ${n[s]} = ${t} / ${i}`,u=s===e.length-1?`int ${n[s+1]} = ${t} - ${n[s]} * ${i}`:`index -= ${n[s]} * ${i}`;return`${a}; ${u};`}).join("")}
      return ivec3(b, r, c);
    }
  `}function Gw(r){let e=le.computeStrides(r);return`
  int getFlattenedIndex(ivec3 coords) {
    // reverse y, z order
    return coords.x * ${e[0]} + coords.z * ${e[1]} + coords.y;
  }
`}var Uw,Fw,af,uf=D(()=>{"use strict";Ze();pt();He();On();Uw=r=>({name:"Reshape (packed)",inputTypes:[2],inputNames:["A"],cacheHint:`${r}`}),Fw=(r,e,n,t)=>{let o=e.dims,i=t,s="";for(let l=0;l<4;l++){let d="";switch(l){case 0:d="outputCoords = rc;";break;case 1:d="outputCoords = ivec3(rc.x, rc.y+1, rc.z);";break;case 2:d="outputCoords = ivec3(rc.x, rc.y, rc.z+1);";break;case 3:d="outputCoords = ivec3(rc.x, rc.y+1, rc.z+1);";break;default:throw new Error}s+=`
        ${d}
        ${l>0?"if(outputCoords.y < rows && outputCoords.z < cols){":""}
          int flattenedIndex = getFlattenedIndex(outputCoords);

          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flattenedIndex);
          vec2 innerDims = vec2(float(inputRC.y),float(inputRC.z));

          result[${l}] = getChannel(getA(inputRC.x, inputRC.y, inputRC.z), innerDims);

        ${l>0?"}":""}
      `}let a=he(r.session.backend.glContext.version),u=`
      ${Vw(o)}
      ${Gw(i)}
      ${Pr()}

      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0.0);

        ivec3 outputCoords;
        int rows = ${i[2]};
        int cols = ${i[1]};

        ${s}
        ${a.output} = result;
      }
    `;return{...n,output:{dims:i,type:e.type,textureType:2},shaderSource:u,hasMain:!0}},af=(r,e,n)=>{let t=Uw(n);return{...t,get:()=>Fw(r,e,t,n)}}});var hu,lf=D(()=>{"use strict";pt();He();hu=(r,e)=>{let n=e.shape,t=he(r.session.backend.glContext.version),o=`
    const float FLOAT_MAX = 1.70141184e38;
    const float FLOAT_MIN = 1.17549435e-38;

    bool isNaN(float val) {
      return (val < 1.0 || 0.0 < val || val == 0.0) ? false : true;
    }

    highp vec4 encodeAsUint8(highp float v) {
      if (isNaN(v)) {
        return vec4(255, 255, 255, 255);
      }

      highp float av = abs(v);

      if(av < FLOAT_MIN) {
        return vec4(0.0, 0.0, 0.0, 0.0);
      } else if(v > FLOAT_MAX) {
        return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;
      } else if(v < -FLOAT_MAX) {
        return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;
      }

      highp vec4 c = vec4(0,0,0,0);

      highp float e = floor(log2(av));
      highp float m = exp2(fract(log2(av))) - 1.0;

      c[2] = floor(128.0 * m);
      m -= c[2] / 128.0;
      c[1] = floor(32768.0 * m);
      m -= c[1] / 32768.0;
      c[0] = floor(8388608.0 * m);

      highp float ebias = e + 127.0;
      c[3] = floor(ebias / 2.0);
      ebias -= c[3] * 2.0;
      c[2] += floor(ebias) * 128.0;

      c[3] += 128.0 * step(0.0, -v);

      return c / 255.0;
    }

    void main() {
      float value = ${t.texture2D}(X,TexCoords).r;
      ${t.output} = encodeAsUint8(value);
    }`,i={name:"Uint8Encode",inputTypes:[0],inputNames:["X"],output:{dims:n,type:e.tensor.type,textureType:3},shaderSource:o,hasMain:!0};return r.executeProgram(i,[e.tensor])}});function Hw(r,e){if(r===1)return"rc";let n="";for(let t=0;t<r;t++)n+=e[t],t<r-1&&(n+=",");return n}var df,Ww,cf,ff=D(()=>{"use strict";pt();He();Cr();On();df={name:"unpack",inputNames:["A"],inputTypes:[2]},Ww=(r,e)=>{let n=e.dims.length,t=to("rc",n),o=t.slice(-2),i=Gt(n),s=Pr(),u=e.dims.length===0?"":Hw(n,t),l=n<=1?"rc":`vec2(${o.join(",")})`,d=he(r.session.backend.glContext.version),p=`
    ${s}
    void main() {
      ${i} rc = getOutputCoords();

       // Sample the texture with the coords to get the rgba channel value.
       vec4 packedInput = getA(${u});

       ${d.output} = vec4(getChannel(packedInput, ${l}), 0, 0, 0);
     }
   `;return{...df,hasMain:!0,output:{dims:e.dims,type:e.type,textureType:0},shaderSource:p}},cf=(r,e)=>({...df,get:()=>Ww(r,e)})});var ba,Vo,va,Go=D(()=>{"use strict";nr();ba=class{constructor(e,n=1){if(n===1)this.internalFormat=e.R32F,this.format=e.RED,this.textureType=e.FLOAT,this.channelSize=n;else if(n===4)this.internalFormat=e.RGBA32F,this.format=e.RGBA,this.textureType=e.FLOAT,this.channelSize=n;else throw new Error(`Invalid number of channels: ${n}`)}encode(e,n){let t,o;return e.constructor!==Float32Array&&(Qe.warning("Encoder","data was not of type Float32; creating new Float32Array"),o=new Float32Array(e)),n*this.channelSize>e.length?(Qe.warning("Encoder","Source data too small. Allocating larger array"),o=e,t=this.allocate(n*this.channelSize),o.forEach((i,s)=>t[s]=i)):(o=e,t=o),t}allocate(e){return new Float32Array(e*4)}decode(e,n){return this.channelSize===1?e.filter((o,i)=>i%4===0).subarray(0,n):e.subarray(0,n)}},Vo=class{constructor(e,n=1,t){if(n!==1&&n!==4)throw new Error(`Invalid number of channels: ${n}`);this.internalFormat=e.RGBA,this.format=e.RGBA,this.channelSize=n,this.textureType=t||e.FLOAT}encode(e,n){let t=e;return this.channelSize===1&&(Qe.verbose("Encoder","Exploding into a larger array"),t=this.allocate(n),e.forEach((o,i)=>t[i*4]=o)),t}allocate(e){return new Float32Array(e*4)}decode(e,n){return this.channelSize===1?e.filter((o,i)=>i%4===0).subarray(0,n):e.subarray(0,n)}},va=class{constructor(e,n=1){this.channelSize=4;if(n===1)this.internalFormat=e.ALPHA,this.format=e.ALPHA,this.textureType=e.UNSIGNED_BYTE,this.channelSize=n;else if(n===4)this.internalFormat=e.RGBA,this.format=e.RGBA,this.textureType=e.UNSIGNED_BYTE,this.channelSize=n;else throw new Error(`Invalid number of channels: ${n}`)}encode(e,n){return new Uint8Array(e.buffer,e.byteOffset,e.byteLength)}allocate(e){return new Uint8Array(e*this.channelSize)}decode(e,n){if(e instanceof Uint8Array)return e.subarray(0,n);throw new Error(`Invalid array type: ${e.constructor}`)}}});var Wo,pf,gu,mf=D(()=>{"use strict";Ze();He();Wo=(r,e,n)=>{let t=n===0||n===1?1:4,o=n===2,i=n===1||n===2,s=n===4?e.length-1:void 0,a=n===4?e.map((u,l)=>l===e.length-1?u*4:u):void 0;return gu(r,e,t,a,{isPacked:o,reverseWH:i,breakAxis:s})},pf=(r,e,n)=>{let t=Wo(r,e,n);return[t.width,t.height]},gu=(r,e,n=1,t,o)=>{let i=!!(o&&o.isPacked),[s,a]=r.computeTextureWH(i&&t||e,o),u=e.length,l=e.slice(0);if(u===0&&(l=[1]),n===1)t=e;else if(i){if(n!==4)throw new Error("a packed texture must be 4-channel");t=e,u>0&&(l[u-1]=Math.ceil(l[u-1]/2)),u>1&&(l[u-2]=Math.ceil(l[u-2]/2))}else if(!t)throw new Error("Unpacked shape is needed when using channels > 1");return{width:s,height:a,channels:n,isPacked:i,shape:l,strides:le.computeStrides(l),unpackedShape:t,reversedWH:o&&o.reverseWH}}});var qw,wa,gf=D(()=>{"use strict";nr();An();Ze();of();uf();lf();ff();Go();mf();He();qw=(r,e)=>{let n=e.map(o=>`${o.unpackedShape.join(",")};${o.width}x${o.height}`).join("_"),t=r.name;return r.cacheHint&&(t+="["+r.cacheHint+"]"),t+=":"+n,t},wa=class{constructor(e){this.session=e;this.packedTextureDataCache=new Map,this.unpackedTextureDataCache=new Map}calculateTextureWidthAndHeight(e,n){return pf(this.session.layoutStrategy,e,n)}executeProgram(e,n){if(n.length<e.inputNames.length)throw new Error(`Input size mustn't be less than ${e.inputNames.length}.`);if(e.inputNames.length!==e.inputTypes.length)throw new Error("input names size does not match input types");let t=[];for(let l=0;l<e.inputNames.length;++l)t[l]=this.getOrCreateTextureData(n[l],e.inputTypes[l]);let o=qw(e,t),i=this.session.programManager.getArtifact(o),s=i?i.programInfo:typeof e.get=="function"?e.get():e,a=Wo(this.session.layoutStrategy,s.output.dims,s.output.textureType),u=this.createTextureData(a,s.output.type);return i||(i=this.session.programManager.build(s,t,u),this.session.programManager.setArtifact(o,i)),this.runProgram(i,t,u),u}run(e,n){return this.executeProgram(e,n).tensor}runProgram(e,n,t){for(let o=0;o<n.length;++o)if(!!n[o].isPacked!=(e.programInfo.inputTypes[o]===2))throw new Error(`input[${o}] property packed inconsistent`);if(!!t.isPacked!=(e.programInfo.output.textureType===2))throw new Error("output property packed inconsistent");this.session.programManager.run(e,n,t)}getOrCreateTextureData(e,n){let t=this.getTextureData(e.dataId,n===2);if(!t&&(t=this.getTextureData(e.dataId,n!==2),t))return n===2?this.pack(t):this.unpack(t);if(!t){let o=Wo(this.session.layoutStrategy,e.dims,n);if(n===4){let a=e.dims;if(a.length===4){let u=[a[0],Math.ceil(a[1]*a[2]*a[3]/4)],l=Wo(this.session.layoutStrategy,u,n),d=e.numberData;if(a[1]*a[2]*a[3]%4!==0){let p=a[0],h=a[1]*a[2]*a[3],y=Math.ceil(h*1/4)*4,b=p*y;d=new Float32Array(b);for(let w=0;w<p;++w){let T=w*h,x=w*y+w%1*h;d.set(e.numberData.subarray(T,T+h),x)}}return this.createTextureData(l,e.type,d,e,1)}}if(n===2){let i=gu(this.session.layoutStrategy,e.dims,1,[],{reverseWH:!0}),s=this.createTextureData(i,e.type,e.numberData,e,1);t=this.pack(s)}else t=this.createTextureData(o,e.type,e.numberData,e,1)}return t}createTextureDataFromLayoutBindTensor(e,n,t,o){return this.createTextureData(e,n,t,o,1)}createTextureData(e,n,t,o,i){Qe.verbose("InferenceHandler",`Creating TextureData: layout:[${JSON.stringify(e)}]`);let s=this.session.textureManager.createTextureFromLayout(n,e,t,i);return this.createTextureDataFromTexture(e,n,s,o)}reshapeUnpacked(e,n){let t=this.getOrCreateTextureData(e,0),o={channels:t.channels,height:t.height,width:t.width,shape:n.length!==0?n:[1],strides:le.computeStrides(n),unpackedShape:n};return this.createTextureDataFromTexture(o,e.type,t.texture).tensor}reshapePacked(e,n){let t=this.getOrCreateTextureData(e,2);if(sf(e.dims,n)){let l={channels:t.channels,height:t.height,width:t.width,shape:n.length!==0?n:[1],strides:le.computeStrides(n),unpackedShape:n,isPacked:!0};return this.createTextureDataFromTexture(l,e.type,t.texture).tensor}let o=mu(e.dims),i=mu(n),s=this.reshapePacked(e,o),a=this.run(af(this,s,i),[s]);return this.reshapePacked(a,n)}cast(e,n){let t=this.getOrCreateTextureData(e,0);return this.createTextureDataFromTexture(t,n,t.texture).tensor}createTextureDataFromTexture(e,n,t,o,i){let s={...e,tensor:o||new Tt(e.unpackedShape,n,a=>this.readTexture(s),async a=>this.readTextureAsync(s),void 0,i),texture:t};return this.setTextureData(s.tensor.dataId,s,e.isPacked),s}getTextureData(e,n=!1){return this.session.isInitializer(e)?this.session.getTextureData(e,n):n?this.packedTextureDataCache.get(e):this.unpackedTextureDataCache.get(e)}setTextureData(e,n,t=!1){this.session.isInitializer(e)?this.session.setTextureData(e,n,t):(t?this.packedTextureDataCache:this.unpackedTextureDataCache).set(e,n)}isTextureLayoutCached(e,n=!1){return!!this.getTextureData(e.dataId,n)}dispose(){this.session.textureManager.clearActiveTextures(),this.packedTextureDataCache.forEach(e=>this.session.textureManager.releaseTexture(e)),this.packedTextureDataCache=new Map,this.unpackedTextureDataCache.forEach(e=>this.session.textureManager.releaseTexture(e)),this.unpackedTextureDataCache=new Map}readTexture(e){return e.isPacked?this.readTexture(this.unpack(e)):this.session.backend.glContext.isFloat32DownloadSupported?this.session.textureManager.readTexture(e,e.tensor.type,e.channels):this.session.textureManager.readUint8TextureAsFloat(hu(this,e))}async readTextureAsync(e){return e.isPacked?this.readTextureAsync(this.unpack(e)):this.session.backend.glContext.isFloat32DownloadSupported?this.session.textureManager.readTextureAsync(e,e.tensor.type,e.channels):this.session.textureManager.readUint8TextureAsFloat(hu(this,e))}pack(e){return this.executeProgram(nf(this,e.tensor),[e.tensor])}unpack(e){return this.executeProgram(cf(this,e.tensor),[e.tensor])}}});var yu,Re,At=D(()=>{"use strict";yu=class{constructor(e){Object.assign(this,e)}get cacheKey(){return this.key||(this.key=Object.getOwnPropertyNames(this).sort().map(e=>`${this[e]}`).join(";")),this.key}},Re=r=>new yu(r)});var yf,bf,vf,Kw,Yw,wf=D(()=>{"use strict";At();pt();He();yf={name:"BatchNormalization",inputNames:["A","Scale","B","Mean","Variance"],inputTypes:[0,0,0,0,0]},bf=(r,e,n)=>(Yw(e),[r.run({...yf,cacheHint:n.cacheKey,get:()=>Kw(r,e,n)},e)]),vf=r=>{let e=r.attributes.getFloat("epsilon",1e-5),n=r.attributes.getFloat("momentum",.9),t=r.attributes.getInt("spatial",1);return Re({epsilon:e,momentum:n,spatial:t})},Kw=(r,e,n)=>{let t=he(r.session.backend.glContext.version),o=e[0].dims.length,[i,s]=r.calculateTextureWidthAndHeight(e[1].dims,0),a=`
  float process(int[${o}] indices) {
    vec2 position = offsetToCoords(indices[1], ${i}, ${s});
    float scale = getColorAsFloat(${t.texture2D}(Scale, position));
    float mean = getColorAsFloat(${t.texture2D}(Mean, position));
    float variance = getColorAsFloat(${t.texture2D}(Variance, position));
    float b = getColorAsFloat(${t.texture2D}(B, position));

    return scale * ( (_A(indices) - mean) / sqrt(variance + float(${n.epsilon})) ) + b;
  }`;return{...yf,output:{dims:e[0].dims,type:e[0].type,textureType:0},shaderSource:a}},Yw=r=>{if(!r||r.length!==5)throw new Error("BatchNormalization requires 5 inputs.");let e=r[0],n=r[1],t=r[2],o=r[3],i=r[4];if(e.dims.length<3||n.dims.length!==1||t.dims.length!==1||o.dims.length!==1||i.dims.length!==1)throw new Error("invalid input shape.");if(n.dims[0]!==e.dims[1]||t.dims[0]!==e.dims[1]||o.dims[0]!==e.dims[1]||i.dims[0]!==e.dims[1])throw new Error("invalid input shape.");if(e.type!=="float32"&&e.type!=="float64"||n.type!=="float32"&&n.type!=="float64"||t.type!=="float32"&&t.type!=="float64"||o.type!=="float32"&&o.type!=="float64"||i.type!=="float32"&&i.type!=="float64")throw new Error("invalid input tensor types.")}});var _a,sr,ne,Ho,xa,qr=D(()=>{"use strict";_a=class{constructor(e,n,t,o){this.glContext=e;this.programInfo=n;this.inputTextureLayouts=t;this.outputTextureLayout=o}},sr=class{constructor(e){this.context=e}},ne=class{constructor(e,n){this.routineBody=e;this.dependencies=n}},Ho=class{constructor(e,n,t){this.name=e;t?this.dependencies=t:this.dependencies=[],n&&(this.routineBody=n)}addDependency(e){e&&this.dependencies.push(e)}},xa=class{static returnOrderedNodes(e){if(!e||e.length===0)return[];if(e.length===1)return e;let n=new Set,t=new Set,o=new Array;return this.createOrderedNodes(e,n,t,o),o}static createOrderedNodes(e,n,t,o){for(let i=0;i<e.length;++i)this.dfsTraverse(e[i],n,t,o)}static dfsTraverse(e,n,t,o){if(!e||t.has(e.name))return;if(n.has(e.name))throw new Error("Cyclic dependency detected. Can't topologically sort routines needed for shader.");n.add(e.name);let i=e.dependencies;if(i&&i.length>0)for(let s=0;s<i.length;++s)this.dfsTraverse(i[s],n,t,o);o.push(e),t.add(e.name),n.delete(e.name)}}});function Zw(){let r="add_";return{body:`
  float ${r}(float a, float b) {
    return a + b;
  }
  vec4 ${r}(vec4 v1, vec4 v2) {
    return v1 + v2;
  }
  `,name:r,type:0}}function Jw(){let r="div_";return{body:`
  float ${r}(float a, float b) {
    return a / b;
  }
  vec4 ${r}(vec4 v1, vec4 v2) {
    return v1 / v2;
  }
  `,name:r,type:0}}function Qw(){let r="mul_";return{body:`
  float ${r}(float a, float b) {
    return a * b;
  }
  vec4 ${r}(vec4 v1, vec4 v2) {
    return v1 * v2;
  }
  `,name:r,type:0}}function e_(){let r="sub_";return{body:`
  float ${r}(float a, float b) {
    return a - b;
  }
  vec4 ${r}(vec4 v1, vec4 v2) {
    return v1 - v2;
  }
  `,name:r,type:0}}function t_(){let r="equal_";return{body:`
  float ${r}(float a, float b) {
    return float(a == b);
  }
  vec4 ${r}(vec4 v1, vec4 v2) {
    return vec4(equal(v1, v2));
  }
  `,name:r,type:0}}function r_(){let r="greater_";return{body:`
  float ${r}(float a, float b) {
    return float(a > b);
  }
  vec4 ${r}(vec4 v1, vec4 v2) {
    return vec4( v1.r > v2.r ,
      v1.g > v2.g,
      v1.b > v2.b,
      v1.a > v2.a );
  }
  `,name:r,type:0}}function n_(){let r="less_";return{body:`
  float ${r}(float a, float b) {
    return float(a < b);
  }
  vec4 ${r}(vec4 v1, vec4 v2) {
    return vec4( v1.r < v2.r ,
                v1.g < v2.g,
                v1.b < v2.b,
                v1.a < v2.a );
  }
  `,name:r,type:0}}function o_(){let r="and_";return{body:`
  float ${r}(float a, float b) {
    return float( bool(a) && bool(b) );
  }
  vec4 ${r}(vec4 v1, vec4 v2) {
    bvec4 b1 = bvec4(v1);
    bvec4 b2 = bvec4(v2);
    return vec4( b1.r && b2.r ,
                b1.g && b2.g,
                b1.b && b2.b,
                b1.a && b2.a );
  }
  `,name:r,type:0}}function i_(){let r="or_";return{body:`
  float ${r}(float a, float b) {
    return float( bool(a) || bool(b) );
  }
  vec4 ${r}(vec4 v1, vec4 v2) {
    bvec4 b1 = bvec4(v1);
    bvec4 b2 = bvec4(v2);
    return vec4( b1.r || b2.r ,
                b1.g || b2.g,
                b1.b || b2.b,
                b1.a || b2.a );
  }
  `,name:r,type:0}}function a_(){let r="xor_";return{body:`
  float ${r}(float a, float b) {
    return float( bool(a) ^^ bool(b) );
  }
  vec4 ${r}(vec4 v1, vec4 v2) {
    bvec4 b1 = bvec4(v1);
    bvec4 b2 = bvec4(v2);
    return vec4( b1.r ^^ b2.r ,
                b1.g ^^ b2.g,
                b1.b ^^ b2.b,
                b1.a ^^ b2.a );
  }
  `,name:r,type:0}}function s_(){return l_("pow")}function u_(){let r="prelu_";return{body:`
  float ${r}(float a, float b) {
    return a < 0.0 ? a * b: a;
  }
  vec4 ${r}(vec4 v1, vec4 v2) {
    return vec4(
      v1.r < 0.0 ? v1.r * v2.r: v1.r,
      v1.g < 0.0 ? v1.g * v2.g: v1.g,
      v1.b < 0.0 ? v1.b * v2.b: v1.b,
      v1.a < 0.0 ? v1.a * v2.a: v1.a
      );
  }
  `,name:r,type:0}}function l_(r){let e=`${r}_`;return{body:`
  float ${e}(float a, float b) {
    return ${r}(a, b);
  }
  vec4 ${e}(vec4 v1, vec4 v2) {
    return ${r}(v1, v2);
  }
  `,name:e,type:0}}var ur,d_,_f,xf,$f,Tf,Sf,If,Af,Of,Ef,Cf,Pf,kf,Df=D(()=>{"use strict";Ze();qr();pt();He();ur=(r,e,n,t=e[0].type,o)=>{let i=r.session.pack?2:0;return{name:n.name,inputNames:["A","B"],inputTypes:[i,i],cacheHint:o,get:()=>d_(r,e,n,t)}},d_=(r,e,n,t=e[0].type)=>{let o=r.session.pack?2:0,i=!le.areEqual(e[0].dims,e[1].dims),s=e[0].dims,a=r.session.pack;if(i){let d=Vt.calcShape(e[0].dims,e[1].dims,!1);if(!d)throw new Error("Can't perform binary op on the given tensors");s=d;let p=s.length,h=e[0].dims.length!==0?e[0].dims.length:1,y=e[1].dims.length!==0?e[1].dims.length:1,b=e[0].dims.length!==0?"bcastIndices_A(indices, aindices);":"aindices[0] = 0;",w=e[1].dims.length!==0?"bcastIndices_B(indices, bindices);":"bindices[0] = 0;",T=he(r.session.backend.glContext.version),x=a?`
      ${n.body}
      void main() {
        vec4 a = getAAtOutCoords();
        vec4 b = getBAtOutCoords();
        vec4 result = ${n.name}(a, b);
        ${T.output} = result;
      }`:`
      ${n.body}
      float process(int indices[${p}]) {
        int aindices[${h}];
        int bindices[${y}];
        ${b}
        ${w}
        return ${n.name}(_A(aindices), _B(bindices));
      }`;return{name:n.name,inputNames:["A","B"],inputTypes:[o,o],output:{dims:s,type:t,textureType:o},shaderSource:x,hasMain:a}}let u=he(r.session.backend.glContext.version),l=`
    ${n.body}
    void main() {
      vec4 v1 = ${u.texture2D}(A, TexCoords);
      vec4 v2 = ${u.texture2D}(B, TexCoords);
      vec4 result = ${n.name}(v1, v2);
      ${u.output} = result;
    }
    `;return{name:n.name,inputNames:["A","B"],inputTypes:[o,o],output:{dims:e[0].dims,type:t,textureType:o},shaderSource:l,hasMain:!0}},_f=(r,e)=>[r.run(ur(r,e,Zw()),e)],xf=(r,e)=>[r.run(ur(r,e,o_(),"bool"),e)],$f=(r,e)=>[r.run(ur(r,e,Jw()),e)],Tf=(r,e)=>[r.run(ur(r,e,t_(),"bool"),e)],Sf=(r,e)=>[r.run(ur(r,e,r_(),"bool"),e)],If=(r,e)=>[r.run(ur(r,e,n_(),"bool"),e)],Af=(r,e)=>[r.run(ur(r,e,Qw()),e)],Of=(r,e)=>[r.run(ur(r,e,i_(),"bool"),e)],Ef=(r,e)=>[r.run(ur(r,e,s_()),e)],Cf=(r,e)=>[r.run(ur(r,e,u_()),e)],Pf=(r,e)=>[r.run(ur(r,e,e_()),e)],kf=(r,e)=>[r.run(ur(r,e,a_(),"bool"),e)]});var Bf,Rf,f_,zf=D(()=>{"use strict";Ze();Bf=(r,e,n)=>(f_(e),[r.cast(e[0],n)]),Rf=r=>kt.tensorDataTypeFromProto(r.attributes.getInt("to")),f_=r=>{if(!r||r.length!==1)throw new Error("Cast requires 1 input.");if(r[0].type==="string")throw new Error("Invalid input type.")}});var p_,m_,Mf,$a,Nf=D(()=>{"use strict";pt();He();Cr();On();p_=(r,e)=>({name:"Concat (packed)",inputNames:Array.from({length:r},(n,t)=>`X${t}`),inputTypes:Array(r).fill(2),cacheHint:e}),m_=(r,e,n,t)=>{let o=n[0].dims.slice();if(t>=o.length||t<-1*o.length)throw new Error("axis specified for concat doesn't match input dimensionality");t<0&&(t=o.length+t);let i=o.slice(0);for(let k=1;k<n.length;k++){let N=n[k].dims.slice();for(let j=0;j<o.length;j++)if(j===t)i[t]+=N[j];else if(o[j]!==N[j])throw new Error("non concat dimensions must match")}let s=i.length,a=to("coords",s),u=Gt(s),l=Pr(),d=n.map(k=>k.dims),p=yr(s),h=new Array(d.length-1);h[0]=d[0][t];for(let k=1;k<h.length;k++)h[k]=h[k-1]+d[k][t];let y=p[t],b=p.slice(-2),w=p.join(),T=`if (${y} < ${h[0]}) {
        return getChannel(
            getX0(${w}), vec2(${b.join()}));
        }`;for(let k=1;k<h.length;k++){let N=h[k-1];T+=`
            if (${y} < ${h[k]}  && ${y} >= ${h[k-1]}) {
              return getChannel(
                getX${k}(${$a(p,y,N)}),
                vec2(${$a(b,y,N)}));
            }`}let x=h.length,_=h[h.length-1];T+=`
            return getChannel(
              getX${x}(${$a(p,y,_)}),
              vec2(${$a(b,y,_)}));`;let A=he(r.session.backend.glContext.version),P=`
          ${l}
          float getValue(${p.map(k=>"int "+k)}) {
            ${T}
          }

          void main() {
            ${u} coords = getOutputCoords();
            int lastDim = coords.${p[s-1]};
            coords.${p[s-1]} = coords.${p[s-2]};
            coords.${p[s-2]} = lastDim;

            vec4 result = vec4(getValue(${a}), 0., 0., 0.);

            ${a[s-1]} = ${a[s-1]} + 1;
            if (${a[s-1]} < ${i[s-1]}) {
              result.g = getValue(${a});
            }

            ${a[s-2]} = ${a[s-2]} + 1;
            if (${a[s-2]} < ${i[s-2]}) {
              result.a = getValue(${a});
            }

            ${a[s-1]} = ${a[s-1]} - 1;
            if (${a[s-2]} < ${i[s-2]} &&
                ${a[s-1]} < ${i[s-1]}) {
              result.b = getValue(${a});
            }
            ${A.output} = result;
          }
        `;return{...e,output:{dims:i,type:n[0].type,textureType:2},shaderSource:P,hasMain:!0}},Mf=(r,e,n)=>{let t=p_(e.length,n.cacheKey);return{...t,get:()=>m_(r,t,e,n.axis)}},$a=(r,e,n)=>{let t=r.indexOf(e);return r.map((i,s)=>s===t?`${i} - ${n}`:i).join()}});var Lf,h_,g_,y_,Uf,b_,v_,w_,Ff,__,Vf=D(()=>{"use strict";At();He();Nf();Lf=(r,e,n)=>(__(e),r.session.pack&&e[0].dims.length>1?[r.run(Mf(r,e,n),e)]:[r.run(y_(r,e,n),e)]),h_=(r,e)=>({name:"Concat",inputNames:Array.from({length:r},(n,t)=>`X${t}`),inputTypes:Array(r).fill(0),cacheHint:e}),g_=(r,e,n,t)=>{let o=n[0].dims.slice();if(t>=o.length||t<-1*o.length)throw new Error("axis specified for concat doesn't match input dimensionality");t<0&&(t=o.length+t);let i=o.slice(0);for(let y=1;y<n.length;y++){let b=n[y].dims.slice();for(let w=0;w<o.length;w++)if(w===t)i[t]+=b[w];else if(o[w]!==b[w])throw new Error("non concat dimensions must match")}let s=i.length,a=new Array(n.length),u=0;for(let y=0;y<a.length;++y)u+=n[y].dims[t],a[y]=u;let l="";n.length<5?l=Uf(a):l=b_(a);let d=v_(n.length,s),p=w_(a),h=`
        ${d}
        ${p}
        ${l}
        float process(int indices[${s}]) {
          int textureIndex = getTextureWhereDataResides (indices[${t}]);

          if(textureIndex != 0) {
            indices[${t}] = indices[${t}] - int(getSizeInConcatAxisValueFromIndex(textureIndex-int(1)));
          }

          return fetchDataFromCorrectTexture(textureIndex, indices);
        }`;return{...e,output:{dims:i,type:n[0].type,textureType:0},shaderSource:h}},y_=(r,e,n)=>{let t=h_(e.length,n.cacheKey);return{...t,get:()=>g_(r,t,e,n.axis)}},Uf=r=>`int getTextureWhereDataResides(int index) {
      ${r.map((n,t)=>`if(index<${n}) {return ${t};}
`).join("")}
    }`,b_=r=>Uf(r),v_=(r,e)=>{let n=[`float fetchDataFromCorrectTexture(int textureIndex, int indices[${e}]) {`];for(let t=0;t<r;++t)t===0?n.push(`	if (textureIndex == ${t}) { return _X${t}(indices); }`):t===r-1?n.push(`	else { return _X${t}(indices); }`):n.push(`	else if (textureIndex == ${t}) { return _X${t}(indices); }`);return n.push("	}"),n.join(`
`)},w_=r=>{let e=["int getSizeInConcatAxisValueFromIndex(int index) {"];for(let n=0;n<r.length;++n)n===0?e.push(`	if (index == ${n}) { return ${r[n]}; }`):n===r.length-1?e.push(`	else { return ${r[n]}; }`):e.push(`	else if (index == ${n}) { return ${r[n]}; }`);return e.push("	}"),e.join(`
`)},Ff=r=>Re({axis:r.attributes.getInt("axis")}),__=r=>{if(!r||r.length<1)throw new Error("too few inputs");let e=r[0].type,n=r[0].dims.length;if(e==="string")throw new Error("string tensor is not supported yet");for(let t of r){if(t.type!==e)throw new Error("input tensors should be one type");if(t.dims.length!==n)throw new Error("input tensors should have the same shape")}}});function x_(){return lr("abs")}function $_(){return lr("acos")}function T_(){return lr("asin")}function S_(){return lr("atan")}function I_(){return lr("ceil")}function A_(){return lr("cos")}function O_(r){let e="elu";return{body:`
  const float alpha = float(${r});

  float ${e}_(float a) {
    return a >= 0.0 ? a: (exp(a) - 1.0) * alpha;
  }
  vec4 ${e}_(vec4 v) {
    return vec4(${e}_(v.x), ${e}_(v.y), ${e}_(v.z), ${e}_(v.w));
  }
  `,name:e,type:0}}function E_(){return lr("exp")}function C_(){return lr("floor")}function bu(r,e){let n="clip";return{body:`
  const float min = float(${r});
  const float max = float(${e});

  float ${n}_(float a) {
    return clamp(a, min, max);
  }
  vec4 ${n}_(vec4 v) {
    return clamp(v, min, max);
  }
  `,name:n,type:0}}function P_(){let r="indentity";return{body:`
  float ${r}_(float a) {
    return a;
  }
  vec4 ${r}_(vec4 v) {
    return v;
  }
  `,name:r,type:0}}function k_(r){let e="leakyRelu";return{body:`
  const float alpha = float(${r});

  float ${e}_(float a) {
    return a < 0.0 ? a * alpha : a;
  }
  vec4 ${e}_(vec4 v) {
    return vec4(${e}_(v.x), ${e}_(v.y), ${e}_(v.z), ${e}_(v.w));
  }
  `,name:e,type:0}}function D_(){return lr("log")}function B_(){let r="neg";return{body:`
  float ${r}_(float a) {
    return -a;
  }
  vec4 ${r}_(vec4 v) {
    return -v;
  }
  `,name:r,type:0}}function R_(){let r="not";return{body:`
  float ${r}_(float a) {
    return float( ! bool(a) );
  }
  bool ${r}_(bool a) {
    return !a;
  }
  vec4 ${r}_(vec4 v) {
    return vec4(!bool(v.x), !bool(v.y), !bool(v.z), !bool(v.w));
  }
  bvec4 ${r}_(bvec4 v) {
    return bvec4(!v.x, !v.y, !v.z, !v.w);
  }
  `,name:r,type:0}}function z_(){return lr("sin")}function vu(){let r="relu";return{body:`
  float ${r}_(float a) {
    return max( a, 0.0 );
  }
  vec4 ${r}_(vec4 v) {
    return max( v, 0.0 );
  }
  `,name:r,type:0}}function wu(){let r="sigmoid";return{body:`
  float ${r}_(float a) {
    return 1.0 / (1.0 + exp(-a));
  }
  vec4 ${r}_(vec4 v) {
    return 1.0 / (1.0 + exp(-v));
  }
  `,name:r,type:0}}function M_(){return lr("sqrt")}function N_(){return lr("tan")}function L_(){let r="tanh";return{body:`
  float ${r}_(float a) {
    a = clamp(a, -10., 10.);
    a = exp(2.*a);
    return (a - 1.) / (a + 1.);
  }
  vec4 ${r}_(vec4 v) {
    v = clamp(v, -10., 10.);
    v = exp(2.*v);
    return (v - 1.) / (v + 1.);
  }
  `,name:r,type:0}}function lr(r){return{body:`
  float ${r}_(float a) {
    return ${r}(a);
  }
  vec4 ${r}_(vec4 v) {
    return ${r}(v);
  }
  `,name:r,type:0}}var U_,wt,Gf,Wf,Hf,jf,_u,qf,Kf,F_,Yf,Xf,Zf,Jf,Qf,ep,xu,tp,rp,np,op,ip,ap,sp,up,lp,dp,cp,$u=D(()=>{"use strict";At();Ze();qr();pt();He();U_=(r,e,n,t)=>{let o=r.session.pack?2:0,i=he(r.session.backend.glContext.version);return{...e,output:{dims:n.dims,type:n.type,textureType:o},shaderSource:`
     ${t.body}
     void main() {
       vec4 v = ${i.texture2D}(A, TexCoords);
       v = ${t.name}_(v);
       ${i.output} = v;
     }
     `,hasMain:!0}},wt=(r,e,n,t)=>{let o=r.session.pack?2:0,i={name:n.name,inputTypes:[o],inputNames:["A"],cacheHint:t};return{...i,get:()=>U_(r,i,e,n)}},Gf=(r,e)=>[r.run(wt(r,e[0],x_()),e)],Wf=(r,e)=>[r.run(wt(r,e[0],$_()),e)],Hf=(r,e)=>[r.run(wt(r,e[0],T_()),e)],jf=(r,e)=>[r.run(wt(r,e[0],S_()),e)],_u=(r,e,n)=>[r.run(wt(r,e[0],bu(n.min,n.max),n.cacheKey),e)],qf=r=>Re({min:r.attributes.getFloat("min",Sn),max:r.attributes.getFloat("max",In)}),Kf=(r,e)=>{let n=F_(r,e);return _u(r,[e[0]],n)},F_=(r,e)=>{if(e.length>=3&&(!r.session.isInitializer(e[1].dataId)||!r.session.isInitializer(e[2].dataId)))throw new Error("dynamic clip attributes are not allowed");let n=e.length>=3?e[1].numberData[0]:Sn,t=e.length>=3?e[2].numberData[0]:In;return Re({min:n,max:t})},Yf=(r,e)=>[r.run(wt(r,e[0],I_()),e)],Xf=(r,e)=>[r.run(wt(r,e[0],A_()),e)],Zf=(r,e,n)=>[r.run(wt(r,e[0],O_(n.alpha),n.cacheKey),e)],Jf=r=>Re({alpha:r.attributes.getFloat("alpha",1)}),Qf=(r,e)=>[r.run(wt(r,e[0],E_()),e)],ep=(r,e)=>[r.run(wt(r,e[0],C_()),e)],xu=(r,e)=>[r.run(wt(r,e[0],P_()),e)],tp=(r,e,n)=>[r.run(wt(r,e[0],k_(n.alpha),n.cacheKey),e)],rp=r=>Re({alpha:r.attributes.getFloat("alpha",.01)}),np=(r,e)=>[r.run(wt(r,e[0],D_()),e)],op=(r,e)=>[r.run(wt(r,e[0],B_()),e)],ip=(r,e)=>[r.run(wt(r,e[0],R_()),e)],ap=(r,e)=>[r.run(wt(r,e[0],vu()),e)],sp=(r,e)=>[r.run(wt(r,e[0],wu()),e)],up=(r,e)=>[r.run(wt(r,e[0],z_()),e)],lp=(r,e)=>[r.run(wt(r,e[0],M_()),e)],dp=(r,e)=>[r.run(wt(r,e[0],N_()),e)],cp=(r,e)=>[r.run(wt(r,e[0],L_()),e)]});function kr(r){let e;switch(r.activation){case"Relu":e=vu();break;case"Sigmoid":e=wu();break;case"Clip":e=bu(r.clipMin,r.clipMax);break;default:return{activationFunction:"",applyActivation:""}}let n=e.name,t=e.body,o=`value = ${n}_(value);`;return{activationFunction:t,applyActivation:o}}var ro,En=D(()=>{"use strict";Ze();$u();ro=r=>{let e=r.getString("activation","");if(e==="Clip"){let[n,t]=r.getFloats("activation_params",[Sn,In]);return{activation:e,clipMax:t,clipMin:n,activationCacheKey:`${e}:${n},${t}`}}return{activation:e,activationCacheKey:e}}});var G_,W_,fp,pp=D(()=>{"use strict";nr();pt();He();Ta();En();G_=(r,e)=>({name:"GroupedConv",inputNames:r?["X","W","Bias"]:["X","W"],inputTypes:r?[0,0,0]:[0,0],cacheHint:e}),W_=(r,e,n,t)=>{let i=e.length>2?"value += getBias(output_channel);":"",s=e[0].dims.slice(),a=e[1].dims.slice(),u=a[0]/t.group;Qe.verbose("GroupedConv",`autpPad:${t.autoPad}, dilations:${t.dilations}, group:${t.group}, kernelShape:${t.kernelShape}, pads:${t.pads}, strides:${t.strides}`);let l=no(s,a,t.dilations,t.pads,t.strides),d=he(r.session.backend.glContext.version),{activationFunction:p,applyActivation:h}=kr(t),y=`
  const ivec2 strides = ivec2(${t.strides[0]}, ${t.strides[1]});
  const ivec2 pads = ivec2(${t.pads[0]}, ${t.pads[1]});
  ${p}
  void main() {
    ivec4 coords = getOutputCoords();
    int batch = coords.x;
    int output_channel = coords.y;
    ivec2 xRCCorner = coords.zw * strides - pads;
    int group_id = output_channel / ${u};

    float value = 0.0;
    for (int wInChannel = 0; wInChannel < ${a[1]}; wInChannel++) {
      int input_channel = group_id * ${a[1]} + wInChannel;
      for (int wHeight = 0; wHeight < ${a[2]}; wHeight++) {
        int xHeight = xRCCorner.x + wHeight * ${t.dilations[0]};

        if (xHeight < 0 || xHeight >= ${s[2]}) {
          continue;
        }

        for (int wWidth = 0; wWidth < ${a[3]}; wWidth++) {
          int xWidth = xRCCorner.y + wWidth * ${t.dilations[1]};
          if (xWidth < 0 || xWidth >= ${s[3]}) {
            continue;
          }

          float xVal = getX(batch, input_channel, xWidth, xHeight);
          float wVal = getW(output_channel, wInChannel, wWidth, wHeight);
          value += xVal*wVal;
        }
      }
    }
    ${i}
    ${h}
    ${d.output} = vec4(value, .0, .0, .0);
  }
`;return{...n,output:{dims:l,type:e[0].type,textureType:0},shaderSource:y,hasMain:!0}},fp=(r,e,n)=>{let t=G_(e.length>2,n.cacheKey);return{...t,get:()=>W_(r,e,t,n)}}});var H_,j_,mp,hp=D(()=>{"use strict";pt();He();On();H_=r=>({name:"Im2Col (packed)",inputNames:["A"],inputTypes:[2],cacheHint:r}),j_=(r,e,n,t,o,i)=>{let s=n.dims,a=t.dims,u=2,l=3,d=o.length,p=[a[1]*a[2]*a[3],o[2]*o[3]],h=a[2]*a[3],y=Pr(),b=he(r.session.backend.glContext.version),w="";for(let x=0;x<=1;x++)for(let _=0;_<=1;_++)w+=`
            blockIndex = rc.x + ${_};
            pos = rc.y + ${x};

            if(blockIndex < ${p[1]} && pos < ${p[0]}) {
              offsetY = int(blockIndex / (${o[d-1]})) * ${i.strides[0]} -
                ${i.pads[0]};
              d0 = offsetY + ${i.dilations[0]} * (imod(pos, ${h}) / ${a[2]});

              if(d0 < ${s[u]} && d0 >= 0) {
                offsetX = imod(blockIndex, ${o[d-1]}) * ${i.strides[1]} -
                  ${i.pads[1]};
                d1 = offsetX + ${i.dilations[1]} * imod(imod(pos, ${h}), ${a[2]});

                if(d1 < ${s[l]} && d1 >= 0) {

                  ch = int(float(pos)/ ${h}.);
                    innerDims = vec2(d0, d1);
                    result[${x*2+_}] = getChannel(
                      getA(0, ch, int(innerDims.x),
                      int(innerDims.y)), innerDims);
                }
              }
            }

          `;let T=`
      ${y}

      void main() {
        ivec2 rc = getOutputCoords();
          vec4 result = vec4(0.0);
          int blockIndex, pos, offsetY, d0, offsetX, d1, ch;
          vec2 innerDims;
          ${w}
          ${b.output} = result;
      }
            `;return{...e,output:{dims:p,type:n.type,textureType:2},shaderSource:T,hasMain:!0}},mp=(r,e,n,t,o)=>{let i=H_(o.cacheKey);return{...i,get:()=>j_(r,i,e,n,t,o)}}});function K_(r,e,n){let t=e[0].dims,o=e[1].dims,i=Vt.calcShape(t,o,!0);if(!i)throw new Error("Can't use matmul on the given tensors");let s=Gt(i.length),a=yr(),{activationFunction:u,applyActivation:l}=kr(n),d=e.length>2,p=d?"value += getBiasForMatmul();":"",h=d?`${Su(s,a,e[2].dims,i,!1)}`:"",y=i.length,b=t.length,w=o.length,T=t[t.length-1],x=`
    ${u}
    ${h}
    float process(int indices[${y}]) {
        int a[${b}];
        int b[${w}];
        bcastMatmulIndices_A(indices, a);
        bcastMatmulIndices_B(indices, b);

        float value;
        for (int k=0; k<${T}; ++k) {
            a[${b-1}] = k;
            b[${w-2}] = k;
            value += _A(a) * _B(b);
        }
        ${p}
        ${l}
        return value;
    }`;return{...r,output:{dims:i,type:e[0].type,textureType:0},shaderSource:x}}function Tu(r,e){let n=q_(r.length>2,e.activationCacheKey);return{...n,get:()=>K_(n,r,e)}}function Su(r,e,n,t,o){let i="",s=n.length,a=t.length,u=a-s;a<2&&s>0?i="coords":i=n.map((w,T)=>`coords.${e[T+u]}`).join(", ");let d=Vt.getBroadcastDims(n,t).map(w=>`coords.${e[w+u]} = 0;`).join(`
`),h=le.size(n)===1,y="vec4(outputValue.xx, outputValue.yy)";return h&&(y="vec4(outputValue.x)"),o?`
vec4 getBiasForMatmul() {
  ${r} coords = getOutputCoords();
  ${d}
  vec4 outputValue = getBias(${i});
  return ${y};
}`:`
float getBiasForMatmul() {
  ${r} coords = getOutputCoords();
  ${d}
  return getBias(coords.x);
}`}var gp,yp,q_,Y_,Sa=D(()=>{"use strict";Ze();He();Cr();En();Iu();gp=(r,e,n)=>(Y_(e),r.session.pack?[r.run(Ia(r,e,n),e)]:[r.run(Tu(e,n),e)]),yp=r=>ro(r.attributes),q_=(r,e)=>({name:"MatMul",inputNames:r?["A","B","Bias"]:["A","B"],inputTypes:r?[0,0,0]:[0,0],cacheHint:e});Y_=r=>{if(!r||r.length!==2)throw new Error("MatMul requires 2 inputs.");if(r[0].dims[r[0].dims.length-1]!==r[1].dims[r[1].dims.length-2])throw new Error("shared dimension does not match.");if(r[0].type!=="float32"&&r[0].type!=="float64"||r[1].type!=="float32"&&r[1].type!=="float64")throw new Error("inputs should be float type");if(r[0].type!==r[1].type)throw new Error("inputs types should match")}});function J_(r,e,n,t){let o=[],i=[],s=n[0].dims,a=n[1].dims,u=s.length,l=a.length,d=t.length,p=d-u,h=d-l;o=s.map((A,P)=>`coords.${e[P+p]}`),o[u-1]="i*2",o.join(", "),i=a.map((A,P)=>`coords.${e[P+h]}`),i[l-2]="i*2",i.join(", ");let y=Vt.getBroadcastDims(s,t),b=Vt.getBroadcastDims(a,t),w=y.map(A=>`coords.${e[A+p]} = 0;`).join(`
`),T=b.map(A=>`coords.${e[A+h]} = 0;`).join(`
`),x=`int lastDim = coords.${e[d-1]};
  coords.${e[d-1]} = coords.${e[d-2]};
  coords.${e[d-2]} = lastDim;`;return`
vec4 getAAtOutCoordsMatmul(int i) {
  ${r} coords = getOutputCoords();
  ${x}
  ${w}
  vec4 outputValue = getA(${o});
  return outputValue;
}

vec4 getBAtOutCoordsMatmul(int i) {
  ${r} coords = getOutputCoords();
  ${x}
  ${T}
  vec4 outputValue = getB(${i});
  return outputValue;
}`}function Q_(r,e){let n="";for(let t=0;t<e-2;t++)n+=`rc.${r[t]}, `;return n+=`rc.${r[e-2]}, i*2`,n}function ex(r,e){let n="";for(let t=0;t<e-2;t++)n+=`rc.${r[t]}, `;return n+=`i*2, rc.${r[e-1]}`,n}var X_,Z_,Ia,Iu=D(()=>{"use strict";Ze();pt();He();Cr();En();Sa();X_=(r,e)=>({name:"MatMul (packed)",inputNames:r?["A","B","Bias"]:["A","B"],inputTypes:r?[2,2,2]:[2,2],cacheHint:e}),Z_=(r,e,n,t)=>{let o=n.length>2,i=o?"value += getBiasForMatmul();":"",s=n[0].dims,a=n[1].dims,u=Vt.calcShape(s,a,!0),l=!le.areEqual(n[0].dims,n[1].dims);if(!u)throw new Error("Can't use matmul on the given tensors");let d=s[s.length-1],p=Math.ceil(d/2),h=s.length,y=a.length,b=he(r.session.backend.glContext.version),w=Gt(u.length),T=u.length,x=yr(),{activationFunction:_,applyActivation:A}=kr(t),P=o?`${Su(w,x,n[2].dims,u,!0)}`:"",k=l?`${J_(w,x,n,u)}`:"",N=l?"getAAtOutCoordsMatmul(i)":`getA(${Q_(x,h)})`,j=l?"getBAtOutCoordsMatmul(i)":`getB(${ex(x,y)})`,Z=l?"":`${w} rc =
          getOutputCoords(); int lastDim = rc.${x[T-1]}; rc.${x[T-1]} =
          rc.${x[T-2]}; rc.${x[T-2]} = lastDim;
      `,se=`
            ${k}
            ${P}
            ${_}
            void main() {
              ${Z}

              vec4 value = vec4(0);
              for (int i = 0; i < ${p}; i++) {
                vec4 a = ${N};
                vec4 b = ${j};

                value += (a.rrbb * b.rgrg);
                value += (a.ggaa * b.baba);
              }
              ${i}
              ${A}
              ${b.output} = value;
            }`;return{...e,output:{dims:u,type:n[0].type,textureType:2},shaderSource:se,hasMain:!0}},Ia=(r,e,n)=>{let t=X_(e.length>2,n.activationCacheKey);return{...t,get:()=>Z_(r,t,e,n)}}});var bp,vp=D(()=>{"use strict";Ta();hp();Iu();bp=(r,e,n)=>{let t=e[0].dims,o=e[1].dims,i=no(t,o,n.dilations,n.pads,n.strides),s=r.run(mp(r,e[0],e[1],i,n),[e[0]]),a=r.reshapePacked(e[1],[o[0],o[1]*o[2]*o[3]]),u=e.length===3?[a,s,e[2]]:[a,s],l=r.run(Ia(r,u,n),u);return r.reshapePacked(l,i)}});var tx,rx,wp,Au,Ou=D(()=>{"use strict";He();tx=r=>({name:"Im2Col",inputNames:["X"],inputTypes:[0],cacheHint:r}),rx=(r,e,n,t,o,i)=>{let s=n.dims,a=t.dims,u=o.length,l=Au(s,a,o,4),d=`
        const int XC = ${s[1]};
        const int XH = ${s[2]};
        const int XW = ${s[3]};
        const int KH = ${i.kernelShape[0]};
        const int KW = ${i.kernelShape[1]};
        const int dilationH = ${i.dilations[0]};
        const int dilationW = ${i.dilations[1]};
        const int strideH = ${i.strides[0]};
        const int strideW = ${i.strides[1]};
        const int padH = ${i.pads[0]};
        const int padW = ${i.pads[1]};
        const int KHKW = KH*KW;
        const int XCKHKW = XC * KHKW;
        const int outputChannels = 4;
        vec4 process(int indices[${u}]) {
          int b  = indices[0]; // batch size
          int oh = indices[1] * strideH - padH; //output height
          int ow = indices[2] * strideW - padW; //output width
          int p = indices[3] * outputChannels; //patch
          vec4 value = vec4(0.0);
          for(int i=0; i < outputChannels; ++i) {
            if(p < XCKHKW) {
              int patchC = p / KHKW;
              int patchH = (p - patchC*KHKW) / KW;
              int patchW = (p - patchC*KHKW) - patchH * KW;
              int xh2 = oh + patchH * dilationH;
              int xw2 = ow + patchW * dilationW;
              int x[${s.length}];
              x[0] = b;
              x[1] = patchC;
              x[2] = xh2;
              x[3] = xw2;
              if(xh2 >= 0 &&
                  xh2 < XH &&
                  xw2 >= 0 &&
                  xw2 < XW) {
                value[i] = _X(x);
              }
            }
            ++p;
          }
          return value;
        }
        `;return{...e,output:{dims:l,type:n.type,textureType:4},shaderSource:d}},wp=(r,e,n,t,o)=>{let i=tx(o.cacheKey);return{...i,get:()=>rx(r,i,e,n,t,o)}},Au=(r,e,n,t=4)=>[n[0],n[2],n[3],Math.ceil(r[1]*e[2]*e[3]/t)]});var nx,ox,_p,xp=D(()=>{"use strict";Ze();pt();He();En();Ou();nx=(r,e)=>({name:"ConvDotProduct",inputNames:r?["Im2Col","K","B"]:["Im2Col","K"],inputTypes:r?[0,4,0]:[0,4],cacheKey:e.activationCacheKey}),ox=(r,e,n,t,o)=>{let i=n[0].dims,s=n[1].dims,a=[s[0],Math.ceil(i[1]*s[2]*s[3]/4)],u=Au(i,s,t),[l,d]=r.calculateTextureWidthAndHeight(a,4),p=le.computeStrides(u),[h,y]=r.calculateTextureWidthAndHeight(u,4),b=t.length,w=n.length<3?"0.0":"_B(b)",T=Math.ceil(i[1]*s[2]*s[3]/4),{activationFunction:x,applyActivation:_}=kr(o),A=he(r.session.backend.glContext.version),P=`
${x}
float process(int indices[${b}]) {
  int b[1];
  b[0] = indices[1];
  int im2col[4];
  im2col[0] = indices[0];
  im2col[1] = indices[2];
  im2col[2] = indices[3];
  int im2colOffset = im2col[0] * ${p[0]} + im2col[1] * ${p[1]} + im2col[2] * ${p[2]};
  int kernelOffset = indices[1] * ${a[1]};
  float value = ${w};
  for (int i = 0; i < ${T}; ++i) {
    vec2 im2colCoords = offsetToCoords(im2colOffset, ${h}, ${y});
    vec2 kernelCoords = offsetToCoords(kernelOffset, ${l}, ${d});
    value += dot(${A.texture2D}(Im2Col, im2colCoords), ${A.texture2D}(K, kernelCoords));
    ++im2colOffset;
    ++kernelOffset;
  }
  ${_}
  return value;
}`;return{...e,output:{dims:t,type:n[0].type,textureType:0},shaderSource:P}},_p=(r,e,n,t)=>{let o=nx(e.length>2,t);return{...o,get:()=>ox(r,o,e,n,t)}}});var no,Eu,ix,ax,sx,ux,Cu,lx,Ta=D(()=>{"use strict";At();Ze();pp();vp();xp();En();Ou();Sa();no=(r,e,n,t,o)=>{let i=r[0],s=r.slice(2),a=s.length,u=e[0],d=e.slice(2).map((b,w)=>b+(b-1)*(n[w]-1)),h=s.map((b,w)=>b+t[w]+t[w+a]).map((b,w)=>Math.floor((b-d[w]+o[w])/o[w]));return[i,u].concat(...h)},Eu=(r,e,n)=>(lx(e,n),ix(r,e,n)),ix=(r,e,n)=>{let t=ux(n,e),o=r.session.pack,i=t.kernelShape[0]===1&&t.kernelShape[1]===1;return t.group>1?[r.run(fp(r,e,t),e)]:i&&o?[ax(r,e,t)]:o&&e[0].dims.length===4&&e[0].dims[0]===1&&!i?[bp(r,e,t)]:[sx(r,e,t)]},ax=(r,e,n)=>{let t=e[0].dims,o=e[1].dims,i=no(t,o,n.dilations,n.pads,n.strides),s=r.reshapeUnpacked(e[0],[t[1],t[2]*t[3]]),a=r.reshapeUnpacked(e[1],[o[0],o[1]]),u=e.length>2?[a,s,e[2]]:[a,s],l=r.run(Tu(u,n),u);return r.reshapeUnpacked(l,i)},sx=(r,e,n)=>{let t=e[0].dims,o=e[1].dims,i=no(t,o,n.dilations,n.pads,n.strides),s=r.run(wp(r,e[0],e[1],i,n),[e[0]]),a=e.length===3?[s,e[1],e[2]]:[s,e[1]];return r.run(_p(r,e,i,n),a)},ux=(r,e)=>{let n=r.kernelShape.slice();if(r.kernelShape.length===0)for(let i=2;i<e[1].dims.length;++i)n.push(e[1].dims[i]);let t=r.pads.slice();Tn.adjustPadsBasedOnAutoPad(e[0].dims,r.strides,r.dilations,n,t,r.autoPad);let o=Object.assign({},r);return Object.assign(o,{kernelShape:n,pads:t,cacheKey:r.cacheKey}),o},Cu=r=>{let e=r.attributes,n=ro(e),t=e.getString("auto_pad","NOTSET"),o=e.getInts("dilations",[1,1]),i=e.getInt("group",1),s=e.getInts("kernel_shape",[]),a=e.getInts("pads",[0,0,0,0]),u=e.getInts("strides",[1,1]);return Re({autoPad:t,dilations:o,group:i,kernelShape:s,pads:a,strides:u,...n})},lx=(r,e)=>{if(!r||r.length!==2&&r.length!==3)throw new Error("Conv requires 2 or 3 inputs");if(r[0].dims.length!==4||r[1].dims.length!==4)throw new Error("currently only support 2-dimensional conv");let n=r[0].dims[1],t=r[1].dims[1]*e.group;if(n!==t)throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");if(r.length===3&&(r[2].dims.length!==1||r[1].dims[0]!==r[2].dims[0]))throw new Error("invalid bias");let o=r[0].dims.length-2;if(e.dilations.length!==o)throw new Error(`dilations should be ${o}D`);if(e.strides.length!==o)throw new Error(`strides should be ${o}D`);if(e.pads.length!==o*2)throw new Error(`pads should be ${o*2}D`);if(e.kernelShape.length!==0&&e.kernelShape.length!==r[1].dims.length-2)throw new Error("invalid kernel shape");if(r[0].type!=="float32"||r[1].type!=="float32")throw new Error("Conv input(X,W) should be float tensor");if(r.length===3&&r[2].type!=="float32")throw new Error("Conv input(bias) should be float tensor")}});var dx,cx,fx,$p,px,mx,hx,gx,yx,bx,Tp,vx,Sp=D(()=>{"use strict";At();pt();He();En();dx=(r,e,n,t,o,i)=>(r-1)*e+n+(t-1)*o+1-i,cx=(r,e,n,t,o)=>{let i=Math.floor(r/2);e==="SAME_UPPER"?(n[t]=i,n[o]=r-i):e==="SAME_LOWER"&&(n[t]=r-i,n[o]=i)},fx=(r,e,n,t,o,i,s,a)=>{let u=r.length-2,l=a.length===0;for(let d=0;d<u;++d){let p=l?r[d+2]*i[d]:a[d],h=dx(r[d+2],i[d],o[d],e[d],n[d],p);cx(h,t,o,d,d+u),l&&a.push(i[d]*(r[d+2]-1)+s[d]+(e[d]-1)*n[d]+1-o[d]-o[d+u])}},$p=(r,e,n)=>(vx(e,n),px(r,e,n)),px=(r,e,n)=>{let t=bx(n,e);return[yx(r,e,t)]},mx=(r,e)=>({name:"ConvTranspose",inputNames:r?["X","W","B"]:["X","W"],inputTypes:r?[0,0,0]:[0,0],cacheHint:e}),hx=(r,e,n,t)=>{let i=e.length>2?"getB(output_channel)":"0.0",s=e[0].dims,a=e[1].dims,u=a[1],l=a[0]/t.group,d=[e[0].dims[0],e[1].dims[1]*t.group,...t.outputShape],p=he(r.session.backend.glContext.version),{activationFunction:h,applyActivation:y}=kr(t),b=`
  const ivec2 strides = ivec2(${t.strides[0]}, ${t.strides[1]});
  const ivec2 pads = ivec2(${t.pads[0]}, ${t.pads[1]});
  ${h}
  void main() {
    ivec4 coords = getOutputCoords();
    int batch = coords.x;
    int output_channel = coords.y;

    ivec2 loc = coords.zw + pads;

    int group_id = output_channel / ${u};
    int wOutChannel = output_channel - group_id * ${u};

    float value = ${i};
    for (int inChannelOffset = 0; inChannelOffset < ${l}; inChannelOffset++) {
      int input_channel = group_id * ${l} + inChannelOffset;
      for (int wWOff = 0; wWOff < ${a[2]}; wWOff++) {
        for (int wHOff = 0; wHOff < ${a[3]}; wHOff++) {
          ivec2 wOff = ivec2(wWOff * ${t.dilations[0]}, wHOff * ${t.dilations[1]});
          ivec2 wLoc = loc - wOff;
          ivec2 wLocIn = wLoc / strides;
          if (
            wLocIn * strides == wLoc &&
            wLocIn.x >= 0 && wLocIn.x < ${s[2]} &&
            wLocIn.y >= 0 && wLocIn.y < ${s[3]}
          ) {
            float xVal = getX(batch, input_channel, wLocIn.y, wLocIn.x);
            float wVal = getW(input_channel, wOutChannel, wHOff, wWOff);
            value += xVal * wVal;
          }
        }
      }
    }
    ${y}
    ${p.output} = vec4(value, .0, .0, .0);
  }
`;return{...n,output:{dims:d,type:e[0].type,textureType:0},shaderSource:b,hasMain:!0}},gx=(r,e,n)=>{let t=mx(e.length>2,n.cacheKey);return{...t,get:()=>hx(r,e,t,n)}},yx=(r,e,n)=>r.run(gx(r,e,n),e),bx=(r,e)=>{let n=r.kernelShape.slice();if(r.kernelShape.length===0)for(let a=2;a<e[1].dims.length;++a)n.push(e[1].dims[a]);let t=r.pads.slice(),o=r.outputShape.slice(),i=e[0].dims;fx(i,n,r.dilations,r.autoPad,t,r.strides,r.outputPadding,o);let s=Object.assign({},r);return Object.assign(s,{kernelShape:n,pads:t,outputShape:o,cacheKey:r.cacheKey}),s},Tp=r=>{let e=r.attributes,n=ro(e),t=e.getString("auto_pad","NOTSET"),o=e.getInts("dilations",[1,1]),i=e.getInt("group",1),s=e.getInts("kernel_shape",[]),a=e.getInts("output_padding",[0,0]),u=e.getInts("output_shape",[]),l=e.getInts("pads",[0,0,0,0]),d=e.getInts("strides",[1,1]);return Re({autoPad:t,dilations:o,group:i,kernelShape:s,outputPadding:a,outputShape:u,pads:l,strides:d,...n})},vx=(r,e)=>{if(!r||r.length!==2&&r.length!==3)throw new Error("Conv requires 2 or 3 inputs");if(r[0].dims.length!==4||r[1].dims.length!==4)throw new Error("currently only support 2-dimensional conv");let n=r[0].dims[1],t=r[1].dims[0];if(n!==t)throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");let o=r[1].dims[1]*e.group;if(r.length===3&&(r[2].dims.length!==1||r[2].dims[0]!==o))throw new Error("invalid bias");let i=r[0].dims.length-2;if(e.dilations.length!==i)throw new Error(`dilations should be ${i}D`);if(e.strides.length!==i)throw new Error(`strides should be ${i}D`);if(e.pads.length!==i*2)throw new Error(`pads should be ${i*2}D`);if(e.outputPadding.length!==i)throw new Error(`output_padding should be ${i}D`);if(e.kernelShape.length!==0&&e.kernelShape.length!==r[1].dims.length-2)throw new Error("invalid kernel shape");if(e.outputShape.length!==0&&e.outputShape.length!==r[0].dims.length-2)throw new Error("invalid output shape");if(r[0].type!=="float32"||r[1].type!=="float32")throw new Error("ConvTranspose input(X,W) should be float tensor");if(r.length===3&&r[2].type!=="float32")throw new Error("ConvTranspose input(bias) should be float tensor")}});var Ip,Cn,Ap,wx,Op,_x,xx,$x,Aa=D(()=>{"use strict";At();Ze();He();Ip={name:"Transpose",inputNames:["A"],inputTypes:[0]},Cn=(r,e,n)=>($x(e),[r.run({...Ip,cacheHint:n.cacheKey,get:()=>wx(r,e[0],n.perm)},e)]),Ap=r=>Re({perm:r.attributes.getInts("perm",[])}),wx=(r,e,n)=>{let t=e.dims;n=Op(t,n);let o=_x(t,n),i=t.length,s=`
      ${xx("perm",n,i)}
      float process(int indices[${i}]) {
        int a[${i}];
        perm(a, indices);
        return _A(a);
      }`;return{...Ip,output:{dims:o,type:e.type,textureType:0},shaderSource:s}},Op=(r,e)=>(e&&e.length!==r.length&&(e=[...r.keys()].reverse()),e),_x=(r,e)=>(e=Op(r,e),le.sortBasedOnPerm(r,e)),xx=(r,e,n)=>{let t=[];t.push(`void ${r}(out int a[${n}], int src[${n}]) {`);for(let o=0;o<n;++o)t.push(`	a[${e[o]}]=src[${o}];`);return t.push("	}"),t.join(`
`)},$x=r=>{if(!r||r.length!==1)throw new Error("Transpose requires 1 input.");if(r[0].type!=="float32"&&r[0].type!=="float64")throw new Error("input should be float tensor")}});var Ep,Cp,Tx,Pp=D(()=>{"use strict";Aa();Ep=(r,e,n)=>{Tx(e);let t=n.blocksize,o=t*t,i=n.mode==="DCR"?[0,3,4,1,5,2]:[0,1,4,2,5,3],s=n.mode==="DCR"?[e[0].dims[0],t,t,e[0].dims[1]/o,e[0].dims[2],e[0].dims[3]]:[e[0].dims[0],e[0].dims[1]/o,t,t,e[0].dims[2],e[0].dims[3]],a=r.reshapeUnpacked(e[0],s),u={perm:i,cacheKey:`${i}`},[l]=Cn(r,[a],u),d=[e[0].dims[0],e[0].dims[1]/o,e[0].dims[2]*t,e[0].dims[3]*t];return[r.reshapeUnpacked(l,d)]},Cp=r=>{let e=r.attributes.getInt("blocksize");if(e<1)throw new Error(`blocksize must be >= 1, but got : ${e} for DepthToSpace`);let n=r.attributes.getString("mode","DCR");if(n!=="DCR"&&n!=="CRD")throw new Error(`unrecognized mode: ${n} for DepthToSpace`);return{mode:n,blocksize:e}},Tx=r=>{if(r.length!==1)throw new Error(`DepthToSpace expect 1 inputs, but got ${r.length}`);if(r[0].type==="string"||r[0].dims.length!==4)throw new TypeError("DepthToSpace input should be a 4-D numeric tensor")}});var kp,Dp,Sx,Bp=D(()=>{"use strict";Ze();kp=(r,e,n)=>{Sx(e,n);let t=le.flattenShape(e[0].dims,n);return[r.reshapeUnpacked(e[0],t)]},Dp=r=>r.attributes.getInt("axis",1),Sx=(r,e)=>{if(!r||r.length!==1)throw new Error("Flatten requires 1 input.");let n=r[0].dims.length;if(n===0)throw new Error("scalar tensor is not supported.");if(e<-n||e>n)throw new Error("Invalid axis");if(r[0].type==="string")throw new Error("string tensor is not supported.")}});var on,jo=D(()=>{"use strict";on=["float32","float64","int32","int16","int8","uint16","uint32","uint8"]});var Rp,zp,Ix,Ax,Ox,Ex,Mp=D(()=>{"use strict";At();jo();Ze();He();Rp=(r,e,n)=>(Ex(e,n.axis),[r.run(Ox(r,e,n),e)]),zp=r=>Re({axis:r.attributes.getInt("axis",0)}),Ix={name:"Gather",inputNames:["A","B"],inputTypes:[0,0]},Ax=(r,e,n,t)=>{let o=n[0].dims.slice(),i=n[1].dims.slice(),s=new Array(o.length+i.length-1);t=le.normalizeAxis(t,o.length);let a=[];for(let h=0;h<s.length;h++)h<t?(s[h]=o[h],a.push(`inputIdx[${h}] = outputIdx[${h}];`)):h<t+i.length?(s[h]=i[h-t],a.push(`indexDataIdx[${h-t}] = outputIdx[${h}];`)):(s[h]=o[h-i.length+1],a.push(`inputIdx[${h-i.length+1}] = outputIdx[${h}];`));let u=s.length||1,l=o.length,d=i.length||1,p=`
      float process(int outputIdx[${u}]) {
        int inputIdx[${l}];
        int indexDataIdx[${d}];
        indexDataIdx[0] = 0;
        ${a.join(`
        `)}
        int idx = int(_B(indexDataIdx));
        inputIdx[${t}] = idx < 0 ? idx + ${o[t]} : idx;
        return _A(inputIdx);
      }`;return{...e,output:{dims:s,type:n[0].type,textureType:0},shaderSource:p}},Ox=(r,e,n)=>{let t={...Ix,cacheHint:n.cacheKey};return{...t,get:()=>Ax(r,t,e,n.axis)}},Ex=(r,e)=>{if(!r||r.length!==2)throw new Error("Gather requires 2 inputs.");let n=r[0].dims.length;if(n<1)throw new Error("Invalid input shape.");if(e<-n||e>n-1)throw new Error("Invalid axis.");if(on.indexOf(r[0].type)===-1)throw new Error("Invaid input type.");if(r[1].type!=="int32"&&r[1].type!=="int16")throw new Error("Invaid input type.")}});var Pu,Np,Lp,Up,Cx,Px,kx,Fp=D(()=>{"use strict";At();Ze();He();Pu=(r,e,n)=>(kx(e,n),[r.run(Cx(e,n),e)]),Np=(r,e)=>{let n=r.attributes.getInt("transA",0)!==0,t=r.attributes.getInt("transB",0)!==0,o=r.attributes.getFloat("alpha",1),i=r.attributes.getFloat("beta",1);return Re({transA:n,transB:t,alpha:o,beta:i,isOptionalC:e})},Lp=r=>Np(r,!1),Up=r=>Np(r,!0),Cx=(r,e)=>{let n={name:"Gemm",inputNames:r.length===3?["A","B","C"]:["A","B"],inputTypes:r.length===3?[0,0,0]:[0,0],key:e.cacheKey};return{...n,get:()=>Px(n,r,e)}},Px=(r,e,n)=>{let t=e[0].dims.slice(),o=e[1].dims.slice(),[i,s]=ga.getShapeOfGemmResult(t,n.transA,o,n.transB,e.length===3?e[2].dims:void 0),a=[i,s];if(!a)throw new Error("Can't use gemm on the given tensors");let u=t[t.length-1],l="";n.transA&&(u=t[0]),n.transA&&n.transB?l="value += _A_T(a) * _B_T(b);":n.transA&&!n.transB?l="value += _A_T(a) * _B(b);":!n.transA&&n.transB?l="value += _A(a) * _B_T(b);":!n.transA&&!n.transB&&(l="value += _A(a) * _B(b);");let d=a.length,p=e.length===3?`int c[${e[2].dims.length}];`:"",h=e.length===3?"bcastIndices_C(indices, c);":"",y=e.length===3?"value += beta * _C(c);":"",b=`
      float process(int indices[${d}]) {
          int a[${d}];
          int b[${d}];
          ${p}

          copyVec(indices, a);
          copyVec(indices, b);
          ${h}

          float value = 0.0;
          for (int k=0; k<${u}; ++k) {
              a[${d-1}] = k;
              b[${d-2}] = k;
              ${l}
          }

          value = value * alpha;
          ${y}
          return value;
      }`;return{...r,output:{dims:a,type:e[0].type,textureType:0},variables:[{name:"alpha",type:"float",data:n.alpha},{name:"beta",type:"float",data:n.beta}],shaderSource:b}},kx=(r,e)=>{if(!r)throw new Error("Input is missing");if(e.isOptionalC&&(r.length<2||r.length>3))throw new Error("Invaid input shape.");if(!e.isOptionalC&&r.length!==3)throw new Error("Gemm requires 3 inputs");if(r.length===3&&r[2].dims.length!==1&&r[2].dims.length!==2)throw new Error("Invalid input shape of C");if(r[0].type!=="float32"&&r[0].type!=="float64"||r[1].type!=="float32"&&r[1].type!=="float64"||r.length===3&&r[2].type!=="float32"&&r[2].type!=="float64")throw new Error("Invalid input type.");if(r[0].type!==r[1].type||r.length===3&&r[0].type!==r[2].type)throw new Error("Input types are mismatched")}});var Vp,Gp,Dx,Bx,Rx,zx,Mx,Wp=D(()=>{"use strict";At();He();Vp=(r,e,n)=>(Mx(e),[r.run(Rx(r,e,n),e)]),Gp=r=>{let e=r.attributes.getFloat("scale"),n=r.attributes.getFloats("bias");return Re({scale:e,bias:n})},Dx={name:"ImageScaler",inputNames:["X"],inputTypes:[0]},Bx=(r,e,n,t)=>{let o=n[0].dims.slice(),i=o.length,a=`
      ${zx(t.bias.length)}
      float process(int indices[${i}]) {
        return _X(indices) * scale + getBias(bias, indices[1]);
      }`;return{...e,output:{dims:o,type:n[0].type,textureType:0},variables:[{name:"bias",type:"float",arrayLength:t.bias.length,data:t.bias},{name:"scale",type:"float",data:t.scale}],shaderSource:a}},Rx=(r,e,n)=>{let t={...Dx,cacheHint:n.cacheKey};return{...t,get:()=>Bx(r,t,e,n)}},zx=r=>{let e=[`float getBias(float bias[${r}], int channel) {`];for(let n=0;n<r;++n)n===0?e.push(`	if (channel == ${n}) { return bias[${n}]; }`):n===r-1?e.push(`	else { return bias[${n}]; }`):e.push(`	else if (channel == ${n}) { return bias[${n}]; }`);return e.push("	}"),e.join(`
`)},Mx=r=>{if(!r||r.length!==1)throw new Error("ImageScaler requires 1 input.");if(r[0].dims.length!==4)throw new Error("Invalid input shape.");if(r[0].type!=="float32"&&r[0].type!=="float64")throw new Error("Invalid input type.")}});var jp,qp,Hp,Nx,Lx,Ux,Fx,Vx,Gx,Kp=D(()=>{"use strict";pt();He();jp=(r,e,n)=>{Gx(e);let t=r.run(Lx(e[0]),e);return[r.run(Vx(r,e[0],n,t.dims),[e[0],t,e[1],e[2]])]},qp=r=>r.attributes.getFloat("epsilon",1e-5),Hp={name:"InstanceNormalization_MeanAndVariance",inputNames:["X"],inputTypes:[0]},Nx=(r,e)=>{let n=e.dims.slice(),t=n[1],o=n[2]*n[3],i=[n[0],t],s=`
      vec4 process(int[2] indices) {
        vec4 v = vec4(0.0);
        int a[4];
        a[0] = indices[0];
        a[1] = indices[1];
        float temp = 0.0;
        for(int a2=0; a2<${n[2]}; a2++) {
          a[2] = a2;
          for(int a3=0; a3<${n[3]}; a3++) {
            a[3] = a3;
            float x = _X(a);
            temp += x;
          }
        }
        float mean = temp / float(${o});
        temp = 0.0;
        for(int a2=0; a2<${n[2]}; a2++) {
          a[2] = a2;
          for(int a3=0; a3<${n[3]}; a3++) {
            a[3] = a3;
            float x = _X(a);
            temp += (x - mean) * (x - mean);
          }
        }
        v.r = mean;
        v.g = temp / float(${o});

        return v;
      }`;return{...r,output:{dims:i,type:e.type,textureType:4},shaderSource:s}},Lx=r=>({...Hp,get:()=>Nx(Hp,r)}),Ux={name:"InstanceNormalization_ComputeOutput",inputNames:["X","MeanAndVariance","Scale","B"],inputTypes:[0,4,0,0]},Fx=(r,e,n,t,o)=>{let i=he(r.session.backend.glContext.version),[s,a]=r.calculateTextureWidthAndHeight(o,4),[u,l]=[s/4,a],d=`
      vec4 get_MeanAndVariance(int[2] mv) {
        int offset = indicesToOffset_MeanAndVariance(mv);
        vec2 coords = offsetToCoords(offset, ${u}, ${l});
        return ${i.texture2D}(MeanAndVariance, coords);
      }

      float process(int[4] indices) {
        int mv[2];
        mv[0] = indices[0];
        mv[1] = indices[1];
        vec4 mean_and_variance = get_MeanAndVariance(mv);
        float mean = mean_and_variance.r;
        float variance = mean_and_variance.g;

        int sb[1];
        sb[0] = indices[1];
        float scale = _Scale(sb);
        float b = _B(sb);

        return scale * (_X(indices) - mean) / sqrt(variance + epsilon) + b;
      }`;return{...e,output:{dims:n.dims,type:n.type,textureType:0},variables:[{name:"epsilon",type:"float",data:t}],shaderSource:d}},Vx=(r,e,n,t)=>{let o={...Ux,cacheHint:`${n}`};return{...o,get:()=>Fx(r,o,e,n,t)}},Gx=r=>{if(!r||r.length!==3)throw new Error("InstanceNormalization requires 3 inputs.");let e=r[0],n=r[1],t=r[2];if(e.dims.length<3||n.dims.length!==1||t.dims.length!==1)throw new Error("Invalid input shape.");if(n.dims[0]!==e.dims[1]||t.dims[0]!==e.dims[1])throw new Error("Input shapes are mismatched.");if(e.type!=="float32"&&e.type!=="float64"||n.type!=="float32"&&n.type!=="float64"||t.type!=="float32"&&t.type!=="float64")throw new Error("Invalid input type.");if(r[0].dims.length!==4)throw new Error("Only support 4-D input shape.")}});function Wx(r,e){let n=r[0].dims[1],t=r[0].dims.length,o=-Math.floor((e.size-1)/2),i=Math.ceil((e.size-1)/2),s=`float(${e.alpha}) / float(${e.size})`,a=`float(${e.bias})`,u=`float(${e.beta})`,l=`
    float process(int indices[${t}]) {
        int c = indices[1];
        float x = _X(indices);
        float square_sum = 0.0;

        for (int i = ${o}; i <= ${i}; i++) {
          int idx = c + i;
          if (c >= 0 && c < ${n}) {
            indices[1] = idx;
            float j = _X(indices);
            square_sum += j * j;
          }
        }
        return x / pow(${a} + ${s} * square_sum, ${u});
    }`;return{...Zp,cacheHint:e.cacheKey,output:{dims:r[0].dims,type:r[0].type,textureType:0},shaderSource:l}}function Hx(r,e){return{...Zp,cacheHint:e.cacheKey,get:()=>Wx(r,e)}}var Yp,Xp,Zp,jx,Jp=D(()=>{"use strict";At();He();Yp=(r,e,n)=>(jx(e),[r.run(Hx(e,n),e)]),Xp=r=>{let e=r.attributes.getFloat("alpha",1e-4),n=r.attributes.getFloat("beta",.75),t=r.attributes.getFloat("bias",1),o=r.attributes.getInt("size");return Re({alpha:e,beta:n,bias:t,size:o})},Zp={name:"LRN",inputNames:["X"],inputTypes:[0]};jx=r=>{if(!r||r.length!==1)throw new Error("LRN requires 1 input.");if(r[0].dims.length!==4)throw new Error('currently only support LRN for input with "NCHW" format');if(r[0].type!=="float32")throw new Error("input should be float type")}});var qx,ku,Qp,em,tm,Kx,Yx,Xx,Zx,Jx,Qx,e2,t2,rm=D(()=>{"use strict";At();Ze();pt();He();qx={name:"Pad",inputNames:["A"],inputTypes:[0]},ku=(r,e,n)=>(Xx(e),[r.run({...qx,cacheHint:n.cacheKey,get:()=>Yx(r,e[0],n)},e)]),Qp=r=>{let e=r.attributes.getString("mode","constant"),n=r.attributes.getFloat("value",0),t=r.attributes.getInts("pads");return Re({mode:e,value:n,pads:t})},em=(r,e,n)=>{Zx(e);let t=Kx(r,e,n);return ku(r,[e[0]],t)},tm=r=>r.attributes.getString("mode","constant"),Kx=(r,e,n)=>{if(!r.session.isInitializer(e[1].dataId)||e.length>=3&&!r.session.isInitializer(e[2].dataId))throw new Error("dynamic pad attributes are not allowed");let t=Array.from(e[1].integerData),o=e.length>=3?e[2].floatData[0]:0;return Re({mode:n,pads:t,value:o})},Yx=(r,e,n)=>{let t=le.padShape(e.dims.slice(),n.pads),o=t.length,s=`
      ${Jx(r,e,n)}
      float process(int[${o}] indices) {
          return padA(indices);
      }`;return{name:"Pad",inputNames:["A"],inputTypes:[0],output:{dims:t,type:e.type,textureType:0},shaderSource:s}},Xx=r=>{if(!r||r.length!==1)throw new Error("Pad requires 1 input");if(r[0].type!=="float32"&&r[0].type!=="float64")throw new Error("Invalid input type.")},Zx=r=>{if(!r||r.length!==2&&r.length!==3)throw new Error("Pad requires 2 or 3 inputs");if(r[1].type!=="int32")throw new Error("Invalid input type.");if(r.length>=3&&r[2].type==="string")throw new Error("Invalid input type.")},Jx=(r,e,n)=>{let t=he(r.session.backend.glContext.version),[o,i]=r.calculateTextureWidthAndHeight(e.dims,0),s=le.computeStrides(e.dims);switch(n.mode){case"constant":return Qx(t,e.dims,s,o,i,n.pads,n.value);case"reflect":return e2(t,e.dims,s,o,i,n.pads);case"edge":return t2(t,e.dims,s,o,i,n.pads);default:throw new Error("Invalid mode")}},Qx=(r,e,n,t,o,i,s)=>{let a=e.length,u="";for(let l=a-1;l>=0;--l)u+=`
        k = m[${l}] - ${i[l]};
        if (k < 0)  return constant;
        if (k >= ${e[l]}) return constant;
        offset += k * ${n[l]};
        `;return`
      float padA(int m[${a}]) {
        const float constant = float(${s});
        int offset = 0;
        int k = 0;
        ${u}
        vec2 coords = offsetToCoords(offset, ${t}, ${o});
        float value = getColorAsFloat(${r.texture2D}(A, coords));
        return value;
      }
      `},e2=(r,e,n,t,o,i)=>{let s=e.length,a="";for(let u=s-1;u>=0;--u)a+=`
        k = m[${u}] - ${i[u]};
        if (k < 0) { k = -k; }
        {
          const int _2n_1 = ${2*(e[u]-1)};
          k = int( mod( float(k), float(_2n_1) ) ) ;
          if(k >= ${e[u]}) { k = _2n_1 - k; }
        }
        offset += k * ${n[u]};
        `;return`
      float padA(int m[${s}]) {
        int offset = 0;
        int k = 0;
        ${a}
        vec2 coords = offsetToCoords(offset, ${t}, ${o});
        float value = getColorAsFloat(${r.texture2D}(A, coords));
        return value;
      }
      `},t2=(r,e,n,t,o,i)=>{let s=e.length,a="";for(let u=s-1;u>=0;--u)a+=`
        k = m[${u}] - ${i[u]};
        if (k < 0)  k = 0;
        if (k >= ${e[u]}) k = ${e[u]-1};
        offset += k * ${n[u]};
      `;return`
      float padA(int m[${s}]) {
        int offset = 0;
        int k = 0;
        ${a}
        vec2 coords = offsetToCoords(offset, ${t}, ${o});
        float value = getColorAsFloat(${r.texture2D}(A, coords));
        return value;
      }
      `}});var om,im,am,sm,um,lm,dm,cm,fm,r2,nm,pm,Ea,mm,Oa,n2,hm=D(()=>{"use strict";At();Ze();He();om=(r,e,n)=>{Ea(e);let t={name:"AveragePool",inputNames:["X"],inputTypes:[0],cacheHint:n.cacheKey};return[r.run({...t,get:()=>am(e,t,!1,n)},e)]},im=r=>{let e=r.attributes.getString("auto_pad","NOTSET"),n=r.attributes.getInt("ceil_mode",0),t=r.attributes.getInt("count_include_pad",0)!==0,o=r.attributes.getInts("kernel_shape"),i=r.attributes.getInts("strides",[]),s=r.attributes.getInts("pads",[]);if(n!==0)throw new Error("using ceil() in shape computation is not yet supported for AveragePool");return Re({autoPad:e,ceilMode:n,countIncludePad:t,kernelShape:o,strides:i,pads:s})},am=(r,e,n,t)=>{let[o,i]=fm(r,t,n),s=le.size(o.kernelShape),a="value += _X(x);",u="";o.countIncludePad?u+=`value /= float(${s});`:u+=`value /= float(${s} - pad);`;let d=`
        ${mm(r[0].dims,o,a,u,"0.0")}
      `;return{...e,output:{dims:i,type:r[0].type,textureType:0},shaderSource:d}},sm=(r,e,n)=>{Ea(e);let t={name:"GlobalAveragePool",inputNames:["X"],inputTypes:[0],cacheHint:`${n.countIncludePad}`};return[r.run({...t,get:()=>am(e,t,!0,n)},e)]},um=r=>{let e=r.attributes.getInt("count_include_pad",0)!==0;return Re({autoPad:"",ceilMode:0,countIncludePad:e,kernelShape:[],strides:[],pads:[]})},lm=(r,e,n)=>{Ea(e);let t={name:"MaxPool",inputNames:["X"],inputTypes:[0],cacheHint:n.cacheKey};return[r.run({...t,get:()=>cm(e,t,!1,n)},e)]},dm=r=>{let e=r.attributes.getString("auto_pad","NOTSET"),n=r.attributes.getInt("ceil_mode",0),t=r.attributes.getInts("kernel_shape"),o=r.attributes.getInts("strides",[]),i=r.attributes.getInts("pads",[]),s=r.attributes.getInt("storage_order",0),a=r.attributes.getInts("dilations",[]);if(s!==0)throw new Error("column major storage order is not yet supported for MaxPool");if(n!==0)throw new Error("using ceil() in shape computation is not yet supported for MaxPool");return Re({autoPad:e,ceilMode:n,countIncludePad:!1,kernelShape:t,strides:o,pads:i,storageOrder:s,dilations:a})},cm=(r,e,n,t)=>{let[o,i]=fm(r,t,n),s=`
      value = max(_X(x), value);
    `,a="",l=`
      ${mm(r[0].dims,o,s,a,"-1e5")}
    `;return{...e,output:{dims:i,type:r[0].type,textureType:0},shaderSource:l}},fm=(r,e,n)=>{let t=r[0].dims.slice(),o=Object.hasOwnProperty.call(e,"dilations"),i=e.kernelShape.slice(),s=e.strides.slice(),a=o?e.dilations.slice():[],u=e.pads.slice();Tn.adjustPoolAttributes(n,t,i,s,a,u);let l=Tn.computePoolOutputShape(n,t,s,a,i,u,e.autoPad),d=Object.assign({},e);return o?Object.assign(d,{kernelShape:i,strides:s,pads:u,dilations:a,cacheKey:e.cacheKey}):Object.assign(d,{kernelShape:i,strides:s,pads:u,cacheKey:e.cacheKey}),[d,l]},r2={autoPad:"",ceilMode:0,countIncludePad:!1,kernelShape:[],strides:[],pads:[],storageOrder:0,dilations:[],cacheKey:""},nm={name:"GlobalMaxPool",inputNames:["X"],inputTypes:[0]},pm=(r,e)=>(Ea(e),[r.run({...nm,get:()=>cm(e,nm,!0,r2)},e)]),Ea=r=>{if(!r||r.length!==1)throw new Error("Pool ops requires 1 input.");if(r[0].type!=="float32"&&r[0].type!=="float64")throw new Error("Invalid input type.")},mm=(r,e,n,t,o)=>{let i=r.length;if(e.kernelShape.length<=2){let s=e.kernelShape[e.kernelShape.length-1],a=e.strides[e.strides.length-1],u=e.pads[e.pads.length/2-1],l=e.pads[e.pads.length-1],d=r[i-1],p="",h="",y="";if(u+l!==0?p=`
          for (int i = 0; i < ${s}; i++) {
            x[${i} - 1] = indices[${i} - 1] * ${a} - ${u} + i;
            if (x[${i} - 1] < 0 || x[${i} - 1] >= ${d}) {
              pad++;
              continue;
            }
            ${n}
          }`:p=`
          for (int i = 0; i < ${s}; i++) {
            x[${i} - 1] = indices[${i} - 1] * ${a} - ${u} + i;
            ${n}
          }`,e.kernelShape.length===2){let w=e.kernelShape[e.kernelShape.length-2],T=e.strides[e.strides.length-2],x=e.pads[e.pads.length/2-2],_=e.pads[e.pads.length-2],A=r[i-2];x+_!==0?h=`
            for (int j = 0; j < ${w}; j++) {
              x[${i} - 2] = indices[${i} - 2] * ${T} - ${x} + j;
              if (x[${i} - 2] < 0 || x[${i} - 2] >= ${A}) {
                pad+= ${s};
                continue;
              }
          `:h=`
            for (int j = 0; j < ${w}; j++) {
              x[${i} - 2] = indices[${i} - 2] * ${T} - ${x} + j;
            `,y=`
          }
        `}return`
        float process(int indices[${i}]) {
          int x[${i}];
          copyVec(indices, x);

          float value = ${o};
          int pad = 0;
          ${h}
          ${p}
          ${y}
          ${t}
          return value;
        }
      `}else{let s=le.size(e.kernelShape),a=le.computeStrides(e.kernelShape),u=a.length,l=e.pads.length,d=n2(u),p=Oa(r,"inputDims"),h=Oa(e.pads,"pads"),y=Oa(a,"kernelStrides"),b=Oa(e.strides,"strides"),w=e.pads.reduce((_,A)=>_+A),T="";return w?T=`
            if (x[j] >= inputDims[j] || x[j] < 0) {
              pad++;
              isPad = true;
              break;
            }
          }
          if (!isPad) {
            ${n}
          }`:T=`
          }
          ${n}
        `,`
        ${d}
        float process(int indices[${i}]) {
          int x[${i}];
          copyVec(indices, x);
          int offset[${u}];
          int pads[${l}];
          int inputDims[${i}];
          int kernelStrides[${u}];
          int strides[${u}];
          ${h}
          ${p}
          ${b}
          ${y}

          float value = ${o};
          int pad = 0;
          bool isPad = false;
          for (int i = 0; i < ${s}; i++) {
            offsetToIndices(i, kernelStrides, offset);
            isPad = false;
            for (int j = ${i} - ${u}; j < ${i}; j++) {
              x[j] = indices[j] * strides[j - ${i} + ${u}]
                + offset[j - ${i} + ${u}] - pads[j - 2];
              ${T}
          }
          ${t}

          return value;
        }
      `}},Oa=(r,e)=>{let n="";for(let t=0;t<r.length;t++)n+=`
      ${e}[${t}] = ${r[t]};
    `;return n},n2=r=>`
  void offsetToIndices(int offset, int[${r}] strides, out int[${r}] indices) {
    if (${r} == 0) {
      return;
    }
    for (int i = 0; i < ${r} - 1; ++i) {
      indices[i] = offset / strides[i];
      offset -= indices[i] * strides[i];
    }
    indices[${r} - 1] = offset;
  }`});var Pn,an,o2,i2,gm,ym,bm,vm,wm,_m,xm,$m=D(()=>{"use strict";At();jo();Ze();He();Pn=(r,e,n,t,o)=>{i2(e);let i={name:t,inputNames:["A"],inputTypes:[0]};return[r.run({...i,cacheHint:n.cacheKey,get:()=>o2(r,e,n,t,o,i)},e)]},an=r=>{let e=r.attributes.getInts("axes",[]),n=r.attributes.getInt("keepdims",1)===1;return Re({axes:e,keepDims:n})},o2=(r,e,n,t,o,i)=>{let s=[],a=e[0].dims.length||1,u=[],l=le.normalizeAxes(n.axes,e[0].dims.length),d=o(e,l),p=d[1];for(let b=0;b<e[0].dims.length;b++)l.indexOf(b)>=0||l.length===0?(n.keepDims&&s.push(1),p=`
          for(int j${b} = 0; j${b} < ${e[0].dims[b]}; j${b}++) {
            inputIdx[${b}] = j${b};
            ${p}
          }`):(u.push(`inputIdx[${b}] = outputIdx[${s.length}];`),s.push(e[0].dims[b]));let y=`
      float process(int outputIdx[${s.length||1}]) {
        float value;                 // final result
        int inputIdx[${a}];      // addressing input data
        ${u.join(`
`)}
        ${d[0]}       // init ops for reduce max/min
        ${p}
        ${d[2]}       // final computation for reduce mean
        return value;
      }`;return{...i,output:{dims:s,type:e[0].type,textureType:0},shaderSource:y}},i2=r=>{if(!r||r.length!==1)throw new Error("Reduce op requires 1 input.");if(on.indexOf(r[0].type)===-1)throw new Error("Invalid input type.")},gm=(r,e,n)=>Pn(r,e,n,"ReduceSum",()=>["value = 0.0;","value += _A(inputIdx);",""]),ym=(r,e,n)=>Pn(r,e,n,"ReduceMean",(o,i)=>{let s=1;for(let a=0;a<o[0].dims.length;a++)(i.indexOf(a)>=0||i.length===0)&&(s*=o[0].dims[a]);return["value = 0.0;","value += _A(inputIdx);",`value /= ${s}.;`]}),bm=(r,e,n)=>Pn(r,e,n,"ReduceMax",(o,i)=>{let s=[];for(let a=0;a<o[0].dims.length;a++)(i.indexOf(a)>=0||i.length===0)&&s.push(`inputIdx[${a}] = 0;`);return[`${s.join(`
`)}
value = _A(inputIdx);`,"value = max(value, _A(inputIdx));",""]}),vm=(r,e,n)=>Pn(r,e,n,"ReduceMin",(o,i)=>{let s=[];for(let a=0;a<o[0].dims.length;a++)(i.indexOf(a)>=0||i.length===0)&&s.push(`inputIdx[${a}] = 0;`);return[`${s.join(`
`)}
value = _A(inputIdx);`,"value = min(value, _A(inputIdx));",""]}),wm=(r,e,n)=>Pn(r,e,n,"ReduceProd",()=>["value = 1.0;","value *= _A(inputIdx);",""]),_m=(r,e,n)=>Pn(r,e,n,"ReduceLogSum",()=>["value = 0.0;","value += _A(inputIdx);","value = log(value);"]),xm=(r,e,n)=>Pn(r,e,n,"ReduceLogSumSquare",()=>["float t; value = 0.0;","t = _A(inputIdx); value += t * t;",""])});var Tm,Sm=D(()=>{"use strict";Ze();Tm=(r,e)=>{let n=le.calculateReshapedDims(e[0].dims,e[1].integerData);return r.session.pack?[r.reshapePacked(e[0],n)]:[r.reshapeUnpacked(e[0],n)]}});var Im,Du,Am,Om,qo,a2,Bu,Ca,Ru=D(()=>{"use strict";At();pt();He();Im={name:"Upsample",inputNames:["X"],inputTypes:[0]},Du=(r,e,n)=>(Bu(e,n),[r.run({...Im,cacheHint:n.cacheKey,get:()=>a2(r,e,n)},e)]),Am=r=>qo(r,7),Om=r=>qo(r,9),qo=(r,e)=>{let n=e>=10,t=r.attributes.getString("mode","nearest");if(t!=="nearest"&&t!=="linear"&&(e<11||t!=="cubic"))throw new Error(`unrecognized mode: ${t}`);let o=[];e<9&&(o=r.attributes.getFloats("scales"),Ca(o,t,n));let i=r.attributes.getFloat("extrapolation_value",0),s=e>10?r.attributes.getString("coordinate_transformation_mode","half_pixel"):"asymmetric";if(["asymmetric","pytorch_half_pixel","tf_half_pixel_for_nn","align_corners","tf_crop_and_resize","half_pixel"].indexOf(s)===-1)throw new Error(`coordinate_transform_mode '${s}' is not supported`);let a=s==="tf_crop_and_resize",u=a,l=t==="nearest"&&e>=11?r.attributes.getString("nearest_mode","round_prefer_floor"):"";if(["round_prefer_floor","round_prefer_ceil","floor","ceil",""].indexOf(l)===-1)throw new Error(`nearest_mode '${l}' is not supported`);let d=r.attributes.getFloat("cubic_coeff_a",-.75),p=r.attributes.getInt("exclude_outside",0)!==0;if(p&&t!=="cubic")throw new Error("exclude_outside can be set to 1 only when mode is CUBIC.");let h=e<11?!0:t==="nearest"&&s==="asymmetric"&&l==="floor",y=0,b=0,w=0;return e>10?r.inputs.length>2?(y=1,b=2,w=3):(b=1,w=2):e===9&&(b=1),Re({opset:e,isResize:n,mode:t,scales:o,extrapolationValue:i,coordinateTransformMode:s,useExtrapolation:u,needRoiInput:a,nearestMode:l,cubicCoefficientA:d,excludeOutside:p,useNearest2xOptimization:h,roiInputIdx:y,scalesInputIdx:b,sizesInputIdx:w})},a2=(r,e,n)=>{let t=he(r.session.backend.glContext.version),[o,i]=r.calculateTextureWidthAndHeight(e[0].dims,0),s=e[0].dims.map((w,T)=>Math.floor(w*n.scales[T])),[a,u]=r.calculateTextureWidthAndHeight(s,0),l=s.length,d=new Array(l),p=new Array(l),h=`
      int output_pitches[${l}];
      int input_pitches[${l}];
      `;for(let w=l-1;w>=0;w--)d[w]=w===l-1?1:d[w+1]*s[w+1],p[w]=w===l-1?1:p[w+1]*e[0].dims[w+1],h+=`
        output_pitches[${w}] = ${d[w]};
        input_pitches[${w}] = ${p[w]};
        `;let y=`
      float getInputFloat(int index) {
        vec2 coords = offsetToCoords(index, ${o}, ${i});
        float value = getColorAsFloat(${t.texture2D}(X, coords));
        return value;
      }
      `,b=n.mode==="nearest"?`
    ${y}
    float process(int indices[${l}]) {
      int input_index = 0;
      int output_index = coordsToOffset(TexCoords, ${a}, ${u});

      ${h}

      int d, m;
      for (int dim = 0; dim < ${l}; ++dim) {
        d = output_index / output_pitches[dim];
        m = output_index - d * output_pitches[dim];
        output_index = m;

        if (scales[dim] != 1 && d > 0) {
          int d2 = d / scales[dim];
          m = d - d2 * scales[dim];
          d = d2;
        }
        input_index += input_pitches[dim] * d;
      }

      return getInputFloat(input_index);
    }`:l===4?`
    ${y}
    float process(int indices[4]) {
      int input_index = 0;
      int output_index = coordsToOffset(TexCoords, ${a}, ${u});

      ${h}

      int m;
      int index_of_dim0, index_of_dim1, index_of_dim2, index_of_dim3;
      index_of_dim0 = output_index / output_pitches[0];
      m = output_index - index_of_dim0 * output_pitches[0];
      index_of_dim1 = m / output_pitches[1];
      m = m - index_of_dim1 * output_pitches[1];
      index_of_dim2 = m / output_pitches[2];
      m = m - index_of_dim2 * output_pitches[2];
      index_of_dim3 = m;

      int index_of_input_dim2, index_of_input_dim3, x_offset, y_offset;
      index_of_input_dim2 = index_of_dim2 / scales[2];
      y_offset = index_of_dim2 - index_of_input_dim2 * scales[2];
      index_of_input_dim3 = index_of_dim3 / scales[3];
      x_offset = index_of_dim3 - index_of_input_dim3 * scales[3];

      input_index = index_of_dim0 * input_pitches[0] +
            index_of_dim1 * input_pitches[1] +
            index_of_input_dim2 * input_pitches[2] +
            index_of_input_dim3;

      float x00 = getInputFloat(input_index);
      float x10, x01, x11;

      bool end_of_dim2 = false;
      if (index_of_input_dim2 == (${e[0].dims[2]} - 1)) {
        // It's the end in dimension 2
        x01 = x00;
        end_of_dim2 = true;
      } else {
        x01 = getInputFloat(input_index + input_pitches[2]);
      }

      if (index_of_input_dim3 == (input_pitches[2] - 1)) {
        // It's the end in dimension 3
        x10 = x00;
        x11 = x01;
      }
      else {
        x10 = getInputFloat(input_index + 1);
        x11 = end_of_dim2 ? x10 : getInputFloat(input_index + input_pitches[2] + 1);
      }

      float y0 = x00 + float(y_offset) * (x01 - x00) / float(scales[2]);
      float y1 = x10 + float(y_offset) * (x11 - x10) / float(scales[2]);
      return y0 + float(x_offset) * (y1 - y0) / float(scales[3]);
    }`:`
    ${y}
    float process(int indices[2]) {
      int input_index = 0;
      int output_index = coordsToOffset(TexCoords, ${a}, ${u});

      ${h}

      int m;
      int index_of_dim0, index_of_dim1;
      index_of_dim0 = output_index / output_pitches[0];
      m = output_index - index_of_dim0 * output_pitches[0];
      index_of_dim1 = m;

      int index_of_input_dim0, index_of_input_dim1, x_offset, y_offset;
      index_of_input_dim0 = index_of_dim0 / scales[0];
      y_offset = index_of_dim0 - index_of_input_dim0 * scales[0];
      index_of_input_dim1 = index_of_dim1 / scales[1];
      x_offset = index_of_dim1 - index_of_input_dim1 * scales[1];

      input_index = index_of_input_dim0 * input_pitches[0] + index_of_input_dim1;

      float x00 = getInputFloat(input_index);
      float x10, x01, x11;

      bool end_of_dim0 = false;
      if (index_of_input_dim0 == (${e[0].dims[0]} - 1)) {
        // It's the end in dimension 0
        x01 = x00;
        end_of_dim0 = true;
      } else {
        x01 = getInputFloat(input_index + input_pitches[0]);
      }

      if (index_of_input_dim1 == (input_pitches[0] - 1)) {
        // It's the end in dimension 1
        x10 = x00;
        x11 = x01;
      }
      else {
        x10 = getInputFloat(input_index + 1);
        x11 = end_of_dim0 ? x10 : getInputFloat(input_index + input_pitches[0] + 1);
      }

      float y0 = x00 + float(y_offset) * (x01 - x00) / float(scales[0]);
      float y1 = x10 + float(y_offset) * (x11 - x10) / float(scales[0]);
      return y0 + float(x_offset) * (y1 - y0) / float(scales[1]);
    }`;return{...Im,output:{dims:s,type:e[0].type,textureType:0},shaderSource:b,variables:[{name:"scales",type:"int",arrayLength:n.scales.length,data:n.scales.map(w=>Math.ceil(w))}]}},Bu=(r,e)=>{if(!r||e.opset<9&&r.length!==1||e.opset>=9&&e.opset<11&&r.length!==2||e.opset>=11&&r.length<2)throw new Error("invalid inputs.");if(e.scales.length>0&&r[0].dims.length!==e.scales.length)throw new Error("Invalid input shape.");if(r[0].type==="string")throw new Error("Invalid input tensor types.")},Ca=(r,e,n)=>{if(n){for(let t of r)if(t<=0)throw new Error("Scale value should be greater than 0.")}else for(let t of r)if(t<1)throw new Error("Scale value should be greater than or equal to 1.");if((e==="linear"||e==="cubic")&&r.length!==2&&(r.length!==4||r[0]!==1||r[1]!==1))throw new Error(`'Linear' mode and 'Cubic' mode only support 2-D inputs ('Bilinear', 'Bicubic')         or 4-D inputs with the corresponding outermost 2 scale values being 1         in the ${n?"Resize":"Upsample"} opeartor.`)}});var zu,Mu,Em,Cm,s2,u2,l2,d2,Pm=D(()=>{"use strict";pt();He();Cr();On();Ru();zu={name:"Resize",inputNames:["A"],inputTypes:[2]},Mu=(r,e,n)=>(Bu(e,n),[r.run({...zu,cacheHint:n.cacheKey,get:()=>s2(r,e,n)},e)]),Em=r=>qo(r,10),Cm=r=>qo(r,11),s2=(r,e,n)=>{let t=he(r.session.backend.glContext.version),[o,i]=u2(e,n);if(o.every(A=>A===1)&&n.coordinateTransformMode!=="tf_crop_and_resize")return{...zu,output:{dims:i,type:e[0].type,textureType:2},hasMain:!0,shaderSource:`void main() {
                    vec4 v = ${t.texture2D}(X, TexCoords);
                    ${t.output} = v;
                }`};let a=i.length;if(a<2)throw new Error(`output dimension should be at least 2, but got ${a}`);let u=i[a-2],l=i[a-1],d=e[0].dims;if(a!==d.length)throw new Error(`output dimension should match input ${d.length}, but got ${a}`);let p=d[a-2],h=d[a-1],y=o[a-2],b=o[a-1],w="";if(n.mode!=="linear")throw new Error(`resize (packed) does not support mode: '${n.mode}'`);switch(n.coordinateTransformMode){case"asymmetric":w=`
                    vec4 getSourceFracIndex(ivec4 coords) {
                        return vec4(coords) / scaleWHWH;
                    }
                `;break;case"half_pixel":w=`
                    vec4 getSourceFracIndex(ivec4 coords) {
                        return (vec4(coords) + 0.5) / scaleWHWH - 0.5;
                    }
                `;break;case"pytorch_half_pixel":w=`
                    vec4 getSourceFracIndex(ivec4 coords) {
                        vec4 fcoords = vec4(coords);
                        return vec4(
                            ${l}.0 > 1.0 ? (fcoords.x + 0.5) / scaleWHWH.x - 0.5 : 0.0,
                            ${u}.0 > 1.0 ? (fcoords.y + 0.5) / scaleWHWH.y - 0.5 : 0.0,
                            ${l}.0 > 1.0 ? (fcoords.z + 0.5) / scaleWHWH.z - 0.5 : 0.0,
                            ${u}.0 > 1.0 ? (fcoords.w + 0.5) / scaleWHWH.w - 0.5 : 0.0
                          );
                    }
                `;break;case"align_corners":w=`
                    vec4 getSourceFracIndex(ivec4 coords) {
                        vec4 resized = vec4(${l}.0 - 1.0, ${u}.0 - 1.0, ${l}.0 - 1.0,
                            ${u}.0 - 1.0);
                        vec4 original = vec4(${h}.0 - 1.0, ${p}.0 - 1.0, ${h}.0 - 1.0,
                            ${p}.0 - 1.0);
                        vec4 new_scale = original / resized;
                        return vec4(coords) * new_scale;
                    }
                `;break;default:throw new Error(`resize (packed) does not support coordinateTransformMode:                                 '${n.coordinateTransformMode}'`)}let T=Gt(a),x=Pr(),_=`
            const vec2 inputWH = vec2(${p}.0, ${h}.0);
            const vec4 scaleWHWH = vec4(float(${y}), float(${b}), float(${y}), float(${b}));
            ${x}
            ${w}
            float getAValue(int x10, int r, int c, int d) {
                return getChannel(getA(x10, r, c, d), vec2(c, d));
            }
            void main() {
                ${T} rc = getOutputCoords();

                int batch = rc[0];
                int depth = rc[1];

                // retrieve the 4 coordinates that is used in the 4 packed output values.
                ivec4 coords = ivec4(rc.wz, rc.w + 1, rc.z + 1);

                // calculate the source index in fraction
                vec4 sourceFrac = getSourceFracIndex(coords);

                // get the lower and upper bound of the 4 values that will be packed into one texel.
                ivec4 x00 = ivec4(max(sourceFrac.xy, vec2(0.0)), min(inputWH - 1.0, ceil(sourceFrac.xy)));
                ivec4 x01 = ivec4(max(sourceFrac.xw, vec2(0.0)), min(inputWH - 1.0, ceil(sourceFrac.xw)));
                ivec4 x10 = ivec4(max(sourceFrac.zy, vec2(0.0)), min(inputWH - 1.0, ceil(sourceFrac.zy)));
                ivec4 x11 = ivec4(max(sourceFrac.zw, vec2(0.0)), min(inputWH - 1.0, ceil(sourceFrac.zw)));

                bool hasNextRow = rc.w < ${u-1};
                bool hasNextCol = rc.z < ${l-1};

                // pack x00, x01, x10, x11's top-left corner into one vec4 structure
                vec4 topLeft = vec4(
                    getAValue(batch, depth, x00.x, x00.y),
                    hasNextCol ? getAValue(batch, depth, x01.x, x01.y) : 0.0,
                    hasNextRow ? getAValue(batch, depth, x10.x, x10.y) : 0.0,
                    (hasNextRow && hasNextCol) ? getAValue(batch, depth, x11.x, x11.y) : 0.0);

                // pack x00, x01, x10, x11's top-right corner into one vec4 structure
                vec4 topRight = vec4(
                    getAValue(batch, depth, x00.x, x00.w),
                    hasNextCol ? getAValue(batch, depth, x01.x, x01.w) : 0.0,
                    hasNextRow ? getAValue(batch, depth, x10.x, x10.w) : 0.0,
                    (hasNextRow && hasNextCol) ? getAValue(batch, depth, x11.x, x11.w) : 0.0);

                // pack x00, x01, x10, x11's bottom-left corner into one vec4 structure
                vec4 bottomLeft = vec4(
                    getAValue(batch, depth, x00.z, x00.y),
                    hasNextCol ? getAValue(batch, depth, x01.z, x01.y) : 0.0,
                    hasNextRow ? getAValue(batch, depth, x10.z, x10.y) : 0.0,
                    (hasNextRow && hasNextCol) ? getAValue(batch, depth, x11.z, x11.y) : 0.0);

                // pack x00, x01, x10, x11's bottom-right corner into one vec4 structure
                vec4 bottomRight = vec4(
                    getAValue(batch, depth, x00.z, x00.w),
                    hasNextCol ? getAValue(batch, depth, x01.z, x01.w) : 0.0,
                    hasNextRow ? getAValue(batch, depth, x10.z, x10.w) : 0.0,
                    (hasNextRow && hasNextCol) ? getAValue(batch, depth, x11.z, x11.w) : 0.0);

                // calculate the interpolation fraction on u and v direction
                vec4 frac = vec4(sourceFrac) - floor(sourceFrac);
                vec4 clampFrac = clamp(frac, vec4(0.0), vec4(1.0));

                vec4 top = mix(topLeft, topRight, clampFrac.ywyw);
                vec4 bottom = mix(bottomLeft, bottomRight, clampFrac.ywyw);
                vec4 newValue = mix(top, bottom, clampFrac.xxzz);

                ${t.output} = vec4(newValue);
            }
        `;return{...zu,output:{dims:i,type:e[0].type,textureType:2},hasMain:!0,shaderSource:_}},u2=(r,e)=>{let t=r[0].dims,o=e.scales,i;if(o.length===0){let a=r[e.scalesInputIdx];if(a&&a.size!==0){if(r[e.sizesInputIdx])throw new Error("Only one of scales or sizes must be provided as input.");o=l2(a,e.mode,e.isResize)}else{let u=r[e.sizesInputIdx];if(!u||u.size===0)throw new Error("Either scales or sizes MUST be provided as input.");i=Array.from(u.integerData),o=d2(i,t,e.mode,e.isResize)}}else if(r[e.sizesInputIdx])throw new Error("Only one of scales or sizes must be provided as input.");let s=i||t.map((a,u)=>Math.floor(a*o[u]));return[o,s]},l2=(r,e,n)=>{let t=Array.from(r.floatData);return Ca(t,e,n),t},d2=(r,e,n,t)=>{let o=e.length,i=new Array(o);for(let s=0,a=o;s<a;s++)if(e[s]===0){if(r[s]!==0)throw new Error("Input dim is zero but required output dim is non-zero.");i[s]=1}else i[s]=r[s]/e[s];return Ca(i,n,t),i}});var km,c2,Dm=D(()=>{"use strict";An();km=(r,e)=>(c2(e),[new Tt([e[0].dims.length],"int32",void 0,void 0,new Int32Array(e[0].dims))]),c2=r=>{if(!r||r.length!==1)throw new Error("Shape requires 1 input.")}});var Nu,Bm,Rm,zm,f2,Mm,p2,m2,Nm=D(()=>{"use strict";At();jo();Ze();He();Nu={name:"Slice",inputNames:["A"],inputTypes:[0]},Bm=(r,e,n)=>(f2(e),[r.run({...Nu,cacheHint:n.cacheKey,get:()=>zm(r,e[0],n)},e)]),Rm=r=>{let e=r.attributes.getInts("starts"),n=r.attributes.getInts("ends"),t=r.attributes.getInts("axes",[]);return Re({starts:e,ends:n,axes:t})},zm=(r,e,n)=>{let t=n.axes.length===0?e.dims.slice(0).map((p,h)=>h):n.axes,o=le.normalizeAxes(t,e.dims.length),i=n.starts.map((p,h)=>p>e.dims[o[h]]-1?e.dims[o[h]]:le.normalizeAxis(p,e.dims[o[h]])),s=n.ends.map((p,h)=>p>e.dims[o[h]]-1?e.dims[o[h]]:le.normalizeAxis(p,e.dims[o[h]])),a=e.dims.slice(),u=[];for(let p=0;p<o.length;p++)a[o[p]]=s[p]-i[p],i[p]>0&&u.push(`outputIdx[${o[p]}] += ${i[p]};`);let d=`
      float process(int outputIdx[${a.length}]) {
        ${u.join(`
      `)}
        return _A(outputIdx);
      }`;return{...Nu,output:{dims:a,type:e.type,textureType:0},shaderSource:d}},f2=r=>{if(!r||r.length!==1)throw new Error("Slice requires 1 input.");if(on.indexOf(r[0].type)===-1)throw new Error("Invalid input type.")},Mm=(r,e)=>{m2(e);let n=p2(r,e);return[r.run({...Nu,cacheHint:n.cacheKey,get:()=>zm(r,e[0],n)},[e[0]])]},p2=(r,e)=>{if(!r.session.isInitializer(e[1].dataId)||!r.session.isInitializer(e[2].dataId)||e.length>=4&&!r.session.isInitializer(e[3].dataId)||e.length>=5&&!r.session.isInitializer(e[4].dataId))throw new Error("dynamic slice attributes are not allowed");if(e.length>=5&&e[4].integerData.some(s=>s!==1))throw new Error("currently non-1 steps is not supported for Slice");let n=Array.from(e[1].integerData),t=Array.from(e[2].integerData),o=e.length>=4?Array.from(e[3].integerData):[],i=`${o};${n};${t}`;return{starts:n,ends:t,axes:o,cacheKey:i}},m2=r=>{if(!r||r.length<3||r.length>5)throw new Error("Invalid input number.");if(r[1].type!=="int32"||r[1].dims.length!==1)throw new Error("Invalid input type.");if(r[2].type!=="int32"||r[2].dims.length!==1)throw new Error("Invalid input type.");if(r.length>=4&&(r[3].type!=="int32"||r[3].dims.length!==1))throw new Error("Invalid input type.");if(r.length>=5&&(r[4].type!=="int32"||r[4].dims.length!==1))throw new Error("Invalid input type.")}});var Lm,Um,Fm,Vm,Gm,Wm,Hm,jm,h2,g2,y2,qm,Km=D(()=>{"use strict";At();Ze();pt();He();Aa();Lm={name:"SoftmaxComputeMax",inputNames:["A"],inputTypes:[0]},Um={name:"SoftmaxComputeScale",inputNames:["A","Max"],inputTypes:[0,0]},Fm={name:"SoftMax",inputNames:["A","Max","Norm"],inputTypes:[0,0,0]},Vm=(r,e,n)=>{qm(e);let t=e[0].dims.slice(),o=le.normalizeAxis(n.axis,t.length),i=le.sizeToDimension(t,o),s=le.sizeFromDimension(t,o);return jm(r,e,n,i,s)},Gm=r=>Re({axis:r.attributes.getInt("axis",1)}),Wm=r=>Re({axis:r.attributes.getInt("axis",-1)}),Hm=(r,e,n)=>{qm(e);let t=e[0].dims.slice(),o=le.normalizeAxis(n.axis,t.length),i=t.length,s=o!==i-1,a=[],u=[],l=[],d;s&&(u=Array.from({length:i}).map((b,w)=>w),u[o]=i-1,u[i-1]=o,u.map(b=>a.push(t[b])),d=Re({perm:u}),l=Cn(r,e,d));let p=s?le.sizeToDimension(a,i-1):le.sizeToDimension(t,i-1),h=s?le.sizeFromDimension(a,i-1):le.sizeFromDimension(t,i-1),y=jm(r,s?l:e,n,p,h);return s?Cn(r,y,d):y},jm=(r,e,n,t,o)=>{let i=h2(r,e[0],t,o,[t]),s=r.run({...Lm,cacheHint:n.cacheKey,get:()=>i},e),a=g2(r,e[0],t,o,i.output.dims,[t]),u=r.run({...Um,cacheHint:n.cacheKey,get:()=>a},[e[0],s]),l=y2(r,e[0],t,o,i.output.dims,a.output.dims);return[r.run({...Fm,cacheHint:n.cacheKey,get:()=>l},[e[0],s,u])]},h2=(r,e,n,t,o)=>{let[i,s]=r.calculateTextureWidthAndHeight(e.dims,0),a=o.length;if(n<1||t<1)throw new Error("Logical row count N and feature count D must be greater than or equal to 1");if(o.length!==1)throw new Error("Dimensionality of the output should be 1");if(o[0]!==n)throw new Error("Shape of the output should be equal to logical row count");let u=he(r.session.backend.glContext.version),l=`
      float process(int[${a}] indices) {
        int logical_row_start_offset = indices[0] * ${t};

        float max = getColorAsFloat(${u.texture2D}(A, offsetToCoords(logical_row_start_offset, ${i},
        ${s} )));
        for(int i=1; i<${t}; ++i)
        {
          float current = getColorAsFloat(${u.texture2D}(A, offsetToCoords(logical_row_start_offset + i,
            ${i}, ${s})));
          if(current > max)
          max = current;
        }

        return max;
      }`;return{...Lm,output:{dims:o,type:e.type,textureType:0},shaderSource:l}},g2=(r,e,n,t,o,i)=>{let[s,a]=r.calculateTextureWidthAndHeight(e.dims,0),u=i.length;if(n<1||t<1)throw new Error("Logical row count N and feature count D must be greater than or equal to 1");if(i.length!==1)throw new Error("Dimensionality of the output should be 1");if(i[0]!==n)throw new Error("Shape of the output should be equal to logical row count");if(o.length!==1)throw new Error("Dimensionality of the intermediate results should be 1");if(o[0]!==n)throw new Error("Shape of the intermediate results should be equal to logical row count");let l=he(r.session.backend.glContext.version),d=`
      float process(int[${u}] indices) {
        int logical_row_start_offset = indices[0] * ${t};

        float norm_factor = 0.0;
        float max = _Max(indices);
        for(int i=0; i<${t}; ++i)
        {
          norm_factor += exp(getColorAsFloat(${l.texture2D}(A, offsetToCoords(logical_row_start_offset + i,
            ${s}, ${a}))) - max);
        }

        return norm_factor;
      }`;return{...Um,output:{dims:i,type:e.type,textureType:0},shaderSource:d}},y2=(r,e,n,t,o,i)=>{let[s,a]=r.calculateTextureWidthAndHeight(e.dims,0),u=e.dims.length;if(n<1||t<1)throw new Error("Logical row count N and feature count D must be greater than or equal to 1");if(o.length!==1||i.length!==1)throw new Error("Dimensionality of the intermediate results should be 1");if(o[0]!==n||i[0]!==n)throw new Error("Shape of the intermediate results should be equal to logical row count");let l=`
      float process(int[${u}] indices) {

      // get offset of current logical tensor index from the 2-D texture coordinates (TexCoords)
      int offset = coordsToOffset(TexCoords, ${s}, ${a});

      //determine the logical row for this index
      int logical_row_index[1];
      logical_row_index[0] = offset / ${t};

      float norm_factor = _Norm(logical_row_index);

      // avoid possible division by 0
      // if norm_facor is 0, all elements are zero
      // if so, return 0
      if(norm_factor == 0.0)
        return 0.0;

      return exp(_A(indices) - _Max(logical_row_index)) / norm_factor;
    }`;return{...Fm,output:{dims:e.dims,type:e.type,textureType:0},shaderSource:l}},qm=r=>{if(!r||r.length!==1)throw new Error("Softmax requires 1 input.");if(r[0].type!=="float32"&&r[0].type!=="float64")throw new Error("Invalid input type")}});var Ym,Xm,Zm,b2,v2,w2,Jm=D(()=>{"use strict";At();Ze();He();Ym={name:"Split",inputNames:["A"],inputTypes:[0]},Xm=(r,e,n)=>{w2(e);let t=le.normalizeAxis(n.axis,e[0].dims.length),o=b2(r,e,t,n),i=[];for(let s=0;s<o;++s)i.push(r.run({...Ym,cacheHint:`${n.cacheKey};${s}`,get:()=>v2(r,e[0],n,t,s)},e));return i},Zm=r=>{let e=r.attributes.getInt("axis",0),n=r.attributes.getInts("split",[]),t=r.outputs.length;return Re({axis:e,split:n,numOutputs:t})},b2=(r,e,n,t)=>{let[,o]=Uo.splitShape(e[0].dims,n,t.split,t.numOutputs);return o.length},v2=(r,e,n,t,o)=>{let[i,s]=Uo.splitShape(e.dims,t,n.split,n.numOutputs),a=s[o],u=i[o],d=`
      float process(int indices[${u.length}]) {
        indices[${t}] += ${a};
        return _A(indices);
      }
    `;return{...Ym,cacheHint:`${n.cacheKey}:${o}`,output:{dims:u,type:e.type,textureType:0},shaderSource:d}},w2=r=>{if(!r||r.length!==1)throw new Error("Split requires one input.");if(r[0].type!=="int8"&&r[0].type!=="uint8"&&r[0].type!=="int16"&&r[0].type!=="uint16"&&r[0].type!=="int32"&&r[0].type!=="uint32"&&r[0].type!=="float32"&&r[0].type!=="float64"&&r[0].type!=="bool")throw new Error("Invalid input type.")}});var Lu,Qm,eh,_2,x2,th=D(()=>{"use strict";Ze();Lu=(r,e,n)=>{_2(e);let t=le.squeezeShape(e[0].dims,n);return[r.reshapeUnpacked(e[0],t)]},Qm=(r,e)=>(x2(e),Lu(r,[e[0]],Array.from(e[1].integerData))),eh=r=>r.attributes.getInts("axes"),_2=r=>{if(!r||r.length!==1)throw new Error("Squeeze requires 1 input.");if(r[0].type==="string")throw new Error("invalid input tensor types.")},x2=r=>{if(!r||r.length!==2)throw new Error("Squeeze requires 2 inputs.");if(r[1].type!=="int32")throw new Error("Invalid input type.")}});var rh,$2,T2,nh=D(()=>{"use strict";pt();He();rh=(r,e)=>{T2(e);let n={name:"Sum",inputNames:e.map((o,i)=>`X${i}`),inputTypes:new Array(e.length).fill(0)};return[r.run({...n,get:()=>$2(r,e,n)},e)]},$2=(r,e,n)=>{let t=he(r.session.backend.glContext.version),o=e[0].dims.slice(),s=`
      void main() {
        vec4 result = ${e.map((a,u)=>`${t.texture2D}(X${u},TexCoords)`).join(" + ")};
        ${t.output} = result;
      }
    `;return{...n,output:{dims:o,type:e[0].type,textureType:0},hasMain:!0,shaderSource:s}},T2=r=>{if(!r||r.length===0)throw new Error("Sum requires inputs.");let e=r[0].dims.length;for(let n=1;n<r.length;n++){if(e!==r[n].dims.length)throw new Error("Input shapes are mismatched.");for(let t=0;t<e;t++)if(r[0].dims[t]!==r[n].dims[t])throw new Error("Input shapes are not matched.")}if(r[0].type!=="float32"&&r[0].type!=="float64")throw new Error("Invalid input type.");for(let n=1;n<r.length;n++)if(r[0].type!==r[n].type)throw new Error("Input types are not matched.")}});var oh,S2,I2,ih=D(()=>{"use strict";jo();He();oh=(r,e)=>{I2(e);let n={name:"Tile",inputNames:["A"],inputTypes:[0]};return[r.run({...n,get:()=>S2(r,e,n)},e)]},S2=(r,e,n)=>{let t=e[0].dims.slice(),o=new Array(t.length),i=[];for(let u=0;u<t.length;u++)o[u]=t[u]*e[1].numberData[u],i.push(`inputIdx[${u}] = int(mod(float(outputIdx[${u}]), ${t[u]}.));`);let s=o.length,a=`
      float process(int outputIdx[${s}]) {
        int inputIdx[${s}];
        ${i.join(`
`)}
        return _A(inputIdx);
      }
    `;return{...n,output:{dims:o,type:e[0].type,textureType:0},shaderSource:a}},I2=r=>{if(!r||r.length!==2)throw new Error("Tile requires 2 input.");if(r[1].dims.length!==1)throw new Error("The second input shape must 1 dimension.");if(r[1].dims[0]!==r[0].dims.length)throw new Error("Invalid input shape.");if(on.indexOf(r[0].type)===-1)throw new Error("Invalid input type.");if(r[1].type!=="int32"&&r[1].type!=="int16")throw new Error("Invalid repeat type.")}});var Uu,ah,sh,A2,O2,uh=D(()=>{"use strict";Ze();Uu=(r,e,n)=>{A2(e);let t=le.unsqueezeShape(e[0].dims,n);return[r.reshapeUnpacked(e[0],t)]},ah=(r,e)=>(O2(e),Uu(r,[e[0]],Array.from(e[1].integerData))),sh=r=>r.attributes.getInts("axes"),A2=r=>{if(!r||r.length!==1)throw new Error("Unsqueeze requires 1 input.");if(r[0].type==="string")throw new Error("invalid input tensor types.")},O2=r=>{if(!r||r.length!==2)throw new Error("Unsqueeze requires 2 inputs.");if(r[1].type!=="int32")throw new Error("Invalid input type.")}});var lh,dh=D(()=>{"use strict";wf();Df();zf();Vf();Ta();Sp();Pp();Bp();Mp();Fp();Wp();Kp();Jp();Sa();rm();hm();$m();Sm();Pm();Dm();Nm();Km();Jm();th();nh();ih();Aa();$u();uh();Ru();lh=[["Abs","","6+",Gf],["Acos","","7+",Wf],["Add","","7+",_f],["And","","7+",xf],["Asin","","7+",Hf],["Atan","","7+",jf],["AveragePool","","7+",om,im],["BatchNormalization","","7+",bf,vf],["Cast","","6+",Bf,Rf],["Ceil","","6+",Yf],["Clip","","6-10",_u,qf],["Clip","","11+",Kf],["Concat","","4+",Lf,Ff],["Conv","","1+",Eu,Cu],["ConvTranspose","","1+",$p,Tp],["Cos","","7+",Xf],["Div","","7+",$f],["Dropout","","7+",xu],["DepthToSpace","","1+",Ep,Cp],["Equal","","7+",Tf],["Elu","","6+",Zf,Jf],["Exp","","6+",Qf],["Flatten","","1+",kp,Dp],["Floor","","6+",ep],["FusedConv","com.microsoft","1+",Eu,Cu],["Gather","","1+",Rp,zp],["Gemm","","7-10",Pu,Lp],["Gemm","","11+",Pu,Up],["GlobalAveragePool","","1+",sm,um],["GlobalMaxPool","","1+",pm],["Greater","","7+",Sf],["Identity","","1+",xu],["ImageScaler","","1+",Vp,Gp],["InstanceNormalization","","6+",jp,qp],["LeakyRelu","","6+",tp,rp],["Less","","7+",If],["LRN","","1+",Yp,Xp],["Log","","6+",np],["MatMul","","1+",gp,yp],["MaxPool","","1+",lm,dm],["Mul","","7+",Af],["Neg","","6+",op],["Not","","1+",ip],["Or","","7+",Of],["Pad","","2-10",ku,Qp],["Pad","","11+",em,tm],["Pow","","7+",Ef],["PRelu","","7+",Cf],["ReduceLogSum","","1+",_m,an],["ReduceMax","","1+",bm,an],["ReduceMean","","1+",ym,an],["ReduceMin","","1+",vm,an],["ReduceProd","","1+",wm,an],["ReduceSum","","1-12",gm,an],["ReduceSumSquare","","1+",xm,an],["Relu","","6+",ap],["Reshape","","5+",Tm],["Resize","","10",Mu,Em],["Resize","","11+",Mu,Cm],["Shape","","1+",km],["Sigmoid","","6+",sp],["Sin","","7+",up],["Slice","","10+",Mm],["Slice","","1-9",Bm,Rm],["Softmax","","1-12",Vm,Gm],["Softmax","","13+",Hm,Wm],["Split","","2-12",Xm,Zm],["Sqrt","","6+",lp],["Squeeze","","1-12",Lu,eh],["Squeeze","","13+",Qm],["Sub","","7+",Pf],["Sum","","6+",rh],["Tan","","7+",dp],["Tanh","","6+",cp],["Tile","","6+",oh],["Transpose","","1+",Cn,Ap],["Upsample","","7-8",Du,Am],["Upsample","","9",Du,Om],["Unsqueeze","","1-12",Uu,sh],["Unsqueeze","","13+",ah],["Xor","","7+",kf]]});function fh(r){let e={},n;for(;(n=ch.exec(r))!==null;){let t=n[3].split(",").map(o=>{let i=o.trim().split(" ");return i&&i.length===2?{type:i[0],name:i[1]}:null}).filter(o=>o!==null);e[n[2]]={params:t,body:n[4]}}for(let t in e){let o=E2.replace("__FUNC__",t),i=new RegExp(o,"gm");for(;(n=i.exec(r))!==null;){let s=n[1],a=n[2],u=n[3].split(","),l=s?`${s} ${a};`:"",d=e[t].body,p="";e[t].params.forEach((y,b)=>{y&&(p+=`${y.type} ${y.name} = ${u[b]};
`)}),d=`${p}
 ${d}`,d=d.replace("return",`${a} = `);let h=`
      ${l}
      {
        ${d}
      }
      `;r=r.replace(n[0],h)}}return r=r.replace(ch,""),r}var ch,E2,ph=D(()=>{"use strict";ch=/@inline[\s\n\r]+(\w+)[\s\n\r]+([0-9a-zA-Z_]+)\s*\(([^)]*)\)\s*{(([^}]|[\n\r])*)}/gm,E2="(\\w+)?\\s+([_0-9a-zA-Z]+)\\s+=\\s+__FUNC__\\((.*)\\)\\s*;"});function oo(r,e){let n=[],t=[],o=e!=null&&Array.isArray(e)&&e.length===0,i=e==null||o?null:C2(e,r).sort(),s=0;for(let a=0;a<r.length;++a){if(i!=null){if(i[s]===a&&r[a]!==1)throw new Error(`Can't squeeze axis ${a} since its dim '${r[a]}' is not 1`);(i[s]==null||i[s]>a)&&r[a]===1&&(n.push(r[a]),t.push(a)),i[s]<=a&&s++}r[a]!==1&&(n.push(r[a]),t.push(a))}return{newShape:n,keptDims:t}}function C2(r,e){let n=e.length;return r=r==null?e.map((t,o)=>o):[].concat(r),Jn(r.every(t=>t>=-n&&t<n),()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${r}`),Jn(r.every(P2),()=>`All values in axis param must be integers but got axis ${r}`),r.map(t=>t<0?n+t:t)}function P2(r){return r%1===0}function k2(r){if(r.length===0)return 1;let e=r[0];for(let n=1;n<r.length;n++)e*=r[n];return e}function mh(r){let e=Math.ceil(Math.sqrt(r));return[e,Math.ceil(r/e)]}var Pa,Fu=D(()=>{"use strict";nr();Ze();Pa=class{constructor(e){this.maxTextureSize=e}computeTextureWH(e,n){let t=this.computeTexture(e,n);return n&&n.isPacked&&(t[0]/=2,t[1]/=2),n&&n.reverseWH?[t[1],t[0]]:t}computeTexture(e,n){let t=n&&n.isPacked;if(e.length===0)return t?[2,2]:[1,1];let o=this.maxTextureSize;if(n&&n.breakAxis!==void 0){let a=n.breakAxis>=e.length?1:e.slice(n.breakAxis).reduce((l,d)=>l*d),u=n.breakAxis<=0?1:e.slice(0,n.breakAxis).reduce((l,d)=>l*d);if(a>o||u>o)Qe.verbose("TextureLayout",`Given width/height preferences were unattainable: shape:${e}, breakAxis:${n.breakAxis}`);else return[a,u]}let i=e.slice(0);t&&(o=o*2,i=i.map((a,u)=>u>=i.length-2?i[u]%2===0?i[u]:i[u]+1:i[u]),i.length===1&&(i=[2,i[0]])),i.length!==2&&(i=oo(i).newShape);let s=k2(i);return i.length<=1&&s<=o?[1,s]:i.length===2&&i[0]<=o&&i[1]<=o?i:i.length===3&&i[0]*i[1]<=o&&i[2]<=o?[i[0]*i[1],i[2]]:i.length===3&&i[0]<=o&&i[1]*i[2]<=o?[i[0],i[1]*i[2]]:i.length===4&&i[0]*i[1]*i[2]<=o&&i[3]<=o?[i[0]*i[1]*i[2],i[3]]:i.length===4&&i[0]<=o&&i[1]*i[2]*i[3]<=o?[i[0],i[1]*i[2]*i[3]]:t?mh(s/4).map(a=>a*2):mh(s)}}});var ka,hh=D(()=>{"use strict";Ze();qr();pt();Fu();Cr();ka=class extends sr{constructor(n){super(n)}getFunctions(){return{...this.offsetToCoords(),...this.coordsToOffset(),...this.toVec(),...this.valueFrom(),...this.getCommonUtilFuncs(),...this.getInputsSamplingSnippets(),...this.getOutputSamplingSnippet()}}getCustomTypes(){return{}}offsetToCoords(){let n="offsetToCoords";return{offsetToCoords:new ne(`
      vec2 ${n}(int offset, int width, int height) {
        int t = offset / width;
        int s = offset - t*width;
        vec2 coords = (vec2(s,t) + vec2(0.5,0.5)) / vec2(width, height);
        return coords;
      }
      `)}}coordsToOffset(){let n="coordsToOffset";return{coordsToOffset:new ne(`
      int ${n}(vec2 coords, int width, int height) {
        float s = coords.s * float(width);
        float t = coords.t * float(height);
        int offset = int(t) * width + int(s);
        return offset;
      }
      `)}}getOutputSamplingSnippet(){let n=this.context.outputTextureLayout;return n.isPacked?this.getPackedOutputSamplingSnippet(n):this.getUnpackedOutputSamplingSnippet(n)}getPackedOutputSamplingSnippet(n){let t=n.unpackedShape,o=[n.width,n.height],i={},s="getOutputCoords";switch(t.length){case 0:i[s]=this.getOutputScalarCoords();break;case 1:i[s]=this.getOutputPacked1DCoords(t,o);break;case 2:i[s]=this.getOutputPacked2DCoords(t,o);break;case 3:i[s]=this.getOutputPacked3DCoords(t,o);break;default:i[s]=this.getOutputPackedNDCoords(t,o)}let u=`
      void setOutput(vec4 val) {
        ${he(this.context.glContext.version).output} = val;
      }
    `,l="floatTextureSetRGBA";return i[l]=new ne(u),i}getUnpackedOutputSamplingSnippet(n){let t=n.unpackedShape,o=[n.width,n.height],i={},s="getOutputCoords";switch(t.length){case 0:i[s]=this.getOutputScalarCoords();break;case 1:i[s]=this.getOutputUnpacked1DCoords(t,o);break;case 2:i[s]=this.getOutputUnpacked2DCoords(t,o);break;case 3:i[s]=this.getOutputUnpacked3DCoords(t,o);break;case 4:i[s]=this.getOutputUnpacked4DCoords(t,o);break;case 5:i[s]=this.getOutputUnpacked5DCoords(t,o);break;case 6:i[s]=this.getOutputUnpacked6DCoords(t,o);break;default:throw new Error(`Unsupported output dimensionality: ${t.length}`)}let u=`
        void setOutput(float val) {
          ${he(this.context.glContext.version).output} = vec4(val, 0, 0, 0);
        }
    `,l="floatTextureSetR";return i[l]=new ne(u),i}getOutputScalarCoords(){return new ne(`
      int getOutputCoords() {
        return 0;
      }
    `)}getOutputPacked1DCoords(n,t){let o=t,i="";return o[0]===1?(i=`
          int getOutputCoords() {
            return 2 * int(TexCoords.y * ${o[1]}.0);
          }
        `,new ne(i)):o[1]===1?(i=`
          int getOutputCoords() {
            return 2 * int(TexCoords.x * ${o[0]}.0);
          }
        `,new ne(i)):(i=`
        int getOutputCoords() {
          ivec2 resTexRC = ivec2(TexCoords.xy *
                                 vec2(${o[0]}, ${o[1]}));
          return 2 * (resTexRC.y * ${o[0]} + resTexRC.x);
        }
      `,new ne(i))}getOutputPacked2DCoords(n,t){let o="";if($n.arraysEqual(n,t))return o=`
        ivec2 getOutputCoords() {
          return 2 * ivec2(TexCoords.xy * vec2(${t[0]}, ${t[1]}));
        }
      `,new ne(o);let i=t,s=Math.ceil(n[1]/2);return o=`
        ivec2 getOutputCoords() {
          ivec2 resTexRC = ivec2(TexCoords.xy *
                                vec2(${i[0]}, ${i[1]}));

          int index = resTexRC.y * ${i[0]} + resTexRC.x;

          // reverse r and c order for packed texture
          int r = imod(index, ${s}) * 2;
          int c = 2 * (index / ${s});

          return ivec2(r, c);
        }
      `,new ne(o)}getOutputPacked3DCoords(n,t){let o=[t[0],t[1]],i=Math.ceil(n[2]/2),s=i*Math.ceil(n[1]/2),a=`
        ivec3 getOutputCoords() {
          ivec2 resTexRC = ivec2(TexCoords.xy *
                                vec2(${o[0]}, ${o[1]}));
          int index = resTexRC.y * ${o[0]} + resTexRC.x;

          int b = index / ${s};
          index -= b * ${s};

          // reverse r and c order for packed texture
          int r = imod(index, ${i}) * 2;
          int c = 2 * (index / ${i});

          return ivec3(b, r, c);
        }
      `;return new ne(a)}getOutputPackedNDCoords(n,t){let o=[t[0],t[1]],i=Math.ceil(n[n.length-1]/2),s=i*Math.ceil(n[n.length-2]/2),a=s,u="",l="b, r, c";for(let p=2;p<n.length-1;p++)a*=n[n.length-p-1],u=`
      int b${p} = index / ${a};
      index -= b${p} * ${a};
    `+u,l=`b${p}, `+l;let d=`
      ivec${n.length} getOutputCoords() {
        ivec2 resTexRC = ivec2(TexCoords.xy *
                              vec2(${o[0]}, ${o[1]}));
        int index = resTexRC.y * ${o[0]} + resTexRC.x;

        ${u}

        int b = index / ${s};
        index -= b * ${s};

        // reverse r and c order for packed texture
        int r = imod(index, ${i}) * 2;
        int c = 2 * (index / ${i});

        return ivec${n.length}(${l});
      }
    `;return new ne(d)}getOutputUnpacked1DCoords(n,t){let o=`
        int getOutputCoords() {
          ivec2 resTexRC = ivec2(TexCoords.xy *
                                vec2(${t[0]}, ${t[1]}));
          return resTexRC.y * ${t[0]} + resTexRC.x;
        }
      `;return new ne(o)}getOutputUnpacked2DCoords(n,t){let o=`
        ivec2 getOutputCoords() {
          ivec2 resTexRC = ivec2(TexCoords.xy *
                                vec2(${t[0]}, ${t[1]}));
          int index = resTexRC.y * ${t[0]} + resTexRC.x;
          int r = index / ${n[1]};
          int c = index - r * ${n[1]};
          return ivec2(r, c);
        }
      `;return new ne(o)}getOutputUnpacked3DCoords(n,t){let o="",i=n.length,s=null;i<2&&(s=[]),s=new Array(i-1),s[i-2]=n[i-1];for(let l=i-3;l>=0;--l)s[l]=s[l+1]*n[l+1];let a=["r","c","d"],u=s.map((l,d)=>{let p=`int ${a[d]} = index / ${l}`,h=d===s.length-1?`int ${a[d+1]} = index - ${a[d]} * ${l}`:`index -= ${a[d]} * ${l}`;return`${p}; ${h};`}).join("");return o=`
        ivec3 getOutputCoords() {
          ivec2 resTexRC = ivec2(TexCoords.xy *
                                vec2(${t[0]}, ${t[1]}));
          int index = resTexRC.y * ${t[0]} + resTexRC.x;
          ${u}
          return ivec3(r, c, d);
        }
      `,new ne(o)}getOutputUnpacked4DCoords(n,t){let o="",i=n.length,s=null;i<2&&(s=[]),s=new Array(i-1),s[i-2]=n[i-1];for(let l=i-3;l>=0;--l)s[l]=s[l+1]*n[l+1];let a=["r","c","d","d2"],u=s.map((l,d)=>{let p=`int ${a[d]} = index / ${l}`,h=d===s.length-1?`int ${a[d+1]} = index - ${a[d]} * ${l}`:`index -= ${a[d]} * ${l}`;return`${p}; ${h};`}).join("");return o=`
      ivec4 getOutputCoords() {
          ivec2 resTexRC = ivec2(TexCoords.xy *
                                vec2(${t[0]}, ${t[1]}));
          int index = resTexRC.y * ${t[0]} + resTexRC.x;
          ${u}
          return ivec4(r, c, d, d2);
        }
      `,new ne(o)}getOutputUnpacked5DCoords(n,t){let o="",i=n.length,s=null;i<2&&(s=[]),s=new Array(i-1),s[i-2]=n[i-1];for(let l=i-3;l>=0;--l)s[l]=s[l+1]*n[l+1];let a=["r","c","d","d2","d3"],u=s.map((l,d)=>{let p=`int ${a[d]} = index / ${l}`,h=d===s.length-1?`int ${a[d+1]} = index - ${a[d]} * ${l}`:`index -= ${a[d]} * ${l}`;return`${p}; ${h};`}).join("");return o=`
      ivec5 getOutputCoords() {
          ivec2 resTexRC = ivec2(TexCoords.xy *
                                vec2(${t[0]}, ${t[1]}));
          int index = resTexRC.y * ${t[0]} + resTexRC.x;
          ${u}
          return ivec5(r, c, d, d2, d3);
        }
      `,new ne(o)}getOutputUnpacked6DCoords(n,t){let o="",i=n.length,s=null;i<2&&(s=[]),s=new Array(i-1),s[i-2]=n[i-1];for(let l=i-3;l>=0;--l)s[l]=s[l+1]*n[l+1];let a=["r","c","d","d2","d3","d4"],u=s.map((l,d)=>{let p=`int ${a[d]} = index / ${l}`,h=d===s.length-1?`int ${a[d+1]} = index - ${a[d]} * ${l}`:`index -= ${a[d]} * ${l}`;return`${p}; ${h};`}).join("");return o=`
     ivec6 getOutputCoords() {
         ivec2 resTexRC = ivec2(TexCoords.xy *
                               vec2(${t[0]}, ${t[1]}));
         int index = resTexRC.y * ${t[0]} + resTexRC.x;
         ${u}
         return ivec6(r, c, d, d2, d3, d4);
       }
     `,new ne(o)}getCommonUtilFuncs(){let n={},t="uvFromFlat";n[t]=new ne(`
    vec2 uvFromFlat(int texNumR, int texNumC, int index) {
      int texC = index / texNumR;
      int texR = index - texC * texNumR;
      // TODO: swap texR, texC order in following function so row is corresponding to u and column is corresponding to
      //       v.
      return (vec2(texR, texC) + halfCR) / vec2(texNumR, texNumC);
    }
    `),t="packedUVfrom1D",n[t]=new ne(`
      vec2 packedUVfrom1D(int texNumR, int texNumC, int index) {
        int texelIndex = index / 2;
        int texR = texelIndex / texNumC;
        int texC = texelIndex - texR * texNumC;
        return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
      }
      `),t="packedUVfrom2D",n[t]=new ne(`
      vec2 packedUVfrom2D(int texNumR, int texNumC, int texelsInLogicalRow, int row, int col) {
        int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);
        int texR = texelIndex / texNumC;
        int texC = texelIndex - texR * texNumC;
        return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
      }
      `),t="packedUVfrom3D",n[t]=new ne(`
      vec2 packedUVfrom3D(int texNumR, int texNumC,
          int texelsInBatch, int texelsInLogicalRow, int b,
          int row, int col) {
        int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);
        int texR = index / texNumC;
        int texC = index - texR * texNumC;
        return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
      }
      `),t="sampleTexture";let o=he(this.context.glContext.version);return n[t]=new ne(`
        float sampleTexture(sampler2D textureSampler, vec2 uv) {
            return ${o.texture2D}(textureSampler, uv).r;
        }`),n}getInputsSamplingSnippets(){let n={},t=this.context.outputTextureLayout;return this.context.programInfo.inputNames.forEach((o,i)=>{let s=this.context.inputTextureLayouts[i],a=ya(o);s.isPacked?n[a]=this.getPackedSamplerFromInput(a,o,s):n[a]=this.getUnpackedSamplerFromInput(a,o,s);let u=tf(o);s.unpackedShape.length<=t.unpackedShape.length&&(s.isPacked?n[u]=this.getPackedSamplerAtOutputCoords(u,s,t,o):n[u]=this.getUnpackedSamplerAtOutputCoords(u,s,t,o))}),n}getPackedSamplerAtOutputCoords(n,t,o,i){let s=t.unpackedShape,a=o.unpackedShape,l=ya(i),d=s.length,p=a.length,h=Vt.getBroadcastDims(s,a),y=Gt(p),b=p-d,w,T=yr();d===0?w="":p<2&&h.length>=1?w="coords = 0;":w=h.map(se=>`coords.${T[se+b]} = 0;`).join(`
`);let x="";p<2&&d>0?x="coords":x=s.map((se,Q)=>`coords.${T[Q+b]}`).join(", ");let _="return outputValue;",P=le.size(s)===1,N=le.size(a)===1;if(d===1&&!P&&!N)_=`
        return vec4(outputValue.xy, outputValue.xy);
      `;else if(P&&!N)p===1?_=`
          return vec4(outputValue.x, outputValue.x, 0., 0.);
        `:_=`
          return vec4(outputValue.x);
        `;else if(h.length){let se=d-2,Q=d-1;h.indexOf(se)>-1&&h.indexOf(Q)>-1?_="return vec4(outputValue.x);":h.indexOf(se)>-1?_="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":h.indexOf(Q)>-1&&(_="return vec4(outputValue.xx, outputValue.zz);")}let j=`
        int lastDim = coords.${T[p-1]};
        coords.${T[p-1]} = coords.${T[p-2]};
        coords.${T[p-2]} = lastDim;
      `,Z=`
      vec4 ${n}() {
        ${y} coords = getOutputCoords();
        ${j}
        ${w}
        vec4 outputValue = ${l}(${x});
        ${_}
      }
    `;return new ne(Z,["coordinates.getOutputCoords"])}getUnpackedSamplerAtOutputCoords(n,t,o,i){let s=[o.width,o.height],a=[t.width,t.height],u=t.unpackedShape.length,l=o.unpackedShape.length,d=t.unpackedShape,p=o.unpackedShape,h=ya(i);if(u===l&&$n.arraysEqual(a,s)){let P=`
          float ${n}() {
            return sampleTexture(${i}, TexCoords);
          }
        `;return new ne(P,["coordinates.sampleTexture"])}let y=Gt(l),b=Vt.getBroadcastDims(d,p),w=l-u,T,x=yr();u===0?T="":l<2&&b.length>=1?T="coords = 0;":T=b.map(P=>`coords.${x[P+w]} = 0;`).join(`
`);let _="";l<2&&u>0?_="coords":_=t.unpackedShape.map((P,k)=>`coords.${x[k+w]}`).join(", ");let A=`
        float ${n}() {
          ${y} coords = getOutputCoords();
          ${T}
          return ${h}(${_});
        }
      `;return new ne(A,["coordinates.getOutputCoords"])}getPackedSamplerFromInput(n,t,o){switch(o.unpackedShape.length){case 0:return this.getPackedSamplerScalar(n,t);case 1:return this.getPackedSampler1D(n,t,o);case 2:return this.getPackedSampler2D(n,t,o);case 3:return this.getPackedSampler3D(n,t,o);default:return this.getPackedSamplerND(n,t,o)}}getUnpackedSamplerFromInput(n,t,o){let i=o.unpackedShape;switch(i.length){case 0:return this.getUnpackedSamplerScalar(n,t,o);case 1:return this.getUnpackedSampler1D(n,t,o);case 2:return this.getUnpackedSampler2D(n,t,o);case 3:return this.getUnpackedSampler3D(n,t,o);case 4:return this.getUnpackedSampler4D(n,t,o);case 5:return this.getUnpackedSampler5D(n,t,o);case 6:return this.getUnpackedSampler6D(n,t,o);default:throw new Error(`Unsupported dimension ${i.length}-D`)}}getPackedSamplerScalar(n,t){let o=he(this.context.glContext.version),i=`
          vec4 ${n}() {
            return ${o.texture2D}(${t}, halfCR);
          }
        `;return new ne(i)}getPackedSampler1D(n,t,o){let i=[o.width,o.height],s=[i[1],i[0]],a=he(this.context.glContext.version),l=`vec4 ${n}(int index) {
      vec2 uv = packedUVfrom1D(
      ${s[0]}, ${s[1]}, index);
      return ${a.texture2D}(${t}, uv);
    }`;return new ne(l,["coordinates.packedUVfrom1D"])}getPackedSampler2D(n,t,o){let i=o.unpackedShape,s=[o.width,o.height],a=he(this.context.glContext.version),u=s[0],l=s[1];if(s!=null&&$n.arraysEqual(i,s)){let b=`vec4 ${n}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${l}.0, ${u}.0);
        return ${a.texture2D}(${t}, uv);
      }`;return new ne(b)}let d=s,p=Math.ceil(i[1]/2),y=`vec4 ${n}(int row, int col) {
      vec2 uv = packedUVfrom2D(${d[1]}, ${d[0]}, ${p}, row, col);
      return ${a.texture2D}(${t}, uv);
    }`;return new ne(y,["coordinates.packedUVfrom2D"])}getPackedSampler3D(n,t,o){let i=o.unpackedShape,s=[o.width,o.height],a=[s[0],s[1]],u=he(this.context.glContext.version);if(i[0]===1){let w=i.slice(1),T=[1,2],x=Qn(i,w),_=["b","row","col"],A=JSON.parse(JSON.stringify(o));A.unpackedShape=x;let P=this.getPackedSamplerFromInput(n,t,A),N=`${P.routineBody}
      vec4 ${n}(int b, int row, int col) {
        return ${n}(${eo(_,T)});
      } `;return new ne(N,P.dependencies)}let l=a[0],d=a[1],p=Math.ceil(i[2]/2),h=p*Math.ceil(i[1]/2),b=`vec4 ${n}(int b, int row, int col) {
      vec2 uv = packedUVfrom3D(
        ${d}, ${l}, ${h}, ${p}, b, row, col);
      return ${u.texture2D}(${t}, uv);}`;return new ne(b,["coordinates.packedUVfrom3D"])}getPackedSamplerND(n,t,o){let i=o.unpackedShape,s=i.length,a=[o.width,o.height],u=he(this.context.glContext.version),l=[a[0],a[1]],d=l[1],p=l[0],h=Math.ceil(i[s-1]/2),y=h*Math.ceil(i[s-2]/2),b="int b, int row, int col",w=`b * ${y} + (row / 2) * ${h} + (col / 2)`;for(let _=2;_<s-1;_++)b=`int b${_}, `+b,y*=i[s-_-1],w=`b${_} * ${y} + `+w;let x=`vec4 ${n}(${b}) {
      int index = ${w};
      int texR = index / ${p};
      int texC = index - texR * ${p};
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${p}, ${d});
      return ${u.texture2D}(${t}, uv);
    }`;return new ne(x)}getUnpackedSamplerScalar(n,t,o){let[i,s]=[o.width,o.height];if(i===1&&s===1){let u=`
          float ${n}() {
            return sampleTexture(${t}, halfCR);
          }
        `;return new ne(u,["coordinates.sampleTexture"])}let a=`
        float ${n}() {
          int offset_${t} = coordsToOffset(TexCoords, ${i}, ${s});
          vec2 uv = uvFromFlat(${i}, ${s}, offset_${t});
          return sampleTexture(${t}, uv);
        }
      `;return new ne(a,["coordinates.uvFromFlat","coordinates.sampleTexture","coordinates.coordsToOffset"])}getUnpackedSampler1D(n,t,o){let i=o.width,s=o.height;if(s===1&&i===1){let u=`
        float ${n}(int index) {
          return sampleTexture(${t}, halfCR);
        }
      `;return new ne(u,["coordinates.sampleTexture"])}if(s===1){let u=`
          float ${n}(int index) {
            vec2 uv = vec2((float(index) + 0.5) / ${i}.0, 0.5);
            return sampleTexture(${t}, uv);
          }
        `;return new ne(u,["coordinates.sampleTexture"])}if(i===1){let u=`
          float ${n}(int index) {
            vec2 uv = vec2(0.5, (float(index) + 0.5) / ${s}.0);
            return sampleTexture(${t}, uv);
          }
        `;return new ne(u,["coordinates.sampleTexture"])}let a=`
        float ${n}(int index) {
          vec2 uv = uvFromFlat(${i}, ${s}, index);
          return sampleTexture(${t}, uv);
        }
      `;return new ne(a,["coordinates.uvFromFlat","coordinates.sampleTexture"])}getUnpackedSampler2D(n,t,o){let i=o.unpackedShape,s=[o.height,o.width];if(s!=null&&$n.arraysEqual(i,s)){let y=s[1],b=s[0],w=`
          float ${n}(int row, int col) {
            vec2 uv = (vec2(row, col) + halfCR) / vec2(${y}.0, ${b}.0);
            return sampleTexture(${t}, uv);
          }
        `;return new ne(w,["coordinates.sampleTexture"])}let{newShape:a,keptDims:u}=oo(i),l=a;if(l.length<i.length){let y=Qn(i,l),b=JSON.parse(JSON.stringify(o));b.unpackedShape=y;let w=["col","row"],T=`
          ${this.getUnpackedSamplerFromInput(n,t,b).routineBody}
          float ${n}(int row, int col) {
            return ${n}(${eo(w,u)});
          }
        `;return new ne(T,["coordinates.sampleTexture"])}let d=s[1],p=s[0];if(p===1){let y=`
          float ${n}(int row, int col) {
            int offset_${t} = coordsToOffset(TexCoords, ${d}, ${p});
            float index = dot(vec3(row, col, offset_${t}), vec3(${i[1]}, 1, 1));
            vec2 uv = vec2(0.5, (index + 0.5) / ${d}.0);
            return sampleTexture(${t}, uv);
          }
        `;return new ne(y,["coordinates.sampleTexture","coordinates.coordsToOffset"])}if(d===1){let y=`
          float ${n}(int row, int col) {
            int offset_${t} = coordsToOffset(TexCoords, ${d}, ${p});
            float index = dot(vec3(row, col, offset_${t}), vec3(${i[1]}, 1, 1));
            vec2 uv = vec2((index + 0.5) / ${p}.0, 0.5);
            return sampleTexture(${t}, uv);
          }
        `;return new ne(y,["coordinates.sampleTexture","coordinates.coordsToOffset"])}let h=`
        float ${n}(int row, int col) {
          int index = col * ${i[1]} + row;
          vec2 uv = uvFromFlat(${d}, ${p}, index);
          return sampleTexture(${t}, uv);
        }
      `;return new ne(h,["coordinates.uvFromFlat","coordinates.sampleTexture","coordinates.coordsToOffset"])}getUnpackedSampler3D(n,t,o){let i=o.unpackedShape,s=i[1]*i[2],a=i[2],{newShape:u,keptDims:l}=oo(i),d=u;if(d.length<i.length){let b=Qn(i,d),w=["batch","col","row"],T=JSON.parse(JSON.stringify(o));T.unpackedShape=b;let x=this.getUnpackedSamplerFromInput(n,t,T),_=l.reverse(),A=`
          ${x.routineBody}
          float ${n}(int batch, int row, int col) {
            return ${n}(${eo(w,_)});
          }
        `;return new ne(A,x.dependencies)}let p=o.width,h=o.height,y=`
          float ${n}(int depth, int row, int col) {
            // Explicitly use integer operations as dot() only works on floats.
            int index = depth * ${s} + col * ${a} + row;
            vec2 uv = uvFromFlat(${p}, ${h}, index);
            return sampleTexture(${t}, uv);
          }
      `;return new ne(y,["coordinates.uvFromFlat","coordinates.sampleTexture","coordinates.coordsToOffset"])}getUnpackedSampler4D(n,t,o){let i=o.unpackedShape,s=i[3],a=i[2]*s,u=i[1]*a,l=o.width,d=o.height,p=`
        float ${n}(int row, int col, int depth, int depth2) {
          int index = row * ${u} + col * ${a} +
              depth2 * ${s} + depth;
          vec2 uv = uvFromFlat(${l}, ${d}, index);
          return sampleTexture(${t}, uv);
        }
      `;return new ne(p,["coordinates.uvFromFlat","coordinates.sampleTexture"])}getUnpackedSampler5D(n,t,o){let i=o.unpackedShape,s=i[4],a=i[3]*s,u=i[2]*a,l=i[1]*u,{newShape:d,keptDims:p}=oo(i);if(d.length<i.length){let w=Qn(i,d),T=["row","col","depth","depth2","depth3"],x=JSON.parse(JSON.stringify(o));x.unpackedShape=w;let _=`
          ${this.getUnpackedSamplerFromInput(n,t,x).routineBody}
          float ${n}(int row, int col, int depth, int depth2, int depth3) {
            return ${n}(${eo(T,p)});
          }
        `;return new ne(_,["coordinates.sampleTexture","coordinates.uvFromFlat"])}let h=o.width,y=o.height,b=`
        float ${n}(int row, int col, int depth, int depth2, int depth3) {
          int index = row * ${l} + col * ${u} + depth * ${a} +
          depth3 * ${s} + depth2;
          vec2 uv = uvFromFlat(${h}, ${y}, index);
          return sampleTexture(${t}, uv);
        }
      `;return new ne(b,["coordinates.sampleTexture","coordinates.uvFromFlat"])}getUnpackedSampler6D(n,t,o){let i=o.unpackedShape,s=i[5],a=i[4]*s,u=i[3]*a,l=i[2]*u,d=i[1]*l,{newShape:p,keptDims:h}=oo(i);if(p.length<i.length){let T=Qn(i,p),x=["row","col","depth","depth2","depth3","depth4"],_=JSON.parse(JSON.stringify(o));_.unpackedShape=T;let A=`
            ${this.getUnpackedSamplerFromInput(n,t,_).routineBody}
            float ${n}(int row, int col, int depth,
              int depth2, int depth3, int depth4) {
              return ${n}(${eo(x,h)});
            }
          `;return new ne(A,["coordinates.sampleTexture","coordinates.uvFromFlat"])}let y=o.width,b=o.height,w=`
          float ${n}(int row, int col, int depth,
            int depth2, int depth3, int depth4) {
            int index = row * ${d} + col * ${l} + depth * ${u} +
            depth2 * ${a} + depth3 * ${s} + depth4;
            vec2 uv = uvFromFlat(${y}, ${b}, index);
            return sampleTexture(${t}, uv);
          }
        `;return new ne(w,["coordinates.uvFromFlat","coordinates.sampleTexture","coordinates.coordsToOffset"])}toVec(){let n=this.context.outputTextureLayout,t=n.shape.length,o=n.strides,i=n.width,s=n.height,a=[];for(let l=0;l<t-1;++l)a.push(`
        c[${l}] = offset / ${o[l]};`),a.push(`
        offset -= c[${l}] * ${o[l]};`);a.push(`
        c[${t-1}] = offset;`);let u=`
      void toVec(vec2 texCoords, out int c[${t}]) {
        int offset = coordsToOffset(texCoords, ${i}, ${s});
        ${a.join("")}
      }
      void toVec(int offset, out int c[${t}]) {
        ${a.join("")}
      }
    `;return{toVec:new ne(u,["coordinates.coordsToOffset"])}}valueFrom(){let n={};return this.context.programInfo.inputNames.forEach((t,o)=>{let i=this.context.inputTextureLayouts[o],a=(i.unpackedShape.length>0?i.unpackedShape:i.shape).length,u=`_${t}`;n[u]=new ne(this.getValueFromSingle(t,a,i.width,i.height,!1),[`shapeUtils.indicesToOffset${u}`,"coordinates.offsetToCoords","fragcolor.getColorAsFloat"]),u=u+"_T",n[u]=new ne(this.getValueFromSingle(t,a,i.width,i.height,!0),[`shapeUtils.indicesToOffset${u}`,"coordinates.offsetToCoords","fragcolor.getColorAsFloat"])}),n}getValueFromSingle(n,t,o,i,s){let a=`_${n}`;s&&(a=a+"_T");let u=he(this.context.glContext.version);return`
        float ${a}(int m[${t}]) {
          int offset = indicesToOffset${a}(m);
          vec2 coords = offsetToCoords(offset, ${o}, ${i});
          float value = getColorAsFloat(${u.texture2D}(${n}, coords));
          return value;
        }
        `}getPackedValueFrom(n,t,o,i,s){let a=`_${n}_Pack`;s&&(a=a+"_T");let u=he(this.context.glContext.version);return`
        vec4 ${a}(int m[${t}]) {
          int offset = indicesToOffset_${n}(m);
          vec2 coords = offsetToCoords(offset, ${o}, ${i});
          return ${u.texture2D}(${n}, coords);
        }
        `}}});var Da,gh=D(()=>{"use strict";qr();Da=class r extends sr{constructor(e){super(e)}getFunctions(){return{...this.encodeFloat32(),...this.decodeFloat32()}}getCustomTypes(){return{}}encodeFloat32(){return{encode:new ne(`highp vec4 encode(highp float f) {
        return vec4(f, 0.0, 0.0, 0.0);
      }
        `)}}decodeFloat32(){return{decode:new ne(`highp float decode(highp vec4 rgba) {
        return rgba.r;
      }
        `)}}encodeUint8(){let e=r.isLittleEndian()?"rgba.rgba=rgba.abgr;":"";return{encode:new ne(`
      highp vec4 encode(highp float f) {
        highp float F = abs(f);
        highp float Sign = step(0.0,-f);
        highp float Exponent = floor(log2(F));
        highp float Mantissa = (exp2(- Exponent) * F);
        Exponent = floor(log2(F) + 127.0) + floor(log2(Mantissa));
        highp vec4 rgba;
        rgba[0] = 128.0 * Sign  + floor(Exponent*exp2(-1.0));
        rgba[1] = 128.0 * mod(Exponent,2.0) + mod(floor(Mantissa*128.0),128.0);
        rgba[2] = floor(mod(floor(Mantissa*exp2(23.0 -8.0)),exp2(8.0)));
        rgba[3] = floor(exp2(23.0)*mod(Mantissa,exp2(-15.0)));
        ${e}
        rgba = rgba / 255.0; // values need to be normalized to [0,1]
        return rgba;
    }
        `)}}decodeUint8(){let e=r.isLittleEndian()?"rgba.rgba=rgba.abgr;":"";return{decode:new ne(`
        highp float decode(highp vec4 rgba) {
          rgba = rgba * 255.0; // values need to be de-normalized from [0,1] to [0,255]
          ${e}
          highp float Sign = 1.0 - step(128.0,rgba[0])*2.0;
          highp float Exponent = 2.0 * mod(rgba[0],128.0) + step(128.0,rgba[1]) - 127.0;
          highp float Mantissa = mod(rgba[1],128.0)*65536.0 + rgba[2]*256.0 +rgba[3] + float(0x800000);
          highp float Result =  Sign * exp2(Exponent) * (Mantissa * exp2(-23.0 ));
          return Result;
      }
        `)}}static isLittleEndian(){let e=new ArrayBuffer(4),n=new Uint32Array(e),t=new Uint8Array(e);if(n[0]=3735928559,t[0]===239)return!0;if(t[0]===222)return!1;throw new Error("unknown endianness")}}});var Ba,yh=D(()=>{"use strict";qr();pt();Ba=class extends sr{constructor(e){super(e)}getFunctions(){return{...this.setFragColor(),...this.getColorAsFloat()}}getCustomTypes(){return{}}setFragColor(){let e=he(this.context.glContext.version);return{setFragColor:new ne(`
        void setFragColor(float value) {
            ${e.output} = encode(value);
        }
        `,["encoding.encode"])}}getColorAsFloat(){return{getColorAsFloat:new ne(`
        float getColorAsFloat(vec4 color) {
            return decode(color);
        }
        `,["encoding.decode"])}}}});var Ra,bh=D(()=>{"use strict";qr();Ra=class r extends sr{constructor(e){super(e)}getFunctions(){return{...this.bcastIndex(),...this.bcastMatmulIndex(),...this.offsetToIndices(),...this.indicesToOffset(),...this.incrementIndices()}}getCustomTypes(){return{}}bcastIndex(){let e=this.context.outputTextureLayout.shape.length,n={};return this.context.programInfo.inputNames.forEach((t,o)=>{let i=this.context.inputTextureLayouts[o].unpackedShape;if(i.length<=e){let s=i.length,a=e-s,u=`bcastIndices_${t}`,l="";for(let p=0;p<s;++p)l+=`
          realIndices[${p}] = int( mod(float(bcastedIndices[${a+p}]), ${i[p]}.0) );
          `;let d=`
        void ${u} (int bcastedIndices[${e}], out int realIndices[${s}]) {
          ${l}
        }
        `;n[u]=new ne(d)}}),n}bcastMatmulIndex(){let e=this.context.outputTextureLayout.shape.length,n={};return this.context.programInfo.inputNames.forEach((t,o)=>{let i=this.context.inputTextureLayouts[o].shape;if(!(i.length<2||i.length>e)){let s=i.length,a=e-s,u=`bcastMatmulIndices_${t}`,l="";for(let p=0;p<s-2;++p)l+=`
          realIndices[${p}] = int( mod(float(bcastedIndices[${a+p}]), ${i[p]}.0) );
          `;let d=`
        void ${u}(int bcastedIndices[${e}], out int realIndices[${s}]) {
          ${l}
          realIndices[${s-1}] = bcastedIndices[${e-1}];
          realIndices[${s-2}] = bcastedIndices[${e-2}];
        }
        `;n[u]=new ne(d)}}),n}indicesToOffset(){let e={};return this.context.programInfo.inputNames.forEach((n,t)=>{let o=this.context.inputTextureLayouts[t].shape,i=this.context.inputTextureLayouts[t].strides,s=o.length,a=`indicesToOffset_${n}`;e[a]=new ne(r.indexToOffsetSingle(a,s,i)),a=`indicesToOffset_${n}_T`,e[a]=new ne(r.indexToOffsetSingle(a,s,i.slice().reverse()))}),e}static indexToOffsetSingle(e,n,t){let o="";for(let i=n-1;i>=0;--i)o+=`
        offset += indices[${i}] * ${t[i]};
        `;return`
      int ${e}(int indices[${n}]) {
        int offset = 0;
        ${o}
        return offset;
      }
      `}offsetToIndices(){let e={};return this.context.programInfo.inputNames.forEach((n,t)=>{let o=this.context.inputTextureLayouts[t].shape,i=this.context.inputTextureLayouts[t].strides,s=o.length,a=`offsetToIndices_${n}`;e[a]=new ne(r.offsetToIndicesSingle(a,s,i)),a=`offsetToIndices_${n}_T`,e[a]=new ne(r.offsetToIndicesSingle(a,s,i.slice().reverse()))}),e}static offsetToIndicesSingle(e,n,t){let o=[];for(let i=0;i<n-1;++i)o.push(`
      indices[${i}] = offset / ${t[i]};`),o.push(`
        offset -= indices[${i}] * ${t[i]};`);return o.push(`
      indices[${n-1}] = offset;`),`
      void ${e}(int offset, out int indices[${n}]) {
        ${o.join("")}
      }
      `}incrementIndices(){let e={};return this.context.programInfo.inputNames.forEach((n,t)=>{let o=this.context.inputTextureLayouts[t].shape,i=o.length,s=`incrementIndices_${n}`,a="";for(let l=0;l<i;++l)a+=`
        shape[${l}] = ${o[l]};`;let u=`
        void ${s}(int axis, out int indices[${i}]) {
          int shape[${i}];
          ${a};
          for(int i = ${i} -1 ; i >= 0; --i) {
            if(i > axis) continue;
            indices[i] += 1;
            if(indices[i] < shape[i]) {
              break;
            }
            indices[i] = 0;
          }
        }
        `;e[s]=new ne(u)}),e}}});var za,vh=D(()=>{"use strict";qr();za=class extends sr{constructor(e){super(e)}getCustomTypes(){return{}}getFunctions(){return{...this.binaryVecFunctions(),...this.copyVec(),...this.setVecItem(),...this.getVecItem()}}binaryVecFunctions(){let n=this.context.outputTextureLayout.shape.length,t={add:"+=",sub:"-=",mul:"*=",div:"/="},o={};for(let i in t){let s=`${i}Vec`,a="";for(let l=0;l<n;++l)a+=`
          dest[${l}] ${t[i]} src[${l}];
          `;let u=`
        void ${s}(int src[${n}], out int dest[${n}]) {
          ${a}
        }
        `;o[s]=new ne(u)}return o}copyVec(){let n=this.context.outputTextureLayout.shape.length,t="";for(let i=0;i<n;++i)t+=`
        dest[${i}] = src[${i}];
        `;let o=`
      void copyVec(int src[${n}], out int dest[${n}]) {
        ${t}
      }
      `;return{copyVec:new ne(o)}}setVecItem(){let n=this.context.outputTextureLayout.shape.length,t=`
        if(index < 0)
            index =${n} + index;
        if (index == 0)
            m[0] = value;
        `;for(let i=1;i<n-1;++i)t+=`
        else if (index == ${i})
            m[${i}] = value;
            `;t+=`
        else
            m[${n-1}] = value;
        `;let o=`
      void setVecItem(out int m[${n}], int index, int value) {
        ${t}
      }
        `;return{setVecItem:new ne(o)}}getVecItem(){let n=this.context.outputTextureLayout.shape.length,t=`
        if(index < 0)
            index = ${n} + index;
        if (index == 0)
            return m[0];
      `;for(let i=1;i<n-1;++i)t+=`
        else if (index == ${i})
            return m[${i}];
      `;t+=`
        else
            return m[${n-1}];
        `;let o=`
      int getVecItem(int m[${n}], int index) {
        ${t}
      }
    `;return{getVecItem:new ne(o)}}}});var Vu,wh=D(()=>{"use strict";hh();gh();yh();bh();vh();Vu={encoding:Da,fragcolor:Ba,vec:za,shapeUtils:Ra,coordinates:ka}});var Ma,_h=D(()=>{"use strict";qr();ph();wh();pt();Ma=class{constructor(e,n,t,o){this.libs={};this.glslLibRoutineDependencyGraph={};this.context=new _a(e,n,t,o),Object.keys(Vu).forEach(s=>{let a=new Vu[s](this.context);this.libs[s]=a});let i=this.glslLibRoutineDependencyGraph;for(let s in this.libs){let u=this.libs[s].getFunctions();for(let l in u){let d=s+"."+l,p;i[d]?(p=i[d],p.routineBody=u[l].routineBody):(p=new Ho(d,u[l].routineBody),i[d]=p);let h=u[l].dependencies;if(h)for(let y=0;y<h.length;++y)if(i[h[y]])p.addDependency(i[h[y]]);else{let b=new Ho(h[y]);i[h[y]]=b,p.addDependency(b)}}}}preprocess(){let e=this.context.programInfo,n=e.shaderSource;return this.context.programInfo.hasMain||(n=`${n}
      ${ef(this.context.glContext.version,this.context.outputTextureLayout.shape.length)}`),n=fh(n),`${Qc(this.context.glContext.version)}
    ${this.getUniforms(e.inputNames,e.variables)}
    ${this.getImports(n)}
    ${n}`}getImports(e){let n=this.selectGlslLibRoutinesToBeIncluded(e);if(n.length===0)return"";let t="";for(let o=0;o<n.length;++o)if(n[o].routineBody)t+=n[o].routineBody+`
`;else throw new Error(`Missing body for the Glsl Library routine: ${n[o].name}`);return t}selectGlslLibRoutinesToBeIncluded(e){let n=[];return Object.keys(this.glslLibRoutineDependencyGraph).forEach(t=>{let o=t.split(".")[1];e.indexOf(o)!==-1&&n.push(this.glslLibRoutineDependencyGraph[t])}),xa.returnOrderedNodes(n)}getUniforms(e,n){let t=[];if(e)for(let o of e)t.push(`uniform sampler2D ${o};`);if(n)for(let o of n)t.push(`uniform ${o.type} ${o.name}${o.arrayLength?`[${o.arrayLength}]`:""};`);return t.join(`
`)}}});var Na,xh=D(()=>{"use strict";Rt();nr();_h();pt();Na=class{constructor(e,n,t){this.profiler=e;this.glContext=n;this.textureLayoutStrategy=t;this.repo=new Map,this.attributesBound=!1}getArtifact(e){return this.repo.get(e)}setArtifact(e,n){this.repo.set(e,n)}run(e,n,t){this.profiler.event("op",`ProgramManager.run ${e.programInfo.name??"unknown kernel"}`,()=>{let o=this.glContext.gl,i=e.program;o.useProgram(i);try{this.bindOutput(t),this.attributesBound||this.bindAttributes(e.attribLocations),this.bindUniforms(e.uniformLocations,e.programInfo.variables??[],n)}catch(s){throw Qe.error("ProgramManager",e.programInfo.shaderSource),s}this.profiler.event("backend","GlContext.draw()",()=>{this.glContext.draw()})},this.glContext)}dispose(){this.vertexShader&&this.glContext.deleteShader(this.vertexShader),this.repo.forEach(e=>this.glContext.deleteProgram(e.program))}build(e,n,t){return this.profiler.event("backend","ProgramManager.build",()=>{let o=new Ma(this.glContext,e,n,t),i=o.preprocess(),s=this.compile(i);return{programInfo:e,program:s,uniformLocations:this.getUniformLocations(s,o.context.programInfo.inputNames,o.context.programInfo.variables),attribLocations:this.getAttribLocations(s)}})}compile(e){if(!this.vertexShader){Qe.verbose("ProrgramManager","Compiling and caching Vertex shader for the first time");let o=Jc(this.glContext.version);this.vertexShader=this.glContext.compileShader(o,this.glContext.gl.VERTEX_SHADER)}_e.debug&&Qe.verbose("ProrgramManager",`FragShader:
${e}
`);let n=this.glContext.compileShader(e,this.glContext.gl.FRAGMENT_SHADER),t=this.glContext.createProgram(this.vertexShader,n);return this.glContext.deleteShader(n),t}bindOutput(e){let n=e.width,t=e.height;Qe.verbose("ProrgramManager",`Binding output texture to Framebuffer: w/h=${n}/${t}, shape=${e.shape}, type=${e.tensor.type}`),this.glContext.attachFramebuffer(e.texture,n,t)}bindAttributes(e){let n=e.position,t=e.textureCoord;this.glContext.setVertexAttributes(n,t),this.attributesBound=!0}bindUniforms(e,n,t){let o=this.glContext.gl,i=0;for(let{name:s,type:a,location:u,arrayLength:l}of e){let d=n.find(p=>p.name===s)?.data;if(a!=="sampler2D"&&!d)throw new Error(`variable '${s}' does not have data defined in program info`);switch(a){case"sampler2D":this.bindTexture(t[i],u,i),i++;break;case"float":l?o.uniform1fv(u,d):o.uniform1f(u,d);break;case"int":l?o.uniform1iv(u,d):o.uniform1i(u,d);break;default:throw new Error(`Uniform not implemented: ${a}`)}}}bindTexture(e,n,t){this.glContext.bindTextureToUniform(e.texture,t,n)}getAttribLocations(e){return{position:this.getAttribLocation(e,"position"),textureCoord:this.getAttribLocation(e,"textureCoord")}}getUniformLocations(e,n,t){let o=[];if(n)for(let i of n)o.push({name:i,type:"sampler2D",location:this.getUniformLocation(e,i)});if(t)for(let i of t)o.push({...i,location:this.getUniformLocation(e,i.name)});return o}getUniformLocation(e,n){let o=this.glContext.gl.getUniformLocation(e,n);if(o===null)throw new Error(`Uniform ${n} not found.`);return o}getAttribLocation(e,n){return this.glContext.gl.getAttribLocation(e,n)}}});var La,$h=D(()=>{"use strict";nr();Go();La=class{constructor(e,n,t,o){this.glContext=e;this.layoutStrategy=n;this.profiler=t;this.config=o;this.pendingRead=new Map;o.reuseTextures&&(this.inUseTextures=new Map,this.idleTextures=new Map,this.textureLookup=new Map)}createTextureFromLayout(e,n,t,o){let i=this.toEncoderType(e),s=this.glContext.getEncoder(i,n.channels||1,o);if(n.isPacked&&o===1)throw new Error("not implemented");let a=n.width,u=n.height,l,d;if(this.config.reuseTextures){l=`${a}x${u}_${s.format}_${s.internalFormat}_${s.textureType}`,d=this.inUseTextures.get(l),d||(d=[],this.inUseTextures.set(l,d));let h=this.idleTextures.get(l);if(h&&h.length>0){let y=h.pop();return d.push(y),o===1&&this.glContext.updateTexture(y,a,u,s,this.toTextureData(e,t)),y}}Qe.verbose("TextureManager",`Creating new texture of size ${n.width}x${n.height}`);let p=this.glContext.allocateTexture(a,u,s,this.toTextureData(e,t));return this.config.reuseTextures&&(d.push(p),this.textureLookup.set(p,l)),p}readTexture(e,n,t){return t||(t=1),this.profiler.event("backend","TextureManager.readTexture",()=>{let o=e.shape.reduce((s,a)=>s*a)*t,i=this.glContext.readTexture(e.texture,e.width,e.height,o,this.toEncoderType(n),t);return this.toTensorData(n,i)})}async readTextureAsync(e,n,t){let o=e.tensor.dataId;if(t||(t=1),this.pendingRead.has(o)){let i=this.pendingRead.get(o);return new Promise(s=>i?.push(s))}return this.profiler.event("backend","TextureManager.readTextureAsync",async()=>{this.pendingRead.set(o,[]);let i=e.shape.reduce((l,d)=>l*d)*t;await this.glContext.createAndWaitForFence();let s=this.glContext.readTexture(e.texture,e.width,e.height,i,this.toEncoderType(n),t),a=this.toTensorData(n,s),u=this.pendingRead.get(o);return this.pendingRead.delete(o),u?.forEach(l=>l(a)),a})}readUint8TextureAsFloat(e){return this.profiler.event("backend","TextureManager.readUint8TextureAsFloat",()=>{let n=e.shape.reduce((o,i)=>o*i),t=this.glContext.readTexture(e.texture,e.width,e.height,n*4,"byte",4);return new Float32Array(t.buffer,t.byteOffset,n)})}releaseTexture(e,n){let t;if(this.config.reuseTextures&&(t=this.textureLookup.get(e.texture),t)){n&&this.textureLookup.delete(t);let o=this.inUseTextures.get(t);if(o){let i=o.indexOf(e.texture);if(i!==-1){o.splice(i,1);let s=this.idleTextures.get(t);s||(s=[],this.idleTextures.set(t,s)),s.push(e.texture)}}}(!t||n)&&(Qe.verbose("TextureManager",`Deleting texture of size ${e.width}x${e.height}`),this.glContext.deleteTexture(e.texture))}toTensorData(e,n){switch(e){case"int16":return n instanceof Int16Array?n:Int16Array.from(n);case"int32":return n instanceof Int32Array?n:Int32Array.from(n);case"int8":return n instanceof Int8Array?n:Int8Array.from(n);case"uint16":return n instanceof Uint16Array?n:Uint16Array.from(n);case"uint32":return n instanceof Uint32Array?n:Uint32Array.from(n);case"uint8":case"bool":return n instanceof Uint8Array?n:Uint8Array.from(n);case"float32":return n instanceof Float32Array?n:Float32Array.from(n);case"float64":return n instanceof Float64Array?n:Float64Array.from(n);default:throw new Error(`TensorData type ${e} is not supported`)}}toTextureData(e,n){if(n)return n instanceof Float32Array?n:new Float32Array(n)}toEncoderType(e){return"float"}clearActiveTextures(){this.glContext.clearActiveTextures()}}});var Ua,Th=D(()=>{"use strict";nr();Nd();gf();dh();xh();Fu();$h();Ua=class{constructor(e,n){this.backend=e;this.context=n;this.layoutStrategy=new Pa(e.glContext.maxTextureSize),this.programManager=new Na(this.context.profiler,e.glContext,this.layoutStrategy),this.textureManager=new La(e.glContext,this.layoutStrategy,this.context.profiler,{reuseTextures:e.textureCacheMode==="full"}),this.packedTextureDataCache=new Map,this.unpackedTextureDataCache=new Map,this.pack=e.pack,this.pack2unpackMap=new Map,this.unpack2packMap=new Map}createInferenceHandler(){return new wa(this)}onGraphInitialized(e){let n=e.getValues().filter(t=>t.from===-1&&t.tensor).map(t=>t.tensor.dataId);this.initializers=new Set(n)}isInitializer(e){return this.initializers?this.initializers.has(e):!1}addInitializer(e){this.initializers.add(e)}getTextureData(e,n){return n?this.packedTextureDataCache.get(e):this.unpackedTextureDataCache.get(e)}setTextureData(e,n,t=!1){Qe.verbose("WebGLSessionHandler","Storing Texture data in cache"),t?this.packedTextureDataCache.set(e,n):this.unpackedTextureDataCache.set(e,n)}dispose(){this.programManager.dispose(),this.textureManager.clearActiveTextures(),this.packedTextureDataCache.forEach(e=>this.textureManager.releaseTexture(e,!0)),this.packedTextureDataCache=new Map,this.unpackedTextureDataCache.forEach(e=>this.textureManager.releaseTexture(e,!0)),this.unpackedTextureDataCache=new Map}resolve(e,n,t){let o=Md(e,n,lh);return{impl:o.opImpl,context:o.opInit?o.opInit(e,t):e}}}});function D2(r){let e=0;for(;e<r.length&&r[e]();++e);return e-1}var Ko,Sh=D(()=>{"use strict";Rt();Go();Go();Cr();Ko=class{constructor(e,n){this.frameBufferBound=!1;this.itemsToPoll=[];this.gl=e,this.version=n,this.getExtensions(),this.vertexbuffer=this.createVertexbuffer(),this.framebuffer=this.createFramebuffer(),this.queryVitalParameters()}allocateTexture(e,n,t,o){let i=this.gl,s=i.createTexture();i.bindTexture(i.TEXTURE_2D,s),i.texParameteri(i.TEXTURE_2D,i.TEXTURE_MIN_FILTER,i.NEAREST),i.texParameteri(i.TEXTURE_2D,i.TEXTURE_MAG_FILTER,i.NEAREST),i.texParameteri(i.TEXTURE_2D,i.TEXTURE_WRAP_S,i.CLAMP_TO_EDGE),i.texParameteri(i.TEXTURE_2D,i.TEXTURE_WRAP_T,i.CLAMP_TO_EDGE);let a=o?t.encode(o,e*n):null;return i.texImage2D(i.TEXTURE_2D,0,t.internalFormat,e,n,0,t.format,t.textureType,a),this.checkError(),s}updateTexture(e,n,t,o,i){let s=this.gl;s.bindTexture(s.TEXTURE_2D,e);let a=o.encode(i,n*t);s.texSubImage2D(s.TEXTURE_2D,0,0,0,n,t,o.format,o.textureType,a),this.checkError()}attachFramebuffer(e,n,t){let o=this.gl;o.bindTexture(o.TEXTURE_2D,e),o.bindFramebuffer(o.FRAMEBUFFER,this.framebuffer),o.framebufferTexture2D(o.FRAMEBUFFER,o.COLOR_ATTACHMENT0,o.TEXTURE_2D,e,0),this.checkError(),o.viewport(0,0,n,t),o.scissor(0,0,n,t)}readTexture(e,n,t,o,i,s){let a=this.gl;s||(s=1),this.frameBufferBound||this.attachFramebuffer(e,n,t);let u=this.getEncoder(i,s),l=u.allocate(n*t);return a.bindTexture(a.TEXTURE_2D,e),a.framebufferTexture2D(a.FRAMEBUFFER,a.COLOR_ATTACHMENT0,a.TEXTURE_2D,e,0),a.readPixels(0,0,n,t,a.RGBA,u.textureType,l),this.checkError(),u.decode(l,o)}isFramebufferReady(){return!0}getActiveTexture(){let e=this.gl;return`TEXTURE${e.getParameter(this.gl.ACTIVE_TEXTURE)-e.TEXTURE0}`}getTextureBinding(){return this.gl.getParameter(this.gl.TEXTURE_BINDING_2D)}getFramebufferBinding(){return this.gl.getParameter(this.gl.FRAMEBUFFER_BINDING)}setVertexAttributes(e,n){let t=this.gl;t.vertexAttribPointer(e,3,t.FLOAT,!1,20,0),t.enableVertexAttribArray(e),n!==-1&&(t.vertexAttribPointer(n,2,t.FLOAT,!1,20,12),t.enableVertexAttribArray(n)),this.checkError()}createProgram(e,n){let t=this.gl,o=t.createProgram();return t.attachShader(o,e),t.attachShader(o,n),t.linkProgram(o),o}compileShader(e,n){let t=this.gl,o=t.createShader(n);if(!o)throw new Error(`createShader() returned null with type ${n}`);if(t.shaderSource(o,e),t.compileShader(o),t.getShaderParameter(o,t.COMPILE_STATUS)===!1)throw new Error(`Failed to compile shader: ${t.getShaderInfoLog(o)}
Shader source:
${e}`);return o}deleteShader(e){this.gl.deleteShader(e)}bindTextureToUniform(e,n,t){let o=this.gl;o.activeTexture(o.TEXTURE0+n),this.checkError(),o.bindTexture(o.TEXTURE_2D,e),this.checkError(),o.uniform1i(t,n),this.checkError()}draw(){this.gl.drawArrays(this.gl.TRIANGLE_STRIP,0,4),this.checkError()}checkError(){if(_e.debug){let e=this.gl,n=e.getError(),t="";switch(n){case e.NO_ERROR:return;case e.INVALID_ENUM:t="INVALID_ENUM";break;case e.INVALID_VALUE:t="INVALID_VALUE";break;case e.INVALID_OPERATION:t="INVALID_OPERATION";break;case e.INVALID_FRAMEBUFFER_OPERATION:t="INVALID_FRAMEBUFFER_OPERATION";break;case e.OUT_OF_MEMORY:t="OUT_OF_MEMORY";break;case e.CONTEXT_LOST_WEBGL:t="CONTEXT_LOST_WEBGL";break;default:t=`Unknown WebGL Error: ${n.toString(16)}`}throw new Error(t)}}deleteTexture(e){this.gl.deleteTexture(e)}deleteProgram(e){this.gl.deleteProgram(e)}getEncoder(e,n,t=0){if(this.version===2)return new ba(this.gl,n);switch(e){case"float":return t===1||this.isRenderFloat32Supported?new Vo(this.gl,n):new Vo(this.gl,n,this.textureHalfFloatExtension.HALF_FLOAT_OES);case"int":throw new Error("not implemented");case"byte":return new va(this.gl,n);default:throw new Error(`Invalid dataType: ${e}`)}}clearActiveTextures(){let e=this.gl;for(let n=0;n<this.maxTextureImageUnits;++n)e.activeTexture(e.TEXTURE0+n),e.bindTexture(e.TEXTURE_2D,null)}dispose(){if(this.disposed)return;let e=this.gl;e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteFramebuffer(this.framebuffer),e.bindBuffer(e.ARRAY_BUFFER,null),e.deleteBuffer(this.vertexbuffer),e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null),e.finish(),this.disposed=!0}createDefaultGeometry(){return new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0])}createVertexbuffer(){let e=this.gl,n=e.createBuffer();if(!n)throw new Error("createBuffer() returned null");let t=this.createDefaultGeometry();return e.bindBuffer(e.ARRAY_BUFFER,n),e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW),this.checkError(),n}createFramebuffer(){let e=this.gl.createFramebuffer();if(!e)throw new Error("createFramebuffer returned null");return e}queryVitalParameters(){let e=this.gl;if(this.isFloatTextureAttachableToFrameBuffer=this.checkFloatTextureAttachableToFrameBuffer(),this.isRenderFloat32Supported=this.checkRenderFloat32(),this.isFloat32DownloadSupported=this.checkFloat32Download(),this.version===1&&!this.textureHalfFloatExtension&&!this.isRenderFloat32Supported)throw new Error("both float32 and float16 TextureType are not supported");this.isBlendSupported=!this.isRenderFloat32Supported||this.checkFloat32Blend(),this.maxTextureSize=e.getParameter(e.MAX_TEXTURE_SIZE),this.maxTextureImageUnits=e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS),this.version}getExtensions(){this.version===2?(this.colorBufferFloatExtension=this.gl.getExtension("EXT_color_buffer_float"),this.disjointTimerQueryWebgl2Extension=this.gl.getExtension("EXT_disjoint_timer_query_webgl2")):(this.textureFloatExtension=this.gl.getExtension("OES_texture_float"),this.textureHalfFloatExtension=this.gl.getExtension("OES_texture_half_float"))}checkFloatTextureAttachableToFrameBuffer(){let e=this.gl,n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n);let t=this.version===2?e.RGBA32F:e.RGBA;e.texImage2D(e.TEXTURE_2D,0,t,1,1,0,e.RGBA,e.FLOAT,null);let o=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,o),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);let i=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(o),i}checkRenderFloat32(){if(this.version===2){if(!this.colorBufferFloatExtension)return!1}else if(!this.textureFloatExtension)return!1;return this.isFloatTextureAttachableToFrameBuffer}checkFloat32Download(){if(this.version===2){if(!this.colorBufferFloatExtension)return!1}else if(!this.textureFloatExtension||!this.gl.getExtension("WEBGL_color_buffer_float"))return!1;return this.isFloatTextureAttachableToFrameBuffer}checkFloat32Blend(){let e=this.gl,n,t,o,i,s;try{n=e.createTexture(),t=e.createFramebuffer(),e.bindTexture(e.TEXTURE_2D,n);let a=this.version===2?e.RGBA32F:e.RGBA;return e.texImage2D(e.TEXTURE_2D,0,a,1,1,0,e.RGBA,e.FLOAT,null),e.bindFramebuffer(e.FRAMEBUFFER,t),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0),e.enable(e.BLEND),o=e.createShader(e.VERTEX_SHADER),!o||(e.shaderSource(o,"void main(){}"),e.compileShader(o),i=e.createShader(e.FRAGMENT_SHADER),!i)||(e.shaderSource(i,"precision highp float;void main(){gl_FragColor=vec4(0.5);}"),e.compileShader(i),s=e.createProgram(),!s)?!1:(e.attachShader(s,o),e.attachShader(s,i),e.linkProgram(s),e.useProgram(s),e.drawArrays(e.POINTS,0,1),e.getError()===e.NO_ERROR)}finally{e.disable(e.BLEND),s&&e.deleteProgram(s),o&&e.deleteShader(o),i&&e.deleteShader(i),t&&(e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteFramebuffer(t)),n&&(e.bindTexture(e.TEXTURE_2D,null),e.deleteTexture(n))}}beginTimer(){if(this.version===2&&this.disjointTimerQueryWebgl2Extension){let e=this.gl,n=this.disjointTimerQueryWebgl2Extension,t=e.createQuery();return e.beginQuery(n.TIME_ELAPSED_EXT,t),t}else throw new Error("WebGL1 profiling currently not supported.")}endTimer(){if(this.version===2&&this.disjointTimerQueryWebgl2Extension){let e=this.gl,n=this.disjointTimerQueryWebgl2Extension;e.endQuery(n.TIME_ELAPSED_EXT);return}else throw new Error("WebGL1 profiling currently not supported")}isTimerResultAvailable(e){let n=!1,t=!1;if(this.version===2&&this.disjointTimerQueryWebgl2Extension){let o=this.gl,i=this.disjointTimerQueryWebgl2Extension;n=o.getQueryParameter(e,o.QUERY_RESULT_AVAILABLE),t=o.getParameter(i.GPU_DISJOINT_EXT)}else throw new Error("WebGL1 profiling currently not supported");return n&&!t}getTimerResult(e){let n=0;if(this.version===2){let t=this.gl;n=t.getQueryParameter(e,t.QUERY_RESULT),t.deleteQuery(e)}else throw new Error("WebGL1 profiling currently not supported");return n/1e6}async waitForQueryAndGetTime(e){return await pu(()=>this.isTimerResultAvailable(e)),this.getTimerResult(e)}async createAndWaitForFence(){let e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let n,t=e,o=t.fenceSync(t.SYNC_GPU_COMMANDS_COMPLETE,0);return e.flush(),o===null?n=()=>!0:n=()=>{let i=t.clientWaitSync(o,0,0);return i===t.ALREADY_SIGNALED||i===t.CONDITION_SATISFIED},{query:o,isFencePassed:n}}async pollFence(e){return new Promise(n=>{this.addItemToPoll(()=>e.isFencePassed(),()=>n())})}pollItems(){let e=D2(this.itemsToPoll.map(n=>n.isDoneFn));for(let n=0;n<=e;++n){let{resolveFn:t}=this.itemsToPoll[n];t()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}async addItemToPoll(e,n){this.itemsToPoll.push({isDoneFn:e,resolveFn:n}),!(this.itemsToPoll.length>1)&&await pu(()=>(this.pollItems(),this.itemsToPoll.length===0))}}});function Gu(r){let e;if((!r||r==="webgl2")&&"webgl2"in io?e=io.webgl2:(!r||r==="webgl")&&"webgl"in io&&(e=io.webgl),!e)try{let t=R2();e=Ih(t,r)}catch{let o=B2();e=Ih(o,r)}r=r||e.version===1?"webgl":"webgl2";let n=e.gl;return io[r]=e,n.isContextLost()?(delete io[r],Gu(r)):(n.disable(n.DEPTH_TEST),n.disable(n.STENCIL_TEST),n.disable(n.BLEND),n.disable(n.DITHER),n.disable(n.POLYGON_OFFSET_FILL),n.disable(n.SAMPLE_COVERAGE),n.enable(n.SCISSOR_TEST),n.enable(n.CULL_FACE),n.cullFace(n.BACK),e)}function Ih(r,e){let n={alpha:!1,depth:!1,antialias:!1,stencil:!1,preserveDrawingBuffer:!1,premultipliedAlpha:!1,failIfMajorPerformanceCaveat:!1},t,o=n;if((!e||e==="webgl2")&&(t=r.getContext("webgl2",o),t))try{return new Ko(t,2)}catch(i){Qe.warning("GlContextFactory",`failed to create WebGLContext using contextId 'webgl2'. Error: ${i}`)}if((!e||e==="webgl")&&(t=r.getContext("webgl",o)||r.getContext("experimental-webgl",o),t))try{return new Ko(t,1)}catch(i){Qe.warning("GlContextFactory",`failed to create WebGLContext using contextId 'webgl' or 'experimental-webgl'. Error: ${i}`)}throw new Error("WebGL is not supported")}function B2(){if(typeof document>"u")throw new TypeError("failed to create canvas: document is not supported");let r=document.createElement("canvas");return r.width=1,r.height=1,r}function R2(){if(typeof OffscreenCanvas>"u")throw new TypeError("failed to create offscreen canvas: OffscreenCanvas is not supported");return new OffscreenCanvas(1,1)}var io,Ah=D(()=>{"use strict";nr();Sh();io={}});var Fa,Oh=D(()=>{"use strict";Rt();nr();Th();Ah();Fa=class{get contextId(){return _e.webgl.contextId}set contextId(e){_e.webgl.contextId=e}get matmulMaxBatchSize(){return _e.webgl.matmulMaxBatchSize}set matmulMaxBatchSize(e){_e.webgl.matmulMaxBatchSize=e}get textureCacheMode(){return _e.webgl.textureCacheMode}set textureCacheMode(e){_e.webgl.textureCacheMode=e}get pack(){return _e.webgl.pack}set pack(e){_e.webgl.pack=e}get async(){return _e.webgl.async}set async(e){_e.webgl.async=e}initialize(){try{return this.glContext=Gu(this.contextId),typeof this.matmulMaxBatchSize!="number"&&(this.matmulMaxBatchSize=16),typeof this.textureCacheMode!="string"&&(this.textureCacheMode="full"),typeof this.pack!="boolean"&&(this.pack=!1),typeof this.async!="boolean"&&(this.async=!1),Qe.setWithEnv(_e),_e.webgl.context||Object.defineProperty(_e.webgl,"context",{value:this.glContext.gl}),Qe.verbose("WebGLBackend",`Created WebGLContext: ${typeof this.glContext} with matmulMaxBatchSize: ${this.matmulMaxBatchSize}; textureCacheMode: ${this.textureCacheMode}; pack: ${this.pack}; async: ${this.async}.`),!0}catch(e){return Qe.warning("WebGLBackend",`Unable to initialize WebGLBackend. ${e}`),!1}}createSessionHandler(e){return new Ua(this,e)}dispose(){this.glContext.dispose()}}});async function Wu(r){if(r){let e=typeof r=="string"?[r]:r;for(let n of e){let t=Eh.get(n);if(t)return t;let o=await M2(n);if(o)return o}}else return Wu(["webgl"]);throw new Error("no available backend to use")}async function M2(r){let e=z2;if(typeof e[r]<"u"&&N2(e[r])){let n=e[r],t=n.initialize();if(typeof t=="object"&&"then"in t&&(t=await t),t)return Eh.set(r,n),n}}function N2(r){let e=r;return"initialize"in e&&typeof e.initialize=="function"&&"createSessionHandler"in e&&typeof e.createSessionHandler=="function"&&"dispose"in e&&typeof e.dispose=="function"}var Eh,z2,Ch=D(()=>{"use strict";Oh();Eh=new Map,z2={webgl:new Fa}});var Hu,Va,Ph=D(()=>{"use strict";nr();Hu=class{constructor(e,n){this.op=e;this.node=n}},Va=class{constructor(e,n,t){this.graph=e;this.profiler=t;this.initialize(n)}initialize(e){this.profiler.event("session","ExecutionPlan.initialize",()=>{let n=this.graph.getNodes();if(n.length!==e.length)throw new Error("The size of nodes and OPs do not match.");this._ops=e.map((t,o)=>new Hu(t,n[o])),this.reset(),this._starter=[],this._ops.forEach((t,o)=>{let i=!0;for(let s of t.node.inputs)if(!this._values[s]&&this.graph.getInputIndices().indexOf(s)===-1){i=!1;break}i&&this._starter.push(o)})})}reset(){this._values=this.graph.getValues().map(e=>e.tensor)}async execute(e,n){return this.profiler.event("session","ExecutionPlan.execute",async()=>{this.reset();let t=e.createInferenceHandler(),o=this.graph.getInputIndices();if(n.length!==o.length)throw new Error(`number of input tensors don't match the number of inputs to the model: actual: ${n.length} expected: ${o.length}`);n.forEach((d,p)=>{let h=o[p];this._values[h]=d});let i=this._starter.slice(0),s=this.graph.getValues(),a=this.graph.getNodes(),u=0;for(;u<i.length;){let d=i[u++],p=this._ops[d],h=p.node.inputs.map(T=>this._values[T]);if(h.indexOf(void 0)!==-1)throw new Error(`unresolved input detected: op: ${p.node}`);let y=h;Qe.verbose("ExecPlan",`Runing op:${p.node.name} (${y.map((T,x)=>`'${p.node.inputs[x]}': ${T.type}[${T.dims.join(",")}]`).join(", ")})`);let b=await this.profiler.event("node",p.node.name,async()=>p.op.impl(t,y,p.op.context));if(b.length!==p.node.outputs.length)throw new Error("the size of output does not match model definition.");b.forEach((T,x)=>{let _=p.node.outputs[x];if(this._values[_])throw new Error(`output [${_}] already has value: op:${p.node.name}`);this._values[_]=T});let w=new Set;b.forEach((T,x)=>{let _=p.node.outputs[x];for(let A of s[_].to){let P=a[A],k=!0;for(let N of P.inputs)if(!this._values[N]){k=!1;break}k&&w.add(A)}}),i.push(...w)}let l=[];for(let d=0;d<this.graph.getOutputIndices().length;d++){let p=this.graph.getOutputIndices()[d],h=this._values[p];if(h===void 0)throw new Error(`required output [${p}] does not have value`);p===0?await h.getData():h.data,l.push(h)}return Qe.verbose("ExecPlan","disposing of inferenceHandler"),t.dispose(),l})}}});var Ge,dr,Yo,kh=D(()=>{"use strict";zo();Ge=qn(Zn());An();Ze();dr=ce.experimental.fbs,Yo=class r{constructor(e){if(this._attributes=new Map,e!=null){for(let n of e)n instanceof Ge.onnx.AttributeProto?this._attributes.set(n.name,[r.getValue(n),r.getType(n)]):n instanceof dr.Attribute&&this._attributes.set(n.name(),[r.getValue(n),r.getType(n)]);if(this._attributes.size<e.length)throw new Error("duplicated attribute names")}}set(e,n,t){this._attributes.set(e,[t,n])}delete(e){this._attributes.delete(e)}getFloat(e,n){return this.get(e,"float",n)}getInt(e,n){return this.get(e,"int",n)}getString(e,n){return this.get(e,"string",n)}getTensor(e,n){return this.get(e,"tensor",n)}getFloats(e,n){return this.get(e,"floats",n)}getInts(e,n){return this.get(e,"ints",n)}getStrings(e,n){return this.get(e,"strings",n)}getTensors(e,n){return this.get(e,"tensors",n)}get(e,n,t){let o=this._attributes.get(e);if(o===void 0){if(t!==void 0)return t;throw new Error(`required attribute not found: ${e}`)}if(o[1]!==n)throw new Error(`type mismatch: expected ${n} but got ${o[1]}`);return o[0]}static getType(e){let n=e instanceof Ge.onnx.AttributeProto?e.type:e.type();switch(n){case Ge.onnx.AttributeProto.AttributeType.FLOAT:return"float";case Ge.onnx.AttributeProto.AttributeType.INT:return"int";case Ge.onnx.AttributeProto.AttributeType.STRING:return"string";case Ge.onnx.AttributeProto.AttributeType.TENSOR:return"tensor";case Ge.onnx.AttributeProto.AttributeType.FLOATS:return"floats";case Ge.onnx.AttributeProto.AttributeType.INTS:return"ints";case Ge.onnx.AttributeProto.AttributeType.STRINGS:return"strings";case Ge.onnx.AttributeProto.AttributeType.TENSORS:return"tensors";default:throw new Error(`attribute type is not supported yet: ${Ge.onnx.AttributeProto.AttributeType[n]}`)}}static getValue(e){let n=e instanceof Ge.onnx.AttributeProto?e.type:e.type();if(n===Ge.onnx.AttributeProto.AttributeType.GRAPH||n===Ge.onnx.AttributeProto.AttributeType.GRAPHS)throw new Error("graph attribute is not supported yet");let t=this.getValueNoCheck(e);if(n===Ge.onnx.AttributeProto.AttributeType.INT&&Yt.isLong(t))return Yt.longToNumber(t);if(n===Ge.onnx.AttributeProto.AttributeType.INTS){let o=t,i=new Array(o.length);for(let s=0;s<o.length;s++){let a=o[s];i[s]=Yt.longToNumber(a)}return i}if(n===Ge.onnx.AttributeProto.AttributeType.TENSOR)return e instanceof Ge.onnx.AttributeProto?Tt.fromProto(t):Tt.fromOrtTensor(t);if(n===Ge.onnx.AttributeProto.AttributeType.TENSORS){if(e instanceof Ge.onnx.AttributeProto)return t.map(i=>Tt.fromProto(i));if(e instanceof dr.Attribute)return t.map(i=>Tt.fromOrtTensor(i))}return n===Ge.onnx.AttributeProto.AttributeType.STRING&&e instanceof Ge.onnx.AttributeProto?Fo(t):n===Ge.onnx.AttributeProto.AttributeType.STRINGS&&e instanceof Ge.onnx.AttributeProto?t.map(Fo):t}static getValueNoCheck(e){return e instanceof Ge.onnx.AttributeProto?this.getValueNoCheckFromOnnxFormat(e):this.getValueNoCheckFromOrtFormat(e)}static getValueNoCheckFromOnnxFormat(e){switch(e.type){case Ge.onnx.AttributeProto.AttributeType.FLOAT:return e.f;case Ge.onnx.AttributeProto.AttributeType.INT:return e.i;case Ge.onnx.AttributeProto.AttributeType.STRING:return e.s;case Ge.onnx.AttributeProto.AttributeType.TENSOR:return e.t;case Ge.onnx.AttributeProto.AttributeType.GRAPH:return e.g;case Ge.onnx.AttributeProto.AttributeType.FLOATS:return e.floats;case Ge.onnx.AttributeProto.AttributeType.INTS:return e.ints;case Ge.onnx.AttributeProto.AttributeType.STRINGS:return e.strings;case Ge.onnx.AttributeProto.AttributeType.TENSORS:return e.tensors;case Ge.onnx.AttributeProto.AttributeType.GRAPHS:return e.graphs;default:throw new Error(`unsupported attribute type: ${Ge.onnx.AttributeProto.AttributeType[e.type]}`)}}static getValueNoCheckFromOrtFormat(e){switch(e.type()){case dr.AttributeType.FLOAT:return e.f();case dr.AttributeType.INT:return e.i();case dr.AttributeType.STRING:return e.s();case dr.AttributeType.TENSOR:return e.t();case dr.AttributeType.GRAPH:return e.g();case dr.AttributeType.FLOATS:return e.floatsArray();case dr.AttributeType.INTS:{let n=[];for(let t=0;t<e.intsLength();t++)n.push(e.ints(t));return n}case dr.AttributeType.STRINGS:{let n=[];for(let t=0;t<e.stringsLength();t++)n.push(e.strings(t));return n}case dr.AttributeType.TENSORS:{let n=[];for(let t=0;t<e.tensorsLength();t++)n.push(e.tensors(t));return n}default:throw new Error(`unsupported attribute type: ${dr.AttributeType[e.type()]}`)}}}});var qu,Ga,Ku,Dr,Wa,ju,Dh=D(()=>{"use strict";kh();zo();qu=qn(Zn());An();Ze();Ga=ce.experimental.fbs,Ku={from:(r,e)=>new ju(r,e)},Dr=class{constructor(e){this._from=void 0,this._to=[],this.tensor=void 0,this.type=void 0,e&&(this.type=kt.tensorValueTypeFromProto(e.type.tensorType))}get from(){return this._from}get to(){return this._to}},Wa=class{constructor(e,n){e instanceof qu.onnx.NodeProto?(this.name=e.name,this.opType=e.opType,this.attributes=new Yo(e.attribute)):e instanceof Ga.Node&&(this.name=n??e.name(),this.opType=e.opType(),this.attributes=new Yo(kt.tensorAttributesFromORTFormat(e))),this.inputs=[],this.outputs=[],this.executeNode=!0}},ju=class{constructor(e,n){if(!e)throw new TypeError("graph is empty");this.buildGraph(e),this.transformGraph(n),this.checkIsAcyclic()}getInputIndices(){return this._allInputIndices}getInputNames(){return this._allInputNames}getOutputIndices(){return this._allOutputIndices}getOutputNames(){return this._allOutputNames}getValues(){return this._allData}getNodes(){return this._nodes}buildGraph(e){if(e instanceof qu.onnx.GraphProto)this.buildGraphFromOnnxFormat(e);else if(e instanceof Ga.Graph)this.buildGraphFromOrtFormat(e);else throw new TypeError("Graph type is not supported.")}buildGraphFromOnnxFormat(e){let n=new Map;this._allData=[],this._allInputIndices=[],this._allInputNames=[],this._allOutputIndices=[],this._allOutputNames=[],this._nodes=[];let t=new Map;if(!e.input)throw new Error("missing information in graph: input");let o=[];for(let i of e.input){if(n.has(i.name))throw new Error(`duplicated input name: ${i.name}`);let s=this._allData.push(new Dr(i))-1;n.set(i.name,s),o.push(i.name)}if(!e.initializer)throw new Error("missing information in graph: initializer");for(let i of e.initializer){let s=n.get(i.name);if(s===void 0){let a=new Dr;a.type={shape:{dims:kt.tensorDimsFromProto(i.dims)},tensorType:kt.tensorDataTypeFromProto(i.dataType)},s=this._allData.push(a)-1,n.set(i.name,s)}this._allData[s]._from=-1,this._allData[s].tensor=Tt.fromProto(i)}for(let i=0;i<this._allData.length;i++)this._allData[i].tensor||(this._allInputIndices.push(i),this._allInputNames.push(o[i]));if(!e.output)throw new Error("missing information in graph: output");for(let i of e.output){if(n.has(i.name))throw new Error(`duplicated output name: ${i.name}`);let s=this._allData.push(new Dr(i))-1;n.set(i.name,s),this._allOutputIndices.push(s),this._allOutputNames.push(i.name)}if(!e.node)throw new Error("missing information in graph: node");for(let i of e.node){if(!i.name)for(let a=0;;a++){let u=`unnamed_${i.opType}_${a}`;if(!t.has(u)){i.name=u;break}}if(t.has(i.name))throw new Error(`duplicated node name: ${i.name}`);let s=this._nodes.push(new Wa(i))-1;t.set(i.name,s)}for(let i=0;i<this._nodes.length;i++){let s=this._nodes[i],a=e.node[i];if(!a.output)throw new Error(`missing output for node: ${a.name}`);for(let u of a.output){let l=n.get(u);if(typeof l>"u"&&(l=this._allData.push(new Dr)-1,n.set(u,l)),s.outputs.push(l),this._allData[l]._from!==void 0)throw new Error(`multiple nodes output to one data value: ${l}`);if(this._allData[l]._from=i,a.opType==="Constant"){if(!a.attribute||a.attribute.length!==1||!a.attribute[0].t)throw new Error("missing attributes or missing tensor value in attributes for this Constant operator");if(!a.output||a.output.length!==1)throw new Error("missing output or incorrect number of outputs for this Constant operator");s.outputs.pop(),s.executeNode=!1,this._allData[l]._from=-1,this._allData[l].tensor=Tt.fromProto(a.attribute[0].t)}}}for(let i=0;i<this._nodes.length;i++){let s=this._nodes[i],a=e.node[i];if(!a.input)throw new Error(`missing input for node: ${a.name}`);for(let u of a.input){let l=n.get(u);if(typeof l>"u"){if(u===""&&(a.input.length===3||a.input.length===4)&&a.opType==="Resize")continue;throw new Error(`unrecognized input '${u}' for node: ${a.name}`)}s.inputs.push(l),this._allData[l]._to.push(i)}}return!0}buildGraphFromOrtFormat(e){let n=new Map;this._allData=[],this._allInputIndices=[],this._allInputNames=[],this._allOutputIndices=[],this._allOutputNames=[],this._nodes=[];let t=new Map,o=[];for(let i=0;i<e.inputsLength();i++){let s=e.inputs(i);if(n.has(s))throw new Error(`duplicated input name: ${s}`);for(let a=0;a<e.nodeArgsLength();a++)if(e.nodeArgs(a)?.name()===s){let u=new Dr;if(e.nodeArgs(a)?.type()?.valueType()!==Ga.TypeInfoValue.tensor_type)throw new Error("Unexpected value type for the nodeArg.");let d=e.nodeArgs(a).type().value(new Ga.TensorTypeAndShape),p=kt.tensorDataTypeFromProto(d.elemType()),h=d.shape(),y=[];for(let w=0;w<h.dimLength();w++)y.push(Yt.longToNumber(h.dim(w).value().dimValue()));u.type={shape:{dims:y},tensorType:p};let b=this._allData.push(u)-1;n.set(s,b),o.push(s)}}for(let i=0;i<e.initializersLength();i++){let s=e.initializers(i),a=n.get(s.name());if(a===void 0){let u=new Dr,l=kt.tensorDimsFromORTFormat(s),d=kt.tensorDataTypeFromProto(s.dataType());u.type={shape:{dims:l},tensorType:d},a=this._allData.push(u)-1,n.set(s.name(),a)}this._allData[a]._from=-1,this._allData[a].tensor=Tt.fromOrtTensor(s)}for(let i=0;i<this._allData.length;i++)this._allData[i].tensor||(this._allInputIndices.push(i),this._allInputNames.push(o[i]));for(let i=0;i<e.outputsLength();i++){let s=e.outputs(i);if(n.has(s))throw new Error(`duplicated output name: ${s}`);let a=this._allData.push(new Dr)-1;n.set(s,a),this._allOutputIndices.push(a),this._allOutputNames.push(s)}if(!e.nodes)throw new Error("missing information in graph: node");for(let i=0;i<e.nodesLength();i++){let s=e.nodes(i),a=s.name();if(!a)for(let l=0;a=`unnamed_${s.opType()}_${l}`,!!t.has(a);l++);if(t.has(a))throw new Error(`duplicated node name: ${a}`);let u=this._nodes.push(new Wa(s,a))-1;t.set(a,u)}for(let i=0;i<this._nodes.length;i++){let s=this._nodes[i],a=e.nodes(i);if(a==null)throw new Error(`No node exists at index ${i}`);if(a?.outputsLength()===0)throw new Error(`missing output for node: ${a.name}`);for(let u=0;u<a?.outputsLength();u++){let l=a?.outputs(u),d=n.get(l);if(typeof d>"u"&&(d=this._allData.push(new Dr)-1,n.set(l,d)),s.outputs.push(d),this._allData[d]._from!==void 0)throw new Error(`multiple nodes output to one data value: ${d}`);if(this._allData[d]._from=i,a.opType()==="Constant"){if(a.attributesLength()!==1||!a.attributes(0).t())throw new Error("missing attributes or missing tensor value in attributes for this Constant operator");if(a.outputsLength()!==1)throw new Error("missing output or incorrect number of outputs for this Constant operator");s.outputs.pop(),s.executeNode=!1,this._allData[d]._from=-1,this._allData[d].tensor=Tt.fromOrtTensor(a.attributes(0).t())}}}for(let i=0;i<this._nodes.length;i++){let s=this._nodes[i],a=e.nodes(i);if(a.inputsLength()===0)throw new Error(`missing input for node: ${a.name}`);for(let u=0;u<a.inputsLength();u++){let l=a.inputs(u),d=n.get(l);if(typeof d>"u")throw new Error(`unrecognized input '${l}' for node: ${a.name()}`);s.inputs.push(d),this._allData[d]._to.push(i)}}}checkIsAcyclic(){let e=new Set;this._allInputIndices.forEach(o=>{this._allData[o]._to.forEach(s=>{e.add(s)})});let n=Array.from(e),t=new Array(this._nodes.length).fill("white");for(;n.length>0;){let o=n.pop();t[o]==="gray"?t[o]="black":(n.push(o),t[o]="gray",this._nodes[o].outputs.forEach(i=>{let s=this._allData[i];if(typeof s.tensor<"u")throw new Error("node outputs should not be initialized");if(s._from!==o)throw new Error("from property of the Value object doesn't match index of Node being processed");s._to.forEach(a=>{if(t[a]==="gray")throw new Error("model graph is cyclic");t[a]==="white"&&n.push(a)})}))}}transformGraph(e){this.removeAllIdentityNodes(),this.removeAllDropoutNodes(),this.fuseConvActivationNodes(),e&&e.transformGraph(this),this.finalizeGraph()}finalizeGraph(){let e=0,n=new Array(this._nodes.length,0),t=0;for(let o=0;o<this._nodes.length;o++)n[o]=t,this._nodes[o].executeNode?(t!==o&&(this._nodes[t]=this._nodes[o]),t++):this._nodes[o].outputs.forEach(i=>{this._allData[i]._from=-2});this._nodes.splice(t,this._nodes.length-t);for(let o=0;o<this._allData.length;o++){let i=this._allData[o];i._from!==void 0&&i._from!==-1&&i._from!==-2&&(i._from=n[i._from]);for(let s=0;s<i._to.length;s++)if(i._to[s]>=0)i._to[s]=n[i._to[s]];else throw new Error("Trying to update a removed node")}e=0;for(let o=0;o<this._allData.length;o++){if(this._allData[o].from===-2&&this._allOutputIndices.indexOf(o+e)===-1){e++,this._allData.splice(o,1),o--;continue}if(e>0){let i=-1;this._allData[o].from!==void 0&&this._allData[o].from!==-1?(i=this._nodes[this._allData[o].from].outputs.indexOf(o+e),i!==-1&&(this._nodes[this._allData[o].from].outputs[i]=o)):(i=this._allInputIndices.indexOf(o+e),i!==-1&&(this._allInputIndices[i]=o)),this._allData[o].to.forEach(s=>{i=this._nodes[s].inputs.indexOf(o+e),i!==-1&&(this._nodes[s].inputs[i]=o)}),this._allData[o].to.length===0&&(i=this._allOutputIndices.indexOf(o+e),i!==-1&&(this._allOutputIndices[i]=o))}}}deleteNode(e){let n=this._nodes[e];if(n.outputs.length>1){for(let a=1;a<n.outputs.length;a++)if(this._allData[n.outputs[a]].to.length>0)throw new Error("Node deletion with more than one output connected to other nodes is not supported. ")}n.executeNode=!1;let t=n.inputs[0],o=n.outputs[0],i=this._allData[o].to;for(let a=0;a<n.inputs.length;a++){let u=this._allData[n.inputs[a]].to.indexOf(e);if(u===-1)throw new Error("The Value object doesn't have the current Node in it's 'to' property ");this._allData[n.inputs[a]].to.splice(u,1)}this._allData[o]._to=[];let s=this._allOutputIndices.indexOf(o);if(s!==-1&&(this._allOutputIndices[s]=t),i&&i.length>0)for(let a of i){let u=this._nodes[a].inputs.indexOf(o);if(u===-1)throw new Error("The Node object doesn't have the output Value in it's 'inputs' property ");this._nodes[a].inputs[u]=t,this._allData[t].to.push(a)}}removeAllDropoutNodes(){let e=0;for(let n of this._nodes){if(n.opType==="Dropout"){if(n.inputs.length!==1)throw new Error("Dropout nodes should only contain one input. ");if(n.outputs.length!==1&&n.outputs.length!==2)throw new Error("Dropout nodes should contain either 1 or 2 output(s)");if(n.outputs.length===2&&this._allData[n.outputs[1]]._to.length!==0)throw new Error("Dropout nodes's second output should not be referenced by other nodes");this.deleteNode(e)}e++}}removeAllIdentityNodes(){let e=0;for(let n of this._nodes)n.opType==="Identity"&&this.deleteNode(e),e++}isActivation(e){switch(e.opType){case"Relu":case"Sigmoid":case"Clip":return!0;default:return!1}}fuseConvActivationNodes(){for(let e of this._nodes)if(e.opType==="Conv"){let n=this._allData[e.outputs[0]]._to;if(n.length===1&&this.isActivation(this._nodes[n[0]])){let t=this._nodes[n[0]];if(t.opType==="Clip")if(t.inputs.length===1)try{e.attributes.set("activation_params","floats",[t.attributes.getFloat("min"),t.attributes.getFloat("max")])}catch{e.attributes.set("activation_params","floats",[Sn,In])}else if(t.inputs.length>=3&&this._allData[t.inputs[1]].tensor!==void 0&&this._allData[t.inputs[2]].tensor!==void 0)e.attributes.set("activation_params","floats",[this._allData[t.inputs[1]].tensor.floatData[0],this._allData[t.inputs[2]].tensor.floatData[0]]);else continue;e.attributes.set("activation","string",t.opType),this.deleteNode(n[0])}}}}});var Bh,L2,Ha,Rh=D(()=>{"use strict";ca();Dh();zo();Bh=qn(Zn());Ze();L2=ce.experimental.fbs,Ha=class{constructor(){}load(e,n,t){let o;if(!t)try{this.loadFromOnnxFormat(e,n);return}catch(i){if(t!==void 0)throw i;o=i}try{this.loadFromOrtFormat(e,n)}catch(i){throw t!==void 0?i:new Error(`Failed to load model as ONNX format: ${o}
as ORT format: ${i}`)}}loadFromOnnxFormat(e,n){let t=Bh.onnx.ModelProto.decode(e);if(Yt.longToNumber(t.irVersion)<3)throw new Error("only support ONNX model with IR_VERSION>=3");this._opsets=t.opsetImport.map(i=>({domain:i.domain,version:Yt.longToNumber(i.version)})),this._graph=Ku.from(t.graph,n)}loadFromOrtFormat(e,n){let t=new B.ByteBuffer(e),o=L2.InferenceSession.getRootAsInferenceSession(t).model();if(Yt.longToNumber(o.irVersion())<3)throw new Error("only support ONNX model with IR_VERSION>=3");this._opsets=[];for(let s=0;s<o.opsetImportLength();s++){let a=o.opsetImport(s);this._opsets.push({domain:a?.domain(),version:Yt.longToNumber(a.version())})}this._graph=Ku.from(o.graph(),n)}get graph(){return this._graph}get opsets(){return this._opsets}}});var ja,zh=D(()=>{"use strict";Ch();Ph();nr();Rh();ja=class{constructor(e={}){this._initialized=!1,this.backendHint=e.backendHint,this.profiler=la.create(e.profiler),this.context={profiler:this.profiler,graphInputTypes:[],graphInputDims:[]}}get inputNames(){return this._model.graph.getInputNames()}get outputNames(){return this._model.graph.getOutputNames()}startProfiling(){this.profiler.start()}endProfiling(){this.profiler.stop()}async loadModel(e,n,t){await this.profiler.event("session","Session.loadModel",async()=>{let o=await Wu(this.backendHint);if(this.sessionHandler=o.createSessionHandler(this.context),this._model=new Ha,typeof e=="string"){let i=e.endsWith(".ort");if(typeof process<"u"&&process.versions&&process.versions.node){let s=await(void 0)(e);this.initialize(s,i)}else{let a=await(await fetch(e)).arrayBuffer();this.initialize(new Uint8Array(a),i)}}else if(ArrayBuffer.isView(e))this.initialize(e);else{let i=new Uint8Array(e,n||0,t||e.byteLength);this.initialize(i)}})}initialize(e,n){if(this._initialized)throw new Error("already initialized");this.profiler.event("session","Session.initialize",()=>{let t=this.sessionHandler.transformGraph?this.sessionHandler:void 0;this._model.load(e,t,n),this.sessionHandler.onGraphInitialized&&this.sessionHandler.onGraphInitialized(this._model.graph),this.initializeOps(this._model.graph),this._executionPlan=new Va(this._model.graph,this._ops,this.profiler)}),this._initialized=!0}async run(e){if(!this._initialized)throw new Error("session not initialized yet");return this.profiler.event("session","Session.run",async()=>{let n=this.normalizeAndValidateInputs(e),t=await this._executionPlan.execute(this.sessionHandler,n);return this.createOutput(t)})}normalizeAndValidateInputs(e){let n=this._model.graph.getInputNames();if(Array.isArray(e)){if(e.length!==n.length)throw new Error(`incorrect input array length: expected ${n.length} but got ${e.length}`)}else{if(e.size!==n.length)throw new Error(`incorrect input map size: expected ${n.length} but got ${e.size}`);let t=new Array(e.size),o=0;for(let i=0;i<n.length;++i){let s=e.get(n[i]);if(!s)throw new Error(`missing input tensor for: '${name}'`);t[o++]=s}e=t}if(!this.context.graphInputTypes||this.context.graphInputTypes.length===0||!this.context.graphInputDims||this.context.graphInputDims.length===0){let t=this._model.graph.getInputIndices(),o=this._model.graph.getValues(),i=new Array(t.length);for(let s=0;s<t.length;++s){let a=o[t[s]];i[s]=a.type.shape.dims,this.context.graphInputTypes.push(a.type.tensorType),this.context.graphInputDims.push(e[s].dims)}this.validateInputTensorDims(i,e,!0)}else this.validateInputTensorDims(this.context.graphInputDims,e,!1);return this.validateInputTensorTypes(this.context.graphInputTypes,e),e}validateInputTensorTypes(e,n){for(let t=0;t<n.length;t++){let o=e[t],i=n[t].type;if(o!==i)throw new Error(`input tensor[${t}] check failed: expected type '${o}' but got ${i}`)}}validateInputTensorDims(e,n,t){for(let o=0;o<n.length;o++){let i=e[o],s=n[o].dims;if(!this.compareTensorDims(i,s,t))throw new Error(`input tensor[${o}] check failed: expected shape '[${i.join(",")}]' but got [${s.join(",")}]`)}}compareTensorDims(e,n,t){if(e.length!==n.length)return!1;for(let o=0;o<e.length;++o)if(e[o]!==n[o]&&(!t||e[o]!==0))return!1;return!0}createOutput(e){let n=this._model.graph.getOutputNames();if(e.length!==n.length)throw new Error("expected number of outputs do not match number of generated outputs");let t=new Map;for(let o=0;o<n.length;++o)t.set(n[o],e[o]);return t}initializeOps(e){let n=e.getNodes();this._ops=new Array(n.length);for(let t=0;t<n.length;t++)this._ops[t]=this.sessionHandler.resolve(n[t],this._model.opsets,e)}}});var qa,Mh=D(()=>{"use strict";Rt();An();qa=class{constructor(e){this.session=e;this.inputNames=this.session.inputNames,this.outputNames=this.session.outputNames}async dispose(){}async run(e,n,t){let o=new Map;for(let a in e)if(Object.hasOwnProperty.call(e,a)){let u=e[a];o.set(a,new Tt(u.dims,u.type,void 0,void 0,u.data))}let i=await this.session.run(o),s={};return i.forEach((a,u)=>{s[u]=new St(a.type,a.data,a.dims)}),s}startProfiling(){this.session.startProfiling()}endProfiling(){this.session.endProfiling()}}});var Nh={};Qr(Nh,{onnxjsBackend:()=>F2});var Yu,F2,Lh=D(()=>{"use strict";zh();Mh();Yu=class{async init(){}async createInferenceSessionHandler(e,n){let t=new ja(n);return typeof e=="string"?await t.loadModel(e):await t.loadModel(e),new qa(t)}},F2=new Yu});var Ka={};Qr(Ka,{createReadStream:()=>Uh,readFile:()=>V2,readFileSync:()=>G2});var V2,G2,Uh,Ya=D(()=>{V2=void 0,G2=void 0,Uh=void 0});var Xu={};Qr(Xu,{join:()=>W2});var W2,Zu=D(()=>{W2=void 0});var Gh=st((Vh,Ju)=>{"use strict";var Fh=(()=>{var r=typeof document<"u"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename<"u"&&(r=r||__filename),function(e={}){var n=e,t,o;n.ready=new Promise((c,m)=>{t=c,o=m}),n.mountExternalData=(c,m)=>{(n.MountedFiles||(n.MountedFiles=new Map)).set(c,m)},n.unmountExternalData=()=>{delete n.MountedFiles};let i=()=>{let c=(g,$,C)=>(...R)=>{let L=pe.currData,W=$?.(),Y=g(...R),ae=$?.();return W!==ae&&(g=ae,C(W),C=null,$=null),pe.currData!=L?pe.whenDone():Y},m=g=>async(...$)=>{try{if(n.jsepSessionState)throw new Error("Session already started");let C=n.jsepSessionState={sessionHandle:$[0],errors:[]},R=await g(...$);if(n.jsepSessionState!==C)throw new Error("Session mismatch");n.jsepBackend?.flush();let L=C.errors;if(L.length>0){let W=await Promise.all(L);if(W=W.filter(Y=>Y),W.length>0)throw new Error(W.join(`
`))}return R}finally{n.jsepSessionState=null}};n._OrtCreateSession=c(n._OrtCreateSession,()=>n._OrtCreateSession,g=>n._OrtCreateSession=g),n._OrtRun=m(c(n._OrtRun,()=>n._OrtRun,g=>n._OrtRun=g)),n._OrtRunWithBinding=m(c(n._OrtRunWithBinding,()=>n._OrtRunWithBinding,g=>n._OrtRunWithBinding=g)),n._OrtBindInput=c(n._OrtBindInput,()=>n._OrtBindInput,g=>n._OrtBindInput=g),i=void 0};n.jsepInit=(c,m)=>{if(i?.(),c==="webgpu"){[n.jsepBackend,n.jsepAlloc,n.jsepFree,n.jsepCopy,n.jsepCopyAsync,n.jsepCreateKernel,n.jsepReleaseKernel,n.jsepRunKernel,n.jsepCaptureBegin,n.jsepCaptureEnd,n.jsepReplay]=m;let g=n.jsepBackend;n.jsepRegisterBuffer=($,C,R,L)=>g.registerBuffer($,C,R,L),n.jsepGetBuffer=$=>g.getBuffer($),n.jsepCreateDownloader=($,C,R)=>g.createDownloader($,C,R),n.jsepOnReleaseSession=$=>{g.onReleaseSession($)},n.jsepOnRunStart=$=>g.onRunStart($)}};var s=Object.assign({},n),a=[],u="./this.program",l=(c,m)=>{throw m},d=typeof window=="object",p=typeof importScripts=="function",h=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",y="";function b(c){return n.locateFile?n.locateFile(c,y):y+c}var w,T,x;if(h){var _=(Ya(),Ir(Ka)),A=(Zu(),Ir(Xu));p?y=A.dirname(y)+"/":y=__dirname+"/",w=(c,m)=>(c=Qt(c)?new URL(c):A.normalize(c),_.readFileSync(c,m?void 0:"utf8")),x=c=>{var m=w(c,!0);return m.buffer||(m=new Uint8Array(m)),m},T=(c,m,g,$=!0)=>{c=Qt(c)?new URL(c):A.normalize(c),_.readFile(c,$?void 0:"utf8",(C,R)=>{C?g(C):m($?R.buffer:R)})},!n.thisProgram&&process.argv.length>1&&(u=process.argv[1].replace(/\\/g,"/")),a=process.argv.slice(2),l=(c,m)=>{throw process.exitCode=c,m},n.inspect=()=>"[Emscripten Module object]"}else(d||p)&&(p?y=self.location.href:typeof document<"u"&&document.currentScript&&(y=document.currentScript.src),r&&(y=r),y.indexOf("blob:")!==0?y=y.substr(0,y.replace(/[?#].*/,"").lastIndexOf("/")+1):y="",w=c=>{var m=new XMLHttpRequest;return m.open("GET",c,!1),m.send(null),m.responseText},p&&(x=c=>{var m=new XMLHttpRequest;return m.open("GET",c,!1),m.responseType="arraybuffer",m.send(null),new Uint8Array(m.response)}),T=(c,m,g)=>{var $=new XMLHttpRequest;$.open("GET",c,!0),$.responseType="arraybuffer",$.onload=()=>{if($.status==200||$.status==0&&$.response){m($.response);return}g()},$.onerror=g,$.send(null)});var P=console.log.bind(console),k=console.error.bind(console);Object.assign(n,s),s=null,n.arguments&&(a=n.arguments);var N;typeof WebAssembly!="object"&&Jt("no native wasm support detected");var j,Z=!1,se,Q,X,Be,qe,V,ie,H,Me,Pe,Ie;function fe(){var c=j.buffer;n.HEAP8=Q=new Int8Array(c),n.HEAP16=Be=new Int16Array(c),n.HEAPU8=X=new Uint8Array(c),n.HEAPU16=qe=new Uint16Array(c),n.HEAP32=V=new Int32Array(c),n.HEAPU32=ie=new Uint32Array(c),n.HEAPF32=H=new Float32Array(c),n.HEAPF64=Ie=new Float64Array(c),n.HEAP64=Me=new BigInt64Array(c),n.HEAPU64=Pe=new BigUint64Array(c)}var Ee=[],Te=[],_t=[],q=!1;function ue(){if(n.preRun)for(typeof n.preRun=="function"&&(n.preRun=[n.preRun]);n.preRun.length;)xt(n.preRun.shift());cn(Ee)}function ke(){q=!0,cn(Te)}function Et(){cn(_t)}function xt(c){Ee.unshift(c)}function Ct(c){Te.unshift(c)}var mt=0,yt=null,ft=null;function Dt(c){mt++}function Kr(c){if(mt--,mt==0&&(yt!==null&&(clearInterval(yt),yt=null),ft)){var m=ft;ft=null,m()}}function Jt(c){c="Aborted("+c+")",k(c),Z=!0,se=1,c+=". Build with -sASSERTIONS for more info.";var m=new WebAssembly.RuntimeError(c);throw o(m),m}var oi="data:application/octet-stream;base64,",fo=c=>c.startsWith(oi),Qt=c=>c.startsWith("file://"),Ur;Ur="ort-wasm-simd.wasm",fo(Ur)||(Ur=b(Ur));function Fr(c){if(c==Ur&&N)return new Uint8Array(N);if(x)return x(c);throw"both async and sync fetching of the wasm failed"}function ii(c){if(!N&&(d||p)){if(typeof fetch=="function"&&!Qt(c))return fetch(c,{credentials:"same-origin"}).then(m=>{if(!m.ok)throw"failed to load wasm binary file at '"+c+"'";return m.arrayBuffer()}).catch(()=>Fr(c));if(T)return new Promise((m,g)=>{T(c,$=>m(new Uint8Array($)),g)})}return Promise.resolve().then(()=>Fr(c))}function ai(c,m,g){return ii(c).then($=>WebAssembly.instantiate($,m)).then($=>$).then(g,$=>{k(`failed to asynchronously prepare wasm: ${$}`),Jt($)})}function si(c,m,g,$){return!c&&typeof WebAssembly.instantiateStreaming=="function"&&!fo(m)&&!Qt(m)&&!h&&typeof fetch=="function"?fetch(m,{credentials:"same-origin"}).then(C=>{var R=WebAssembly.instantiateStreaming(C,g);return R.then($,function(L){return k(`wasm streaming compile failed: ${L}`),k("falling back to ArrayBuffer instantiation"),ai(m,g,$)})}):ai(m,g,$)}function Os(){var c={a:Ov};function m($,C){return be=$.exports,be=pe.instrumentWasmExports(be),be=uw(be),j=be.ja,fe(),Ct(be.ka),Kr("wasm-instantiate"),be}Dt("wasm-instantiate");function g($){m($.instance)}if(n.instantiateWasm)try{return n.instantiateWasm(c,m)}catch($){k(`Module.instantiateWasm callback failed with error: ${$}`),o($)}return si(N,Ur,c,g).catch(o),{}}var Yr={1377320:(c,m,g,$)=>{if(typeof n>"u"||!n.MountedFiles)return 1;let C=$t(c>>>0);C.startsWith("./")&&(C=C.substring(2));let R=n.MountedFiles.get(C);if(!R)return 2;let L=m>>>0,W=g>>>0,Y=$>>>0;if(L+W>R.byteLength)return 3;try{return X.set(R.subarray(L,L+W),Y>>>0),0}catch{return 4}},1377821:(c,m,g)=>{let $=c,C=m,R=$t(g),L=new Uint8Array(C);if(L.set(X.subarray($>>>0,$+C>>>0)),typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string")(Ya(),Ir(Ka)).writeFileSync(R,L);else{let W=new File([L],R,{type:"application/octet-stream"}),Y=URL.createObjectURL(W);window.open(Y,"_blank")}},1378329:()=>{n.jsepCaptureBegin()},1378360:()=>{n.jsepCaptureEnd()},1378389:()=>{n.jsepReplay()},1378414:c=>n.jsepAlloc(c),1378447:c=>n.jsepFree(c),1378479:(c,m,g)=>{n.jsepCopy(c,m,g,!0)},1378518:(c,m,g)=>{n.jsepCopy(c,m,g)},1378551:c=>{n.jsepCreateKernel("Abs",c,void 0)},1378602:c=>{n.jsepCreateKernel("Neg",c,void 0)},1378653:c=>{n.jsepCreateKernel("Floor",c,void 0)},1378706:c=>{n.jsepCreateKernel("Ceil",c,void 0)},1378758:c=>{n.jsepCreateKernel("Reciprocal",c,void 0)},1378816:c=>{n.jsepCreateKernel("Sqrt",c,void 0)},1378868:c=>{n.jsepCreateKernel("Exp",c,void 0)},1378919:c=>{n.jsepCreateKernel("Erf",c,void 0)},1378970:c=>{n.jsepCreateKernel("Sigmoid",c,void 0)},1379025:(c,m,g)=>{n.jsepCreateKernel("HardSigmoid",c,{alpha:m,beta:g})},1379104:c=>{n.jsepCreateKernel("Log",c,void 0)},1379155:c=>{n.jsepCreateKernel("Sin",c,void 0)},1379206:c=>{n.jsepCreateKernel("Cos",c,void 0)},1379257:c=>{n.jsepCreateKernel("Tan",c,void 0)},1379308:c=>{n.jsepCreateKernel("Asin",c,void 0)},1379360:c=>{n.jsepCreateKernel("Acos",c,void 0)},1379412:c=>{n.jsepCreateKernel("Atan",c,void 0)},1379464:c=>{n.jsepCreateKernel("Sinh",c,void 0)},1379516:c=>{n.jsepCreateKernel("Cosh",c,void 0)},1379568:c=>{n.jsepCreateKernel("Asinh",c,void 0)},1379621:c=>{n.jsepCreateKernel("Acosh",c,void 0)},1379674:c=>{n.jsepCreateKernel("Atanh",c,void 0)},1379727:c=>{n.jsepCreateKernel("Tanh",c,void 0)},1379779:c=>{n.jsepCreateKernel("Not",c,void 0)},1379830:(c,m,g)=>{n.jsepCreateKernel("Clip",c,{min:m,max:g})},1379899:c=>{n.jsepCreateKernel("Clip",c,void 0)},1379951:(c,m)=>{n.jsepCreateKernel("Elu",c,{alpha:m})},1380009:c=>{n.jsepCreateKernel("Relu",c,void 0)},1380061:(c,m)=>{n.jsepCreateKernel("LeakyRelu",c,{alpha:m})},1380125:(c,m)=>{n.jsepCreateKernel("ThresholdedRelu",c,{alpha:m})},1380195:(c,m)=>{n.jsepCreateKernel("Cast",c,{to:m})},1380253:c=>{n.jsepCreateKernel("Add",c,void 0)},1380304:c=>{n.jsepCreateKernel("Sub",c,void 0)},1380355:c=>{n.jsepCreateKernel("Mul",c,void 0)},1380406:c=>{n.jsepCreateKernel("Div",c,void 0)},1380457:c=>{n.jsepCreateKernel("Pow",c,void 0)},1380508:c=>{n.jsepCreateKernel("Equal",c,void 0)},1380561:c=>{n.jsepCreateKernel("Greater",c,void 0)},1380616:c=>{n.jsepCreateKernel("GreaterOrEqual",c,void 0)},1380678:c=>{n.jsepCreateKernel("Less",c,void 0)},1380730:c=>{n.jsepCreateKernel("LessOrEqual",c,void 0)},1380789:(c,m,g,$,C)=>{n.jsepCreateKernel("ReduceMean",c,{keepDims:!!m,noopWithEmptyAxes:!!g,axes:$?Array.from(V.subarray($>>>0,C>>>0)):[]})},1380948:(c,m,g,$,C)=>{n.jsepCreateKernel("ReduceMax",c,{keepDims:!!m,noopWithEmptyAxes:!!g,axes:$?Array.from(V.subarray($>>>0,C>>>0)):[]})},1381106:(c,m,g,$,C)=>{n.jsepCreateKernel("ReduceMin",c,{keepDims:!!m,noopWithEmptyAxes:!!g,axes:$?Array.from(V.subarray($>>>0,C>>>0)):[]})},1381264:(c,m,g,$,C)=>{n.jsepCreateKernel("ReduceProd",c,{keepDims:!!m,noopWithEmptyAxes:!!g,axes:$?Array.from(V.subarray($>>>0,C>>>0)):[]})},1381423:(c,m,g,$,C)=>{n.jsepCreateKernel("ReduceSum",c,{keepDims:!!m,noopWithEmptyAxes:!!g,axes:$?Array.from(V.subarray($>>>0,C>>>0)):[]})},1381581:(c,m,g,$,C)=>{n.jsepCreateKernel("ReduceL1",c,{keepDims:!!m,noopWithEmptyAxes:!!g,axes:$?Array.from(V.subarray($>>>0,C>>>0)):[]})},1381738:(c,m,g,$,C)=>{n.jsepCreateKernel("ReduceL2",c,{keepDims:!!m,noopWithEmptyAxes:!!g,axes:$?Array.from(V.subarray($>>>0,C>>>0)):[]})},1381895:(c,m,g,$,C)=>{n.jsepCreateKernel("ReduceLogSum",c,{keepDims:!!m,noopWithEmptyAxes:!!g,axes:$?Array.from(V.subarray($>>>0,C>>>0)):[]})},1382056:(c,m,g,$,C)=>{n.jsepCreateKernel("ReduceSumSquare",c,{keepDims:!!m,noopWithEmptyAxes:!!g,axes:$?Array.from(V.subarray($>>>0,C>>>0)):[]})},1382220:(c,m,g,$,C)=>{n.jsepCreateKernel("ReduceLogSumExp",c,{keepDims:!!m,noopWithEmptyAxes:!!g,axes:$?Array.from(V.subarray($>>>0,C>>>0)):[]})},1382384:c=>{n.jsepCreateKernel("Where",c,void 0)},1382437:(c,m,g)=>{n.jsepCreateKernel("Transpose",c,{perm:m?Array.from(V.subarray(m>>>0,g>>>0)):[]})},1382545:(c,m,g,$,C,R,L,W,Y,ae,de,we,Oe,et,ct)=>{n.jsepCreateKernel("ConvTranspose",c,{format:Y?"NHWC":"NCHW",autoPad:m,dilations:[g],group:$,kernelShape:[C],pads:[R,L],strides:[W],wIsConst:()=>!!Q[ae>>>0],outputPadding:de?Array.from(V.subarray(de>>>0,we>>>0)):[],outputShape:Oe?Array.from(V.subarray(Oe>>>0,et>>>0)):[],activation:$t(ct)})},1382946:(c,m,g,$,C,R,L,W,Y,ae,de,we,Oe,et)=>{n.jsepCreateKernel("ConvTranspose",c,{format:W?"NHWC":"NCHW",autoPad:m,dilations:Array.from(V.subarray(g>>>0,(g>>>0)+2>>>0)),group:$,kernelShape:Array.from(V.subarray(C>>>0,(C>>>0)+2>>>0)),pads:Array.from(V.subarray(R>>>0,(R>>>0)+4>>>0)),strides:Array.from(V.subarray(L>>>0,(L>>>0)+2>>>0)),wIsConst:()=>!!Q[Y>>>0],outputPadding:ae?Array.from(V.subarray(ae>>>0,de>>>0)):[],outputShape:we?Array.from(V.subarray(we>>>0,Oe>>>0)):[],activation:$t(et)})},1383511:(c,m,g,$,C,R,L,W,Y,ae,de,we,Oe,et,ct)=>{n.jsepCreateKernel("ConvTranspose",c,{format:Y?"NHWC":"NCHW",autoPad:m,dilations:[g],group:$,kernelShape:[C],pads:[R,L],strides:[W],wIsConst:()=>!!Q[ae>>>0],outputPadding:de?Array.from(V.subarray(de>>>0,we>>>0)):[],outputShape:Oe?Array.from(V.subarray(Oe>>>0,et>>>0)):[],activation:$t(ct)})},1383912:(c,m,g,$,C,R,L,W,Y,ae,de,we,Oe,et)=>{n.jsepCreateKernel("ConvTranspose",c,{format:W?"NHWC":"NCHW",autoPad:m,dilations:Array.from(V.subarray(g>>>0,(g>>>0)+2>>>0)),group:$,kernelShape:Array.from(V.subarray(C>>>0,(C>>>0)+2>>>0)),pads:Array.from(V.subarray(R>>>0,(R>>>0)+4>>>0)),strides:Array.from(V.subarray(L>>>0,(L>>>0)+2>>>0)),wIsConst:()=>!!Q[Y>>>0],outputPadding:ae?Array.from(V.subarray(ae>>>0,de>>>0)):[],outputShape:we?Array.from(V.subarray(we>>>0,Oe>>>0)):[],activation:$t(et)})},1384477:(c,m)=>{n.jsepCreateKernel("GlobalAveragePool",c,{format:m?"NHWC":"NCHW"})},1384568:(c,m,g,$,C,R,L,W,Y,ae,de,we,Oe,et,ct,Pt)=>{n.jsepCreateKernel("AveragePool",c,{format:Pt?"NHWC":"NCHW",auto_pad:m,ceil_mode:g,count_include_pad:$,storage_order:C,dilations:[R,L],kernel_shape:[W,Y],pads:[ae,de,we,Oe],strides:[et,ct]})},1384852:(c,m)=>{n.jsepCreateKernel("GlobalAveragePool",c,{format:m?"NHWC":"NCHW"})},1384943:(c,m,g,$,C,R,L,W,Y,ae,de,we,Oe,et,ct,Pt)=>{n.jsepCreateKernel("AveragePool",c,{format:Pt?"NHWC":"NCHW",auto_pad:m,ceil_mode:g,count_include_pad:$,storage_order:C,dilations:[R,L],kernel_shape:[W,Y],pads:[ae,de,we,Oe],strides:[et,ct]})},1385227:(c,m)=>{n.jsepCreateKernel("GlobalMaxPool",c,{format:m?"NHWC":"NCHW"})},1385314:(c,m,g,$,C,R,L,W,Y,ae,de,we,Oe,et,ct,Pt)=>{n.jsepCreateKernel("MaxPool",c,{format:Pt?"NHWC":"NCHW",auto_pad:m,ceil_mode:g,count_include_pad:$,storage_order:C,dilations:[R,L],kernel_shape:[W,Y],pads:[ae,de,we,Oe],strides:[et,ct]})},1385594:(c,m)=>{n.jsepCreateKernel("GlobalMaxPool",c,{format:m?"NHWC":"NCHW"})},1385681:(c,m,g,$,C,R,L,W,Y,ae,de,we,Oe,et,ct,Pt)=>{n.jsepCreateKernel("MaxPool",c,{format:Pt?"NHWC":"NCHW",auto_pad:m,ceil_mode:g,count_include_pad:$,storage_order:C,dilations:[R,L],kernel_shape:[W,Y],pads:[ae,de,we,Oe],strides:[et,ct]})},1385961:(c,m,g,$,C)=>{n.jsepCreateKernel("Gemm",c,{alpha:m,beta:g,transA:$,transB:C})},1386065:c=>{n.jsepCreateKernel("MatMul",c,void 0)},1386119:(c,m,g,$)=>{n.jsepCreateKernel("ArgMax",c,{keepDims:!!m,selectLastIndex:!!g,axis:$})},1386227:(c,m,g,$)=>{n.jsepCreateKernel("ArgMin",c,{keepDims:!!m,selectLastIndex:!!g,axis:$})},1386335:(c,m)=>{n.jsepCreateKernel("Softmax",c,{axis:m})},1386398:(c,m)=>{n.jsepCreateKernel("Concat",c,{axis:m})},1386458:(c,m,g,$,C)=>{n.jsepCreateKernel("Split",c,{axis:m,numOutputs:g,splitSizes:$?Array.from(V.subarray($>>>0,C>>>0)):[]})},1386598:c=>{n.jsepCreateKernel("Expand",c,void 0)},1386652:(c,m)=>{n.jsepCreateKernel("Gather",c,{axis:Number(m)})},1386723:(c,m)=>{n.jsepCreateKernel("GatherElements",c,{axis:Number(m)})},1386802:(c,m,g,$,C,R,L,W,Y,ae,de)=>{n.jsepCreateKernel("Resize",c,{antialias:m,axes:g?Array.from(V.subarray(g>>>0,$>>>0)):[],coordinateTransformMode:$t(C),cubicCoeffA:R,excludeOutside:L,extrapolationValue:W,keepAspectRatioPolicy:$t(Y),mode:$t(ae),nearestMode:$t(de)})},1387148:(c,m,g,$,C,R,L)=>{n.jsepCreateKernel("Slice",c,{starts:m?Array.from(V.subarray(m>>>0,g>>>0)):[],ends:$?Array.from(V.subarray($>>>0,C>>>0)):[],axes:R?Array.from(V.subarray(R>>>0,L>>>0)):[]})},1387364:c=>{n.jsepCreateKernel("Tile",c,void 0)},1387416:(c,m,g)=>{n.jsepCreateKernel("LayerNormalization",c,{axis:Number(m),epsilon:Number(g)})},1387523:(c,m,g)=>{n.jsepCreateKernel("InstanceNormalization",c,{epsilon:m,format:g?"NHWC":"NCHW"})},1387637:(c,m,g)=>{n.jsepCreateKernel("InstanceNormalization",c,{epsilon:m,format:g?"NHWC":"NCHW"})},1387751:c=>{n.jsepCreateKernel("Range",c,void 0)},1387804:(c,m)=>{n.jsepCreateKernel("Einsum",c,{equation:$t(m)})},1387885:(c,m,g,$,C)=>{n.jsepCreateKernel("Pad",c,{mode:m,value:g,pads:$?Array.from(V.subarray($>>>0,C>>>0)):[]})},1388012:(c,m,g,$,C,R)=>{n.jsepCreateKernel("BatchNormalization",c,{epsilon:m,momentum:g,spatial:!!C,trainingMode:!!$,format:R?"NHWC":"NCHW"})},1388181:(c,m,g,$,C,R)=>{n.jsepCreateKernel("BatchNormalization",c,{epsilon:m,momentum:g,spatial:!!C,trainingMode:!!$,format:R?"NHWC":"NCHW"})},1388350:(c,m,g)=>{n.jsepCreateKernel("CumSum",c,{exclusive:Number(m),reverse:Number(g)})},1388447:(c,m,g,$,C,R,L,W,Y)=>{n.jsepCreateKernel("Attention",c,{numHeads:m,isUnidirectional:g,maskFilterValue:$,scale:C,doRotary:R,qkvHiddenSizes:L?Array.from(V.subarray(Number(W)>>>0,Number(W)+L>>>0)):[],pastPresentShareBuffer:!!Y})},1388719:c=>{n.jsepCreateKernel("BiasAdd",c,void 0)},1388774:c=>{n.jsepCreateKernel("BiasSplitGelu",c,void 0)},1388835:c=>{n.jsepCreateKernel("FastGelu",c,void 0)},1388891:(c,m,g,$,C,R,L,W,Y,ae,de,we,Oe)=>{n.jsepCreateKernel("Conv",c,{format:Y?"NHWC":"NCHW",auto_pad:m,dilations:[g],group:$,kernel_shape:[C],pads:R?Array.from(V.subarray(R>>>0,L>>>0)):[],strides:[W],w_is_const:()=>!!Q[ae>>>0],activation:$t(de),activation_params:we?Array.from(H.subarray(we>>>0,Oe>>>0)):[]})},1389261:(c,m,g,$,C,R,L,W,Y,ae,de,we,Oe,et,ct,Pt)=>{n.jsepCreateKernel("Conv",c,{format:we?"NHWC":"NCHW",auto_pad:m,dilations:[g,$],group:C,kernel_shape:[R,L],pads:W?Array.from(V.subarray(W>>>0,Y>>>0)):[],strides:[ae,de],w_is_const:()=>!!Q[Oe>>>0],activation:$t(et),activation_params:ct?Array.from(H.subarray(ct>>>0,Pt>>>0)):[]})},1389652:c=>{n.jsepCreateKernel("Gelu",c,void 0)},1389704:(c,m,g,$,C,R)=>{n.jsepCreateKernel("MatMulNBits",c,{k:m,n:g,accuracyLevel:$,bits:C,blockSize:R})},1389831:(c,m,g,$,C,R)=>{n.jsepCreateKernel("MultiHeadAttention",c,{numHeads:m,isUnidirectional:g,maskFilterValue:$,scale:C,doRotary:R})},1389990:(c,m,g,$,C)=>{n.jsepCreateKernel("RotaryEmbedding",c,{interleaved:!!m,numHeads:g,rotaryEmbeddingDim:$,scale:C})},1390129:(c,m)=>{n.jsepCreateKernel("SkipLayerNormalization",c,{epsilon:m})},1390210:c=>{n.jsepReleaseKernel(c)},1390244:(c,m)=>n.jsepRunKernel(c,m,n.jsepSessionState.sessionHandle,n.jsepSessionState.errors)};function po(c,m,g){return pe.handleAsync(async()=>{await n.jsepCopyAsync(c,m,g)})}function dn(c){this.name="ExitStatus",this.message=`Program terminated with exit(${c})`,this.status=c}var cn=c=>{for(;c.length>0;)c.shift()(n)};function ui(c){this.excPtr=c,this.ptr=c-24,this.set_type=function(m){ie[this.ptr+4>>>2>>>0]=m},this.get_type=function(){return ie[this.ptr+4>>>2>>>0]},this.set_destructor=function(m){ie[this.ptr+8>>>2>>>0]=m},this.get_destructor=function(){return ie[this.ptr+8>>>2>>>0]},this.set_caught=function(m){m=m?1:0,Q[this.ptr+12>>>0>>>0]=m},this.get_caught=function(){return Q[this.ptr+12>>>0>>>0]!=0},this.set_rethrown=function(m){m=m?1:0,Q[this.ptr+13>>>0>>>0]=m},this.get_rethrown=function(){return Q[this.ptr+13>>>0>>>0]!=0},this.init=function(m,g){this.set_adjusted_ptr(0),this.set_type(m),this.set_destructor(g)},this.set_adjusted_ptr=function(m){ie[this.ptr+16>>>2>>>0]=m},this.get_adjusted_ptr=function(){return ie[this.ptr+16>>>2>>>0]},this.get_exception_ptr=function(){var m=Zl(this.get_type());if(m)return ie[this.excPtr>>>2>>>0];var g=this.get_adjusted_ptr();return g!==0?g:this.excPtr}}var mo=0,li=0,di=9007199254740992,Bt=-9007199254740992,Xr=c=>c<Bt||c>di?NaN:Number(c);function ho(c,m,g){c>>>=0,m>>>=0,g>>>=0;var $=new ui(c);throw $.init(m,g),mo=c,li++,mo}var Ae=c=>(V[jl()>>>2>>>0]=c,c),fn=typeof TextDecoder<"u"?new TextDecoder("utf8"):void 0,go=(c,m,g)=>{m>>>=0;for(var $=m+g,C=m;c[C]&&!(C>=$);)++C;if(C-m>16&&c.buffer&&fn)return fn.decode(c.subarray(m,C));for(var R="";m<C;){var L=c[m++];if(!(L&128)){R+=String.fromCharCode(L);continue}var W=c[m++]&63;if((L&224)==192){R+=String.fromCharCode((L&31)<<6|W);continue}var Y=c[m++]&63;if((L&240)==224?L=(L&15)<<12|W<<6|Y:L=(L&7)<<18|W<<12|Y<<6|c[m++]&63,L<65536)R+=String.fromCharCode(L);else{var ae=L-65536;R+=String.fromCharCode(55296|ae>>10,56320|ae&1023)}}return R},$t=(c,m)=>(c>>>=0,c?go(X,c,m):""),Vr={varargs:void 0,get(){var c=V[+Vr.varargs>>>2>>>0];return Vr.varargs+=4,c},getp(){return Vr.get()},getStr(c){var m=$t(c);return m}};function Es(c,m,g){return g>>>=0,Vr.varargs=g,0}function ci(c,m){m>>>=0}var pn=c=>{for(var m=0,g=0;g<c.length;++g){var $=c.charCodeAt(g);$<=127?m++:$<=2047?m+=2:$>=55296&&$<=57343?(m+=4,++g):m+=3}return m},yo=(c,m,g,$)=>{if(g>>>=0,!($>0))return 0;for(var C=g,R=g+$-1,L=0;L<c.length;++L){var W=c.charCodeAt(L);if(W>=55296&&W<=57343){var Y=c.charCodeAt(++L);W=65536+((W&1023)<<10)|Y&1023}if(W<=127){if(g>=R)break;m[g++>>>0]=W}else if(W<=2047){if(g+1>=R)break;m[g++>>>0]=192|W>>6,m[g++>>>0]=128|W&63}else if(W<=65535){if(g+2>=R)break;m[g++>>>0]=224|W>>12,m[g++>>>0]=128|W>>6&63,m[g++>>>0]=128|W&63}else{if(g+3>=R)break;m[g++>>>0]=240|W>>18,m[g++>>>0]=128|W>>12&63,m[g++>>>0]=128|W>>6&63,m[g++>>>0]=128|W&63}}return m[g>>>0]=0,g-C},Mn=(c,m,g)=>yo(c,X,m,g);function bo(c,m){c>>>=0,m>>>=0}function fi(c,m,g){m>>>=0,g>>>=0}function pi(c,m,g){return g>>>=0,Vr.varargs=g,0}function mi(c,m){c>>>=0,m>>>=0}function hi(c,m,g){m>>>=0}function gi(c,m,g,$){m>>>=0,g>>>=0}function yi(c,m,g,$){m>>>=0,$>>>=0,Vr.varargs=$}function bi(c,m,g,$){m>>>=0,g>>>=0,$>>>=0}function vi(c){c>>>=0}function wi(c,m){c>>>=0,m>>>=0}function _i(c,m,g){m>>>=0}var vo=c=>{if(c===null)return"null";var m=typeof c;return m==="object"||m==="array"||m==="function"?c.toString():""+c},xi=()=>{for(var c=new Array(256),m=0;m<256;++m)c[m]=String.fromCharCode(m);wo=c},wo,Wt=c=>{for(var m="",g=c;X[g>>>0];)m+=wo[X[g++>>>0]];return m},mn={},Zr={},Jr={},_o,xr=c=>{throw new _o(c)},$i;function Ti(c,m,g={}){var $=m.name;if(c||xr(`type "${$}" must have a positive integer typeid pointer`),Zr.hasOwnProperty(c)){if(g.ignoreDuplicateRegistrations)return;xr(`Cannot register type '${$}' twice`)}if(Zr[c]=m,delete Jr[c],mn.hasOwnProperty(c)){var C=mn[c];delete mn[c],C.forEach(R=>R())}}function er(c,m,g={}){if(!("argPackAdvance"in m))throw new TypeError("registerType registeredInstance requires argPackAdvance");return Ti(c,m,g)}var Nn=(c,m,g)=>{switch(m){case 1:return g?$=>Q[$>>>0>>>0]:$=>X[$>>>0>>>0];case 2:return g?$=>Be[$>>>1>>>0]:$=>qe[$>>>1>>>0];case 4:return g?$=>V[$>>>2>>>0]:$=>ie[$>>>2>>>0];case 8:return g?$=>Me[$>>>3]:$=>Pe[$>>>3];default:throw new TypeError(`invalid integer width (${m}): ${c}`)}};function Si(c,m,g,$,C){c>>>=0,m>>>=0,g>>>=0,m=Wt(m);var R=m.indexOf("u")!=-1;R&&(C=(1n<<64n)-1n),er(c,{name:m,fromWireType:L=>L,toWireType:function(L,W){if(typeof W!="bigint"&&typeof W!="number")throw new TypeError(`Cannot convert "${vo(W)}" to ${this.name}`);if(W<$||W>C)throw new TypeError(`Passing a number "${vo(W)}" from JS side to C/C++ side to an argument of type "${m}", which is outside the valid range [${$}, ${C}]!`);return W},argPackAdvance:$r,readValueFromPointer:Nn(m,g,!R),destructorFunction:null})}var $r=8;function at(c,m,g,$){c>>>=0,m>>>=0,m=Wt(m),er(c,{name:m,fromWireType:function(C){return!!C},toWireType:function(C,R){return R?g:$},argPackAdvance:$r,readValueFromPointer:function(C){return this.fromWireType(X[C>>>0])},destructorFunction:null})}function xo(){Object.assign(Ln.prototype,{get(c){return this.allocated[c]},has(c){return this.allocated[c]!==void 0},allocate(c){var m=this.freelist.pop()||this.allocated.length;return this.allocated[m]=c,m},free(c){this.allocated[c]=void 0,this.freelist.push(c)}})}function Ln(){this.allocated=[void 0],this.freelist=[]}var Lt=new Ln;function hn(c){c>>>=0,c>=Lt.reserved&&--Lt.get(c).refcount===0&&Lt.free(c)}var Ii=()=>{for(var c=0,m=Lt.reserved;m<Lt.allocated.length;++m)Lt.allocated[m]!==void 0&&++c;return c},Ai=()=>{Lt.allocated.push({value:void 0},{value:null},{value:!0},{value:!1}),Lt.reserved=Lt.allocated.length,n.count_emval_handles=Ii},rt={toValue:c=>(c||xr("Cannot use deleted val. handle = "+c),Lt.get(c).value),toHandle:c=>{switch(c){case void 0:return 1;case null:return 2;case!0:return 3;case!1:return 4;default:return Lt.allocate({refcount:1,value:c})}}};function $o(c){return this.fromWireType(V[c>>>2>>>0])}var Oi=function(c,m){c>>>=0,m>>>=0,m=Wt(m),er(c,{name:m,fromWireType:g=>{var $=rt.toValue(g);return hn(g),$},toWireType:(g,$)=>rt.toHandle($),argPackAdvance:$r,readValueFromPointer:$o,destructorFunction:null})},Cs=(c,m)=>{switch(m){case 4:return function(g){return this.fromWireType(H[g>>>2>>>0])};case 8:return function(g){return this.fromWireType(Ie[g>>>3>>>0])};default:throw new TypeError(`invalid float width (${m}): ${c}`)}},Ei=function(c,m,g){c>>>=0,m>>>=0,g>>>=0,m=Wt(m),er(c,{name:m,fromWireType:$=>$,toWireType:($,C)=>C,argPackAdvance:$r,readValueFromPointer:Cs(m,g),destructorFunction:null})};function Ci(c,m,g,$,C){c>>>=0,m>>>=0,g>>>=0,m=Wt(m),C===-1&&(C=4294967295);var R=de=>de;if($===0){var L=32-8*g;R=de=>de<<L>>>L}var W=m.includes("unsigned"),Y=(de,we)=>{},ae;W?ae=function(de,we){return Y(we,this.name),we>>>0}:ae=function(de,we){return Y(we,this.name),we},er(c,{name:m,fromWireType:R,toWireType:ae,argPackAdvance:$r,readValueFromPointer:Nn(m,g,$!==0),destructorFunction:null})}function Pi(c,m,g){c>>>=0,g>>>=0;var $=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array,BigInt64Array,BigUint64Array],C=$[m];function R(L){var W=ie[L>>>2>>>0],Y=ie[L+4>>>2>>>0];return new C(Q.buffer,Y,W)}g=Wt(g),er(c,{name:g,fromWireType:R,argPackAdvance:$r,readValueFromPointer:R},{ignoreDuplicateRegistrations:!0})}function Ps(c){return this.fromWireType(ie[c>>>2>>>0])}function ks(c,m){c>>>=0,m>>>=0,m=Wt(m);var g=m==="std::string";er(c,{name:m,fromWireType($){var C=ie[$>>>2>>>0],R=$+4,L;if(g)for(var W=R,Y=0;Y<=C;++Y){var ae=R+Y;if(Y==C||X[ae>>>0]==0){var de=ae-W,we=$t(W,de);L===void 0?L=we:(L+=String.fromCharCode(0),L+=we),W=ae+1}}else{for(var Oe=new Array(C),Y=0;Y<C;++Y)Oe[Y]=String.fromCharCode(X[R+Y>>>0]);L=Oe.join("")}return Sr($),L},toWireType($,C){C instanceof ArrayBuffer&&(C=new Uint8Array(C));var R,L=typeof C=="string";L||C instanceof Uint8Array||C instanceof Uint8ClampedArray||C instanceof Int8Array||xr("Cannot pass non-string to std::string"),g&&L?R=pn(C):R=C.length;var W=ko(4+R+1),Y=W+4;if(ie[W>>>2>>>0]=R,g&&L)Mn(C,Y,R+1);else if(L)for(var ae=0;ae<R;++ae){var de=C.charCodeAt(ae);de>255&&(Sr(Y),xr("String has UTF-16 code units that do not fit in 8 bits")),X[Y+ae>>>0]=de}else for(var ae=0;ae<R;++ae)X[Y+ae>>>0]=C[ae];return $!==null&&$.push(Sr,W),W},argPackAdvance:$r,readValueFromPointer:Ps,destructorFunction($){Sr($)}})}var To=typeof TextDecoder<"u"?new TextDecoder("utf-16le"):void 0,Un=(c,m)=>{for(var g=c,$=g>>1,C=$+m/2;!($>=C)&&qe[$>>>0];)++$;if(g=$<<1,g-c>32&&To)return To.decode(X.subarray(c>>>0,g>>>0));for(var R="",L=0;!(L>=m/2);++L){var W=Be[c+L*2>>>1>>>0];if(W==0)break;R+=String.fromCharCode(W)}return R},Ds=(c,m,g)=>{if(g??=2147483647,g<2)return 0;g-=2;for(var $=m,C=g<c.length*2?g/2:c.length,R=0;R<C;++R){var L=c.charCodeAt(R);Be[m>>>1>>>0]=L,m+=2}return Be[m>>>1>>>0]=0,m-$},Tr=c=>c.length*2,tr=(c,m)=>{for(var g=0,$="";!(g>=m/4);){var C=V[c+g*4>>>2>>>0];if(C==0)break;if(++g,C>=65536){var R=C-65536;$+=String.fromCharCode(55296|R>>10,56320|R&1023)}else $+=String.fromCharCode(C)}return $},ki=(c,m,g)=>{if(m>>>=0,g??=2147483647,g<4)return 0;for(var $=m,C=$+g-4,R=0;R<c.length;++R){var L=c.charCodeAt(R);if(L>=55296&&L<=57343){var W=c.charCodeAt(++R);L=65536+((L&1023)<<10)|W&1023}if(V[m>>>2>>>0]=L,m+=4,m+4>C)break}return V[m>>>2>>>0]=0,m-$},Fn=c=>{for(var m=0,g=0;g<c.length;++g){var $=c.charCodeAt(g);$>=55296&&$<=57343&&++g,m+=4}return m},Di=function(c,m,g){c>>>=0,m>>>=0,g>>>=0,g=Wt(g);var $,C,R,L,W;m===2?($=Un,C=Ds,L=Tr,R=()=>qe,W=1):m===4&&($=tr,C=ki,L=Fn,R=()=>ie,W=2),er(c,{name:g,fromWireType:Y=>{for(var ae=ie[Y>>>2>>>0],de=R(),we,Oe=Y+4,et=0;et<=ae;++et){var ct=Y+4+et*m;if(et==ae||de[ct>>>W]==0){var Pt=ct-Oe,Do=$(Oe,Pt);we===void 0?we=Do:(we+=String.fromCharCode(0),we+=Do),Oe=ct+m}}return Sr(Y),we},toWireType:(Y,ae)=>{typeof ae!="string"&&xr(`Cannot pass non-string to C++ string type ${g}`);var de=L(ae),we=ko(4+de+m);return ie[we>>>2]=de>>W,C(ae,we+4,de+m),Y!==null&&Y.push(Sr,we),we},argPackAdvance:$r,readValueFromPointer:$o,destructorFunction(Y){Sr(Y)}})},Bi=function(c,m){c>>>=0,m>>>=0,m=Wt(m),er(c,{isVoid:!0,name:m,argPackAdvance:0,fromWireType:()=>{},toWireType:(g,$)=>{}})},Bs=1,So=()=>Bs,Rs=c=>{var m=ql(c),g=Wt(m);return Sr(m),g},Io=(c,m)=>{var g=Zr[c];return g===void 0&&xr(m+" has unknown type "+Rs(c)),g},Ri=(c,m,g)=>{var $=[],C=c.toWireType($,g);return $.length&&(ie[m>>>2>>>0]=rt.toHandle($)),C};function zs(c,m,g){return c>>>=0,m>>>=0,g>>>=0,c=rt.toValue(c),m=Io(m,"emval::as"),Ri(m,g,c)}var Vn=c=>{try{return c()}catch(m){Jt(m)}},zi=c=>{if(c instanceof dn||c=="unwind")return se;l(1,c)},Ms=0,Mi=()=>Ms>0,Gn=c=>{se=c,Mi()||(n.onExit?.(c),Z=!0),l(c,new dn(c))},Ao=(c,m)=>{se=c,Gn(c)},Ni=Ao,Li=()=>{if(!Mi())try{Ni(se)}catch(c){zi(c)}},Ui=c=>{if(!Z)try{c(),Li()}catch(m){zi(m)}},pe={instrumentWasmImports(c){var m=/^(invoke_.*|__asyncjs__.*)$/;for(let[g,$]of Object.entries(c)){let C=$.sig;if(typeof $=="function"){let R=$.isAsync||m.test(g)}}},instrumentWasmExports(c){var m={};for(let[g,$]of Object.entries(c))typeof $=="function"?m[g]=function(){pe.exportCallStack.push(g);try{return $.apply(null,arguments)}finally{if(!Z){var C=pe.exportCallStack.pop();pe.maybeStopUnwind()}}}:m[g]=$;return m},State:{Normal:0,Unwinding:1,Rewinding:2,Disabled:3},state:0,StackSize:65536,currData:null,handleSleepReturnValue:0,exportCallStack:[],callStackNameToId:{},callStackIdToName:{},callStackId:0,asyncPromiseHandlers:null,sleepCallbacks:[],getCallStackId(c){var m=pe.callStackNameToId[c];return m===void 0&&(m=pe.callStackId++,pe.callStackNameToId[c]=m,pe.callStackIdToName[m]=c),m},maybeStopUnwind(){pe.currData&&pe.state===pe.State.Unwinding&&pe.exportCallStack.length===0&&(pe.state=pe.State.Normal,Vn(Ql),typeof Fibers<"u"&&Fibers.trampoline())},whenDone(){return new Promise((c,m)=>{pe.asyncPromiseHandlers={resolve:c,reject:m}})},allocateData(){var c=ko(12+pe.StackSize);return pe.setDataHeader(c,c+12,pe.StackSize),pe.setDataRewindFunc(c),c},setDataHeader(c,m,g){ie[c>>>2>>>0]=m,ie[c+4>>>2>>>0]=m+g},setDataRewindFunc(c){var m=pe.exportCallStack[0],g=pe.getCallStackId(m);V[c+8>>>2>>>0]=g},getDataRewindFunc(c){var m=V[c+8>>>2>>>0],g=pe.callStackIdToName[m],$=be[g];return $},doRewind(c){var m=pe.getDataRewindFunc(c);return m()},handleSleep(c){if(!Z){if(pe.state===pe.State.Normal){var m=!1,g=!1;c(($=0)=>{if(!Z&&(pe.handleSleepReturnValue=$,m=!0,!!g)){pe.state=pe.State.Rewinding,Vn(()=>ed(pe.currData)),typeof Browser<"u"&&Browser.mainLoop.func&&Browser.mainLoop.resume();var C,R=!1;try{C=pe.doRewind(pe.currData)}catch(Y){C=Y,R=!0}var L=!1;if(!pe.currData){var W=pe.asyncPromiseHandlers;W&&(pe.asyncPromiseHandlers=null,(R?W.reject:W.resolve)(C),L=!0)}if(R&&!L)throw C}}),g=!0,m||(pe.state=pe.State.Unwinding,pe.currData=pe.allocateData(),typeof Browser<"u"&&Browser.mainLoop.func&&Browser.mainLoop.pause(),Vn(()=>Jl(pe.currData)))}else pe.state===pe.State.Rewinding?(pe.state=pe.State.Normal,Vn(td),Sr(pe.currData),pe.currData=null,pe.sleepCallbacks.forEach($=>Ui($))):Jt(`invalid state: ${pe.state}`);return pe.handleSleepReturnValue}},handleAsync(c){return pe.handleSleep(m=>{c().then(m)})}},Wn=function(c){return c>>>=0,pe.handleAsync(()=>(c=rt.toValue(c),c.then(rt.toHandle)))};Wn.isAsync=!0;var gn=[];function Fi(c,m,g,$){return c>>>=0,m>>>=0,g>>>=0,$>>>=0,c=gn[c],m=rt.toValue(m),c(null,m,g,$)}var Vi={},yn=c=>{var m=Vi[c];return m===void 0?Wt(c):m};function Hn(c,m,g,$,C){return c>>>=0,m>>>=0,g>>>=0,$>>>=0,C>>>=0,c=gn[c],m=rt.toValue(m),g=yn(g),c(m,m[g],$,C)}function Oo(c,m){return c>>>=0,m>>>=0,c=rt.toValue(c),m=rt.toValue(m),c==m}var Eo=()=>typeof globalThis=="object"?globalThis:function(){return Function}()("return this")();function Gi(c){return c>>>=0,c===0?rt.toHandle(Eo()):(c=yn(c),rt.toHandle(Eo()[c]))}var Wi=c=>{var m=gn.length;return gn.push(c),m},Hi=(c,m)=>{for(var g=new Array(c),$=0;$<c;++$)g[$]=Io(ie[m+$*4>>>2>>>0],"parameter "+$);return g},Co=(c,m)=>Object.defineProperty(m,"name",{value:c}),Nl=Reflect.construct;function jn(c,m){if(!(c instanceof Function))throw new TypeError(`new_ called with constructor type ${typeof c} which is not a function`);var g=Co(c.name||"unknownFunctionName",function(){});g.prototype=c.prototype;var $=new g,C=c.apply($,m);return C instanceof Object?C:$}function ji(c,m,g){m>>>=0;var $=Hi(c,m),C=$.shift();c--;var R=`return function (obj, func, destructorsRef, args) {
`,L=0,W=[];g===0&&W.push("obj");for(var Y=["retType"],ae=[C],de=0;de<c;++de)W.push("arg"+de),Y.push("argType"+de),ae.push($[de]),R+=`  var arg${de} = argType${de}.readValueFromPointer(args${L?"+"+L:""});
`,L+=$[de].argPackAdvance;var we=g===1?"new func":"func.call";R+=`  var rv = ${we}(${W.join(", ")});
`;for(var de=0;de<c;++de)$[de].deleteObject&&(R+=`  argType${de}.deleteObject(arg${de});
`);C.isVoid||(Y.push("emval_returnValue"),ae.push(Ri),R+=`  return emval_returnValue(retType, destructorsRef, rv);
`),R+=`};
`,Y.push(R);var Oe=jn(Function,Y).apply(null,ae),et=`methodCaller<(${$.map(ct=>ct.name).join(", ")}) => ${C.name}>`;return Wi(Co(et,Oe))}function f(c,m){return c>>>=0,m>>>=0,c=rt.toValue(c),m=rt.toValue(m),rt.toHandle(c[m])}function v(c){c>>>=0,c>4&&(Lt.get(c).refcount+=1)}function S(){return rt.toHandle([])}function O(c){c>>>=0,c=rt.toValue(c);for(var m=new Array(c.length),g=0;g<c.length;g++)m[g]=c[g];return rt.toHandle(m)}function z(c){return c>>>=0,rt.toHandle(yn(c))}function G(){return rt.toHandle({})}var K=c=>{for(;c.length;){var m=c.pop(),g=c.pop();g(m)}};function xe(c){c>>>=0;var m=rt.toValue(c);K(m),hn(c)}function ye(c,m,g){c>>>=0,m>>>=0,g>>>=0,c=rt.toValue(c),m=rt.toValue(m),g=rt.toValue(g),c[m]=g}function ge(c,m){c>>>=0,m>>>=0,c=Io(c,"_emval_take_value");var g=c.readValueFromPointer(m);return rt.toHandle(g)}function ve(c,m){c=Xr(c),m>>>=0;var g=new Date(c*1e3);V[m>>>2>>>0]=g.getUTCSeconds(),V[m+4>>>2>>>0]=g.getUTCMinutes(),V[m+8>>>2>>>0]=g.getUTCHours(),V[m+12>>>2>>>0]=g.getUTCDate(),V[m+16>>>2>>>0]=g.getUTCMonth(),V[m+20>>>2>>>0]=g.getUTCFullYear()-1900,V[m+24>>>2>>>0]=g.getUTCDay();var $=Date.UTC(g.getUTCFullYear(),0,1,0,0,0,0),C=(g.getTime()-$)/(1e3*60*60*24)|0;V[m+28>>>2>>>0]=C}var ze=c=>c%4===0&&(c%100!==0||c%400===0),je=[0,31,60,91,121,152,182,213,244,274,305,335],M=[0,31,59,90,120,151,181,212,243,273,304,334],$e=c=>{var m=ze(c.getFullYear()),g=m?je:M,$=g[c.getMonth()]+c.getDate()-1;return $};function We(c,m){c=Xr(c),m>>>=0;var g=new Date(c*1e3);V[m>>>2>>>0]=g.getSeconds(),V[m+4>>>2>>>0]=g.getMinutes(),V[m+8>>>2>>>0]=g.getHours(),V[m+12>>>2>>>0]=g.getDate(),V[m+16>>>2>>>0]=g.getMonth(),V[m+20>>>2>>>0]=g.getFullYear()-1900,V[m+24>>>2>>>0]=g.getDay();var $=$e(g)|0;V[m+28>>>2>>>0]=$,V[m+36>>>2>>>0]=-(g.getTimezoneOffset()*60);var C=new Date(g.getFullYear(),0,1),R=new Date(g.getFullYear(),6,1).getTimezoneOffset(),L=C.getTimezoneOffset(),W=(R!=L&&g.getTimezoneOffset()==Math.min(L,R))|0;V[m+32>>>2>>>0]=W}var Gr=function(c){c>>>=0;var m=(()=>{var g=new Date(V[c+20>>>2>>>0]+1900,V[c+16>>>2>>>0],V[c+12>>>2>>>0],V[c+8>>>2>>>0],V[c+4>>>2>>>0],V[c>>>2>>>0],0),$=V[c+32>>>2>>>0],C=g.getTimezoneOffset(),R=new Date(g.getFullYear(),0,1),L=new Date(g.getFullYear(),6,1).getTimezoneOffset(),W=R.getTimezoneOffset(),Y=Math.min(W,L);if($<0)V[c+32>>>2>>>0]=+(L!=W&&Y==C);else if($>0!=(Y==C)){var ae=Math.max(W,L),de=$>0?Y:ae;g.setTime(g.getTime()+(de-C)*6e4)}V[c+24>>>2>>>0]=g.getDay();var we=$e(g)|0;V[c+28>>>2>>>0]=we,V[c>>>2>>>0]=g.getSeconds(),V[c+4>>>2>>>0]=g.getMinutes(),V[c+8>>>2>>>0]=g.getHours(),V[c+12>>>2>>>0]=g.getDate(),V[c+16>>>2>>>0]=g.getMonth(),V[c+20>>>2>>>0]=g.getYear();var Oe=g.getTime();return isNaN(Oe)?(Ae(61),-1):Oe/1e3})();return BigInt(m)};function qi(c,m,g,$,C,R,L){return c>>>=0,C=Xr(C),R>>>=0,L>>>=0,-52}function nv(c,m,g,$,C,R){c>>>=0,m>>>=0,R=Xr(R)}var Ll=c=>{var m=pn(c)+1,g=ko(m);return g&&Mn(c,g,m),g};function ov(c,m,g){c>>>=0,m>>>=0,g>>>=0;var $=new Date().getFullYear(),C=new Date($,0,1),R=new Date($,6,1),L=C.getTimezoneOffset(),W=R.getTimezoneOffset(),Y=Math.max(L,W);ie[c>>>2>>>0]=Y*60,V[m>>>2>>>0]=+(L!=W);function ae(ct){var Pt=ct.toTimeString().match(/\(([A-Za-z ]+)\)$/);return Pt?Pt[1]:"GMT"}var de=ae(C),we=ae(R),Oe=Ll(de),et=Ll(we);W<L?(ie[g>>>2>>>0]=Oe,ie[g+4>>>2>>>0]=et):(ie[g>>>2>>>0]=et,ie[g+4>>>2>>>0]=Oe)}var iv=()=>{Jt("")},Ns=[],av=(c,m)=>{Ns.length=0;for(var g;g=X[c++>>>0];){var $=g!=105;$&=g!=112,m+=$&&m%8?4:0,Ns.push(g==112?ie[m>>>2>>>0]:g==106?Me[m>>>3]:g==105?V[m>>>2>>>0]:Ie[m>>>3>>>0]),m+=$?8:4}return Ns},Ul=(c,m,g)=>{var $=av(m,g);return Yr[c].apply(null,$)};function sv(c,m,g){return c>>>=0,m>>>=0,g>>>=0,Ul(c,m,g)}function uv(c,m,g){return c>>>=0,m>>>=0,g>>>=0,Ul(c,m,g)}var lv=()=>Date.now(),Fl=()=>4294901760;function dv(){return Fl()}var Vl;Vl=()=>performance.now();var cv=c=>{var m=j.buffer,g=(c-m.byteLength+65535)/65536;try{return j.grow(g),fe(),1}catch{}};function fv(c){c>>>=0;var m=X.length,g=Fl();if(c>g)return!1;for(var $=(Y,ae)=>Y+(ae-Y%ae)%ae,C=1;C<=4;C*=2){var R=m*(1+.2/C);R=Math.min(R,c+100663296);var L=Math.min(g,$(Math.max(c,R),65536)),W=cv(L);if(W)return!0}return!1}var Ls={},pv=()=>u||"./this.program",Po=()=>{if(!Po.strings){var c=(typeof navigator=="object"&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",m={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:c,_:pv()};for(var g in Ls)Ls[g]===void 0?delete m[g]:m[g]=Ls[g];var $=[];for(var g in m)$.push(`${g}=${m[g]}`);Po.strings=$}return Po.strings},mv=(c,m)=>{for(var g=0;g<c.length;++g)Q[m++>>>0>>>0]=c.charCodeAt(g);Q[m>>>0>>>0]=0},hv=function(c,m){c>>>=0,m>>>=0;var g=0;return Po().forEach(($,C)=>{var R=m+g;ie[c+C*4>>>2>>>0]=R,mv($,R),g+=$.length+1}),0},gv=function(c,m){c>>>=0,m>>>=0;var g=Po();ie[c>>>2>>>0]=g.length;var $=0;return g.forEach(C=>$+=C.length+1),ie[m>>>2>>>0]=$,0},yv=c=>52;function bv(c,m,g,$){return m>>>=0,g>>>=0,$>>>=0,52}function vv(c,m,g,$){return m=Xr(m),$>>>=0,70}var wv=[null,[],[]],_v=(c,m)=>{var g=wv[c];m===0||m===10?((c===1?P:k)(go(g,0)),g.length=0):g.push(m)};function xv(c,m,g,$){m>>>=0,g>>>=0,$>>>=0;for(var C=0,R=0;R<g;R++){var L=ie[m>>>2>>>0],W=ie[m+4>>>2>>>0];m+=8;for(var Y=0;Y<W;Y++)_v(c,X[L+Y>>>0]);C+=W}return ie[$>>>2>>>0]=C,0}var $v=(c,m)=>{for(var g=0,$=0;$<=m;g+=c[$++]);return g},Gl=[31,29,31,30,31,30,31,31,30,31,30,31],Wl=[31,28,31,30,31,30,31,31,30,31,30,31],Tv=(c,m)=>{for(var g=new Date(c.getTime());m>0;){var $=ze(g.getFullYear()),C=g.getMonth(),R=($?Gl:Wl)[C];if(m>R-g.getDate())m-=R-g.getDate()+1,g.setDate(1),C<11?g.setMonth(C+1):(g.setMonth(0),g.setFullYear(g.getFullYear()+1));else return g.setDate(g.getDate()+m),g}return g};function Sv(c,m,g){var $=g>0?g:pn(c)+1,C=new Array($),R=yo(c,C,0,C.length);return m&&(C.length=R),C}var Iv=(c,m)=>{Q.set(c,m>>>0)};function Hl(c,m,g,$){c>>>=0,m>>>=0,g>>>=0,$>>>=0;var C=ie[$+40>>>2>>>0],R={tm_sec:V[$>>>2>>>0],tm_min:V[$+4>>>2>>>0],tm_hour:V[$+8>>>2>>>0],tm_mday:V[$+12>>>2>>>0],tm_mon:V[$+16>>>2>>>0],tm_year:V[$+20>>>2>>>0],tm_wday:V[$+24>>>2>>>0],tm_yday:V[$+28>>>2>>>0],tm_isdst:V[$+32>>>2>>>0],tm_gmtoff:V[$+36>>>2>>>0],tm_zone:C?$t(C):""},L=$t(g),W={"%c":"%a %b %d %H:%M:%S %Y","%D":"%m/%d/%y","%F":"%Y-%m-%d","%h":"%b","%r":"%I:%M:%S %p","%R":"%H:%M","%T":"%H:%M:%S","%x":"%m/%d/%y","%X":"%H:%M:%S","%Ec":"%c","%EC":"%C","%Ex":"%m/%d/%y","%EX":"%H:%M:%S","%Ey":"%y","%EY":"%Y","%Od":"%d","%Oe":"%e","%OH":"%H","%OI":"%I","%Om":"%m","%OM":"%M","%OS":"%S","%Ou":"%u","%OU":"%U","%OV":"%V","%Ow":"%w","%OW":"%W","%Oy":"%y"};for(var Y in W)L=L.replace(new RegExp(Y,"g"),W[Y]);var ae=["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],de=["January","February","March","April","May","June","July","August","September","October","November","December"];function we(te,De,rr){for(var Ht=typeof te=="number"?te.toString():te||"";Ht.length<De;)Ht=rr[0]+Ht;return Ht}function Oe(te,De){return we(te,De,"0")}function et(te,De){function rr(Yi){return Yi<0?-1:Yi>0?1:0}var Ht;return(Ht=rr(te.getFullYear()-De.getFullYear()))===0&&(Ht=rr(te.getMonth()-De.getMonth()))===0&&(Ht=rr(te.getDate()-De.getDate())),Ht}function ct(te){switch(te.getDay()){case 0:return new Date(te.getFullYear()-1,11,29);case 1:return te;case 2:return new Date(te.getFullYear(),0,3);case 3:return new Date(te.getFullYear(),0,2);case 4:return new Date(te.getFullYear(),0,1);case 5:return new Date(te.getFullYear()-1,11,31);case 6:return new Date(te.getFullYear()-1,11,30)}}function Pt(te){var De=Tv(new Date(te.tm_year+1900,0,1),te.tm_yday),rr=new Date(De.getFullYear(),0,4),Ht=new Date(De.getFullYear()+1,0,4),Yi=ct(rr),lw=ct(Ht);return et(Yi,De)<=0?et(lw,De)<=0?De.getFullYear()+1:De.getFullYear():De.getFullYear()-1}var Do={"%a":te=>ae[te.tm_wday].substring(0,3),"%A":te=>ae[te.tm_wday],"%b":te=>de[te.tm_mon].substring(0,3),"%B":te=>de[te.tm_mon],"%C":te=>{var De=te.tm_year+1900;return Oe(De/100|0,2)},"%d":te=>Oe(te.tm_mday,2),"%e":te=>we(te.tm_mday,2," "),"%g":te=>Pt(te).toString().substring(2),"%G":te=>Pt(te),"%H":te=>Oe(te.tm_hour,2),"%I":te=>{var De=te.tm_hour;return De==0?De=12:De>12&&(De-=12),Oe(De,2)},"%j":te=>Oe(te.tm_mday+$v(ze(te.tm_year+1900)?Gl:Wl,te.tm_mon-1),3),"%m":te=>Oe(te.tm_mon+1,2),"%M":te=>Oe(te.tm_min,2),"%n":()=>`
`,"%p":te=>te.tm_hour>=0&&te.tm_hour<12?"AM":"PM","%S":te=>Oe(te.tm_sec,2),"%t":()=>"	","%u":te=>te.tm_wday||7,"%U":te=>{var De=te.tm_yday+7-te.tm_wday;return Oe(Math.floor(De/7),2)},"%V":te=>{var De=Math.floor((te.tm_yday+7-(te.tm_wday+6)%7)/7);if((te.tm_wday+371-te.tm_yday-2)%7<=2&&De++,De){if(De==53){var Ht=(te.tm_wday+371-te.tm_yday)%7;Ht!=4&&(Ht!=3||!ze(te.tm_year))&&(De=1)}}else{De=52;var rr=(te.tm_wday+7-te.tm_yday-1)%7;(rr==4||rr==5&&ze(te.tm_year%400-1))&&De++}return Oe(De,2)},"%w":te=>te.tm_wday,"%W":te=>{var De=te.tm_yday+7-(te.tm_wday+6)%7;return Oe(Math.floor(De/7),2)},"%y":te=>(te.tm_year+1900).toString().substring(2),"%Y":te=>te.tm_year+1900,"%z":te=>{var De=te.tm_gmtoff,rr=De>=0;return De=Math.abs(De)/60,De=De/60*100+De%60,(rr?"+":"-")+("0000"+De).slice(-4)},"%Z":te=>te.tm_zone,"%%":()=>"%"};L=L.replace(/%%/g,"\0\0");for(var Y in Do)L.includes(Y)&&(L=L.replace(new RegExp(Y,"g"),Do[Y](R)));L=L.replace(/\0\0/g,"%");var Us=Sv(L,!1);return Us.length>m?0:(Iv(Us,c),Us.length-1)}function Av(c,m,g,$,C){return c>>>=0,m>>>=0,g>>>=0,$>>>=0,C>>>=0,Hl(c,m,g,$)}xi(),_o=n.BindingError=class extends Error{constructor(m){super(m),this.name="BindingError"}},$i=n.InternalError=class extends Error{constructor(m){super(m),this.name="InternalError"}},xo(),Ai();var Ov={K:po,a:ho,A:Es,ia:ci,ha:bo,ga:fi,fa:pi,ea:mi,da:hi,ca:gi,I:yi,ba:bi,aa:vi,$:wi,_:_i,F:Si,W:at,V:Oi,E:Ei,t:Ci,o:Pi,D:ks,y:Di,U:Bi,T:So,u:zs,x:Wn,n:Fi,k:Hn,b:hn,w:Oo,m:Gi,i:ji,r:f,f:v,s:S,l:O,e:z,j:G,h:xe,g:ye,c:ge,S:ve,R:We,Q:Gr,P:qi,O:nv,N:ov,v:iv,d:sv,C:uv,B:lv,M:dv,q:Vl,L:fv,Z:hv,Y:gv,z:yv,H:bv,X:vv,G:xv,J:Hl,p:Av},be=Os(),Ev=()=>(Ev=be.ka)(),Cv=n._OrtInit=(c,m)=>(Cv=n._OrtInit=be.la)(c,m),Pv=n._OrtGetLastError=(c,m)=>(Pv=n._OrtGetLastError=be.ma)(c,m),kv=n._OrtCreateSessionOptions=(c,m,g,$,C,R,L,W,Y,ae)=>(kv=n._OrtCreateSessionOptions=be.na)(c,m,g,$,C,R,L,W,Y,ae),Dv=n._OrtAppendExecutionProvider=(c,m)=>(Dv=n._OrtAppendExecutionProvider=be.oa)(c,m),Bv=n._OrtAddFreeDimensionOverride=(c,m,g)=>(Bv=n._OrtAddFreeDimensionOverride=be.pa)(c,m,g),Rv=n._OrtAddSessionConfigEntry=(c,m,g)=>(Rv=n._OrtAddSessionConfigEntry=be.qa)(c,m,g),zv=n._OrtReleaseSessionOptions=c=>(zv=n._OrtReleaseSessionOptions=be.ra)(c),Mv=n._OrtCreateSession=(c,m,g)=>(Mv=n._OrtCreateSession=be.sa)(c,m,g),Nv=n._OrtReleaseSession=c=>(Nv=n._OrtReleaseSession=be.ta)(c),Lv=n._OrtGetInputOutputCount=(c,m,g)=>(Lv=n._OrtGetInputOutputCount=be.ua)(c,m,g),Uv=n._OrtGetInputName=(c,m)=>(Uv=n._OrtGetInputName=be.va)(c,m),Fv=n._OrtGetOutputName=(c,m)=>(Fv=n._OrtGetOutputName=be.wa)(c,m),Vv=n._OrtFree=c=>(Vv=n._OrtFree=be.xa)(c),Gv=n._OrtCreateTensor=(c,m,g,$,C,R)=>(Gv=n._OrtCreateTensor=be.ya)(c,m,g,$,C,R),Wv=n._OrtGetTensorData=(c,m,g,$,C)=>(Wv=n._OrtGetTensorData=be.za)(c,m,g,$,C),Hv=n._OrtReleaseTensor=c=>(Hv=n._OrtReleaseTensor=be.Aa)(c),jv=n._OrtCreateRunOptions=(c,m,g,$)=>(jv=n._OrtCreateRunOptions=be.Ba)(c,m,g,$),qv=n._OrtAddRunConfigEntry=(c,m,g)=>(qv=n._OrtAddRunConfigEntry=be.Ca)(c,m,g),Kv=n._OrtReleaseRunOptions=c=>(Kv=n._OrtReleaseRunOptions=be.Da)(c),Yv=n._OrtCreateBinding=c=>(Yv=n._OrtCreateBinding=be.Ea)(c),Xv=n._OrtBindInput=(c,m,g)=>(Xv=n._OrtBindInput=be.Fa)(c,m,g),Zv=n._OrtBindOutput=(c,m,g,$)=>(Zv=n._OrtBindOutput=be.Ga)(c,m,g,$),Jv=n._OrtClearBoundOutputs=c=>(Jv=n._OrtClearBoundOutputs=be.Ha)(c),Qv=n._OrtReleaseBinding=c=>(Qv=n._OrtReleaseBinding=be.Ia)(c),ew=n._OrtRunWithBinding=(c,m,g,$,C)=>(ew=n._OrtRunWithBinding=be.Ja)(c,m,g,$,C),tw=n._OrtRun=(c,m,g,$,C,R,L,W)=>(tw=n._OrtRun=be.Ka)(c,m,g,$,C,R,L,W),rw=n._OrtEndProfiling=c=>(rw=n._OrtEndProfiling=be.La)(c),nw=n._JsepOutput=(c,m,g)=>(nw=n._JsepOutput=be.Ma)(c,m,g),ow=n._JsepGetNodeName=c=>(ow=n._JsepGetNodeName=be.Na)(c),jl=()=>(jl=be.Oa)(),ko=n._malloc=c=>(ko=n._malloc=be.Pa)(c),Sr=n._free=c=>(Sr=n._free=be.Qa)(c),ql=c=>(ql=be.Ra)(c),iw=(c,m)=>(iw=be.setThrew)(c,m),Kl=()=>(Kl=be.Ta)(),Yl=c=>(Yl=be.Ua)(c),Xl=c=>(Xl=be.Va)(c),aw=c=>(aw=be.__cxa_decrement_exception_refcount)(c),sw=c=>(sw=be.__cxa_increment_exception_refcount)(c),Zl=c=>(Zl=be.Wa)(c),Jl=c=>(Jl=be.Xa)(c),Ql=()=>(Ql=be.Ya)(),ed=c=>(ed=be.Za)(c),td=()=>(td=be._a)(),HT=n.___start_em_js=1390356,jT=n.___stop_em_js=1390517;function uw(c){c=Object.assign({},c);var m=$=>()=>$()>>>0,g=$=>C=>$(C)>>>0;return c.Oa=m(c.Oa),c.Pa=g(c.Pa),c.Ra=g(c.Ra),c.Ta=m(c.Ta),c.Va=g(c.Va),c}n.stackAlloc=Xl,n.stackSave=Kl,n.stackRestore=Yl,n.UTF8ToString=$t,n.stringToUTF8=Mn,n.lengthBytesUTF8=pn;var Ki;ft=function c(){Ki||rd(),Ki||(ft=c)};function rd(){if(mt>0||(ue(),mt>0))return;function c(){Ki||(Ki=!0,n.calledRun=!0,!Z&&(ke(),t(n),Et()))}c()}return rd(),e.ready}})();typeof Vh=="object"&&typeof Ju=="object"?Ju.exports=Fh:typeof define=="function"&&define.amd&&define([],()=>Fh)});var Wh=st(()=>{});var Hh=st(()=>{});var jh={};Qr(jh,{cpus:()=>H2});var H2,qh=D(()=>{H2=void 0});var Xh=st((Yh,Qu)=>{"use strict";var Kh=(()=>{var r=typeof document<"u"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename<"u"&&(r=r||__filename),function(e={}){function n(){return ie.buffer!=fe.buffer&&ke(),fe}function t(){return ie.buffer!=fe.buffer&&ke(),Ee}function o(){return ie.buffer!=fe.buffer&&ke(),Te}function i(){return ie.buffer!=fe.buffer&&ke(),_t}function s(){return ie.buffer!=fe.buffer&&ke(),q}function a(){return ie.buffer!=fe.buffer&&ke(),ue}var u=e,l,d;u.ready=new Promise((f,v)=>{l=f,d=v}),u.jsepInit=(f,v,S,O,z,G,K,xe)=>{u.Qb=f,u.wb=v,u.yb=S,u.jb=O,u.xb=z,u.Ea=G,u.zb=K,u.Ab=xe,v=(ye,ge,ve)=>(...ze)=>{let je=tr,M=ge?.();ze=ye(...ze);let $e=ge?.();return M!==$e&&(ye=$e,ve(M),ge=ve=null),tr!=je?Io():ze},S=ye=>async(...ge)=>{try{if(u.bb)throw Error("Session already started");let ve=u.bb={Fb:ge[0],errors:[]},ze=await ye(...ge);if(u.bb!==ve)throw Error("Session mismatch");f.flush();let je=ve.errors;if(0<je.length){let M=await Promise.all(je);if(M=M.filter($e=>$e),0<M.length)throw Error(M.join(`
`))}return ze}finally{u.bb=null}},u._OrtRun=S(v(u._OrtRun,()=>u._OrtRun,ye=>u._OrtRun=ye)),u._OrtRunWithBinding=S(v(u._OrtRunWithBinding,()=>u._OrtRunWithBinding,ye=>u._OrtRunWithBinding=ye)),u._OrtBindInput=v(u._OrtBindInput,()=>u._OrtBindInput,ye=>u._OrtBindInput=ye),u.jsepRegisterBuffer=(ye,ge,ve,ze)=>f.registerBuffer(ye,ge,ve,ze),u.jsepUnregisterBuffers=ye=>{f.unregisterBuffers(ye)},u.jsepGetBuffer=ye=>f.getBuffer(ye),u.jsepCreateDownloader=(ye,ge,ve)=>f.createDownloader(ye,ge,ve)};var p=Object.assign({},u),h="./this.program",y=(f,v)=>{throw v},b=typeof window=="object",w=typeof importScripts=="function",T=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",x=u.ENVIRONMENT_IS_PTHREAD||!1,_="";function A(f){return u.locateFile?u.locateFile(f,_):_+f}var P,k,N;if(T){var j=(Ya(),Ir(Ka)),Z=(Zu(),Ir(Xu));_=w?Z.dirname(_)+"/":__dirname+"/",P=(v,S)=>(v=v.startsWith("file://")?new URL(v):Z.normalize(v),j.readFileSync(v,S?void 0:"utf8")),N=v=>(v=P(v,!0),v.buffer||(v=new Uint8Array(v)),v),k=(v,S,O,z=!0)=>{v=v.startsWith("file://")?new URL(v):Z.normalize(v),j.readFile(v,z?void 0:"utf8",(G,K)=>{G?O(G):S(z?K.buffer:K)})},!u.thisProgram&&1<process.argv.length&&(h=process.argv[1].replace(/\\/g,"/")),process.argv.slice(2),y=(v,S)=>{throw process.exitCode=v,S},u.inspect=()=>"[Emscripten Module object]";let f;try{f=Wh()}catch(v){throw console.error('The "worker_threads" module is not supported in this node.js build - perhaps a newer version is needed?'),v}global.Worker=f.Worker}else(b||w)&&(w?_=self.location.href:typeof document<"u"&&document.currentScript&&(_=document.currentScript.src),typeof r<"u"&&r&&(_=r),_.indexOf("blob:")!==0?_=_.substr(0,_.replace(/[?#].*/,"").lastIndexOf("/")+1):_="",T||(P=f=>{var v=new XMLHttpRequest;return v.open("GET",f,!1),v.send(null),v.responseText},w&&(N=f=>{var v=new XMLHttpRequest;return v.open("GET",f,!1),v.responseType="arraybuffer",v.send(null),new Uint8Array(v.response)}),k=(f,v,S)=>{var O=new XMLHttpRequest;O.open("GET",f,!0),O.responseType="arraybuffer",O.onload=()=>{O.status==200||O.status==0&&O.response?v(O.response):S()},O.onerror=S,O.send(null)}));T&&typeof performance>"u"&&(global.performance=Hh().performance);var se=console.log.bind(console),Q=console.error.bind(console);T&&(se=(...f)=>j.writeSync(1,f.join(" ")+`
`),Q=(...f)=>j.writeSync(2,f.join(" ")+`
`));var X=u.print||se,Be=u.printErr||Q;Object.assign(u,p),p=null,u.thisProgram&&(h=u.thisProgram),u.quit&&(y=u.quit);var qe;u.wasmBinary&&(qe=u.wasmBinary);var V=u.noExitRuntime||!0;typeof WebAssembly!="object"&&Qt("no native wasm support detected");var ie,H,Me,Pe=!1,Ie,fe,Ee,Te,_t,q,ue;function ke(){var f=ie.buffer;u.HEAP8=fe=new Int8Array(f),u.HEAP16=new Int16Array(f),u.HEAP32=Te=new Int32Array(f),u.HEAPU8=Ee=new Uint8Array(f),u.HEAPU16=new Uint16Array(f),u.HEAPU32=_t=new Uint32Array(f),u.HEAPF32=q=new Float32Array(f),u.HEAPF64=ue=new Float64Array(f)}var Et=u.INITIAL_MEMORY||16777216;if(5242880<=Et||Qt("INITIAL_MEMORY should be larger than STACK_SIZE, was "+Et+"! (STACK_SIZE=5242880)"),x)ie=u.wasmMemory;else if(u.wasmMemory)ie=u.wasmMemory;else if(ie=new WebAssembly.Memory({initial:Et/65536,maximum:65536,shared:!0}),!(ie.buffer instanceof SharedArrayBuffer))throw Be("requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag"),T&&Be("(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and/or recent version)"),Error("bad memory");ke(),Et=ie.buffer.byteLength;var xt=[],Ct=[],mt=[],yt=0;function ft(){return V||0<yt}var Dt=0,Kr=null,Jt=null;function oi(){Dt++,u.monitorRunDependencies&&u.monitorRunDependencies(Dt)}function fo(){if(Dt--,u.monitorRunDependencies&&u.monitorRunDependencies(Dt),Dt==0&&(Kr!==null&&(clearInterval(Kr),Kr=null),Jt)){var f=Jt;Jt=null,f()}}function Qt(f){throw u.onAbort&&u.onAbort(f),f="Aborted("+f+")",Be(f),Pe=!0,Ie=1,f=new WebAssembly.RuntimeError(f+". Build with -sASSERTIONS for more info."),d(f),f}function Ur(f){return f.startsWith("data:application/octet-stream;base64,")}var Fr;Fr="ort-wasm-simd-threaded.wasm",Ur(Fr)||(Fr=A(Fr));function ii(f){if(f==Fr&&qe)return new Uint8Array(qe);if(N)return N(f);throw"both async and sync fetching of the wasm failed"}function ai(f){if(!qe&&(b||w)){if(typeof fetch=="function"&&!f.startsWith("file://"))return fetch(f,{credentials:"same-origin"}).then(v=>{if(!v.ok)throw"failed to load wasm binary file at '"+f+"'";return v.arrayBuffer()}).catch(()=>ii(f));if(k)return new Promise((v,S)=>{k(f,O=>v(new Uint8Array(O)),S)})}return Promise.resolve().then(()=>ii(f))}function si(f,v,S){return ai(f).then(O=>WebAssembly.instantiate(O,v)).then(O=>O).then(S,O=>{Be("failed to asynchronously prepare wasm: "+O),Qt(O)})}function Os(f,v){var S=Fr;return qe||typeof WebAssembly.instantiateStreaming!="function"||Ur(S)||S.startsWith("file://")||T||typeof fetch!="function"?si(S,f,v):fetch(S,{credentials:"same-origin"}).then(O=>WebAssembly.instantiateStreaming(O,f).then(v,function(z){return Be("wasm streaming compile failed: "+z),Be("falling back to ArrayBuffer instantiation"),si(S,f,v)}))}var Yr,po={912252:f=>{u.Ea("Abs",f,void 0)},912303:f=>{u.Ea("Neg",f,void 0)},912354:f=>{u.Ea("Floor",f,void 0)},912407:f=>{u.Ea("Ceil",f,void 0)},912459:f=>{u.Ea("Reciprocal",f,void 0)},912517:f=>{u.Ea("Sqrt",f,void 0)},912569:f=>{u.Ea("Exp",f,void 0)},912620:f=>{u.Ea("Erf",f,void 0)},912671:f=>{u.Ea("Sigmoid",f,void 0)},912726:f=>{u.Ea("Log",f,void 0)},912777:f=>{u.Ea("Sin",f,void 0)},912828:f=>{u.Ea("Cos",f,void 0)},912879:f=>{u.Ea("Tan",f,void 0)},912930:f=>{u.Ea("Asin",f,void 0)},912982:f=>{u.Ea("Acos",f,void 0)},913034:f=>{u.Ea("Atan",f,void 0)},913086:f=>{u.Ea("Sinh",f,void 0)},913138:f=>{u.Ea("Cosh",f,void 0)},913190:f=>{u.Ea("Asinh",f,void 0)},913243:f=>{u.Ea("Acosh",f,void 0)},913296:f=>{u.Ea("Atanh",f,void 0)},913349:f=>{u.Ea("Tanh",f,void 0)},913401:f=>{u.Ea("Not",f,void 0)},913452:(f,v,S)=>{u.Ea("ClipV10",f,{min:v,max:S})},913524:f=>{u.Ea("Clip",f,void 0)},913576:(f,v)=>{u.Ea("Elu",f,{alpha:v})},913634:f=>{u.Ea("Relu",f,void 0)},913686:(f,v)=>{u.Ea("LeakyRelu",f,{alpha:v})},913750:(f,v)=>{u.Ea("ThresholdedRelu",f,{alpha:v})},913820:(f,v)=>{u.Ea("Cast",f,{to:v})},913878:f=>{u.Ea("Add",f,void 0)},913929:f=>{u.Ea("Sub",f,void 0)},913980:f=>{u.Ea("Mul",f,void 0)},914031:f=>{u.Ea("Div",f,void 0)},914082:f=>{u.Ea("Pow",f,void 0)},914133:f=>{u.Ea("Equal",f,void 0)},914186:f=>{u.Ea("Greater",f,void 0)},914241:f=>{u.Ea("GreaterOrEqual",f,void 0)},914303:f=>{u.Ea("Less",f,void 0)},914355:f=>{u.Ea("LessOrEqual",f,void 0)},914414:(f,v,S,O,z)=>{u.Ea("ReduceMean",f,{keepDims:!!v,noopWithEmptyAxes:!!S,axes:O?Array.from(o().subarray(z>>>0,z+O>>>0)):[]})},914578:(f,v,S,O,z)=>{u.Ea("ReduceMax",f,{keepDims:!!v,noopWithEmptyAxes:!!S,axes:O?Array.from(o().subarray(z>>>0,z+O>>>0)):[]})},914741:(f,v,S,O,z)=>{u.Ea("ReduceMin",f,{keepDims:!!v,noopWithEmptyAxes:!!S,axes:O?Array.from(o().subarray(z>>>0,z+O>>>0)):[]})},914904:(f,v,S,O,z)=>{u.Ea("ReduceProd",f,{keepDims:!!v,noopWithEmptyAxes:!!S,axes:O?Array.from(o().subarray(z>>>0,z+O>>>0)):[]})},915068:(f,v,S,O,z)=>{u.Ea("ReduceSum",f,{keepDims:!!v,noopWithEmptyAxes:!!S,axes:O?Array.from(o().subarray(z>>>0,z+O>>>0)):[]})},915231:(f,v,S,O,z)=>{u.Ea("ReduceL1",f,{keepDims:!!v,noopWithEmptyAxes:!!S,axes:O?Array.from(o().subarray(z>>>0,z+O>>>0)):[]})},915393:(f,v,S,O,z)=>{u.Ea("ReduceL2",f,{keepDims:!!v,noopWithEmptyAxes:!!S,axes:O?Array.from(o().subarray(z>>>0,z+O>>>0)):[]})},915555:(f,v,S,O,z)=>{u.Ea("ReduceLogSum",f,{keepDims:!!v,noopWithEmptyAxes:!!S,axes:O?Array.from(o().subarray(z>>>0,z+O>>>0)):[]})},915721:(f,v,S,O,z)=>{u.Ea("ReduceSumSquare",f,{keepDims:!!v,noopWithEmptyAxes:!!S,axes:O?Array.from(o().subarray(z>>>0,z+O>>>0)):[]})},915890:(f,v,S,O,z)=>{u.Ea("ReduceLogSumExp",f,{keepDims:!!v,noopWithEmptyAxes:!!S,axes:O?Array.from(o().subarray(z>>>0,z+O>>>0)):[]})},916059:f=>{u.Ea("Where",f,void 0)},916112:(f,v,S)=>{u.Ea("Transpose",f,{perm:v?Array.from(o().subarray(S>>>0,S+v>>>0)):[]})},916225:(f,v,S,O,z,G,K,xe,ye,ge,ve,ze,je,M,$e)=>{u.Ea("ConvTranspose",f,{format:ye?"NHWC":"NCHW",autoPad:v,dilations:[S],group:O,kernel_shape:[z],pads:[G,K],strides:[xe],wIsConst:()=>!!n()[ge>>>0],outputPadding:ve?Array.from(o().subarray(ze>>>0,ze+ve>>>0)):[],outputShape:je?Array.from(o().subarray(M>>>0,M+je>>>0)):[],activation:Bt($e)})},916639:(f,v,S,O,z,G,K,xe,ye,ge,ve,ze,je,M)=>{u.Ea("ConvTranspose",f,{format:xe?"NHWC":"NCHW",autoPad:v,dilations:Array.from(o().subarray(S>>>0,S+2>>>0)),group:O,kernelShape:Array.from(o().subarray(z>>>0,z+2>>>0)),pads:Array.from(o().subarray(G>>>0,G+4>>>0)),strides:Array.from(o().subarray(K>>>0,K+2>>>0)),wIsConst:()=>!!n()[ye>>>0],outputPadding:0<ge?Array.from(o().subarray(ve>>>0,ve+ge>>>0)):[],outputShape:0<ze?Array.from(o().subarray(je>>>0,je+ze>>>0)):[],activation:Bt(M)})},917196:(f,v,S,O,z,G,K,xe,ye,ge,ve,ze,je,M,$e)=>{u.Ea("ConvTranspose",f,{format:ye?"NHWC":"NCHW",autoPad:v,dilations:[S],group:O,kernel_shape:[z],pads:[G,K],strides:[xe],wIsConst:()=>!!n()[ge>>>0],outputPadding:ve?Array.from(o().subarray(ze>>>0,ze+ve>>>0)):[],outputShape:je?Array.from(o().subarray(M>>>0,M+je>>>0)):[],activation:Bt($e)})},917610:(f,v,S,O,z,G,K,xe,ye,ge,ve,ze,je,M)=>{u.Ea("ConvTranspose",f,{format:xe?"NHWC":"NCHW",autoPad:v,dilations:Array.from(o().subarray(S>>>0,S+2>>>0)),group:O,kernelShape:Array.from(o().subarray(z>>>0,z+2>>>0)),pads:Array.from(o().subarray(G>>>0,G+4>>>0)),strides:Array.from(o().subarray(K>>>0,K+2>>>0)),wIsConst:()=>!!n()[ye>>>0],outputPadding:0<ge?Array.from(o().subarray(ve>>>0,ve+ge>>>0)):[],outputShape:0<ze?Array.from(o().subarray(je>>>0,je+ze>>>0)):[],activation:Bt(M)})},918167:(f,v)=>{u.Ea("GlobalAveragePool",f,{format:v?"NHWC":"NCHW"})},918258:(f,v,S,O,z,G,K,xe,ye,ge,ve,ze,je,M,$e,We)=>{u.Ea("AveragePool",f,{format:We?"NHWC":"NCHW",auto_pad:v,ceil_mode:S,count_include_pad:O,storage_order:z,dilations:[G,K],kernel_shape:[xe,ye],pads:[ge,ve,ze,je],strides:[M,$e]})},918542:(f,v)=>{u.Ea("GlobalAveragePool",f,{format:v?"NHWC":"NCHW"})},918633:(f,v,S,O,z,G,K,xe,ye,ge,ve,ze,je,M,$e,We)=>{u.Ea("AveragePool",f,{format:We?"NHWC":"NCHW",auto_pad:v,ceil_mode:S,count_include_pad:O,storage_order:z,dilations:[G,K],kernel_shape:[xe,ye],pads:[ge,ve,ze,je],strides:[M,$e]})},918917:(f,v)=>{u.Ea("GlobalMaxPool",f,{format:v?"NHWC":"NCHW"})},919004:(f,v,S,O,z,G,K,xe,ye,ge,ve,ze,je,M,$e,We)=>{u.Ea("MaxPool",f,{format:We?"NHWC":"NCHW",auto_pad:v,ceil_mode:S,count_include_pad:O,storage_order:z,dilations:[G,K],kernel_shape:[xe,ye],pads:[ge,ve,ze,je],strides:[M,$e]})},919284:(f,v)=>{u.Ea("GlobalMaxPool",f,{format:v?"NHWC":"NCHW"})},919371:(f,v,S,O,z,G,K,xe,ye,ge,ve,ze,je,M,$e,We)=>{u.Ea("MaxPool",f,{format:We?"NHWC":"NCHW",auto_pad:v,ceil_mode:S,count_include_pad:O,storage_order:z,dilations:[G,K],kernel_shape:[xe,ye],pads:[ge,ve,ze,je],strides:[M,$e]})},919651:(f,v,S,O,z)=>{u.Ea("Gemm",f,{alpha:v,beta:S,transA:O,transB:z})},919755:f=>{u.Ea("MatMul",f,void 0)},919809:(f,v,S,O)=>{u.Ea("ArgMax",f,{keepDims:!!v,selectLastIndex:!!S,axis:O})},919917:(f,v,S,O)=>{u.Ea("ArgMin",f,{keepDims:!!v,selectLastIndex:!!S,axis:O})},920025:(f,v)=>{u.Ea("Softmax",f,{axis:v})},920088:(f,v)=>{u.Ea("Concat",f,{axis:v})},920148:(f,v,S,O,z)=>{u.Ea("Split",f,{axis:v,numOutputs:S,splitSizes:O?Array.from(o().subarray(z>>>0,z+O>>>0)):[]})},920293:f=>{u.Ea("Expand",f,void 0)},920347:(f,v)=>{u.Ea("Gather",f,{axis:Number(v)})},920418:(f,v)=>{u.Ea("GatherElements",f,{axis:Number(v)})},920497:(f,v,S,O,z,G,K,xe,ye,ge,ve)=>{u.Ea("Resize",f,{antialias:v,axes:S?Array.from(o().subarray(O>>>0,O+S>>>0)):[],coordinateTransformMode:Bt(z),cubicCoeffA:G,excludeOutside:K,extrapolationValue:xe,keepAspectRatioPolicy:Bt(ye),mode:Bt(ge),nearestMode:Bt(ve)})},920848:(f,v,S,O,z,G,K)=>{u.Ea("Slice",f,{starts:v?Array.from(o().subarray(S>>>0,S+v>>>0)):[],ends:O?Array.from(o().subarray(z>>>0,z+O>>>0)):[],axes:G?Array.from(o().subarray(K>>>0,K+G>>>0)):[]})},921079:f=>{u.Ea("Tile",f,void 0)},921131:(f,v,S)=>{u.Ea("LayerNormalization",f,{axis:Number(v),epsilon:Number(S)})},921238:(f,v,S)=>{u.Ea("InstanceNormalization",f,{epsilon:v,format:S?"NHWC":"NCHW"})},921352:(f,v,S)=>{u.Ea("InstanceNormalization",f,{epsilon:v,format:S?"NHWC":"NCHW"})},921466:f=>{u.Ea("Range",f,void 0)},921519:(f,v)=>{u.Ea("Einsum",f,{equation:Bt(v)})},921600:(f,v,S,O,z)=>{u.Ea("Pad",f,{mode:v,value:S,pads:O?Array.from(o().subarray(z>>>0,z+O>>>0)):[]})},921732:f=>{u.Ea("Gelu",f,void 0)},921784:f=>{u.Ea("BiasAdd",f,void 0)},921839:f=>{u.Ea("BiasSplitGelu",f,void 0)},921900:(f,v)=>{u.Ea("SkipLayerNormalization",f,{epsilon:v})},921981:(f,v,S,O,z,G,K,xe,ye,ge,ve,ze,je)=>{u.Ea("Conv",f,{format:ye?"NHWC":"NCHW",auto_pad:v,dilations:[S],group:O,kernel_shape:[z],pads:G?Array.from(o().subarray(K>>>0,K+G>>>0)):[],strides:[xe],w_is_const:()=>!!n()[ge>>>0],activation:Bt(ve),activation_params:ze?Array.from(s().subarray(je>>>0,je+ze>>>0)):[]})},922362:(f,v,S,O,z,G,K,xe,ye,ge,ve,ze,je,M,$e,We)=>{u.Ea("Conv",f,{format:ze?"NHWC":"NCHW",auto_pad:v,dilations:[S,O],group:z,kernel_shape:[G,K],pads:xe?Array.from(o().subarray(ye>>>0,ye+xe>>>0)):[],strides:[ge,ve],w_is_const:()=>!!n()[je>>>0],activation:Bt(M),activation_params:$e?Array.from(s().subarray(We>>>0,We+$e>>>0)):[]})},922764:f=>{u.zb(f)},922798:(f,v)=>u.Ab(f,v,u.bb.Fb,u.bb.errors),922910:f=>u.wb(f),922943:f=>u.yb(f),922975:(f,v,S)=>{u.jb(f,v,S,!0)},923014:(f,v,S)=>{u.jb(f,v,S)}};function dn(f){this.name="ExitStatus",this.message=`Program terminated with exit(${f})`,this.status=f}function cn(f){f.terminate(),f.onmessage=()=>{}}function ui(f){(f=Ae.Qa[f])||Qt(),Ae.Eb(f)}function mo(f){var v=Ae.tb();if(!v)return 6;Ae.Ya.push(v),Ae.Qa[f.Xa]=v,v.Xa=f.Xa;var S={cmd:"run",start_routine:f.Gb,arg:f.rb,pthread_ptr:f.Xa};return T&&v.unref(),v.postMessage(S,f.Mb),0}var li=typeof TextDecoder<"u"?new TextDecoder("utf8"):void 0,di=(f,v,S)=>{v>>>=0;var O=v+S;for(S=v;f[S]&&!(S>=O);)++S;if(16<S-v&&f.buffer&&li)return li.decode(f.buffer instanceof SharedArrayBuffer?f.slice(v,S):f.subarray(v,S));for(O="";v<S;){var z=f[v++];if(z&128){var G=f[v++]&63;if((z&224)==192)O+=String.fromCharCode((z&31)<<6|G);else{var K=f[v++]&63;z=(z&240)==224?(z&15)<<12|G<<6|K:(z&7)<<18|G<<12|K<<6|f[v++]&63,65536>z?O+=String.fromCharCode(z):(z-=65536,O+=String.fromCharCode(55296|z>>10,56320|z&1023))}}else O+=String.fromCharCode(z)}return O},Bt=(f,v)=>(f>>>=0)?di(t(),f,v):"";function Xr(f){if(x)return at(1,1,f);Ie=f,ft()||(Ae.Hb(),u.onExit&&u.onExit(f),Pe=!0),y(f,new dn(f))}var ho=f=>{if(Ie=f,x)throw go(f),"unwind";Xr(f)},Ae={ab:[],Ya:[],mb:[],Qa:{},gb:function(){x?Ae.vb():Ae.ub()},ub:function(){xt.unshift(()=>{oi(),Ae.Bb(()=>fo())})},vb:function(){Ae.receiveObjectTransfer=Ae.Db,Ae.threadInitTLS=Ae.lb,Ae.setExitStatus=Ae.kb,V=!1},kb:function(f){Ie=f},Sb:["$terminateWorker"],Hb:function(){for(var f of Ae.Ya)cn(f);for(f of Ae.ab)cn(f);Ae.ab=[],Ae.Ya=[],Ae.Qa=[]},Eb:function(f){var v=f.Xa;delete Ae.Qa[v],Ae.ab.push(f),Ae.Ya.splice(Ae.Ya.indexOf(f),1),f.Xa=0,pe(v)},Db:function(){},lb:function(){Ae.mb.forEach(f=>f())},Cb:f=>new Promise(v=>{f.onmessage=G=>{G=G.data;var K=G.cmd;if(G.targetThread&&G.targetThread!=Gn()){var xe=Ae.Qa[G.Rb];xe?xe.postMessage(G,G.transferList):Be('Internal error! Worker sent a message "'+K+'" to target pthread '+G.targetThread+", but that thread no longer exists!")}else K==="checkMailbox"?Zr():K==="spawnThread"?mo(G):K==="cleanupThread"?ui(G.thread):K==="killThread"?(G=G.thread,K=Ae.Qa[G],delete Ae.Qa[G],cn(K),pe(G),Ae.Ya.splice(Ae.Ya.indexOf(K),1),K.Xa=0):K==="cancelThread"?Ae.Qa[G.thread].postMessage({cmd:"cancel"}):K==="loaded"?(f.loaded=!0,v(f)):K==="alert"?alert("Thread "+G.threadId+": "+G.text):G.target==="setimmediate"?f.postMessage(G):K==="callHandler"?u[G.handler](...G.args):K&&Be("worker sent an unknown command "+K)},f.onerror=G=>{throw Be("worker sent an error! "+G.filename+":"+G.lineno+": "+G.message),G},T&&(f.on("message",function(G){f.onmessage({data:G})}),f.on("error",function(G){f.onerror(G)}));var S=[],O=["onExit","onAbort","print","printErr"],z;for(z of O)u.hasOwnProperty(z)&&S.push(z);f.postMessage({cmd:"load",handlers:S,urlOrBlob:u.mainScriptUrlOrBlob||r,wasmMemory:ie,wasmModule:Me})}),Bb:function(f){f()},qb:function(){var f=A("ort-wasm-simd-threaded.worker.js");f=new Worker(f),Ae.ab.push(f)},tb:function(){return Ae.ab.length==0&&(Ae.qb(),Ae.Cb(Ae.ab[0])),Ae.ab.pop()}};u.PThread=Ae;var fn=f=>{for(;0<f.length;)f.shift()(u)};u.establishStackSpace=function(){var f=Gn(),v=o()[f+52>>2>>>0];f=o()[f+56>>2>>>0],Vi(v,v-f),Hn(v)};function go(f){if(x)return at(2,0,f);ho(f)}u.invokeEntryPoint=function(f,v){f=Eo.apply(null,[f,v]),ft()?Ae.kb(f):Wn(f)};function $t(f){this.fb=f-24,this.pb=function(v){i()[this.fb+4>>2>>>0]=v},this.ob=function(v){i()[this.fb+8>>2>>>0]=v},this.gb=function(v,S){this.nb(),this.pb(v),this.ob(S)},this.nb=function(){i()[this.fb+16>>2>>>0]=0}}var Vr=0,Es=0;function ci(f,v,S,O){return x?at(3,1,f,v,S,O):pn(f,v,S,O)}function pn(f,v,S,O){if(f>>>=0,v>>>=0,S>>>=0,O>>>=0,typeof SharedArrayBuffer>"u")return Be("Current environment does not support SharedArrayBuffer, pthreads are not available!"),6;var z=[];return x&&z.length===0?ci(f,v,S,O):(f={Gb:S,Xa:f,rb:O,Mb:z},x?(f.Ob="spawnThread",postMessage(f,z),0):mo(f))}function yo(f,v,S){return x?at(4,1,f,v,S):0}function Mn(f,v){if(x)return at(5,1,f,v)}var bo=f=>{for(var v=0,S=0;S<f.length;++S){var O=f.charCodeAt(S);127>=O?v++:2047>=O?v+=2:55296<=O&&57343>=O?(v+=4,++S):v+=3}return v},fi=(f,v,S,O)=>{if(S>>>=0,!(0<O))return 0;var z=S;O=S+O-1;for(var G=0;G<f.length;++G){var K=f.charCodeAt(G);if(55296<=K&&57343>=K){var xe=f.charCodeAt(++G);K=65536+((K&1023)<<10)|xe&1023}if(127>=K){if(S>=O)break;v[S++>>>0]=K}else{if(2047>=K){if(S+1>=O)break;v[S++>>>0]=192|K>>6}else{if(65535>=K){if(S+2>=O)break;v[S++>>>0]=224|K>>12}else{if(S+3>=O)break;v[S++>>>0]=240|K>>18,v[S++>>>0]=128|K>>12&63}v[S++>>>0]=128|K>>6&63}v[S++>>>0]=128|K&63}}return v[S>>>0]=0,S-z},pi=(f,v,S)=>fi(f,t(),v,S);function mi(f,v){if(x)return at(6,1,f,v)}function hi(f,v,S){if(x)return at(7,1,f,v,S)}function gi(f,v,S){return x?at(8,1,f,v,S):0}function yi(f,v){if(x)return at(9,1,f,v)}function bi(f,v,S){if(x)return at(10,1,f,v,S)}function vi(f,v,S,O){if(x)return at(11,1,f,v,S,O)}function wi(f,v,S,O){if(x)return at(12,1,f,v,S,O)}function _i(f,v,S,O){if(x)return at(13,1,f,v,S,O)}function vo(f){if(x)return at(14,1,f)}function xi(f,v){if(x)return at(15,1,f,v)}function wo(f,v,S){if(x)return at(16,1,f,v,S)}var Wt=f=>{if(!Pe)try{if(f(),!ft())try{x?Wn(Ie):ho(Ie)}catch(v){v instanceof dn||v=="unwind"||y(1,v)}}catch(v){v instanceof dn||v=="unwind"||y(1,v)}};function mn(f){f>>>=0,typeof Atomics.Nb=="function"&&(Atomics.Nb(o(),f>>2,f).value.then(Zr),f+=128,Atomics.store(o(),f>>2,1))}u.__emscripten_thread_mailbox_await=mn;function Zr(){var f=Gn();f&&(mn(f),Wt(()=>gn()))}u.checkMailbox=Zr;var Jr=f=>f%4===0&&(f%100!==0||f%400===0),_o=[0,31,60,91,121,152,182,213,244,274,305,335],xr=[0,31,59,90,120,151,181,212,243,273,304,334];function $i(f,v,S,O,z,G,K,xe){return x?at(17,1,f,v,S,O,z,G,K,xe):-52}function Ti(f,v,S,O,z,G,K){if(x)return at(18,1,f,v,S,O,z,G,K)}var er=f=>{var v=bo(f)+1,S=Ao(v);return S&&pi(f,S,v),S},Nn=[],Si=(f,v)=>{Nn.length=0;var S;for(v>>=2;S=t()[f++>>>0];)v+=S!=105&v,Nn.push(S==105?o()[v>>>0]:a()[v++>>>1]),++v;return Nn},$r=f=>{var v=yn();return f=f(),Hn(v),f};function at(f,v){var S=arguments.length-2,O=arguments;return $r(()=>{for(var z=Oo(8*S),G=z>>3,K=0;K<S;K++){var xe=O[2+K];a()[G+K>>>0]=xe}return Ui(f,S,z,v)})}var xo=[],Ln={},Lt=()=>{if(!hn){var f={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:(typeof navigator=="object"&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",_:h||"./this.program"},v;for(v in Ln)Ln[v]===void 0?delete f[v]:f[v]=Ln[v];var S=[];for(v in f)S.push(`${v}=${f[v]}`);hn=S}return hn},hn;function Ii(f,v){if(x)return at(19,1,f,v);f>>>=0,v>>>=0;var S=0;return Lt().forEach(function(O,z){var G=v+S;for(z=i()[f+4*z>>2>>>0]=G,G=0;G<O.length;++G)n()[z++>>0>>>0]=O.charCodeAt(G);n()[z>>0>>>0]=0,S+=O.length+1}),0}function Ai(f,v){if(x)return at(20,1,f,v);f>>>=0,v>>>=0;var S=Lt();i()[f>>2>>>0]=S.length;var O=0;return S.forEach(function(z){O+=z.length+1}),i()[v>>2>>>0]=O,0}function rt(f){return x?at(21,1,f):52}function $o(f,v,S,O){return x?at(22,1,f,v,S,O):52}function Oi(f,v,S,O,z){return x?at(23,1,f,v,S,O,z):70}var Cs=[null,[],[]];function Ei(f,v,S,O){if(x)return at(24,1,f,v,S,O);v>>>=0,S>>>=0,O>>>=0;for(var z=0,G=0;G<S;G++){var K=i()[v>>2>>>0],xe=i()[v+4>>2>>>0];v+=8;for(var ye=0;ye<xe;ye++){var ge=t()[K+ye>>>0],ve=Cs[f];ge===0||ge===10?((f===1?X:Be)(di(ve,0)),ve.length=0):ve.push(ge)}z+=xe}return i()[O>>2>>>0]=z,0}var Ci=[31,29,31,30,31,30,31,31,30,31,30,31],Pi=[31,28,31,30,31,30,31,31,30,31,30,31];function Ps(f){var v=Array(bo(f)+1);return fi(f,v,0,v.length),v}var ks=(f,v)=>{n().set(f,v>>>0)};function To(f,v,S,O){function z(M,$e,We){for(M=typeof M=="number"?M.toString():M||"";M.length<$e;)M=We[0]+M;return M}function G(M,$e){return z(M,$e,"0")}function K(M,$e){function We(qi){return 0>qi?-1:0<qi?1:0}var Gr;return(Gr=We(M.getFullYear()-$e.getFullYear()))===0&&(Gr=We(M.getMonth()-$e.getMonth()))===0&&(Gr=We(M.getDate()-$e.getDate())),Gr}function xe(M){switch(M.getDay()){case 0:return new Date(M.getFullYear()-1,11,29);case 1:return M;case 2:return new Date(M.getFullYear(),0,3);case 3:return new Date(M.getFullYear(),0,2);case 4:return new Date(M.getFullYear(),0,1);case 5:return new Date(M.getFullYear()-1,11,31);case 6:return new Date(M.getFullYear()-1,11,30)}}function ye(M){var $e=M.Za;for(M=new Date(new Date(M.$a+1900,0,1).getTime());0<$e;){var We=M.getMonth(),Gr=(Jr(M.getFullYear())?Ci:Pi)[We];if($e>Gr-M.getDate())$e-=Gr-M.getDate()+1,M.setDate(1),11>We?M.setMonth(We+1):(M.setMonth(0),M.setFullYear(M.getFullYear()+1));else{M.setDate(M.getDate()+$e);break}}return We=new Date(M.getFullYear()+1,0,4),$e=xe(new Date(M.getFullYear(),0,4)),We=xe(We),0>=K($e,M)?0>=K(We,M)?M.getFullYear()+1:M.getFullYear():M.getFullYear()-1}f>>>=0,v>>>=0,S>>>=0,O>>>=0;var ge=o()[O+40>>2>>>0];O={Kb:o()[O>>2>>>0],Jb:o()[O+4>>2>>>0],cb:o()[O+8>>2>>>0],ib:o()[O+12>>2>>>0],eb:o()[O+16>>2>>>0],$a:o()[O+20>>2>>>0],Wa:o()[O+24>>2>>>0],Za:o()[O+28>>2>>>0],Tb:o()[O+32>>2>>>0],Ib:o()[O+36>>2>>>0],Lb:ge?Bt(ge):""},S=Bt(S),ge={"%c":"%a %b %d %H:%M:%S %Y","%D":"%m/%d/%y","%F":"%Y-%m-%d","%h":"%b","%r":"%I:%M:%S %p","%R":"%H:%M","%T":"%H:%M:%S","%x":"%m/%d/%y","%X":"%H:%M:%S","%Ec":"%c","%EC":"%C","%Ex":"%m/%d/%y","%EX":"%H:%M:%S","%Ey":"%y","%EY":"%Y","%Od":"%d","%Oe":"%e","%OH":"%H","%OI":"%I","%Om":"%m","%OM":"%M","%OS":"%S","%Ou":"%u","%OU":"%U","%OV":"%V","%Ow":"%w","%OW":"%W","%Oy":"%y"};for(var ve in ge)S=S.replace(new RegExp(ve,"g"),ge[ve]);var ze="Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "),je="January February March April May June July August September October November December".split(" ");ge={"%a":M=>ze[M.Wa].substring(0,3),"%A":M=>ze[M.Wa],"%b":M=>je[M.eb].substring(0,3),"%B":M=>je[M.eb],"%C":M=>G((M.$a+1900)/100|0,2),"%d":M=>G(M.ib,2),"%e":M=>z(M.ib,2," "),"%g":M=>ye(M).toString().substring(2),"%G":M=>ye(M),"%H":M=>G(M.cb,2),"%I":M=>(M=M.cb,M==0?M=12:12<M&&(M-=12),G(M,2)),"%j":M=>{for(var $e=0,We=0;We<=M.eb-1;$e+=(Jr(M.$a+1900)?Ci:Pi)[We++]);return G(M.ib+$e,3)},"%m":M=>G(M.eb+1,2),"%M":M=>G(M.Jb,2),"%n":()=>`
`,"%p":M=>0<=M.cb&&12>M.cb?"AM":"PM","%S":M=>G(M.Kb,2),"%t":()=>"	","%u":M=>M.Wa||7,"%U":M=>G(Math.floor((M.Za+7-M.Wa)/7),2),"%V":M=>{var $e=Math.floor((M.Za+7-(M.Wa+6)%7)/7);if(2>=(M.Wa+371-M.Za-2)%7&&$e++,$e)$e==53&&(We=(M.Wa+371-M.Za)%7,We==4||We==3&&Jr(M.$a)||($e=1));else{$e=52;var We=(M.Wa+7-M.Za-1)%7;(We==4||We==5&&Jr(M.$a%400-1))&&$e++}return G($e,2)},"%w":M=>M.Wa,"%W":M=>G(Math.floor((M.Za+7-(M.Wa+6)%7)/7),2),"%y":M=>(M.$a+1900).toString().substring(2),"%Y":M=>M.$a+1900,"%z":M=>{M=M.Ib;var $e=0<=M;return M=Math.abs(M)/60,($e?"+":"-")+("0000"+(M/60*100+M%60)).slice(-4)},"%Z":M=>M.Lb,"%%":()=>"%"},S=S.replace(/%%/g,"\0\0");for(ve in ge)S.includes(ve)&&(S=S.replace(new RegExp(ve,"g"),ge[ve](O)));return S=S.replace(/\0\0/g,"%"),ve=Ps(S),ve.length>v?0:(ks(ve,f),ve.length-1)}function Un(f){try{f()}catch(v){Qt(v)}}function Ds(f){var v={},S;for(S in f)(function(O){var z=f[O];v[O]=typeof z=="function"?function(){Fn.push(O);try{return z.apply(null,arguments)}finally{Pe||(Fn.pop()===O||Qt(),tr&&Tr===1&&Fn.length===0&&(Tr=0,yt+=1,Un(Wi),typeof Fibers<"u"&&Fibers.Ub()))}}:z})(S);return v}var Tr=0,tr=null,ki=0,Fn=[],Di={},Bi={},Bs=0,So=null,Rs=[];function Io(){return new Promise((f,v)=>{So={resolve:f,reject:v}})}function Ri(){var f=Ao(65548),v=f+12;i()[f>>2>>>0]=v,i()[f+4>>2>>>0]=v+65536,v=Fn[0];var S=Di[v];return S===void 0&&(S=Bs++,Di[v]=S,Bi[S]=v),v=S,o()[f+8>>2>>>0]=v,f}function zs(){var f=o()[tr+8>>2>>>0];return f=H[Bi[f]],--yt,f()}function Vn(f){if(!Pe){if(Tr===0){var v=!1,S=!1;f((O=0)=>{if(!Pe&&(ki=O,v=!0,S)){Tr=2,Un(()=>Hi(tr)),typeof Browser<"u"&&Browser.hb.sb&&Browser.hb.resume(),O=!1;try{var z=zs()}catch(xe){z=xe,O=!0}var G=!1;if(!tr){var K=So;K&&(So=null,(O?K.reject:K.resolve)(z),G=!0)}if(O&&!G)throw z}}),S=!0,v||(Tr=1,tr=Ri(),typeof Browser<"u"&&Browser.hb.sb&&Browser.hb.pause(),Un(()=>Gi(tr)))}else Tr===2?(Tr=0,Un(Co),Ni(tr),tr=null,Rs.forEach(O=>Wt(O))):Qt(`invalid state: ${Tr}`);return ki}}function zi(f){return Vn(v=>{f().then(v)})}Ae.gb();var Ms=[null,Xr,go,ci,yo,Mn,mi,hi,gi,yi,bi,vi,wi,_i,vo,xi,wo,$i,Ti,Ii,Ai,rt,$o,Oi,Ei],Mi={r:function(f,v,S){return zi(async()=>{await u.xb(f,v,S)})},b:function(f,v,S){throw f>>>=0,new $t(f).gb(v>>>0,S>>>0),Vr=f,Es++,Vr},O:function(f){Li(f>>>0,!w,1,!b,131072,!1),Ae.lb()},l:function(f){f>>>=0,x?postMessage({cmd:"cleanupThread",thread:f}):ui(f)},I:pn,i:yo,U:Mn,E:mi,G:hi,V:gi,S:yi,K:bi,R:vi,p:wi,F:_i,C:vo,T:xi,D:wo,q:()=>!0,A:function(f,v){f>>>=0,f==v>>>0?setTimeout(()=>Zr()):x?postMessage({targetThread:f,cmd:"checkMailbox"}):(f=Ae.Qa[f])&&f.postMessage({cmd:"checkMailbox"})},M:function(){return-1},N:mn,X:function(f){T&&Ae.Qa[f>>>0].ref()},u:function(f,v,S){f=v+2097152>>>0<4194305-!!f?(f>>>0)+4294967296*v:NaN,S>>>=0,f=new Date(1e3*f),o()[S>>2>>>0]=f.getUTCSeconds(),o()[S+4>>2>>>0]=f.getUTCMinutes(),o()[S+8>>2>>>0]=f.getUTCHours(),o()[S+12>>2>>>0]=f.getUTCDate(),o()[S+16>>2>>>0]=f.getUTCMonth(),o()[S+20>>2>>>0]=f.getUTCFullYear()-1900,o()[S+24>>2>>>0]=f.getUTCDay(),f=(f.getTime()-Date.UTC(f.getUTCFullYear(),0,1,0,0,0,0))/864e5|0,o()[S+28>>2>>>0]=f},v:function(f,v,S){f=v+2097152>>>0<4194305-!!f?(f>>>0)+4294967296*v:NaN,S>>>=0,f=new Date(1e3*f),o()[S>>2>>>0]=f.getSeconds(),o()[S+4>>2>>>0]=f.getMinutes(),o()[S+8>>2>>>0]=f.getHours(),o()[S+12>>2>>>0]=f.getDate(),o()[S+16>>2>>>0]=f.getMonth(),o()[S+20>>2>>>0]=f.getFullYear()-1900,o()[S+24>>2>>>0]=f.getDay(),v=(Jr(f.getFullYear())?_o:xr)[f.getMonth()]+f.getDate()-1|0,o()[S+28>>2>>>0]=v,o()[S+36>>2>>>0]=-(60*f.getTimezoneOffset()),v=new Date(f.getFullYear(),6,1).getTimezoneOffset();var O=new Date(f.getFullYear(),0,1).getTimezoneOffset();f=(v!=O&&f.getTimezoneOffset()==Math.min(O,v))|0,o()[S+32>>2>>>0]=f},w:function(f){f>>>=0;var v=new Date(o()[f+20>>2>>>0]+1900,o()[f+16>>2>>>0],o()[f+12>>2>>>0],o()[f+8>>2>>>0],o()[f+4>>2>>>0],o()[f>>2>>>0],0),S=o()[f+32>>2>>>0],O=v.getTimezoneOffset(),z=new Date(v.getFullYear(),6,1).getTimezoneOffset(),G=new Date(v.getFullYear(),0,1).getTimezoneOffset(),K=Math.min(G,z);return 0>S?o()[f+32>>2>>>0]=+(z!=G&&K==O):0<S!=(K==O)&&(z=Math.max(G,z),v.setTime(v.getTime()+6e4*((0<S?K:z)-O))),o()[f+24>>2>>>0]=v.getDay(),S=(Jr(v.getFullYear())?_o:xr)[v.getMonth()]+v.getDate()-1|0,o()[f+28>>2>>>0]=S,o()[f>>2>>>0]=v.getSeconds(),o()[f+4>>2>>>0]=v.getMinutes(),o()[f+8>>2>>>0]=v.getHours(),o()[f+12>>2>>>0]=v.getDate(),o()[f+16>>2>>>0]=v.getMonth(),o()[f+20>>2>>>0]=v.getYear(),f=v.getTime()/1e3,Fi((Yr=f,1<=+Math.abs(Yr)?0<Yr?+Math.floor(Yr/4294967296)>>>0:~~+Math.ceil((Yr-+(~~Yr>>>0))/4294967296)>>>0:0)),f>>>0},s:$i,t:Ti,z:function(f,v,S){function O(ge){return(ge=ge.toTimeString().match(/\(([A-Za-z ]+)\)$/))?ge[1]:"GMT"}f>>>=0,v>>>=0,S>>>=0;var z=new Date().getFullYear(),G=new Date(z,0,1),K=new Date(z,6,1);z=G.getTimezoneOffset();var xe=K.getTimezoneOffset(),ye=Math.max(z,xe);i()[f>>2>>>0]=60*ye,o()[v>>2>>>0]=+(z!=xe),f=O(G),v=O(K),f=er(f),v=er(v),xe<z?(i()[S>>2>>>0]=f,i()[S+4>>2>>>0]=v):(i()[S>>2>>>0]=v,i()[S+4>>2>>>0]=f)},d:()=>{Qt("")},c:function(f,v,S){return f>>>=0,v=Si(v>>>0,S>>>0),po[f].apply(null,v)},k:function(f,v,S){return f>>>=0,v=Si(v>>>0,S>>>0),po[f].apply(null,v)},m:function(){},j:function(){return Date.now()},W:()=>{throw yt+=1,"unwind"},B:function(){return 4294901760},f:()=>performance.timeOrigin+performance.now(),g:function(){return T?(qh(),Ir(jh)).cpus().length:navigator.hardwareConcurrency},L:function(f,v,S,O){for(Ae.Pb=v>>>0,xo.length=S,v=O>>>0>>3,O=0;O<S;O++)xo[O]=a()[v+O>>>0];return(0>f?po[-f-1]:Ms[f]).apply(null,xo)},y:function(f){f>>>=0;var v=t().length;if(f<=v||4294901760<f)return!1;for(var S=1;4>=S;S*=2){var O=v*(1+.2/S);O=Math.min(O,f+100663296);var z=Math;O=Math.max(f,O);e:{z=z.min.call(z,4294901760,O+(65536-O%65536)%65536)-ie.buffer.byteLength+65535>>>16;try{ie.grow(z),ke();var G=1;break e}catch{}G=void 0}if(G)return!0}return!1},P:Ii,Q:Ai,H:ho,h:rt,o:$o,x:Oi,n:Ei,a:ie||u.wasmMemory,J:To,e:function(f,v,S,O){return To(f>>>0,v>>>0,S>>>0,O>>>0)}};(function(){function f(S,O){return S=S.exports,S=Ds(S),H=S=Nl(S),Ae.mb.push(H.Da),Ct.unshift(H.Y),Me=O,fo(),S}var v={a:Mi};if(oi(),u.instantiateWasm)try{return u.instantiateWasm(v,f)}catch(S){Be("Module.instantiateWasm callback failed with error: "+S),d(S)}return Os(v,function(S){f(S.instance,S.module)}).catch(d),{}})(),u._OrtInit=(f,v)=>(u._OrtInit=H.Z)(f,v),u._OrtGetLastError=(f,v)=>(u._OrtGetLastError=H._)(f,v),u._OrtCreateSessionOptions=(f,v,S,O,z,G,K,xe,ye,ge)=>(u._OrtCreateSessionOptions=H.$)(f,v,S,O,z,G,K,xe,ye,ge),u._OrtAppendExecutionProvider=(f,v)=>(u._OrtAppendExecutionProvider=H.aa)(f,v),u._OrtAddFreeDimensionOverride=(f,v,S)=>(u._OrtAddFreeDimensionOverride=H.ba)(f,v,S),u._OrtAddSessionConfigEntry=(f,v,S)=>(u._OrtAddSessionConfigEntry=H.ca)(f,v,S),u._OrtReleaseSessionOptions=f=>(u._OrtReleaseSessionOptions=H.da)(f),u._OrtCreateSession=(f,v,S)=>(u._OrtCreateSession=H.ea)(f,v,S),u._OrtReleaseSession=f=>(u._OrtReleaseSession=H.fa)(f),u._OrtGetInputOutputCount=(f,v,S)=>(u._OrtGetInputOutputCount=H.ga)(f,v,S),u._OrtGetInputName=(f,v)=>(u._OrtGetInputName=H.ha)(f,v),u._OrtGetOutputName=(f,v)=>(u._OrtGetOutputName=H.ia)(f,v),u._OrtFree=f=>(u._OrtFree=H.ja)(f),u._OrtCreateTensor=(f,v,S,O,z,G)=>(u._OrtCreateTensor=H.ka)(f,v,S,O,z,G),u._OrtGetTensorData=(f,v,S,O,z)=>(u._OrtGetTensorData=H.la)(f,v,S,O,z),u._OrtReleaseTensor=f=>(u._OrtReleaseTensor=H.ma)(f),u._OrtCreateRunOptions=(f,v,S,O)=>(u._OrtCreateRunOptions=H.na)(f,v,S,O),u._OrtAddRunConfigEntry=(f,v,S)=>(u._OrtAddRunConfigEntry=H.oa)(f,v,S),u._OrtReleaseRunOptions=f=>(u._OrtReleaseRunOptions=H.pa)(f),u._OrtCreateBinding=f=>(u._OrtCreateBinding=H.qa)(f),u._OrtBindInput=(f,v,S)=>(u._OrtBindInput=H.ra)(f,v,S),u._OrtBindOutput=(f,v,S,O)=>(u._OrtBindOutput=H.sa)(f,v,S,O),u._OrtClearBoundOutputs=f=>(u._OrtClearBoundOutputs=H.ta)(f),u._OrtReleaseBinding=f=>(u._OrtReleaseBinding=H.ua)(f),u._OrtRunWithBinding=(f,v,S,O,z)=>(u._OrtRunWithBinding=H.va)(f,v,S,O,z),u._OrtRun=(f,v,S,O,z,G,K,xe)=>(u._OrtRun=H.wa)(f,v,S,O,z,G,K,xe),u._OrtEndProfiling=f=>(u._OrtEndProfiling=H.xa)(f),u._JsepOutput=(f,v,S)=>(u._JsepOutput=H.ya)(f,v,S),u._JsepGetNodeName=f=>(u._JsepGetNodeName=H.za)(f);var Gn=u._pthread_self=()=>(Gn=u._pthread_self=H.Aa)(),Ao=u._malloc=f=>(Ao=u._malloc=H.Ba)(f),Ni=u._free=f=>(Ni=u._free=H.Ca)(f);u.__emscripten_tls_init=()=>(u.__emscripten_tls_init=H.Da)();var Li=u.__emscripten_thread_init=(f,v,S,O,z,G)=>(Li=u.__emscripten_thread_init=H.Fa)(f,v,S,O,z,G);u.__emscripten_thread_crashed=()=>(u.__emscripten_thread_crashed=H.Ga)();var Ui=(f,v,S,O)=>(Ui=H.Ha)(f,v,S,O),pe=f=>(pe=H.Ia)(f),Wn=u.__emscripten_thread_exit=f=>(Wn=u.__emscripten_thread_exit=H.Ja)(f),gn=u.__emscripten_check_mailbox=()=>(gn=u.__emscripten_check_mailbox=H.Ka)(),Fi=f=>(Fi=H.La)(f),Vi=(f,v)=>(Vi=H.Ma)(f,v),yn=()=>(yn=H.Na)(),Hn=f=>(Hn=H.Oa)(f),Oo=f=>(Oo=H.Pa)(f),Eo=u.dynCall_ii=(f,v)=>(Eo=u.dynCall_ii=H.Ra)(f,v),Gi=f=>(Gi=H.Sa)(f),Wi=()=>(Wi=H.Ta)(),Hi=f=>(Hi=H.Ua)(f),Co=()=>(Co=H.Va)();u.___start_em_js=923047,u.___stop_em_js=923208;function Nl(f){f=Object.assign({},f);var v=O=>()=>O()>>>0,S=O=>z=>O(z)>>>0;return f.__errno_location=v(f.__errno_location),f.pthread_self=v(f.pthread_self),f.malloc=S(f.malloc),f.stackSave=v(f.stackSave),f.stackAlloc=S(f.stackAlloc),f}u.keepRuntimeAlive=ft,u.wasmMemory=ie,u.stackAlloc=Oo,u.stackSave=yn,u.stackRestore=Hn,u.UTF8ToString=Bt,u.stringToUTF8=pi,u.lengthBytesUTF8=bo,u.ExitStatus=dn,u.PThread=Ae;var jn;Jt=function f(){jn||ji(),jn||(Jt=f)};function ji(){function f(){if(!jn&&(jn=!0,u.calledRun=!0,!Pe)&&(x||fn(Ct),l(u),u.onRuntimeInitialized&&u.onRuntimeInitialized(),!x)){if(u.postRun)for(typeof u.postRun=="function"&&(u.postRun=[u.postRun]);u.postRun.length;){var v=u.postRun.shift();mt.unshift(v)}fn(mt)}}if(!(0<Dt))if(x)l(u),x||fn(Ct),startWorker(u);else{if(u.preRun)for(typeof u.preRun=="function"&&(u.preRun=[u.preRun]);u.preRun.length;)xt.unshift(u.preRun.shift());fn(xt),0<Dt||(u.setStatus?(u.setStatus("Running..."),setTimeout(function(){setTimeout(function(){u.setStatus("")},1),f()},1)):f())}}if(u.preInit)for(typeof u.preInit=="function"&&(u.preInit=[u.preInit]);0<u.preInit.length;)u.preInit.pop()();return ji(),e.ready}})();typeof Yh=="object"&&typeof Qu=="object"?Qu.exports=Kh:typeof define=="function"&&define.amd&&define([],()=>Kh)});var Zh=st((kD,j2)=>{j2.exports='"use strict";var Module={},ENVIRONMENT_IS_NODE=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string";if(ENVIRONMENT_IS_NODE){var nodeWorkerThreads=require("worker_threads"),parentPort=nodeWorkerThreads.parentPort;parentPort.on("message",e=>onmessage({data:e}));var fs=require("fs");Object.assign(global,{self:global,require,Module,location:{href:__filename},Worker:nodeWorkerThreads.Worker,importScripts:e=>(0,eval)(fs.readFileSync(e,"utf8")+"//# sourceURL="+e),postMessage:e=>parentPort.postMessage(e),performance:global.performance||{now:Date.now}})}var initializedJS=!1;function threadPrintErr(){var e=Array.prototype.slice.call(arguments).join(" ");if(ENVIRONMENT_IS_NODE){fs.writeSync(2,e+`\n`);return}console.error(e)}function threadAlert(){var e=Array.prototype.slice.call(arguments).join(" ");postMessage({cmd:"alert",text:e,threadId:Module._pthread_self()})}var err=threadPrintErr;self.alert=threadAlert,Module.instantiateWasm=(e,t)=>{var a=Module.wasmModule;Module.wasmModule=null;var r=new WebAssembly.Instance(a,e);return t(r)},self.onunhandledrejection=e=>{throw e.reason??e};function handleMessage(e){try{if(e.data.cmd==="load"){let a=[];self.onmessage=r=>a.push(r),self.startWorker=r=>{Module=r,postMessage({cmd:"loaded"});for(let s of a)handleMessage(s);self.onmessage=handleMessage},Module.wasmModule=e.data.wasmModule;for(const r of e.data.handlers)Module[r]=(...s)=>{postMessage({cmd:"callHandler",handler:r,args:s})};if(Module.wasmMemory=e.data.wasmMemory,Module.buffer=Module.wasmMemory.buffer,Module.ENVIRONMENT_IS_PTHREAD=!0,typeof e.data.urlOrBlob=="string")importScripts(e.data.urlOrBlob);else{var t=URL.createObjectURL(e.data.urlOrBlob);importScripts(t),URL.revokeObjectURL(t)}ortWasmThreaded(Module)}else if(e.data.cmd==="run"){Module.__emscripten_thread_init(e.data.pthread_ptr,0,0,1),Module.__emscripten_thread_mailbox_await(e.data.pthread_ptr),Module.establishStackSpace(),Module.PThread.receiveObjectTransfer(e.data),Module.PThread.threadInitTLS(),initializedJS||(initializedJS=!0);try{Module.invokeEntryPoint(e.data.start_routine,e.data.arg)}catch(a){if(a!="unwind")throw a}}else e.data.cmd==="cancel"?Module._pthread_self()&&Module.__emscripten_thread_exit(-1):e.data.target==="setimmediate"||(e.data.cmd==="checkMailbox"?initializedJS&&Module.checkMailbox():e.data.cmd&&(err("worker.js received unknown command "+e.data.cmd),err(e.data)))}catch(a){throw Module.__emscripten_thread_crashed&&Module.__emscripten_thread_crashed(),a}}self.onmessage=handleMessage;\n'});var Qh,q2,el,tl,Xa,Jh,K2,Y2,X2,eg,ht,ao=D(()=>{"use strict";Qh=Gh();q2=Xh(),tl=!1,Xa=!1,Jh=!1,K2=r=>{if(r===1)return!1;if(typeof SharedArrayBuffer>"u")return typeof self<"u"&&!self.crossOriginIsolated&&console.warn("env.wasm.numThreads is set to "+r+", but this will not work unless you enable crossOriginIsolated mode. See https://web.dev/cross-origin-isolation-guide/ for more info."),!1;typeof process<"u"&&process.versions&&process.versions.node&&console.warn("env.wasm.numThreads is set to "+r+", however, currently onnxruntime-web does not support multi-threads in Node.js. Please consider using onnxruntime-node for performance critical scenarios.");try{return typeof MessageChannel<"u"&&new MessageChannel().port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]))}catch{return!1}},Y2=()=>{try{return WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,30,1,28,0,65,0,253,15,253,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,253,186,1,26,11]))}catch{return!1}},X2=(r,e)=>r?e?"ort-wasm-simd-threaded.wasm":"ort-wasm-simd.wasm":e?"ort-wasm-threaded.wasm":"ort-wasm.wasm",eg=async r=>{if(tl)return Promise.resolve();if(Xa)throw new Error("multiple calls to 'initializeWebAssembly()' detected.");if(Jh)throw new Error("previous call to 'initializeWebAssembly()' failed.");Xa=!0;let e=r.initTimeout,n=r.numThreads,t=r.simd,o=K2(n),i=t&&Y2(),s=r.wasmPaths,a=typeof s=="string"?s:void 0,u=X2(i,o),l=typeof s=="object"?s[u]:void 0,d=!1,p=[];if(e>0&&p.push(new Promise(h=>{setTimeout(()=>{d=!0,h()},e)})),p.push(new Promise((h,y)=>{let b=o?q2:Qh,w={locateFile:(T,x)=>{if(o&&T.endsWith(".worker.js")&&typeof Blob<"u")return URL.createObjectURL(new Blob([Zh()],{type:"text/javascript"}));if(T.endsWith(".wasm")){if(l)return l;let _=a??x;return u==="ort-wasm-simd.wasm"?_+"ort-wasm-simd.jsep.wasm":u==="ort-wasm-simd-threaded.wasm"?_+"ort-wasm-simd-threaded.jsep.wasm":_+u}return x+T}};if(o)if(w.numThreads=n,typeof Blob>"u")w.mainScriptUrlOrBlob=(void 0)(__dirname,"ort-wasm-threaded.js");else{let T=`var ortWasmThreaded=${b.toString()};`;w.mainScriptUrlOrBlob=new Blob([T],{type:"text/javascript"})}b(w).then(T=>{Xa=!1,tl=!0,el=T,h()},T=>{Xa=!1,Jh=!0,y(T)})})),await Promise.race(p),d)throw new Error(`WebAssembly backend initializing failed due to timeout: ${e}ms`)},ht=()=>{if(tl&&el)return el;throw new Error("WebAssembly is not initialized yet.")}});var gt,Xo,nt,Za=D(()=>{"use strict";ao();gt=(r,e)=>{let n=ht(),t=n.lengthBytesUTF8(r)+1,o=n._malloc(t);return n.stringToUTF8(r,o,t),e.push(o),o},Xo=(r,e,n,t)=>{if(typeof r=="object"&&r!==null){if(n.has(r))throw new Error("Circular reference in options");n.add(r)}Object.entries(r).forEach(([o,i])=>{let s=e?e+o:o;if(typeof i=="object")Xo(i,s+".",n,t);else if(typeof i=="string"||typeof i=="number")t(s,i.toString());else if(typeof i=="boolean")t(s,i?"1":"0");else throw new Error(`Can't handle extra config type: ${typeof i}`)})},nt=r=>{let e=ht(),n=e.stackSave();try{let t=e.stackAlloc(8);e._OrtGetLastError(t,t+4);let o=e.HEAP32[t/4],i=e.HEAPU32[t/4+1],s=i?e.UTF8ToString(i):"";throw new Error(`${r} ERROR_CODE: ${o}, ERROR_MESSAGE: ${s}`)}finally{e.stackRestore(n)}}});var tg,rg=D(()=>{"use strict";ao();Za();tg=r=>{let e=ht(),n=0,t=[],o=r||{};try{if(r?.logSeverityLevel===void 0)o.logSeverityLevel=2;else if(typeof r.logSeverityLevel!="number"||!Number.isInteger(r.logSeverityLevel)||r.logSeverityLevel<0||r.logSeverityLevel>4)throw new Error(`log serverity level is not valid: ${r.logSeverityLevel}`);if(r?.logVerbosityLevel===void 0)o.logVerbosityLevel=0;else if(typeof r.logVerbosityLevel!="number"||!Number.isInteger(r.logVerbosityLevel))throw new Error(`log verbosity level is not valid: ${r.logVerbosityLevel}`);r?.terminate===void 0&&(o.terminate=!1);let i=0;return r?.tag!==void 0&&(i=gt(r.tag,t)),n=e._OrtCreateRunOptions(o.logSeverityLevel,o.logVerbosityLevel,!!o.terminate,i),n===0&&nt("Can't create run options."),r?.extra!==void 0&&Xo(r.extra,"",new WeakSet,(s,a)=>{let u=gt(s,t),l=gt(a,t);e._OrtAddRunConfigEntry(n,u,l)!==0&&nt(`Can't set a run config entry: ${s} - ${a}.`)}),[n,t]}catch(i){throw n!==0&&e._OrtReleaseRunOptions(n),t.forEach(s=>e._free(s)),i}}});var Z2,J2,Q2,e1,ng,og=D(()=>{"use strict";ao();Za();Z2=r=>{switch(r){case"disabled":return 0;case"basic":return 1;case"extended":return 2;case"all":return 99;default:throw new Error(`unsupported graph optimization level: ${r}`)}},J2=r=>{switch(r){case"sequential":return 0;case"parallel":return 1;default:throw new Error(`unsupported execution mode: ${r}`)}},Q2=r=>{r.extra||(r.extra={}),r.extra.session||(r.extra.session={});let e=r.extra.session;e.use_ort_model_bytes_directly||(e.use_ort_model_bytes_directly="1"),r.executionProviders&&r.executionProviders.some(n=>(typeof n=="string"?n:n.name)==="webgpu")&&(r.enableMemPattern=!1)},e1=(r,e,n)=>{for(let t of e){let o=typeof t=="string"?t:t.name;switch(o){case"webnn":if(o="WEBNN",typeof t!="string"){let s=t;if(s?.deviceType){let a=gt("deviceType",n),u=gt(s.deviceType,n);ht()._OrtAddSessionConfigEntry(r,a,u)!==0&&nt(`Can't set a session config entry: 'deviceType' - ${s.deviceType}.`)}if(s?.numThreads){let a=s.numThreads;(typeof a!="number"||!Number.isInteger(a)||a<0)&&(a=0);let u=gt("numThreads",n),l=gt(a.toString(),n);ht()._OrtAddSessionConfigEntry(r,u,l)!==0&&nt(`Can't set a session config entry: 'numThreads' - ${s.numThreads}.`)}if(s?.powerPreference){let a=gt("powerPreference",n),u=gt(s.powerPreference,n);ht()._OrtAddSessionConfigEntry(r,a,u)!==0&&nt(`Can't set a session config entry: 'powerPreference' - ${s.powerPreference}.`)}}break;case"webgpu":if(o="JS",typeof t!="string"){let s=t;if(s?.preferredLayout){if(s.preferredLayout!=="NCHW"&&s.preferredLayout!=="NHWC")throw new Error(`preferredLayout must be either 'NCHW' or 'NHWC': ${s.preferredLayout}`);let a=gt("preferredLayout",n),u=gt(s.preferredLayout,n);ht()._OrtAddSessionConfigEntry(r,a,u)!==0&&nt(`Can't set a session config entry: 'preferredLayout' - ${s.preferredLayout}.`)}}break;case"wasm":case"cpu":continue;default:throw new Error(`not supported execution provider: ${o}`)}let i=gt(o,n);ht()._OrtAppendExecutionProvider(r,i)!==0&&nt(`Can't append execution provider: ${o}.`)}},ng=r=>{let e=ht(),n=0,t=[],o=r||{};Q2(o);try{let i=Z2(o.graphOptimizationLevel??"all"),s=J2(o.executionMode??"sequential"),a=typeof o.logId=="string"?gt(o.logId,t):0,u=o.logSeverityLevel??2;if(!Number.isInteger(u)||u<0||u>4)throw new Error(`log serverity level is not valid: ${u}`);let l=o.logVerbosityLevel??0;if(!Number.isInteger(l)||l<0||l>4)throw new Error(`log verbosity level is not valid: ${l}`);let d=typeof o.optimizedModelFilePath=="string"?gt(o.optimizedModelFilePath,t):0;if(n=e._OrtCreateSessionOptions(i,!!o.enableCpuMemArena,!!o.enableMemPattern,s,!!o.enableProfiling,0,a,u,l,d),n===0&&nt("Can't create session options."),o.executionProviders&&e1(n,o.executionProviders,t),o.enableGraphCapture!==void 0){if(typeof o.enableGraphCapture!="boolean")throw new Error(`enableGraphCapture must be a boolean value: ${o.enableGraphCapture}`);let p=gt("enableGraphCapture",t),h=gt(o.enableGraphCapture.toString(),t);e._OrtAddSessionConfigEntry(n,p,h)!==0&&nt(`Can't set a session config entry: 'enableGraphCapture' - ${o.enableGraphCapture}.`)}if(o.freeDimensionOverrides)for(let[p,h]of Object.entries(o.freeDimensionOverrides)){if(typeof p!="string")throw new Error(`free dimension override name must be a string: ${p}`);if(typeof h!="number"||!Number.isInteger(h)||h<0)throw new Error(`free dimension override value must be a non-negative integer: ${h}`);let y=gt(p,t);e._OrtAddFreeDimensionOverride(n,y,h)!==0&&nt(`Can't set a free dimension override: ${p} - ${h}.`)}return o.extra!==void 0&&Xo(o.extra,"",new WeakSet,(p,h)=>{let y=gt(p,t),b=gt(h,t);e._OrtAddSessionConfigEntry(n,y,b)!==0&&nt(`Can't set a session config entry: ${p} - ${h}.`)}),[n,t]}catch(i){throw n!==0&&e._OrtReleaseSessionOptions(n),t.forEach(s=>e._free(s)),i}}});var rl,sn,kn,Ja,Zo,Qa,nl,Ce=D(()=>{"use strict";rl=r=>{switch(r){case"int8":return 3;case"uint8":return 2;case"bool":return 9;case"int16":return 5;case"uint16":return 4;case"int32":return 6;case"uint32":return 12;case"float16":return 10;case"float32":return 1;case"float64":return 11;case"string":return 8;case"int64":return 7;case"uint64":return 13;default:throw new Error(`unsupported data type: ${r}`)}},sn=r=>{switch(r){case 3:return"int8";case 2:return"uint8";case 9:return"bool";case 5:return"int16";case 4:return"uint16";case 6:return"int32";case 12:return"uint32";case 10:return"float16";case 1:return"float32";case 11:return"float64";case 8:return"string";case 7:return"int64";case 13:return"uint64";default:throw new Error(`unsupported data type: ${r}`)}},kn=r=>[void 0,4,1,1,2,2,4,8,void 0,1,2,8,4,8,void 0,void 0,void 0][r],Ja=r=>{switch(r){case"float16":return typeof Float16Array<"u"&&Float16Array.from?Float16Array:Uint16Array;case"float32":return Float32Array;case"uint8":return Uint8Array;case"int8":return Int8Array;case"uint16":return Uint16Array;case"int16":return Int16Array;case"int32":return Int32Array;case"bool":return Uint8Array;case"float64":return Float64Array;case"uint32":return Uint32Array;case"int64":return BigInt64Array;case"uint64":return BigUint64Array;default:throw new Error(`unsupported type: ${r}`)}},Zo=r=>{switch(r){case"verbose":return 0;case"info":return 1;case"warning":return 2;case"error":return 3;case"fatal":return 4;default:throw new Error(`unsupported logging level: ${r}`)}},Qa=r=>r==="float32"||r==="float16"||r==="int32"||r==="int64"||r==="uint32"||r==="uint8"||r==="bool",nl=r=>{switch(r){case"none":return 0;case"cpu":return 1;case"cpu-pinned":return 2;case"texture":return 3;case"gpu-buffer":return 4;default:throw new Error(`unsupported data location: ${r}`)}}});var Jo,ol=D(()=>{"use strict";Jo=async r=>{if(typeof r=="string")if(typeof process<"u"&&process.versions&&process.versions.node)try{return new Uint8Array(await(void 0)(r))}catch(e){if(e.code==="ERR_FS_FILE_TOO_LARGE"){let n=(void 0)(r),t=[];for await(let o of n)t.push(o);return new Uint8Array(Buffer.concat(t))}throw e}else{let e=await fetch(r);if(!e.ok)throw new Error(`failed to load external data file: ${r}`);let n=e.headers.get("Content-Length"),t=n?parseInt(n,10):0;if(t<1073741824)return new Uint8Array(await e.arrayBuffer());{if(!e.body)throw new Error(`failed to load external data file: ${r}, no response body.`);let o=e.body.getReader(),i;try{i=new ArrayBuffer(t)}catch(a){if(a instanceof RangeError){let u=Math.ceil(t/65536);i=new WebAssembly.Memory({initial:u,maximum:u}).buffer}else throw a}let s=0;for(;;){let{done:a,value:u}=await o.read();if(a)break;let l=u.byteLength;new Uint8Array(i,s,l).set(u),s+=l}return new Uint8Array(i,0,t)}}else return r instanceof Blob?new Uint8Array(await r.arrayBuffer()):r instanceof Uint8Array?r:new Uint8Array(r)}});var t1,r1,ig,ag,sg,n1,ot,un=D(()=>{"use strict";Ce();t1=["V","I","W","E","F"],r1=(r,e)=>{console.log(`[${t1[r]},${new Date().toISOString()}]${e}`)},sg=(r,e)=>{ig=r,ag=e},n1=(r,e)=>{let n=Zo(r),t=Zo(ig);n>=t&&r1(n,typeof e=="function"?e():e)},ot=(...r)=>{ag&&n1(...r)}});var ug,lg=D(()=>{"use strict";Ce();ug=(r,e)=>new(Ja(e))(r)});var es=D(()=>{"use strict"});var il,al,ts,o1,dg,ul,sl,fg,pg=D(()=>{"use strict";un();es();il={64:50,128:30,256:10,512:10,2048:10,4096:10,8192:30,16384:10,32768:40,65536:40,131072:40,262144:30,524288:30,1048576:30,2097152:30},al=[],ts=r=>{for(let e=0;e<al.length;e++){let n=al[e];if(r<n)return n}return Math.ceil(r/16)*16},o1=1,dg=()=>o1++,ul=async(r,e,n,t)=>{let o=ts(n),i=r.device.createBuffer({size:o,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ});try{let s=r.getCommandEncoder();r.endComputePass(),s.copyBufferToBuffer(e,0,i,0,o),r.flush(),await i.mapAsync(GPUMapMode.READ);let a=i.getMappedRange();if(t){let u=t();return u.set(new Uint8Array(a,0,n)),u}else return new Uint8Array(a.slice(0,n))}finally{i.destroy()}},sl=class{constructor(e){this.backend=e;this.storageCache=new Map,this.freeBuffers=new Map,this.freeUniformBuffers=new Map,this.buffersForUploadingPending=[],this.buffersPending=[],this.externalBuffers=new Map,this.capturedPendingBuffers=new Map,this.backend.env.webgpu.cachealloc={},this.backend.env.webgpu.cachefree={},this.backend.env.webgpu.cachemiss={},this.backend.env.webgpu.cacheinflight={};for(let n in il)al.push(Number(n)),this.freeBuffers.set(Number(n),[]),this.freeUniformBuffers.set(Number(n),[])}incstats(e,n){if(this.backend.env.webgpu[e][n]?this.backend.env.webgpu[e][n]+=1:this.backend.env.webgpu[e][n]=1,e!=="cachemiss"){this.backend.env.webgpu.cacheinflight[n]||(this.backend.env.webgpu.cacheinflight[n]=0),this.backend.env.webgpu.cachefree[n]||(this.backend.env.webgpu.cachefree[n]=0);let t=this.backend.env.webgpu.cachealloc[n]-this.backend.env.webgpu.cachefree[n];this.backend.env.webgpu.cacheinflight[n]<=t&&(this.backend.env.webgpu.cacheinflight[n]=t)}}upload(e,n){let t=n.buffer,o=n.byteOffset,i=n.byteLength,s=ts(i);this.backend.env.trace&&console.timeStamp(`upload-begin-${s}`);let a=this.storageCache.get(e);if(!a)throw new Error("gpu data for uploading does not exist");if(a.originalSize!==i)throw new Error(`inconsistent data size. gpu data size=${a.originalSize}, data size=${i}`);let u=this.backend.device.createBuffer({mappedAtCreation:!0,size:s,usage:GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC}),l=u.getMappedRange();new Uint8Array(l).set(new Uint8Array(t,o,i)),u.unmap();let d=this.backend.getCommandEncoder();this.backend.endComputePass(),d.copyBufferToBuffer(u,0,a.gpuData.buffer,0,s),ot("verbose",()=>`[WebGPU] GpuDataManager.upload(id=${e})`),this.backend.env.trace&&console.timeStamp(`upload-end-${s}`),this.buffersForUploadingPending.push(u)}memcpy(e,n){let t=this.storageCache.get(e);if(!t)throw new Error("source gpu data for memcpy does not exist");let o=this.storageCache.get(n);if(!o)throw new Error("destination gpu data for memcpy does not exist");if(t.originalSize!==o.originalSize)throw new Error("inconsistent source and destination gpu data size");let i=ts(t.originalSize);this.backend.env.trace&&console.timeStamp(`memcpy-begin-${i}`);let s=this.backend.getCommandEncoder();this.backend.endComputePass(),s.copyBufferToBuffer(t.gpuData.buffer,0,o.gpuData.buffer,0,i),this.backend.env.trace&&console.timeStamp(`memcpy-end-${i}`)}registerExternalBuffer(e,n,t){let o;if(t){if(o=this.externalBuffers.get(t),o===void 0)throw new Error("previous buffer is not registered");if(e===t)return ot("verbose",()=>`[WebGPU] GpuDataManager.registerExternalBuffer(size=${n}) => id=${o}, buffer is the same, skip.`),o;if(this.backend.capturedCommandList.has(this.backend.currentSessionId))throw new Error(`Registering a different external buffer under graph capture mode is not supported yet.
             Please use the previous external buffer!`);this.externalBuffers.delete(t)}else o=dg();return this.storageCache.set(o,{gpuData:{id:o,type:0,buffer:e},originalSize:n}),this.externalBuffers.set(e,o),ot("verbose",()=>`[WebGPU] GpuDataManager.registerExternalBuffer(size=${n}) => id=${o}, registered.`),o}unregisterExternalBuffer(e){let n=this.externalBuffers.get(e);n!==void 0&&(this.storageCache.delete(n),this.externalBuffers.delete(e),ot("verbose",()=>`[WebGPU] GpuDataManager.unregisterExternalBuffer() => id=${n}`))}create(e,n=GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST){let t=ts(e);this.incstats("cachealloc",t);let o,i=(n&GPUBufferUsage.STORAGE)===GPUBufferUsage.STORAGE,s=(n&GPUBufferUsage.UNIFORM)===GPUBufferUsage.UNIFORM;if(i||s){let l=(i?this.freeBuffers:this.freeUniformBuffers).get(t);l?l.length>0?o=l.pop():(o=this.backend.device.createBuffer({size:t,usage:n}),this.incstats("cachemiss",t)):(this.incstats("cachemiss",t),o=this.backend.device.createBuffer({size:t,usage:n}))}else o=this.backend.device.createBuffer({size:t,usage:n});let a={id:dg(),type:0,buffer:o};return this.storageCache.set(a.id,{gpuData:a,originalSize:e}),ot("verbose",()=>`[WebGPU] GpuDataManager.create(size=${e}) => id=${a.id}`),a}get(e){return this.storageCache.get(e)?.gpuData}release(e){let n=this.storageCache.get(e);if(!n)throw new Error("releasing data does not exist");return ot("verbose",()=>`[WebGPU] GpuDataManager.release(id=${e}), gpuDataId=${n.gpuData.id}`),this.storageCache.delete(e),this.buffersPending.push(n.gpuData.buffer),n.originalSize}async download(e,n){let t=this.storageCache.get(e);if(!t)throw new Error("data does not exist");this.backend.env.trace&&console.timeStamp(`download-begin-${t.originalSize}`),await ul(this.backend,t.gpuData.buffer,t.originalSize,n),this.backend.env.trace&&console.timeStamp(`download-end-${t.originalSize}`)}refreshPendingBuffers(){for(let e of this.buffersForUploadingPending)e.destroy();if(this.buffersForUploadingPending=[],this.buffersPending.length!==0)if(this.backend.sessionStatus==="default"){for(let e of this.buffersPending){let n=il[e.size];if(this.incstats("cachefree",e.size),(e.usage&GPUBufferUsage.STORAGE)===GPUBufferUsage.STORAGE){let t=this.freeBuffers.get(e.size)||[];n===void 0||t.length>=n?e.destroy():t.push(e)}else if((e.usage&GPUBufferUsage.UNIFORM)===GPUBufferUsage.UNIFORM){let t=il[e.size],o=this.freeUniformBuffers.get(e.size)||[];t===void 0||o.length>=t?e.destroy():o.push(e)}else e.destroy()}this.buffersPending=[]}else{let e=this.capturedPendingBuffers.get(this.backend.currentSessionId);e||(e=[],this.capturedPendingBuffers.set(this.backend.currentSessionId,e));for(let n of this.buffersPending)e.push(n);this.buffersPending=[]}}dispose(){this.freeBuffers.forEach(e=>{e.forEach(n=>{n.destroy()})}),this.freeUniformBuffers.forEach(e=>{e.forEach(n=>{n.destroy()})}),this.storageCache.forEach(e=>{e.gpuData.buffer.destroy()}),this.capturedPendingBuffers.forEach(e=>{e.forEach(n=>{n.destroy()})}),this.storageCache=new Map,this.freeBuffers=new Map,this.freeUniformBuffers=new Map,this.capturedPendingBuffers=new Map}onReleaseSession(e){let n=this.capturedPendingBuffers.get(e);n&&(n.forEach(t=>{t.destroy()}),this.capturedPendingBuffers.delete(e))}},fg=(...r)=>new sl(...r)});var ll,Le,Ot=D(()=>{"use strict";ll=class{constructor(e){Object.assign(this,e)}get cacheKey(){return this.key||(this.key=Object.getOwnPropertyNames(this).sort().map(e=>`${this[e]}`).join(";")),this.key}},Le=r=>new ll(r)});var dl,Br,U,Dn,rs,ns,os,Ve=D(()=>{"use strict";dl=class{static calcMatMulShape(e,n){return e[1]!==n[0]?void 0:[e[0],n[1]]}},Br=class{static calcShape(e,n,t=!1){let o=e.length,i=n.length;if(o===0)return n;if(i===0)return e;let s=Math.max(e.length,n.length),a=new Array(s);if(t){if(o<2||i<2)return;let u=dl.calcMatMulShape([e[o-2],e[o-1]],[n[i-2],n[i-1]]);if(u===void 0)return;[a[s-2],a[s-1]]=u}for(let u=t?3:1;u<=s;u++){let l=o-u<0?1:e[o-u],d=i-u<0?1:n[i-u];if(l!==d&&l>1&&d>1)return;let p=Math.max(l,d);if(l&&d)a[s-u]=Math.max(l,d);else{if(p>1)return;a[s-u]=0}}return a}static isValidBroadcast(e,n){let t=e.length,o=n.length;if(t>o)return!1;for(let i=1;i<=t;i++)if(e[t-i]!==1&&e[t-i]!==n[o-i])return!1;return!0}},U=class r{static size(e){return r.getSizeFromDimensionRange(e,0,e.length)}static convertShape(e,n=4){let t=e.length;if(t===0)return[];let o=new Array(t),i=t-1;for(;i>=0;){if(e[i]%n===0){o[i]=e[i]/n;break}if(n%e[i]!==0)throw new Error("cannot convert shape");o[i]=1,n/=e[i],i--}for(i--;i>=0;i--)o[i]=e[i];return o}static sizeFromDimension(e,n){if(n<0||n>e.length)throw new Error(`invalid dimension of ${n} for sizeFromDimension as Tensor has ${e.length} dimensions.`);return r.getSizeFromDimensionRange(e,n,e.length)}static sizeToDimension(e,n){if(n<0||n>e.length)throw new Error(`invalid dimension of ${n} for sizeToDimension as Tensor has ${e.length} dimensions.`);return r.getSizeFromDimensionRange(e,0,n)}static getSizeFromDimensionRange(e,n,t){let o=1;for(let i=n;i<t;i++){if(e[i]<0)throw new Error("cannot get valid size from specified dimension range. Most likely the range contains negative values in them.");o*=e[i]}return o}static computeStrides(e){let n=e.length;if(n===0)return[];if(n===1)return[1];let t=new Array(n);t[n-1]=1,t[n-2]=e[n-1];for(let o=n-3;o>=0;--o)t[o]=t[o+1]*e[o+1];return t}static normalizeAxis(e,n){if(e<-n&&e>=n)throw new Error("unsupported axis for this operation.");return e<0?e+n:e}static normalizeAxes(e,n){return e.map(t=>this.normalizeAxis(t,n??e.length))}static sortBasedOnPerm(e,n){return n?n.map(t=>e[t]):e.slice().reverse()}static padShape(e,n){let t=e.length;return e.map((o,i)=>o+n[i]+n[i+t])}static areEqual(e,n){return e.length!==n.length?!1:e.every((t,o)=>t===n[o])}},Dn=class r{static adjustPoolAttributes(e,n,t,o,i,s){if(!e&&t.length!==n.length-2)throw new Error("length of specified kernel shapes should be 2 less than length of input dimensions");if(e)for(let a=0;a<n.length-2;a++)a>=t.length?t.push(n[a+2]):t[a]=n[a+2];for(let a=0;a<t.length;a++)if(a<o.length){if(o[a]<0)throw new Error("strides should be greater than or equal to 1")}else o.push(1);for(let a=0;a<t.length;a++)if(a<i.length){if(i[a]<0)throw new Error("dilations should be greater than or equal to 1")}else i.push(1);for(let a=0;a<t.length*2;a++)if(a<s.length){if(s[a]<0)throw new Error("pad should be greater than or equal to 1")}else s.push(0);for(let a=0;a<t.length;a++){if(t[a]<=0)throw new Error("kernel shapes need to be greater than 0");if(s[a]>=t[a]||s[a+t.length]>=t[a])throw new Error("pads should be smaller than kernel")}}static adjustPadsBasedOnAutoPad(e,n,t,o,i,s,a){if(a){if(i.length!==2*(e.length-2))throw new Error("length of pads should be twice the length of data dimensions");if(n.length!==e.length-2)throw new Error("length of strides should be the length of data dimensions");if(o.length!==e.length-2)throw new Error("length of kernel shapes should be the length of data dimensions");for(let u=0;u<e.length-2;u++)r.adjustPadAndReturnShape(e[u+(s?1:2)],n[u],t[u],o[u],i,u,u+e.length-2,a)}}static computePoolOutputShape(e,n,t,o,i,s,a){if(n.length<=0)throw new Error("input shape must be of size greater than 0");let u=[n[0],n[1]];return r.computeShapeHelper(e,n,u,t,o,i,s,a),u}static computeConvOutputShape(e,n,t,o,i,s,a){if(e.length<=0||n.length<=0)throw new Error("invalid input tensor dims or invalid filter tensor dims");let u=[e[0],n[0]];return r.computeShapeHelper(!1,e,u,t,o,i,s,a),u}static computeShapeHelper(e,n,t,o,i,s,a,u){if(e)for(let l=0;l<n.length-2;l++)t.push(1);else for(let l=0;l<n.length-2;l++)t.push(r.adjustPadAndReturnShape(n[l+2],o[l],i[l],s[l],a,l,l+n.length-2,u))}static adjustPadAndReturnShape(e,n,t,o,i,s,a,u){let l=t*(o-1)+1;if(u&&u!=="NOTSET")switch(u){case"VALID":return i[s]=0,i[a]=0,Math.floor((e-l)/n+1);case"SAME_LOWER":case"SAME_UPPER":if(t!==1)throw new Error("Dilation not supported for SAME_UPPER or SAME_LOWER");{let p=((e+n-1)/n-1)*n+o-e;return i[s]=Math.floor(u==="SAME_LOWER"?(p+1)/2:p/2),i[a]=p-i[s],Math.floor((e+p-o)/n+1)}default:throw new Error("Unsupported AutoPad type")}else return Math.floor((e+i[s]+i[a]-l)/n+1)}},rs=class{static getShapeOfGemmResult(e,n,t,o,i){if(e.length!==2||t.length!==2)throw new Error("shape need to be of size 2");let s,a,u;n?(s=e[1],a=e[0]):(s=e[0],a=e[1]);let l=-1;if(o?(u=t[0],l=1):(u=t[1],l=0),t[l]!==a)throw new Error("dimension mismatch");if(s<=0||u<=0||a<=0)throw new Error("invalid shape specified");if(i&&!Br.isValidBroadcast(i,[s,u]))throw new Error("gemm: invalid bias shape for broadcast");return[s,u,a]}},ns=-34028234663852886e22,os=34028234663852886e22});var Bn,fl,tt,Xt,oe,it,Mt,br,Zt,Se,pl,F,ee,is,cl,mg,so,Fe=D(()=>{"use strict";Ce();Ve();Bn=64,fl=(r,e)=>{if(e===3)throw new Error("vec3 has same alignment as vec4, use vec4 instead");switch(r){case 10:return e>1?`vec${e}<f16>`:"f16";case 1:return e>1?`vec${e}<f32>`:"f32";case 6:return e>1?`vec${e}<i32>`:"i32";case 12:return e>1?`vec${e}<u32>`:"u32";case 7:if(e>1)throw new Error("currently not supported vecX of uint64 yet");return["vec2<u32>","i32"];case 13:if(e>1)throw new Error("currently not supported vecX of uint64 yet");return["vec2<u32>","u32"];case 9:if(e!==4)throw new Error("bool must be vec4");return["u32","vec4<bool>"];default:throw new Error(`Unknown data type: ${r}`)}},tt=(r,e=1)=>{let n=fl(r,e);return typeof n=="string"?n:n[0]},Xt=(r,e=1)=>{let n=fl(r,e);return typeof n=="string"?n:n[1]},oe=(...r)=>{let e=[];return r.forEach(n=>{n.length!==0&&e.push({type:12,data:n},{type:12,data:U.computeStrides(n)})}),e},it=(...r)=>r.map(e=>e%4===0).reduce((e,n)=>e&&n,!0)?4:r.map(e=>e%2===0).reduce((e,n)=>e&&n,!0)?2:1,Mt=(r="f32",e,n="0")=>!e||e===1?`${r}(${n})`:`vec${e}<${r}>(${n})`,br=(r,e,n)=>r==="f32"?n:e===1?`f32(${n})`:`vec${e}f(${n})`,Zt=(r,e)=>e===4?`(${r}.x + ${r}.y + ${r}.z + ${r}.w)`:e===2?`(${r}.x + ${r}.y)`:e===3?`(${r}.x + ${r}.y + ${r}.z)`:r,Se=(r,e,n,t)=>r.startsWith("uniforms.")&&n>4?typeof e=="string"?t==="f16"?`${r}[(${e}) / 8][(${e}) % 8 / 4][(${e}) % 8 % 4]`:`${r}[(${e}) / 4][(${e}) % 4]`:t==="f16"?`${r}[${Math.floor(e/8)}][${Math.floor(e%8/4)}][${e%8%4}]`:`${r}[${Math.floor(e/4)}][${e%4}]`:n>1?`${r}[${e}]`:r,pl=(r,e,n,t,o)=>{let i=typeof n=="number",s=i?n:n.length,a=[...new Array(s).keys()],u=s<2?"u32":s<=4?`vec${s}<u32>`:`array<u32, ${s}>`,l=fl(e,o),d=typeof l=="string"?l:l[1],p=typeof l=="string"?l:l[0],h={indices:u,value:d,storage:p,tensor:e},y=q=>typeof q=="string"?q:`${q}u`,b={offsetToIndices:!1,indicesToOffset:!1,broadcastedIndicesToOffset:!1,set:!1,setByIndices:!1,get:!1,getByIndices:!1},w=i?"uniforms.":"",T=`${w}${r}_shape`,x=`${w}${r}_strides`,_="";for(let q=0;q<s-1;q++)_+=`
    let dim${q} = current / ${Se(x,q,s)};
    let rest${q} = current % ${Se(x,q,s)};
    indices[${q}] = dim${q};
    current = rest${q};
    `;_+=`indices[${s-1}] = current;`;let A=s<2?"":`
  fn o2i_${r}(offset: u32) -> ${h.indices} {
    var indices: ${h.indices};
    var current = offset;
    ${_}
    return indices;
  }`,P=q=>(b.offsetToIndices=!0,s<2?q:`o2i_${r}(${q})`),k=[];if(s>=2)for(let q=s-1;q>=0;q--)k.push(`${Se(x,q,s)} * (indices[${q}])`);let N=s<2?"":`
  fn i2o_${r}(indices: ${h.indices}) -> u32 {
    return ${k.join("+")};
  }`,j=q=>(b.indicesToOffset=!0,s<2?q:`i2o_${r}(${q})`),Z=(...q)=>s===0?"0u":`${h.indices}(${q.map(y).join(",")})`,se=(q,ue)=>s<2?`${q}`:`${Se(q,ue,s)}`,Q=(q,ue,ke)=>s<2?`${q}=${ke};`:`${Se(q,ue,s)}=${ke};`,X={},Be=(q,ue)=>{b.broadcastedIndicesToOffset=!0;let ke=`${ue.name}broadcastedIndicesTo${r}Offset`;if(ke in X)return`${ke}(${q})`;let Et=[];for(let xt=s-1;xt>=0;xt--){let Ct=ue.indicesGet("outputIndices",xt+ue.rank-s);Et.push(`${se(x,xt)} * (${Ct} % ${se(T,xt)})`)}return X[ke]=`fn ${ke}(outputIndices: ${ue.type.indices}) -> u32 {
             return ${Et.length>0?Et.join("+"):"0u"};
           }`,`${ke}(${q})`},qe=(q,ue)=>(()=>{if(h.storage===h.value)return`${r}[${q}]=${ue};`;if(h.storage==="vec2<u32>"&&h.value==="i32")return`${r}[${q}]=vec2<u32>(u32(${ue}), select(0u, 0xFFFFFFFFu, ${ue} < 0));`;if(h.storage==="vec2<u32>"&&h.value==="u32")return`${r}[${q}]=vec2<u32>(u32(${ue}), 0u);`;if(h.storage==="u32"&&h.value==="vec4<bool>")return`${r}[${q}]=dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(${ue}));`;throw new Error(`not supported combination of storage type ${h.storage} and value type ${h.value} yet`)})(),V=q=>(()=>{if(h.storage===h.value)return`${r}[${q}]`;if(h.storage==="vec2<u32>"&&h.value==="i32")return`i32(${r}[${q}].x)`;if(h.storage==="vec2<u32>"&&h.value==="u32")return`u32(${r}[${q}].x)`;if(h.storage==="u32"&&h.value==="vec4<bool>")return`vec4<bool>(bool(${r}[${q}] & 0xFFu), bool(${r}[${q}] & 0xFF00u), bool(${r}[${q}] & 0xFF0000u), bool(${r}[${q}] & 0xFF000000u))`;throw new Error(`not supported combination of storage type ${h.storage} and value type ${h.value} yet`)})(),ie=s<2?"":`
  fn get_${r}ByIndices(indices: ${h.indices}) -> ${d} {
    return ${V(`i2o_${r}(indices)`)};
  }`,H=s<2?"":(()=>{let q=a.map(ke=>`d${ke}: u32`).join(", "),ue=a.map(ke=>`d${ke}`).join(", ");return`
  fn get_${r}(${q}) -> ${d} {
    return get_${r}ByIndices(${Z(ue)});
  }`})(),Me=(...q)=>{if(q.length!==s)throw new Error(`indices length must be ${s}`);let ue=q.map(y).join(",");return s===0?V("0u"):s===1?V(ue[0]):(b.get=!0,b.getByIndices=!0,b.indicesToOffset=!0,`get_${r}(${ue})`)},Pe=q=>s<2?V(q):(b.getByIndices=!0,b.indicesToOffset=!0,`get_${r}ByIndices(${q})`),Ie=s<2?"":`
  fn set_${r}ByIndices(indices: ${h.indices}, value: ${d}) {
    ${qe(`i2o_${r}(indices)`,"value")}
  }`,fe=s<2?"":(()=>{let q=a.map(ke=>`d${ke}: u32`).join(", "),ue=a.map(ke=>`d${ke}`).join(", ");return`
  fn set_${r}(${q}, value: ${d}) {
    set_${r}ByIndices(${Z(ue)}, value);
  }`})();return{impl:()=>{let q=[],ue=!1;return b.offsetToIndices&&(q.push(A),ue=!0),b.indicesToOffset&&(q.push(N),ue=!0),b.broadcastedIndicesToOffset&&(Object.values(X).forEach(ke=>q.push(ke)),ue=!0),b.set&&(q.push(fe),ue=!0),b.setByIndices&&(q.push(Ie),ue=!0),b.get&&(q.push(H),ue=!0),b.getByIndices&&(q.push(ie),ue=!0),!i&&ue&&q.unshift(`const ${T} = ${h.indices}(${n.join(",")});`,`const ${x} = ${h.indices}(${U.computeStrides(n).join(",")});`),q.join(`
`)},type:h,offsetToIndices:P,indicesToOffset:j,broadcastedIndicesToOffset:Be,indices:Z,indicesGet:se,indicesSet:Q,set:(...q)=>{if(q.length!==s+1)throw new Error(`indices length must be ${s}`);let ue=q[s];if(typeof ue!="string")throw new Error("value must be string");let ke=q.slice(0,s).map(y).join(",");return s===0?qe("0u",ue):s===1?qe(ke[0],ue):(b.set=!0,b.setByIndices=!0,b.indicesToOffset=!0,`set_${r}(${ke}, ${ue})`)},setByOffset:qe,setByIndices:(q,ue)=>s<2?qe(q,ue):(b.setByIndices=!0,b.indicesToOffset=!0,`set_${r}ByIndices(${q}, ${ue});`),get:Me,getByOffset:V,getByIndices:Pe,usage:t,name:r,strides:x,shape:T,rank:s}},F=(r,e,n,t=1)=>pl(r,e,n,"input",t),ee=(r,e,n,t=1)=>pl(r,e,n,"output",t),is=(r,e,n,t=1)=>pl(r,e,n,"internal",t),cl=class{constructor(e,n){this.normalizedDispatchGroup=e;this.limits=n;this.internalVariables=[];this.variables=[];this.uniforms=[];this.variableIndex=0}guardAgainstOutOfBoundsWorkgroupSizes(e){return`if (global_idx >= ${typeof e=="number"?`${e}u`:e}) { return; }`}mainStart(e=Bn){let n=typeof e=="number"?e:e[0],t=typeof e=="number"?1:e[1],o=typeof e=="number"?1:e[2];if(n>this.limits.maxComputeWorkgroupSizeX||t>this.limits.maxComputeWorkgroupSizeY||o>this.limits.maxComputeWorkgroupSizeZ)throw new Error(`workgroup size [${n}, ${t}, ${o}] exceeds the maximum workgroup size [${this.limits.maxComputeWorkgroupSizeX}, ${this.limits.maxComputeWorkgroupSizeY}, ${this.limits.maxComputeWorkgroupSizeZ}].`);if(n*t*o>this.limits.maxComputeInvocationsPerWorkgroup)throw new Error(`workgroup size [${n}, ${t}, ${o}] exceeds the maximum workgroup invocations ${this.limits.maxComputeInvocationsPerWorkgroup}.`);let i=this.normalizedDispatchGroup[1]===1&&this.normalizedDispatchGroup[2]===1,s=i?`@builtin(global_invocation_id) global_id : vec3<u32>,
    @builtin(workgroup_id) workgroup_id : vec3<u32>,
    @builtin(local_invocation_id) local_id : vec3<u32>`:`@builtin(global_invocation_id) global_id : vec3<u32>,
                                             @builtin(local_invocation_id) local_id : vec3<u32>,
    @builtin(local_invocation_index) local_idx : u32,
    @builtin(workgroup_id) workgroup_id : vec3<u32>,
    @builtin(num_workgroups) num_workgroups : vec3<u32>`,a=i?"let global_idx = global_id.x; let local_idx = local_id.x;":`let global_idx = (workgroup_id.z * num_workgroups[0] * num_workgroups[1] +
          workgroup_id.y * num_workgroups[0] + workgroup_id.x) * ${n*t*o}u + local_idx;`;return`@compute @workgroup_size(${n}, ${t}, ${o})
  fn main(${s}) {
    ${a}
  `}appendVariableUniforms(e){e.rank!==0&&(e.shape.startsWith("uniforms.")&&this.uniforms.push({name:e.shape.replace("uniforms.",""),type:"u32",length:e.rank}),e.strides.startsWith("uniforms.")&&this.uniforms.push({name:e.strides.replace("uniforms.",""),type:"u32",length:e.rank}))}declareVariable(e,n){if(e.usage==="internal")throw new Error("cannot use internal variable with declareVariable(). use registerInternalVariables() instead.");this.variables.push(e),this.appendVariableUniforms(e);let t=e.usage==="input"?"read":"read_write",o=e.type.storage;return`@group(0) @binding(${n}) var<storage, ${t}> ${e.name}: array<${o}>;`}declareVariables(...e){return e.map(n=>this.declareVariable(n,this.variableIndex++)).join(`
`)}registerInternalVariable(e){if(e.usage!=="internal")throw new Error("cannot use input or output variable with registerInternalVariable(). use declareVariables() instead.");this.internalVariables.push(e),this.appendVariableUniforms(e)}registerInternalVariables(...e){return e.forEach(n=>this.registerInternalVariable(n)),this}registerUniform(e,n,t=1){return this.uniforms.push({name:e,type:n,length:t}),this}registerUniforms(e){return this.uniforms=this.uniforms.concat(e),this}uniformDeclaration(){if(this.uniforms.length===0)return"";let e=[];for(let{name:n,type:t,length:o}of this.uniforms)if(o&&o>4)t==="f16"?e.push(`@align(16) ${n}:array<mat2x4<${t}>, ${Math.ceil(o/8)}>`):e.push(`${n}:array<vec4<${t}>, ${Math.ceil(o/4)}>`);else{let i=o==null||o===1?t:`vec${o}<${t}>`;e.push(`${n}:${i}`)}return`
      struct Uniforms { ${e.join(", ")} };
      @group(0) @binding(${this.variableIndex}) var<uniform> uniforms: Uniforms;`}get additionalImplementations(){return this.uniformDeclaration()+this.variables.map(e=>e.impl()).join(`
`)+this.internalVariables.map(e=>e.impl()).join(`
`)}get variablesInfo(){if(this.uniforms.length===0)return;let e=n=>[12,10,1,6][["u32","f16","f32","i32"].indexOf(n)];return this.uniforms.map(n=>[e(n.type),n.length??1])}},mg=(r,e)=>new cl(r,e),so=(r,e)=>{let n=r.length,t=[];for(let o=0;o<n;o++){let i=n-1-o,s=r[i]||1;(e[e.length-1-o]||1)>1&&s===1&&t.unshift(i)}return t}});var i1,hg,a1,s1,cr,gg,yg,uo=D(()=>{"use strict";Ce();Ve();Ot();Fe();i1=r=>{if(!r||r.length!==1)throw new Error("Transpose requires 1 input.")},hg=(r,e)=>e&&e.length!==r?[...new Array(r).keys()].reverse():e,a1=(r,e)=>U.sortBasedOnPerm(r,hg(r.length,e)),s1=(r,e,n,t)=>{let o=[];o.push(`fn perm(i: ${t.type.indices}) -> ${n.type.indices} {
    var a: ${n.type.indices};`);for(let i=0;i<e;++i)o.push(n.indicesSet("a",r[i],`i[${i}]`));return o.push("return a;}"),o.join(`
`)},cr=(r,e)=>{let n=r.dataType,t=r.dims.length,o=hg(t,e),i=a1(r.dims,o),s=ee("output",n,i.length),a=F("a",n,t),u=l=>`
  ${l.registerUniform("output_size","u32").declareVariables(a,s)}

  ${s1(o,t,a,s)}

  ${l.mainStart()}
    ${l.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

    let indices = ${s.offsetToIndices("global_idx")};
    let aIndices = perm(indices);

    ${s.setByOffset("global_idx",a.getByIndices("aIndices"))}
  }`;return{name:"Transpose",shaderCache:{hint:`${e}`,inputDependencies:["rank"]},getRunData:l=>{let d=U.size(i);return{outputs:[{dims:i,dataType:l[0].dataType}],dispatchGroup:{x:Math.ceil(d/64)},programUniforms:[{type:12,data:d},...oe(l[0].dims,i)]}},getShaderSource:u}},gg=(r,e)=>{i1(r.inputs),r.compute(cr(r.inputs[0],e.perm))},yg=r=>Le({perm:r.perm})});var u1,l1,d1,c1,f1,p1,m1,h1,g1,y1,Rr,bg,vg,wg,_g,xg,$g,Tg,Sg,Ig,Ag,Og=D(()=>{"use strict";Ce();Ve();Fe();as();uo();u1={max:"select(bestValue, candidate, candidate > bestValue)",min:"select(bestValue, candidate, candidate < bestValue)",mean:"bestValue + candidate",sum:"bestValue + candidate",prod:"bestValue * candidate",sumSquare:"bestValue + candidate * candidate",logSumExp:"bestValue + exp(candidate)",l1:"bestValue + abs(candidate)",l2:"bestValue + candidate * candidate",logSum:"bestValue + candidate"},l1={max:"select(bestValue, candidate, candidate > bestValue)",min:"select(bestValue, candidate, candidate < bestValue)",mean:"bestValue + candidate",sum:"bestValue + candidate",prod:"bestValue * candidate",sumSquare:"bestValue + candidate",logSumExp:"bestValue + candidate",l1:"bestValue + candidate",l2:"bestValue + candidate",logSum:"bestValue + candidate"},d1={max:"_A[offset]",min:"_A[offset]",mean:"0",sum:"0",prod:"1",sumSquare:"0",logSumExp:"0",l1:"0",l2:"0",logSum:"0"},c1={max:"bestValue",min:"bestValue",sum:"bestValue",prod:"bestValue",sumSquare:"bestValue",logSumExp:"log(bestValue)",l1:"bestValue",l2:"sqrt(bestValue)",logSum:"log(bestValue)"},f1=(r,e)=>{let n=[];for(let t=e-r;t<e;++t)n.push(t);return n},p1=(r,e)=>{let n=[],t=r.length;for(let i=0;i<t;i++)e.indexOf(i)===-1&&n.push(r[i]);let o=e.map(i=>r[i]);return[n,o]},m1=(r,e)=>{let n=r.length+e.length,t=[],o=0;for(let i=0;i<n;i++)e.indexOf(i)===-1?t.push(r[o++]):t.push(1);return t},h1=(r,e)=>{for(let n=0;n<r.length;++n)if(r[r.length-n-1]!==e-1-n)return!1;return!0},g1=(r,e)=>{let n=[];if(!h1(r,e)){for(let t=0;t<e;++t)r.indexOf(t)===-1&&n.push(t);r.forEach(t=>n.push(t))}return n},y1=(r,e,n,t,o,i,s)=>{let a=n[0].dims,u=U.size(i),l=U.size(s),d=F("_A",n[0].dataType,a),p=ee("output",o,i),h=32,y=`
          var<workgroup> aBestValues : array<f32, ${h}>;
       `;return{name:r,shaderCache:e,getShaderSource:w=>`
        ${w.registerUniform("reduceSize","u32").declareVariables(d,p)}
        ${y}
        fn DIV_CEIL(a : u32, b : u32) -> u32 {
          return ((a - 1u) / b + 1u);
         }
         ${w.mainStart(h)}

          let outputIndex = global_idx / ${h};
          let offset = outputIndex * uniforms.reduceSize;

          var bestValue = f32(${d1[t]});
          let Length = uniforms.reduceSize;
          for (var k = local_idx; k < Length; k = k + ${h}) {
           let candidate = f32(${d.getByOffset("offset + k")});
           bestValue = ${u1[t]};
          }
          aBestValues[local_idx] = bestValue;
          workgroupBarrier();

         var reduceSize = min(Length, ${h}u);
         for (var currentSize = reduceSize / 2u; reduceSize > 1u;
             currentSize = reduceSize / 2u) {
           let interval = DIV_CEIL(reduceSize, 2u);
           if (local_idx < currentSize) {
            let candidate = aBestValues[local_idx + interval];
            bestValue = ${l1[t]};
            aBestValues[local_idx] = bestValue;
           }
           reduceSize = interval;
           workgroupBarrier();
         }

         if (local_idx == 0u) {
          ${p.setByOffset("outputIndex",`${t==="mean"?`${p.type.storage}(bestValue / f32(uniforms.reduceSize))`:`${p.type.storage}(${c1[t]})`}`)};
         }
        }`,getRunData:()=>({outputs:[{dims:i,dataType:o}],dispatchGroup:{x:u},programUniforms:[{type:12,data:l}]})}},Rr=(r,e,n,t)=>{let o=r.inputs.length===1?n:ml(r.inputs,n),i=o.axes;i.length===0&&!o.noopWithEmptyAxes&&(i=r.inputs[0].dims.map((y,b)=>b));let s=U.normalizeAxes(i,r.inputs[0].dims.length),a=s,u=r.inputs[0],l=g1(a,r.inputs[0].dims.length);l.length>0&&(u=r.compute(cr(r.inputs[0],l),{inputs:[0],outputs:[-1]})[0],a=f1(a.length,u.dims.length));let[d,p]=p1(u.dims,a),h=d;o.keepDims&&(h=m1(d,s)),r.compute(y1(e,{hint:o.cacheKey,inputDependencies:["type"]},[u],t,r.inputs[0].dataType,h,p),{inputs:[u]})},bg=(r,e)=>{Rr(r,"ReduceMeanShared",e,"mean")},vg=(r,e)=>{Rr(r,"ReduceL1Shared",e,"l1")},wg=(r,e)=>{Rr(r,"ReduceL2Shared",e,"l2")},_g=(r,e)=>{Rr(r,"ReduceLogSumExpShared",e,"logSumExp")},xg=(r,e)=>{Rr(r,"ReduceMaxShared",e,"max")},$g=(r,e)=>{Rr(r,"ReduceMinShared",e,"min")},Tg=(r,e)=>{Rr(r,"ReduceProdShared",e,"prod")},Sg=(r,e)=>{Rr(r,"ReduceSumShared",e,"sum")},Ig=(r,e)=>{Rr(r,"ReduceSumSquareShared",e,"sumSquare")},Ag=(r,e)=>{Rr(r,"ReduceLogSumShared",e,"logSum")}});var zr,b1,ss,ml,Mr,v1,w1,_1,x1,$1,T1,S1,I1,A1,O1,Nr,Eg,Cg,Pg,kg,Dg,Bg,Rg,zg,Mg,Ng,as=D(()=>{"use strict";Ce();Ve();Ot();Fe();Og();zr=r=>{if(!r||r.length===0||r.length>2)throw new Error("Reduce op requires 1 or 2 inputs.");if(r.length===2&&r[1].dims.length!==1)throw new Error("Invalid axes input dims.")},b1=r=>["","",`var value = ${r.getByIndices("input_indices")};`,""],ss=(r,e,n,t,o,i,s=!1,a=!1)=>{let u=[],l=n[0].dims,d=l.length,p=U.normalizeAxes(o,d),h=!a&&p.length===0;l.forEach((T,x)=>{h||p.indexOf(x)>=0?s&&u.push(1):u.push(T)});let y=u.length,b=U.size(u);return{name:r,shaderCache:e,getShaderSource:T=>{let x=[],_=F("_A",n[0].dataType,d),A=ee("output",i,y),P=t(_,A,p),k=P[2];for(let N=0,j=0;N<d;N++)h||p.indexOf(N)>=0?(s&&j++,k=`for(var j${N}: u32 = 0; j${N} < ${l[N]}; j${N}++) {
                  ${P[2].includes("last_index")?`let last_index = j${N};`:""}
                  ${_.indicesSet("input_indices",N,`j${N}`)}
                  ${k}
                }`):(x.push(`${_.indicesSet("input_indices",N,A.indicesGet("output_indices",j))};`),j++);return`

        ${T.registerUniform("output_size","u32").declareVariables(_,A)}

        ${T.mainStart()}
          ${T.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
          var input_indices: ${_.type.indices};
          let output_indices = ${A.offsetToIndices("global_idx")};

          ${x.join(`
`)}
          ${P[0]}       // init ops for reduce max/min
          ${P[1]}
          ${k}
          ${P[3]}
          ${P.length===4?A.setByOffset("global_idx","value"):P.slice(4).join(`
`)}
        }`},getRunData:()=>({outputs:[{dims:u,dataType:i}],dispatchGroup:{x:Math.ceil(b/64)},programUniforms:[{type:12,data:b},...oe(l,u)]})}},ml=(r,e)=>{let n=[];return r[1].dims[0]>0&&r[1].getBigInt64Array().forEach(t=>n.push(Number(t))),Le({axes:n,keepDims:e.keepDims,noopWithEmptyAxes:e.noopWithEmptyAxes})},Mr=(r,e,n,t)=>{let o=r.inputs,i=o.length===1?n:ml(o,n);r.compute(ss(e,{hint:i.cacheKey,inputDependencies:["rank"]},[o[0]],i.noopWithEmptyAxes&&i.axes.length===0?b1:t,i.axes,o[0].dataType,i.keepDims,i.noopWithEmptyAxes),{inputs:[0]})},v1=(r,e)=>{zr(r.inputs),Mr(r,"ReduceLogSum",e,(t,o)=>[`var value = ${o.type.storage}(0);`,"",`value += ${t.getByIndices("input_indices")};`,"value = log(value);"])},w1=(r,e)=>{zr(r.inputs),Mr(r,"ReduceL1",e,(t,o)=>[`var value = ${o.type.storage}(0);`,"",`value += abs(${t.getByIndices("input_indices")});`,""])},_1=(r,e)=>{zr(r.inputs),Mr(r,"ReduceL2",e,(t,o)=>[`var t = ${o.type.value}(0); var value = ${o.type.value}(0);`,"",`t = ${t.getByIndices("input_indices")}; value += (t * t);`,"value = sqrt(value);"])},x1=(r,e)=>{zr(r.inputs),Mr(r,"ReduceLogSumExp",e,(t,o)=>[`var value = ${o.type.storage}(0);`,"",`value += exp(${t.getByIndices("input_indices")});`,"value = log(value);"])},$1=(r,e)=>{zr(r.inputs),Mr(r,"ReduceMax",e,(t,o,i)=>{let s=[];for(let a=0;a<t.rank;a++)(i.indexOf(a)>=0||i.length===0)&&s.push(t.indicesSet("input_indices",a,0));return[`${s.join(`
`)}`,`var value = ${t.getByIndices("input_indices")};`,`value = max(value, ${t.getByIndices("input_indices")});`,""]})},T1=(r,e)=>{zr(r.inputs),Mr(r,"ReduceMean",e,(t,o,i)=>{let s=1;for(let a=0;a<t.rank;a++)(i.indexOf(a)>=0||i.length===0)&&(s*=r.inputs[0].dims[a]);return["var sum = f32(0);","",`sum += f32(${t.getByIndices("input_indices")});`,`let value = ${o.type.value}(sum / ${s});`]})},S1=(r,e)=>{zr(r.inputs),Mr(r,"ReduceMin",e,(t,o,i)=>{let s=[];for(let a=0;a<t.rank;a++)(i.indexOf(a)>=0||i.length===0)&&s.push(`input_indices[${a}] = 0;`);return[`${s.join(`
`)}`,`var value = ${t.getByIndices("input_indices")};`,`value = min(value, ${t.getByIndices("input_indices")});`,""]})},I1=(r,e)=>{zr(r.inputs),Mr(r,"ReduceProd",e,(t,o)=>[`var value = ${o.type.storage}(1);`,"",`value *= ${t.getByIndices("input_indices")};`,""])},A1=(r,e)=>{zr(r.inputs),Mr(r,"ReduceSum",e,(t,o)=>[`var value = ${o.type.storage}(0);`,"",`value += ${t.getByIndices("input_indices")};`,""])},O1=(r,e)=>{zr(r.inputs),Mr(r,"ReduceSumSquare",e,(t,o)=>[`var t = ${o.type.value}(0); var value = ${o.type.value}(0);`,"",`t = ${t.getByIndices("input_indices")}; value += t * t;`,""])},Nr=(r,e,n)=>{if(e.length===0)return n;let t=1,o=1;for(let i=0;i<e.length;i++)e.indexOf(i)===-1?t*=r[i]:o*=r[i];return o<32&&t>1024},Eg=(r,e)=>{Nr(r.inputs[0].dims,e.axes,e.noopWithEmptyAxes)?T1(r,e):bg(r,e)},Cg=(r,e)=>{Nr(r.inputs[0].dims,e.axes,e.noopWithEmptyAxes)?w1(r,e):vg(r,e)},Pg=(r,e)=>{Nr(r.inputs[0].dims,e.axes,e.noopWithEmptyAxes)?_1(r,e):wg(r,e)},kg=(r,e)=>{Nr(r.inputs[0].dims,e.axes,e.noopWithEmptyAxes)?x1(r,e):_g(r,e)},Dg=(r,e)=>{Nr(r.inputs[0].dims,e.axes,e.noopWithEmptyAxes)?$1(r,e):xg(r,e)},Bg=(r,e)=>{Nr(r.inputs[0].dims,e.axes,e.noopWithEmptyAxes)?S1(r,e):$g(r,e)},Rg=(r,e)=>{Nr(r.inputs[0].dims,e.axes,e.noopWithEmptyAxes)?I1(r,e):Tg(r,e)},zg=(r,e)=>{Nr(r.inputs[0].dims,e.axes,e.noopWithEmptyAxes)?A1(r,e):Sg(r,e)},Mg=(r,e)=>{Nr(r.inputs[0].dims,e.axes,e.noopWithEmptyAxes)?O1(r,e):Ig(r,e)},Ng=(r,e)=>{Nr(r.inputs[0].dims,e.axes,e.noopWithEmptyAxes)?v1(r,e):Ag(r,e)}});var Lg,Ug,Fg,hl,Vg=D(()=>{"use strict";Ce();Ot();as();Lg=r=>{if(!r||r.length===0||r.length>2)throw new Error("ArgMinMaxOp op requires 1 or 2 inputs.");if(r[0].dataType!==1)throw new Error("Invalid input type.")},Ug=(r,e)=>{Lg(r.inputs);let n=(t,o,i)=>{let s=[];for(let a=0;a<t.rank;a++)(i.indexOf(a)>=0||i.length===0)&&s.push(`input_indices[${a}] = 0;`);return[`${s.join(`
`)}`,`var value = ${t.getByIndices("input_indices")};
var best_index : i32 = 0;`,`if (${t.getByIndices("input_indices")} ${e.selectLastIndex>0?"<=":"<"} value) {
         value = ${t.getByIndices("input_indices")};
         best_index = i32(last_index);
       }`,"",o.setByOffset("global_idx","best_index")]};r.compute(ss("ArgMin",{hint:e.cacheKey,inputDependencies:["rank"]},[r.inputs[0]],n,[e.axis],7,e.keepDims),{inputs:[0]})},Fg=(r,e)=>{Lg(r.inputs);let n=(t,o,i)=>{let s=[];for(let a=0;a<t.rank;a++)(i.indexOf(a)>=0||i.length===0)&&s.push(`input_indices[${a}] = 0;`);return[`${s.join(`
`)}`,`var value = ${t.getByIndices("input_indices")};
var best_index : i32 = 0;`,`if (${t.getByIndices("input_indices")} ${e.selectLastIndex>0?">=":">"} value) {
         value = ${t.getByIndices("input_indices")};
         best_index = i32(last_index);
       }`,"",o.setByOffset("global_idx","best_index")]};r.compute(ss("argMax",{hint:e.cacheKey,inputDependencies:["rank"]},[r.inputs[0]],n,[e.axis],7,e.keepDims),{inputs:[0]})},hl=r=>Le(r)});var E1,C1,P1,k1,us,D1,Gg,gl=D(()=>{"use strict";Ce();es();Fe();E1=(r,e)=>{let n=r[0],t=r[1],o=r[2],i=r[3],s=r[4],a=r[5];if(s&&a)throw new Error("Attention cannot have both past and relative_position_bias");if(n.dims.length!==3)throw new Error('Input "input" must have 3 dimensions');let u=n.dims[0],l=n.dims[1],d=n.dims[2];if(o.dims.length!==1)throw new Error('Input "bias" is expected to have 1 dimensions');if(t.dims.length!==2)throw new Error('Input "weights" is expected to have 2 dimensions');if(t.dims[0]!==d)throw new Error("Input 1 dimension 0 should have same length as dimension 2 of input 0");if(o.dims[0]!==t.dims[1])throw new Error('Input "bias" dimension 0 should have same length as dimension 1 of input "weights"');let p=o.dims[0]/3,h=p,y=h;if(e.qkvHiddenSizes.length>0){if(e.qkvHiddenSizes.length!==3)throw new Error("qkv_hidden_sizes attribute should have 3 elements");for(let A of e.qkvHiddenSizes)if(A%e.numHeads!==0)throw new Error("qkv_hidden_sizes should be divisible by num_heads");p=e.qkvHiddenSizes[0],h=e.qkvHiddenSizes[1],y=e.qkvHiddenSizes[2]}let b=l;if(p!==h)throw new Error("qkv_hidden_sizes first element should be same as the second");if(o.dims[0]!==p+h+y)throw new Error('Input "bias" dimension 0 should have same length as sum of Q/K/V hidden sizes');let w=0;if(s){if(h!==y)throw new Error('Input "past" expect k_hidden_size == v_hidden_size');if(s.dims.length!==5)throw new Error('Input "past" must have 5 dimensions');if(s.dims[0]!==2)throw new Error('Input "past" first dimension must be 2');if(s.dims[1]!==u)throw new Error('Input "past" second dimension must be batch_size');if(s.dims[2]!==e.numHeads)throw new Error('Input "past" third dimension must be num_heads');if(s.dims[4]!==h/e.numHeads)throw new Error('Input "past" fifth dimension must be k_hidden_size / num_heads');e.pastPresentShareBuffer||(w=s.dims[3])}let T=b+w,x=-1,_=0;if(i)throw new Error("Mask not supported");if(s)throw new Error("past is not supported");if(a)throw new Error("relativePositionBias is not supported");return{batchSize:u,sequenceLength:l,pastSequenceLength:w,kvSequenceLength:b,totalSequenceLength:T,maxSequenceLength:x,inputHiddenSize:d,hiddenSize:p,vHiddenSize:y,headSize:Math.floor(p/e.numHeads),vHeadSize:Math.floor(y/e.numHeads),numHeads:e.numHeads,isUnidirectional:!1,pastPresentShareBuffer:!1,maskFilterValue:e.maskFilterValue,maskType:_,scale:e.scale,broadcastResPosBias:!1,passPastInKv:!1,qkvFormat:1}},C1=(r,e,n,t)=>{let o=it(t),i=64,s=t/o;s<i?i=1:s/8<64&&(i=Math.ceil(s/8));let a=Math.ceil(t/o/i),u=[{type:e.dataType,data:1/t},{type:12,data:s},{type:12,data:a}],l=tt(e.dataType,o),d=p=>{let h=ee("x",e.dataType,e.dims,o),y="thread_max_vector";o===2?y="max(thread_max_vector.x, thread_max_vector.y)":o===4&&(y="max(max(thread_max_vector.x, thread_max_vector.y), max(thread_max_vector.z, thread_max_vector.w))");let b=Xt(e.dataType),w=[{name:"d_inv",type:b},{name:"d_comp",type:"u32"},{name:"elements_per_wg",type:"u32"}];return`
  var<workgroup> wgMax: array<f32, ${i}>;
  var<workgroup> wgSum: array<f32, ${i}>;
  ${p.registerUniforms(w).declareVariables(h)}
  ${p.mainStart([i,1,1])}
    let localOffset = local_idx * uniforms.elements_per_wg;
    let offset: u32 = workgroup_id.x * uniforms.d_comp + localOffset;

    var thread_max_vector = ${Mt("f32",o,"-3.402823e+38f")};
    for (var i: u32 = 0; i < uniforms.elements_per_wg && i + localOffset < uniforms.d_comp; i++) {
      thread_max_vector = max(${br(b,o,"x[offset + i]")}, thread_max_vector);
    }
    wgMax[local_idx] = ${y};
    workgroupBarrier();

    var maxValue = -3.402823e+38f;
    for (var i = 0u; i < ${i}; i++) {
      maxValue = max(wgMax[i], maxValue);
    }

    var sumVector = ${Mt("f32",o,"0")};
    for (var i: u32 = 0; i < uniforms.elements_per_wg && i + localOffset < uniforms.d_comp; i++) {
      sumVector += exp(${br(b,o,"x[offset + i]")} - maxValue);
    }
    wgSum[local_idx] = ${Zt("sumVector",o)};
    workgroupBarrier();

    var sum: f32 = 0;
    for (var i = 0u; i < ${i}; i++) {
      sum += wgSum[i];
    }

    if (sum == 0) {
      for (var i: u32 = 0; i < uniforms.elements_per_wg && i + localOffset < uniforms.d_comp; i++) {
        x[offset + i] = ${Mt(b,o,"uniforms.d_inv")};
      }
    } else {
      for (var i: u32 = 0; i < uniforms.elements_per_wg && i + localOffset < uniforms.d_comp; i++) {
        let f32input = ${br(b,o,"x[offset + i]")};
        x[offset + i] = ${h.type.value}(exp(f32input - maxValue) / sum);
      }
    }
  }`};r.compute({name:"AttentionProbsSoftmax",shaderCache:{hint:`${i};${l};${o}`},getShaderSource:d,getRunData:()=>({outputs:[],dispatchGroup:{x:n},programUniforms:u})},{inputs:[e],outputs:[]})},P1=(r,e,n,t,o,i)=>{let s=[o.batchSize,o.numHeads,o.sequenceLength,o.kvSequenceLength+o.pastSequenceLength],a=i.scale===0?1/Math.sqrt(o.headSize):i.scale,u=it(o.headSize),l=o.headSize/u,d=12,p={x:Math.ceil(o.totalSequenceLength/d),y:Math.ceil(o.sequenceLength/d),z:o.batchSize*o.numHeads},h=[{type:12,data:o.sequenceLength},{type:12,data:l},{type:12,data:o.totalSequenceLength},{type:12,data:o.kvSequenceLength},{type:e.dataType,data:a}],y=[e,n],b=T=>{let x=F("q",e.dataType,e.dims,u),_=F("key",n.dataType,n.dims,u),A=ee("output",e.dataType,s),P=tt(e.dataType),k=[{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"kv_sequence_length",type:"u32"},{name:"alpha",type:P}];return`
  const beta: ${P} = 1.0;
  const TILE_SIZE = ${d}u;

  var<workgroup> tileQ: array<${x.type.storage}, ${d*d}>;
  var<workgroup> tileK: array<${x.type.storage}, ${d*d}>;
  ${T.registerUniforms(k).declareVariables(x,_,A)}
  ${T.mainStart([d,d,1])}
    // x holds the N and y holds the M
    let headIdx = workgroup_id.z;
    let m = workgroup_id.y * TILE_SIZE;
    let n = workgroup_id.x * TILE_SIZE;
    let qOffset = uniforms.M * uniforms.K * headIdx + m * uniforms.K;
    let kOffset = uniforms.kv_sequence_length * uniforms.K * headIdx + n * uniforms.K;

    var value = ${Mt(P,u)};
    for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {
      if (global_id.y < uniforms.M && w + local_id.x < uniforms.K) {
        tileQ[TILE_SIZE * local_id.y + local_id.x] = q[qOffset + local_id.y * uniforms.K + w + local_id.x];
      }
      if (n + local_id.y < uniforms.N && w + local_id.x < uniforms.K) {
        tileK[TILE_SIZE * local_id.y + local_id.x] = key[kOffset + local_id.y * uniforms.K + w + local_id.x];
      }
      workgroupBarrier();

      for (var k: u32 = 0u; k<TILE_SIZE && w+k < uniforms.K; k++) {
        value += tileQ[TILE_SIZE * local_id.y + k] * tileK[TILE_SIZE * local_id.x + k];
      }

      workgroupBarrier();
    }

    let headOffset = headIdx * uniforms.M * uniforms.N;
    if (global_id.y < uniforms.M && global_id.x < uniforms.N) {
      let outputIdx = headOffset + global_id.y * uniforms.N + global_id.x;
      output[outputIdx] = ${Zt("value",u)} * uniforms.alpha;
    }
  }`},w=r.compute({name:"AttentionProbs",shaderCache:{hint:`${u}`,inputDependencies:["type","type"]},getRunData:()=>({outputs:[{dims:s,dataType:e.dataType,gpuDataType:0}],dispatchGroup:p,programUniforms:h}),getShaderSource:b},{inputs:y,outputs:[-1]})[0];return C1(r,w,o.batchSize*o.numHeads*o.sequenceLength,o.totalSequenceLength),w},k1=(r,e,n,t)=>{let o=[t.batchSize,t.sequenceLength,t.vHiddenSize],i=12,s={x:Math.ceil(t.vHeadSize/i),y:Math.ceil(t.sequenceLength/i),z:t.batchSize*t.numHeads},a=[{type:12,data:t.sequenceLength},{type:12,data:t.totalSequenceLength},{type:12,data:t.vHeadSize},{type:12,data:t.numHeads},{type:12,data:t.vHiddenSize}],u=l=>{let d=F("probs",e.dataType,e.dims),p=F("v",n.dataType,n.dims),h=ee("output",e.dataType,o),y=[{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"v_hidden_size",type:"u32"}];return`
  const TILE_SIZE = ${i}u;
  var<workgroup> tileQ: array<${d.type.value}, ${i*i}>;
  var<workgroup> tileK: array<${d.type.value}, ${i*i}>;
  ${l.registerUniforms(y).declareVariables(d,p,h)}
  ${l.mainStart([i,i,1])}
   let headIdx = workgroup_id.z;
   let m = global_id.y;
   let n = global_id.x;

   let offsetA = headIdx * (uniforms.M * uniforms.K) + m * uniforms.K;
   let offsetB = headIdx * (uniforms.N * uniforms.K) + n;

   var value = ${d.type.storage}(0);
   for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {
     if (m < uniforms.M && w + local_id.x < uniforms.K) {
       tileQ[TILE_SIZE * local_id.y + local_id.x] = probs[offsetA + w + local_id.x];
     }
     if (n < uniforms.N && w + local_id.y < uniforms.K) {
       tileK[TILE_SIZE * local_id.y + local_id.x] = v[offsetB + (w + local_id.y) * uniforms.N];
     }
     workgroupBarrier();
     for (var k: u32 = 0u; k<TILE_SIZE && w+k < uniforms.K; k++) {
       value += tileQ[TILE_SIZE * local_id.y + k] * tileK[TILE_SIZE * k + local_id.x];
     }
     workgroupBarrier();
   }

   // we need to transpose output from BNSH_v to BSND_v
   let batchIdx = workgroup_id.z / uniforms.num_heads;
   let currentBatchHeadNumber = workgroup_id.z % uniforms.num_heads;
   let headOffset = (batchIdx * uniforms.M * uniforms.num_heads + currentBatchHeadNumber) * uniforms.N;
   if (m < uniforms.M && n < uniforms.N) {
     let outputIdx = batchIdx * uniforms.M *uniforms.v_hidden_size + m * uniforms.v_hidden_size
       + currentBatchHeadNumber * uniforms.N + n;
     output[outputIdx] = value;
   }
  }`};return r.compute({name:"AttentionScore",shaderCache:{inputDependencies:["type","type"]},getRunData:()=>({outputs:[{dims:o,dataType:e.dataType,gpuDataType:0}],dispatchGroup:s,programUniforms:a}),getShaderSource:u},{inputs:[e,n],outputs:[0]})[0]},us=(r,e,n,t,o,i,s,a,u,l,d)=>{let p=P1(r,e,n,u,l,d);k1(r,p,t,l)},D1=(r,e)=>{let n=[e.batchSize,e.numHeads,e.sequenceLength,e.headSize],t=e.sequenceLength,o=e.inputHiddenSize,i=e.headSize,s=12,a={x:Math.ceil(e.headSize/s),y:Math.ceil(e.sequenceLength/s),z:e.batchSize*e.numHeads},u=[r.inputs[0],r.inputs[1],r.inputs[2]],l=[{type:12,data:t},{type:12,data:o},{type:12,data:i},{type:12,data:e.numHeads},{type:12,data:e.headSize},{type:12,data:e.hiddenSize},{type:12,data:e.hiddenSize+e.hiddenSize+e.vHiddenSize}],d=p=>{let h=ee("output_q",u[0].dataType,n),y=ee("output_k",u[0].dataType,n),b=ee("output_v",u[0].dataType,n),w=F("input",u[0].dataType,u[0].dims),T=F("weight",u[1].dataType,u[1].dims),x=F("bias",u[2].dataType,u[2].dims),_=w.type.storage,A=[{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"head_size",type:"u32"},{name:"hidden_size",type:"u32"},{name:"ldb",type:"u32"}];return`
  const TILE_SIZE = ${s}u;
  var<workgroup> tileInput: array<${_}, ${s*s}>;
  var<workgroup> tileWeightQ: array<${_}, ${s*s}>;
  var<workgroup> tileWeightK: array<${_}, ${s*s}>;
  var<workgroup> tileWeightV: array<${_}, ${s*s}>;
  ${p.registerUniforms(A).declareVariables(w,T,x,h,y,b)}
  ${p.mainStart([s,s,1])}
    let batchIndex = workgroup_id.z / uniforms.num_heads;
    let headNumber = workgroup_id.z % uniforms.num_heads;
    let m = global_id.y;
    let n = global_id.x;

    let inputOffset = batchIndex * (uniforms.M * uniforms.K) + m * uniforms.K;
    let biasOffsetQ = headNumber * uniforms.head_size;
    let biasOffsetK = uniforms.hidden_size + biasOffsetQ;
    let biasOffsetV = uniforms.hidden_size + biasOffsetK;

    var valueQ = ${_}(0);
    var valueK = ${_}(0);
    var valueV = ${_}(0);
    for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {
      if (m < uniforms.M && w + local_id.x < uniforms.K) {
        tileInput[TILE_SIZE * local_id.y + local_id.x] = input[inputOffset + w + local_id.x];
      }
      if (n < uniforms.N && w + local_id.y < uniforms.K) {
        let offset = n + (w + local_id.y) * uniforms.ldb;
        tileWeightQ[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetQ + offset];
        tileWeightK[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetK + offset];
        tileWeightV[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetV + offset];
      }
      workgroupBarrier();
      for (var k: u32 = 0u; k<TILE_SIZE && w+k < uniforms.K; k++) {
        let inputTileOffset = TILE_SIZE * local_id.y + k;
        let weightTileOffset = TILE_SIZE * k + local_id.x;
        valueQ += tileInput[inputTileOffset] * tileWeightQ[weightTileOffset];
        valueK += tileInput[inputTileOffset] * tileWeightK[weightTileOffset];
        valueV += tileInput[inputTileOffset] * tileWeightV[weightTileOffset];
      }

      workgroupBarrier();
    }

    let headOffset = (m * uniforms.N + n) % uniforms.head_size;
    valueQ += bias[headOffset + biasOffsetQ];
    valueK += bias[headOffset + biasOffsetK];
    valueV += bias[headOffset + biasOffsetV];

    let offset = workgroup_id.z * uniforms.M * uniforms.N;
    if (m < uniforms.M && n < uniforms.N) {
      let outputIdx = offset + m * uniforms.N + n;
      output_q[outputIdx] = valueQ;
      output_k[outputIdx] = valueK;
      output_v[outputIdx] = valueV;
    }
  }`};return r.compute({name:"AttentionPrepare",shaderCache:{inputDependencies:["type","type","type"]},getRunData:()=>({outputs:[{dims:n,dataType:r.inputs[0].dataType,gpuDataType:0},{dims:n,dataType:r.inputs[0].dataType,gpuDataType:0},{dims:n,dataType:r.inputs[0].dataType,gpuDataType:0}],dispatchGroup:a,programUniforms:l}),getShaderSource:d},{inputs:u,outputs:[-1,-1,-1]})},Gg=(r,e)=>{let n=E1(r.inputs,e),[t,o,i]=D1(r,n);return us(r,t,o,i,r.inputs[4],void 0,void 0,void 0,r.inputs[5],n,e)}});var B1,R1,z1,Wg,Hg=D(()=>{"use strict";Rt();Ce();Ve();Ot();Fe();B1=(r,e)=>{if(!r||r.length!==5)throw new Error("BatchNormalization requires 5 inputs");let n=(t,o,i)=>{let s=o.length;if(s!==t.length)throw new Error(`${i}: num dimensions != ${s}`);o.forEach((a,u)=>{if(a!==t[u])throw new Error(`${i}: dim[${u}] do not match`)})};if(r[0].dims.length>1){let t=e.format==="NHWC"?e.spatial?r[0].dims.slice(-1):r[0].dims.slice(-1).concat(r[0].dims.slice(1,r[0].dims.length-1)):r[0].dims.slice(1,e.spatial?2:void 0);n(r[1].dims,t,"Invalid input scale"),n(r[2].dims,t,"Invalid input B"),n(r[3].dims,t,"Invalid input mean"),n(r[4].dims,t,"Invalid input var")}else n(r[1].dims,[1],"Invalid input scale"),n(r[2].dims,[1],"Invalid input B"),n(r[3].dims,[1],"Invalid input mean"),n(r[4].dims,[1],"Invalid input var")},R1=(r,e)=>{let{epsilon:n,spatial:t,format:o}=e,i=r[0].dims,s=t?it(i[i.length-1]):1,a=o==="NHWC"&&i.length>1?s:1,u=U.size(i)/s,l=t,d=l?i.length:i,p=F("x",r[0].dataType,r[0].dims,s),h=F("scale",r[1].dataType,r[1].dims,a),y=F("bias",r[2].dataType,r[2].dims,a),b=F("inputMean",r[3].dataType,r[3].dims,a),w=F("inputVar",r[4].dataType,r[4].dims,a),T=ee("y",r[0].dataType,d,s),x=()=>{let A="";if(t)A=`let cOffset = ${i.length===1?"0u":o==="NHWC"?`outputIndices[${i.length-1}] / ${s}`:"outputIndices[1]"};`;else if(o==="NCHW")A=`
            ${T.indicesSet("outputIndices","0","0")}
            let cOffset = ${T.indicesToOffset("outputIndices")};`;else{A=`var cIndices = ${h.type.indices}(0);
                       cIndices[0] = outputIndices[${i.length-1}];`;for(let P=1;P<h.rank;P++)A+=`cIndices[${P}] = outputIndices[${P}];`;A+=`let cOffset = ${h.indicesToOffset("cIndices")};`}return A},_=A=>`
  const epsilon = ${n};
  ${A.registerUniform("outputSize","u32").declareVariables(p,h,y,b,w,T)}
  ${A.mainStart()}
  ${A.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
    var outputIndices = ${T.offsetToIndices(`global_idx * ${s}`)};
    ${x()}
    let scale = ${h.getByOffset("cOffset")};
    let bias = ${y.getByOffset("cOffset")};
    let inputMean = ${b.getByOffset("cOffset")};
    let inputVar = ${w.getByOffset("cOffset")};
    let x = ${p.getByOffset("global_idx")};
    let value = (x - inputMean) * inverseSqrt(inputVar + epsilon) * scale + bias;
    ${T.setByOffset("global_idx","value")}
  }`;return{name:"BatchNormalization",shaderCache:{hint:`${e.epsilon}_${e.format}_${t}_${s}`,inputDependencies:l?["rank","type","type","type","type"]:void 0},getShaderSource:_,getRunData:()=>({outputs:[{dims:r[0].dims,dataType:r[0].dataType}],dispatchGroup:{x:Math.ceil(u/64)},programUniforms:l?[{type:12,data:u},...oe(i)]:[{type:12,data:u}]})}},z1=r=>Le(r),Wg=(r,e)=>{let{inputs:n,outputCount:t}=r,o=z1({...e,outputCount:t});if(_e.webgpu.validateInputContent&&B1(n,o),e.trainingMode)throw new Error("BatchNormalization trainingMode is not supported yet.");r.compute(R1(n,o))}});var M1,N1,jg,qg=D(()=>{"use strict";Ve();Fe();M1=r=>{if(r[0].dims.length!==3)throw new Error("input should have 3 dimensions");if(![320,640,1280].includes(r[0].dims[2]))throw new Error("number of channels should be 320, 640 or 1280");if(r[1].dims.length!==1)throw new Error("bias is expected to have 1 dimensions");if(r[0].dims[2]!==r[1].dims[0])throw new Error("last dimension of input and bias are not the same")},N1=r=>{let e=r[0].dims,n=r[0].dims[2],t=U.size(e)/4,o=r[0].dataType,i=F("input",o,e,4),s=F("bias",o,[n],4),a=F("residual",o,e,4),u=ee("output",o,e,4);return{name:"BiasAdd",getRunData:()=>({outputs:[{dims:e,dataType:r[0].dataType}],dispatchGroup:{x:Math.ceil(t/64)}}),getShaderSource:d=>`
  const channels = ${n}u / 4;
  ${d.declareVariables(i,s,a,u)}

  ${d.mainStart()}
    ${d.guardAgainstOutOfBoundsWorkgroupSizes(t)}
    let value = ${i.getByOffset("global_idx")}
      + ${s.getByOffset("global_idx % channels")} + ${a.getByOffset("global_idx")};
    ${u.setByOffset("global_idx","value")}
  }`}},jg=r=>{M1(r.inputs),r.compute(N1(r.inputs))}});var L1,Je,Kg,Yg,Xg,Zg,Jg,Qg,ey,ty,ry,U1,ny,oy,iy,ay,ls,sy,ds,uy,ly,dy,cy,fy,py,my,hy,gy,yy,by,vy,wy,_y,xy,$y,Ty,Sy,yl,bl,Iy,Ay,Oy,cs=D(()=>{"use strict";Ce();Ve();Ot();Fe();L1=(r,e,n,t,o,i)=>{let s=Math.ceil(e/4),a="";typeof o=="string"?a=`${o}(a)`:a=o("a");let u=F("inputData",n,[s],4),l=ee("outputData",t,[s],4);return`
      ${r.registerUniform("vec_size","u32").declareVariables(u,l)}

  ${i??""}

  ${r.mainStart()}
    ${r.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}

    let a = ${u.getByOffset("global_idx")};
    ${l.setByOffset("global_idx",a)}
  }`},Je=(r,e,n,t,o,i=r.dataType)=>({name:e,shaderCache:{hint:o,inputDependencies:["type"]},getShaderSource:s=>L1(s,U.size(r.dims),r.dataType,i,n,t),getRunData:s=>({outputs:[{dims:r.dims,dataType:i}],dispatchGroup:{x:Math.ceil(U.size(s[0].dims)/64/4)},programUniforms:[{type:12,data:Math.ceil(U.size(r.dims)/4)}]})}),Kg=r=>{r.compute(Je(r.inputs[0],"Abs","abs"))},Yg=r=>{r.compute(Je(r.inputs[0],"Acos","acos"))},Xg=r=>{r.compute(Je(r.inputs[0],"Acosh","acosh"))},Zg=r=>{r.compute(Je(r.inputs[0],"Asin","asin"))},Jg=r=>{r.compute(Je(r.inputs[0],"Asinh","asinh"))},Qg=r=>{r.compute(Je(r.inputs[0],"Atan","atan"))},ey=r=>{r.compute(Je(r.inputs[0],"Atanh","atanh"))},ty=r=>Le(r),ry=(r,e)=>{let n;switch(e.to){case 10:n="vec4<f16>";break;case 1:n="vec4<f32>";break;case 12:n="vec4<u32>";break;case 6:n="vec4<i32>";break;case 9:n="vec4<bool>";break;default:throw new RangeError(`not supported type (specified in attribute 'to' from 'Cast' operator): ${e.to}`)}r.compute(Je(r.inputs[0],"Cast",n,void 0,e.cacheKey,e.to))},U1=r=>{let e=r.length>=2&&r[1].data!==0?r[1].getFloat32Array()[0]:ns,n=r.length>=3&&r[2].data!==0?r[2].getFloat32Array()[0]:os;return Le({min:e,max:n})},ny=(r,e)=>{let n=r.inputs.length===1?e:U1(r.inputs),t=Xt(r.inputs[0].dataType);r.compute(Je(r.inputs[0],"Clip",o=>`clamp(${o}, clip_min_, clip_max_)`,`
    const clip_min_: vec4<${t}> = vec4(${t}(${n.min}));
    const clip_max_: vec4<${t}> = vec4(${t}(${n.max}));
`,n.cacheKey),{inputs:[0]})},oy=r=>{r.compute(Je(r.inputs[0],"Ceil","ceil"))},iy=r=>{r.compute(Je(r.inputs[0],"Cos","cos"))},ay=r=>{r.compute(Je(r.inputs[0],"Cosh","cosh"))},ls=r=>Le(r),sy=(r,e)=>{let n=Xt(r.inputs[0].dataType);r.compute(Je(r.inputs[0],"Elu",t=>`elu_vf32(${t})`,`
  const elu_alpha_ = ${n}(${e.alpha});

  fn elu_f32(a: ${n}) -> ${n} {
  return select((exp(a) - 1.0) * elu_alpha_, a, a >= 0.0);
  }

  fn elu_vf32(v: vec4<${n}>) -> vec4<${n}> {
  return vec4(elu_f32(v.x), elu_f32(v.y), elu_f32(v.z), elu_f32(v.w));
  }`,e.cacheKey))},ds=(r="f32")=>`
const r0: ${r} = 0.3275911;
const r1: ${r} = 0.254829592;
const r2: ${r} = -0.284496736;
const r3: ${r} = 1.421413741;
const r4: ${r} = -1.453152027;
const r5: ${r} = 1.061405429;

fn erf_vf32(v: vec4<${r}>) -> vec4<${r}> {
  let absv = abs(v);
  let x = 1.0 / (1.0 + r0 * absv);
  return sign(v) * (1.0 - ((((r5 * x + r4) * x + r3) * x + r2) * x + r1) * x * exp(-absv * absv));
}`,uy=r=>{let e=Xt(r.inputs[0].dataType);r.compute(Je(r.inputs[0],"Erf",n=>`erf_vf32(${n})`,ds(e)))},ly=r=>{r.compute(Je(r.inputs[0],"Exp","exp"))},dy=r=>{r.compute(Je(r.inputs[0],"Floor","floor"))},cy=r=>{let e=Xt(r.inputs[0].dataType);r.compute(Je(r.inputs[0],"Gelu",n=>`0.5 * ${n} * (1.0 + erf_vf32(${n} * 0.7071067811865475))`,ds(e)))},fy=(r,e)=>{let n=Xt(r.inputs[0].dataType);r.compute(Je(r.inputs[0],"LeakyRelu",t=>`select(leaky_relu_alpha_ * ${t}, ${t}, ${t} >= vec4<${n}>(0.0))`,`const leaky_relu_alpha_ = ${n}(${e.alpha});`,e.cacheKey))},py=r=>{r.compute(Je(r.inputs[0],"Not",e=>`!${e}`))},my=r=>{r.compute(Je(r.inputs[0],"Neg",e=>`-${e}`))},hy=r=>{r.compute(Je(r.inputs[0],"Reciprocal",e=>`1.0/${e}`))},gy=r=>{let e=Xt(r.inputs[0].dataType);r.compute(Je(r.inputs[0],"Relu",n=>`select(vec4<${e}>(0.0), ${n}, ${n} > vec4<${e}>(0.0))`))},yy=r=>{r.compute(Je(r.inputs[0],"Sigmoid",e=>`(1.0 / (1.0 + exp(-${e})))`))},by=r=>Le(r),vy=(r,e)=>{let n=Xt(r.inputs[0].dataType);r.compute(Je(r.inputs[0],"HardSigmoid",t=>`max(vec4<${n}>(0.0), min(vec4<${n}>(1.0), ${e.alpha} * ${t} + vec4<${n}>(${e.beta})))`,void 0,e.cacheKey))},wy=r=>{r.compute(Je(r.inputs[0],"Sin","sin"))},_y=r=>{r.compute(Je(r.inputs[0],"Sinh","sinh"))},xy=r=>{r.compute(Je(r.inputs[0],"Sqrt","sqrt"))},$y=r=>{r.compute(Je(r.inputs[0],"Tan","tan"))},Ty=r=>`sign(${r}) * (1 - exp(-2 * abs(${r}))) / (1 + exp(-2 * abs(${r})))`,Sy=r=>{r.compute(Je(r.inputs[0],"Tanh",Ty))},yl=(r="f32")=>`
const fast_gelu_a: ${r} = 0.5;
const fast_gelu_b: ${r} = 0.7978845608028654;
const fast_gelu_c: ${r} = 0.035677408136300125;

fn tanh_v(v: vec4<${r}>) -> vec4<${r}> {
  return ${Ty("v")};
}
`,bl=r=>`(fast_gelu_a + fast_gelu_a * tanh_v(${r} * (fast_gelu_c * ${r} * ${r} + fast_gelu_b))) * ${r}`,Iy=r=>{let e=Xt(r.inputs[0].dataType);r.compute(Je(r.inputs[0],"FastGelu",bl,yl(e),void 0,r.inputs[0].dataType))},Ay=(r,e)=>{let n=Xt(r.inputs[0].dataType);return r.compute(Je(r.inputs[0],"ThresholdedRelu",t=>`select(vec4<${n}>(0.0), ${t}, ${t} > thresholded_relu_alpha_)`,`const thresholded_relu_alpha_ = vec4<${n}>(${e.alpha});`,e.cacheKey)),0},Oy=r=>{r.compute(Je(r.inputs[0],"Log","log"))}});var F1,V1,Cy,Py=D(()=>{"use strict";Ve();Fe();cs();F1=r=>{if(r[0].dims.length!==3)throw new Error("input should have 3 dimensions");if(![2560,5120,10240].includes(r[0].dims[2]))throw new Error("hidden state should be 2560, 5120 or 10240");if(r[1].dims.length!==1)throw new Error("bias is expected to have 1 dimensions");if(r[0].dims[2]!==r[1].dims[0])throw new Error("last dimension of input and bias are not the same")},V1=r=>{let e=r[0].dims.slice();e[2]=e[2]/2;let n=F("input",r[0].dataType,r[0].dims,4),t=F("bias",r[0].dataType,[r[0].dims[2]],4),o=ee("output",r[0].dataType,e,4),i=U.size(e)/4,s=tt(r[0].dataType);return{name:"BiasSplitGelu",getRunData:()=>({outputs:[{dims:e,dataType:r[0].dataType}],dispatchGroup:{x:Math.ceil(i/64)}}),getShaderSource:u=>`
  const M_SQRT2 = sqrt(2.0);
  const halfChannels = ${r[0].dims[2]/4/2}u;

  ${u.declareVariables(n,t,o)}

  ${ds(s)}

  ${u.mainStart()}
    ${u.guardAgainstOutOfBoundsWorkgroupSizes(i)}
    let biasIdx = global_idx % halfChannels;
    let batchIndex = global_idx / halfChannels;
    let inputOffset = biasIdx + batchIndex * halfChannels * 2;
    let valueLeft = input[inputOffset] + bias[biasIdx];
    let valueRight = input[inputOffset + halfChannels] + bias[biasIdx + halfChannels];
    let geluRight = valueRight * 0.5 * (erf_vf32(valueRight / M_SQRT2) + 1);

    ${o.setByOffset("global_idx","valueLeft * geluRight")}
  }`}},Cy=r=>{F1(r.inputs),r.compute(V1(r.inputs))}});var G1,W1,Lr,ky,Dy,By,Ry,zy,My,Ny,Ly,Uy,Fy,Vy=D(()=>{"use strict";Ce();Ve();Fe();G1=(r,e,n,t,o,i,s,a,u,l,d,p)=>{let h,y;typeof a=="string"?h=y=(_,A)=>`${a}((${_}),(${A}))`:typeof a=="function"?h=y=a:(h=a.scalar,y=a.vector);let b=ee("outputData",d,t.length,4),w=F("aData",u,e.length,4),T=F("bData",l,n.length,4),x;if(o)if(i){let _=U.size(e)===1,A=U.size(n)===1,P=e.length>0&&e[e.length-1]%4===0,k=n.length>0&&n[n.length-1]%4===0;_||A?x=b.setByOffset("global_idx",y(_?`${w.type.value}(${w.getByOffset("0")}.x)`:w.getByOffset("global_idx"),A?`${T.type.value}(${T.getByOffset("0")}.x)`:T.getByOffset("global_idx"))):x=`
            let outputIndices = ${b.offsetToIndices("global_idx * 4u")};
            let offsetA = ${w.broadcastedIndicesToOffset("outputIndices",b)};
            let offsetB = ${T.broadcastedIndicesToOffset("outputIndices",b)};
            ${b.setByOffset("global_idx",y(s||P?w.getByOffset("offsetA / 4u"):`${w.type.value}(${w.getByOffset("offsetA / 4u")}[offsetA % 4u])`,s||k?T.getByOffset("offsetB / 4u"):`${T.type.value}(${T.getByOffset("offsetB / 4u")}[offsetB % 4u])`))}
          `}else x=b.setByOffset("global_idx",y(w.getByOffset("global_idx"),T.getByOffset("global_idx")));else{if(!i)throw new Error("no necessary to use scalar implementation for element-wise binary op implementation.");let _=(A,P,k="")=>{let N=`aData[indexA${P}][componentA${P}]`,j=`bData[indexB${P}][componentB${P}]`;return`
            let outputIndices${P} = ${b.offsetToIndices(`global_idx * 4u + ${P}u`)};
            let offsetA${P} = ${w.broadcastedIndicesToOffset(`outputIndices${P}`,b)};
            let offsetB${P} = ${T.broadcastedIndicesToOffset(`outputIndices${P}`,b)};
            let indexA${P} = offsetA${P} / 4u;
            let indexB${P} = offsetB${P} / 4u;
            let componentA${P} = offsetA${P} % 4u;
            let componentB${P} = offsetB${P} % 4u;
            ${A}[${P}] = ${k}(${h(N,j)});
          `};d===9?x=`
            var data = vec4<u32>(0);
            ${_("data",0,"u32")}
            ${_("data",1,"u32")}
            ${_("data",2,"u32")}
            ${_("data",3,"u32")}
            outputData[global_idx] = dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(data));`:x=`
            ${_("outputData[global_idx]",0)}
            ${_("outputData[global_idx]",1)}
            ${_("outputData[global_idx]",2)}
            ${_("outputData[global_idx]",3)}
          `}return`
        ${r.registerUniform("vec_size","u32").declareVariables(w,T,b)}

        ${p??""}

        ${r.mainStart()}
        ${r.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}
        ${x}
      }`},W1=(r,e,n,t,o,i,s=n.dataType)=>{let a=!U.areEqual(n.dims,t.dims),u=n.dims,l=U.size(n.dims),d=!1,p=!1,h=[a];if(a){let y=Br.calcShape(n.dims,t.dims,!1);if(!y)throw new Error("Can't perform binary op on the given tensors");u=y,l=U.size(u);let b=U.size(n.dims)===1,w=U.size(t.dims)===1,T=n.dims.length>0&&n.dims[n.dims.length-1]%4===0,x=t.dims.length>0&&t.dims[t.dims.length-1]%4===0;h.push(b),h.push(w),h.push(T),h.push(x);let _=1;for(let A=1;A<u.length;A++){let P=n.dims[n.dims.length-A]??1,k=t.dims[t.dims.length-A]??1;if(P===k)_*=P;else break}_%4===0?(p=!0,d=!0):(b||w||T||x)&&(d=!0)}else d=!0;return h.push(d),{name:r,shaderCache:{hint:e+h.map(y=>y.toString()).join("_"),inputDependencies:["rank","rank"]},getShaderSource:y=>G1(y,n.dims,t.dims,u,d,a,p,o,n.dataType,t.dataType,s,i),getRunData:()=>({outputs:[{dims:u,dataType:s}],dispatchGroup:{x:Math.ceil(l/64/4)},programUniforms:[{type:12,data:Math.ceil(U.size(u)/4)},...oe(n.dims,t.dims,u)]})}},Lr=(r,e,n,t,o,i)=>{r.compute(W1(e,o??"",r.inputs[0],r.inputs[1],n,t,i))},ky=r=>{Lr(r,"Add",(e,n)=>`${e}+${n}`)},Dy=r=>{Lr(r,"Div",(e,n)=>`${e}/${n}`)},By=r=>{Lr(r,"Equal",{scalar:(e,n)=>`u32(${e}==${n})`,vector:(e,n)=>`vec4<u32>(${e}==${n})`},void 0,void 0,9)},Ry=r=>{Lr(r,"Mul",(e,n)=>`${e}*${n}`)},zy=r=>{let e=F("input",r.inputs[0].dataType,r.inputs[0].dims).type.value;Lr(r,"Pow",{scalar:(t,o)=>`pow_custom(${t},${o})`,vector:(t,o)=>`pow_vector_custom(${t},${o})`},`
    fn pow_custom(a : ${e}, b : ${e}) -> ${e} {
      if (b == ${e}(0.0)) {
        return ${e}(1.0);
      } else if (a < ${e}(0.0) && f32(b) != floor(f32(b))) {
        return ${e}(pow(f32(a), f32(b))); // NaN
      }
      return select(sign(a), ${e}(1.0), round(f32(abs(b) % ${e}(2.0))) != 1.0) * ${e}(${e==="i32"?"round":""}(pow(f32(abs(a)), f32(b))));
    }
    fn pow_vector_custom(a : vec4<${e}>, b : vec4<${e}>) -> vec4<${e}> {
      // TODO: implement vectorized pow
      return vec4<${e}>(pow_custom(a.x, b.x), pow_custom(a.y, b.y), pow_custom(a.z, b.z), pow_custom(a.w, b.w));
    }
      `)},My=r=>{Lr(r,"Sub",(e,n)=>`${e}-${n}`)},Ny=r=>{Lr(r,"Greater",{scalar:(e,n)=>`u32(${e}>${n})`,vector:(e,n)=>`vec4<u32>(${e}>${n})`},void 0,void 0,9)},Ly=r=>{Lr(r,"Less",{scalar:(e,n)=>`u32(${e}<${n})`,vector:(e,n)=>`vec4<u32>(${e}<${n})`},void 0,void 0,9)},Uy=r=>{Lr(r,"GreaterOrEqual",{scalar:(e,n)=>`u32(${e}>=${n})`,vector:(e,n)=>`vec4<u32>(${e}>=${n})`},void 0,void 0,9)},Fy=r=>{Lr(r,"LessOrEqual",{scalar:(e,n)=>`u32(${e}<=${n})`,vector:(e,n)=>`vec4<u32>(${e}<=${n})`},void 0,void 0,9)}});var j1,q1,K1,Y1,Gy,Wy,Hy=D(()=>{"use strict";Ce();Ve();Ot();Fe();j1=(r,e)=>{if(!r||r.length<1)throw new Error("too few inputs");let n=0,t=r[n],o=t.dataType,i=t.dims.length;r.forEach((s,a)=>{if(a!==n){if(s.dataType!==o)throw new Error("input tensors should be one type");if(s.dims.length!==i)throw new Error("input tensors should have the same shape");s.dims.forEach((u,l)=>{if(l!==e&&u!==t.dims[l])throw new Error("non concat dimensions must match")})}})},q1=(r,e)=>`
  fn calculateInputIndex(index: u32) -> u32 {
    let sizeInConcatAxis = array<u32, ${r}u>(${e});
    for (var i: u32 = 0u; i < ${r}; i += 1u ) {
      if (index < sizeInConcatAxis[i]) {
        return i;
      }
    }
    return ${r}u;
  }`,K1=(r,e)=>{let n=r.length,t=[];for(let o=0;o<n;++o){let i=e.setByOffset("global_idx",r[o].getByIndices("indices"));n===1?t.push(i):o===0?t.push(`if (inputIndex == ${o}u) { ${i} }`):o===n-1?t.push(`else { ${i} }`):t.push(`else if (inputIndex == ${o}) { ${i} }`)}return t.join(`
`)},Y1=(r,e,n,t)=>{let o=U.size(n),i=new Array(r.length),s=new Array(r.length),a=0,u=[],l=[],d=[{type:12,data:o}];for(let w=0;w<r.length;++w)a+=r[w].dims[e],i[w]=a,l.push(r[w].dims.length),s[w]=F(`input${w}`,t,l[w]),u.push("rank"),d.push({type:12,data:i[w]});for(let w=0;w<r.length;++w)d.push(...oe(r[w].dims));d.push(...oe(n));let p=ee("output",t,n.length),h=p.indicesGet("indices",e),y=Array.from(Array(i.length).keys()).map(w=>`uniforms.sizeInConcatAxis${w}`).join(","),b=w=>`

  ${(()=>{w.registerUniform("outputSize","u32");for(let T=0;T<r.length;T++)w.registerUniform(`sizeInConcatAxis${T}`,"u32");return w.declareVariables(...s,p)})()}

  ${q1(i.length,y)}

  ${w.mainStart()}
    ${w.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}

    var indices = ${p.offsetToIndices("global_idx")};

    let inputIndex = calculateInputIndex(${h});
    if (inputIndex != 0u) {
      let sizeInConcatAxis = array<u32, ${i.length}u>(${y});
      ${h} -= sizeInConcatAxis[inputIndex - 1u];
    }

    ${K1(s,p)}
  }`;return{name:"Concat",shaderCache:{hint:`${e}`,inputDependencies:u},getRunData:()=>({outputs:[{dims:n,dataType:t}],dispatchGroup:{x:Math.ceil(o/64)},programUniforms:d}),getShaderSource:b}},Gy=(r,e)=>{let n=r.inputs,t=n[0].dims,o=U.normalizeAxis(e.axis,t.length);j1(n,o);let i=t.slice();i[o]=n.reduce((a,u)=>a+(u.dims.length>o?u.dims[o]:0),0);let s=n.filter(a=>U.size(a.dims)>0);r.compute(Y1(s,o,i,n[0].dataType),{inputs:s})},Wy=r=>Le({axis:r.axis})});var vr,wr,_r,fs,ln=D(()=>{"use strict";Ce();Ve();vr=(r,e,n="f32")=>{switch(r.activation){case"Relu":return`value = max(value, ${e}(0.0));`;case"Sigmoid":return`value = (${e}(1.0) / (${e}(1.0) + exp(-value)));`;case"Clip":return`value = clamp(value, ${e}(${n}(uniforms.clip_min)), ${e}(${n}(uniforms.clip_max)));`;case"HardSigmoid":return`value = max(${e}(0.0), min(${e}(1.0), ${n}(uniforms.alpha) * value + ${n}(uniforms.beta)));`;case"LeakyRelu":return`value = select(${n}(uniforms.alpha) * value, value, value >= ${e}(0.0));`;case"":return"";default:throw new Error(`Unsupported activation ${r.activation}`)}},wr=(r,e)=>{r.activation==="Clip"?e.push({type:1,data:r.clipMax},{type:1,data:r.clipMin}):r.activation==="HardSigmoid"?e.push({type:1,data:r.alpha},{type:1,data:r.beta}):r.activation==="LeakyRelu"&&e.push({type:1,data:r.alpha})},_r=(r,e)=>{r.activation==="Clip"?e.push({name:"clip_max",type:"f32"},{name:"clip_min",type:"f32"}):r.activation==="HardSigmoid"?e.push({name:"alpha",type:"f32"},{name:"beta",type:"f32"}):r.activation==="LeakyRelu"&&e.push({name:"alpha",type:"f32"})},fs=r=>{let e=r?.activation||"";if(e==="HardSigmoid"){let[n,t]=r?.activation_params||[.2,.5];return{activation:e,alpha:n,beta:t}}else if(e==="Clip"){let[n,t]=r?.activation_params||[ns,os];return{activation:e,clipMax:t,clipMin:n}}else if(e==="LeakyRelu"){let[n]=r?.activation_params||[.01];return{activation:e,alpha:n}}return{activation:e}}});var Nt,ps,ms=D(()=>{"use strict";Nt=(r,e)=>{switch(r){case 1:return e;case 2:return`vec2<${e}>`;case 3:return`vec3<${e}>`;case 4:return`vec4<${e}>`;default:throw new Error(`${r}-component is not supported.`)}},ps=r=>`
      ${r?"value = value + getBiasByOutputCoords(coords);":""}
      `});var hs,vl=D(()=>{"use strict";hs=r=>`
fn getIndexFromCoords4D(coords : vec4<i32>, shape : vec4<i32>) -> i32 {
  return dot(coords, vec4<i32>(
      shape.y * shape.z * shape.w, shape.z * shape.w, shape.w, 1));
}
fn getOutputIndexFromCoords(coords : vec4<i32>) -> i32 {
  return dot(coords, vec4<i32>(
    i32(${r}.x), i32(${r}.y), i32(${r}.z), 1));
}
`});var X1,Z1,Qo,jy,J1,ei,Q1,gs,ti=D(()=>{"use strict";Ce();Ve();Fe();ln();ms();X1=(r,e)=>r?`
        mm_Asub[inputRow][inputCol] = mm_readA(batch,
          kStart + inputRow,
          globalRowStart / innerElementSize + inputCol${e?", batchIndices":""});
        `:`
        mm_Asub[inputRow][inputCol] = mm_readA(batch,
          globalRow + innerRow,
          kStart / innerElementSize + inputCol${e?", batchIndices":""});
        `,Z1=(r,e)=>r?`
        let ACached0 = mm_Asub[k * innerElementSize][localRow];
        let ACached1 = mm_Asub[k * innerElementSize + 1][localRow];
        let ACached2 = mm_Asub[k * innerElementSize + 2][localRow];
        ${e===3?"":"let ACached3 = mm_Asub[k * innerElementSize + 3][localRow];"}
        for (var i = 0; i < rowPerThread; i = i + 1) {
          acc[i] = BCached0 * ACached0[i] + acc[i];
          acc[i] = BCached1 * ACached1[i] + acc[i];
          acc[i] = BCached2 * ACached2[i] + acc[i];
          ${e===3?"":"acc[i] = BCached3 * ACached3[i] + acc[i];"}
        }`:`
        for (var i = 0; i < rowPerThread; i = i + 1) {
          let ACached = mm_Asub[tileRow + i][k];
          acc[i] = BCached0 * ACached.x + acc[i];
          acc[i] = BCached1 * ACached.y + acc[i];
          acc[i] = BCached2 * ACached.z + acc[i];
          ${e===3?"":"acc[i] = BCached3 * ACached.w + acc[i];"}
        }`,Qo=(r,e,n="f32",t,o=!1,i=32,s=!1,a=32)=>{let u=e[1]*r[1],l=e[0]*r[0],d=o?u:i,p=o?i:u,h=d/e[0],y=i/e[1];if(!((o&&h===4&&r[1]===4||!o&&(h===3||h===4))&&d%e[0]===0&&i%e[1]===0&&r[0]===4))throw new Error(`If transposeA ${o} is true, innerElementSize ${h} and workPerThread[1] ${r[1]} must be 4.
      Otherwise, innerElementSize ${h} must be 3 or 4.
  tileAWidth ${d} must be divisible by workgroupSize[0]${e[0]}. tileInner ${i} must be divisible by workgroupSize[1] ${e[1]}. colPerThread ${r[0]} must be 4.`);return`
var<workgroup> mm_Asub: array<array<vec${h}<${n}>, ${d/h}>, ${p}>;
var<workgroup> mm_Bsub: array<array<vec4<${n}>, ${l/r[0]}>, ${i}>;

const rowPerThread = ${r[1]};
const colPerThread = ${r[0]};
const innerElementSize = ${h};
const tileInner = ${i};

@compute @workgroup_size(${e[0]}, ${e[1]}, ${e[2]})
fn main(@builtin(local_invocation_id) localId : vec3<u32>,
        @builtin(global_invocation_id) globalId : vec3<u32>,
        @builtin(workgroup_id) workgroupId : vec3<u32>) {
  let localRow = i32(localId.y);
  let tileRow = localRow * rowPerThread;
  let tileCol = i32(localId.x);

  let globalRow =i32(globalId.y) * rowPerThread;
  let globalCol = i32(globalId.x);
  let batch = ${s?"0":"i32(globalId.z)"};
  ${t?`let batchIndices = ${t.offsetToIndices("u32(batch)")};`:""}
  let globalRowStart = i32(workgroupId.y) * ${u};

  let num_tiles = ${s?`${Math.ceil(a/i)}`:"(uniforms.dim_inner - 1) / tileInner + 1"};
  var kStart = ${s?`i32(globalId.z) * ${a}`:"0"};

  var acc: array<vec4<${n}>, rowPerThread>;

  // Loop over shared dimension.
  let tileRowB = localRow * ${y};
  for (var t = 0; t < num_tiles; t = t + 1) {
      // Load one tile of A into local memory.
      for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
          let inputRow = tileRow + innerRow;
          let inputCol = tileCol;
          ${X1(o,t)}
      }

      // Load one tile of B into local memory.
      for (var innerRow = 0; innerRow < ${y}; innerRow = innerRow + 1) {
          let inputRow = tileRowB + innerRow;
          let inputCol = tileCol;
          mm_Bsub[inputRow][inputCol] = mm_readB(batch, kStart + inputRow, globalCol${t?", batchIndices":""});
      }
      kStart = kStart + tileInner;
      workgroupBarrier();

      // Compute acc values for a single thread.
      for (var k = 0; k < tileInner / innerElementSize; k = k + 1) {
          let BCached0 = mm_Bsub[k * innerElementSize][tileCol];
          let BCached1 = mm_Bsub[k * innerElementSize + 1][tileCol];
          let BCached2 = mm_Bsub[k * innerElementSize + 2][tileCol];
          ${h===3?"":"let BCached3 = mm_Bsub[k * innerElementSize + 3][tileCol];"}

          ${Z1(o,h)}
      }

      workgroupBarrier();
  }

  for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
      mm_write(batch, globalRow + innerRow, globalCol, acc[innerRow]);
  }
}`},jy=(r,e)=>r?`
            mm_Asub[inputRow][inputCol] = mm_readA(batch,
              kStart + inputRow,
              globalRowStart + inputCol${e?", batchIndices":""});
            `:`
            mm_Asub[inputRow][inputCol] = mm_readA(batch,
              globalRowStart + inputRow,
              kStart + inputCol${e?", batchIndices":""});
            `,J1=r=>r?"let ACached = mm_Asub[k][tileRow + innerRow];":"let ACached = mm_Asub[tileRow + innerRow][k];",ei=(r,e,n="f32",t,o=!1,i=32,s=!1,a=32,u=!1)=>{let l=r[1]*e[1],d=r[0]*e[0],p=o?l:i,h=o?i:l;if(!(h%e[1]===0&&p%e[0]===0&&i%e[1]===0))throw new Error(`tileAHight ${h} must be divisible by workgroupSize[1]${e[1]}, tileAWidth ${p} must be divisible by workgroupSize[0]${e[0]}, tileInner ${i} must be divisible by workgroupSize[1]${e[1]}`);let y=h/e[1],b=p/e[0],w=i/e[1],T=u?`
    let localRow = i32(localId.y);
    let localCol = i32(localId.x);
    let globalRowStart = i32(workgroupId.y) * ${l};
    let globalColStart = i32(workgroupId.x) * ${d};

    // Loop over shared dimension.
    for (var t = 0; t < num_tiles; t = t + 1) {
      // Load one tile of A into local memory.
      for (var inputRow = localRow; inputRow < ${h}; inputRow = inputRow + ${e[1]}) {
        for (var inputCol = localCol; inputCol < ${p}; inputCol = inputCol + ${e[0]}) {
          ${jy(o,t)}
        }
      }
      // Load one tile of B into local memory.
      for (var inputRow = localRow; inputRow < ${i}; inputRow = inputRow + ${e[1]}) {
            for (var inputCol = localCol; inputCol < ${d}; inputCol = inputCol + ${e[0]}) {
          mm_Bsub[inputRow][inputCol] = mm_readB(batch,
            kStart + inputRow,
            globalColStart + inputCol${t?", batchIndices":""});
        }
      }
      kStart = kStart + tileInner;
      workgroupBarrier();

      // Compute acc values for a single thread.
      var BCached : array<${n}, colPerThread>;
      for (var k = 0; k < tileInner; k = k + 1) {
        for (var inner = 0; inner < colPerThread; inner = inner + 1) {
          BCached[inner] = mm_Bsub[k][localCol + inner * ${e[0]}];
        }
        for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
          let ACached = ${o?`mm_Asub[k][localRow + innerRow * ${e[1]}];`:`mm_Asub[localRow + innerRow * ${e[1]}][k];`}
          for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
            acc[innerRow][innerCol] = acc[innerRow][innerCol] +
                ACached * BCached[innerCol];
          }
        }
      }
      workgroupBarrier();
    }
    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
      let gRow = globalRowStart + localRow + innerRow * ${e[1]};
      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
        let gCol = globalColStart + localCol + innerCol * ${e[0]};
        mm_write(batch, gRow, gCol, acc[innerRow][innerCol]);
      }
    }
    `:`
let tileRow = i32(localId.y) * rowPerThread;
let tileCol = i32(localId.x) * colPerThread;

let globalRow = i32(globalId.y) * rowPerThread;
let globalCol = i32(globalId.x) * colPerThread;
let globalRowStart = i32(workgroupId.y) * ${l};

let tileRowA = i32(localId.y) * ${y};
let tileColA = i32(localId.x) * ${b};
let tileRowB = i32(localId.y) * ${w};
// Loop over shared dimension.
for (var t = 0; t < num_tiles; t = t + 1) {
  // Load one tile of A into local memory.
  for (var innerRow = 0; innerRow < ${y}; innerRow = innerRow + 1) {
    for (var innerCol = 0; innerCol < ${b}; innerCol = innerCol + 1) {
      let inputRow = tileRowA + innerRow;
      let inputCol = tileColA + innerCol;
      ${jy(o,t)}
    }
  }

  // Load one tile of B into local memory.
  for (var innerRow = 0; innerRow < ${w}; innerRow = innerRow + 1) {
    for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
      let inputRow = tileRowB + innerRow;
      let inputCol = tileCol + innerCol;
      mm_Bsub[inputRow][inputCol] = mm_readB(batch,
        kStart + inputRow,
        globalCol + innerCol${t?", batchIndices":""});
    }
  }
  kStart = kStart + tileInner;
  workgroupBarrier();

  // Compute acc values for a single thread.
  var BCached : array<${n}, colPerThread>;
  for (var k = 0; k < tileInner; k = k + 1) {
    for (var inner = 0; inner < colPerThread; inner = inner + 1) {
      BCached[inner] = mm_Bsub[k][tileCol + inner];
    }

    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
      ${J1(o)}
      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
        acc[innerRow][innerCol] = acc[innerRow][innerCol] + ACached * BCached[innerCol];
      }
    }
  }

  workgroupBarrier();
}

for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
  for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
    mm_write(batch, globalRow + innerRow, globalCol + innerCol,
        acc[innerRow][innerCol]);
  }
}
`;return`
  var<workgroup> mm_Asub : array<array<${n}, ${p}>, ${h}>;
  var<workgroup> mm_Bsub : array<array<${n}, ${d}>, ${i}>;
  const rowPerThread = ${r[1]};
  const colPerThread = ${r[0]};
  const tileInner = ${i};

@compute @workgroup_size(${e[0]}, ${e[1]}, ${e[2]})
fn main(@builtin(local_invocation_id) localId : vec3<u32>,
        @builtin(global_invocation_id) globalId : vec3<u32>,
        @builtin(workgroup_id) workgroupId : vec3<u32>) {
    let batch = ${s?"0":"i32(globalId.z)"};
    ${t?`let batchIndices = ${t.offsetToIndices("u32(batch)")};`:""}
    let num_tiles = ${s?`${Math.ceil(a/i)}`:"(uniforms.dim_inner - 1) / tileInner + 1"};
    var kStart = ${s?`i32(globalId.z) * ${a}`:"0"};

    var acc : array<array<${n}, colPerThread>, rowPerThread>;

    // Without this initialization strange values show up in acc.
    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
        acc[innerRow][innerCol] = 0.0;
      }
    }
    ${T}
  }
`},Q1=(r,e,n,t,o,i=!1)=>{let[s,a,u]=o,[l,d,p,h]=t,y=so(s,u),b=so(a,u),w=tt(t[0].type.tensor),T=()=>{let A=d.rank,P=l.rank,k=`var aIndices: ${d.type.indices};`;for(let N=A-2-1,j=P-1;N>=0;N--,j--)k+=`
aIndices[${N}] = ${P>1?`batchIndices[${j}]`:"batchIndices"};`;return y.forEach(N=>{k+=`
aIndices[${N}] = 0;`}),k+=`
aIndices[${A-2}] = u32(row);
                   aIndices[${A-1}] = u32(colIn);`,k},x=()=>{let A=p.rank,P=l.rank,k=`var bIndices: ${p.type.indices};`;for(let N=A-2-1,j=P-1;N>=0;N--,j--)k+=`
bIndices[${N}] = ${P>1?`batchIndices[${j}]`:"batchIndices"};`;return b.forEach(N=>{k+=`
bIndices[${N}] = 0;`}),k+=`
bIndices[${A-2}] = u32(row);
                   bIndices[${A-1}] = u32(colIn);`,k};return`
    fn mm_readA(batch: i32, row: i32, colIn: i32, batchIndices: ${l.type.indices}) -> ${Nt(r,w)} {
      var value = ${Nt(r,w)}(0.0);
      let col = colIn * ${r};
      if(row < uniforms.dim_a_outer && col < uniforms.dim_inner)
      {
        ${T()}
        value = ${d.getByIndices("aIndices")};
      }
      return value;
    }

    fn mm_readB(batch: i32, row: i32, colIn: i32, batchIndices: ${l.type.indices}) -> ${Nt(r,w)} {
      var value = ${Nt(r,w)}(0.0);
      let col = colIn * ${r};
      if(row < uniforms.dim_inner && col < uniforms.dim_b_outer)
      {
        ${x()}
        value = ${p.getByIndices("bIndices")};
      }
      return value;
    }

    fn mm_write(batch: i32, row: i32, colIn: i32, valueIn: ${Nt(r,w)}) {
      let col = colIn * ${r};
      if (row < uniforms.dim_a_outer && col < uniforms.dim_b_outer) {
        var value = valueIn;
        let coords = vec3<i32>(batch, row, colIn);
        ${e?`value = value + ${i?"bias[colIn]":`${Nt(r,w)}(bias[row])`};`:""}
        ${n}
        ${h.setByIndices("vec3<u32>(coords)","value")}
      }
    }
    `},gs=(r,e,n,t,o=!1)=>{let i=r[0].dims,s=r[1].dims,a=i.slice(0,-2),u=s.slice(0,-2),l=t?t.slice(0,-2):n.slice(0,-2),d=U.size(l),p=i[i.length-2],h=i[i.length-1],y=s[s.length-1],b=h%4===0&&y%4===0,w=p<=8?[4,1,1]:[4,4,1],T=[8,8,1],x=[Math.ceil(y/T[0]/w[0]),Math.ceil(p/T[1]/w[1]),Math.ceil(d/T[2]/w[2])],_=b?4:1,A=[...a,p,h/_],P=A.length,k=[...u,h,y/_],N=k.length,j=[d,p,y/_],Z=[{type:6,data:p},{type:6,data:y},{type:6,data:h}];wr(e,Z),Z.push(...oe(l,A,k));let se=["rank","rank"],Q=r.length>2;Q&&(Z.push(...oe(r[2].dims)),se.push("rank")),Z.push(...oe(j));let X=Be=>{let qe=l.length,V=is("batchDims",r[0].dataType,qe,1),ie=tt(r[0].dataType),H=F("a",r[0].dataType,P,_),Me=F("b",r[1].dataType,N,_),Pe=ee("result",r[0].dataType,j.length,_),Ie=[H,Me];if(Q){let q=o?_:1;Ie.push(F("bias",r[2].dataType,r[2].dims.length,q))}let fe=[{name:"dim_a_outer",type:"i32"},{name:"dim_b_outer",type:"i32"},{name:"dim_inner",type:"i32"}];_r(e,fe);let Ee=tt(Pe.type.tensor),Te=vr(e,Pe.type.value,Ee),_t=Q1(_,Q,Te,[V,H,Me,Pe],[a,u,l],o);return`
  ${Be.registerUniforms(fe).registerInternalVariables(V).declareVariables(...Ie,Pe)}
  ${_t}
  ${b?Qo(w,T,ie,V):ei(w,T,ie,V)}
                   `};return{name:"MatMul",shaderCache:{hint:`${w};${e.activation};${b};${o}`,inputDependencies:se},getRunData:()=>({outputs:[{dims:n,dataType:r[0].dataType}],dispatchGroup:{x:x[0],y:x[1],z:x[2]},programUniforms:Z}),getShaderSource:X}}});var e$,qy,Ky=D(()=>{"use strict";Ce();un();Fe();ln();ms();vl();ti();e$=(r,e,n,t,o=!1,i,s=4,a=4,u=4,l="f32")=>{let d=Q=>{switch(Q){case 1:return"resData = x[xIndex];";case 3:return`resData = vec3<${l}>(x[xIndex], x[xIndex + 1], x[xIndex + 2]);`;case 4:return"resData = x[xIndex / 4];";default:throw new Error(`innerElementSize ${Q} is not supported.`)}},p=Q=>{switch(Q){case 1:return"return w[row * i32(uniforms.w_shape[3]) + colIn];";case 4:return"return w[row * i32(uniforms.w_shape[3]) / 4 + colIn];";default:throw new Error(`innerElementSize ${Q} is not supported.`)}},h=r?`
    let coord = vec4<i32>(batch, xRow, xCol, xCh);
    `:`
    let coord = vec4<i32>(batch, xCh, xRow, xCol);
    `,y=r?`
    let coords = vec4<i32>(
      batch,
      row / outWidth,
      row % outWidth,
      col);
    `:`
    let coords = vec4<i32>(
      batch,
      row,
      col / outWidth,
      col % outWidth);
    `,b=r?"i32(uniforms.x_shape[1])":"i32(uniforms.x_shape[2])",w=r?"i32(uniforms.x_shape[2])":"i32(uniforms.x_shape[3])",T=r?"row":"col",x=r?"col":"row",_=`
    let inChannels = i32(uniforms.w_shape[2]);
    let outWidth = ${r?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};
    let outRow = ${T} / outWidth;
    let outCol = ${T} % outWidth;

    let WRow = ${x} / (i32(uniforms.w_shape[1]) * inChannels);
    let WCol = ${x} / inChannels % i32(uniforms.w_shape[1]);
    let xRow = outRow * uniforms.stride[0] + uniforms.dilation[0] * WRow - uniforms.pad[0];
    let xCol = outCol * uniforms.stride[1] + uniforms.dilation[1] * WCol - uniforms.pad[1];
    let xCh = ${x} % inChannels;
    var resData = ${Nt(s,l)}(0.0);
    // The bounds checking is always needed since we use it to pad zero for
    // the 'same' padding type.
    if (xRow >= 0 && xRow < ${b} && xCol >= 0 && xCol < ${w}) {
      ${h}
      let xIndex = getIndexFromCoords4D(coord, vec4<i32>(uniforms.x_shape));
      ${d(s)}
    }
    return resData;`,A=r?e&&t?`
    let col = colIn * ${s};
    ${_}`:`
    let col = colIn * ${s};
    if (row < uniforms.dim_a_outer && col < uniforms.dim_inner) {
      ${_}
    }
    return ${Nt(s,l)}(0.0);`:t&&n?`
    let col = colIn * ${s};
    ${_}`:`
    let col = colIn * ${s};
    if (row < uniforms.dim_inner && col < uniforms.dim_b_outer) {
      ${_}
    }
    return ${Nt(s,l)}(0.0);`,P=`${p(a)}`,k=Nt(u,l),N=r?Nt(s,l):Nt(a,l),j=r?Nt(a,l):Nt(s,l),Z=vr(i,k,l);return`
    fn mm_readA(batch: i32, row : i32, colIn : i32) -> ${N} {
      ${r?A:P}
    }

    fn mm_readB(batch: i32, row : i32, colIn : i32) -> ${j} {
      ${r?P:A}
    }

    fn mm_write(batch: i32, row : i32, colIn : i32, valueIn : ${k}) {
      let col = colIn * ${u};
      if (row < uniforms.dim_a_outer && col < uniforms.dim_b_outer)
      {
      var value = valueIn;
      let outWidth = ${r?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};
      ${y}
      ${ps(o)}
      ${Z}
      setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);
      }
    }`},qy=(r,e,n,t,o,i,s,a)=>{let u=e.format==="NHWC",l=u?r[0].dims[3]:r[0].dims[1],d=n[0],p=u?n[2]:n[3],h=u?n[1]:n[2],y=u?n[3]:n[1],b=u&&(l%4===0||l%3===0)&&y%4===0,w=u?y:p*h,T=u?p*h:y,x=[8,8,1],_=t<=8?[4,1,1]:[4,4,1],A=[Math.ceil(w/x[0]/_[0]),Math.ceil(T/x[1]/_[1]),Math.ceil(d/x[2]/_[2])];ot("verbose",()=>`[conv2d_mm_webgpu] dispatch = ${A}`);let P=b?u&&l%4!==0?3:4:1,k=x[1]*_[1],N=x[0]*_[0],j=Math.max(x[0]*P,x[1]),Z=t%k===0,se=o%N===0,Q=i%j===0,X=b?[P,4,4]:[1,1,1],Be=[{type:6,data:t},{type:6,data:o},{type:6,data:i},{type:6,data:[e.pads[0],e.pads[1]]},{type:6,data:e.strides},{type:6,data:e.dilations}];wr(e,Be),Be.push(...oe(r[0].dims,r[1].dims));let qe=["rank","rank"];s&&(Be.push(...oe(r[2].dims)),qe.push("rank")),Be.push(...oe(n));let V=ie=>{let H=[{name:"dim_a_outer",type:"i32"},{name:"dim_b_outer",type:"i32"},{name:"dim_inner",type:"i32"},{name:"pad",type:"i32",length:2},{name:"stride",type:"i32",length:2},{name:"dilation",type:"i32",length:2}];_r(e,H);let Me=b?4:1,Pe=tt(r[0].dataType),Ie=`
      fn setOutputAtIndex(flatIndex : i32, value : ${b?`vec4<${Pe}>`:Pe}) {
        result[flatIndex] = ${b?`vec4<${Pe}>`:Pe}(value);
      }
      fn setOutputAtCoords(d0 : i32, d1 : i32, d2 : i32, d3 : i32, value : ${b?`vec4<${Pe}>`:Pe}) {
        let flatIndex = getOutputIndexFromCoords(vec4<i32>(d0, d1, d2, d3));
        setOutputAtIndex(flatIndex ${b?"/ 4":""}, value);
      }`,fe=F("x",r[0].dataType,r[0].dims.length,P===3?1:P),Ee=F("w",r[1].dataType,r[1].dims.length,Me),Te=[fe,Ee],_t=ee("result",r[0].dataType,n.length,Me);if(s){let q=F("bias",r[2].dataType,r[2].dims.length,Me);Te.push(q),Ie+=`
        fn getBiasByOutputCoords(coords : vec4<i32>) -> ${b?`vec4<${Pe}>`:Pe} {
          return bias[coords.${u?"w":"y"}${b?"/ 4":""}];
        }`}return`
        ${hs("uniforms.result_strides")}
        //struct Uniforms { xShape : vec4<i32>, wShape : vec4<i32>, outShape : vec4<i32>,
        //  outShapeStrides: vec3<i32>, filterDims : vec2<i32>, pad : vec2<i32>, stride : vec2<i32>,
        //  dilation : vec2<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32 };
        ${ie.registerUniforms(H).declareVariables(...Te,_t)}
        ${Ie}
        ${e$(u,Z,se,Q,s,e,X[0],X[1],X[2],Pe)}
        ${b?Qo(_,x,Pe,void 0,!u,j):ei(_,x,Pe,void 0,!u,j,!1,void 0,a)}`};return{name:"Conv2DMatMul",shaderCache:{hint:`${e.cacheKey};${P};${b};${Z};${se};${Q};${k};${N};${j}`,inputDependencies:qe},getRunData:()=>({outputs:[{dims:n,dataType:r[0].dataType}],dispatchGroup:{x:A[0],y:A[1],z:A[2]},programUniforms:Be}),getShaderSource:V}}});var wl,Yy,Xy=D(()=>{"use strict";Ce();Ve();Fe();_l();ln();wl=(r,e,n)=>{let t=r.length>2,o=t?"value += b[output_channel];":"",i=r[0].dims,s=r[1].dims,a=s[0]/e.group,u=e.format==="NHWC",l=ys(i,s,e.dilations,e.pads,e.strides,u),d=U.size(l),p=[{type:12,data:d},{type:12,data:e.dilations},{type:12,data:[e.strides[0],e.strides[1]]},{type:12,data:[e.pads[0],e.pads[1]]},{type:12,data:a}];wr(e,p),p.push(...oe(i,s));let h=["rank","rank"];t&&(p.push(...oe(r[2].dims)),h.push("rank")),p.push(...oe(l));let y=b=>{let w=ee("output",r[0].dataType,l.length),T=tt(w.type.tensor),x=vr(e,w.type.value,T),_=F("x",r[0].dataType,i.length),A=F("w",r[1].dataType,s.length),P=[_,A];t&&P.push(F("b",r[2].dataType,r[2].dims.length));let k=[{name:"output_size",type:"u32"},{name:"dilations",type:"u32",length:e.dilations.length},{name:"strides",type:"u32",length:2},{name:"pads",type:"u32",length:2},{name:"output_channels_per_group",type:"u32"}];return _r(e,k),`
  ${b.registerUniforms(k).declareVariables(...P,w)}

  ${b.mainStart()}
    ${b.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

    let outputIndices = ${w.offsetToIndices("global_idx")};
    let batch: u32 = outputIndices[0];
    let output_channel: u32 = outputIndices[${u?3:1}];
    let xRCCorner: vec2<u32> = vec2<u32>(outputIndices[${u?1:2}], outputIndices[${u?2:3}]) * uniforms.strides - uniforms.pads;
    let group_id: u32 = output_channel / uniforms.output_channels_per_group;

    var value: ${w.type.value} = ${w.type.value}(0);
    for (var wInChannel: u32 = 0u; wInChannel < uniforms.w_shape[1]; wInChannel++) {
      let input_channel = group_id * uniforms.w_shape[1] + wInChannel;
      for (var wHeight: u32 = 0u; wHeight < uniforms.w_shape[2]; wHeight++) {
        let xHeight = xRCCorner.x + wHeight * uniforms.dilations[0];

        if (xHeight < 0u || xHeight >= uniforms.x_shape[${u?1:2}]) {
          continue;
        }

        for (var wWidth: u32 = 0u; wWidth < uniforms.w_shape[3]; wWidth++) {
          let xWidth = xRCCorner.y + wWidth * uniforms.dilations[1];
          if (xWidth < 0u || xWidth >= uniforms.x_shape[${u?2:3}]) {
            continue;
          }

          let xVal = ${u?_.get("batch","xHeight","xWidth","input_channel"):_.get("batch","input_channel","xHeight","xWidth")};
          let wVal = ${A.get("output_channel","wInChannel","wHeight","wWidth")};
          value += xVal*wVal;
        }
      }
    }
    ${o}
    ${x}
    ${w.setByOffset("global_idx","value")}
  }`};return{name:"GroupedConv",shaderCache:{hint:e.cacheKey,inputDependencies:h},getRunData:()=>({outputs:[{dims:n?n(l):l,dataType:r[0].dataType}],dispatchGroup:{x:Math.ceil(d/64)},programUniforms:p}),getShaderSource:y}},Yy=(r,e,n)=>{let t=r.length>2,o=it(n[3]),i=it(n[2]),s=U.size(n)/o/i,a=[r[0].dims[0],r[0].dims[1],r[0].dims[2],r[0].dims[3]/o],u=[r[1].dims[0],r[1].dims[1],r[1].dims[2],r[1].dims[3]/o],l=[n[0],n[1],n[2],n[3]/o],d=[{type:12,data:s},{type:6,data:[e.strides[0],e.strides[1]]},{type:6,data:[e.pads[0],e.pads[1]]}];wr(e,d),d.push(...oe(a,u,l));let p=(i-1)*e.strides[1]+u[1],h=y=>{let b=ee("output",r[0].dataType,l.length,o),w=tt(b.type.tensor),T=vr(e,b.type.value,w),x=F("x",r[0].dataType,a.length,o),_=F("w",r[1].dataType,u.length,o),A=[x,_];t&&A.push(F("b",r[2].dataType,r[2].dims,o));let P=t?"value += b[output_channel];":"",k=[{name:"output_size",type:"u32"},{name:"strides",type:"i32",length:2},{name:"pads",type:"i32",length:2}];return _r(e,k),`
  ${y.registerUniforms(k).declareVariables(...A,b)}
  ${y.mainStart()}
    ${y.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    let width0 = uniforms.output_shape[3];
    let output_channel = global_idx % width0;
    var index1 = global_idx / width0;
    let width1 = uniforms.output_shape[2] / ${i}u;
    let col = (index1 % width1) * ${i}u;
    index1 = index1 / width1;
    let row = index1 % uniforms.output_shape[1];
    let batch = index1 / uniforms.output_shape[1];

    let x_corner = vec2<i32>(i32(row), i32(col)) * uniforms.strides - uniforms.pads;

    var x_vals: array<${x.type.value}, ${p}>;
    var values: array<${b.type.value}, ${i}>;
    let input_channel = output_channel;
    // Use constant instead of uniform can give better performance for w's height/width.
    for (var w_height: u32 = 0u; w_height < ${u[0]}; w_height++) {
      let x_height = x_corner.x + i32(w_height);
      if (x_height >= 0 && u32(x_height) < uniforms.x_shape[1]) {
        for (var i = 0; i < ${p}; i++) {
          let x_width = x_corner.y + i;
          if (x_width >= 0 && u32(x_width) < uniforms.x_shape[2]) {
            x_vals[i] = ${x.get("batch","u32(x_height)","u32(x_width)","input_channel")};
          } else {
            x_vals[i] = ${x.type.value}(0);
          }
        }
        for (var w_width: u32 = 0u; w_width < ${u[1]}; w_width++) {
          let w_val = ${_.get("w_height","w_width","0","output_channel")};
          for (var i = 0u; i < ${i}u; i++) {
            values[i] = fma(x_vals[i * u32(uniforms.strides[1]) + w_width], w_val, values[i]);
          }
        }
      }
    }

    for (var i = 0u; i < ${i}u; i++) {
      var value = values[i];
      ${P}
      ${T}
      ${b.set("batch","row","col + i","output_channel","value")};
    }
  }`};return{name:"GroupedConv-Vectorize",shaderCache:{hint:`${e.cacheKey};${o};${i};${p};${u[0]};${u[1]}`,inputDependencies:t?["rank","rank","type"]:["rank","rank"]},getRunData:()=>({outputs:[{dims:n,dataType:r[0].dataType}],dispatchGroup:{x:Math.ceil(s/64)},programUniforms:d}),getShaderSource:h}}});var xl,t$,Zy,$l=D(()=>{"use strict";Ce();Ve();ti();Fe();ln();xl=(r,e,n,t,o=!1)=>{let i=r[0].dims,s=r[1].dims,a=i[i.length-2],u=s[s.length-1],l=i[i.length-1],d=it(u),p=it(l),h=it(a),y=U.size(n)/d/h,b=r.length>2,w=t?t.slice(0,-2):n.slice(0,-2),x=[U.size(w),a,u],_=[{type:12,data:y},{type:12,data:a},{type:12,data:u},{type:12,data:l}];wr(e,_),_.push(...oe(w,i,s)),b&&_.push(...oe(r[2].dims)),_.push(...oe(x));let A=P=>{let k=is("batch_dims",r[0].dataType,w.length),N=F("a",r[0].dataType,i.length,p),j=F("b",r[1].dataType,s.length,d),Z=ee("output",r[0].dataType,x.length,d),se=tt(Z.type.tensor),Q=vr(e,Z.type.value,se),X=[N,j],Be="";if(b){let fe=o?d:1;X.push(F("bias",r[2].dataType,r[2].dims.length,fe)),Be=`${o?`value += bias[col / ${fe}];`:`value += ${Z.type.value}(bias[row + i]);`}`}let qe=i.slice(0,-2),V=s.slice(0,-2),ie=so(qe,w),H=so(V,w),Me=[{name:"output_size",type:"u32"},{name:"M",type:"u32"},{name:"N",type:"u32"},{name:"K",type:"u32"}];_r(e,Me);let Pe=(fe,Ee)=>{let Te=fe.rank,_t=fe.name;if(Te===2)return`var ${_t}_indices = ${fe.type.indices}(0u, 0u);`;let q=k.rank,ue=`var ${_t}_indices: ${fe.type.indices};`;for(let ke=Te-2-1,Et=q-1;ke>=0;ke--,Et--)ue+=`
${_t}_indices[${ke}] = ${q>1?`batch_indices[${Et}]`:"batch_indices"};`;return Ee.forEach(ke=>{ue+=`
${_t}_indices[${ke}] = 0;`}),ue+=`${_t}_indices[${Te-2}] = 0u;
                     ${_t}_indices[${Te-1}] = 0u;`,ue},Ie=()=>{let fe=`var a_data: ${N.type.value};`;for(let Ee=0;Ee<p;Ee++)fe+=`
              let b_data${Ee} = b[(b_offset + (k + ${Ee}) * uniforms.N + col) / ${d}];`;for(let Ee=0;Ee<h;Ee++){fe+=`a_data = a[(a_offset + (row + ${Ee}) * uniforms.K + k) / ${p}];`;for(let Te=0;Te<p;Te++)fe+=`
            values[${Ee}] = fma(${j.type.value}(a_data${p===1?"":`[${Te}]`}), b_data${Te}, values[${Ee}]);
`}return fe};return`
  ${P.registerUniforms(Me).registerInternalVariables(k).declareVariables(...X,Z)}
  ${P.mainStart()}
    ${P.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    let col = (global_idx % (uniforms.N / ${d})) * ${d};
    var index1 = global_idx / (uniforms.N / ${d});
    let stride1 = uniforms.M / ${h};
    let row = (index1 % stride1) * ${h};
    let batch = index1 / stride1;

    ${n.length===2?"":`let batch_indices = ${k.offsetToIndices("batch")};`}
    ${Pe(N,ie)}
    let a_offset = ${N.indicesToOffset("a_indices")};
    ${Pe(j,H)}
    let b_offset = ${j.indicesToOffset("b_indices")};
    var values: array<${Z.type.value}, ${h}>;
    for (var k: u32 = 0u; k < uniforms.K; k = k + ${p}) {
      ${Ie()}
    }
    for (var i = 0u; i < ${h}u; i++) {
      var value = values[i];
      ${Be}
      ${Q}
      let cur_indices = ${Z.type.indices}(batch, row + i, col);
      let offset = ${Z.indicesToOffset("cur_indices")};
      ${Z.setByOffset(`offset / ${d}`,"value")};
    }
  }
  `};return{name:"MatMulNaive",shaderCache:{hint:`${e.activation};${d};${p};${h};${o}`,inputDependencies:b?["rank","rank","rank"]:["rank","rank"]},getRunData:()=>({outputs:[{dims:n,dataType:r[0].dataType}],dispatchGroup:{x:Math.ceil(y/64)},programUniforms:_}),getShaderSource:A}},t$=r=>{if(!r||r.length!==2)throw new Error("MatMul requires 2 inputs.");if(r[0].dims[r[0].dims.length-1]!==r[1].dims[r[1].dims.length-2])throw new Error("shared dimension does not match.")},Zy=r=>{t$(r.inputs);let e=Br.calcShape(r.inputs[0].dims,r.inputs[1].dims,!0);if(!e)throw new Error("Can't use matmul on the given tensors");let n=e[e.length-1],t=r.inputs[0].dims[r.inputs[0].dims.length-1];n<8&&t<8?r.compute(xl(r.inputs,{activation:""},e)):r.compute(gs(r.inputs,{activation:""},e))}});var ys,Tl,r$,Jy,Sl,n$,o$,Il,_l=D(()=>{"use strict";Ve();Ky();ti();Xy();ln();$l();uo();ys=(r,e,n,t,o,i)=>{let s=r[0],a=r.slice(i?1:2,i?3:4),u=a.length,l=e[0],p=e.slice(2).map((b,w)=>b+(b-1)*(n[w]-1)),y=a.map((b,w)=>b+t[w]+t[w+u]).map((b,w)=>Math.floor((b-p[w]+o[w])/o[w]));return y.splice(0,0,s),y.splice(i?3:1,0,l),y},Tl=[2,3,1,0],r$=(r,e)=>{if(!r||r.length!==2&&r.length!==3)throw new Error("Conv requires 2 or 3 inputs");if(r[0].dims.length!==4&&r[0].dims.length!==3)throw new Error("currently only support conv 1D and 2D");if(r[0].dims.length!==r[1].dims.length)throw new Error("filter does not have same dimension as input");let n=r[0].dims[e.format==="NHWC"?r[0].dims.length-1:1],t=r[1].dims[1]*e.group;if(n!==t)throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");if(r.length===3&&(r[2].dims.length!==1||r[1].dims[0]!==r[2].dims[0]))throw new Error("invalid bias");let o=r[0].dims.length-2;if(e.dilations.length!==o)throw new Error(`dilations should be ${o}D`);if(e.strides.length!==o)throw new Error(`strides should be ${o}D`);if(e.pads.length!==o*2)throw new Error(`pads should be ${o*2}D`);if(e.kernelShape.length!==0&&e.kernelShape.length!==r[1].dims.length-2)throw new Error("invalid kernel shape")},Jy=(r,e)=>{let n=r.kernelShape.slice();for(let i=2;i<e[1].dims.length;++i)n[i-2]===0&&(n[i-2]=e[1].dims[i]);let t=r.pads.slice();Dn.adjustPadsBasedOnAutoPad(e[0].dims,r.strides,r.dilations,n,t,r.format==="NHWC",r.autoPad);let o=Object.assign({},r);return Object.assign(o,{kernelShape:n,pads:t}),o},Sl=r=>{let e=fs(r),n=r.format,t=["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][r.auto_pad],o=r.dilations,i=r.group,s=r.kernel_shape,a=r.pads,u=r.strides,l=r.w_is_const();return{autoPad:t,format:n,dilations:o,group:i,kernelShape:s,pads:a,strides:u,wIsConst:l,...e,cacheKey:`${r.format};${e.activation};`}},n$=(r,e,n)=>{let t=Jy(n,e),o=n.format==="NHWC";if(n.group!==1){if(!r.adapterInfo.isArchitecture("ampere")&&o&&e[1].dims[0]===n.group&&e[1].dims[1]===1&&n.dilations[0]===1&&n.dilations[1]===1){let j=ys(e[0].dims,e[1].dims,n.dilations,t.pads,n.strides,o),Z=r.kernelCustomData.wT??r.compute(cr(e[1],Tl),{inputs:[1],outputs:[n.wIsConst?-2:-1]})[0];n.wIsConst&&!r.kernelCustomData.wT&&(r.kernelCustomData.wT=Z);let se=[e[0],Z];e.length===3&&se.push(e[2]),r.compute(Yy(se,t,j),{inputs:se})}else r.compute(wl(e,t));return}let i=e.length===3,s=e[0].dims[o?1:2],a=e[0].dims[o?2:3],u=e[0].dims[o?3:1],l=e[1].dims[2],d=e[1].dims[3],p=ys(e[0].dims,e[1].dims,n.dilations,t.pads,n.strides,o),h=p[o?1:2],y=p[o?2:3],b=p[o?3:1],w=o&&l===s&&d===a&&n.pads[0]===0&&n.pads[1]===0;if(w||l===1&&d===1&&n.dilations[0]===1&&n.dilations[1]===1&&n.strides[0]===1&&n.strides[1]===1&&n.pads[0]===0&&n.pads[1]===0){let N=p[0],j,Z,se,Q=[];if(o){let qe=r.kernelCustomData.wT??r.compute(cr(e[1],Tl),{inputs:[1],outputs:[n.wIsConst?-2:-1]})[0];if(n.wIsConst&&!r.kernelCustomData.wT&&(r.kernelCustomData.wT=qe),w){let V=s*a*u;j=e[0].reshape([1,N,V]),Z=qe.reshape([1,V,b]),se=[1,N,b]}else j=e[0].reshape([N,s*a,u]),Z=qe.reshape([1,u,b]),se=[N,h*y,b];Q.push(j),Q.push(Z)}else j=e[0].reshape([N,u,s*a]),Z=e[1].reshape([1,b,u]),se=[N,b,h*y],Q.push(Z),Q.push(j);i&&Q.push(e[2]);let X=se[2],Be=Q[0].dims[Q[0].dims.length-1];X<8&&Be<8?r.compute(xl(Q,t,p,se,o),{inputs:Q}):r.compute(gs(Q,t,p,se,o),{inputs:Q});return}let T=!0,x=r.kernelCustomData.wT??r.compute(cr(e[1],Tl),{inputs:[1],outputs:[n.wIsConst?-2:-1]})[0];n.wIsConst&&!r.kernelCustomData.wT&&(r.kernelCustomData.wT=x);let _=[e[0],x];i&&_.push(e[2]);let A=o?h*y:b,P=o?b:h*y,k=l*d*u;r.compute(qy(_,t,p,A,P,k,i,T),{inputs:_})},o$=(r,e)=>{let n=e.format==="NHWC",t=[r.inputs[0].reshape(n?[r.inputs[0].dims[0],1,r.inputs[0].dims[1],r.inputs[0].dims[2]]:[r.inputs[0].dims[0],r.inputs[0].dims[1],1,r.inputs[0].dims[2]]),r.inputs[1].reshape([r.inputs[1].dims[0],r.inputs[1].dims[1],1,r.inputs[1].dims[2]])];r.inputs.length===3&&t.push(r.inputs[2]);let o=[0,e.pads[0],0,e.pads[1]],i=[1].concat(e.strides),s=[1].concat(e.dilations),a=[1].concat(e.kernelShape),u=Jy({...e,pads:o,strides:i,dilations:s,kernelShape:a},t);r.compute(wl(t,u,l=>n?[l[0],l[2],l[3]]:[]))},Il=(r,e)=>{r$(r.inputs,e),r.inputs[0].dims.length===3?o$(r,e):n$(r,r.inputs,e)}});var i$,Qy,eb=D(()=>{"use strict";Ce();un();Fe();ln();ms();vl();ti();i$=(r,e=!1,n,t,o=4)=>{let i=x=>{switch(x){case 1:return"return w[getIndexFromCoords4D(coord, vec4<i32>(uniforms.w_shape))];";case 4:return`
            let coord1 = vec4<i32>(coordX, coordY, col + 1, rowInner);
            let coord2 = vec4<i32>(coordX, coordY, col + 2, rowInner);
            let coord3 = vec4<i32>(coordX, coordY, col + 3, rowInner);
            let v0 = w[getIndexFromCoords4D(coord, vec4<i32>(uniforms.w_shape))];
            let v1 = w[getIndexFromCoords4D(coord1, vec4<i32>(uniforms.w_shape))];
            let v2 = w[getIndexFromCoords4D(coord2, vec4<i32>(uniforms.w_shape))];
            let v3 = w[getIndexFromCoords4D(coord3, vec4<i32>(uniforms.w_shape))];
            return ${t}(v0, v1, v2, v3);
            `;default:throw new Error(`innerElementSize ${x} is not supported.`)}},s=r?`
      let coord = vec4<i32>(batch, iXR, iXC, xCh);
      `:`
      let coord = vec4<i32>(batch, xCh, iXR, iXC);
      `,a=r?`
    let coords = vec4<i32>(
      batch,
      row / outWidth,
      row % outWidth,
      col);
    `:`
    let coords = vec4<i32>(
      batch,
      row,
      col / outWidth,
      col % outWidth);
    `,u=r?"i32(uniforms.x_shape[1])":"i32(uniforms.x_shape[2])",l=r?"i32(uniforms.x_shape[2])":"i32(uniforms.x_shape[3])",d=r?"row":"col",p=r?"col":"row",h=`
      let inChannels = ${r?"i32(uniforms.x_shape[3])":"i32(uniforms.x_shape[1])"};
      let outWidth = ${r?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};
      let outRow = ${d} / outWidth;
      let outCol = ${d} % outWidth;

      let WRow = ${p} / (uniforms.filter_dims[1] * inChannels);
      let WCol = ${p} / inChannels % uniforms.filter_dims[1];
      let xR = f32(outRow - uniforms.pads[0] + uniforms.dilations[0] * WRow) / f32(uniforms.strides[0]);
      let xC = f32(outCol - uniforms.pads[1] + uniforms.dilations[1] * WCol) / f32(uniforms.strides[1]);
      if (xR < 0.0 || xR >= f32(${u}) || fract(xR) > 0.0) {
        return ${t}(0.0);
      }
      if (xC < 0.0 || xC >= f32(${l}) || fract(xC) > 0.0) {
        return ${t}(0.0);
      }
      let iXR = i32(xR);
      let iXC = i32(xC);
      let xCh = ${p} % inChannels;
      ${s}
      return x[getIndexFromCoords4D(coord, vec4<i32>(uniforms.x_shape))/${o}];`,y=r?`
      let col = colIn * ${o};
      if (row < uniforms.dim_a_outer && col < uniforms.dim_inner) {
        ${h}
      }
      return ${t}(0.0);`:`
      let col = colIn * ${o};
      if (row < uniforms.dim_inner && col < uniforms.dim_b_outer) {
        ${h}
      }
      return ${t}(0.0);`,b=`
      let col = colIn * ${o};
      let inChannels = ${r?"i32(uniforms.x_shape[3])":"i32(uniforms.x_shape[1])"};
      let coordX = uniforms.filter_dims[0] - 1 - row / (uniforms.filter_dims[1] * inChannels);
      let coordY = uniforms.filter_dims[1] - 1 - (row / inChannels) % uniforms.filter_dims[1];
      if (${r?"row < uniforms.dim_inner && col < uniforms.dim_b_outer":"row < uniforms.dim_inner && col < uniforms.dim_a_outer"}  && coordX >= 0 && coordY >= 0) {
        let rowInner = row % inChannels;
        let coord = vec4<i32>(coordX, coordY, col, rowInner);
        ${i(o)}
      }
      return ${t}(0.0);
      `,w=vr(n,t);return`
  fn mm_readA(batch: i32, row : i32, colIn : i32) -> ${t} {
    ${r?y:b}
  }

  fn mm_readB(batch: i32, row : i32, colIn : i32) -> ${t} {
    ${r?b:y}
  }

  fn mm_write(batch: i32, row : i32, colIn : i32, valueInput : ${t}) {
    let col = colIn * ${o};
    if (row < uniforms.dim_a_outer && col < uniforms.dim_b_outer) {
      var value = valueInput;
      let outWidth = ${r?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};
      ${a}
      ${ps(e)}
      ${w}
      result[getIndexFromCoords4D(coords, vec4<i32>(uniforms.result_shape))/${o}] = value;
    }
  }`},Qy=(r,e,n,t,o,i,s,a)=>{let u=e.format==="NHWC",l=u?r[0].dims[3]:r[0].dims[1],d=n[0],p=u?n[2]:n[3],h=u?n[1]:n[2],y=u?n[3]:n[1],b=u&&l%4===0&&l%3&&y%4===0,w=u?y:p*h,T=u?p*h:y,x=[8,8,1],_=t<=8?[4,1,1]:[4,4,1],A=[Math.ceil(w/x[0]/_[0]),Math.ceil(T/x[1]/_[1]),Math.ceil(d/x[2]/_[2])];ot("verbose",()=>`[conv_backprop_mm_webgpu] dispatch = ${A}`);let P=b?4:1,k=Math.max(x[0]*P,x[1]),N=b?4:1,j=[e.kernelShape[u?1:2],e.kernelShape[u?2:3]],Z=[j[0]+(e.dilations[0]<=1?0:(j[0]-1)*(e.dilations[0]-1)),j[1]+(e.dilations[1]<=1?0:(j[1]-1)*(e.dilations[1]-1))],se=[Z[0]-1-Math.floor((e.pads[0]+e.pads[2])/2),Z[1]-1-Math.floor((e.pads[1]+e.pads[3])/2)],Q=[{type:6,data:t},{type:6,data:o},{type:6,data:i},{type:6,data:e.strides},{type:6,data:e.dilations},{type:6,data:j},{type:6,data:se}];wr(e,Q),Q.push(...oe(r[0].dims,r[1].dims));let X=["rank","rank"];s&&(Q.push(...oe(r[2].dims)),X.push("rank")),Q.push(...oe(n));let Be=qe=>{let V=F("x",r[0].dataType,r[0].dims.length,N),ie=F("w",r[1].dataType,r[1].dims.length,1),H=ee("result",r[0].dataType,n.length,N),Me=[V,ie],Pe="";if(s){let Ee=F("bias",r[2].dataType,r[2].dims.length,N);Me.push(Ee),Pe+=`
          fn getBiasByOutputCoords(coords : vec4<i32>) -> ${Ee.type.value} {
            return bias[coords.${u?"w":"y"}${b?"/ 4":""}];
          }`}let Ie=[{name:"dim_a_outer",type:"i32"},{name:"dim_b_outer",type:"i32"},{name:"dim_inner",type:"i32"},{name:"strides",type:"i32",length:2},{name:"dilations",type:"i32",length:2},{name:"filter_dims",type:"i32",length:j.length},{name:"pads",type:"i32",length:se.length}];_r(e,Ie);let fe=tt(r[0].dataType,1);if(fe!=="f16"&&fe!=="f32")throw new Error(`elemType ${fe} is not supported.`);return`
        ${hs("uniforms.result_strides")}
        ${qe.registerUniforms(Ie).declareVariables(...Me,H)};
        ${Pe}
        ${i$(u,s,e,V.type.value,P)}
        ${b?Qo(_,x,fe,void 0,!u,k):ei(_,x,fe,void 0,!u,k,!1,void 0,a)}`};return{name:"Conv2DTransposeMatMul",shaderCache:{hint:`${e.cacheKey};${_};${x};${b}`,inputDependencies:X},getRunData:()=>({outputs:[{dims:n,dataType:r[0].dataType}],dispatchGroup:{x:A[0],y:A[1],z:A[2]},programUniforms:Q}),getShaderSource:Be}}});var a$,Al,tb=D(()=>{"use strict";Ce();un();Ve();Fe();a$=(r,e,n,t,o,i=!1,s,a,u=!1)=>{let l=u?1:2,d=u?2:3,p=u?3:1,h=i?2:1,y=`
  fn setOutputAtIndex(flatIndex : u32, value : ${i?`vec4<${s}>`:s}) {
    result[flatIndex] = ${i?`vec4<${s}>`:s}(value);
  }`;t&&(y+=`
    fn getBiasByOutputCoords(coords : vec4<u32>) -> ${i?`vec4<${s}>`:s} {
      return bias[coords.${u?"w":"y"}${i?"/ 4":""}];
    }`);let b=i?4:1,w=F("W",e[1].dataType,e[1].dims.length,b),T=F("Dy",e[0].dataType,e[0].dims.length,b),x=[T,w];t&&x.push(F("bias",e[2].dataType,[n[p]].length,b));let _=ee("result",e[0].dataType,n.length,b),A=`{
        let batch: u32 = ${o?"global_id.z":"workgroup_id.z"} / uniforms.result_shape[1];
        let r = ${o?"global_id.z":"workgroup_id.z"} % uniforms.result_shape[1];
        let c = ${o?"global_id.y":"workgroup_id.y"} * ${h};
        let d1: u32 = ${o?"global_id.x":"workgroup_id.x"} * 4;

        let dyCorner = vec2<i32>(i32(r), i32(c)) - vec2<i32>(uniforms.pads);

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        var dotProd: array<vec4<${s}>, ${h}>;
        for (var i = 0; i < ${h}; i++) {
          dotProd[i] = vec4<${s}>(0.0);
        }
        for (var wR: u32 = 0; wR < uniforms.filter_dims[0]; wR = wR + 1) {
          var dyR = (${s}(dyCorner.x) + ${s}(wR)) / ${s}(uniforms.strides.x);
          let wRPerm = uniforms.filter_dims[0] - 1 - wR;
          if (dyR < 0.0 || dyR >= ${s}(uniforms.Dy_shape[1]) ||
              fract(dyR) > 0.0 || wRPerm < 0) {
            continue;
          }
          let idyR: u32 = u32(dyR);

          for (var wC: u32 = 0; wC < uniforms.filter_dims[1]; wC = wC + 1) {
            let dyC = (${s}(dyCorner.y) + ${s}(wC)) / ${s}(uniforms.strides.y);
            let dyC2 = (${s}(dyCorner.y) + 1.0 + ${s}(wC)) / ${s}(uniforms.strides.y);
            let wCPerm = uniforms.filter_dims[1] - 1 - wC;
            if (wCPerm < 0) {
              continue;
            }
            var bDyCVal = true;
            var bDyCVal2 = true;
            if (dyC < 0.0 || dyC >= ${s}(uniforms.Dy_shape[2]) ||
                fract(dyC) > 0.0) {
              bDyCVal = false;
            }
            if (dyC2 < 0.0 || dyC2 >= ${s}(uniforms.Dy_shape[2]) ||
                fract(dyC2) > 0.0) {
              bDyCVal2 = false;
            }

            let idyC: u32 = u32(dyC);
            let idyC2: u32 = u32(dyC2);
            if (bDyCVal && bDyCVal2) {
              let d2Length = uniforms.Dy_shape[3];
              for (var d2 :u32 = 0; d2 < d2Length; d2 = d2 + 4) {
                let wValue0 = ${w.get("u32(wRPerm)","u32(wCPerm)","d1","d2")};
                let wValue1 = ${w.get("u32(wRPerm)","u32(wCPerm)","d1 + 1","d2")};
                let wValue2 = ${w.get("u32(wRPerm)","u32(wCPerm)","d1 + 2","d2")};
                let wValue3 = ${w.get("u32(wRPerm)","u32(wCPerm)","d1 + 3","d2")};

                var xValue = ${T.get("batch","idyR","idyC","d2")};
                let tmpval = vec4<${s}>(dot(xValue, wValue0),
                                      dot(xValue, wValue1),
                                      dot(xValue, wValue2),
                                      dot(xValue, wValue3));
                dotProd[0] = dotProd[0] + tmpval;

                xValue =  ${T.get("batch","idyR","idyC2","d2")};

                dotProd[1] = dotProd[1] + vec4<${s}>(dot(xValue, wValue0),
                                                    dot(xValue, wValue1),
                                                    dot(xValue, wValue2),
                                                    dot(xValue, wValue3));
              }
            } else if (bDyCVal) {
              let d2Length = uniforms.Dy_shape[${p}];
              for (var d2: u32 = 0; d2 < d2Length; d2 = d2 + 4) {
                let wValue0 = ${w.get("u32(wRPerm)","u32(wCPerm)","d1","d2")};
                let wValue1 = ${w.get("u32(wRPerm)","u32(wCPerm)","d1 + 1","d2")};
                let wValue2 = ${w.get("u32(wRPerm)","u32(wCPerm)","d1 + 2","d2")};
                let wValue3 = ${w.get("u32(wRPerm)","u32(wCPerm)","d1 + 3","d2")};

                var xValue = ${T.get("batch","idyR","idyC","d2")};
                let tmpval = vec4<${s}>(dot(xValue, wValue0),
                                      dot(xValue, wValue1),
                                      dot(xValue, wValue2),
                                      dot(xValue, wValue3));
                dotProd[0] = dotProd[0] + tmpval;
              }
            } else if (bDyCVal2) {
              let d2Length = uniforms.Dy_shape[3];
              for (var d2: u32 = 0; d2 < d2Length; d2 = d2 + 4) {
                let wValue0 = ${w.get("u32(wRPerm)","u32(wCPerm)","d1","d2")};
                let wValue1 = ${w.get("u32(wRPerm)","u32(wCPerm)","d1 + 1","d2")};
                let wValue2 = ${w.get("u32(wRPerm)","u32(wCPerm)","d1 + 2","d2")};
                let wValue3 = ${w.get("u32(wRPerm)","u32(wCPerm)","d1 + 3","d2")};

                var xValue = ${T.get("batch","idyR","idyC2","d2")};
                let tmpval = vec4<${s}>(dot(xValue, wValue0),
                                      dot(xValue, wValue1),
                                      dot(xValue, wValue2),
                                      dot(xValue, wValue3));
                dotProd[1] = dotProd[1] + tmpval;
              }
            }
          }
        }

        for (var i: u32 = 0; i < ${h}; i = i + 1) {
          let value = dotProd[i] + ${t?"bias[c+i]":`vec4<${s}>(0.0)`};
          ${_.set("batch","r","c + i","d1","value")};
        }
      }`,P=`
          let outputIndices = ${_.offsetToIndices("global_idx")};
          let batch = ${_.indicesGet("outputIndices",0)};
          let d1 = ${_.indicesGet("outputIndices",p)};
          let r = ${_.indicesGet("outputIndices",l)};
          let c = ${_.indicesGet("outputIndices",d)};
          let dyCorner = vec2<i32>(i32(r), i32(c)) - uniforms.pads;
          let dyRCorner = dyCorner.x;
          let dyCCorner = dyCorner.y;
          let groupId = d1 / uniforms.output_channels_per_group;
          let wOutChannel = d1 - groupId * uniforms.output_channels_per_group;
          // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
          // ? = to be determined. : = across all values in that axis.
          var dotProd = ${s}(0.0);
          for (var wR: u32 = 0; wR < uniforms.effective_filter_dims.x; wR = wR + 1) {
            if (wR % uniforms.dilations.x != 0) {
              continue;
            }
            let dyR = (${s}(dyRCorner) + ${s}(wR)) / ${s}(uniforms.strides[0]);
            let wRPerm = uniforms.filter_dims.x - 1 - wR / uniforms.dilations.x;
            if (dyR < 0.0 || dyR >= ${s}(uniforms.Dy_shape[${l}]) || fract(dyR) > 0.0 ||
                wRPerm < 0) {
              continue;
            }
            let idyR: u32 = u32(dyR);

            for (var wC: u32 = 0; wC < uniforms.effective_filter_dims.y; wC = wC + 1) {
              if (wC % uniforms.dilations.y != 0) {
                continue;
              }
              let dyC = (${s}(dyCCorner) + ${s}(wC)) / ${s}(uniforms.strides.y);
              let wCPerm = uniforms.filter_dims.y - 1 - wC / uniforms.dilations.y;
              if (dyC < 0.0 || dyC >= ${s}(uniforms.Dy_shape[${d}]) ||
                  fract(dyC) > 0.0 || wCPerm < 0) {
                continue;
              }
              let idyC: u32 = u32(dyC);
              var inputChannel = groupId * uniforms.input_channels_per_group;
              for (var d2: u32 = 0; d2 < uniforms.input_channels_per_group; d2 = d2 + 1) {
                let xValue = ${u?T.get("batch","idyR","idyC","inputChannel"):T.get("batch","inputChannel","idyR","idyC")};
                let wValue = ${w.get("inputChannel","wOutChannel","u32(wRPerm)","u32(wCPerm)")};
                dotProd = dotProd + xValue * wValue;
                inputChannel = inputChannel + 1;
              }
            }
          }
          let value = dotProd + ${t?"bias[d1]":`${s}(0.0)`};
          ${_.setByOffset("global_idx","value")};
        `;return`
  ${r.registerUniforms(a).declareVariables(...x,_)}
  ${y}

    ${r.mainStart()}
    ${r.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")};
  ${i?A:P}}`},Al=(r,e,n)=>{let t=r.length>2,o=e.outputShape,i=U.size(o),s=[Math.ceil(i/64),1,1];ot("verbose",()=>`[conv2d_backprop_webgpu] dispatch = ${s}`);let a=e.format==="NHWC",u=["rank","rank"],l=[e.strides[0],e.strides[1]],d=[e.kernelShape[a?1:2],e.kernelShape[a?2:3]],p=[e.dilations[0],e.dilations[1]],h=[d[0]+(e.dilations[0]<=1?0:(e.kernelShape[a?1:2]-1)*(e.dilations[0]-1)),d[1]+(e.dilations[1]<=1?0:(e.kernelShape[a?2:3]-1)*(e.dilations[1]-1))],y=[h[0]-1-Math.floor((e.pads[0]+e.pads[2])/2),h[1]-1-Math.floor(e.pads[1]+e.pads[3])/2],b=!1,w=e.group,T=r[1].dims,x=T[0]/w,_=T[1],A=[{type:12,data:i},{type:12,data:l},{type:12,data:d},{type:12,data:p},{type:12,data:h},{type:6,data:y},{type:12,data:x},{type:12,data:_},...oe(r[0].dims,r[1].dims)];t&&(A.push(...oe(r[2].dims)),u.push("rank")),A.push(...oe(o));let P=s[1]===1&&s[2]===1,k=N=>{let j=[{name:"output_size",type:"u32"},{name:"strides",type:"u32",length:l.length},{name:"filter_dims",type:"u32",length:d.length},{name:"dilations",type:"u32",length:d.length},{name:"effective_filter_dims",type:"u32",length:h.length},{name:"pads",type:"i32",length:y.length},{name:"input_channels_per_group",type:"u32"},{name:"output_channels_per_group",type:"u32"}],Z=tt(r[0].dataType);return`${a$(N,r,o,t,P,b,Z,j,a)}`};return{name:"ConvTranspose2D",shaderCache:{hint:`${e.cacheKey};`,inputDependencies:u},getRunData:()=>({dispatchGroup:{x:s[0],y:s[1],z:s[2]},outputs:[{dims:n?n(o):o,dataType:r[0].dataType}],programUniforms:A}),getShaderSource:k}}});var s$,u$,l$,rb,nb,d$,c$,f$,p$,ob,ib=D(()=>{"use strict";eb();tb();ln();uo();s$=(r,e,n,t,o,i)=>(r-1)*e+n+(t-1)*o+1-i,u$=(r,e,n,t,o)=>{let i=Math.floor(r/2);e==="SAME_UPPER"?(n[t]=i,n[o]=r-i):e==="SAME_LOWER"&&(n[t]=r-i,n[o]=i)},l$=(r,e,n,t,o,i,s,a,u,l)=>{let d=r.length-2,p=l.length===0;if(u.length===0)for(let b=0;b<d;++b)u.push(0);let h=r[0],y=e[a?3:1]*o;for(let b=0,w=r.length-d-(a?1:0);b<d;++b,++w){let T=r[w],x=p?T*s[b]:l[b],_=s$(T,s[b],i[b],e[w],n[b],x);u$(_,t,i,b,b+d),p&&l.push(s[b]*(T-1)+u[b]+(e[w]-1)*n[b]+1-i[b]-i[b+d])}l.splice(0,0,h),l.splice(a?3:1,0,y)},rb=(r,e)=>{let n=r.kernelShape.slice();if(r.kernelShape.length===0||r.kernelShape.reduce((p,h)=>p*h,1)===0){n.length=0;for(let p=2;p<e[1].dims.length;++p)n.push(e[1].dims[p])}let t=r.format==="NHWC";n.splice(0,0,e[1].dims[0]),n.splice(t?3:1,0,e[1].dims[1]);let o=r.pads.slice(),i=r.outputShape.slice(),s=r.outputPadding.slice(),a=e[0].dims,u=r.dilations.slice();if(u.reduce((p,h)=>p+h,0)===0){let p=e[0].dims.length-2;u=new Array(p).fill(1)}let l=r.strides.slice();if(l.reduce((p,h)=>p+h,0)===0){let p=e[0].dims.length-2;l=new Array(p).fill(1)}l$(a,n,u,r.autoPad,r.group,o,l,t,s,i);let d=Object.assign({},r);return Object.assign(d,{kernelShape:n,pads:o,outputPadding:s,outputShape:i,dilations:u,strides:l}),d},nb=r=>{let e=fs(r),n=r.format,t=["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][typeof r.autoPad>"u"?0:r.autoPad],o=r.dilations,i=r.group,s=r.kernelShape,a=r.pads,u=r.strides,l=r.wIsConst(),d=r.outputPadding,p=r.outputShape;return{autoPad:t,format:n,dilations:o,group:i,kernelShape:s,outputPadding:d,outputShape:p,pads:a,strides:u,wIsConst:l,...e,cacheKey:`${r.format};${e.activation};`}},d$=(r,e)=>{if(!r||r.length!==2&&r.length!==3)throw new Error("Conv requires 2 or 3 inputs");if(r[0].dims.length!==4&&r[0].dims.length!==3)throw new Error("currently only support 2-dimensional conv");if(r[0].dims.length!==r[1].dims.length)throw new Error("filter does not have same dimension as input");let n=r[0].dims[e.format==="NHWC"?r[0].dims.length-1:1],t=r[1].dims[0];if(n!==t)throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");let o=r[1].dims[1]*e.group;if(r.length===3&&(r[2].dims.length!==1||r[2].dims[0]!==o))throw new Error("invalid bias");let i=r[0].dims.length-2;if(e.dilations.reduce((d,p)=>d+p,0)>0&&e.dilations.length!==i)throw new Error(`dilations should be ${i}D`);if(e.strides.reduce((d,p)=>d+p,0)>0&&e.strides.length!==i)throw new Error(`strides should be ${i}D`);if(e.pads.reduce((d,p)=>d+p,0)>0&&e.pads.length!==i*2)throw new Error(`pads should be ${i*2}D`);if(e.outputPadding.length!==i&&e.outputPadding.length!==0)throw new Error(`output_padding should be ${i}D`);if(e.kernelShape.reduce((d,p)=>d+p,0)>0&&e.kernelShape.length!==0&&e.kernelShape.length!==r[1].dims.length-2)throw new Error("invalid kernel shape");if(e.outputShape.length!==0&&e.outputShape.length!==r[0].dims.length-2)throw new Error("invalid output shape")},c$=[2,3,1,0],f$=(r,e,n)=>{let t=rb(n,e),o=n.format==="NHWC",i=t.outputShape,s=i[o?3:1],a=e[0].dims[o?3:1];if(t.group!==1||s===1&&a===1){r.compute(Al(e,t));return}let u=i[o?1:2],l=i[o?2:3],d=e[1].dims[2],p=e[1].dims[3],h=o?u*l:s,y=o?s:u*l,b=d*p*a,w=!0,T=r.kernelCustomData.wT??r.compute(cr(e[1],c$),{inputs:[1],outputs:[n.wIsConst?-2:-1]})[0];n.wIsConst&&!r.kernelCustomData.wT&&(r.kernelCustomData.wT=T);let x=[e[0],T],_=e.length===3;_&&(!o&&e[2].dims.length===1?x.push(e[2].reshape([e[2].dims[0],1,1])):x.push(e[2])),r.compute(Qy(x,t,i,h,y,b,_,w),{inputs:x})},p$=(r,e)=>{let n=e.format==="NHWC",t=[r.inputs[0].reshape(n?[r.inputs[0].dims[0],1,r.inputs[0].dims[1],r.inputs[0].dims[2]]:[r.inputs[0].dims[0],r.inputs[0].dims[1],1,r.inputs[0].dims[2]]),r.inputs[1].reshape([r.inputs[1].dims[0],r.inputs[1].dims[1],1,r.inputs[1].dims[2]])];r.inputs.length===3&&t.push(r.inputs[2]);let o=e.kernelShape;(o.length===0||o[0]===0)&&(o=[r.inputs[1].dims[2]]);let i=e.dilations;(i.length===0||i[0]===0)&&(i=[1]);let s=e.strides;(s.length===0||s[0]===0)&&(s=[1]);let a=e.pads;a.length===0&&(a=[0,0]),a=[0,a[0],0,a[1]],s=[1].concat(s),i=[1].concat(i),o=[1].concat(o);let u=rb({...e,pads:a,strides:s,dilations:i,kernelShape:o},t);r.compute(Al(t,u,l=>n?[l[0],l[2],l[3]]:[l[0],l[1],l[3]]))},ob=(r,e)=>{d$(r.inputs,e),r.inputs[0].dims.length===3?p$(r,e):f$(r,r.inputs,e)}});var m$,ab,sb,ub=D(()=>{"use strict";Ce();Ve();Ot();Fe();m$=(r,e,n,t)=>{let o=U.size(e),i=e.length,s=F("input",r,i),a=ee("output",r,i),u=n.dataType===6?n.getInt32Array()[0]:Number(n.getBigInt64Array()[0]),l=U.normalizeAxis(u,i),d=p=>{let h=` i32(${s.indicesGet("inputIndices","uniforms.axis")}) `,y=Se("uniforms.input_shape","uniforms.axis",i),b=t.reverse?h+(t.exclusive?" + 1":""):"0",w=t.reverse?y:h+(t.exclusive?"":" + 1");return`
                ${p.registerUniform("outputSize","u32").registerUniform("axis","u32").declareVariables(s,a)}
                ${p.mainStart()}
                  ${p.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
                  var inputIndices = ${a.offsetToIndices("global_idx")};
                  var sum = ${a.type.value}(0);
                  let first : i32 = ${b};
                  let last : i32 = ${w};
                  for (var i : i32 = first; i < last; i++) {
                    ${s.indicesSet("inputIndices","uniforms.axis","u32(i)")};
                    sum = sum + ${s.getByIndices("inputIndices")};
                  }
                  ${a.setByOffset("global_idx","sum")};
                }`};return{name:"CumSum",shaderCache:{hint:t.cacheKey,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:e,dataType:r}],dispatchGroup:{x:Math.ceil(o/64)},programUniforms:[{type:12,data:o},{type:6,data:l},...oe(e,e)]}),getShaderSource:d}},ab=(r,e)=>{let n=r.inputs[0].dims,t=r.inputs[0].dataType,o=r.inputs[1];r.compute(m$(t,n,o,e),{inputs:[0]})},sb=r=>{let e=r.exclusive===1,n=r.reverse===1;return Le({exclusive:e,reverse:n})}});var Ol,bs,lb,h$,g$,El,Cl,db,y$,cb,fb,pb=D(()=>{"use strict";Ce();Ve();Ot();Fe();Ol="[a-zA-Z]|\\.\\.\\.",bs="("+Ol+")+",lb="^"+bs+"$",h$="("+bs+",)*"+bs,g$="^"+h$+"$",El=class{constructor(e=-1){this.symbolToIndices=new Map,this.inputIndex=e}addSymbol(e,n){let t=this.symbolToIndices.get(e);t===void 0?t=[n]:t.push(n),this.symbolToIndices.set(e,t)}},Cl=class{constructor(e,n){this.equation=n;this.hasEllipsis=!1,this.symbolToInfo=new Map,this.lhs=new Array,this.outputDims=[];let[t,o]=n.includes("->")?n.split("->",2):[n,""];if(!t.match(RegExp(g$)))throw new Error("Invalid LHS term");if(t.split(",").forEach((a,u)=>{let l=e[u].dims.slice();if(!a.match(RegExp(lb)))throw new Error("Invalid LHS term");let d=this.processTerm(a,!0,l,u);this.lhs.push(d)}),o==="")o+=[...this.symbolToInfo.entries()].filter(([a,u])=>u.count===1||a==="...").map(([a])=>a).join("");else if(!o.match(RegExp(bs)))throw new Error("Invalid RHS");o.match(RegExp(Ol,"g"))?.forEach(a=>{if(a==="...")this.outputDims=this.outputDims.concat(this.ellipsisDims);else{let u=this.symbolToInfo.get(a);if(u===void 0)throw new Error("Invalid RHS symbol");this.outputDims.push(u.dimValue)}}),this.rhs=this.processTerm(o,!1,this.outputDims)}addSymbol(e,n,t){let o=this.symbolToInfo.get(e);if(o!==void 0){if(o.dimValue!==n&&o.count!==1)throw new Error("Dimension mismatch");o.count++,o.inputIndices.push(t)}else o={count:1,dimValue:n,inputIndices:[t]};this.symbolToInfo.set(e,o)}processTerm(e,n,t,o=-1){let i=t.length,s=!1,a=[],u=0;if(!e.match(RegExp(lb))&&!n&&e!=="")throw new Error("Invalid LHS term");let l=e.match(RegExp(Ol,"g")),d=new El(o);return l?.forEach((p,h)=>{if(p==="..."){if(s)throw new Error("Only one ellipsis is allowed per input term");s=!0;let y=i-l.length+1;if(y<0)throw new Error("Ellipsis out of bounds");if(a=t.slice(u,u+y),this.hasEllipsis){if(this.ellipsisDims.length!==a.length||this.ellipsisDims.toString()!==a.toString())throw new Error("Ellipsis dimensions mismatch")}else if(n)this.hasEllipsis=!0,this.ellipsisDims=a;else throw new Error("Ellipsis must be specified in the LHS");for(let b=0;b<a.length;b++){let w=String.fromCharCode("0".charCodeAt(0)+b);d.addSymbol(w,h+b),this.addSymbol(w,t[u++],o)}}else d.addSymbol(p,h+(this.hasEllipsis?this.ellipsisDims.length-1:0)),this.addSymbol(p,t[u++],o)}),d}},db=r=>r+"_max",y$=(r,e,n,t)=>{let i=r.map(d=>d.length).map((d,p)=>F(`input${p}`,e,d)),s=U.size(t),a=ee("output",e,t.length),u=[...n.symbolToInfo.keys()].filter(d=>!n.rhs.symbolToIndices.has(d)),l=d=>{let p=[],h="var prod = 1.0;",y="var sum = 0.0;",b="sum += prod;",w=[],T=[],x=[],_=[],A=n.symbolToInfo.size===n.rhs.symbolToIndices.size;n.symbolToInfo.forEach((k,N)=>{if(n.rhs.symbolToIndices.has(N)){let j=n.rhs.symbolToIndices.get(N)?.[0];j!==void 0&&n.lhs.forEach((Z,se)=>{if(k.inputIndices.includes(se)){let Q=Z.symbolToIndices.get(N);if(Q===void 0)throw new Error("Invalid symbol error");Q.forEach(X=>{p.push(`${i[se].indicesSet(`input${se}Indices`,X,a.indicesGet("outputIndices",j))}`)})}})}else n.lhs.forEach((j,Z)=>{if(k.inputIndices.includes(Z)){let se=j.symbolToIndices.get(N);if(se===void 0)throw new Error("Invalid symbol error");se.forEach(Q=>{w.push(`${i[Z].indicesSet(`input${Z}Indices`,Q,`${N}`)}`)}),_.push(`prod *= ${i[Z].getByIndices(`input${Z}Indices`)};`)}}),T.push(`for(var ${N}: u32 = 0; ${N} < uniforms.${db(N)}; ${N}++) {`),x.push("}")});let P=A?[...p,`let sum = ${i.map((k,N)=>k.getByIndices(`input${N}Indices`)).join(" * ")};`]:[...p,y,...T,...w,h,..._,b,...x];return`
            ${d.registerUniforms(u.map(k=>({name:`${db(k)}`,type:"u32"}))).registerUniform("outputSize","u32").declareVariables(...i,a)}

            ${d.mainStart()}
            ${d.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
            var outputIndices = ${a.offsetToIndices("global_idx")};
            ${i.map((k,N)=>`var input${N}Indices: ${i[N].type.indices};`).join(`
`)}
            ${P.join(`
`)};
            ${a.setByOffset("global_idx","sum")};
          }`};return{name:"Einsum",shaderCache:{hint:n.equation,inputDependencies:r.map(()=>"rank")},getRunData:()=>{let d=u.filter(h=>n.symbolToInfo.has(h)).map(h=>({type:12,data:n.symbolToInfo.get(h)?.dimValue||0}));d.push({type:12,data:s});let p=r.map((h,y)=>[...oe(h)]).reduce((h,y)=>h.concat(y),d);return p.push(...oe(t)),{outputs:[{dims:t,dataType:e}],dispatchGroup:{x:Math.ceil(s/64)},programUniforms:p}},getShaderSource:l}},cb=(r,e)=>{let n=new Cl(r.inputs,e.equation),t=n.outputDims,o=r.inputs.map((i,s)=>i.dims);r.compute(y$(o,r.inputs[0].dataType,n,t))},fb=r=>{let e=r.equation.replace(/\s+/g,"");return Le({equation:e})}});var b$,mb,v$,w$,hb,gb=D(()=>{"use strict";Ce();Ve();Fe();b$=r=>{if(!r||r.length!==2)throw new Error("Expand requires 2 input.");let e=r[0].dims,n=Array.from(r[1].getBigInt64Array(),Number),t=n.length<e.length?0:n.length-e.length,o=e.length<n.length?0:e.length-n.length;for(;t<n.length&&o<e.length;++t,++o)if(n[t]!==e[o]&&n[t]!==1&&e[o]!==1)throw new Error("Expand requires shape to be broadcastable to input")},mb=(r,e)=>{let n=r.length-e.length,t=[];for(let o=0;o<n;++o)t.push(r[o]);for(let o=0;o<e.length;++o)t.push(e[o]===1?r[o+n]:e[o]);return t},v$=(r,e)=>r.length>e.length?mb(r,e):mb(e,r),w$=r=>{let e=r[0].dims,n=Array.from(r[1].getBigInt64Array(),Number),t=v$(e,n),o=r[0].dataType,i=o===9?4:1,s=Math.ceil(U.size(t)/i),a=l=>{let d=F("input",o,e.length,i),p=ee("output",o,t.length,i),h;if(o===9){let y=(b,w,T="")=>`
          let outputIndices${w} = ${p.offsetToIndices(`outputOffset + ${w}u`)};
          let offset${w} = ${d.broadcastedIndicesToOffset(`outputIndices${w}`,p)};
          let index${w} = offset${w} / 4u;
          let component${w} = offset${w} % 4u;
          ${b}[${w}] = ${T}(${d.getByOffset(`index${w}`)}[component${w}]);
        `;h=`
        let outputOffset = global_idx * ${i};
        var data = vec4<u32>(0);
        ${y("data",0,"u32")}
        ${y("data",1,"u32")}
        ${y("data",2,"u32")}
        ${y("data",3,"u32")}
        ${p.setByOffset("global_idx","data")}
      }`}else h=`
        let outputIndices = ${p.offsetToIndices("global_idx")};
        let inputOffset = ${d.broadcastedIndicesToOffset("outputIndices",p)};
        ${p.setByOffset("global_idx",d.getByOffset("inputOffset"))}
      }`;return`
    ${l.registerUniform("vec_size","u32").declareVariables(d,p)}
    ${l.mainStart()}
    ${l.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}
    ${h}`},u=[{type:12,data:s},...oe(e,t)];return{name:"Expand",shaderCache:{hint:`${t.length}`,inputDependencies:["rank"]},getShaderSource:a,getRunData:()=>({outputs:[{dims:t,dataType:r[0].dataType}],dispatchGroup:{x:Math.ceil(s/64)},programUniforms:u})}},hb=r=>{b$(r.inputs),r.compute(w$(r.inputs),{inputs:[0]})}});var _$,yb,bb=D(()=>{"use strict";Ce();Ve();Fe();cs();_$=r=>{let e=r[0].dataType,n=U.size(r[0].dims),t=U.size(r[1].dims),o=t%4===0,i=s=>{let a=F("x",e,[1],4),u=F("bias",e,[1],4),l=ee("y",e,[1],4),d=[{name:"output_vec_size",type:"u32"},{name:"bias_size",type:"u32"}],p=y=>`
      let bias${y}_offset: u32 = (global_idx * 4 + ${y}) % uniforms.bias_size;
      let bias${y} = ${u.getByOffset(`bias${y}_offset / 4`)}[bias${y}_offset % 4];`,h=o?`
      let bias = ${u.getByOffset("global_idx % (uniforms.bias_size / 4)")};`:`${p(0)}${p(1)}${p(2)}${p(3)}
      let bias = ${a.type.value}(bias0, bias1, bias2, bias3);`;return`${s.registerUniforms(d).declareVariables(a,u,l)}

    ${yl(Xt(e))}

    ${s.mainStart(Bn)}
      ${s.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_vec_size")}

      let x = ${a.getByOffset("global_idx")};
      ${h}
      let x_in = x + bias;
      ${l.setByOffset("global_idx",bl("x_in"))}
    }`};return{name:"FastGeluWithBias",shaderCache:{hint:`${o}`,inputDependencies:["type","type"]},getShaderSource:i,getRunData:s=>({outputs:[{dims:s[0].dims,dataType:s[0].dataType}],programUniforms:[{type:12,data:Math.ceil(n/4)},{type:12,data:t}],dispatchGroup:{x:Math.ceil(n/Bn/4)}})}},yb=r=>{r.inputs.length<2||U.size(r.inputs[1].dims)===0?Iy(r):r.compute(_$(r.inputs))}});var x$,$$,vb,wb,_b=D(()=>{"use strict";Ce();Ve();Ot();Fe();x$=r=>{if(!r||r.length!==2)throw new Error("Gather requires 2 inputs.")},$$=(r,e)=>{let n=r[0].dims,t=r[1].dims,o=n.length,i=U.normalizeAxis(e.axis,o),s=n.slice(0);s.splice(i,1,...t);let a=n[i],u=r[0].dataType===9?4:1,l=Math.ceil(U.size(s)/u),d=[{type:12,data:l},{type:6,data:a},{type:12,data:i},...oe(r[0].dims,r[1].dims,s)],p=h=>{let y=F("data",r[0].dataType,r[0].dims.length,u),b=F("inputIndices",r[1].dataType,r[1].dims.length),w=ee("output",r[0].dataType,s.length,u),T=_=>{let A=t.length,P=`var indicesIndices${_}  = ${b.type.indices}(0);`;for(let k=0;k<A;k++)P+=`${A>1?`indicesIndices${_}[${k}]`:`indicesIndices${_}`} = ${s.length>1?`outputIndices${_}[uniforms.axis + ${k}]`:`outputIndices${_}`};`;P+=`
          var idx${_} = ${b.getByIndices(`indicesIndices${_}`)};
          if (idx${_} < 0) {
            idx${_} = idx${_} + uniforms.axisDimLimit;
          }
          var dataIndices${_} : ${y.type.indices};
        `;for(let k=0,N=0;k<o;k++)k===i?(P+=`${o>1?`dataIndices${_}[${k}]`:`dataIndices${_}`} = u32(idx${_});`,N+=A):(P+=`${o>1?`dataIndices${_}[${k}]`:`dataIndices${_}`} = ${s.length>1?`outputIndices${_}[${N}]`:`outputIndices${_}`};`,N++);return P},x;if(r[0].dataType===9){let _=(A,P,k="")=>`
          let outputIndices${P} = ${w.offsetToIndices(`outputOffset + ${P}u`)};
          ${T(P)};
          let offset${P} = ${y.indicesToOffset(`dataIndices${P}`)};
          let index${P} = offset${P} / 4u;
          let component${P} = offset${P} % 4u;
          ${A}[${P}] = ${k}(${y.getByOffset(`index${P}`)}[component${P}]);
        `;x=`
        let outputOffset = global_idx * ${u};
        var value = vec4<u32>(0);
        ${_("value",0,"u32")}
        ${_("value",1,"u32")}
        ${_("value",2,"u32")}
        ${_("value",3,"u32")}
        ${w.setByOffset("global_idx","value")}
      `}else x=`
      let outputIndices = ${w.offsetToIndices("global_idx")};
      ${T("")};
      let value = ${y.getByIndices("dataIndices")};
      ${w.setByOffset("global_idx","value")};
      `;return`
      ${h.registerUniform("outputSize","u32").registerUniform("axisDimLimit","i32").registerUniform("axis","u32").declareVariables(y,b,w)}
      ${h.mainStart()}
        ${h.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
        ${x}
      }`};return{name:"Gather",shaderCache:{hint:e.cacheKey,inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:s,dataType:r[0].dataType}],dispatchGroup:{x:Math.ceil(l/64)},programUniforms:d}),getShaderSource:p}},vb=r=>Le({axis:r.axis}),wb=(r,e)=>{let n=r.inputs;x$(n),r.compute($$(r.inputs,e))}});var T$,S$,xb,$b,Tb=D(()=>{"use strict";Ce();Ve();Ot();Fe();T$=r=>{if(!r||r.length!==2)throw new Error("GatherElements requires 2 inputs.");if(r[0].dims.length<1)throw new Error("GatherElements requires that the data input be rank >= 1.");if(r[0].dims.length!==r[1].dims.length)throw new Error(`GatherElements requires that the data input and
                     indices input tensors be of same rank.`)},S$=(r,e)=>{let n=r[0].dims,t=r[0].dataType,o=n.length,i=r[1].dims,s=r[1].dataType,a=U.normalizeAxis(e.axis,o),u=n[a],l=i.slice(0),d=U.size(l),p=F("input",t,o),h=F("indicesInput",s,i.length),y=ee("output",t,l.length),b=[{type:12,data:d},{type:6,data:u},{type:12,data:a}];return b.push(...oe(n,i,l)),{name:"GatherElements",shaderCache:{inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:l,dataType:r[0].dataType}],dispatchGroup:{x:Math.ceil(d/64)},programUniforms:b}),getShaderSource:x=>`
      ${x.registerUniform("outputSize","u32").registerUniform("axisDimLimit","i32").registerUniform("axis","u32").declareVariables(p,h,y)}
      ${x.mainStart()}
      ${x.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}

      let outputIndices = ${y.offsetToIndices("global_idx")};

      var idx = ${h.getByOffset("global_idx")};
      if (idx < 0) {
        idx = idx + uniforms.axisDimLimit;
      }
      var inputIndices = ${p.type.indices}(outputIndices);
      ${p.indicesSet("inputIndices","uniforms.axis","u32(idx)")};
      let value = ${p.getByIndices("inputIndices")};

      ${y.setByOffset("global_idx","value")};
  }`}},xb=r=>Le({axis:r.axis}),$b=(r,e)=>{let n=r.inputs;T$(n),r.compute(S$(r.inputs,e))}});var I$,A$,Sb,Ib,Ab=D(()=>{"use strict";Ce();Ve();Fe();I$=r=>{if(!r)throw new Error("Input is missing");if(r.length<2||r.length>3)throw new Error("Invaid input number.");if(r.length===3&&r[2].dims.length>2)throw new Error("Invalid input shape of C");if(r[0].dataType!==r[1].dataType||r.length===3&&r[0].dataType!==r[2].dataType)throw new Error("Input types are mismatched")},A$=(r,e)=>{let n=r[0].dims.slice(),t=r[1].dims.slice(),[o,i,s]=rs.getShapeOfGemmResult(n,e.transA,t,e.transB,r.length===3?r[2].dims:void 0),a=[o,i];if(!a)throw new Error("Can't use gemm on the given tensors");let u=U.size(a),l=[{type:12,data:u},{type:12,data:o},{type:12,data:i},{type:12,data:s},{type:1,data:e.alpha},{type:1,data:e.beta}],d=["type","type"];r.length===3&&(l.push(...oe(r[2].dims)),d.push("rank")),l.push(...oe(a));let p=h=>{let y="";e.transA&&e.transB?y="value += a[k * uniforms.M + m] * b[n * uniforms.K + k];":e.transA&&!e.transB?y="value += a[k * uniforms.M + m] * b[k * uniforms.N + n];":!e.transA&&e.transB?y="value += a[m * uniforms.K + k] * b[n * uniforms.K + k];":!e.transA&&!e.transB&&(y="value += a[m * uniforms.K + k] * b[k * uniforms.N + n];");let b=e.alpha===1?"":"value *= uniforms.alpha;",w=F("a",r[0].dataType,r[0].dims),T=F("b",r[1].dataType,r[1].dims),x=w.type.value,_=null,A=[w,T];r.length===3&&(_=F("c",r[2].dataType,r[2].dims.length),A.push(_));let P=ee("output",r[0].dataType,a.length);A.push(P);let k=[{name:"output_size",type:"u32"},{name:"M",type:"u32"},{name:"N",type:"u32"},{name:"K",type:"u32"},{name:"alpha",type:"f32"},{name:"beta",type:"f32"}];return`
  ${h.registerUniforms(k).declareVariables(...A)}

  ${h.mainStart()}
    ${h.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

    let m = global_idx / uniforms.N;
    let n = global_idx % uniforms.N;

    var value = ${x}(0);
    for (var k: u32 = 0u; k < uniforms.K; k++) {
      ${y}
    }

    ${b}
    ${(()=>_!=null?`let cOffset = ${_.broadcastedIndicesToOffset("vec2(m, n)",P)}; value += ${x}(uniforms.beta) * ${_.getByOffset("cOffset")};`:"")()}
    output[global_idx] = value;
  }`};return{name:"Gemm",shaderCache:{hint:`${e.cacheKey}`,inputDependencies:d},getRunData:()=>({outputs:[{dims:a,dataType:r[0].dataType}],dispatchGroup:{x:Math.ceil(u/64)},programUniforms:l}),getShaderSource:p}},Sb=r=>{let e=r.transA,n=r.transB,t=r.alpha,o=r.beta;return{transA:e,transB:n,alpha:t,beta:o,cacheKey:`${r.transA};${r.transB};${r.alpha===1}`}},Ib=(r,e)=>{I$(r.inputs),r.compute(A$(r.inputs,e))}});var O$,E$,C$,Ob,Eb=D(()=>{"use strict";Ce();Ve();Fe();O$=(r,e)=>{let n=r[0].dims,t=n,o=2,i=U.sizeToDimension(n,o),s=U.sizeFromDimension(n,o),a=it(s),u=s/a,l=[n[0],n[1],u],d=["rank","type","type"],p=[{type:12,data:s},{type:12,data:u}];p.push(...oe(l,l));let h=y=>{let b=F("x",r[0].dataType,l.length,a),w=F("scale",r[1].dataType,r[1].dims),T=F("bias",r[2].dataType,r[2].dims),x=ee("output",r[0].dataType,l.length,a),_=[b,w,T,x],A=b.type.value,P=a===1?"f32":`vec${a}<f32>`,k=64,N=[{name:"normSize",type:"u32"},{name:"normPackedSize",type:"u32"}];return`
  var<workgroup> meanShared : f32;
  var<workgroup> squaredNormShared : f32;
  var<workgroup> workgroupShared : array<${P}, ${k}>;
  const workgroupSize = ${k}u;
  ${y.registerUniforms(N).declareVariables(..._)}
  ${y.mainStart(k)}
    let norm = global_idx / workgroupSize;
    let batch = norm / uniforms.x_shape[1];
    let channel = norm % uniforms.x_shape[1];
    let localIndex = local_id.x;

    // initialize workgroup memory
    var initial = ${P}(0);
    for (var h = localIndex; h < uniforms.normPackedSize; h += workgroupSize) {
      initial = initial + ${P}(${b.get("batch","channel","h")});
    }
    workgroupShared[localIndex] = initial;
    workgroupBarrier();

    // Calculate the mean of current channel data.
    for (var currSize = workgroupSize >> 1;  currSize > 0; currSize = currSize >> 1) {
      if (localIndex < currSize) {
        workgroupShared[localIndex] = workgroupShared[localIndex] + workgroupShared[localIndex + currSize];
      }
      workgroupBarrier();
    }
    if (localIndex == 0) {
      meanShared = ${Zt("workgroupShared[0]",a)} / f32(uniforms.normSize);
    }
    workgroupBarrier();

    // reinitialize workgroup memory.
    initial = ${P}(0);
    for (var h = localIndex; h < uniforms.normPackedSize; h += workgroupSize) {
      let deviation =  ${P}(${b.get("batch","channel","h")}) - ${P}(meanShared);
      initial = initial + deviation * deviation;
    }
    workgroupShared[localIndex] = initial;
    workgroupBarrier();

    // Calculate the sum of square of deviation of current channel data.
    for (var currSize = workgroupSize >> 1;  currSize > 0; currSize = currSize >> 1) {
      if (localIndex < currSize) {
        workgroupShared[localIndex] = workgroupShared[localIndex] + workgroupShared[localIndex + currSize];
      }
      workgroupBarrier();
    }
    if (localIndex == 0) {
      squaredNormShared = ${Zt("workgroupShared[0]",a)};
    }
    workgroupBarrier();

    let invStdDev = inverseSqrt(squaredNormShared / f32(uniforms.normSize) + f32(${e.epsilon}));
    let channelScale = invStdDev * f32(${w.getByOffset("channel")});
    let channelShift = f32(${T.getByOffset("channel")}) - meanShared * channelScale;
    for (var h = localIndex; h < uniforms.normPackedSize; h += workgroupSize) {
      let value = ${b.get("batch","channel","h")} * ${A}(${P}(channelScale)) + ${A}(${P}(channelShift));
      ${x.set("batch","channel","h","value")};
    }
  }`};return{name:"InstanceNormalization",shaderCache:{hint:`${e.epsilon};${a}`,inputDependencies:d},getRunData:()=>({outputs:[{dims:t,dataType:r[0].dataType}],dispatchGroup:{x:i},programUniforms:p}),getShaderSource:h}},E$=(r,e,n,t,o,i,s,a)=>{let u=it(s),l=64,d=u===1?"vec2f":`mat2x${u}f`,p=u===1?"f32":`vec${u}f`,h=(N,j)=>`${d}(${N}, ${j})`,y=o*s/u,b=Math.ceil(i/l),w=["type"],T=[{type:12,data:b},{type:12,data:i},{type:12,data:Math.floor(s/u)},{type:12,data:Math.floor(i*s/u)}],x=N=>{let j=F("input",e.dataType,e.dims,u);return`
  ${N.declareVariables(j)}
  @group(0) @binding(1) var<storage, read_write> output : array<${d}>;
  struct Uniforms {wg_size:u32, H:u32, C:u32, image_size:u32};
  @group(0) @binding(2) var<uniform> uniforms: Uniforms;

  ${N.mainStart(l)}
    let currentImageNumber = global_idx / ${l} / uniforms.C;
    let currentChannelNumber = (global_idx / ${l}) % uniforms.C;
    let wgOffset = local_id.x * uniforms.wg_size;
    if (wgOffset >= uniforms.H) {
        return;
    }
    let wgMax = min(wgOffset + uniforms.wg_size, uniforms.H);

    let offset = currentImageNumber * uniforms.image_size + currentChannelNumber;
    var sum = ${Mt("f32",u)};
    var squaredSum = ${Mt("f32",u)};
    for (var i: u32 = wgOffset; i < wgMax; i++) {
        let value = ${p}(input[offset + i * uniforms.C]);
        sum += value;
        squaredSum += value * value;
    }
    output[global_idx] = ${h("sum","squaredSum")};
  }`},_=r.compute({name:"InstanceNormComputeMean",shaderCache:{hint:`${u}`,inputDependencies:w},getRunData:()=>({outputs:[{dims:[o,s,l,2],dataType:1}],dispatchGroup:{x:o*s/u},programUniforms:T}),getShaderSource:x},{inputs:[e],outputs:[-1]})[0],A=[{type:12,data:y},{type:12,data:i},{type:12,data:Math.floor(s/u)},{type:12,data:Math.floor(l*s/u)}],P=["type","type","type"],k=N=>{let j=F("scale",n.dataType,n.dims,u),Z=F("bias",t.dataType,t.dims,u);return`
  @group(0) @binding(0) var<storage, read> input : array<${d}>;
  @group(0) @binding(1) var<storage, read> scale : array<${j.type.storage}>;
  @group(0) @binding(2) var<storage, read> bias : array<${Z.type.storage}>;
  @group(0) @binding(3) var<storage, read_write> output : array<${d}>;
  struct Uniforms {units_of_work : u32, H: u32, C : u32, image_size : u32};
  @group(0) @binding(4) var<uniform> uniforms: Uniforms;

  ${N.mainStart()}
    ${N.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.units_of_work")}
    let currentImageNumber = global_idx / uniforms.C;
    let currentChannelNumber = global_idx % uniforms.C;

    let offset = currentImageNumber * uniforms.image_size;
    var sum = ${Mt("f32",u)};
    var squaredSum = ${Mt("f32",u)};
    for (var i: u32 = 0; i < min(${l}, uniforms.H); i++) {
        let value = input[offset + i + currentChannelNumber * ${l}];
        sum += value[0];
        squaredSum += value[1];
    }
    sum = sum / f32(uniforms.H);
    squaredSum = squaredSum / f32(uniforms.H);
    let invStdDev = inverseSqrt(squaredSum - sum * sum + f32(${a}));
    let channelScale = invStdDev * ${p}(scale[currentChannelNumber]);
    let channelShift = ${p}(bias[currentChannelNumber]) - sum * channelScale;

    output[global_idx] = ${h("channelScale","channelShift")};
  }`};return r.compute({name:"InstanceNormComputeChannelScaleShift",shaderCache:{hint:`${u};${a}`,inputDependencies:P},getRunData:()=>({outputs:[{dims:[o,s,2],dataType:1}],dispatchGroup:{x:Math.ceil(y/64)},programUniforms:A}),getShaderSource:k},{inputs:[_,n,t],outputs:[-1]})[0]},C$=(r,e,n)=>{let t=e[0].dims,o=t,i=t[0],s=t[t.length-1],a=U.sizeFromDimension(t,1)/s,u=it(s),l=U.size(o)/u,d=[{type:12,data:a},{type:12,data:Math.floor(s/u)}],p=["type","type"],h=E$(r,e[0],e[1],e[2],i,a,s,n.epsilon),y=b=>{let w=tt(e[0].dataType),T=u===1?"vec2f":`mat2x${u}f`,x=u===1?w:`vec${u}<${w}>`,_=F("input",e[0].dataType,e[0].dims,u),A=ee("output",e[0].dataType,o,u);return`
  @group(0) @binding(0) var<storage, read> input : array<${_.type.storage}>;
  @group(0) @binding(1) var<storage, read> scaleInput : array<${T}>;
  @group(0) @binding(2) var<storage, read_write> output : array<${A.type.storage}>;
  struct Uniforms {H: u32, C : u32};
  @group(0) @binding(3) var<uniform> uniforms: Uniforms;

  ${b.mainStart()}
    let currentImageNumber = global_idx / (uniforms.C * uniforms.H);
    let currentChannelNumber = global_idx % uniforms.C;

    let scaleOffset = currentImageNumber * uniforms.C + currentChannelNumber;
    let scale = scaleInput[scaleOffset];
    output[global_idx] = fma(input[global_idx], ${x}(scale[0]), ${x}(scale[1]));
  }`};r.compute({name:"InstanceNormalizationNHWC",shaderCache:{hint:`${u}`,inputDependencies:p},getRunData:()=>({outputs:[{dims:o,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(l/64)},programUniforms:d}),getShaderSource:y},{inputs:[e[0],h]})},Ob=(r,e)=>{e.format==="NHWC"?C$(r,r.inputs,e):r.compute(O$(r.inputs,e))}});var P$,k$,Cb,Pb=D(()=>{"use strict";Ce();Ve();Fe();P$=r=>{if(!r||r.length<2)throw new Error("layerNorm requires at least 2 inputs.")},k$=(r,e,n)=>{let t=r[0].dims,o=r[1],i=r[2],s=t,a=U.normalizeAxis(e.axis,t.length),u=U.sizeToDimension(t,a),l=U.sizeFromDimension(t,a),d=U.size(o.dims),p=i?U.size(i.dims):0;if(d!==l||i&&p!==l)throw new Error(`Size of X.shape()[axis:] == ${l}.
       Size of scale and bias (if provided) must match this.
       Got scale size of ${d} and bias size of ${p}`);let h=[];for(let P=0;P<t.length;++P)P<a?h.push(t[P]):h.push(1);let y=it(l),b=["type","type"],w=[{type:12,data:u},{type:1,data:l},{type:12,data:Math.floor(l/y)},{type:1,data:e.epsilon}];i&&b.push("type");let T=n>1,x=n>2,_=P=>{let k=tt(r[0].dataType),N=[F("x",r[0].dataType,r[0].dims,y),F("scale",o.dataType,o.dims,y)];i&&N.push(F("bias",i.dataType,i.dims,y)),N.push(ee("output",r[0].dataType,s,y)),T&&N.push(ee("mean_data_output",1,h)),x&&N.push(ee("inv_std_output",1,h));let j=[{name:"norm_count",type:"u32"},{name:"norm_size",type:"f32"},{name:"norm_size_vectorized",type:"u32"},{name:"epsilon",type:"f32"}];return`
  ${P.registerUniforms(j).declareVariables(...N)}
  ${P.mainStart()}
    ${P.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.norm_count")}
    let offset = global_idx * uniforms.norm_size_vectorized;
    var mean_vector = ${Mt("f32",y)};
    var mean_square_vector = ${Mt("f32",y)};

    for (var h: u32 = 0u; h < uniforms.norm_size_vectorized; h++) {
      let value = ${br(k,y,"x[h + offset]")};
      mean_vector += value;
      mean_square_vector += value * value;
    }
    let mean = ${Zt("mean_vector",y)} / uniforms.norm_size;
    let inv_std_dev = inverseSqrt(${Zt("mean_square_vector",y)} / uniforms.norm_size - mean * mean + uniforms.epsilon);

    for (var j: u32 = 0; j < uniforms.norm_size_vectorized; j++) {
      let f32input = ${br(k,y,"x[j + offset]")};
      let f32scale = ${br(k,y,"scale[j]")};
      output[j + offset] = ${N[0].type.value}((f32input - mean) * inv_std_dev * f32scale
        ${i?`+ ${br(k,y,"bias[j]")}`:""}
      );
    }

    ${T?"mean_data_output[global_idx] = mean":""};
    ${x?"inv_std_output[global_idx] = inv_std_dev":""};
  }`},A=[{dims:s,dataType:r[0].dataType}];return T&&A.push({dims:h,dataType:1}),x&&A.push({dims:h,dataType:1}),{name:"LayerNormalization",shaderCache:{hint:`${y};${n}`,inputDependencies:b},getRunData:()=>({outputs:A,dispatchGroup:{x:Math.ceil(u/64)},programUniforms:w}),getShaderSource:_}},Cb=(r,e)=>{P$(r.inputs),r.compute(k$(r.inputs,e,r.outputCount))}});var D$,B$,kb,Db,Bb=D(()=>{"use strict";Ce();Ve();Ot();Fe();D$=(r,e)=>{if(r.length<3||r.length>4)throw new Error("MatMulNBits requires 3 or 4 inputs");let n=r[0],t=n.dims.length;if(n.dims[t-1]!==e.k)throw new Error("The last dim of input shape does not match the k value");let o=Math.floor((e.k+e.blockSize-1)/e.blockSize),i=e.blockSize/8*e.bits,s=r[1];if(!U.areEqual(s.dims,[e.n,o,i]))throw new Error("The second inputs must be 3D tensor with shape N X nBlocksPerCol X blobSize");let u=r[2].dims;if(U.size(u)!==e.n*o)throw new Error("scales input size error.");if(r.length===4){let d=r[3].dims,p=e.bits>4?e.n*o:e.n*Math.floor((o+1)/2);if(U.size(d)!==p)throw new Error("zeroPoints input size error.")}},B$=(r,e,n,t)=>{let o=r[0].dims,i=o.length,s=Math.floor((e.k+e.blockSize-1)/e.blockSize),a=o[i-2],u=e.k,l=e.n,d=o.slice(0,i-2),p=U.size(d),y=e.blockSize/8*e.bits/4,b=r[0].dataType,w=it(a),T=it(e.k),x=it(y),_=kn(b),A=a*s,P=it(l,Math.ceil(t/A/_)),k=P*A*_>t&&A*_<=t?1:P,N=s<=n[0]&&A*k*_<=t,j=d.concat([a,l]),Z=U.size(j)/k/w,se=N?[{type:12,data:e.blockSize}]:[{type:12,data:Z},{type:12,data:e.k},{type:12,data:e.n},{type:12,data:e.accuracyLevel},{type:12,data:e.bits},{type:12,data:e.blockSize}],Q=[p,a,u/T],X=U.convertShape(r[1].dims).slice();X.splice(-1,1,y/x),se.push(...oe(Q)),se.push(...oe(X)),se.push(...oe(r[2].dims)),r.length===4&&se.push(...oe(U.convertShape(r[3].dims)));let Be=[p,a,l/k];se.push(...oe(Be));let qe=V=>{let ie=Q.length,H=F("a",r[0].dataType,ie,T),Me=F("b",12,X.length,x),Pe=F("scales",r[2].dataType,r[2].dims.length),Ie=[H,Me,Pe],fe=r.length===4?F("zero_points",12,r[3].dims.length):void 0;fe&&Ie.push(fe);let Ee=Be.length,Te=ee("output",r[0].dataType,Ee,k),_t=N?[{name:"block_size",type:"u32"}]:[{name:"output_size",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"accuracy_level",type:"u32"},{name:"bits",type:"u32"},{name:"block_size",type:"u32"}],q=tt(r[0].dataType),ue=(()=>{switch(T){case 1:return`array<${q}, 8>`;case 2:return`mat4x2<${q}>`;case 4:return`mat2x4<${q}>`;default:throw new Error(`${T}-component is not supported.`)}})(),ke=`
        fn dequantize(quantized: ${ue}, zero_point: ${q}, scale: ${q}) -> ${ue} {
          ${(()=>T===1?`var dequantized = ${ue}(${Array.from({length:8},(Ct,mt)=>`(quantized[${mt}] - zero_point) * scale`).join(", ")});
              return dequantized;`:`var zero_points: ${ue} = ${ue}(${Array(8).fill("zero_point").join(",")});
              return (quantized - zero_points) * scale;`)()}
        }`,Et=`
        fn ortUnpack8x4snorm(value: u32) -> ${ue} {
          var quantized: ${ue};
          var offset: u32 = 0;
          let count: u32 = 4;
          for (var i: u32 = 0; i < 8u; i++) {
            var result = ${q}(extractBits(value, offset, count));
            ${(()=>{switch(T){case 1:return"quantized[i] = result;";case 2:return"quantized[i / 2][i % 2] = result;";case 4:return"quantized[i / 4][i % 4] = result;";default:throw new Error(`${T}-component is not supported.`)}})()}
            offset += count;
          }
          return quantized;
        }`,xt=fe?`
          zero_point_offset += 4;
          if (zero_point_offset == 32) {
            zero_point_offset = 0;
            zero_point_index++;
            zero_point_word = ${fe.getByOffset("zero_point_index")};
          }`:"";return N?`
        var<workgroup> workgroup_shared: array<${Te.type.value}, ${a*s}>;
        ${V.registerUniforms(_t).declareVariables(...Ie,Te)}
        ${V.mainStart([s,1,1])}
          var a_indices: ${H.type.indices};
          var block = local_id.x;
          var col = workgroup_id.y;
          var batch = workgroup_id.z;
          ${H.indicesSet("a_indices","0","batch")};
          // Two zero points are packed into one byte when uniforms.bits is 4.
          for (var c: u32 = 0; c < ${k}; c++) {
            let col_times_components_plus_c = col * ${k} + c;
              ${fe?`
            var zero_point_bytes_per_col: u32 = (${s} + 1) / 2;
            var zero_point_byte_count: u32 = col_times_components_plus_c * zero_point_bytes_per_col + (block >> 0x1u);
            var zero_point_word_index: u32 = zero_point_byte_count >> 0x2u;
            var zero_point_byte_offset: u32 = zero_point_byte_count & 0x3u;
            var zero_point_nibble_offset: u32 = block & 0x1u;
            var zero_point_bits_offset: u32 = (zero_point_byte_offset << 3) + (zero_point_nibble_offset << 2);
            var zero_point_word: u32 = ${fe.getByOffset("zero_point_word_index")} >> zero_point_bits_offset;`:""}
            var b_indices: ${Me.type.indices};
            ${Me.indicesSet("b_indices","0","col_times_components_plus_c")};
            // The scale and zero points are computed per block.
            var scales_index = col_times_components_plus_c * ${s} + block;
            let scale = ${Pe.getByOffset("scales_index")};
            // The default zero point is 8 for unsigned 4-bit quantization.
            let zero_point = ${q}(${fe?"(zero_point_word) & 0xFu":8});
            ${Me.indicesSet("b_indices","1","block")};
            var word_offset: u32 = block * ${e.blockSize/T};
            var workgroup_shared_offset: u32 = block * ${a};
            for (var word: u32 = 0; word < ${y}; word += ${x}) {
              ${Me.indicesSet("b_indices","2","word")};
              let b_data = ${Me.getByIndices("b_indices")};
              for (var i: u32 = 0; i < ${x}; i++) {
                let b_value: u32 = ${x===1?"b_data":"b_data[word + i]"};
                let b_mask: u32 = 0x0F0F0F0Fu;
                let b_value_lower: vec4<u32> = unpack4xU8(b_value & b_mask);
                let b_value_upper: vec4<u32> = unpack4xU8((b_value >> 4) & b_mask);
                let b_quantized_values = ${ue}(${Array.from({length:4},(Ct,mt)=>`${q}(b_value_lower[${mt}]), ${q}(b_value_upper[${mt}])`).join(", ")});
                let b_dequantized_values = ${(()=>T===1?`${ue}(${Array.from({length:8},(Ct,mt)=>`(b_quantized_values[${mt}] - zero_point) * scale`).join(", ")});`:`(b_quantized_values - ${ue}(${Array(8).fill("zero_point").join(",")})) * scale;`)()};
                // Number of B elements per 32-bit word is 32/bits = 32/4 = 8
                for (var m: u32 = 0; m < ${a}u; m++) {
                  ${H.indicesSet("a_indices",ie-2,"m")};
                  ${H.indicesSet("a_indices",ie-1,"word_offset")};
                  var input_offset = ${H.indicesToOffset("a_indices")};
                  var a_data: ${ue};
                  for (var j: u32 = 0; j < ${8/T}; j++) {
                    a_data[j] = ${H.getByOffset("input_offset")};
                    input_offset++;
                  }
                  workgroup_shared[workgroup_shared_offset + m]${k>1?"[c]":""} += ${Array.from({length:8/T},(Ct,mt)=>`${T===1?`a_data[${mt}] * b_dequantized_values[${mt}]`:`dot(a_data[${mt}], b_dequantized_values[${mt}])`}`).join(" + ")};
                }
                word_offset += ${8/T};
              }
            }
          }
          workgroupBarrier();
          if (local_id.x == 0u) {
            var output_indices: ${Te.type.indices};
            ${Te.indicesSet("output_indices","0","batch")};
            ${Te.indicesSet("output_indices",Ee-1,"col")};
            ${Te.indicesSet("output_indices",Ee-2,"0")};
            var output_offset = ${Te.indicesToOffset("output_indices")};
            for (var m: u32 = 0u; m < ${a}u; m++) {
              var output_value: ${Te.type.value} = ${Te.type.value}(0);
              var workgroup_shared_offset: u32 = m;
              for (var b: u32 = 0u; b < ${s}u; b++) {
                output_value += workgroup_shared[workgroup_shared_offset];
                workgroup_shared_offset += ${a};
              }
              ${Te.setByOffset("output_offset","output_value")};
              output_offset += ${l/k};
            }
          }
        }`:`
        ${ke};
        ${Et};
        ${V.registerUniforms(_t).declareVariables(...Ie,Te)}
        ${V.mainStart()}
          ${V.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
          var output_values: array<${Te.type.value}, ${w}>;
          var output_indices = ${Te.offsetToIndices("global_idx")};
          var n = ${Te.indicesGet("output_indices",Ee-1)};
          var m = ${Te.indicesGet("output_indices",Ee-2)};
          var a_indices: ${H.type.indices} = output_indices;
          // Two zero points are packed into one byte because uniforms.bits <= 4.
          // zero_point_offset is either 0 or 4. It is bit offset within one byte.
          // TODO support zero_point_offset for bits > 4
          ${fe?`
          var zero_point_index: u32 = n * ${k} * ((${s} + 1) / 2) / 4;
          var zero_point_word: u32 = ${fe.getByOffset("zero_point_index")};
          var zero_point_offset: u32 = 0;`:""}
          var scale_index = n * ${s*k};
          var b_indices: ${Me.type.indices};
          for (var c: u32 = 0; c < ${k}; c++) {
            ${Me.indicesSet("b_indices","0",`n * ${k} + c`)};
            var block_offset: u32 = 0;
            for (var block: u32 = 0; block < ${s}; block++) {
              // The scale and zero points are computed per block.
              let scale = ${Pe.getByOffset("scale_index")};
              // The default zero point is 8 for unsigned 4-bit quantization.
              let zero_point = ${q}(${fe?"extractBits(zero_point_word, zero_point_offset, 4)":8});
              ${Me.indicesSet("b_indices","1","block")};
              var word_offset: u32 = block_offset;
              for (var word: u32 = 0; word < ${y}; word += ${x}) {
                ${Me.indicesSet("b_indices","2","word")};
                let b_data = ${Me.getByIndices("b_indices")};
                for (var i: u32 = 0; i < ${x}; i++) {
                  let b_value = ${x===1?"b_data":"b_data[word + i]"};
                  let b_quantized_values: ${ue} = ortUnpack8x4snorm(b_value);
                  let b_dequantized_values = dequantize(b_quantized_values, zero_point, scale);
                  // Number of B elements per 32-bit word is 32/bits = 32/4 = 8
                  var offset: u32 = word_offset;
                  for (var j: u32 = 0; j < 8/${T}; j++) {
                    ${H.indicesSet("a_indices",ie-1,`offset/${T}`)};
                    for (var k: u32 = 0; k < ${w}u; k++) {
                      ${H.indicesSet("a_indices",ie-2,`m * ${w} + k`)};
                      let a_data = ${H.getByIndices("a_indices")};
                      output_values[k]${k>1?"[c]":""} += ${T===1?"a_data * b_dequantized_values[j]":"dot(a_data, b_dequantized_values[j])"};
                    }
                    offset += ${T};
                  }
                  word_offset += 8;
                }
              }
              scale_index++;
              ${xt}
              block_offset += uniforms.block_size;
            }
            // Drop the trailing 4 bits if the zero_poit_offset is not a byte boundary to align with the next byte.
            ${fe?`if (zero_point_offset % 8 > 0) {
                ${xt}
              }`:""}
            }
            for (var k: u32 = 0u; k < ${w}u; k++) {
              ${Te.indicesSet("output_indices",Ee-2,`${w+" * m + k"}`)};
              ${Te.setByIndices("output_indices","output_values[k]")}
            }
        }`};return{name:N?"BlockwiseMatMulNBits":"MatMulNBits",shaderCache:{hint:N?`${e.cacheKey};${a};${b};${r.length}`:`${e.cacheKey};${r.length}`,inputDependencies:Array(r.length).fill("rank")},getRunData:()=>({outputs:[{dims:j,dataType:b}],name:N?"BlockwiseMatMulNBits":"MatMulNBits",dispatchGroup:N?{x:1,y:Math.ceil(l/k),z:p}:{x:Math.ceil(Z/64)},programUniforms:se}),getShaderSource:qe}},kb=(r,e)=>{D$(r.inputs,e);let n=r.getMaxComputeWorkgroupSizes(),t=r.getMaxComputeWorkgroupStoragesize();r.compute(B$(r.inputs,e,n,t))},Db=r=>Le(r)});var R$,zb,Rb,z$,Pl,Mb,Nb=D(()=>{"use strict";Ce();Ve();Ot();es();gl();Fe();uo();R$=(r,e)=>{let n=r[0],t=r[1],o=r[2],i=r[3],s=r[4],a=r[5],u=r[6],l=r[7];if(n.dims.length!==3&&n.dims.length!==5)throw new Error("Input query is expected to have 3 or 5 dimensions");let d=!1,p=n.dims[0],h=n.dims[1],y=n.dims.length===3?d?n.dims[2]/3:n.dims[2]:e.numHeads*n.dims[4],b=h,w=0,T=0,x=Math.floor(y/e.numHeads);if(u&&l){if(u.dims.length!==4)throw new Error('Input "past_key" is expected to have 4 dimensions');if(l.dims.length!==4)throw new Error('Input "past_value" is expected to have 4 dimensions');w=u.dims[2],T=u.dims[2]}else if(u||l)throw new Error('Input "past_key" and "past_value" shall be both present or both absent');let _;if(t){if(n.dims.length!==3)throw new Error('Input "query" is expected to have 3 dimensions when key is given');if(t.dims.length<3||t.dims.length>5)throw new Error('Input "key" is expected to have 3, 4, or 5 dimensions');if(n.dims[0]!==t.dims[0])throw new Error('Input "query" and "key" shall have same dim 0 (batch size)');if(t.dims.length===3){if(t.dims[2]!==n.dims[2])throw new Error('Input "query" and "key" shall have same dim 2 (hidden_size)');_=2,b=t.dims[1]}else if(t.dims.length===5){if(t.dims[2]!==e.numHeads||t.dims[3]!==2||t.dims[4]!==x)throw new Error('Expect "key" shape (batch_size, kv_sequence_length, num_heads, 2, head_size) for packed kv');if(o)throw new Error('Expect "value" be none when "key" has packed kv format.');_=5,b=t.dims[1]}else{if(t.dims[1]!==e.numHeads||t.dims[3]!==x)throw new Error('Expect "key" shape (batch_size, num_heads, kv_sequence_length, head_size) for past_key');_=0,b=t.dims[2]}}else{if(n.dims.length!==3&&n.dims.length!==5)throw new Error('Input "query" is expected to have 3 or 5 dimensions when key is empty');if(n.dims.length===5&&(n.dims[2]!==e.numHeads||n.dims[3]!==3))throw new Error('Expect "query" shape (batch_size, kv_sequence_length, num_heads, 3, head_size) for packed kv');_=3}if(i){if(i.dims.length!==1)throw new Error('Input "bias" is expected to have 1 dimension');if(o&&n.dims.length===5&&n.dims[3]===2)throw new Error("bias is not allowed for packed kv.")}let A=0;if(s){A=8;let Z=s.dims;throw Z.length===1?Z[0]===p?A=1:Z[0]===3*p+2&&(A=3):Z.length===2&&Z[0]===p&&Z[1]===b&&(A=5),A===8?new Error('Input "key_padding_mask" shape shall be (batch_size) or (batch_size, kv_sequence_length)'):new Error("Mask not supported")}let P=!1,k=y;if(o){if(o.dims.length!==3&&o.dims.length!==4)throw new Error('Input "value" is expected to have 3 or 4 dimensions');if(n.dims[0]!==o.dims[0])throw new Error('Input "query" and "value" shall have same dim 0 (batch_size)');if(o.dims.length===3){if(b!==o.dims[1])throw new Error('Input "key" and "value" shall have the same dim 1 (kv_sequence_length)');k=o.dims[2]}else{if(b!==o.dims[2])throw new Error('Input "past_key" and "past_value" shall have the same dim 2 (kv_sequence_length)');k=o.dims[1]*o.dims[3],P=!0}}let N=w+b,j=!1;if(s)throw new Error("Key padding mask is not supported");if(a)throw new Error("extraAddQk is not supported");if(u)throw new Error("pastKey is not supported");if(l)throw new Error("pastValue is not supported");return{batchSize:p,sequenceLength:h,pastSequenceLength:w,kvSequenceLength:b,totalSequenceLength:N,maxSequenceLength:T,inputHiddenSize:0,hiddenSize:y,vHiddenSize:k,headSize:x,vHeadSize:Math.floor(k/e.numHeads),numHeads:e.numHeads,isUnidirectional:!1,pastPresentShareBuffer:!1,maskFilterValue:e.maskFilterValue,maskType:A,scale:e.scale,broadcastResPosBias:j,passPastInKv:P,qkvFormat:_}},zb=r=>Le({...r}),Rb=Le({perm:[0,2,1,3]}),z$=(r,e,n,t,o,i,s)=>{let a=[t,o,i],u=U.size(a),l=[{type:12,data:u},{type:12,data:s},{type:12,data:i}],d=p=>{let h=ee("qkv_with_bias",e.dataType,a),y=F("qkv",e.dataType,a),b=F("bias",n.dataType,a),w=[{name:"output_size",type:"u32"},{name:"bias_offset",type:"u32"},{name:"hidden_size",type:"u32"}];return`
  ${p.registerUniforms(w).declareVariables(y,b,h)}
  ${p.mainStart()}
    ${p.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    let bias_offset_idx = (global_idx % uniforms.hidden_size) + uniforms.bias_offset;

    qkv_with_bias[global_idx] = qkv[global_idx] + bias[bias_offset_idx];
  }`};return r.compute({name:"MultiHeadAttentionAddBias",shaderCache:{inputDependencies:["type","type"]},getRunData:()=>({outputs:[{dims:a,dataType:e.dataType,gpuDataType:0}],dispatchGroup:{x:Math.ceil(u/64)},programUniforms:l}),getShaderSource:d},{inputs:[e,n],outputs:[-1]})[0]},Pl=(r,e,n,t,o,i,s,a)=>{let u=i;if(s){if(t===1)throw new Error("AddBiasReshape is not implemented. Please export your model with packed QKV or KV");return u=z$(r,i,s,e,t,n*o,a),u=u.reshape([e,t,n,o]),r.compute(cr(u,Rb.perm),{inputs:[u],outputs:[-1]})[0]}else return i.dims.length===3&&(u=i.reshape([e,t,n,o])),r.compute(cr(u,Rb.perm),{inputs:[u],outputs:[-1]})[0]},Mb=(r,e)=>{let n=R$(r.inputs,e);if(r.inputs[0].dims.length===5)throw new Error("Packed QKV is not implemented");if(r.inputs[1]?.dims.length===5)throw new Error("Packed KV is not implemented");let t=r.inputs[1]&&r.inputs[2]&&r.inputs[1].dims.length===4&&r.inputs[2].dims.length===4,o=Pl(r,n.batchSize,n.numHeads,n.sequenceLength,n.headSize,r.inputs[0],r.inputs[3],0);if(t)return us(r,o,r.inputs[1],r.inputs[2],r.inputs[4],void 0,void 0,void 0,r.inputs[5],n,e);let i=Pl(r,n.batchSize,n.numHeads,n.kvSequenceLength,n.headSize,r.inputs[1],r.inputs[3],n.hiddenSize),s=Pl(r,n.batchSize,n.numHeads,n.kvSequenceLength,n.vHeadSize,r.inputs[2],r.inputs[3],2*n.hiddenSize);us(r,o,i,s,r.inputs[4],void 0,r.inputs[6],r.inputs[7],r.inputs[5],n,e)}});var M$,N$,L$,U$,F$,V$,G$,W$,Lb,Ub=D(()=>{"use strict";Ce();Ve();Fe();M$=r=>{if(!r||r.length<1)throw new Error("Too few inputs");if(r[0].dataType!==1&&r[0].dataType!==10)throw new Error("Input type must be float or float16.");if(r.length>=2){let e=r[0].dims.length*2===r[1].dims[0];if(r.length===4&&(e=r[3].dims[0]*2===r[1].dims[0]),!e)throw new Error("The pads should be a 1D tensor of shape [2 * input_rank] or [2 * num_axes].")}},N$=(r,e,n)=>{let t="";for(let o=e-1;o>=0;--o)t+=`
            k = i32(${r.indicesGet("indices",o)}) - ${Se("uniforms.pads",o,n)};
            if (k < 0) {
              break;
            }
            if (k >= i32(${Se("uniforms.x_shape",o,e)})) {
              break;
            }
            offset += k * i32(${Se("uniforms.x_strides",o,e)});
        `;return`
          value = ${r.type.value}(uniforms.constant_value);
          for (var i = 0; i < 1; i++) {
            var offset = 0;
            var k = 0;
            ${t}
            value = x[offset];
          }
      `},L$=(r,e,n)=>{let t="";for(let o=e-1;o>=0;--o)t+=`
                k = i32(${r.indicesGet("indices",o)}) - ${Se("uniforms.pads",o,n)};
                if (k < 0) {
                  k = -k;
                }
                {
                  let _2n_1 = 2 * (i32(${Se("uniforms.x_shape",o,e)}) - 1);
                  k = k % _2n_1;
                  if(k >= i32(${Se("uniforms.x_shape",o,e)})) {
                    k = _2n_1 - k;
                  }
                }
                offset += k * i32(${Se("uniforms.x_strides",o,e)});
            `;return`
              var offset = 0;
              var k = 0;
              ${t}
              value = x[offset];
          `},U$=(r,e,n)=>{let t="";for(let o=e-1;o>=0;--o)t+=`
                k = i32(${r.indicesGet("indices",o)}) - ${Se("uniforms.pads",o,n)};
                if (k < 0) {
                  k = 0;
                }
                if (k >= i32(${Se("uniforms.x_shape",o,e)})) {
                  k = i32(${Se("uniforms.x_shape",o,e)}) - 1;
                }
                offset += k * i32(${Se("uniforms.x_strides",o,e)});
            `;return`
              var offset = 0;
              var k = 0;
              ${t}
              value = x[offset];
          `},F$=(r,e,n)=>{let t="";for(let o=e-1;o>=0;--o)t+=`
                k = i32(${r.indicesGet("indices",o)}) - ${Se("uniforms.pads",o,n)};
                if (k < 0)  {
                  k += i32(${Se("uniforms.x_shape",o,e)}]);
                }
                if (k >= i32(${Se("uniforms.x_shape",o,e)})) {
                  k -= i32(${Se("uniforms.x_shape",o,e)});
                }
                offset += k * i32(${Se("uniforms.x_strides",o,e)});
            `;return`
              var offset = 0;
              var k = 0;
              ${t}
              value = x[offset];
          `},V$=(r,e,n)=>{switch(n.mode){case 0:return N$(r,e,n.pads.length);case 1:return L$(r,e,n.pads.length);case 2:return U$(r,e,n.pads.length);case 3:return F$(r,e,n.pads.length);default:throw new Error("Invalid mode")}},G$=(r,e)=>{let n=U.padShape(r[0].dims.slice(),e.pads),t=r[0].dims,o=U.size(n),i=[{type:12,data:o},{type:6,data:e.pads}];e.mode===0&&i.push({type:r[0].dataType,data:e.value}),i.push(...oe(r[0].dims,n));let s=["rank"],a=u=>{let l=ee("output",r[0].dataType,n.length),d=F("x",r[0].dataType,t.length),p=d.type.value,h=V$(l,t.length,e),y=[{name:"output_size",type:"u32"},{name:"pads",type:"i32",length:e.pads.length}];return e.mode===0&&y.push({name:"constant_value",type:p}),`
            ${u.registerUniforms(y).declareVariables(d,l)}
            ${u.mainStart()}
            ${u.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

            let indices = ${l.offsetToIndices("global_idx")};

            var value = ${p}(0);
            ${h}
            output[global_idx] = value;
        }`};return{name:"Pad",shaderCache:{hint:`${e.mode}`,inputDependencies:s},getRunData:()=>({outputs:[{dims:n,dataType:r[0].dataType}],dispatchGroup:{x:Math.ceil(U.size(n)/64)},programUniforms:i}),getShaderSource:a}},W$=(r,e)=>{if(r.length>1){let n=r[1].getBigInt64Array(),t=r.length>=3&&r[2].data?r[2].getFloat32Array()[0]:0,o=r[0].dims.length,i=new Int32Array(2*o).fill(0);if(r.length>=4){let a=r[3].getBigInt64Array();for(let u=0;u<a.length;u++)i[Number(a[u])]=Number(n[u]),i[Number(a[u])+o]=Number(n[u+a.length])}else n.forEach((a,u)=>i[Number(u)]=Number(a));let s=[];return i.forEach(a=>s.push(a)),{mode:e.mode,value:t,pads:s}}else return e},Lb=(r,e)=>{M$(r.inputs);let n=W$(r.inputs,e);r.compute(G$(r.inputs,n),{inputs:[0]})}});var vs,Fb,Vb,Gb,Wb,H$,j$,Hb,jb,qb,Kb,Yb,Xb,Zb,Jb,Qb,e0,t0,r0,n0=D(()=>{"use strict";Rt();Ce();Ve();Fe();vs=r=>{if(_e.webgpu.validateInputContent&&(!r||r.length!==1))throw new Error("Pool ops requires 1 input.")},Fb=(r,e,n)=>{let t=e.format==="NHWC",o=r.dims.slice();t&&o.splice(1,0,o.pop());let i=Object.hasOwnProperty.call(e,"dilations"),s=e.kernelShape.slice(),a=e.strides.slice(),u=i?e.dilations.slice():[],l=e.pads.slice();Dn.adjustPoolAttributes(n,o,s,a,u,l);let d=Dn.computePoolOutputShape(n,o,a,u,s,l,e.autoPad),p=Object.assign({},e);i?Object.assign(p,{kernelShape:s,strides:a,pads:l,dilations:u,cacheKey:e.cacheKey}):Object.assign(p,{kernelShape:s,strides:a,pads:l,cacheKey:e.cacheKey});let h=d.slice();return h.push(h.splice(1,1)[0]),[p,t?h:d]},Vb=(r,e)=>{let n=e.format==="NHWC",t=U.size(r),o=U.size(e.kernelShape),i=[{type:12,data:t},{type:12,data:o}],s=[{name:"outputSize",type:"u32"},{name:"kernelSize",type:"u32"}];if(e.kernelShape.length<=2){let a=e.kernelShape[e.kernelShape.length-1],u=e.strides[e.strides.length-1],l=e.pads[e.pads.length/2-1],d=e.pads[e.pads.length-1],p=!!(l+d);i.push({type:12,data:a},{type:12,data:u},{type:12,data:l},{type:12,data:d}),s.push({name:"kw",type:"u32"},{name:"sw",type:"u32"},{name:"pwStart",type:"u32"},{name:"pwEnd",type:"u32"});let h=!1;if(e.kernelShape.length===2){let y=e.kernelShape[e.kernelShape.length-2],b=e.strides[e.strides.length-2],w=e.pads[e.pads.length/2-2],T=e.pads[e.pads.length-2];h=!!(w+T),i.push({type:12,data:y},{type:12,data:b},{type:12,data:w},{type:12,data:T}),s.push({name:"kh",type:"u32"},{name:"sh",type:"u32"},{name:"phStart",type:"u32"},{name:"phEnd",type:"u32"})}return[i,s,!0,p,h]}else{if(n)throw new Error("Pooling with kernelShape.length > 2 is not supported for NHWC format.");let a=U.computeStrides(e.kernelShape);i.push({type:12,data:a},{type:12,data:e.pads},{type:12,data:e.strides}),s.push({name:"kernelStrides",type:"u32",length:a.length},{name:"pads",type:"u32",length:e.pads.length},{name:"strides",type:"u32",length:e.strides.length});let u=e.pads.reduce((l,d)=>l+d);return[i,s,!!u,!1,!1]}},Gb=(r,e,n,t,o,i,s,a,u,l,d,p)=>{let h=o.format==="NHWC",y=e.type.value,b=ee("output",e.type.tensor,t);if(o.kernelShape.length<=2){let w="",T="",x="",_=n-(h?2:1);if(d?w=`
                for (var i: u32 = 0u; i < uniforms.kw; i++) {
                  xIndices[${_}] = indices[${_}] * uniforms.sw - uniforms.pwStart + i;
                  if (xIndices[${_}] < 0 || xIndices[${_}]
                      >= uniforms.x_shape[${_}]) {
                    pad++;
                    continue;
                  }
                  let x_val = x[${e.indicesToOffset("xIndices")}];
                  ${i}
                }`:w=`
                for (var i: u32 = 0u; i < uniforms.kw; i++) {
                  xIndices[${_}] = indices[${_}] * uniforms.sw - uniforms.pwStart + i;
                  let x_val = x[${e.indicesToOffset("xIndices")}];
                  ${i}
                }`,o.kernelShape.length===2){let P=n-(h?3:2);p?T=`
                for (var j: u32 = 0u; j < uniforms.kh; j++) {
                  xIndices[${P}] = indices[${P}] * uniforms.sh - uniforms.phStart + j;
                  if (xIndices[${P}] < 0 || xIndices[${P}] >= uniforms.x_shape[${P}]) {
                    pad += i32(uniforms.kw);
                    continue;
                  }
              `:T=`
                for (var j: u32 = 0u; j < uniforms.kh; j++) {
                  xIndices[${P}] = indices[${P}] * uniforms.sh - uniforms.phStart + j;
                `,x=`
              }
            `}return`
            ${r.registerUniforms(u).declareVariables(e,b)}

            ${r.mainStart()}
              ${r.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}

              let indices = ${b.offsetToIndices("global_idx")};
              var xIndices = ${b.offsetToIndices("global_idx")};

              var value = ${y}(${a});
              var pad = 0;
              ${T}
              ${w}
              ${x}
              ${s}

              output[global_idx] = value;
            }`}else{if(h)throw new Error("Pooling with kernelShape.length > 2 is not supported for NHWC format.");let w=o.kernelShape.length,T=o.pads.length,x="";return l?x=`
                if (xIndices[j] >= uniforms.x_shape[j]) {
                  pad++;
                  isPad = true;
                  break;
                }
              }
              if (!isPad) {
                let x_val = x[${e.indicesToOffset("xIndices")}];
                ${i}
              }`:x=`
              }
              let x_val = x[${e.indicesToOffset("xIndices")}];
              ${i}
            `,`
            ${r.registerUniforms(u).declareVariables(e,b)}

            ${r.mainStart()}
              ${r.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
              let indices = ${b.offsetToIndices("global_idx")};
              var xIndices = ${b.offsetToIndices("global_idx")};

              var offsets: array<u32, ${w}>;

              var value = ${y}(${a});
              var pad = 0;
              var isPad = false;

              for (var i: u32 = 0u; i < uniforms.kernelSize; i++) {
                var offset = i;
                for (var j = 0u; j < ${w-1}u; j++) {
                  offsets[j] = offset / ${Se("uniforms.kernelStrides","j",w)};
                  offset -= offsets[j] * ${Se("uniforms.kernelStrides","j",w)};
                }
                offsets[${w-1}] = offset;

                isPad = false;
                for (var j = ${n-w}u; j < ${n}u; j++) {
                  xIndices[j] = indices[j] * ${Se("uniforms.strides",`j - ${n-w}u`,w)}
                    + offsets[j - ${n-w}u] - ${Se("uniforms.pads","j - 2u",T)};
                  ${x}
              }
              ${s}

              output[global_idx] = value;
            }`}},Wb=r=>`${r.format};${r.ceilMode};${r.autoPad};${r.kernelShape.length}`,H$=r=>`${Wb(r)};${r.countIncludePad}`,j$=r=>`${Wb(r)};${r.storageOrder};${r.dilations}`,Hb=r=>({format:r.format,autoPad:["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][r.auto_pad],ceilMode:r.ceil_mode,kernelShape:r.kernel_shape,strides:r.strides,pads:r.pads}),jb=(r,e,n,t)=>{let[o,i]=Fb(e,t,n),s=F("x",e.dataType,e.dims.length),a=s.type.value,u="value += x_val;",l="";o.countIncludePad?l+=`value /= ${a}(uniforms.kernelSize);`:l+=`value /= ${a}(i32(uniforms.kernelSize) - pad);`;let[d,p,h,y,b]=Vb(i,o);d.push(...oe(e.dims,i));let w=["rank"];return{name:r,shaderCache:{hint:`${t.cacheKey};${h};${y};${b}`,inputDependencies:w},getRunData:()=>({outputs:[{dims:i,dataType:e.dataType}],dispatchGroup:{x:Math.ceil(U.size(i)/64)},programUniforms:d}),getShaderSource:T=>Gb(T,s,e.dims.length,i.length,o,u,l,0,p,h,y,b)}},qb=r=>{let e=r.count_include_pad!==0,n=Hb(r);if(n.ceilMode!==0)throw new Error("using ceil() in shape computation is not yet supported for AveragePool");let t={countIncludePad:e,...n,cacheKey:""};return{...t,cacheKey:H$(t)}},Kb=(r,e)=>{vs(r.inputs),r.compute(jb("AveragePool",r.inputs[0],!1,e))},Yb={autoPad:"",ceilMode:0,countIncludePad:!1,kernelShape:[],strides:[],pads:[],storageOrder:0,dilations:[]},Xb=r=>{let e=r.format;return{format:e,...Yb,cacheKey:e}},Zb=(r,e)=>{vs(r.inputs),r.compute(jb("GlobalAveragePool",r.inputs[0],!0,e))},Jb=(r,e,n,t)=>{let[o,i]=Fb(e,t,n),s=`
      value = max(x_val, value);
    `,a="",u=F("x",e.dataType,e.dims.length),l=["rank"],[d,p,h,y,b]=Vb(i,o);return d.push(...oe(e.dims,i)),{name:r,shaderCache:{hint:`${t.cacheKey};${h};${y};${b}`,inputDependencies:l},getRunData:()=>({outputs:[{dims:i,dataType:e.dataType}],dispatchGroup:{x:Math.ceil(U.size(i)/64)},programUniforms:d}),getShaderSource:w=>Gb(w,u,e.dims.length,i.length,o,s,a,e.dataType===10?-65504:-1e5,p,h,y,b)}},Qb=(r,e)=>{vs(r.inputs),r.compute(Jb("MaxPool",r.inputs[0],!1,e))},e0=r=>{let e=r.storage_order,n=r.dilations,t=Hb(r);if(e!==0)throw new Error("column major storage order is not yet supported for MaxPool");if(t.ceilMode!==0)throw new Error("using ceil() in shape computation is not yet supported for MaxPool");let o={storageOrder:e,dilations:n,...t,cacheKey:""};return{...o,cacheKey:j$(o)}},t0=r=>{let e=r.format;return{format:e,...Yb,cacheKey:e}},r0=(r,e)=>{vs(r.inputs),r.compute(Jb("GlobalMaxPool",r.inputs[0],!0,e))}});var K$,Y$,o0,i0=D(()=>{"use strict";Rt();Ce();Fe();K$=(r,e,n)=>{let t=r===e,o=r<e&&n<0,i=r>e&&n>0;if(t||o||i)throw new Error("Range these inputs' contents are invalid.")},Y$=(r,e,n,t)=>{let o=Math.abs(Math.ceil((e-r)/n)),i=[o],s=o,a=[{type:12,data:s},{type:t,data:r},{type:t,data:n},...oe(i)],u=l=>{let d=ee("output",t,i.length),p=d.type.value,h=[{name:"outputSize",type:"u32"},{name:"start",type:p},{name:"delta",type:p}];return`
        ${l.registerUniforms(h).declareVariables(d)}
        ${l.mainStart()}
        ${l.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
        output[global_idx] = uniforms.start + ${p}(global_idx) * uniforms.delta;
      }`};return{name:"Range",shaderCache:{hint:`${t}`},getShaderSource:u,getRunData:()=>({outputs:[{dims:i,dataType:t}],dispatchGroup:{x:Math.ceil(s/64)},programUniforms:a})}},o0=r=>{let e=0,n=0,t=0;r.inputs[0].dataType===6?(e=r.inputs[0].getInt32Array()[0],n=r.inputs[1].getInt32Array()[0],t=r.inputs[2].getInt32Array()[0]):r.inputs[0].dataType===1&&(e=r.inputs[0].getFloat32Array()[0],n=r.inputs[1].getFloat32Array()[0],t=r.inputs[2].getFloat32Array()[0]),_e.webgpu.validateInputContent&&K$(e,n,t),r.compute(Y$(e,n,t,r.inputs[0].dataType),{inputs:[]})}});var X$,Z$,J$,Q$,eT,tT,rT,nT,oT,iT,aT,a0,sT,uT,lT,dT,cT,s0,u0,l0=D(()=>{"use strict";Ce();Ve();Ot();Fe();X$=(r,e)=>{if(r.every(n=>n>0||(()=>{throw new Error("Resize requires scales input values to be positive")})),r.length>0){if(e.mode==="linear"){if(!(r.length===2||r.length===3||r.length===4&&r[0]===1&&r[1]===1||r.length===4&&r[0]===1&&r[3]===1||r.length===5&&r[0]===1&&r[1]===1))throw new Error(`For linear mode, Resize requires scales to be 2D, 3D, 4D with either two outermost or one innermost and
            one outermost scale values equal to 1, or 5D with two outermost scale values equal to 1`)}else if(e.mode==="cubic"&&!(r.length===2||r.length===4&&r[0]===1&&r[1]===1||r.length===4&&r[0]===1&&r[3]===1))throw new Error("Resize requires scales input size to be 2 or 4 for cubic mode")}},Z$=(r,e,n)=>{e.every(o=>o>=0&&o<n||(()=>{throw new Error("Resize requires axes input values to be positive and less than rank")}));let t=new Array(n).fill(1);return e.forEach((o,i)=>t[o]=r[i]),t},J$=(r,e,n,t,o,i)=>{let[s,a,u]=n>10?[1,2,3]:[-1,r.length>1?1:-1,-1],l=r[0].dims.length;if(s>0&&r.length>s&&r[s].dims.length>0)r[s].getFloat32Array().forEach(d=>i.push(d));else if(e.coordinateTransformMode==="tf_crop_and_resize")throw new Error("Resize requires RoI input to be specified when coordinateTransformMode is tfCropAndResize");if(a>0&&r.length>a&&r[a].dims.length>0){if(r[a].getFloat32Array().forEach(d=>t.push(d)),t.length!==0&&t.length!==l&&n>=18&&t.length!==e.axes.length)throw new Error("Resize requires scales input size to be same as input rank or axes size for opset 18 and up");X$(t,e),e.axes.length>0&&Z$(t,e.axes,l).forEach((d,p)=>t[p]=d)}if(u>0&&r.length>u&&(r[u].getBigInt64Array().forEach(d=>o.push(Number(d))),o.length!==l||n>=18&&o.length===e.axes.length))throw new Error("Resize requires sizes input size to be same as input rank or axes size for opset 18 and up");if(e.axes.length>0){if(t.length!==e.axes.length)throw new Error('Resize requires "scales" input size to be of axes rank when axes attributes is specified');if(o.length!==e.axes.length)throw new Error('Resize requires "sizes" input size to be of rank axes rank when axes attributes is specified')}if(typeof t<"u"&&typeof o<"u"&&t.length>0&&o.length>l)throw new Error("Resize requires only of scales or sizes to be specified")},Q$=(r,e)=>`fn getOriginalCoordinateFromResizedCoordinate(xResized: u32, xScale: f32, lengthResized: u32,
     lengthOriginal: u32, roiStart: f32, roiEnd: f32) -> ${e} { `+(()=>{switch(r){case"asymmetric":return`return ${e}(xResized) / ${e}(xScale);`;case"pytorch_half_pixel":return`if (lengthResized > 1) {
                    return (${e}(xResized) + 0.5) / ${e}(xScale) - 0.5;
                  } else {
                    return 0.0;
                  }`;case"tf_half_pixel_for_nn":return`return (${e}(xResized) + 0.5) / ${e}(xScale);`;case"align_corners":return`if (lengthResized == 1) {
                    return 0.0;
                  } else {
                    // The whole part and the fractional part are calculated separately due to inaccuracy of floating
                    // point division. As an example, f32(21) / f32(7) may evaluate to 2.99... instead of 3, causing an
                    // offset-by-one error later in floor().
                    let whole = ${e}(xResized * (lengthOriginal - 1) / (lengthResized - 1));
                    let fract =
                        ${e}(xResized * (lengthOriginal - 1) % (lengthResized - 1)) / ${e}(lengthResized - 1);
                    return whole + fract;
                  }`;case"tf_crop_and_resize":return`if (lengthResized > 1) {
                    return ${e}(roiStart) * ${e}(lengthOriginal - 1) +
                        (${e}(xResized) * ${e}(roiEnd - roiStart) * ${e}(lengthOriginal - 1)) /
                        ${e}(lengthResized - 1);
                  } else {
                    return 0.5 * ${e}(roiStart + roiEnd) * ${e}(lengthOriginal - 1);
                  }`;case"half_pixel_symmetric":return`const outputWidth = ${e}xScale * ${e}(lengthResized);
                  const adjustment = ${e}(lengthResized) / outputWidth;
                  const center = ${e}(lengthOriginal) / 2;
                  const offset = center * (1 - adjustment);
                  return offset + ((${e}(xResized) + 0.5) / ${e}(xScale)) - 0.5;`;case"half_pixel":return`return ((${e}(xResized) + 0.5) / ${e}(xScale)) - 0.5;`;default:throw new Error(`Coordinate transform mode ${r} is not supported`)}})()+"}",eT=(r,e,n)=>`fn getNearestPixelFromOriginal(xOriginal: ${n}, isDownSample: bool) -> ${n} {`+(()=>{switch(r){case"round_prefer_ceil":return"if (fract(xOriginal) == 0.5) {             return ceil(xOriginal);           } else {             return round(xOriginal);           }";case"floor":return"return floor(xOriginal);";case"ceil":return"return ceil(xOriginal);";case"round_prefer_floor":return"if (fract(xOriginal) == 0.5) {                     return floor(xOriginal);                   } else {                     return round(xOriginal);                   }";case"simple":default:if(e<11)return"if (isDownSample)                     {                       return ceil(xOriginal);                     } else {                       return xOriginal;                     }";throw new Error(`Nearest mode ${r} is not supported`)}})()+"}",tT=(r,e,n)=>{let t=new Array(n).fill(0).concat(new Array(n).fill(1)),o=r.length===0?t:r.slice();return e.length>0?(e.forEach((i,s)=>{t[i]=o[s],t[s+n]=o[e.length+s]}),t):o},rT=(r,e,n,t)=>{let o=[];if(n.length>0)if(t.length>0){if(r.forEach(i=>o.push(i)),Math.max(...t)>r.length)throw new Error("axes is out of bound");t.forEach((i,s)=>o[i]=n[s])}else n.forEach(i=>o.push(i));else{if(e.length===0)throw new Error("Resize requires either scales or sizes.");o=r.map((i,s)=>Math.round(i*e[s]))}return o},nT=(r,e,n)=>{let t=(()=>{switch(n.keepAspectRatioPolicy){case"not_larger":return n.axes.length>0?Math.min(...n.axes.map(i=>e[i]),Number.MAX_VALUE):Math.min(...e,Number.MAX_VALUE);case"not_smaller":return n.axes.length>0?Math.max(...n.axes.map(i=>e[i]),Number.MIN_VALUE):Math.max(...e,Number.MIN_VALUE);default:throw new Error(`Keep aspect ratio policy ${n.keepAspectRatioPolicy} is not supported`)}})();e.fill(1,0,e.length);let o=r.slice();return n.axes.length>0?(n.axes.forEach(i=>e[i]=t),n.axes.forEach(i=>o[i]=Math.round(r[i]*e[i]))):(e.fill(t,0,e.length),o.forEach((i,s)=>o[s]=Math.round(i*e[s]))),o},oT=(r,e,n,t,o)=>`
    fn calculateOriginalIndicesFromOutputIndices(output_indices: ${r.type.indices}) -> array<${r.type.value}, ${n.length}> {
      var original_indices: array<${r.type.value}, ${n.length}>;
      for (var i:u32 = 0; i < ${n.length}; i++) {
        var output_index = ${r.indicesGet("output_indices","i")};
        var scale = ${Se("uniforms.scales","i",t)};
        var roi_low = ${Se("uniforms.roi","i",o)};
        var roi_hi = ${Se("uniforms.roi",`i + ${e.length}`,o)};
        if (scale == 1.0) {
          original_indices[i] = ${r.type.value}(output_index);
        } else {
          var input_shape_i = ${Se("uniforms.input_shape","i",e.length)};
          var output_shape_i = ${Se("uniforms.output_shape","i",n.length)};
          original_indices[i] = getOriginalCoordinateFromResizedCoordinate(output_index, scale, output_shape_i,
                                                                           input_shape_i, roi_low, roi_hi);
        }
      }
      return original_indices;
    }`,iT=(r,e,n,t,o,i,s)=>`
    fn calculateInputIndicesFromOutputIndices(output_indices: ${e.type.indices}) -> ${r.type.indices} {
      var input_indices: ${r.type.indices};
      for (var i:u32 = 0; i < ${t.length}; i++) {
        var output_index = ${e.indicesGet("output_indices","i")};
        var input_index: u32;
        var scale = ${Se("uniforms.scales","i",o)};
        if (scale == 1.0) {
          input_index = output_index;
        } else {
          var roi_low = ${Se("uniforms.roi","i",i)};
          var roi_hi = ${Se("uniforms.roi",`i + ${n.length}`,i)};
          var input_shape_i = ${Se("uniforms.input_shape","i",n.length)};
          var output_shape_i = ${Se("uniforms.output_shape","i",t.length)};
          var original_idx = getOriginalCoordinateFromResizedCoordinate(output_index, scale, output_shape_i,
                                                                        input_shape_i, roi_low, roi_hi);
          if (!${s} || (original_idx >= 0 && original_idx < ${e.type.value}(input_shape_i))) {
            if (original_idx < 0) {
              input_index = 0;
            } else if (original_idx > ${e.type.value}(input_shape_i - 1)) {
              input_index = input_shape_i - 1;
            } else {
              input_index = u32(getNearestPixelFromOriginal(original_idx, scale < 1));
            }
          } else {
            input_index = u32(original_idx);
          }
        }
        ${r.indicesSet("input_indices","i"," input_index")}
      }
      return input_indices;
    }`,aT=(r,e)=>`
    fn checkInputIndices(input_indices: ${r.type.indices}) -> bool {
      for (var i:u32 = 0; i < ${e.length}; i++) {
        var input_index = ${r.indicesGet("input_indices","i")};
        if (input_index < 0 || input_index >= ${Se("uniforms.input_shape","i",e.length)}) {
          return false;
        }
      }
      return true;
    }`,a0=(r,e,n,t)=>r.rank>t?`
    ${r.indicesSet("input_indices",e,"channel")};
    ${r.indicesSet("input_indices",n,"batch")};
`:"",sT=(r,e,n,t,o)=>{let[s,a,u,l]=n.length===2?[-1,0,1,-1]:[0,2,3,1],d=r.type.value;return`
    fn getInputValue(batch: u32, channel: u32, row: u32, col: u32) -> ${d} {
      var input_indices: ${r.type.indices};
      ${r.indicesSet("input_indices",a,`max(0, min(row, ${n[a]} - 1))`)};
      ${r.indicesSet("input_indices",u,`max(0, min(col, ${n[u]} - 1))`)};
      ${a0(r,l,s,2)}
      return ${r.getByIndices("input_indices")};
    }

    fn bilinearInterpolation(output_indices: ${e.type.indices}) -> ${d} {
      var originalIndices = calculateOriginalIndicesFromOutputIndices(output_indices);
      var row:${d} = originalIndices[${a}];
      var col:${d} = originalIndices[${u}];
      ${t?`if (row < 0 || row > (${n[a]} - 1) || col < 0 || col > (${n[u]} - 1)) {
        return ${o};
      }`:""};
      row = max(0, min(row, ${n[a]} - 1));
      col = max(0, min(col, ${n[u]} - 1));
      var row1: u32 = u32(row);
      var col1: u32 = u32(col);
      var row2: u32 = u32(row + 1);
      var col2: u32 = u32(col + 1);
      var channel: u32 = ${n.length>2?`u32(originalIndices[${l}])`:"0"};
      var batch: u32 =  ${n.length>2?`u32(originalIndices[${s}])`:"0"};
      var x11: ${d} = getInputValue(batch, channel, row1, col1);
      var x12: ${d} = getInputValue(batch, channel, row1, col2);
      var x21: ${d} = getInputValue(batch, channel, row2, col1);
      var x22: ${d} = getInputValue(batch, channel, row2, col2);
      var dx1: ${d} = abs(row - ${d}(row1));
      var dx2: ${d} = abs(${d}(row2) - row);
      var dy1: ${d} = abs(col - ${d}(col1));
      var dy2: ${d} = abs(${d}(col2) - col);
      if (row1 == row2) {
        dx1 = 0.5;
        dx2 = 0.5;
      }
      if (col1 == col2) {
        dy1 = 0.5;
        dy2 = 0.5;
      }
      return (x11 * dx2 * dy2 + x12 * dx2 * dy1 + x21 * dx1 * dy2 + x22 * dx1 * dy1);
    }`},uT=(r,e,n,t,o,i,s,a,u,l)=>{let d=n.length===2,p=!0,[h,y]=d?[0,1]:p?[2,3]:[1,2],b=r.type.value,w=T=>{let x=T===h?"row":"col";return`
      fn ${x}CubicInterpolation(input_indices: ${r.type.indices}, output_indices: ${e.type.indices}) -> ${b} {
        var output_index = ${e.indicesGet("output_indices",T)};
        var originalIdx: ${b} = getOriginalCoordinateFromResizedCoordinate(output_index, ${o[T]},
        ${t[T]}, ${n[T]}, ${i[T]}, ${i[T]} + ${n.length});
        var fractOriginalIdx: ${b} = originalIdx - floor(originalIdx);
        var coefs = getCubicInterpolationCoefs(fractOriginalIdx);

        if (${a} && (originalIdx < 0 || originalIdx > (${n[T]} - 1))) {
          return ${u};
        }
        var data: array<${b}, 4> = array<${b}, 4>(0.0, 0.0, 0.0, 0.0);
        for (var i: i32 = -1; i < 3; i++) {
          var ${x}: ${b} = originalIdx + ${b}(i);
          if (${x} < 0 || ${x} >= ${n[T]}) {
            ${(()=>l?`coefs[i + 1] = 0.0;
                        continue;`:a?`return ${u};`:`${x} = max(0, min(${x}, ${n[T]} - 1));`)()};
          }
        var input_indices_copy: ${r.type.indices} = input_indices;
          ${r.indicesSet("input_indices_copy",T,`u32(${x})`)};
          data[i + 1] = ${T===h?r.getByIndices("input_indices_copy"):"rowCubicInterpolation(input_indices_copy, output_indices)"};
        }
        return cubicInterpolation1D(data, coefs);
      }`};return`
    ${w(h)};
    ${w(y)};
  fn getCubicInterpolationCoefs(s: ${b}) -> array<${b}, 4> {
    var absS = abs(s);
    var coeffs: array<${b}, 4> = array<${b}, 4>(0.0, 0.0, 0.0, 0.0);
    var oneMinusAbsS: ${b} = 1.0 - absS;
    var twoMinusAbsS: ${b} = 2.0 - absS;
    var onePlusAbsS: ${b} = 1.0 + absS;
    coeffs[0] = ((${s} * onePlusAbsS - 5 * ${s}) * onePlusAbsS + 8 * ${s}) * onePlusAbsS - 4 * ${s};
    coeffs[1] = ((${s} + 2) * absS - (${s} + 3)) * absS * absS + 1;
    coeffs[2] = ((${s} + 2) * oneMinusAbsS - (${s} + 3)) * oneMinusAbsS * oneMinusAbsS + 1;
    coeffs[3] = ((${s} * twoMinusAbsS - 5 * ${s}) * twoMinusAbsS + 8 * ${s}) * twoMinusAbsS - 4 * ${s};
    return coeffs;
  }

  fn cubicInterpolation1D(x: array<${b}, 4>, coefs: array<${b}, 4>) -> ${b} {
    var coefsSum: ${b} = coefs[0] + coefs[1] + coefs[2] + coefs[3];
    return (x[0] * coefs[0] + x[1] * coefs[1]+ x[2] * coefs[2]+ x[3] * coefs[3]) / coefsSum;
  }

  fn bicubicInterpolation(output_indices: ${e.type.indices}) -> ${b} {
    var input_indices: ${r.type.indices} = output_indices;
    return colCubicInterpolation(input_indices, output_indices);
  }
    `},lT=(r,e,n,t,o)=>{let[s,a,u,l,d]=n.length===3?[-1,0,1,2,-1]:[0,2,3,4,1],p=r.type.value;return`
    fn getInputValue(batch: u32, channel: u32, depth:u32, height: u32, width: u32) -> ${p} {
      var input_indices: ${r.type.indices};
      ${r.indicesSet("input_indices",a,`max(0, min(depth, ${n[a]} - 1))`)};
      ${r.indicesSet("input_indices",u,`max(0, min(height, ${n[u]} - 1))`)};
      ${r.indicesSet("input_indices",l,`max(0, min(width, ${n[l]} - 1))`)};
      ${a0(r,d,s,3)}
      return ${r.getByIndices("input_indices")};
    }

    fn trilinearInterpolation(output_indices: ${e.type.indices}) -> ${p} {
      var originalIndices = calculateOriginalIndicesFromOutputIndices(output_indices);
      var depth:${p} = originalIndices[${a}];
      var height:${p} = originalIndices[${u}];
      var width:${p} = originalIndices[${l}];
      ${t?`if (depth < 0 || depth > (${n[a]} - 1) || height < 0 || height > (${n[u]} - 1) || width < 0 || (width > ${n[l]} - 1)) {
      return ${o};
        }`:""};

    depth = max(0, min(depth, ${n[a]} - 1));
      height = max(0, min(height, ${n[u]} - 1));
      width = max(0, min(width, ${n[l]} - 1));
      var depth1: u32 = u32(depth);
      var height1: u32 = u32(height);
      var width1: u32 = u32(width);
      var depth2: u32 = u32(depth + 1);
      var height2: u32 = u32(height + 1);
      var width2: u32 = u32(width + 1);
      var channel: u32 = ${n.length>3?`u32(originalIndices[${d}])`:"0"};
      var batch: u32 =  ${n.length>3?`u32(originalIndices[${s}])`:"0"};

      var x111: ${p} = getInputValue(batch, channel, depth1, height1, width1);
      var x112: ${p} = getInputValue(batch, channel, depth1, height1, width2);
      var x121: ${p} = getInputValue(batch, channel, depth1, height2, width1);
      var x122: ${p} = getInputValue(batch, channel, depth1, height2, width2);
      var x211: ${p} = getInputValue(batch, channel, depth2, height1, width1);
      var x212: ${p} = getInputValue(batch, channel, depth2, height1, width2);
      var x221: ${p} = getInputValue(batch, channel, depth2, height2, width1);
      var x222: ${p} = getInputValue(batch, channel, depth2, height2, width2);
      var dx1: ${p} = abs(depth - ${p}(depth1));
      var dx2: ${p} = abs(${p}(depth2) - depth);
      var dy1: ${p} = abs(height - ${p}(height1));
      var dy2: ${p} = abs(${p}(height2) - height);
      var dz1: ${p} = abs(width - ${p}(width1));
      var dz2: ${p} = abs(${p}(width2) - width);
      if (depth1 == depth2) {
        dx1 = 0.5;
        dx2 = 0.5;
      }
      if (height1 == height2) {
        dy1 = 0.5;
        dy2 = 0.5;
      }
      if (width1 == width2) {
        dz1 = 0.5;
        dz2 = 0.5;
      }
      return (x111 * dx2 * dy2 * dz2 + x112 * dx2 * dy2 * dz1 + x121 * dx2 * dy1 *dz2 + x122 * dx2 * dy1 * dz1 +
              x211 * dx1 * dy2 * dz2 + x212 * dx1 * dy2 * dz1 + x221 * dx1 * dy1 *dz2 + x222 * dx1 * dy1 * dz1);
    }`},dT=(r,e,n,t,o,i)=>{let s=r.dims,a=tT(i,e.axes,s.length),u=rT(s,t,o,e.axes),l=t.slice();t.length===0&&(l=s.map((_,A)=>_===0?1:u[A]/_),e.keepAspectRatioPolicy!=="stretch"&&(u=nT(s,l,e)));let d=ee("output",r.dataType,u.length),p=F("input",r.dataType,s.length),h=U.size(u),y=s.length===u.length&&s.every((_,A)=>_===u[A]),b=e.coordinateTransformMode==="tf_crop_and_resize",w=e.extrapolationValue,T=p.type.value,x=_=>`
      ${y?"":`
      ${Q$(e.coordinateTransformMode,T)};
      ${(()=>{switch(e.mode){case"nearest":return`
              ${aT(p,s)};
              ${eT(e.nearestMode,n,T)};
              ${iT(p,d,s,u,l.length,a.length,b)};
              `;case"linear":return`
              ${oT(d,s,u,l.length,a.length)};
              ${(()=>{if(s.length===2||s.length===4)return`${sT(p,d,s,b,w)}`;if(s.length===3||s.length===5)return`${lT(p,d,s,b,w)}`;throw Error("Linear mode only supports input dims 2, 3, 4 and 5 are supported in linear mode.")})()};
            `;case"cubic":return`
            ${(()=>{if(s.length===2||s.length===4)return`${uT(p,d,s,u,l,a,e.cubicCoeffA,b,e.extrapolationValue,e.excludeOutside)}`;throw Error("Cubic mode only supports input dims 2 and 4 are supported in linear mode.")})()};
            `;default:throw Error("Invalid resize mode")}})()};
      `}
      ${_.registerUniform("output_size","u32").registerUniform("scales","f32",l.length).registerUniform("roi","f32",a.length).declareVariables(p,d)}
      ${_.mainStart()}
        ${_.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
        ${y?"output[global_idx] = input[global_idx];":`
        let output_indices = ${d.offsetToIndices("global_idx")};
        var input_indices: ${p.type.indices};
        ${(()=>{switch(e.mode){case"nearest":return`input_indices = calculateInputIndicesFromOutputIndices(output_indices);
                if (checkInputIndices(input_indices)) {
                  output[global_idx] = ${p.getByIndices("input_indices")};
                } else {
                  output[global_idx] = ${e.extrapolationValue};
                }`;case"linear":return`output[global_idx] = ${s.length===2||s.length===4?"bilinearInterpolation":"trilinearInterpolation"}(output_indices);`;case"cubic":return"output[global_idx] = bicubicInterpolation(output_indices);";default:throw Error(`Unsupported resize mode: ${e.mode}`)}})()};
`}
      }`;return{name:"Resize",shaderCache:{hint:`${e.cacheKey}|${n}|${l.length>0?l:""}|${o.length>0?o:""}|${a.length>0?a:""}|${y}|${s}`,inputDependencies:["rank"]},getShaderSource:x,getRunData:()=>({outputs:[{dims:u,dataType:r.dataType}],dispatchGroup:{x:Math.ceil(h/64)},programUniforms:[{type:12,data:h},{type:1,data:l},{type:1,data:a},...oe(s,u)]})}},cT=r=>{let e=r.customDataBuffer;return new Uint32Array(e,e.byteOffset,1)[0]},s0=(r,e)=>{let n=[],t=[],o=[],i=cT(r);if(e.antialias!==0)throw Error("Only default value (0) for Antialias attribute is supported");J$(r.inputs,e,i,n,t,o),r.compute(dT(r.inputs[0],e,i,n,t,o),{inputs:[0]})},u0=r=>{let e=r.antialias,n=r.axes,t=r.coordinateTransformMode,o=r.cubicCoeffA,i=r.excludeOutside!==0,s=r.extrapolationValue,a=r.keepAspectRatioPolicy,u=r.mode,l=r.nearestMode===""?"simple":r.nearestMode;return Le({antialias:e,axes:n,coordinateTransformMode:t,cubicCoeffA:o,excludeOutside:i,extrapolationValue:s,keepAspectRatioPolicy:a,mode:u,nearestMode:l})}});var fT,pT,d0,c0=D(()=>{"use strict";Ce();Ve();Ot();Fe();fT=(r,e)=>{let[n,t,o,i]=r,{numHeads:s,rotaryEmbeddingDim:a}=e;if(n.dims.length!==3&&n.dims.length!==4)throw new Error(`Input 'x' is expected to have 3 or 4 dimensions, got ${n.dims.length}`);if(!U.areEqual(t.dims,[])&&!U.areEqual(t.dims,[1])&&t.dims.length!==2)throw new Error(`Input 'position_ids' is expected to have 0, 1, or 2 dimensions, got ${t.dims.length}`);if(o.dims.length!==2)throw new Error(`Input 'cos_cache' is expected to have 2 dimensions, got ${o.dims.length}`);if(i.dims.length!==2)throw new Error(`Input 'sin_cache' is expected to have 2 dimensions, got ${i.dims.length}`);if(!U.areEqual(o.dims,i.dims))throw new Error("Inputs 'cos_cache' and 'sin_cache' are expected to have the same shape");if(a>0&&s===0)throw new Error("num_heads must be provided if rotary_embedding_dim is specified");let u=n.dims[0],l=n.dims[n.dims.length-2],d=o.dims[0],p=U.sizeFromDimension(n.dims,1)/l,h=a===0?o.dims[1]*2:p/s;if(a>h)throw new Error("rotary_embedding_dim must be less than or equal to head_size");if(t.dims.length===2){if(u!==t.dims[0])throw new Error(`Input 'position_ids' dimension 0 should be of size batch_size, got ${t.dims[0]}`);if(l!==t.dims[1])throw new Error(`Input 'position_ids' dimension 1 should be of size sequence_length, got ${t.dims[1]}`)}if(h/2!==o.dims[1]&&a/2!==o.dims[1])throw new Error(`Input 'cos_cache' dimension 1 should be same as head_size / 2 or rotary_embedding_dim / 2, got ${o.dims[1]}`);if(l>d)throw new Error("Updating cos_cache and sin_cache in RotaryEmbedding is not currently supported")},pT=(r,e)=>{let{interleaved:n,numHeads:t,rotaryEmbeddingDim:o,scale:i}=e,s=r[0].dims[0],a=U.sizeFromDimension(r[0].dims,1),u=r[0].dims[r[0].dims.length-2],l=a/u,d=r[2].dims[1],p=o===0?d*2:l/t,h=new Array(s,u,l/p,p-d),y=U.computeStrides(h),b=[{type:1,data:i},{type:12,data:h},{type:12,data:y},...r[0].dims.length===3?new Array({type:12,data:[a,l,p,1]}):[],...r[0].dims.length===4?new Array({type:12,data:[a,p,u*p,1]}):[],...oe(r[0].dims,r[1].dims,r[2].dims,r[3].dims,r[0].dims)],w=T=>{let x=F("input",r[0].dataType,r[0].dims.length),_=F("position_ids",r[1].dataType,r[1].dims.length),A=F("cos_cache",r[2].dataType,r[2].dims.length),P=F("sin_cache",r[3].dataType,r[3].dims.length),k=ee("output",r[0].dataType,r[0].dims.length);return T.registerUniforms([{name:"scale",type:"f32"},{name:"global_shape",type:"u32",length:h.length},{name:"global_strides",type:"u32",length:y.length},{name:"input_output_strides",type:"u32",length:y.length}]),`
        ${T.declareVariables(x,_,A,P,k)}

        ${T.mainStart(Bn)}
          let half_rotary_emb_dim = uniforms.${A.name}_shape[1];
          let bsnh = global_idx / uniforms.global_strides % uniforms.global_shape;
          let size = uniforms.global_shape[0] * uniforms.global_strides[0];
          ${T.guardAgainstOutOfBoundsWorkgroupSizes("size")}

          if (bsnh[3] < half_rotary_emb_dim) {
            let position_ids_idx =
                ${_.broadcastedIndicesToOffset("bsnh.xy",ee("",_.type.tensor,2))};
            let position_id =
                u32(${_.getByOffset("position_ids_idx")}) + select(0, bsnh[1], position_ids_idx == 0);
            let i = dot(bsnh, uniforms.input_output_strides) + select(0, bsnh[3], ${n});
            let j = i + select(half_rotary_emb_dim, 1, ${n});
            let re = ${x.getByOffset("i")} * ${A.get("position_id","bsnh[3]")} -
                ${x.getByOffset("j")} * ${P.get("position_id","bsnh[3]")};
            ${k.setByOffset("i","re")}
            let im = ${x.getByOffset("i")} * ${P.get("position_id","bsnh[3]")} +
                ${x.getByOffset("j")} * ${A.get("position_id","bsnh[3]")};
            ${k.setByOffset("j","im")}
          } else {
            let k = dot(bsnh, uniforms.input_output_strides) + half_rotary_emb_dim;
            ${k.setByOffset("k",x.getByOffset("k"))}
          }
        }`};return{name:"RotaryEmbedding",shaderCache:{hint:Le({interleaved:n}).cacheKey,inputDependencies:["rank","rank","rank","rank"]},getShaderSource:w,getRunData:()=>({outputs:[{dims:r[0].dims,dataType:r[0].dataType}],dispatchGroup:{x:Math.ceil(U.size(h)/Bn)},programUniforms:b})}},d0=(r,e)=>{fT(r.inputs,e),r.compute(pT(r.inputs,e))}});var mT,hT,f0,p0=D(()=>{"use strict";Ce();Ve();Fe();mT=r=>{if(!r||r.length<3)throw new Error("layerNorm requires at least 3 inputs.");let e=r[0],n=r[1],t=r[2];if(e.dataType!==n.dataType||e.dataType!==t.dataType)throw new Error("All inputs must have the same data type");if(e.dims.length!==3&&e.dims.length!==2)throw new Error("Input must be 2D or 3D");if(n.dims.length!==3&&n.dims.length!==2)throw new Error("Skip must be 2D or 3D");let o=e.dims[e.dims.length-1],i=e.dims[e.dims.length-2];if(n.dims[n.dims.length-1]!==o)throw new Error("Skip must have the same hidden size as input");if(n.dims[n.dims.length-2]!==i)throw new Error("Skip must have the same sequence length as input");if(t.dims.length!==1)throw new Error("Gamma must be 1D");if(t.dims[t.dims.length-1]!==o)throw new Error("Gamma must have the same hidden size as input");if(r.length>3){let s=r[3];if(s.dims.length!==1)throw new Error("Beta must be 1D");if(s.dims[s.dims.length-1]!==o)throw new Error("Beta must have the same hidden size as input")}if(r.length>4){let s=r[4];if(s.dims.length!==1)throw new Error("Bias must be 1D");if(s.dims[s.dims.length-1]!==o)throw new Error("Bias must have the same hidden size as input")}},hT=(r,e,n,t)=>{let o=r[0].dims,i=U.size(o),s=o,a=i,u=o.slice(-1)[0],l=t?o.slice(0,-1).concat(1):[],d=r.length>3,p=r.length>4,h=t&&n>1,y=t&&n>2,b=n>3,w=it(u),T=[{type:12,data:a},{type:12,data:w},{type:12,data:u},{type:1,data:e.epsilon}],x=A=>{let P=[{name:"output_size",type:"u32"},{name:"components",type:"u32"},{name:"hidden_size",type:"u32"},{name:"epsilon",type:"f32"}],k=[F("x",r[0].dataType,r[0].dims,w),F("skip",r[1].dataType,r[1].dims,w),F("gamma",r[2].dataType,r[2].dims,w)];d&&k.push(F("beta",r[3].dataType,r[3].dims,w)),p&&k.push(F("bias",r[4].dataType,r[4].dims,w)),k.push(ee("output",r[0].dataType,s,w)),h&&k.push(ee("mean_output",1,l)),y&&k.push(ee("inv_std_output",1,l)),b&&k.push(ee("input_skip_bias_sum",r[0].dataType,s,w));let N=tt(r[0].dataType);return`

      ${A.registerUniforms(P).declareVariables(...k)}

      ${A.mainStart()}
        ${A.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size / uniforms.hidden_size")}
        let hidden_size_vectorized: u32 = uniforms.hidden_size / uniforms.components;
        let offset = global_idx * hidden_size_vectorized;
        var sum = ${Mt("f32",w)};
        var squareSum = ${Mt("f32",w)};
        for (var i: u32 = 0; i < hidden_size_vectorized; i++) {
          let skip_value = skip[offset + i];
          let bias_value = ${p?"bias[i]":"0.0"};
          let input_value = x[offset + i];
          let value = input_value + skip_value + bias_value;
          ${b?"input_skip_bias_sum[offset + i] = value;":""}
          output[offset + i] = value;
          let f32_value = ${br(N,w,"value")};
          sum += f32_value;
          squareSum += f32_value * f32_value;
        }
        let mean = ${Zt("sum",w)} / f32(uniforms.hidden_size);
        let inv_std_dev = inverseSqrt(${Zt("squareSum",w)} / f32(uniforms.hidden_size) - mean * mean + uniforms.epsilon);
        ${h?"mean_output[global_idx] = mean;":""}
        ${y?"inv_std_output[global_idx] = inv_std_dev;":""}
        for (var i: u32 = 0; i < hidden_size_vectorized; i++) {
          output[offset + i] = (output[offset + i] - ${N}(mean)) * ${N}(inv_std_dev) * gamma[i] + ${d?"beta[i]":"0.0"};
        }
      }`},_=[{dims:s,dataType:r[0].dataType}];return n>1&&_.push({dims:l,dataType:1}),n>2&&_.push({dims:l,dataType:1}),n>3&&_.push({dims:o,dataType:r[0].dataType}),{name:"SkipLayerNormalization",shaderCache:{hint:`${w};${h};${y};${b}`,inputDependencies:r.map((A,P)=>"type")},getShaderSource:x,getRunData:()=>({outputs:_,dispatchGroup:{x:Math.ceil(a/u/64)},programUniforms:T})}},f0=(r,e)=>{mT(r.inputs);let t=[0];r.outputCount>1&&t.push(-3),r.outputCount>2&&t.push(-3),r.outputCount>3&&t.push(3),r.compute(hT(r.inputs,e,r.outputCount,!1),{outputs:t})}});var gT,ws,yT,m0,bT,vT,h0,g0,y0=D(()=>{"use strict";Ce();Ve();Ot();Fe();gT=(r,e)=>{if(!r||r.length<1)throw new Error("too few inputs");if(e.axes.length!==0){if(e.axes.length!==e.starts.length||e.axes.length!==e.ends.length)throw new Error("axes, starts and ends must have the same length")}else if(e.starts.length!==e.ends.length)throw new Error("starts and ends must have the same length");r.slice(1).forEach((n,t)=>{if(r[t+1].dataType!==6&&r[t+1].dataType!==7)throw new Error(`Input ${t} must be an array of int32 or int64`)})},ws=(r,e)=>{let n=[];if(r.length>e)if(r[e].dataType===7)r[e].getBigInt64Array().forEach(t=>n.push(Number(t)));else if(r[e].dataType===6)r[e].getInt32Array().forEach(t=>n.push(Number(t)));else throw new Error(`Input ${e} must be an array of int32 or int64`);return n},yT=(r,e)=>{if(r.length>1){let n=ws(r,1),t=ws(r,2),o=ws(r,3);return o.length===0&&(o=[...Array(r[0].dims.length).keys()]),Le({starts:n,ends:t,axes:o})}else return e},m0=(r,e,n,t,o)=>{let i=r;return r<0&&(i+=n[t[e]]),o[e]<0?Math.max(0,Math.min(i,n[t[e]]-1)):Math.max(0,Math.min(i,n[t[e]]))},bT=(r,e,n)=>`fn calculateInputIndices(output_indices: ${e.type.indices}) -> ${r.type.indices} {
          var input_indices: ${r.type.indices};
          var carry = 0u;
          for (var i = ${n.length}; i >= 0; i--) {
            let input_shape_i = ${Se("uniforms.input_shape","i",n.length)};
            let steps_i = ${Se("uniforms.steps","i",n.length)};
            let signs_i = ${Se("uniforms.signs","i",n.length)};
            let starts_i = ${Se("uniforms.starts","i",n.length)};
            var output_index = ${e.indicesGet("output_indices","i")};
            var input_index = output_index * steps_i + starts_i + carry;
            carry = input_index / input_shape_i;
            input_index = input_index % input_shape_i;
            if (signs_i < 0) {
              input_index = input_shape_i - input_index - 1u + starts_i;
            }
            ${r.indicesSet("input_indices","i","input_index")};
          }
          return input_indices;
      }`,vT=(r,e)=>{let n=r[0].dims,t=U.size(n),o=e.axes.length>0?U.normalizeAxes(e.axes,n.length):[...Array(n.length).keys()],i=ws(r,4);i.forEach(x=>x!==0||(()=>{throw new Error("step cannot be 0")})),i.length===0&&(i=Array(o.length).fill(1));let s=e.starts.map((x,_)=>m0(x,_,n,o,i)),a=e.ends.map((x,_)=>m0(x,_,n,o,i));if(o.length!==s.length||o.length!==a.length)throw new Error("start, ends and axes should have the same number of elements");if(o.length!==n.length)for(let x=0;x<n.length;++x)o.includes(x)||(s.splice(x,0,0),a.splice(x,0,n[x]),i.splice(x,0,1));let u=i.map(x=>Math.sign(x));i.forEach((x,_,A)=>{if(x<0){let P=(a[_]-s[_])/x,k=s[_],N=k+P*i[_];s[_]=N,a[_]=k,A[_]=-x}});let l=n.slice(0);o.forEach((x,_)=>{l[x]=Math.ceil((a[x]-s[x])/i[x])});let d={dims:l,dataType:r[0].dataType},p=ee("output",r[0].dataType,l.length),h=F("input",r[0].dataType,r[0].dims.length),y=U.size(l),b=[{name:"outputSize",type:"u32"},{name:"starts",type:"u32",length:s.length},{name:"signs",type:"i32",length:u.length},{name:"steps",type:"u32",length:i.length}],w=[{type:12,data:y},{type:12,data:s},{type:6,data:u},{type:12,data:i},...oe(r[0].dims,l)],T=x=>`
      ${x.registerUniforms(b).declareVariables(h,p)}
        ${bT(h,p,n)}
        ${x.mainStart()}
          ${x.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
          let output_indices = ${p.offsetToIndices("global_idx")};
          let input_indices = calculateInputIndices(output_indices);
          ${p.setByOffset("global_idx",h.getByIndices("input_indices"))}
      }`;return{name:"Slice",shaderCache:{hint:`${u.length}_${s.length}_${i.length}`,inputDependencies:["rank"]},getShaderSource:T,getRunData:()=>({outputs:[d],dispatchGroup:{x:Math.ceil(t/64)},programUniforms:w})}},h0=(r,e)=>{gT(r.inputs,e);let n=yT(r.inputs,e);r.compute(vT(r.inputs,n),{inputs:[0]})},g0=r=>{let e=r.starts,n=r.ends,t=r.axes;return Le({starts:e,ends:n,axes:t})}});var wT,_T,b0,v0,w0=D(()=>{"use strict";Ce();Ve();Ot();Fe();wT=r=>{if(!r||r.length!==1)throw new Error("Softmax op requires 1 input.")},_T=(r,e)=>{let n=r.dims,t=U.size(n),o=64,i=e.axis;if(i<0&&(i=n.length+i),i<n.length-1)throw new Error("softmax only supports last axis for now.");let s=n[i],a=t/s,u=it(s),l=s/u,d=(T,x)=>x===4?`max(max(${T}.x, ${T}.y), max(${T}.z, ${T}.w))`:x===2?`max(${T}.x, ${T}.y)`:x===3?`max(max(${T}.x, ${T}.y), ${T}.z)`:T,p=F("x",r.dataType,r.dims,u),h=ee("result",r.dataType,r.dims,u),y=p.type.value,b=tt(r.dataType)==="f32"?`var threadMax = ${y}(-3.402823e+38f);`:`var threadMax = ${y}(-65504.0h);`,w=T=>`
      var<workgroup> rowMaxShared : ${y};
      var<workgroup> rowSumShared : ${y};
      var<workgroup> threadShared : array<${y}, ${o}>;

      fn getValue(row: i32, col: i32, row_stride: i32) -> ${y} {
        let index = row * row_stride + col;
        return x[index];
      }

      fn setValue(row: i32, col: i32, row_stride: i32, value: ${y}) {
        let index = row * row_stride + col;
        result[index] = value;
      }
      ${T.registerUniform("packedCols","i32").declareVariables(p,h)}
      ${T.mainStart()}
        let gindex = i32(global_idx);
        let lindex = i32(local_idx);
        const wg = ${o};
        let row = gindex / wg;
        let cols = uniforms.packedCols;
        let row_stride : i32 = uniforms.packedCols;

        // find the rows max
        ${b}
        for (var col = lindex; col < cols; col += wg) {
          let value = getValue(row, col, row_stride);
          threadMax = max(threadMax, value);
        }
        if (lindex < cols) {
          threadShared[lindex] = threadMax;
        }
        workgroupBarrier();

        var reduceSize = min(cols, wg);
        for (var currSize = reduceSize >> 1;  currSize > 0; currSize = reduceSize >> 1) {
          reduceSize = currSize + (reduceSize & 1);
          if (lindex < currSize) {
            threadShared[lindex] = max(threadShared[lindex], threadShared[lindex + reduceSize]);
          }
          workgroupBarrier();
        }
        if (lindex == 0) {
          rowMaxShared = ${y}(${d("threadShared[0]",u)});
        }
        workgroupBarrier();

        // find the rows sum
        var threadSum = ${y}(0.0);
        for (var col = lindex; col < cols; col += wg) {
          let subExp = exp(getValue(row, col, row_stride) - rowMaxShared);
          threadSum += subExp;
        }
        threadShared[lindex] = threadSum;
        workgroupBarrier();

        for (var currSize = wg >> 1;  currSize > 0; currSize = currSize >> 1) {
          if (lindex < currSize) {
            threadShared[lindex] = threadShared[lindex] + threadShared[lindex + currSize];
          }
          workgroupBarrier();
        }
        if (lindex == 0) {
          rowSumShared = ${y}(${Zt("threadShared[0]",u)});
        }
        workgroupBarrier();

        // calculate final value for each element in the row
        for (var col = lindex; col < cols; col += wg) {
          let value = exp(getValue(row, col, row_stride) - rowMaxShared) / rowSumShared;
          setValue(row, col, row_stride, value);
        }
      }`;return{name:"Softmax",shaderCache:{hint:`${u}`,inputDependencies:["type"]},getRunData:()=>({outputs:[{dims:n,dataType:r.dataType}],dispatchGroup:{x:a},programUniforms:[{type:6,data:l}]}),getShaderSource:w}},b0=(r,e)=>{wT(r.inputs),r.compute(_T(r.inputs[0],e))},v0=r=>Le({axis:r.axis})});var xT,$T,TT,ST,IT,_0,x0,$0=D(()=>{"use strict";Ce();Ve();Ot();Fe();xT=r=>{if(!r||r.length<1)throw new Error("too few inputs")},$T=(r,e)=>{let n=[],t=e.numOutputs;return r[1].dims[0]>0&&(r[1].getBigInt64Array().forEach(o=>n.push(Number(o))),t=n.length),Le({numOutputs:t,axis:e.axis,splitSizes:n})},TT=r=>`
fn calculateOutputIndex(index: u32) -> u32 {
    for (var i: u32 = 0u; i < ${r}u; i += 1u ) {
    if (index < ${Se("uniforms.size_in_split_axis","i",r)}) {
        return i;
    }
    }
    return ${r}u;
}`,ST=r=>{let e=r.length,n=[];for(let t=0;t<e;++t){let o=r[t].setByIndices("indices","input[global_idx]");e===1?n.push(o):t===0?n.push(`if (output_number == ${t}u) { ${o} }`):t===e-1?n.push(`else { ${o} }`):n.push(`else if (output_number == ${t}) { ${o} }`)}return`
      fn writeBufferData(output_number: u32, indices: ${r[0].type.indices}, global_idx: u32) {
        ${n.join(`
`)}
      }`},IT=(r,e)=>{let n=r[0].dims,t=U.size(n),o=r[0].dataType,i=U.normalizeAxis(e.axis,n.length),s=new Array(e.numOutputs),a=F("input",o,n.length),u=new Array(e.numOutputs),l=[],d=[],p=0,h=[{type:12,data:t}];for(let b=0;b<e.numOutputs;b++){p+=e.splitSizes[b],u[b]=p;let w=n.slice();w[e.axis]=e.splitSizes[b],d.push(w),s[b]=ee(`output${b}`,o,w.length),l.push({dims:d[b],dataType:r[0].dataType})}h.push({type:12,data:u},...oe(n,...d));let y=b=>`
  ${b.registerUniform("input_size","u32").registerUniform("size_in_split_axis","u32",u.length).declareVariables(a,...s)}
  ${TT(u.length)}
  ${ST(s)}

  ${b.mainStart()}
    ${b.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.input_size")}

    var indices = ${a.offsetToIndices("global_idx")};
    var index = ${a.indicesGet("indices",i)};
    let output_number = calculateOutputIndex(index);
    if (output_number != 0) {
      index -= ${Se("uniforms.size_in_split_axis","output_number - 1u",u.length)};
      ${a.indicesSet("indices",i,"index")};
    }
    writeBufferData(output_number, indices, global_idx);
  }`;return{name:"Split",shaderCache:{hint:e.cacheKey,inputDependencies:["rank"]},getShaderSource:y,getRunData:()=>({outputs:l,dispatchGroup:{x:Math.ceil(t/64)},programUniforms:h})}},_0=(r,e)=>{xT(r.inputs);let n=r.inputs.length===1?e:$T(r.inputs,e);r.compute(IT(r.inputs,n),{inputs:[0]})},x0=r=>{let e=r.axis,n=r.splitSizes,t=r.numOutputs<0?n.length:r.numOutputs;if(t!==n.length)throw new Error("numOutputs and splitSizes lengh must be equal");return Le({axis:e,numOutputs:t,splitSizes:n})}});var T0,AT,OT,ET,S0,I0=D(()=>{"use strict";Ce();Ve();Fe();T0=r=>Array.from(r.getBigInt64Array(),Number),AT=r=>{if(!r||r.length!==2)throw new Error("Tile requires 2 inputs.");if(r[0].dataType!==1&&r[0].dataType!==6&&r[0].dataType!==12)throw new Error("Tile only support float, int32, and uint32 data types");if(r[1].dataType!==7)throw new Error("Tile `repeats` input should be of int64 data type");if(r[1].dims.length!==1)throw new Error("Tile `repeats` input should be 1-D");if(T0(r[1]).length!==r[0].dims.length)throw new Error("Tile `repeats` input should have same number of elements as rank of input data tensor")},OT=(r,e)=>{let n=[];for(let t=0;t<r.length;++t)n.push(r[t]*e[t]);return n},ET=r=>{let e=r[0].dims,n=T0(r[1]),t=OT(e,n),o=U.size(t),i=r[0].dataType,s=F("input",i,e.length),a=ee("output",i,t.length),u=l=>`
      const inputShape = ${s.indices(...e)};
      ${l.registerUniform("output_size","u32").declareVariables(s,a)}
      ${l.mainStart()}
      ${l.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
      let output_indices = ${a.offsetToIndices("global_idx")};
      var input_indices: ${s.type.indices};
      for (var i = 0; i < ${e.length}; i++) {
        let input_dim_i = ${s.indicesGet("uniforms.input_shape","i")};
        let input_dim_value = ${a.indicesGet("output_indices","i")}  % input_dim_i;

        ${s.indicesSet("input_indices","i","input_dim_value")}
      }
      ${a.setByOffset("global_idx",s.getByIndices("input_indices"))}
    }`;return{name:"Tile",shaderCache:{hint:`${n}`,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:t,dataType:r[0].dataType}],dispatchGroup:{x:Math.ceil(o/64)},programUniforms:[{type:12,data:o},...oe(r[0].dims,t)]}),getShaderSource:u}},S0=r=>{AT(r.inputs),r.compute(ET(r.inputs),{inputs:[0]})}});var CT,PT,A0,O0=D(()=>{"use strict";Ce();Ve();Fe();CT=(r,e,n,t,o)=>{let i=ee("output_data",o,n.length,4),s=F("a_data",e[1].dataType,e[1].dims.length,4),a=F("b_data",e[2].dataType,e[2].dims.length,4),u=F("c_data",e[0].dataType,e[0].dims.length,4),l,d=(p,h,y)=>`select(${h}, ${p}, ${y})`;if(!t)l=i.setByOffset("global_idx",d(s.getByOffset("global_idx"),a.getByOffset("global_idx"),u.getByOffset("global_idx")));else{let p=(h,y,b="")=>{let w=`a_data[index_a${y}][component_a${y}]`,T=`b_data[index_b${y}][component_b${y}]`,x=`bool(c_data[index_c${y}] & (0xffu << (component_c${y} * 8)))`;return`
            let output_indices${y} = ${i.offsetToIndices(`global_idx * 4u + ${y}u`)};
            let offset_a${y} = ${s.broadcastedIndicesToOffset(`output_indices${y}`,i)};
            let offset_b${y} = ${a.broadcastedIndicesToOffset(`output_indices${y}`,i)};
            let offset_c${y} = ${u.broadcastedIndicesToOffset(`output_indices${y}`,i)};
            let index_a${y} = offset_a${y} / 4u;
            let index_b${y} = offset_b${y} / 4u;
            let index_c${y} = offset_c${y} / 4u;
            let component_a${y} = offset_a${y} % 4u;
            let component_b${y} = offset_b${y} % 4u;
            let component_c${y} = offset_c${y} % 4u;
            ${h}[${y}] = ${b}(${d(w,T,x)});
          `};o===9?l=`
            var data = vec4<u32>(0);
            ${p("data",0,"u32")}
            ${p("data",1,"u32")}
            ${p("data",2,"u32")}
            ${p("data",3,"u32")}
            output_data[global_idx] = dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(data));`:l=`
            ${p("output_data[global_idx]",0)}
            ${p("output_data[global_idx]",1)}
            ${p("output_data[global_idx]",2)}
            ${p("output_data[global_idx]",3)}
          `}return`
        ${r.registerUniform("vec_size","u32").declareVariables(u,s,a,i)}
        ${r.mainStart()}
        ${r.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}
        ${l}
      }`},PT=r=>{let e=r[1].dims,n=r[2].dims,t=r[0].dims,o=r[1].dataType,i=!(U.areEqual(e,n)&&U.areEqual(n,t)),s=e,a=U.size(e);if(i){let l=Br.calcShape(Br.calcShape(e,n,!1),t,!1);if(!l)throw new Error("Can't perform where op on the given tensors");s=l,a=U.size(s)}let u=Math.ceil(a/4);return{name:"Where",shaderCache:{inputDependencies:["rank","rank","rank"]},getShaderSource:l=>CT(l,r,s,i,o),getRunData:()=>({outputs:[{dims:s,dataType:o}],dispatchGroup:{x:Math.ceil(a/64/4)},programUniforms:[{type:12,data:u},...oe(t,e,n,s)]})}},A0=r=>{r.compute(PT(r.inputs))}});var E0,C0=D(()=>{"use strict";Vg();gl();Hg();qg();Py();Vy();Hy();_l();ib();ub();pb();gb();bb();_b();Tb();Ab();Eb();Pb();$l();Bb();Nb();Ub();n0();i0();as();l0();c0();p0();y0();w0();$0();I0();uo();cs();O0();E0=new Map([["Abs",[Kg]],["Acos",[Yg]],["Acosh",[Xg]],["Add",[ky]],["ArgMax",[Fg,hl]],["ArgMin",[Ug,hl]],["Asin",[Zg]],["Asinh",[Jg]],["Atan",[Qg]],["Atanh",[ey]],["Attention",[Gg]],["AveragePool",[Kb,qb]],["BatchNormalization",[Wg]],["BiasAdd",[jg]],["BiasSplitGelu",[Cy]],["Cast",[ry,ty]],["Ceil",[oy]],["Clip",[ny]],["Concat",[Gy,Wy]],["Conv",[Il,Sl]],["ConvTranspose",[ob,nb]],["Cos",[iy]],["Cosh",[ay]],["CumSum",[ab,sb]],["Div",[Dy]],["Einsum",[cb,fb]],["Elu",[sy,ls]],["Equal",[By]],["Erf",[uy]],["Exp",[ly]],["Expand",[hb]],["FastGelu",[yb]],["Floor",[dy]],["FusedConv",[Il,Sl]],["Gather",[wb,vb]],["GatherElements",[$b,xb]],["Gelu",[cy]],["Gemm",[Ib,Sb]],["GlobalAveragePool",[Zb,Xb]],["GlobalMaxPool",[r0,t0]],["Greater",[Ny]],["GreaterOrEqual",[Uy]],["HardSigmoid",[vy,by]],["InstanceNormalization",[Ob]],["LayerNormalization",[Cb]],["LeakyRelu",[fy,ls]],["Less",[Ly]],["LessOrEqual",[Fy]],["Log",[Oy]],["MatMul",[Zy]],["MatMulNBits",[kb,Db]],["MaxPool",[Qb,e0]],["Mul",[Ry]],["MultiHeadAttention",[Mb,zb]],["Neg",[my]],["Not",[py]],["Pad",[Lb]],["Pow",[zy]],["Range",[o0]],["Reciprocal",[hy]],["ReduceMin",[Bg]],["ReduceMean",[Eg]],["ReduceMax",[Dg]],["ReduceSum",[zg]],["ReduceProd",[Rg]],["ReduceL1",[Cg]],["ReduceL2",[Pg]],["ReduceLogSum",[Ng]],["ReduceLogSumExp",[kg]],["ReduceSumSquare",[Mg]],["Relu",[gy]],["Resize",[s0,u0]],["RotaryEmbedding",[d0]],["Sigmoid",[yy]],["Sin",[wy]],["Sinh",[_y]],["Slice",[h0,g0]],["SkipLayerNormalization",[f0]],["Split",[_0,x0]],["Sqrt",[xy]],["Softmax",[b0,v0]],["Sub",[My]],["Tan",[$y]],["Tanh",[Sy]],["ThresholdedRelu",[Ay,ls]],["Tile",[S0]],["Transpose",[gg,yg]],["Where",[A0]]])});var _s,P0=D(()=>{"use strict";Rt();un();Fe();_s=class{constructor(e){this.backend=e;this.repo=new Map,this.attributesBound=!1}getArtifact(e){return this.repo.get(e)}setArtifact(e,n){this.repo.set(e,n)}run(e,n,t,o,i){jt(e.programInfo.name);let s=this.backend.device,a=this.backend.getComputePassEncoder();this.backend.writeTimestamp(this.backend.pendingDispatchNumber*2);let u=[];for(let d of n)u.push({binding:u.length,resource:{buffer:d.buffer}});for(let d of t)u.push({binding:u.length,resource:{buffer:d.buffer}});i&&u.push({binding:u.length,resource:i});let l=s.createBindGroup({layout:e.computePipeline.getBindGroupLayout(0),entries:u,label:e.programInfo.name});if(this.backend.sessionStatus==="capturing"){let d={kernelId:this.backend.currentKernelId,computePipeline:e.computePipeline,bindGroup:l,dispatchGroup:o};this.backend.capturedCommandList.get(this.backend.currentSessionId).push(d)}a.setPipeline(e.computePipeline),a.setBindGroup(0,l),a.dispatchWorkgroups(...o),this.backend.writeTimestamp(this.backend.pendingDispatchNumber*2+1),this.backend.pendingDispatchNumber++,(this.backend.pendingDispatchNumber>=this.backend.maxDispatchNumber||this.backend.queryType==="at-passes")&&this.backend.endComputePass(),this.backend.pendingDispatchNumber>=this.backend.maxDispatchNumber&&this.backend.flush(),Ft(e.programInfo.name)}dispose(){}build(e,n){jt(e.name);let t=this.backend.device,o=[];t.features.has("shader-f16")&&o.push("enable f16;");let i=mg(n,this.backend.device.limits),s=e.getShaderSource(i),a=`${o.join(`
`)}
${i.additionalImplementations}
${s}`,u=t.createShaderModule({code:a,label:e.name});ot("verbose",()=>`[WebGPU] ${e.name} shader code: ${a}`);let l=t.createComputePipeline({compute:{module:u,entryPoint:"main"},layout:"auto",label:e.name});return Ft(e.name),{programInfo:e,computePipeline:l,uniformVariablesInfo:i.variablesInfo}}normalizeDispatchGroupSize(e){let n=typeof e=="number"?e:e.x,t=typeof e=="number"?1:e.y||1,o=typeof e=="number"?1:e.z||1,i=this.backend.device.limits.maxComputeWorkgroupsPerDimension;if(n<=i&&t<=i&&o<=i)return[n,t,o];let s=n*t*o,a=Math.ceil(Math.sqrt(s));if(a>i){if(a=Math.ceil(Math.cbrt(s)),a>i)throw new Error("Total dispatch size exceeds WebGPU maximum.");return[a,a,a]}else return[a,a,1]}}});var kT,DT,kl,xs,k0=D(()=>{"use strict";Rt();Ce();un();lg();pg();C0();P0();kT=(r,e)=>{if(e.length!==r.length)throw new Error(`inputDependencies length ${e.length} is not equal to inputTensors length ${r.length}.`);let n=[];for(let t=0;t<r.length;++t){let o=r[t].dataType;switch(e[t]){case"none":{n.push("");break}case"type":{n.push(`${o}`);break}case"rank":{let i=r[t].dims.length;n.push(`${o};${i}`);break}case"dims":{let i=r[t].dims.join(",");n.push(`${o};${i}`);break}default:throw new Error(`unsupported input dependency: ${e[t]}`)}}return n.join("|")},DT=(r,e,n)=>{let t=r.name;return r.shaderCache?.hint&&(t+="["+r.shaderCache.hint+"]"),t+=":"+n+`:${kT(e,r.shaderCache?.inputDependencies??new Array(e.length).fill("dims"))}`,t},kl=class{constructor(e){e&&(this.architecture=e.architecture,this.vendor=e.vendor)}isArchitecture(e){return this.architecture===e}isVendor(e){return this.vendor===e}},xs=class{constructor(){this.currentSessionId=null;this.currentKernelId=null;this.commandEncoder=null;this.computePassEncoder=null;this.maxDispatchNumber=16;this.pendingDispatchNumber=0;this.pendingKernels=[];this.pendingQueries=new Map;this.sessionStatus="default";this.capturedCommandList=new Map;this.capturedPendingKernels=new Map;this.sessionExternalDataMapping=new Map}get currentKernelCustomData(){if(this.currentKernelId===null)throw new Error("currentKernelCustomData(): currentKernelId is null. (should not happen)");let e=this.kernelCustomData.get(this.currentKernelId);return e||(e={},this.kernelCustomData.set(this.currentKernelId,e)),e}async initialize(e,n){this.env=e;let t=[],o={requiredLimits:{maxComputeWorkgroupStorageSize:n.limits.maxComputeWorkgroupStorageSize,maxComputeWorkgroupsPerDimension:n.limits.maxComputeWorkgroupsPerDimension,maxStorageBufferBindingSize:n.limits.maxStorageBufferBindingSize,maxBufferSize:n.limits.maxBufferSize,maxComputeInvocationsPerWorkgroup:n.limits.maxComputeInvocationsPerWorkgroup,maxComputeWorkgroupSizeX:n.limits.maxComputeWorkgroupSizeX,maxComputeWorkgroupSizeY:n.limits.maxComputeWorkgroupSizeY,maxComputeWorkgroupSizeZ:n.limits.maxComputeWorkgroupSizeZ},requiredFeatures:t};n.features.has("chromium-experimental-timestamp-query-inside-passes")?t.push("chromium-experimental-timestamp-query-inside-passes"):n.features.has("timestamp-query")&&t.push("timestamp-query"),n.features.has("shader-f16")&&t.push("shader-f16"),this.device=await n.requestDevice(o),this.adapterInfo=new kl(await n.requestAdapterInfo()),this.gpuDataManager=fg(this),this.programManager=new _s(this),this.kernels=new Map,this.kernelPersistentData=new Map,this.kernelCustomData=new Map,sg(e.logLevel,!!e.debug),this.device.onuncapturederror=i=>{i.error instanceof GPUValidationError&&console.error(`An uncaught WebGPU validation error was raised: ${i.error.message}`)},Object.defineProperty(this.env.webgpu,"device",{value:this.device,writable:!1,enumerable:!0,configurable:!1}),Object.defineProperty(this.env.webgpu,"adapter",{value:n,writable:!1,enumerable:!0,configurable:!1}),this.setQueryType()}dispose(){typeof this.querySet<"u"&&this.querySet.destroy(),this.gpuDataManager.dispose()}getCommandEncoder(){return this.commandEncoder||(this.commandEncoder=this.device.createCommandEncoder()),this.commandEncoder}getComputePassEncoder(){if(!this.computePassEncoder){let e=this.getCommandEncoder(),n={};this.queryType==="at-passes"&&(n.timestampWrites={querySet:this.querySet,beginningOfPassWriteIndex:this.pendingDispatchNumber*2,endOfPassWriteIndex:this.pendingDispatchNumber*2+1}),this.computePassEncoder=e.beginComputePass(n)}return this.computePassEncoder}endComputePass(){this.computePassEncoder&&(this.computePassEncoder.end(),this.computePassEncoder=null)}flush(){if(!this.commandEncoder)return;jt(),this.endComputePass();let e;this.queryType!=="none"&&(this.commandEncoder.resolveQuerySet(this.querySet,0,this.pendingDispatchNumber*2,this.queryResolveBuffer,0),e=this.device.createBuffer({size:this.pendingDispatchNumber*2*8,usage:GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST}),this.pendingQueries.set(e,this.pendingKernels),this.pendingKernels=[],this.commandEncoder.copyBufferToBuffer(this.queryResolveBuffer,0,e,0,this.pendingDispatchNumber*2*8)),this.device.queue.submit([this.commandEncoder.finish()]),this.gpuDataManager.refreshPendingBuffers(),this.commandEncoder=null,this.pendingDispatchNumber=0,this.queryType!=="none"&&e.mapAsync(GPUMapMode.READ).then(()=>{let n=new BigUint64Array(e.getMappedRange()),t=this.pendingQueries.get(e);for(let o=0;o<n.length/2;o++){let i=t[o],s=i.kernelId,a=this.kernels.get(s),u=a.kernelType,l=a.kernelName,d=i.programName,p=i.inputTensorViews,h=i.outputTensorViews,y=n[o*2],b=n[o*2+1];typeof this.queryTimeBase>"u"&&(this.queryTimeBase=y);let w=Number(y-this.queryTimeBase),T=Number(b-this.queryTimeBase);if(!Number.isSafeInteger(w)||!Number.isSafeInteger(T))throw new RangeError("incorrect timestamp range");if(this.env.webgpu.profiling?.ondata)this.env.webgpu.profiling.ondata({version:1,inputsMetadata:p.map(x=>({dims:x.dims,dataType:sn(x.dataType)})),outputsMetadata:h.map(x=>({dims:x.dims,dataType:sn(x.dataType)})),kernelId:s,kernelType:u,kernelName:l,programName:d,startTime:w,endTime:T});else{let x="";p.forEach((A,P)=>{x+=`input[${P}]: [${A.dims}] | ${sn(A.dataType)}, `});let _="";h.forEach((A,P)=>{_+=`output[${P}]: [${A.dims}] | ${sn(A.dataType)}, `}),console.log(`[profiling] kernel "${s}|${u}|${l}|${d}" ${x}${_}execution time: ${T-w} ns`)}ra("GPU",`${d}::${y}::${b}`)}e.unmap(),this.pendingQueries.delete(e)}),Ft()}run(e,n,t,o,i){jt(e.name);let s=[];for(let _=0;_<n.length;++_){let A=n[_].data;if(A===0)continue;let P=this.gpuDataManager.get(A);if(!P)throw new Error(`no GPU data for input: ${A}`);s.push(P)}let{outputs:a,dispatchGroup:u,programUniforms:l}=e.getRunData(n),d=t.length===0?a.map((_,A)=>A):t;if(d.length!==a.length)throw new Error(`Output size ${d.length} must be equal to ${a.length}.`);let p=[],h=[];for(let _=0;_<a.length;++_){if(!Number.isInteger(d[_])||d[_]<-3||d[_]>=a.length)throw new Error(`Invalid output index: ${d[_]}`);if(d[_]===-3)continue;let A=d[_]===-1,P=d[_]===-2,k=A||P?i(a[_].dataType,a[_].dims):o(d[_],a[_].dataType,a[_].dims);if(p.push(k),k.data===0)continue;let N=this.gpuDataManager.get(k.data);if(!N)throw new Error(`no GPU data for output: ${k.data}`);if(A&&this.temporaryData.push(N),P){let j=this.kernelPersistentData.get(this.currentKernelId);j||(j=[],this.kernelPersistentData.set(this.currentKernelId,j)),j.push(N)}h.push(N)}if(s.length!==n.length||h.length!==p.length){if(h.length===0)return Ft(e.name),p;throw new Error(`Program ${e.name} has zero-sized tensor(s) in inputs or outputs. This is not supported now.`)}let y;if(l){let _=0,A=[];l.forEach(j=>{let Z=typeof j.data=="number"?[j.data]:j.data;if(Z.length===0)return;let se=j.type===10?2:4,Q,X;j.type===10?(X=Z.length>4?16:Z.length>2?8:Z.length*se,Q=Z.length>4?16:se*Z.length):(X=Z.length<=2?Z.length*se:16,Q=16),_=Math.ceil(_/X)*X,A.push(_);let Be=j.type===10?8:4;_+=Z.length>4?Math.ceil(Z.length/Be)*Q:Z.length*se});let P=16;_=Math.ceil(_/P)*P;let k=new ArrayBuffer(_);l.forEach((j,Z)=>{let se=A[Z],Q=typeof j.data=="number"?[j.data]:j.data;if(j.type===6)new Int32Array(k,se,Q.length).set(Q);else if(j.type===12)new Uint32Array(k,se,Q.length).set(Q);else if(j.type===10)new Uint16Array(k,se,Q.length).set(Q);else if(j.type===1)new Float32Array(k,se,Q.length).set(Q);else throw new Error(`Unsupported uniform type: ${sn(j.type)}`)});let N=this.gpuDataManager.create(_,GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM);this.device.queue.writeBuffer(N.buffer,0,k,0,_),this.gpuDataManager.release(N.id),y={offset:0,size:_,buffer:N.buffer}}let b=this.programManager.normalizeDispatchGroupSize(u),w=b[1]===1&&b[2]===1,T=DT(e,n,w),x=this.programManager.getArtifact(T);if(x||(x=this.programManager.build(e,b),this.programManager.setArtifact(T,x),ot("info",()=>`[artifact] key: ${T}, programName: ${e.name}`)),l&&x.uniformVariablesInfo){if(l.length!==x.uniformVariablesInfo.length)throw new Error(`Uniform variables count mismatch: expect ${x.uniformVariablesInfo.length}, got ${l.length} in program "${x.programInfo.name}".`);for(let _=0;_<l.length;_++){let A=l[_],P=A.type,k=typeof A.data=="number"?1:A.data.length,[N,j]=x.uniformVariablesInfo[_];if(P!==N||k!==j)throw new Error(`Uniform variable ${_} mismatch: expect type ${N} with size ${j}, got type ${P} with size ${k} in program "${x.programInfo.name}".`)}}if(ot("info",()=>`[ProgramManager] run "${e.name}" (key=${T}) with ${b[0]}x${b[1]}x${b[2]}`),this.queryType!=="none"||this.sessionStatus==="capturing"){let _={kernelId:this.currentKernelId,programName:x.programInfo.name,inputTensorViews:n,outputTensorViews:p};this.pendingKernels.push(_),this.sessionStatus==="capturing"&&this.capturedPendingKernels.get(this.currentSessionId).push(_)}return this.programManager.run(x,s,h,b,y),Ft(e.name),p}upload(e,n){this.gpuDataManager.upload(e,n)}memcpy(e,n){this.gpuDataManager.memcpy(e,n)}async download(e,n){await this.gpuDataManager.download(e,n)}alloc(e){return this.gpuDataManager.create(e).id}free(e){return this.gpuDataManager.release(e)}createKernel(e,n,t,o){let i=E0.get(e);if(!i)throw new Error(`kernel not implemented: ${e}`);let s={kernelType:e,kernelName:o,kernelEntry:i[0],attributes:[i[1],t]};this.kernels.set(n,s)}releaseKernel(e){let n=this.kernelPersistentData.get(e);if(n){for(let t of n)this.gpuDataManager.release(t.id);this.kernelPersistentData.delete(e)}this.kernelCustomData.delete(e),this.kernels.delete(e)}computeKernel(e,n,t){let o=this.kernels.get(e);if(!o)throw new Error(`kernel not created: ${e}`);let i=o.kernelType,s=o.kernelName,a=o.kernelEntry,u=o.attributes;if(this.currentKernelId!==null)throw new Error(`kernel "[${i}] ${s}" is not allowed to be called recursively`);this.currentKernelId=e,u[0]&&(u[1]=u[0](u[1]),u[0]=void 0),ot("info",()=>`[WebGPU] Start to run kernel "[${i}] ${s}"...`),this.env.trace&&console.timeStamp(`GPU::${i},${s}`);let l=this.env.debug;this.temporaryData=[];try{return l&&this.device.pushErrorScope("validation"),a(n,u[1]),0}catch(d){return t.push(Promise.resolve(`[WebGPU] Kernel "[${i}] ${s}" failed. ${d}`)),1}finally{l&&t.push(this.device.popErrorScope().then(d=>d?`GPU validation error for kernel "[${i}] ${s}": ${d.message}`:null));for(let d of this.temporaryData)this.gpuDataManager.release(d.id);this.temporaryData=[],this.currentKernelId=null}}registerBuffer(e,n,t,o){let i=this.sessionExternalDataMapping.get(e);i||(i=new Map,this.sessionExternalDataMapping.set(e,i));let s=i.get(n),a=this.gpuDataManager.registerExternalBuffer(t,o,s?.[1]);return i.set(n,[a,t]),a}unregisterBuffers(e){let n=this.sessionExternalDataMapping.get(e);n&&(n.forEach(t=>this.gpuDataManager.unregisterExternalBuffer(t[1])),this.sessionExternalDataMapping.delete(e))}getBuffer(e){let n=this.gpuDataManager.get(e);if(!n)throw new Error(`no GPU data for buffer: ${e}`);return n.buffer}createDownloader(e,n,t){return async()=>{let o=await ul(this,e,n);return ug(o.buffer,t)}}writeTimestamp(e){this.queryType==="inside-passes"&&this.computePassEncoder.writeTimestamp(this.querySet,e)}setQueryType(){this.queryType="none",(this.env.webgpu.profiling?.mode==="default"||(typeof this.env.trace>"u"?this.env.wasm.trace:this.env.trace))&&(this.device.features.has("chromium-experimental-timestamp-query-inside-passes")?this.queryType="inside-passes":this.device.features.has("timestamp-query")&&(this.queryType="at-passes"),this.queryType!=="none"&&typeof this.querySet>"u"&&(this.querySet=this.device.createQuerySet({type:"timestamp",count:this.maxDispatchNumber*2}),this.queryResolveBuffer=this.device.createBuffer({size:this.maxDispatchNumber*2*8,usage:GPUBufferUsage.COPY_SRC|GPUBufferUsage.QUERY_RESOLVE})))}captureBegin(){ot("info","captureBegin"),this.capturedCommandList.get(this.currentSessionId)||this.capturedCommandList.set(this.currentSessionId,[]),this.capturedPendingKernels.get(this.currentSessionId)||this.capturedPendingKernels.set(this.currentSessionId,[]),this.flush(),this.sessionStatus="capturing"}captureEnd(){ot("info","captureEnd"),this.flush(),this.sessionStatus="default"}replay(){ot("info","replay"),this.sessionStatus="replaying";let e=this.capturedCommandList.get(this.currentSessionId),n=this.capturedPendingKernels.get(this.currentSessionId),t=e.length;this.pendingKernels=[];for(let o=0;o<t;o++){let i=this.getComputePassEncoder(),s=e[o];this.writeTimestamp(this.pendingDispatchNumber*2),i.setPipeline(s.computePipeline),i.setBindGroup(0,s.bindGroup),i.dispatchWorkgroups(...s.dispatchGroup),this.writeTimestamp(this.pendingDispatchNumber*2+1),this.pendingDispatchNumber++,this.queryType!=="none"&&this.pendingKernels.push(n[o]),(this.pendingDispatchNumber>=this.maxDispatchNumber||this.queryType==="at-passes")&&this.endComputePass(),this.pendingDispatchNumber>=this.maxDispatchNumber&&this.flush()}this.flush(),this.sessionStatus="default"}onReleaseSession(e){this.unregisterBuffers(e),this.capturedCommandList.has(e)&&this.capturedCommandList.delete(e),this.capturedPendingKernels.has(e)&&this.capturedPendingKernels.delete(e),this.gpuDataManager.onReleaseSession(e)}onRunStart(e){this.currentSessionId=e,this.setQueryType()}}});var D0={};Qr(D0,{init:()=>BT});var ri,Dl,BT,B0=D(()=>{"use strict";Ce();k0();un();Ve();ri=class r{constructor(e,n,t,o){this.module=e;this.dataType=n;this.data=t;this.dims=o}getFloat32Array(){if(this.dataType!==1)throw new Error("Invalid data type");let e=U.size(this.dims);return e===0?new Float32Array:new Float32Array(this.module.HEAP8.buffer,this.data,e)}getBigInt64Array(){if(this.dataType!==7)throw new Error("Invalid data type");let e=U.size(this.dims);return e===0?new BigInt64Array:new BigInt64Array(this.module.HEAP8.buffer,this.data,e)}getInt32Array(){if(this.dataType!==6)throw new Error("Invalid data type");let e=U.size(this.dims);return e===0?new Int32Array:new Int32Array(this.module.HEAP8.buffer,this.data,e)}reshape(e){if(U.size(e)!==U.size(this.dims))throw new Error("Invalid new shape");return new r(this.module,this.dataType,this.data,e)}},Dl=class{constructor(e,n,t){this.module=e;this.backend=n;this.customDataOffset=0;this.customDataSize=0;this.adapterInfo=n.adapterInfo;let o=e.HEAPU32,i=t>>>2;this.opKernelContext=o[i++];let s=o[i++];this.outputCount=o[i++],this.customDataOffset=o[i++],this.customDataSize=o[i++];let a=[];for(let u=0;u<s;u++){let l=o[i++],d=o[i++],p=o[i++],h=[];for(let y=0;y<p;y++)h.push(o[i++]);a.push(new ri(e,l,d,h))}this.inputs=a}get kernelCustomData(){return this.backend.currentKernelCustomData}get customDataBuffer(){return this.module.HEAPU8.subarray(this.customDataOffset,this.customDataOffset+this.customDataSize)}getMaxComputeWorkgroupSizes(){return[this.backend.device.limits.maxComputeWorkgroupSizeX,this.backend.device.limits.maxComputeWorkgroupSizeY,this.backend.device.limits.maxComputeWorkgroupSizeZ]}getMaxComputeWorkgroupStoragesize(){return this.backend.device.limits.maxComputeWorkgroupStorageSize}compute(e,n){let t=n?.inputs?.map(a=>typeof a=="number"?this.inputs[a]:a)??this.inputs,o=n?.outputs??[],i=(a,u,l)=>new ri(this.module,u,this.output(a,l),l),s=(a,u)=>{let l=kn(a);if(!l)throw new Error(`Unsupported data type: ${a}`);let d=l*U.size(u),p=d>0?this.backend.gpuDataManager.create(d).id:0;return new ri(this.module,a,p,u)};return this.backend.run(e,t,o,i,s)}output(e,n){let t=this.module.stackSave();try{let o=this.module.stackAlloc((1+n.length)*4),i=o>>2;this.module.HEAPU32[i++]=n.length;for(let s=0;s<n.length;s++)this.module.HEAPU32[i++]=n[s];return this.module._JsepOutput(this.opKernelContext,e,o)}catch(o){throw new Error(`Failed to generate kernel's output[${e}] with dims [${n}]. If you are running with pre-allocated output, please make sure the output type/dims are correct. Error: ${o}`)}finally{this.module.stackRestore(t)}}},BT=async(r,e,n,t)=>{let o=e.jsepInit;if(!o)throw new Error("Failed to initialize JSEP. The WebAssembly module is not built with JSEP support.");if(r==="webgpu"){let i=new xs;await i.initialize(n,t),o("webgpu",[i,s=>i.alloc(s),s=>i.free(s),(s,a,u,l=!1)=>{if(l)ot("verbose",()=>`[WebGPU] jsepCopyGpuToGpu: src=${s}, dst=${a}, size=${u}`),i.memcpy(s,a);else{ot("verbose",()=>`[WebGPU] jsepCopyCpuToGpu: dataOffset=${s}, gpuDataId=${a}, size=${u}`);let d=e.HEAPU8.subarray(s>>>0,(s>>>0)+u);i.upload(a,d)}},async(s,a,u)=>{ot("verbose",()=>`[WebGPU] jsepCopyGpuToCpu: gpuDataId=${s}, dataOffset=${a}, size=${u}`),await i.download(s,()=>e.HEAPU8.subarray(a>>>0,(a>>>0)+u))},(s,a,u)=>i.createKernel(s,a,u,e.UTF8ToString(e._JsepGetNodeName(a))),s=>i.releaseKernel(s),(s,a,u,l)=>{ot("verbose",()=>`[WebGPU] jsepRun: sessionHandle=${u}, kernel=${s}, contextDataOffset=${a}`);let d=new Dl(e,i,a);return i.computeKernel(s,d,l)},()=>i.captureBegin(),()=>i.captureEnd(),()=>i.replay()])}else o("webnn")}});var RT,z0,M0,Rn,zT,Bl,N0,L0,R0,U0,F0,V0,G0=D(()=>{"use strict";rg();og();Ce();ao();Za();ol();RT=(r,e)=>{ht()._OrtInit(r,e)!==0&&nt("Can't initialize onnxruntime.")},z0=async r=>{RT(r.wasm.numThreads,Zo(r.logLevel))},M0=async(r,e)=>{{let n=(B0(),Ir(D0)).init;if(e==="webgpu"){if(typeof navigator>"u"||!navigator.gpu)throw new Error("WebGPU is not supported in current environment");let t=r.webgpu.adapter;if(t){if(typeof t.limits!="object"||typeof t.features!="object"||typeof t.requestDevice!="function")throw new Error("Invalid GPU adapter set in `env.webgpu.adapter`. It must be a GPUAdapter object.")}else{let o=r.webgpu.powerPreference;if(o!==void 0&&o!=="low-power"&&o!=="high-performance")throw new Error(`Invalid powerPreference setting: "${o}"`);let i=r.webgpu.forceFallbackAdapter;if(i!==void 0&&typeof i!="boolean")throw new Error(`Invalid forceFallbackAdapter setting: "${i}"`);if(t=await navigator.gpu.requestAdapter({powerPreference:o,forceFallbackAdapter:i}),!t)throw new Error('Failed to get GPU adapter. You may need to enable flag "--enable-unsafe-webgpu" if you are using Chrome.')}if(!r.wasm.simd)throw new Error("Not supported for WebGPU=ON and SIMD=OFF. Please set `env.wasm.simd` to true when using `webgpu` EP");await n("webgpu",ht(),r,t)}if(e==="webnn"){if(typeof navigator>"u"||!navigator.ml)throw new Error("WebNN is not supported in current environment");await n("webnn",ht(),r)}}},Rn=new Map,zT=r=>{let e=ht(),n=e.stackSave();try{let t=e.stackAlloc(8);return e._OrtGetInputOutputCount(r,t,t+4)!==0&&nt("Can't get session input/output count."),[e.HEAP32[t/4],e.HEAP32[t/4+1]]}finally{e.stackRestore(n)}},Bl=r=>{let e=ht(),n=e._malloc(r.byteLength);if(n===0)throw new Error(`Can't create a session. failed to allocate a buffer of size ${r.byteLength}.`);return e.HEAPU8.set(r,n),[n,r.byteLength]},N0=async(r,e)=>{let n,t,o=ht();Array.isArray(r)?[n,t]=r:r.buffer===o.HEAPU8.buffer?[n,t]=[r.byteOffset,r.byteLength]:[n,t]=Bl(r);let i=0,s=0,a=0,u=[],l=[],d=[];try{if([s,u]=ng(e),e?.externalData&&o.mountExternalData){let _=[];for(let A of e.externalData){let P=typeof A=="string"?A:A.path;_.push(Jo(typeof A=="string"?A:A.data).then(k=>{o.mountExternalData(P,k)}))}await Promise.all(_)}i=await o._OrtCreateSession(n,t,s),i===0&&nt("Can't create a session.");let[p,h]=zT(i),y=!!e?.enableGraphCapture,b=[],w=[],T=[];for(let _=0;_<p;_++){let A=o._OrtGetInputName(i,_);A===0&&nt("Can't get an input name."),l.push(A),b.push(o.UTF8ToString(A))}for(let _=0;_<h;_++){let A=o._OrtGetOutputName(i,_);A===0&&nt("Can't get an output name."),d.push(A);let P=o.UTF8ToString(A);w.push(P);{if(y&&e?.preferredOutputLocation===void 0){T.push("gpu-buffer");continue}let k=typeof e?.preferredOutputLocation=="string"?e.preferredOutputLocation:e?.preferredOutputLocation?.[P]??"cpu";if(k!=="cpu"&&k!=="cpu-pinned"&&k!=="gpu-buffer")throw new Error(`Not supported preferred output location: ${k}.`);if(y&&k!=="gpu-buffer")throw new Error(`Not supported preferred output location: ${k}. Only 'gpu-buffer' location is supported when enableGraphCapture is true.`);T.push(k)}}let x=null;return T.some(_=>_==="gpu-buffer")&&(a=o._OrtCreateBinding(i),a===0&&nt("Can't create IO binding."),x={handle:a,outputPreferredLocations:T,outputPreferredLocationsEncoded:T.map(_=>nl(_))}),Rn.set(i,[i,l,d,x,y,!1]),[i,b,w]}catch(p){throw l.forEach(h=>o._OrtFree(h)),d.forEach(h=>o._OrtFree(h)),a!==0&&o._OrtReleaseBinding(a),i!==0&&o._OrtReleaseSession(i),p}finally{o._free(n),s!==0&&o._OrtReleaseSessionOptions(s),u.forEach(p=>o._free(p)),o.unmountExternalData?.()}},L0=r=>{let e=ht(),n=Rn.get(r);if(!n)throw new Error(`cannot release session. invalid session id: ${r}`);let[t,o,i,s,a]=n;s&&(a&&e._OrtClearBoundOutputs(s.handle),e._OrtReleaseBinding(s.handle)),e.jsepOnReleaseSession?.(r),o.forEach(u=>e._OrtFree(u)),i.forEach(u=>e._OrtFree(u)),e._OrtReleaseSession(t),Rn.delete(r)},R0=(r,e,n,t,o,i=!1)=>{if(!r){e.push(0);return}let s=ht(),a=r[0],u=r[1],l=r[3],d,p;if(a==="string"&&l==="gpu-buffer")throw new Error("String tensor is not supported on GPU.");if(i&&l!=="gpu-buffer")throw new Error(`External buffer must be provided for input/output index ${o} when enableGraphCapture is true.`);if(l==="gpu-buffer"){let b=r[2].gpuBuffer,w=kn(rl(a));p=u.reduce((x,_)=>x*_,1)*w;let T=s.jsepRegisterBuffer;if(!T)throw new Error('Tensor location "gpu-buffer" is not supported without using WebGPU.');d=T(t,o,b,p)}else{let b=r[2];if(Array.isArray(b)){p=4*b.length,d=s._malloc(p),n.push(d);let w=d/4;for(let T=0;T<b.length;T++){if(typeof b[T]!="string")throw new TypeError(`tensor data at index ${T} is not a string`);s.HEAPU32[w++]=gt(b[T],n)}}else p=b.byteLength,d=s._malloc(p),n.push(d),s.HEAPU8.set(new Uint8Array(b.buffer,b.byteOffset,p),d)}let h=s.stackSave(),y=s.stackAlloc(4*u.length);try{let b=y/4;u.forEach(T=>s.HEAP32[b++]=T);let w=s._OrtCreateTensor(rl(a),d,p,y,u.length,nl(l));w===0&&nt(`Can't create tensor for input/output. session=${t}, index=${o}.`),e.push(w)}finally{s.stackRestore(h)}},U0=async(r,e,n,t,o,i)=>{let s=ht(),a=Rn.get(r);if(!a)throw new Error(`cannot run inference. invalid session id: ${r}`);let u=a[0],l=a[1],d=a[2],p=a[3],h=a[4],y=a[5],b=e.length,w=t.length,T=0,x=[],_=[],A=[],P=[],k=s.stackSave(),N=s.stackAlloc(b*4),j=s.stackAlloc(b*4),Z=s.stackAlloc(w*4),se=s.stackAlloc(w*4);try{[T,x]=tg(i);for(let H=0;H<b;H++)R0(n[H],_,P,r,e[H],h);for(let H=0;H<w;H++)R0(o[H],A,P,r,b+t[H],h);let Q=N/4,X=j/4,Be=Z/4,qe=se/4;for(let H=0;H<b;H++)s.HEAPU32[Q++]=_[H],s.HEAPU32[X++]=l[e[H]];for(let H=0;H<w;H++)s.HEAPU32[Be++]=A[H],s.HEAPU32[qe++]=d[t[H]];if(p&&!y){let{handle:H,outputPreferredLocations:Me,outputPreferredLocationsEncoded:Pe}=p;if(l.length!==b)throw new Error(`input count from feeds (${b}) is expected to be always equal to model's input count (${l.length}).`);for(let Ie=0;Ie<b;Ie++){let fe=e[Ie];await s._OrtBindInput(H,l[fe],_[Ie])!==0&&nt(`Can't bind input[${Ie}] for session=${r}.`)}for(let Ie=0;Ie<w;Ie++){let fe=t[Ie];o[Ie]?.[3]?s._OrtBindOutput(H,d[fe],A[Ie],0)!==0&&nt(`Can't bind pre-allocated output[${Ie}] for session=${r}.`):s._OrtBindOutput(H,d[fe],0,Pe[fe])!==0&&nt(`Can't bind output[${Ie}] to ${Me[Ie]} for session=${r}.`)}Rn.set(r,[u,l,d,p,h,!0])}s.jsepOnRunStart?.(u);let V;p?V=await s._OrtRunWithBinding(u,p.handle,w,Z,T):V=await s._OrtRun(u,j,N,b,se,w,Z,T),V!==0&&nt("failed to call OrtRun().");let ie=[];for(let H=0;H<w;H++){let Me=s.HEAPU32[Z/4+H];if(Me===A[H]){ie.push(o[H]);continue}let Pe=s.stackSave(),Ie=s.stackAlloc(4*4),fe=!1,Ee,Te=0;try{s._OrtGetTensorData(Me,Ie,Ie+4,Ie+8,Ie+12)!==0&&nt(`Can't access output tensor data on index ${H}.`);let q=Ie/4,ue=s.HEAPU32[q++];Te=s.HEAPU32[q++];let ke=s.HEAPU32[q++],Et=s.HEAPU32[q++],xt=[];for(let yt=0;yt<Et;yt++)xt.push(s.HEAPU32[ke/4+yt]);s._OrtFree(ke);let Ct=xt.reduce((yt,ft)=>yt*ft,1);Ee=sn(ue);let mt=p?.outputPreferredLocations[t[H]];if(Ee==="string"){if(mt==="gpu-buffer")throw new Error("String tensor is not supported on GPU.");let yt=[],ft=Te/4;for(let Dt=0;Dt<Ct;Dt++){let Kr=s.HEAPU32[ft++],Jt=Dt===Ct-1?void 0:s.HEAPU32[ft]-Kr;yt.push(s.UTF8ToString(Kr,Jt))}ie.push([Ee,xt,yt,"cpu"])}else if(mt==="gpu-buffer"&&Ct>0){let yt=s.jsepGetBuffer;if(!yt)throw new Error('preferredLocation "gpu-buffer" is not supported without using WebGPU.');let ft=yt(Te),Dt=kn(ue);if(Dt===void 0||!Qa(Ee))throw new Error(`Unsupported data type: ${Ee}`);fe=!0,ie.push([Ee,xt,{gpuBuffer:ft,download:s.jsepCreateDownloader(ft,Ct*Dt,Ee),dispose:()=>{s._OrtReleaseTensor(Me)}},"gpu-buffer"])}else{let yt=Ja(Ee),ft=new yt(Ct);new Uint8Array(ft.buffer,ft.byteOffset,ft.byteLength).set(s.HEAPU8.subarray(Te,Te+ft.byteLength)),ie.push([Ee,xt,ft,"cpu"])}}finally{s.stackRestore(Pe),Ee==="string"&&Te&&s._free(Te),fe||s._OrtReleaseTensor(Me)}}return p&&!h&&(s._OrtClearBoundOutputs(p.handle),Rn.set(r,[u,l,d,p,h,!1])),ie}finally{s.stackRestore(k),_.forEach(Q=>s._OrtReleaseTensor(Q)),A.forEach(Q=>s._OrtReleaseTensor(Q)),P.forEach(Q=>s._free(Q)),T!==0&&s._OrtReleaseRunOptions(T),x.forEach(Q=>s._free(Q))}},F0=r=>{let e=ht(),n=Rn.get(r);if(!n)throw new Error("invalid session id");let t=n[0],o=e._OrtEndProfiling(t);o===0&&nt("Can't get an profile file name."),e._OrtFree(o)},V0=r=>{let e=[];for(let n of r){let t=n[2];!Array.isArray(t)&&"buffer"in t&&e.push(t.buffer)}return e}});var W0=st((ZL,NT)=>{NT.exports='/*!\n * ONNX Runtime Web v1.18.0\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n"use strict";(()=>{var Oo=Object.defineProperty;var pc=Object.getOwnPropertyDescriptor;var mc=Object.getOwnPropertyNames;var fc=Object.prototype.hasOwnProperty;var Z=(e,t)=>()=>(e&&(t=e(e=0)),t);var Vr=(e,t)=>()=>(t||e((t={exports:{}}).exports,t),t.exports),Vn=(e,t)=>{for(var r in t)Oo(e,r,{get:t[r],enumerable:!0})},hc=(e,t,r,o)=>{if(t&&typeof t=="object"||typeof t=="function")for(let n of mc(t))!fc.call(e,n)&&n!==r&&Oo(e,n,{get:()=>t[n],enumerable:!(o=pc(t,n))||o.enumerable});return e};var Xt=e=>hc(Oo({},"__esModule",{value:!0}),e);var Nn={};Vn(Nn,{createReadStream:()=>Ma,readFile:()=>gc,readFileSync:()=>yc});var gc,yc,Ma,Wn=Z(()=>{gc=void 0,yc=void 0,Ma=void 0});var ko={};Vn(ko,{join:()=>bc});var bc,Po=Z(()=>{bc=void 0});var Va=Vr((Ua,Ro)=>{"use strict";var za=(()=>{var e=typeof document<"u"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename<"u"&&(e=e||__filename),function(t={}){var r=t,o,n;r.ready=new Promise((i,d)=>{o=i,n=d}),r.mountExternalData=(i,d)=>{(r.MountedFiles||(r.MountedFiles=new Map)).set(i,d)},r.unmountExternalData=()=>{delete r.MountedFiles};let s=()=>{let i=(p,y,I)=>(...O)=>{let D=oe.currData,N=y?.(),F=p(...O),J=y?.();return N!==J&&(p=J,I(N),I=null,y=null),oe.currData!=D?oe.whenDone():F},d=p=>async(...y)=>{try{if(r.jsepSessionState)throw new Error("Session already started");let I=r.jsepSessionState={sessionHandle:y[0],errors:[]},O=await p(...y);if(r.jsepSessionState!==I)throw new Error("Session mismatch");r.jsepBackend?.flush();let D=I.errors;if(D.length>0){let N=await Promise.all(D);if(N=N.filter(F=>F),N.length>0)throw new Error(N.join(`\n`))}return O}finally{r.jsepSessionState=null}};r._OrtCreateSession=i(r._OrtCreateSession,()=>r._OrtCreateSession,p=>r._OrtCreateSession=p),r._OrtRun=d(i(r._OrtRun,()=>r._OrtRun,p=>r._OrtRun=p)),r._OrtRunWithBinding=d(i(r._OrtRunWithBinding,()=>r._OrtRunWithBinding,p=>r._OrtRunWithBinding=p)),r._OrtBindInput=i(r._OrtBindInput,()=>r._OrtBindInput,p=>r._OrtBindInput=p),s=void 0};r.jsepInit=(i,d)=>{if(s?.(),i==="webgpu"){[r.jsepBackend,r.jsepAlloc,r.jsepFree,r.jsepCopy,r.jsepCopyAsync,r.jsepCreateKernel,r.jsepReleaseKernel,r.jsepRunKernel,r.jsepCaptureBegin,r.jsepCaptureEnd,r.jsepReplay]=d;let p=r.jsepBackend;r.jsepRegisterBuffer=(y,I,O,D)=>p.registerBuffer(y,I,O,D),r.jsepGetBuffer=y=>p.getBuffer(y),r.jsepCreateDownloader=(y,I,O)=>p.createDownloader(y,I,O),r.jsepOnReleaseSession=y=>{p.onReleaseSession(y)},r.jsepOnRunStart=y=>p.onRunStart(y)}};var u=Object.assign({},r),c=[],a="./this.program",f=(i,d)=>{throw d},g=typeof window=="object",h=typeof importScripts=="function",w=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",_="";function v(i){return r.locateFile?r.locateFile(i,_):_+i}var $,C,x;if(w){var S=(Wn(),Xt(Nn)),T=(Po(),Xt(ko));h?_=T.dirname(_)+"/":_=__dirname+"/",$=(i,d)=>(i=dt(i)?new URL(i):T.normalize(i),S.readFileSync(i,d?void 0:"utf8")),x=i=>{var d=$(i,!0);return d.buffer||(d=new Uint8Array(d)),d},C=(i,d,p,y=!0)=>{i=dt(i)?new URL(i):T.normalize(i),S.readFile(i,y?void 0:"utf8",(I,O)=>{I?p(I):d(y?O.buffer:O)})},!r.thisProgram&&process.argv.length>1&&(a=process.argv[1].replace(/\\\\/g,"/")),c=process.argv.slice(2),f=(i,d)=>{throw process.exitCode=i,d},r.inspect=()=>"[Emscripten Module object]"}else(g||h)&&(h?_=self.location.href:typeof document<"u"&&document.currentScript&&(_=document.currentScript.src),e&&(_=e),_.indexOf("blob:")!==0?_=_.substr(0,_.replace(/[?#].*/,"").lastIndexOf("/")+1):_="",$=i=>{var d=new XMLHttpRequest;return d.open("GET",i,!1),d.send(null),d.responseText},h&&(x=i=>{var d=new XMLHttpRequest;return d.open("GET",i,!1),d.responseType="arraybuffer",d.send(null),new Uint8Array(d.response)}),C=(i,d,p)=>{var y=new XMLHttpRequest;y.open("GET",i,!0),y.responseType="arraybuffer",y.onload=()=>{if(y.status==200||y.status==0&&y.response){d(y.response);return}p()},y.onerror=p,y.send(null)});var E=console.log.bind(console),P=console.error.bind(console);Object.assign(r,u),u=null,r.arguments&&(c=r.arguments);var z;typeof WebAssembly!="object"&&lt("no native wasm support detected");var H,K=!1,re,q,ce,Se,Pe,U,Q,W,Ce,we,he;function ne(){var i=H.buffer;r.HEAP8=q=new Int8Array(i),r.HEAP16=Se=new Int16Array(i),r.HEAPU8=ce=new Uint8Array(i),r.HEAPU16=Pe=new Uint16Array(i),r.HEAP32=U=new Int32Array(i),r.HEAPU32=Q=new Uint32Array(i),r.HEAPF32=W=new Float32Array(i),r.HEAPF64=he=new Float64Array(i),r.HEAP64=Ce=new BigInt64Array(i),r.HEAPU64=we=new BigUint64Array(i)}var be=[],me=[],Ke=[],G=!1;function ee(){if(r.preRun)for(typeof r.preRun=="function"&&(r.preRun=[r.preRun]);r.preRun.length;)qe(r.preRun.shift());Lt(be)}function _e(){G=!0,Lt(me)}function Xe(){Lt(Ke)}function qe(i){be.unshift(i)}function Qe(i){me.unshift(i)}var He=0,je=null,Ge=null;function et(i){He++}function Dt(i){if(He--,He==0&&(je!==null&&(clearInterval(je),je=null),Ge)){var d=Ge;Ge=null,d()}}function lt(i){i="Aborted("+i+")",P(i),K=!0,re=1,i+=". Build with -sASSERTIONS for more info.";var d=new WebAssembly.RuntimeError(i);throw n(d),d}var jr="data:application/octet-stream;base64,",yr=i=>i.startsWith(jr),dt=i=>i.startsWith("file://"),Ot;Ot="ort-wasm-simd.wasm",yr(Ot)||(Ot=v(Ot));function kt(i){if(i==Ot&&z)return new Uint8Array(z);if(x)return x(i);throw"both async and sync fetching of the wasm failed"}function Kr(i){if(!z&&(g||h)){if(typeof fetch=="function"&&!dt(i))return fetch(i,{credentials:"same-origin"}).then(d=>{if(!d.ok)throw"failed to load wasm binary file at \'"+i+"\'";return d.arrayBuffer()}).catch(()=>kt(i));if(C)return new Promise((d,p)=>{C(i,y=>d(new Uint8Array(y)),p)})}return Promise.resolve().then(()=>kt(i))}function qr(i,d,p){return Kr(i).then(y=>WebAssembly.instantiate(y,d)).then(y=>y).then(p,y=>{P(`failed to asynchronously prepare wasm: ${y}`),lt(y)})}function Yr(i,d,p,y){return!i&&typeof WebAssembly.instantiateStreaming=="function"&&!yr(d)&&!dt(d)&&!w&&typeof fetch=="function"?fetch(d,{credentials:"same-origin"}).then(I=>{var O=WebAssembly.instantiateStreaming(I,p);return O.then(y,function(D){return P(`wasm streaming compile failed: ${D}`),P("falling back to ArrayBuffer instantiation"),qr(d,p,y)})}):qr(d,p,y)}function yo(){var i={a:Od};function d(y,I){return se=y.exports,se=oe.instrumentWasmExports(se),se=dc(se),H=se.ja,ne(),Qe(se.ka),Dt("wasm-instantiate"),se}et("wasm-instantiate");function p(y){d(y.instance)}if(r.instantiateWasm)try{return r.instantiateWasm(i,d)}catch(y){P(`Module.instantiateWasm callback failed with error: ${y}`),n(y)}return Yr(z,Ot,i,p).catch(n),{}}var Bt={1377320:(i,d,p,y)=>{if(typeof r>"u"||!r.MountedFiles)return 1;let I=Ye(i>>>0);I.startsWith("./")&&(I=I.substring(2));let O=r.MountedFiles.get(I);if(!O)return 2;let D=d>>>0,N=p>>>0,F=y>>>0;if(D+N>O.byteLength)return 3;try{return ce.set(O.subarray(D,D+N),F>>>0),0}catch{return 4}},1377821:(i,d,p)=>{let y=i,I=d,O=Ye(p),D=new Uint8Array(I);if(D.set(ce.subarray(y>>>0,y+I>>>0)),typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string")(Wn(),Xt(Nn)).writeFileSync(O,D);else{let N=new File([D],O,{type:"application/octet-stream"}),F=URL.createObjectURL(N);window.open(F,"_blank")}},1378329:()=>{r.jsepCaptureBegin()},1378360:()=>{r.jsepCaptureEnd()},1378389:()=>{r.jsepReplay()},1378414:i=>r.jsepAlloc(i),1378447:i=>r.jsepFree(i),1378479:(i,d,p)=>{r.jsepCopy(i,d,p,!0)},1378518:(i,d,p)=>{r.jsepCopy(i,d,p)},1378551:i=>{r.jsepCreateKernel("Abs",i,void 0)},1378602:i=>{r.jsepCreateKernel("Neg",i,void 0)},1378653:i=>{r.jsepCreateKernel("Floor",i,void 0)},1378706:i=>{r.jsepCreateKernel("Ceil",i,void 0)},1378758:i=>{r.jsepCreateKernel("Reciprocal",i,void 0)},1378816:i=>{r.jsepCreateKernel("Sqrt",i,void 0)},1378868:i=>{r.jsepCreateKernel("Exp",i,void 0)},1378919:i=>{r.jsepCreateKernel("Erf",i,void 0)},1378970:i=>{r.jsepCreateKernel("Sigmoid",i,void 0)},1379025:(i,d,p)=>{r.jsepCreateKernel("HardSigmoid",i,{alpha:d,beta:p})},1379104:i=>{r.jsepCreateKernel("Log",i,void 0)},1379155:i=>{r.jsepCreateKernel("Sin",i,void 0)},1379206:i=>{r.jsepCreateKernel("Cos",i,void 0)},1379257:i=>{r.jsepCreateKernel("Tan",i,void 0)},1379308:i=>{r.jsepCreateKernel("Asin",i,void 0)},1379360:i=>{r.jsepCreateKernel("Acos",i,void 0)},1379412:i=>{r.jsepCreateKernel("Atan",i,void 0)},1379464:i=>{r.jsepCreateKernel("Sinh",i,void 0)},1379516:i=>{r.jsepCreateKernel("Cosh",i,void 0)},1379568:i=>{r.jsepCreateKernel("Asinh",i,void 0)},1379621:i=>{r.jsepCreateKernel("Acosh",i,void 0)},1379674:i=>{r.jsepCreateKernel("Atanh",i,void 0)},1379727:i=>{r.jsepCreateKernel("Tanh",i,void 0)},1379779:i=>{r.jsepCreateKernel("Not",i,void 0)},1379830:(i,d,p)=>{r.jsepCreateKernel("Clip",i,{min:d,max:p})},1379899:i=>{r.jsepCreateKernel("Clip",i,void 0)},1379951:(i,d)=>{r.jsepCreateKernel("Elu",i,{alpha:d})},1380009:i=>{r.jsepCreateKernel("Relu",i,void 0)},1380061:(i,d)=>{r.jsepCreateKernel("LeakyRelu",i,{alpha:d})},1380125:(i,d)=>{r.jsepCreateKernel("ThresholdedRelu",i,{alpha:d})},1380195:(i,d)=>{r.jsepCreateKernel("Cast",i,{to:d})},1380253:i=>{r.jsepCreateKernel("Add",i,void 0)},1380304:i=>{r.jsepCreateKernel("Sub",i,void 0)},1380355:i=>{r.jsepCreateKernel("Mul",i,void 0)},1380406:i=>{r.jsepCreateKernel("Div",i,void 0)},1380457:i=>{r.jsepCreateKernel("Pow",i,void 0)},1380508:i=>{r.jsepCreateKernel("Equal",i,void 0)},1380561:i=>{r.jsepCreateKernel("Greater",i,void 0)},1380616:i=>{r.jsepCreateKernel("GreaterOrEqual",i,void 0)},1380678:i=>{r.jsepCreateKernel("Less",i,void 0)},1380730:i=>{r.jsepCreateKernel("LessOrEqual",i,void 0)},1380789:(i,d,p,y,I)=>{r.jsepCreateKernel("ReduceMean",i,{keepDims:!!d,noopWithEmptyAxes:!!p,axes:y?Array.from(U.subarray(y>>>0,I>>>0)):[]})},1380948:(i,d,p,y,I)=>{r.jsepCreateKernel("ReduceMax",i,{keepDims:!!d,noopWithEmptyAxes:!!p,axes:y?Array.from(U.subarray(y>>>0,I>>>0)):[]})},1381106:(i,d,p,y,I)=>{r.jsepCreateKernel("ReduceMin",i,{keepDims:!!d,noopWithEmptyAxes:!!p,axes:y?Array.from(U.subarray(y>>>0,I>>>0)):[]})},1381264:(i,d,p,y,I)=>{r.jsepCreateKernel("ReduceProd",i,{keepDims:!!d,noopWithEmptyAxes:!!p,axes:y?Array.from(U.subarray(y>>>0,I>>>0)):[]})},1381423:(i,d,p,y,I)=>{r.jsepCreateKernel("ReduceSum",i,{keepDims:!!d,noopWithEmptyAxes:!!p,axes:y?Array.from(U.subarray(y>>>0,I>>>0)):[]})},1381581:(i,d,p,y,I)=>{r.jsepCreateKernel("ReduceL1",i,{keepDims:!!d,noopWithEmptyAxes:!!p,axes:y?Array.from(U.subarray(y>>>0,I>>>0)):[]})},1381738:(i,d,p,y,I)=>{r.jsepCreateKernel("ReduceL2",i,{keepDims:!!d,noopWithEmptyAxes:!!p,axes:y?Array.from(U.subarray(y>>>0,I>>>0)):[]})},1381895:(i,d,p,y,I)=>{r.jsepCreateKernel("ReduceLogSum",i,{keepDims:!!d,noopWithEmptyAxes:!!p,axes:y?Array.from(U.subarray(y>>>0,I>>>0)):[]})},1382056:(i,d,p,y,I)=>{r.jsepCreateKernel("ReduceSumSquare",i,{keepDims:!!d,noopWithEmptyAxes:!!p,axes:y?Array.from(U.subarray(y>>>0,I>>>0)):[]})},1382220:(i,d,p,y,I)=>{r.jsepCreateKernel("ReduceLogSumExp",i,{keepDims:!!d,noopWithEmptyAxes:!!p,axes:y?Array.from(U.subarray(y>>>0,I>>>0)):[]})},1382384:i=>{r.jsepCreateKernel("Where",i,void 0)},1382437:(i,d,p)=>{r.jsepCreateKernel("Transpose",i,{perm:d?Array.from(U.subarray(d>>>0,p>>>0)):[]})},1382545:(i,d,p,y,I,O,D,N,F,J,te,le,ye,De,We)=>{r.jsepCreateKernel("ConvTranspose",i,{format:F?"NHWC":"NCHW",autoPad:d,dilations:[p],group:y,kernelShape:[I],pads:[O,D],strides:[N],wIsConst:()=>!!q[J>>>0],outputPadding:te?Array.from(U.subarray(te>>>0,le>>>0)):[],outputShape:ye?Array.from(U.subarray(ye>>>0,De>>>0)):[],activation:Ye(We)})},1382946:(i,d,p,y,I,O,D,N,F,J,te,le,ye,De)=>{r.jsepCreateKernel("ConvTranspose",i,{format:N?"NHWC":"NCHW",autoPad:d,dilations:Array.from(U.subarray(p>>>0,(p>>>0)+2>>>0)),group:y,kernelShape:Array.from(U.subarray(I>>>0,(I>>>0)+2>>>0)),pads:Array.from(U.subarray(O>>>0,(O>>>0)+4>>>0)),strides:Array.from(U.subarray(D>>>0,(D>>>0)+2>>>0)),wIsConst:()=>!!q[F>>>0],outputPadding:J?Array.from(U.subarray(J>>>0,te>>>0)):[],outputShape:le?Array.from(U.subarray(le>>>0,ye>>>0)):[],activation:Ye(De)})},1383511:(i,d,p,y,I,O,D,N,F,J,te,le,ye,De,We)=>{r.jsepCreateKernel("ConvTranspose",i,{format:F?"NHWC":"NCHW",autoPad:d,dilations:[p],group:y,kernelShape:[I],pads:[O,D],strides:[N],wIsConst:()=>!!q[J>>>0],outputPadding:te?Array.from(U.subarray(te>>>0,le>>>0)):[],outputShape:ye?Array.from(U.subarray(ye>>>0,De>>>0)):[],activation:Ye(We)})},1383912:(i,d,p,y,I,O,D,N,F,J,te,le,ye,De)=>{r.jsepCreateKernel("ConvTranspose",i,{format:N?"NHWC":"NCHW",autoPad:d,dilations:Array.from(U.subarray(p>>>0,(p>>>0)+2>>>0)),group:y,kernelShape:Array.from(U.subarray(I>>>0,(I>>>0)+2>>>0)),pads:Array.from(U.subarray(O>>>0,(O>>>0)+4>>>0)),strides:Array.from(U.subarray(D>>>0,(D>>>0)+2>>>0)),wIsConst:()=>!!q[F>>>0],outputPadding:J?Array.from(U.subarray(J>>>0,te>>>0)):[],outputShape:le?Array.from(U.subarray(le>>>0,ye>>>0)):[],activation:Ye(De)})},1384477:(i,d)=>{r.jsepCreateKernel("GlobalAveragePool",i,{format:d?"NHWC":"NCHW"})},1384568:(i,d,p,y,I,O,D,N,F,J,te,le,ye,De,We,Je)=>{r.jsepCreateKernel("AveragePool",i,{format:Je?"NHWC":"NCHW",auto_pad:d,ceil_mode:p,count_include_pad:y,storage_order:I,dilations:[O,D],kernel_shape:[N,F],pads:[J,te,le,ye],strides:[De,We]})},1384852:(i,d)=>{r.jsepCreateKernel("GlobalAveragePool",i,{format:d?"NHWC":"NCHW"})},1384943:(i,d,p,y,I,O,D,N,F,J,te,le,ye,De,We,Je)=>{r.jsepCreateKernel("AveragePool",i,{format:Je?"NHWC":"NCHW",auto_pad:d,ceil_mode:p,count_include_pad:y,storage_order:I,dilations:[O,D],kernel_shape:[N,F],pads:[J,te,le,ye],strides:[De,We]})},1385227:(i,d)=>{r.jsepCreateKernel("GlobalMaxPool",i,{format:d?"NHWC":"NCHW"})},1385314:(i,d,p,y,I,O,D,N,F,J,te,le,ye,De,We,Je)=>{r.jsepCreateKernel("MaxPool",i,{format:Je?"NHWC":"NCHW",auto_pad:d,ceil_mode:p,count_include_pad:y,storage_order:I,dilations:[O,D],kernel_shape:[N,F],pads:[J,te,le,ye],strides:[De,We]})},1385594:(i,d)=>{r.jsepCreateKernel("GlobalMaxPool",i,{format:d?"NHWC":"NCHW"})},1385681:(i,d,p,y,I,O,D,N,F,J,te,le,ye,De,We,Je)=>{r.jsepCreateKernel("MaxPool",i,{format:Je?"NHWC":"NCHW",auto_pad:d,ceil_mode:p,count_include_pad:y,storage_order:I,dilations:[O,D],kernel_shape:[N,F],pads:[J,te,le,ye],strides:[De,We]})},1385961:(i,d,p,y,I)=>{r.jsepCreateKernel("Gemm",i,{alpha:d,beta:p,transA:y,transB:I})},1386065:i=>{r.jsepCreateKernel("MatMul",i,void 0)},1386119:(i,d,p,y)=>{r.jsepCreateKernel("ArgMax",i,{keepDims:!!d,selectLastIndex:!!p,axis:y})},1386227:(i,d,p,y)=>{r.jsepCreateKernel("ArgMin",i,{keepDims:!!d,selectLastIndex:!!p,axis:y})},1386335:(i,d)=>{r.jsepCreateKernel("Softmax",i,{axis:d})},1386398:(i,d)=>{r.jsepCreateKernel("Concat",i,{axis:d})},1386458:(i,d,p,y,I)=>{r.jsepCreateKernel("Split",i,{axis:d,numOutputs:p,splitSizes:y?Array.from(U.subarray(y>>>0,I>>>0)):[]})},1386598:i=>{r.jsepCreateKernel("Expand",i,void 0)},1386652:(i,d)=>{r.jsepCreateKernel("Gather",i,{axis:Number(d)})},1386723:(i,d)=>{r.jsepCreateKernel("GatherElements",i,{axis:Number(d)})},1386802:(i,d,p,y,I,O,D,N,F,J,te)=>{r.jsepCreateKernel("Resize",i,{antialias:d,axes:p?Array.from(U.subarray(p>>>0,y>>>0)):[],coordinateTransformMode:Ye(I),cubicCoeffA:O,excludeOutside:D,extrapolationValue:N,keepAspectRatioPolicy:Ye(F),mode:Ye(J),nearestMode:Ye(te)})},1387148:(i,d,p,y,I,O,D)=>{r.jsepCreateKernel("Slice",i,{starts:d?Array.from(U.subarray(d>>>0,p>>>0)):[],ends:y?Array.from(U.subarray(y>>>0,I>>>0)):[],axes:O?Array.from(U.subarray(O>>>0,D>>>0)):[]})},1387364:i=>{r.jsepCreateKernel("Tile",i,void 0)},1387416:(i,d,p)=>{r.jsepCreateKernel("LayerNormalization",i,{axis:Number(d),epsilon:Number(p)})},1387523:(i,d,p)=>{r.jsepCreateKernel("InstanceNormalization",i,{epsilon:d,format:p?"NHWC":"NCHW"})},1387637:(i,d,p)=>{r.jsepCreateKernel("InstanceNormalization",i,{epsilon:d,format:p?"NHWC":"NCHW"})},1387751:i=>{r.jsepCreateKernel("Range",i,void 0)},1387804:(i,d)=>{r.jsepCreateKernel("Einsum",i,{equation:Ye(d)})},1387885:(i,d,p,y,I)=>{r.jsepCreateKernel("Pad",i,{mode:d,value:p,pads:y?Array.from(U.subarray(y>>>0,I>>>0)):[]})},1388012:(i,d,p,y,I,O)=>{r.jsepCreateKernel("BatchNormalization",i,{epsilon:d,momentum:p,spatial:!!I,trainingMode:!!y,format:O?"NHWC":"NCHW"})},1388181:(i,d,p,y,I,O)=>{r.jsepCreateKernel("BatchNormalization",i,{epsilon:d,momentum:p,spatial:!!I,trainingMode:!!y,format:O?"NHWC":"NCHW"})},1388350:(i,d,p)=>{r.jsepCreateKernel("CumSum",i,{exclusive:Number(d),reverse:Number(p)})},1388447:(i,d,p,y,I,O,D,N,F)=>{r.jsepCreateKernel("Attention",i,{numHeads:d,isUnidirectional:p,maskFilterValue:y,scale:I,doRotary:O,qkvHiddenSizes:D?Array.from(U.subarray(Number(N)>>>0,Number(N)+D>>>0)):[],pastPresentShareBuffer:!!F})},1388719:i=>{r.jsepCreateKernel("BiasAdd",i,void 0)},1388774:i=>{r.jsepCreateKernel("BiasSplitGelu",i,void 0)},1388835:i=>{r.jsepCreateKernel("FastGelu",i,void 0)},1388891:(i,d,p,y,I,O,D,N,F,J,te,le,ye)=>{r.jsepCreateKernel("Conv",i,{format:F?"NHWC":"NCHW",auto_pad:d,dilations:[p],group:y,kernel_shape:[I],pads:O?Array.from(U.subarray(O>>>0,D>>>0)):[],strides:[N],w_is_const:()=>!!q[J>>>0],activation:Ye(te),activation_params:le?Array.from(W.subarray(le>>>0,ye>>>0)):[]})},1389261:(i,d,p,y,I,O,D,N,F,J,te,le,ye,De,We,Je)=>{r.jsepCreateKernel("Conv",i,{format:le?"NHWC":"NCHW",auto_pad:d,dilations:[p,y],group:I,kernel_shape:[O,D],pads:N?Array.from(U.subarray(N>>>0,F>>>0)):[],strides:[J,te],w_is_const:()=>!!q[ye>>>0],activation:Ye(De),activation_params:We?Array.from(W.subarray(We>>>0,Je>>>0)):[]})},1389652:i=>{r.jsepCreateKernel("Gelu",i,void 0)},1389704:(i,d,p,y,I,O)=>{r.jsepCreateKernel("MatMulNBits",i,{k:d,n:p,accuracyLevel:y,bits:I,blockSize:O})},1389831:(i,d,p,y,I,O)=>{r.jsepCreateKernel("MultiHeadAttention",i,{numHeads:d,isUnidirectional:p,maskFilterValue:y,scale:I,doRotary:O})},1389990:(i,d,p,y,I)=>{r.jsepCreateKernel("RotaryEmbedding",i,{interleaved:!!d,numHeads:p,rotaryEmbeddingDim:y,scale:I})},1390129:(i,d)=>{r.jsepCreateKernel("SkipLayerNormalization",i,{epsilon:d})},1390210:i=>{r.jsepReleaseKernel(i)},1390244:(i,d)=>r.jsepRunKernel(i,d,r.jsepSessionState.sessionHandle,r.jsepSessionState.errors)};function br(i,d,p){return oe.handleAsync(async()=>{await r.jsepCopyAsync(i,d,p)})}function Ht(i){this.name="ExitStatus",this.message=`Program terminated with exit(${i})`,this.status=i}var Lt=i=>{for(;i.length>0;)i.shift()(r)};function Zr(i){this.excPtr=i,this.ptr=i-24,this.set_type=function(d){Q[this.ptr+4>>>2>>>0]=d},this.get_type=function(){return Q[this.ptr+4>>>2>>>0]},this.set_destructor=function(d){Q[this.ptr+8>>>2>>>0]=d},this.get_destructor=function(){return Q[this.ptr+8>>>2>>>0]},this.set_caught=function(d){d=d?1:0,q[this.ptr+12>>>0>>>0]=d},this.get_caught=function(){return q[this.ptr+12>>>0>>>0]!=0},this.set_rethrown=function(d){d=d?1:0,q[this.ptr+13>>>0>>>0]=d},this.get_rethrown=function(){return q[this.ptr+13>>>0>>>0]!=0},this.init=function(d,p){this.set_adjusted_ptr(0),this.set_type(d),this.set_destructor(p)},this.set_adjusted_ptr=function(d){Q[this.ptr+16>>>2>>>0]=d},this.get_adjusted_ptr=function(){return Q[this.ptr+16>>>2>>>0]},this.get_exception_ptr=function(){var d=Oa(this.get_type());if(d)return Q[this.excPtr>>>2>>>0];var p=this.get_adjusted_ptr();return p!==0?p:this.excPtr}}var vr=0,Xr=0,Qr=9007199254740992,tt=-9007199254740992,Mt=i=>i<tt||i>Qr?NaN:Number(i);function wr(i,d,p){i>>>=0,d>>>=0,p>>>=0;var y=new Zr(i);throw y.init(d,p),vr=i,Xr++,vr}var ge=i=>(U[Ca()>>>2>>>0]=i,i),Ft=typeof TextDecoder<"u"?new TextDecoder("utf8"):void 0,_r=(i,d,p)=>{d>>>=0;for(var y=d+p,I=d;i[I]&&!(I>=y);)++I;if(I-d>16&&i.buffer&&Ft)return Ft.decode(i.subarray(d,I));for(var O="";d<I;){var D=i[d++];if(!(D&128)){O+=String.fromCharCode(D);continue}var N=i[d++]&63;if((D&224)==192){O+=String.fromCharCode((D&31)<<6|N);continue}var F=i[d++]&63;if((D&240)==224?D=(D&15)<<12|N<<6|F:D=(D&7)<<18|N<<12|F<<6|i[d++]&63,D<65536)O+=String.fromCharCode(D);else{var J=D-65536;O+=String.fromCharCode(55296|J>>10,56320|J&1023)}}return O},Ye=(i,d)=>(i>>>=0,i?_r(ce,i,d):""),Pt={varargs:void 0,get(){var i=U[+Pt.varargs>>>2>>>0];return Pt.varargs+=4,i},getp(){return Pt.get()},getStr(i){var d=Ye(i);return d}};function bo(i,d,p){return p>>>=0,Pt.varargs=p,0}function Jr(i,d){d>>>=0}var jt=i=>{for(var d=0,p=0;p<i.length;++p){var y=i.charCodeAt(p);y<=127?d++:y<=2047?d+=2:y>=55296&&y<=57343?(d+=4,++p):d+=3}return d},$r=(i,d,p,y)=>{if(p>>>=0,!(y>0))return 0;for(var I=p,O=p+y-1,D=0;D<i.length;++D){var N=i.charCodeAt(D);if(N>=55296&&N<=57343){var F=i.charCodeAt(++D);N=65536+((N&1023)<<10)|F&1023}if(N<=127){if(p>=O)break;d[p++>>>0]=N}else if(N<=2047){if(p+1>=O)break;d[p++>>>0]=192|N>>6,d[p++>>>0]=128|N&63}else if(N<=65535){if(p+2>=O)break;d[p++>>>0]=224|N>>12,d[p++>>>0]=128|N>>6&63,d[p++>>>0]=128|N&63}else{if(p+3>=O)break;d[p++>>>0]=240|N>>18,d[p++>>>0]=128|N>>12&63,d[p++>>>0]=128|N>>6&63,d[p++>>>0]=128|N&63}}return d[p>>>0]=0,p-I},nr=(i,d,p)=>$r(i,ce,d,p);function Sr(i,d){i>>>=0,d>>>=0}function en(i,d,p){d>>>=0,p>>>=0}function tn(i,d,p){return p>>>=0,Pt.varargs=p,0}function rn(i,d){i>>>=0,d>>>=0}function nn(i,d,p){d>>>=0}function on(i,d,p,y){d>>>=0,p>>>=0}function an(i,d,p,y){d>>>=0,y>>>=0,Pt.varargs=y}function sn(i,d,p,y){d>>>=0,p>>>=0,y>>>=0}function un(i){i>>>=0}function ln(i,d){i>>>=0,d>>>=0}function dn(i,d,p){d>>>=0}var xr=i=>{if(i===null)return"null";var d=typeof i;return d==="object"||d==="array"||d==="function"?i.toString():""+i},cn=()=>{for(var i=new Array(256),d=0;d<256;++d)i[d]=String.fromCharCode(d);Cr=i},Cr,at=i=>{for(var d="",p=i;ce[p>>>0];)d+=Cr[ce[p++>>>0]];return d},Kt={},zt={},Ut={},Ar,vt=i=>{throw new Ar(i)},pn;function mn(i,d,p={}){var y=d.name;if(i||vt(`type "${y}" must have a positive integer typeid pointer`),zt.hasOwnProperty(i)){if(p.ignoreDuplicateRegistrations)return;vt(`Cannot register type \'${y}\' twice`)}if(zt[i]=d,delete Ut[i],Kt.hasOwnProperty(i)){var I=Kt[i];delete Kt[i],I.forEach(O=>O())}}function ct(i,d,p={}){if(!("argPackAdvance"in d))throw new TypeError("registerType registeredInstance requires argPackAdvance");return mn(i,d,p)}var or=(i,d,p)=>{switch(d){case 1:return p?y=>q[y>>>0>>>0]:y=>ce[y>>>0>>>0];case 2:return p?y=>Se[y>>>1>>>0]:y=>Pe[y>>>1>>>0];case 4:return p?y=>U[y>>>2>>>0]:y=>Q[y>>>2>>>0];case 8:return p?y=>Ce[y>>>3]:y=>we[y>>>3];default:throw new TypeError(`invalid integer width (${d}): ${i}`)}};function fn(i,d,p,y,I){i>>>=0,d>>>=0,p>>>=0,d=at(d);var O=d.indexOf("u")!=-1;O&&(I=(1n<<64n)-1n),ct(i,{name:d,fromWireType:D=>D,toWireType:function(D,N){if(typeof N!="bigint"&&typeof N!="number")throw new TypeError(`Cannot convert "${xr(N)}" to ${this.name}`);if(N<y||N>I)throw new TypeError(`Passing a number "${xr(N)}" from JS side to C/C++ side to an argument of type "${d}", which is outside the valid range [${y}, ${I}]!`);return N},argPackAdvance:wt,readValueFromPointer:or(d,p,!O),destructorFunction:null})}var wt=8;function Ne(i,d,p,y){i>>>=0,d>>>=0,d=at(d),ct(i,{name:d,fromWireType:function(I){return!!I},toWireType:function(I,O){return O?p:y},argPackAdvance:wt,readValueFromPointer:function(I){return this.fromWireType(ce[I>>>0])},destructorFunction:null})}function Ir(){Object.assign(ar.prototype,{get(i){return this.allocated[i]},has(i){return this.allocated[i]!==void 0},allocate(i){var d=this.freelist.pop()||this.allocated.length;return this.allocated[d]=i,d},free(i){this.allocated[i]=void 0,this.freelist.push(i)}})}function ar(){this.allocated=[void 0],this.freelist=[]}var ot=new ar;function qt(i){i>>>=0,i>=ot.reserved&&--ot.get(i).refcount===0&&ot.free(i)}var hn=()=>{for(var i=0,d=ot.reserved;d<ot.allocated.length;++d)ot.allocated[d]!==void 0&&++i;return i},gn=()=>{ot.allocated.push({value:void 0},{value:null},{value:!0},{value:!1}),ot.reserved=ot.allocated.length,r.count_emval_handles=hn},Me={toValue:i=>(i||vt("Cannot use deleted val. handle = "+i),ot.get(i).value),toHandle:i=>{switch(i){case void 0:return 1;case null:return 2;case!0:return 3;case!1:return 4;default:return ot.allocate({refcount:1,value:i})}}};function Tr(i){return this.fromWireType(U[i>>>2>>>0])}var yn=function(i,d){i>>>=0,d>>>=0,d=at(d),ct(i,{name:d,fromWireType:p=>{var y=Me.toValue(p);return qt(p),y},toWireType:(p,y)=>Me.toHandle(y),argPackAdvance:wt,readValueFromPointer:Tr,destructorFunction:null})},vo=(i,d)=>{switch(d){case 4:return function(p){return this.fromWireType(W[p>>>2>>>0])};case 8:return function(p){return this.fromWireType(he[p>>>3>>>0])};default:throw new TypeError(`invalid float width (${d}): ${i}`)}},bn=function(i,d,p){i>>>=0,d>>>=0,p>>>=0,d=at(d),ct(i,{name:d,fromWireType:y=>y,toWireType:(y,I)=>I,argPackAdvance:wt,readValueFromPointer:vo(d,p),destructorFunction:null})};function vn(i,d,p,y,I){i>>>=0,d>>>=0,p>>>=0,d=at(d),I===-1&&(I=4294967295);var O=te=>te;if(y===0){var D=32-8*p;O=te=>te<<D>>>D}var N=d.includes("unsigned"),F=(te,le)=>{},J;N?J=function(te,le){return F(le,this.name),le>>>0}:J=function(te,le){return F(le,this.name),le},ct(i,{name:d,fromWireType:O,toWireType:J,argPackAdvance:wt,readValueFromPointer:or(d,p,y!==0),destructorFunction:null})}function wn(i,d,p){i>>>=0,p>>>=0;var y=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array,BigInt64Array,BigUint64Array],I=y[d];function O(D){var N=Q[D>>>2>>>0],F=Q[D+4>>>2>>>0];return new I(q.buffer,F,N)}p=at(p),ct(i,{name:p,fromWireType:O,argPackAdvance:wt,readValueFromPointer:O},{ignoreDuplicateRegistrations:!0})}function wo(i){return this.fromWireType(Q[i>>>2>>>0])}function _o(i,d){i>>>=0,d>>>=0,d=at(d);var p=d==="std::string";ct(i,{name:d,fromWireType(y){var I=Q[y>>>2>>>0],O=y+4,D;if(p)for(var N=O,F=0;F<=I;++F){var J=O+F;if(F==I||ce[J>>>0]==0){var te=J-N,le=Ye(N,te);D===void 0?D=le:(D+=String.fromCharCode(0),D+=le),N=J+1}}else{for(var ye=new Array(I),F=0;F<I;++F)ye[F]=String.fromCharCode(ce[O+F>>>0]);D=ye.join("")}return $t(y),D},toWireType(y,I){I instanceof ArrayBuffer&&(I=new Uint8Array(I));var O,D=typeof I=="string";D||I instanceof Uint8Array||I instanceof Uint8ClampedArray||I instanceof Int8Array||vt("Cannot pass non-string to std::string"),p&&D?O=jt(I):O=I.length;var N=zr(4+O+1),F=N+4;if(Q[N>>>2>>>0]=O,p&&D)nr(I,F,O+1);else if(D)for(var J=0;J<O;++J){var te=I.charCodeAt(J);te>255&&($t(F),vt("String has UTF-16 code units that do not fit in 8 bits")),ce[F+J>>>0]=te}else for(var J=0;J<O;++J)ce[F+J>>>0]=I[J];return y!==null&&y.push($t,N),N},argPackAdvance:wt,readValueFromPointer:wo,destructorFunction(y){$t(y)}})}var Er=typeof TextDecoder<"u"?new TextDecoder("utf-16le"):void 0,ir=(i,d)=>{for(var p=i,y=p>>1,I=y+d/2;!(y>=I)&&Pe[y>>>0];)++y;if(p=y<<1,p-i>32&&Er)return Er.decode(ce.subarray(i>>>0,p>>>0));for(var O="",D=0;!(D>=d/2);++D){var N=Se[i+D*2>>>1>>>0];if(N==0)break;O+=String.fromCharCode(N)}return O},$o=(i,d,p)=>{if(p??=2147483647,p<2)return 0;p-=2;for(var y=d,I=p<i.length*2?p/2:i.length,O=0;O<I;++O){var D=i.charCodeAt(O);Se[d>>>1>>>0]=D,d+=2}return Se[d>>>1>>>0]=0,d-y},_t=i=>i.length*2,pt=(i,d)=>{for(var p=0,y="";!(p>=d/4);){var I=U[i+p*4>>>2>>>0];if(I==0)break;if(++p,I>=65536){var O=I-65536;y+=String.fromCharCode(55296|O>>10,56320|O&1023)}else y+=String.fromCharCode(I)}return y},_n=(i,d,p)=>{if(d>>>=0,p??=2147483647,p<4)return 0;for(var y=d,I=y+p-4,O=0;O<i.length;++O){var D=i.charCodeAt(O);if(D>=55296&&D<=57343){var N=i.charCodeAt(++O);D=65536+((D&1023)<<10)|N&1023}if(U[d>>>2>>>0]=D,d+=4,d+4>I)break}return U[d>>>2>>>0]=0,d-y},sr=i=>{for(var d=0,p=0;p<i.length;++p){var y=i.charCodeAt(p);y>=55296&&y<=57343&&++p,d+=4}return d},$n=function(i,d,p){i>>>=0,d>>>=0,p>>>=0,p=at(p);var y,I,O,D,N;d===2?(y=ir,I=$o,D=_t,O=()=>Pe,N=1):d===4&&(y=pt,I=_n,D=sr,O=()=>Q,N=2),ct(i,{name:p,fromWireType:F=>{for(var J=Q[F>>>2>>>0],te=O(),le,ye=F+4,De=0;De<=J;++De){var We=F+4+De*d;if(De==J||te[We>>>N]==0){var Je=We-ye,Ur=y(ye,Je);le===void 0?le=Ur:(le+=String.fromCharCode(0),le+=Ur),ye=We+d}}return $t(F),le},toWireType:(F,J)=>{typeof J!="string"&&vt(`Cannot pass non-string to C++ string type ${p}`);var te=D(J),le=zr(4+te+d);return Q[le>>>2]=te>>N,I(J,le+4,te+d),F!==null&&F.push($t,le),le},argPackAdvance:wt,readValueFromPointer:Tr,destructorFunction(F){$t(F)}})},Sn=function(i,d){i>>>=0,d>>>=0,d=at(d),ct(i,{isVoid:!0,name:d,argPackAdvance:0,fromWireType:()=>{},toWireType:(p,y)=>{}})},So=1,Or=()=>So,xo=i=>{var d=Aa(i),p=at(d);return $t(d),p},kr=(i,d)=>{var p=zt[i];return p===void 0&&vt(d+" has unknown type "+xo(i)),p},xn=(i,d,p)=>{var y=[],I=i.toWireType(y,p);return y.length&&(Q[d>>>2>>>0]=Me.toHandle(y)),I};function Co(i,d,p){return i>>>=0,d>>>=0,p>>>=0,i=Me.toValue(i),d=kr(d,"emval::as"),xn(d,p,i)}var ur=i=>{try{return i()}catch(d){lt(d)}},Cn=i=>{if(i instanceof Ht||i=="unwind")return re;f(1,i)},Ao=0,An=()=>Ao>0,lr=i=>{re=i,An()||(r.onExit?.(i),K=!0),f(i,new Ht(i))},Pr=(i,d)=>{re=i,lr(i)},In=Pr,Tn=()=>{if(!An())try{In(re)}catch(i){Cn(i)}},En=i=>{if(!K)try{i(),Tn()}catch(d){Cn(d)}},oe={instrumentWasmImports(i){var d=/^(invoke_.*|__asyncjs__.*)$/;for(let[p,y]of Object.entries(i)){let I=y.sig;if(typeof y=="function"){let O=y.isAsync||d.test(p)}}},instrumentWasmExports(i){var d={};for(let[p,y]of Object.entries(i))typeof y=="function"?d[p]=function(){oe.exportCallStack.push(p);try{return y.apply(null,arguments)}finally{if(!K){var I=oe.exportCallStack.pop();oe.maybeStopUnwind()}}}:d[p]=y;return d},State:{Normal:0,Unwinding:1,Rewinding:2,Disabled:3},state:0,StackSize:65536,currData:null,handleSleepReturnValue:0,exportCallStack:[],callStackNameToId:{},callStackIdToName:{},callStackId:0,asyncPromiseHandlers:null,sleepCallbacks:[],getCallStackId(i){var d=oe.callStackNameToId[i];return d===void 0&&(d=oe.callStackId++,oe.callStackNameToId[i]=d,oe.callStackIdToName[d]=i),d},maybeStopUnwind(){oe.currData&&oe.state===oe.State.Unwinding&&oe.exportCallStack.length===0&&(oe.state=oe.State.Normal,ur(Pa),typeof Fibers<"u"&&Fibers.trampoline())},whenDone(){return new Promise((i,d)=>{oe.asyncPromiseHandlers={resolve:i,reject:d}})},allocateData(){var i=zr(12+oe.StackSize);return oe.setDataHeader(i,i+12,oe.StackSize),oe.setDataRewindFunc(i),i},setDataHeader(i,d,p){Q[i>>>2>>>0]=d,Q[i+4>>>2>>>0]=d+p},setDataRewindFunc(i){var d=oe.exportCallStack[0],p=oe.getCallStackId(d);U[i+8>>>2>>>0]=p},getDataRewindFunc(i){var d=U[i+8>>>2>>>0],p=oe.callStackIdToName[d],y=se[p];return y},doRewind(i){var d=oe.getDataRewindFunc(i);return d()},handleSleep(i){if(!K){if(oe.state===oe.State.Normal){var d=!1,p=!1;i((y=0)=>{if(!K&&(oe.handleSleepReturnValue=y,d=!0,!!p)){oe.state=oe.State.Rewinding,ur(()=>Ra(oe.currData)),typeof Browser<"u"&&Browser.mainLoop.func&&Browser.mainLoop.resume();var I,O=!1;try{I=oe.doRewind(oe.currData)}catch(F){I=F,O=!0}var D=!1;if(!oe.currData){var N=oe.asyncPromiseHandlers;N&&(oe.asyncPromiseHandlers=null,(O?N.reject:N.resolve)(I),D=!0)}if(O&&!D)throw I}}),p=!0,d||(oe.state=oe.State.Unwinding,oe.currData=oe.allocateData(),typeof Browser<"u"&&Browser.mainLoop.func&&Browser.mainLoop.pause(),ur(()=>ka(oe.currData)))}else oe.state===oe.State.Rewinding?(oe.state=oe.State.Normal,ur(Da),$t(oe.currData),oe.currData=null,oe.sleepCallbacks.forEach(y=>En(y))):lt(`invalid state: ${oe.state}`);return oe.handleSleepReturnValue}},handleAsync(i){return oe.handleSleep(d=>{i().then(d)})}},dr=function(i){return i>>>=0,oe.handleAsync(()=>(i=Me.toValue(i),i.then(Me.toHandle)))};dr.isAsync=!0;var Yt=[];function On(i,d,p,y){return i>>>=0,d>>>=0,p>>>=0,y>>>=0,i=Yt[i],d=Me.toValue(d),i(null,d,p,y)}var kn={},Zt=i=>{var d=kn[i];return d===void 0?at(i):d};function cr(i,d,p,y,I){return i>>>=0,d>>>=0,p>>>=0,y>>>=0,I>>>=0,i=Yt[i],d=Me.toValue(d),p=Zt(p),i(d,d[p],y,I)}function Rr(i,d){return i>>>=0,d>>>=0,i=Me.toValue(i),d=Me.toValue(d),i==d}var Dr=()=>typeof globalThis=="object"?globalThis:function(){return Function}()("return this")();function Pn(i){return i>>>=0,i===0?Me.toHandle(Dr()):(i=Zt(i),Me.toHandle(Dr()[i]))}var Rn=i=>{var d=Yt.length;return Yt.push(i),d},Dn=(i,d)=>{for(var p=new Array(i),y=0;y<i;++y)p[y]=kr(Q[d+y*4>>>2>>>0],"parameter "+y);return p},Br=(i,d)=>Object.defineProperty(d,"name",{value:i}),ya=Reflect.construct;function pr(i,d){if(!(i instanceof Function))throw new TypeError(`new_ called with constructor type ${typeof i} which is not a function`);var p=Br(i.name||"unknownFunctionName",function(){});p.prototype=i.prototype;var y=new p,I=i.apply(y,d);return I instanceof Object?I:y}function Bn(i,d,p){d>>>=0;var y=Dn(i,d),I=y.shift();i--;var O=`return function (obj, func, destructorsRef, args) {\n`,D=0,N=[];p===0&&N.push("obj");for(var F=["retType"],J=[I],te=0;te<i;++te)N.push("arg"+te),F.push("argType"+te),J.push(y[te]),O+=`  var arg${te} = argType${te}.readValueFromPointer(args${D?"+"+D:""});\n`,D+=y[te].argPackAdvance;var le=p===1?"new func":"func.call";O+=`  var rv = ${le}(${N.join(", ")});\n`;for(var te=0;te<i;++te)y[te].deleteObject&&(O+=`  argType${te}.deleteObject(arg${te});\n`);I.isVoid||(F.push("emval_returnValue"),J.push(xn),O+=`  return emval_returnValue(retType, destructorsRef, rv);\n`),O+=`};\n`,F.push(O);var ye=pr(Function,F).apply(null,J),De=`methodCaller<(${y.map(We=>We.name).join(", ")}) => ${I.name}>`;return Rn(Br(De,ye))}function l(i,d){return i>>>=0,d>>>=0,i=Me.toValue(i),d=Me.toValue(d),Me.toHandle(i[d])}function m(i){i>>>=0,i>4&&(ot.get(i).refcount+=1)}function b(){return Me.toHandle([])}function A(i){i>>>=0,i=Me.toValue(i);for(var d=new Array(i.length),p=0;p<i.length;p++)d[p]=i[p];return Me.toHandle(d)}function k(i){return i>>>=0,Me.toHandle(Zt(i))}function V(){return Me.toHandle({})}var L=i=>{for(;i.length;){var d=i.pop(),p=i.pop();p(d)}};function de(i){i>>>=0;var d=Me.toValue(i);L(d),qt(i)}function ie(i,d,p){i>>>=0,d>>>=0,p>>>=0,i=Me.toValue(i),d=Me.toValue(d),p=Me.toValue(p),i[d]=p}function ae(i,d){i>>>=0,d>>>=0,i=kr(i,"_emval_take_value");var p=i.readValueFromPointer(d);return Me.toHandle(p)}function ue(i,d){i=Mt(i),d>>>=0;var p=new Date(i*1e3);U[d>>>2>>>0]=p.getUTCSeconds(),U[d+4>>>2>>>0]=p.getUTCMinutes(),U[d+8>>>2>>>0]=p.getUTCHours(),U[d+12>>>2>>>0]=p.getUTCDate(),U[d+16>>>2>>>0]=p.getUTCMonth(),U[d+20>>>2>>>0]=p.getUTCFullYear()-1900,U[d+24>>>2>>>0]=p.getUTCDay();var y=Date.UTC(p.getUTCFullYear(),0,1,0,0,0,0),I=(p.getTime()-y)/(1e3*60*60*24)|0;U[d+28>>>2>>>0]=I}var xe=i=>i%4===0&&(i%100!==0||i%400===0),ke=[0,31,60,91,121,152,182,213,244,274,305,335],R=[0,31,59,90,120,151,181,212,243,273,304,334],pe=i=>{var d=xe(i.getFullYear()),p=d?ke:R,y=p[i.getMonth()]+i.getDate()-1;return y};function Oe(i,d){i=Mt(i),d>>>=0;var p=new Date(i*1e3);U[d>>>2>>>0]=p.getSeconds(),U[d+4>>>2>>>0]=p.getMinutes(),U[d+8>>>2>>>0]=p.getHours(),U[d+12>>>2>>>0]=p.getDate(),U[d+16>>>2>>>0]=p.getMonth(),U[d+20>>>2>>>0]=p.getFullYear()-1900,U[d+24>>>2>>>0]=p.getDay();var y=pe(p)|0;U[d+28>>>2>>>0]=y,U[d+36>>>2>>>0]=-(p.getTimezoneOffset()*60);var I=new Date(p.getFullYear(),0,1),O=new Date(p.getFullYear(),6,1).getTimezoneOffset(),D=I.getTimezoneOffset(),N=(O!=D&&p.getTimezoneOffset()==Math.min(D,O))|0;U[d+32>>>2>>>0]=N}var Rt=function(i){i>>>=0;var d=(()=>{var p=new Date(U[i+20>>>2>>>0]+1900,U[i+16>>>2>>>0],U[i+12>>>2>>>0],U[i+8>>>2>>>0],U[i+4>>>2>>>0],U[i>>>2>>>0],0),y=U[i+32>>>2>>>0],I=p.getTimezoneOffset(),O=new Date(p.getFullYear(),0,1),D=new Date(p.getFullYear(),6,1).getTimezoneOffset(),N=O.getTimezoneOffset(),F=Math.min(N,D);if(y<0)U[i+32>>>2>>>0]=+(D!=N&&F==I);else if(y>0!=(F==I)){var J=Math.max(N,D),te=y>0?F:J;p.setTime(p.getTime()+(te-I)*6e4)}U[i+24>>>2>>>0]=p.getDay();var le=pe(p)|0;U[i+28>>>2>>>0]=le,U[i>>>2>>>0]=p.getSeconds(),U[i+4>>>2>>>0]=p.getMinutes(),U[i+8>>>2>>>0]=p.getHours(),U[i+12>>>2>>>0]=p.getDate(),U[i+16>>>2>>>0]=p.getMonth(),U[i+20>>>2>>>0]=p.getYear();var ye=p.getTime();return isNaN(ye)?(ge(61),-1):ye/1e3})();return BigInt(d)};function Mn(i,d,p,y,I,O,D){return i>>>=0,I=Mt(I),O>>>=0,D>>>=0,-52}function ad(i,d,p,y,I,O){i>>>=0,d>>>=0,O=Mt(O)}var ba=i=>{var d=jt(i)+1,p=zr(d);return p&&nr(i,p,d),p};function id(i,d,p){i>>>=0,d>>>=0,p>>>=0;var y=new Date().getFullYear(),I=new Date(y,0,1),O=new Date(y,6,1),D=I.getTimezoneOffset(),N=O.getTimezoneOffset(),F=Math.max(D,N);Q[i>>>2>>>0]=F*60,U[d>>>2>>>0]=+(D!=N);function J(We){var Je=We.toTimeString().match(/\\(([A-Za-z ]+)\\)$/);return Je?Je[1]:"GMT"}var te=J(I),le=J(O),ye=ba(te),De=ba(le);N<D?(Q[p>>>2>>>0]=ye,Q[p+4>>>2>>>0]=De):(Q[p>>>2>>>0]=De,Q[p+4>>>2>>>0]=ye)}var sd=()=>{lt("")},Io=[],ud=(i,d)=>{Io.length=0;for(var p;p=ce[i++>>>0];){var y=p!=105;y&=p!=112,d+=y&&d%8?4:0,Io.push(p==112?Q[d>>>2>>>0]:p==106?Ce[d>>>3]:p==105?U[d>>>2>>>0]:he[d>>>3>>>0]),d+=y?8:4}return Io},va=(i,d,p)=>{var y=ud(d,p);return Bt[i].apply(null,y)};function ld(i,d,p){return i>>>=0,d>>>=0,p>>>=0,va(i,d,p)}function dd(i,d,p){return i>>>=0,d>>>=0,p>>>=0,va(i,d,p)}var cd=()=>Date.now(),wa=()=>4294901760;function pd(){return wa()}var _a;_a=()=>performance.now();var md=i=>{var d=H.buffer,p=(i-d.byteLength+65535)/65536;try{return H.grow(p),ne(),1}catch{}};function fd(i){i>>>=0;var d=ce.length,p=wa();if(i>p)return!1;for(var y=(F,J)=>F+(J-F%J)%J,I=1;I<=4;I*=2){var O=d*(1+.2/I);O=Math.min(O,i+100663296);var D=Math.min(p,y(Math.max(i,O),65536)),N=md(D);if(N)return!0}return!1}var To={},hd=()=>a||"./this.program",Mr=()=>{if(!Mr.strings){var i=(typeof navigator=="object"&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",d={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:i,_:hd()};for(var p in To)To[p]===void 0?delete d[p]:d[p]=To[p];var y=[];for(var p in d)y.push(`${p}=${d[p]}`);Mr.strings=y}return Mr.strings},gd=(i,d)=>{for(var p=0;p<i.length;++p)q[d++>>>0>>>0]=i.charCodeAt(p);q[d>>>0>>>0]=0},yd=function(i,d){i>>>=0,d>>>=0;var p=0;return Mr().forEach((y,I)=>{var O=d+p;Q[i+I*4>>>2>>>0]=O,gd(y,O),p+=y.length+1}),0},bd=function(i,d){i>>>=0,d>>>=0;var p=Mr();Q[i>>>2>>>0]=p.length;var y=0;return p.forEach(I=>y+=I.length+1),Q[d>>>2>>>0]=y,0},vd=i=>52;function wd(i,d,p,y){return d>>>=0,p>>>=0,y>>>=0,52}function _d(i,d,p,y){return d=Mt(d),y>>>=0,70}var $d=[null,[],[]],Sd=(i,d)=>{var p=$d[i];d===0||d===10?((i===1?E:P)(_r(p,0)),p.length=0):p.push(d)};function xd(i,d,p,y){d>>>=0,p>>>=0,y>>>=0;for(var I=0,O=0;O<p;O++){var D=Q[d>>>2>>>0],N=Q[d+4>>>2>>>0];d+=8;for(var F=0;F<N;F++)Sd(i,ce[D+F>>>0]);I+=N}return Q[y>>>2>>>0]=I,0}var Cd=(i,d)=>{for(var p=0,y=0;y<=d;p+=i[y++]);return p},$a=[31,29,31,30,31,30,31,31,30,31,30,31],Sa=[31,28,31,30,31,30,31,31,30,31,30,31],Ad=(i,d)=>{for(var p=new Date(i.getTime());d>0;){var y=xe(p.getFullYear()),I=p.getMonth(),O=(y?$a:Sa)[I];if(d>O-p.getDate())d-=O-p.getDate()+1,p.setDate(1),I<11?p.setMonth(I+1):(p.setMonth(0),p.setFullYear(p.getFullYear()+1));else return p.setDate(p.getDate()+d),p}return p};function Id(i,d,p){var y=p>0?p:jt(i)+1,I=new Array(y),O=$r(i,I,0,I.length);return d&&(I.length=O),I}var Td=(i,d)=>{q.set(i,d>>>0)};function xa(i,d,p,y){i>>>=0,d>>>=0,p>>>=0,y>>>=0;var I=Q[y+40>>>2>>>0],O={tm_sec:U[y>>>2>>>0],tm_min:U[y+4>>>2>>>0],tm_hour:U[y+8>>>2>>>0],tm_mday:U[y+12>>>2>>>0],tm_mon:U[y+16>>>2>>>0],tm_year:U[y+20>>>2>>>0],tm_wday:U[y+24>>>2>>>0],tm_yday:U[y+28>>>2>>>0],tm_isdst:U[y+32>>>2>>>0],tm_gmtoff:U[y+36>>>2>>>0],tm_zone:I?Ye(I):""},D=Ye(p),N={"%c":"%a %b %d %H:%M:%S %Y","%D":"%m/%d/%y","%F":"%Y-%m-%d","%h":"%b","%r":"%I:%M:%S %p","%R":"%H:%M","%T":"%H:%M:%S","%x":"%m/%d/%y","%X":"%H:%M:%S","%Ec":"%c","%EC":"%C","%Ex":"%m/%d/%y","%EX":"%H:%M:%S","%Ey":"%y","%EY":"%Y","%Od":"%d","%Oe":"%e","%OH":"%H","%OI":"%I","%Om":"%m","%OM":"%M","%OS":"%S","%Ou":"%u","%OU":"%U","%OV":"%V","%Ow":"%w","%OW":"%W","%Oy":"%y"};for(var F in N)D=D.replace(new RegExp(F,"g"),N[F]);var J=["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],te=["January","February","March","April","May","June","July","August","September","October","November","December"];function le(Y,$e,mt){for(var it=typeof Y=="number"?Y.toString():Y||"";it.length<$e;)it=mt[0]+it;return it}function ye(Y,$e){return le(Y,$e,"0")}function De(Y,$e){function mt(Un){return Un<0?-1:Un>0?1:0}var it;return(it=mt(Y.getFullYear()-$e.getFullYear()))===0&&(it=mt(Y.getMonth()-$e.getMonth()))===0&&(it=mt(Y.getDate()-$e.getDate())),it}function We(Y){switch(Y.getDay()){case 0:return new Date(Y.getFullYear()-1,11,29);case 1:return Y;case 2:return new Date(Y.getFullYear(),0,3);case 3:return new Date(Y.getFullYear(),0,2);case 4:return new Date(Y.getFullYear(),0,1);case 5:return new Date(Y.getFullYear()-1,11,31);case 6:return new Date(Y.getFullYear()-1,11,30)}}function Je(Y){var $e=Ad(new Date(Y.tm_year+1900,0,1),Y.tm_yday),mt=new Date($e.getFullYear(),0,4),it=new Date($e.getFullYear()+1,0,4),Un=We(mt),cc=We(it);return De(Un,$e)<=0?De(cc,$e)<=0?$e.getFullYear()+1:$e.getFullYear():$e.getFullYear()-1}var Ur={"%a":Y=>J[Y.tm_wday].substring(0,3),"%A":Y=>J[Y.tm_wday],"%b":Y=>te[Y.tm_mon].substring(0,3),"%B":Y=>te[Y.tm_mon],"%C":Y=>{var $e=Y.tm_year+1900;return ye($e/100|0,2)},"%d":Y=>ye(Y.tm_mday,2),"%e":Y=>le(Y.tm_mday,2," "),"%g":Y=>Je(Y).toString().substring(2),"%G":Y=>Je(Y),"%H":Y=>ye(Y.tm_hour,2),"%I":Y=>{var $e=Y.tm_hour;return $e==0?$e=12:$e>12&&($e-=12),ye($e,2)},"%j":Y=>ye(Y.tm_mday+Cd(xe(Y.tm_year+1900)?$a:Sa,Y.tm_mon-1),3),"%m":Y=>ye(Y.tm_mon+1,2),"%M":Y=>ye(Y.tm_min,2),"%n":()=>`\n`,"%p":Y=>Y.tm_hour>=0&&Y.tm_hour<12?"AM":"PM","%S":Y=>ye(Y.tm_sec,2),"%t":()=>"	","%u":Y=>Y.tm_wday||7,"%U":Y=>{var $e=Y.tm_yday+7-Y.tm_wday;return ye(Math.floor($e/7),2)},"%V":Y=>{var $e=Math.floor((Y.tm_yday+7-(Y.tm_wday+6)%7)/7);if((Y.tm_wday+371-Y.tm_yday-2)%7<=2&&$e++,$e){if($e==53){var it=(Y.tm_wday+371-Y.tm_yday)%7;it!=4&&(it!=3||!xe(Y.tm_year))&&($e=1)}}else{$e=52;var mt=(Y.tm_wday+7-Y.tm_yday-1)%7;(mt==4||mt==5&&xe(Y.tm_year%400-1))&&$e++}return ye($e,2)},"%w":Y=>Y.tm_wday,"%W":Y=>{var $e=Y.tm_yday+7-(Y.tm_wday+6)%7;return ye(Math.floor($e/7),2)},"%y":Y=>(Y.tm_year+1900).toString().substring(2),"%Y":Y=>Y.tm_year+1900,"%z":Y=>{var $e=Y.tm_gmtoff,mt=$e>=0;return $e=Math.abs($e)/60,$e=$e/60*100+$e%60,(mt?"+":"-")+("0000"+$e).slice(-4)},"%Z":Y=>Y.tm_zone,"%%":()=>"%"};D=D.replace(/%%/g,"\\0\\0");for(var F in Ur)D.includes(F)&&(D=D.replace(new RegExp(F,"g"),Ur[F](O)));D=D.replace(/\\0\\0/g,"%");var Eo=Id(D,!1);return Eo.length>d?0:(Td(Eo,i),Eo.length-1)}function Ed(i,d,p,y,I){return i>>>=0,d>>>=0,p>>>=0,y>>>=0,I>>>=0,xa(i,d,p,y)}cn(),Ar=r.BindingError=class extends Error{constructor(d){super(d),this.name="BindingError"}},pn=r.InternalError=class extends Error{constructor(d){super(d),this.name="InternalError"}},Ir(),gn();var Od={K:br,a:wr,A:bo,ia:Jr,ha:Sr,ga:en,fa:tn,ea:rn,da:nn,ca:on,I:an,ba:sn,aa:un,$:ln,_:dn,F:fn,W:Ne,V:yn,E:bn,t:vn,o:wn,D:_o,y:$n,U:Sn,T:Or,u:Co,x:dr,n:On,k:cr,b:qt,w:Rr,m:Pn,i:Bn,r:l,f:m,s:b,l:A,e:k,j:V,h:de,g:ie,c:ae,S:ue,R:Oe,Q:Rt,P:Mn,O:ad,N:id,v:sd,d:ld,C:dd,B:cd,M:pd,q:_a,L:fd,Z:yd,Y:bd,z:vd,H:wd,X:_d,G:xd,J:xa,p:Ed},se=yo(),kd=()=>(kd=se.ka)(),Pd=r._OrtInit=(i,d)=>(Pd=r._OrtInit=se.la)(i,d),Rd=r._OrtGetLastError=(i,d)=>(Rd=r._OrtGetLastError=se.ma)(i,d),Dd=r._OrtCreateSessionOptions=(i,d,p,y,I,O,D,N,F,J)=>(Dd=r._OrtCreateSessionOptions=se.na)(i,d,p,y,I,O,D,N,F,J),Bd=r._OrtAppendExecutionProvider=(i,d)=>(Bd=r._OrtAppendExecutionProvider=se.oa)(i,d),Md=r._OrtAddFreeDimensionOverride=(i,d,p)=>(Md=r._OrtAddFreeDimensionOverride=se.pa)(i,d,p),zd=r._OrtAddSessionConfigEntry=(i,d,p)=>(zd=r._OrtAddSessionConfigEntry=se.qa)(i,d,p),Ud=r._OrtReleaseSessionOptions=i=>(Ud=r._OrtReleaseSessionOptions=se.ra)(i),Vd=r._OrtCreateSession=(i,d,p)=>(Vd=r._OrtCreateSession=se.sa)(i,d,p),Nd=r._OrtReleaseSession=i=>(Nd=r._OrtReleaseSession=se.ta)(i),Wd=r._OrtGetInputOutputCount=(i,d,p)=>(Wd=r._OrtGetInputOutputCount=se.ua)(i,d,p),Gd=r._OrtGetInputName=(i,d)=>(Gd=r._OrtGetInputName=se.va)(i,d),Hd=r._OrtGetOutputName=(i,d)=>(Hd=r._OrtGetOutputName=se.wa)(i,d),Ld=r._OrtFree=i=>(Ld=r._OrtFree=se.xa)(i),Fd=r._OrtCreateTensor=(i,d,p,y,I,O)=>(Fd=r._OrtCreateTensor=se.ya)(i,d,p,y,I,O),jd=r._OrtGetTensorData=(i,d,p,y,I)=>(jd=r._OrtGetTensorData=se.za)(i,d,p,y,I),Kd=r._OrtReleaseTensor=i=>(Kd=r._OrtReleaseTensor=se.Aa)(i),qd=r._OrtCreateRunOptions=(i,d,p,y)=>(qd=r._OrtCreateRunOptions=se.Ba)(i,d,p,y),Yd=r._OrtAddRunConfigEntry=(i,d,p)=>(Yd=r._OrtAddRunConfigEntry=se.Ca)(i,d,p),Zd=r._OrtReleaseRunOptions=i=>(Zd=r._OrtReleaseRunOptions=se.Da)(i),Xd=r._OrtCreateBinding=i=>(Xd=r._OrtCreateBinding=se.Ea)(i),Qd=r._OrtBindInput=(i,d,p)=>(Qd=r._OrtBindInput=se.Fa)(i,d,p),Jd=r._OrtBindOutput=(i,d,p,y)=>(Jd=r._OrtBindOutput=se.Ga)(i,d,p,y),ec=r._OrtClearBoundOutputs=i=>(ec=r._OrtClearBoundOutputs=se.Ha)(i),tc=r._OrtReleaseBinding=i=>(tc=r._OrtReleaseBinding=se.Ia)(i),rc=r._OrtRunWithBinding=(i,d,p,y,I)=>(rc=r._OrtRunWithBinding=se.Ja)(i,d,p,y,I),nc=r._OrtRun=(i,d,p,y,I,O,D,N)=>(nc=r._OrtRun=se.Ka)(i,d,p,y,I,O,D,N),oc=r._OrtEndProfiling=i=>(oc=r._OrtEndProfiling=se.La)(i),ac=r._JsepOutput=(i,d,p)=>(ac=r._JsepOutput=se.Ma)(i,d,p),ic=r._JsepGetNodeName=i=>(ic=r._JsepGetNodeName=se.Na)(i),Ca=()=>(Ca=se.Oa)(),zr=r._malloc=i=>(zr=r._malloc=se.Pa)(i),$t=r._free=i=>($t=r._free=se.Qa)(i),Aa=i=>(Aa=se.Ra)(i),sc=(i,d)=>(sc=se.setThrew)(i,d),Ia=()=>(Ia=se.Ta)(),Ta=i=>(Ta=se.Ua)(i),Ea=i=>(Ea=se.Va)(i),uc=i=>(uc=se.__cxa_decrement_exception_refcount)(i),lc=i=>(lc=se.__cxa_increment_exception_refcount)(i),Oa=i=>(Oa=se.Wa)(i),ka=i=>(ka=se.Xa)(i),Pa=()=>(Pa=se.Ya)(),Ra=i=>(Ra=se.Za)(i),Da=()=>(Da=se._a)(),ff=r.___start_em_js=1390356,hf=r.___stop_em_js=1390517;function dc(i){i=Object.assign({},i);var d=y=>()=>y()>>>0,p=y=>I=>y(I)>>>0;return i.Oa=d(i.Oa),i.Pa=p(i.Pa),i.Ra=p(i.Ra),i.Ta=d(i.Ta),i.Va=p(i.Va),i}r.stackAlloc=Ea,r.stackSave=Ia,r.stackRestore=Ta,r.UTF8ToString=Ye,r.stringToUTF8=nr,r.lengthBytesUTF8=jt;var zn;Ge=function i(){zn||Ba(),zn||(Ge=i)};function Ba(){if(He>0||(ee(),He>0))return;function i(){zn||(zn=!0,r.calledRun=!0,!K&&(_e(),o(r),Xe()))}i()}return Ba(),t.ready}})();typeof Ua=="object"&&typeof Ro=="object"?Ro.exports=za:typeof define=="function"&&define.amd&&define([],()=>za)});var Na=Vr(()=>{});var Wa=Vr(()=>{});var Ga={};Vn(Ga,{cpus:()=>vc});var vc,Ha=Z(()=>{vc=void 0});var ja=Vr((Fa,Do)=>{"use strict";var La=(()=>{var e=typeof document<"u"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename<"u"&&(e=e||__filename),function(t={}){function r(){return Q.buffer!=ne.buffer&&_e(),ne}function o(){return Q.buffer!=ne.buffer&&_e(),be}function n(){return Q.buffer!=ne.buffer&&_e(),me}function s(){return Q.buffer!=ne.buffer&&_e(),Ke}function u(){return Q.buffer!=ne.buffer&&_e(),G}function c(){return Q.buffer!=ne.buffer&&_e(),ee}var a=t,f,g;a.ready=new Promise((l,m)=>{f=l,g=m}),a.jsepInit=(l,m,b,A,k,V,L,de)=>{a.Qb=l,a.wb=m,a.yb=b,a.jb=A,a.xb=k,a.Ea=V,a.zb=L,a.Ab=de,m=(ie,ae,ue)=>(...xe)=>{let ke=pt,R=ae?.();xe=ie(...xe);let pe=ae?.();return R!==pe&&(ie=pe,ue(R),ae=ue=null),pt!=ke?kr():xe},b=ie=>async(...ae)=>{try{if(a.bb)throw Error("Session already started");let ue=a.bb={Fb:ae[0],errors:[]},xe=await ie(...ae);if(a.bb!==ue)throw Error("Session mismatch");l.flush();let ke=ue.errors;if(0<ke.length){let R=await Promise.all(ke);if(R=R.filter(pe=>pe),0<R.length)throw Error(R.join(`\n`))}return xe}finally{a.bb=null}},a._OrtRun=b(m(a._OrtRun,()=>a._OrtRun,ie=>a._OrtRun=ie)),a._OrtRunWithBinding=b(m(a._OrtRunWithBinding,()=>a._OrtRunWithBinding,ie=>a._OrtRunWithBinding=ie)),a._OrtBindInput=m(a._OrtBindInput,()=>a._OrtBindInput,ie=>a._OrtBindInput=ie),a.jsepRegisterBuffer=(ie,ae,ue,xe)=>l.registerBuffer(ie,ae,ue,xe),a.jsepUnregisterBuffers=ie=>{l.unregisterBuffers(ie)},a.jsepGetBuffer=ie=>l.getBuffer(ie),a.jsepCreateDownloader=(ie,ae,ue)=>l.createDownloader(ie,ae,ue)};var h=Object.assign({},a),w="./this.program",_=(l,m)=>{throw m},v=typeof window=="object",$=typeof importScripts=="function",C=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",x=a.ENVIRONMENT_IS_PTHREAD||!1,S="";function T(l){return a.locateFile?a.locateFile(l,S):S+l}var E,P,z;if(C){var H=(Wn(),Xt(Nn)),K=(Po(),Xt(ko));S=$?K.dirname(S)+"/":__dirname+"/",E=(m,b)=>(m=m.startsWith("file://")?new URL(m):K.normalize(m),H.readFileSync(m,b?void 0:"utf8")),z=m=>(m=E(m,!0),m.buffer||(m=new Uint8Array(m)),m),P=(m,b,A,k=!0)=>{m=m.startsWith("file://")?new URL(m):K.normalize(m),H.readFile(m,k?void 0:"utf8",(V,L)=>{V?A(V):b(k?L.buffer:L)})},!a.thisProgram&&1<process.argv.length&&(w=process.argv[1].replace(/\\\\/g,"/")),process.argv.slice(2),_=(m,b)=>{throw process.exitCode=m,b},a.inspect=()=>"[Emscripten Module object]";let l;try{l=Na()}catch(m){throw console.error(\'The "worker_threads" module is not supported in this node.js build - perhaps a newer version is needed?\'),m}global.Worker=l.Worker}else(v||$)&&($?S=self.location.href:typeof document<"u"&&document.currentScript&&(S=document.currentScript.src),typeof e<"u"&&e&&(S=e),S.indexOf("blob:")!==0?S=S.substr(0,S.replace(/[?#].*/,"").lastIndexOf("/")+1):S="",C||(E=l=>{var m=new XMLHttpRequest;return m.open("GET",l,!1),m.send(null),m.responseText},$&&(z=l=>{var m=new XMLHttpRequest;return m.open("GET",l,!1),m.responseType="arraybuffer",m.send(null),new Uint8Array(m.response)}),P=(l,m,b)=>{var A=new XMLHttpRequest;A.open("GET",l,!0),A.responseType="arraybuffer",A.onload=()=>{A.status==200||A.status==0&&A.response?m(A.response):b()},A.onerror=b,A.send(null)}));C&&typeof performance>"u"&&(global.performance=Wa().performance);var re=console.log.bind(console),q=console.error.bind(console);C&&(re=(...l)=>H.writeSync(1,l.join(" ")+`\n`),q=(...l)=>H.writeSync(2,l.join(" ")+`\n`));var ce=a.print||re,Se=a.printErr||q;Object.assign(a,h),h=null,a.thisProgram&&(w=a.thisProgram),a.quit&&(_=a.quit);var Pe;a.wasmBinary&&(Pe=a.wasmBinary);var U=a.noExitRuntime||!0;typeof WebAssembly!="object"&&dt("no native wasm support detected");var Q,W,Ce,we=!1,he,ne,be,me,Ke,G,ee;function _e(){var l=Q.buffer;a.HEAP8=ne=new Int8Array(l),a.HEAP16=new Int16Array(l),a.HEAP32=me=new Int32Array(l),a.HEAPU8=be=new Uint8Array(l),a.HEAPU16=new Uint16Array(l),a.HEAPU32=Ke=new Uint32Array(l),a.HEAPF32=G=new Float32Array(l),a.HEAPF64=ee=new Float64Array(l)}var Xe=a.INITIAL_MEMORY||16777216;if(5242880<=Xe||dt("INITIAL_MEMORY should be larger than STACK_SIZE, was "+Xe+"! (STACK_SIZE=5242880)"),x)Q=a.wasmMemory;else if(a.wasmMemory)Q=a.wasmMemory;else if(Q=new WebAssembly.Memory({initial:Xe/65536,maximum:65536,shared:!0}),!(Q.buffer instanceof SharedArrayBuffer))throw Se("requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag"),C&&Se("(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and/or recent version)"),Error("bad memory");_e(),Xe=Q.buffer.byteLength;var qe=[],Qe=[],He=[],je=0;function Ge(){return U||0<je}var et=0,Dt=null,lt=null;function jr(){et++,a.monitorRunDependencies&&a.monitorRunDependencies(et)}function yr(){if(et--,a.monitorRunDependencies&&a.monitorRunDependencies(et),et==0&&(Dt!==null&&(clearInterval(Dt),Dt=null),lt)){var l=lt;lt=null,l()}}function dt(l){throw a.onAbort&&a.onAbort(l),l="Aborted("+l+")",Se(l),we=!0,he=1,l=new WebAssembly.RuntimeError(l+". Build with -sASSERTIONS for more info."),g(l),l}function Ot(l){return l.startsWith("data:application/octet-stream;base64,")}var kt;kt="ort-wasm-simd-threaded.wasm",Ot(kt)||(kt=T(kt));function Kr(l){if(l==kt&&Pe)return new Uint8Array(Pe);if(z)return z(l);throw"both async and sync fetching of the wasm failed"}function qr(l){if(!Pe&&(v||$)){if(typeof fetch=="function"&&!l.startsWith("file://"))return fetch(l,{credentials:"same-origin"}).then(m=>{if(!m.ok)throw"failed to load wasm binary file at \'"+l+"\'";return m.arrayBuffer()}).catch(()=>Kr(l));if(P)return new Promise((m,b)=>{P(l,A=>m(new Uint8Array(A)),b)})}return Promise.resolve().then(()=>Kr(l))}function Yr(l,m,b){return qr(l).then(A=>WebAssembly.instantiate(A,m)).then(A=>A).then(b,A=>{Se("failed to asynchronously prepare wasm: "+A),dt(A)})}function yo(l,m){var b=kt;return Pe||typeof WebAssembly.instantiateStreaming!="function"||Ot(b)||b.startsWith("file://")||C||typeof fetch!="function"?Yr(b,l,m):fetch(b,{credentials:"same-origin"}).then(A=>WebAssembly.instantiateStreaming(A,l).then(m,function(k){return Se("wasm streaming compile failed: "+k),Se("falling back to ArrayBuffer instantiation"),Yr(b,l,m)}))}var Bt,br={912252:l=>{a.Ea("Abs",l,void 0)},912303:l=>{a.Ea("Neg",l,void 0)},912354:l=>{a.Ea("Floor",l,void 0)},912407:l=>{a.Ea("Ceil",l,void 0)},912459:l=>{a.Ea("Reciprocal",l,void 0)},912517:l=>{a.Ea("Sqrt",l,void 0)},912569:l=>{a.Ea("Exp",l,void 0)},912620:l=>{a.Ea("Erf",l,void 0)},912671:l=>{a.Ea("Sigmoid",l,void 0)},912726:l=>{a.Ea("Log",l,void 0)},912777:l=>{a.Ea("Sin",l,void 0)},912828:l=>{a.Ea("Cos",l,void 0)},912879:l=>{a.Ea("Tan",l,void 0)},912930:l=>{a.Ea("Asin",l,void 0)},912982:l=>{a.Ea("Acos",l,void 0)},913034:l=>{a.Ea("Atan",l,void 0)},913086:l=>{a.Ea("Sinh",l,void 0)},913138:l=>{a.Ea("Cosh",l,void 0)},913190:l=>{a.Ea("Asinh",l,void 0)},913243:l=>{a.Ea("Acosh",l,void 0)},913296:l=>{a.Ea("Atanh",l,void 0)},913349:l=>{a.Ea("Tanh",l,void 0)},913401:l=>{a.Ea("Not",l,void 0)},913452:(l,m,b)=>{a.Ea("ClipV10",l,{min:m,max:b})},913524:l=>{a.Ea("Clip",l,void 0)},913576:(l,m)=>{a.Ea("Elu",l,{alpha:m})},913634:l=>{a.Ea("Relu",l,void 0)},913686:(l,m)=>{a.Ea("LeakyRelu",l,{alpha:m})},913750:(l,m)=>{a.Ea("ThresholdedRelu",l,{alpha:m})},913820:(l,m)=>{a.Ea("Cast",l,{to:m})},913878:l=>{a.Ea("Add",l,void 0)},913929:l=>{a.Ea("Sub",l,void 0)},913980:l=>{a.Ea("Mul",l,void 0)},914031:l=>{a.Ea("Div",l,void 0)},914082:l=>{a.Ea("Pow",l,void 0)},914133:l=>{a.Ea("Equal",l,void 0)},914186:l=>{a.Ea("Greater",l,void 0)},914241:l=>{a.Ea("GreaterOrEqual",l,void 0)},914303:l=>{a.Ea("Less",l,void 0)},914355:l=>{a.Ea("LessOrEqual",l,void 0)},914414:(l,m,b,A,k)=>{a.Ea("ReduceMean",l,{keepDims:!!m,noopWithEmptyAxes:!!b,axes:A?Array.from(n().subarray(k>>>0,k+A>>>0)):[]})},914578:(l,m,b,A,k)=>{a.Ea("ReduceMax",l,{keepDims:!!m,noopWithEmptyAxes:!!b,axes:A?Array.from(n().subarray(k>>>0,k+A>>>0)):[]})},914741:(l,m,b,A,k)=>{a.Ea("ReduceMin",l,{keepDims:!!m,noopWithEmptyAxes:!!b,axes:A?Array.from(n().subarray(k>>>0,k+A>>>0)):[]})},914904:(l,m,b,A,k)=>{a.Ea("ReduceProd",l,{keepDims:!!m,noopWithEmptyAxes:!!b,axes:A?Array.from(n().subarray(k>>>0,k+A>>>0)):[]})},915068:(l,m,b,A,k)=>{a.Ea("ReduceSum",l,{keepDims:!!m,noopWithEmptyAxes:!!b,axes:A?Array.from(n().subarray(k>>>0,k+A>>>0)):[]})},915231:(l,m,b,A,k)=>{a.Ea("ReduceL1",l,{keepDims:!!m,noopWithEmptyAxes:!!b,axes:A?Array.from(n().subarray(k>>>0,k+A>>>0)):[]})},915393:(l,m,b,A,k)=>{a.Ea("ReduceL2",l,{keepDims:!!m,noopWithEmptyAxes:!!b,axes:A?Array.from(n().subarray(k>>>0,k+A>>>0)):[]})},915555:(l,m,b,A,k)=>{a.Ea("ReduceLogSum",l,{keepDims:!!m,noopWithEmptyAxes:!!b,axes:A?Array.from(n().subarray(k>>>0,k+A>>>0)):[]})},915721:(l,m,b,A,k)=>{a.Ea("ReduceSumSquare",l,{keepDims:!!m,noopWithEmptyAxes:!!b,axes:A?Array.from(n().subarray(k>>>0,k+A>>>0)):[]})},915890:(l,m,b,A,k)=>{a.Ea("ReduceLogSumExp",l,{keepDims:!!m,noopWithEmptyAxes:!!b,axes:A?Array.from(n().subarray(k>>>0,k+A>>>0)):[]})},916059:l=>{a.Ea("Where",l,void 0)},916112:(l,m,b)=>{a.Ea("Transpose",l,{perm:m?Array.from(n().subarray(b>>>0,b+m>>>0)):[]})},916225:(l,m,b,A,k,V,L,de,ie,ae,ue,xe,ke,R,pe)=>{a.Ea("ConvTranspose",l,{format:ie?"NHWC":"NCHW",autoPad:m,dilations:[b],group:A,kernel_shape:[k],pads:[V,L],strides:[de],wIsConst:()=>!!r()[ae>>>0],outputPadding:ue?Array.from(n().subarray(xe>>>0,xe+ue>>>0)):[],outputShape:ke?Array.from(n().subarray(R>>>0,R+ke>>>0)):[],activation:tt(pe)})},916639:(l,m,b,A,k,V,L,de,ie,ae,ue,xe,ke,R)=>{a.Ea("ConvTranspose",l,{format:de?"NHWC":"NCHW",autoPad:m,dilations:Array.from(n().subarray(b>>>0,b+2>>>0)),group:A,kernelShape:Array.from(n().subarray(k>>>0,k+2>>>0)),pads:Array.from(n().subarray(V>>>0,V+4>>>0)),strides:Array.from(n().subarray(L>>>0,L+2>>>0)),wIsConst:()=>!!r()[ie>>>0],outputPadding:0<ae?Array.from(n().subarray(ue>>>0,ue+ae>>>0)):[],outputShape:0<xe?Array.from(n().subarray(ke>>>0,ke+xe>>>0)):[],activation:tt(R)})},917196:(l,m,b,A,k,V,L,de,ie,ae,ue,xe,ke,R,pe)=>{a.Ea("ConvTranspose",l,{format:ie?"NHWC":"NCHW",autoPad:m,dilations:[b],group:A,kernel_shape:[k],pads:[V,L],strides:[de],wIsConst:()=>!!r()[ae>>>0],outputPadding:ue?Array.from(n().subarray(xe>>>0,xe+ue>>>0)):[],outputShape:ke?Array.from(n().subarray(R>>>0,R+ke>>>0)):[],activation:tt(pe)})},917610:(l,m,b,A,k,V,L,de,ie,ae,ue,xe,ke,R)=>{a.Ea("ConvTranspose",l,{format:de?"NHWC":"NCHW",autoPad:m,dilations:Array.from(n().subarray(b>>>0,b+2>>>0)),group:A,kernelShape:Array.from(n().subarray(k>>>0,k+2>>>0)),pads:Array.from(n().subarray(V>>>0,V+4>>>0)),strides:Array.from(n().subarray(L>>>0,L+2>>>0)),wIsConst:()=>!!r()[ie>>>0],outputPadding:0<ae?Array.from(n().subarray(ue>>>0,ue+ae>>>0)):[],outputShape:0<xe?Array.from(n().subarray(ke>>>0,ke+xe>>>0)):[],activation:tt(R)})},918167:(l,m)=>{a.Ea("GlobalAveragePool",l,{format:m?"NHWC":"NCHW"})},918258:(l,m,b,A,k,V,L,de,ie,ae,ue,xe,ke,R,pe,Oe)=>{a.Ea("AveragePool",l,{format:Oe?"NHWC":"NCHW",auto_pad:m,ceil_mode:b,count_include_pad:A,storage_order:k,dilations:[V,L],kernel_shape:[de,ie],pads:[ae,ue,xe,ke],strides:[R,pe]})},918542:(l,m)=>{a.Ea("GlobalAveragePool",l,{format:m?"NHWC":"NCHW"})},918633:(l,m,b,A,k,V,L,de,ie,ae,ue,xe,ke,R,pe,Oe)=>{a.Ea("AveragePool",l,{format:Oe?"NHWC":"NCHW",auto_pad:m,ceil_mode:b,count_include_pad:A,storage_order:k,dilations:[V,L],kernel_shape:[de,ie],pads:[ae,ue,xe,ke],strides:[R,pe]})},918917:(l,m)=>{a.Ea("GlobalMaxPool",l,{format:m?"NHWC":"NCHW"})},919004:(l,m,b,A,k,V,L,de,ie,ae,ue,xe,ke,R,pe,Oe)=>{a.Ea("MaxPool",l,{format:Oe?"NHWC":"NCHW",auto_pad:m,ceil_mode:b,count_include_pad:A,storage_order:k,dilations:[V,L],kernel_shape:[de,ie],pads:[ae,ue,xe,ke],strides:[R,pe]})},919284:(l,m)=>{a.Ea("GlobalMaxPool",l,{format:m?"NHWC":"NCHW"})},919371:(l,m,b,A,k,V,L,de,ie,ae,ue,xe,ke,R,pe,Oe)=>{a.Ea("MaxPool",l,{format:Oe?"NHWC":"NCHW",auto_pad:m,ceil_mode:b,count_include_pad:A,storage_order:k,dilations:[V,L],kernel_shape:[de,ie],pads:[ae,ue,xe,ke],strides:[R,pe]})},919651:(l,m,b,A,k)=>{a.Ea("Gemm",l,{alpha:m,beta:b,transA:A,transB:k})},919755:l=>{a.Ea("MatMul",l,void 0)},919809:(l,m,b,A)=>{a.Ea("ArgMax",l,{keepDims:!!m,selectLastIndex:!!b,axis:A})},919917:(l,m,b,A)=>{a.Ea("ArgMin",l,{keepDims:!!m,selectLastIndex:!!b,axis:A})},920025:(l,m)=>{a.Ea("Softmax",l,{axis:m})},920088:(l,m)=>{a.Ea("Concat",l,{axis:m})},920148:(l,m,b,A,k)=>{a.Ea("Split",l,{axis:m,numOutputs:b,splitSizes:A?Array.from(n().subarray(k>>>0,k+A>>>0)):[]})},920293:l=>{a.Ea("Expand",l,void 0)},920347:(l,m)=>{a.Ea("Gather",l,{axis:Number(m)})},920418:(l,m)=>{a.Ea("GatherElements",l,{axis:Number(m)})},920497:(l,m,b,A,k,V,L,de,ie,ae,ue)=>{a.Ea("Resize",l,{antialias:m,axes:b?Array.from(n().subarray(A>>>0,A+b>>>0)):[],coordinateTransformMode:tt(k),cubicCoeffA:V,excludeOutside:L,extrapolationValue:de,keepAspectRatioPolicy:tt(ie),mode:tt(ae),nearestMode:tt(ue)})},920848:(l,m,b,A,k,V,L)=>{a.Ea("Slice",l,{starts:m?Array.from(n().subarray(b>>>0,b+m>>>0)):[],ends:A?Array.from(n().subarray(k>>>0,k+A>>>0)):[],axes:V?Array.from(n().subarray(L>>>0,L+V>>>0)):[]})},921079:l=>{a.Ea("Tile",l,void 0)},921131:(l,m,b)=>{a.Ea("LayerNormalization",l,{axis:Number(m),epsilon:Number(b)})},921238:(l,m,b)=>{a.Ea("InstanceNormalization",l,{epsilon:m,format:b?"NHWC":"NCHW"})},921352:(l,m,b)=>{a.Ea("InstanceNormalization",l,{epsilon:m,format:b?"NHWC":"NCHW"})},921466:l=>{a.Ea("Range",l,void 0)},921519:(l,m)=>{a.Ea("Einsum",l,{equation:tt(m)})},921600:(l,m,b,A,k)=>{a.Ea("Pad",l,{mode:m,value:b,pads:A?Array.from(n().subarray(k>>>0,k+A>>>0)):[]})},921732:l=>{a.Ea("Gelu",l,void 0)},921784:l=>{a.Ea("BiasAdd",l,void 0)},921839:l=>{a.Ea("BiasSplitGelu",l,void 0)},921900:(l,m)=>{a.Ea("SkipLayerNormalization",l,{epsilon:m})},921981:(l,m,b,A,k,V,L,de,ie,ae,ue,xe,ke)=>{a.Ea("Conv",l,{format:ie?"NHWC":"NCHW",auto_pad:m,dilations:[b],group:A,kernel_shape:[k],pads:V?Array.from(n().subarray(L>>>0,L+V>>>0)):[],strides:[de],w_is_const:()=>!!r()[ae>>>0],activation:tt(ue),activation_params:xe?Array.from(u().subarray(ke>>>0,ke+xe>>>0)):[]})},922362:(l,m,b,A,k,V,L,de,ie,ae,ue,xe,ke,R,pe,Oe)=>{a.Ea("Conv",l,{format:xe?"NHWC":"NCHW",auto_pad:m,dilations:[b,A],group:k,kernel_shape:[V,L],pads:de?Array.from(n().subarray(ie>>>0,ie+de>>>0)):[],strides:[ae,ue],w_is_const:()=>!!r()[ke>>>0],activation:tt(R),activation_params:pe?Array.from(u().subarray(Oe>>>0,Oe+pe>>>0)):[]})},922764:l=>{a.zb(l)},922798:(l,m)=>a.Ab(l,m,a.bb.Fb,a.bb.errors),922910:l=>a.wb(l),922943:l=>a.yb(l),922975:(l,m,b)=>{a.jb(l,m,b,!0)},923014:(l,m,b)=>{a.jb(l,m,b)}};function Ht(l){this.name="ExitStatus",this.message=`Program terminated with exit(${l})`,this.status=l}function Lt(l){l.terminate(),l.onmessage=()=>{}}function Zr(l){(l=ge.Qa[l])||dt(),ge.Eb(l)}function vr(l){var m=ge.tb();if(!m)return 6;ge.Ya.push(m),ge.Qa[l.Xa]=m,m.Xa=l.Xa;var b={cmd:"run",start_routine:l.Gb,arg:l.rb,pthread_ptr:l.Xa};return C&&m.unref(),m.postMessage(b,l.Mb),0}var Xr=typeof TextDecoder<"u"?new TextDecoder("utf8"):void 0,Qr=(l,m,b)=>{m>>>=0;var A=m+b;for(b=m;l[b]&&!(b>=A);)++b;if(16<b-m&&l.buffer&&Xr)return Xr.decode(l.buffer instanceof SharedArrayBuffer?l.slice(m,b):l.subarray(m,b));for(A="";m<b;){var k=l[m++];if(k&128){var V=l[m++]&63;if((k&224)==192)A+=String.fromCharCode((k&31)<<6|V);else{var L=l[m++]&63;k=(k&240)==224?(k&15)<<12|V<<6|L:(k&7)<<18|V<<12|L<<6|l[m++]&63,65536>k?A+=String.fromCharCode(k):(k-=65536,A+=String.fromCharCode(55296|k>>10,56320|k&1023))}}else A+=String.fromCharCode(k)}return A},tt=(l,m)=>(l>>>=0)?Qr(o(),l,m):"";function Mt(l){if(x)return Ne(1,1,l);he=l,Ge()||(ge.Hb(),a.onExit&&a.onExit(l),we=!0),_(l,new Ht(l))}var wr=l=>{if(he=l,x)throw _r(l),"unwind";Mt(l)},ge={ab:[],Ya:[],mb:[],Qa:{},gb:function(){x?ge.vb():ge.ub()},ub:function(){qe.unshift(()=>{jr(),ge.Bb(()=>yr())})},vb:function(){ge.receiveObjectTransfer=ge.Db,ge.threadInitTLS=ge.lb,ge.setExitStatus=ge.kb,U=!1},kb:function(l){he=l},Sb:["$terminateWorker"],Hb:function(){for(var l of ge.Ya)Lt(l);for(l of ge.ab)Lt(l);ge.ab=[],ge.Ya=[],ge.Qa=[]},Eb:function(l){var m=l.Xa;delete ge.Qa[m],ge.ab.push(l),ge.Ya.splice(ge.Ya.indexOf(l),1),l.Xa=0,oe(m)},Db:function(){},lb:function(){ge.mb.forEach(l=>l())},Cb:l=>new Promise(m=>{l.onmessage=V=>{V=V.data;var L=V.cmd;if(V.targetThread&&V.targetThread!=lr()){var de=ge.Qa[V.Rb];de?de.postMessage(V,V.transferList):Se(\'Internal error! Worker sent a message "\'+L+\'" to target pthread \'+V.targetThread+", but that thread no longer exists!")}else L==="checkMailbox"?zt():L==="spawnThread"?vr(V):L==="cleanupThread"?Zr(V.thread):L==="killThread"?(V=V.thread,L=ge.Qa[V],delete ge.Qa[V],Lt(L),oe(V),ge.Ya.splice(ge.Ya.indexOf(L),1),L.Xa=0):L==="cancelThread"?ge.Qa[V.thread].postMessage({cmd:"cancel"}):L==="loaded"?(l.loaded=!0,m(l)):L==="alert"?alert("Thread "+V.threadId+": "+V.text):V.target==="setimmediate"?l.postMessage(V):L==="callHandler"?a[V.handler](...V.args):L&&Se("worker sent an unknown command "+L)},l.onerror=V=>{throw Se("worker sent an error! "+V.filename+":"+V.lineno+": "+V.message),V},C&&(l.on("message",function(V){l.onmessage({data:V})}),l.on("error",function(V){l.onerror(V)}));var b=[],A=["onExit","onAbort","print","printErr"],k;for(k of A)a.hasOwnProperty(k)&&b.push(k);l.postMessage({cmd:"load",handlers:b,urlOrBlob:a.mainScriptUrlOrBlob||e,wasmMemory:Q,wasmModule:Ce})}),Bb:function(l){l()},qb:function(){var l=T("ort-wasm-simd-threaded.worker.js");l=new Worker(l),ge.ab.push(l)},tb:function(){return ge.ab.length==0&&(ge.qb(),ge.Cb(ge.ab[0])),ge.ab.pop()}};a.PThread=ge;var Ft=l=>{for(;0<l.length;)l.shift()(a)};a.establishStackSpace=function(){var l=lr(),m=n()[l+52>>2>>>0];l=n()[l+56>>2>>>0],kn(m,m-l),cr(m)};function _r(l){if(x)return Ne(2,0,l);wr(l)}a.invokeEntryPoint=function(l,m){l=Dr.apply(null,[l,m]),Ge()?ge.kb(l):dr(l)};function Ye(l){this.fb=l-24,this.pb=function(m){s()[this.fb+4>>2>>>0]=m},this.ob=function(m){s()[this.fb+8>>2>>>0]=m},this.gb=function(m,b){this.nb(),this.pb(m),this.ob(b)},this.nb=function(){s()[this.fb+16>>2>>>0]=0}}var Pt=0,bo=0;function Jr(l,m,b,A){return x?Ne(3,1,l,m,b,A):jt(l,m,b,A)}function jt(l,m,b,A){if(l>>>=0,m>>>=0,b>>>=0,A>>>=0,typeof SharedArrayBuffer>"u")return Se("Current environment does not support SharedArrayBuffer, pthreads are not available!"),6;var k=[];return x&&k.length===0?Jr(l,m,b,A):(l={Gb:b,Xa:l,rb:A,Mb:k},x?(l.Ob="spawnThread",postMessage(l,k),0):vr(l))}function $r(l,m,b){return x?Ne(4,1,l,m,b):0}function nr(l,m){if(x)return Ne(5,1,l,m)}var Sr=l=>{for(var m=0,b=0;b<l.length;++b){var A=l.charCodeAt(b);127>=A?m++:2047>=A?m+=2:55296<=A&&57343>=A?(m+=4,++b):m+=3}return m},en=(l,m,b,A)=>{if(b>>>=0,!(0<A))return 0;var k=b;A=b+A-1;for(var V=0;V<l.length;++V){var L=l.charCodeAt(V);if(55296<=L&&57343>=L){var de=l.charCodeAt(++V);L=65536+((L&1023)<<10)|de&1023}if(127>=L){if(b>=A)break;m[b++>>>0]=L}else{if(2047>=L){if(b+1>=A)break;m[b++>>>0]=192|L>>6}else{if(65535>=L){if(b+2>=A)break;m[b++>>>0]=224|L>>12}else{if(b+3>=A)break;m[b++>>>0]=240|L>>18,m[b++>>>0]=128|L>>12&63}m[b++>>>0]=128|L>>6&63}m[b++>>>0]=128|L&63}}return m[b>>>0]=0,b-k},tn=(l,m,b)=>en(l,o(),m,b);function rn(l,m){if(x)return Ne(6,1,l,m)}function nn(l,m,b){if(x)return Ne(7,1,l,m,b)}function on(l,m,b){return x?Ne(8,1,l,m,b):0}function an(l,m){if(x)return Ne(9,1,l,m)}function sn(l,m,b){if(x)return Ne(10,1,l,m,b)}function un(l,m,b,A){if(x)return Ne(11,1,l,m,b,A)}function ln(l,m,b,A){if(x)return Ne(12,1,l,m,b,A)}function dn(l,m,b,A){if(x)return Ne(13,1,l,m,b,A)}function xr(l){if(x)return Ne(14,1,l)}function cn(l,m){if(x)return Ne(15,1,l,m)}function Cr(l,m,b){if(x)return Ne(16,1,l,m,b)}var at=l=>{if(!we)try{if(l(),!Ge())try{x?dr(he):wr(he)}catch(m){m instanceof Ht||m=="unwind"||_(1,m)}}catch(m){m instanceof Ht||m=="unwind"||_(1,m)}};function Kt(l){l>>>=0,typeof Atomics.Nb=="function"&&(Atomics.Nb(n(),l>>2,l).value.then(zt),l+=128,Atomics.store(n(),l>>2,1))}a.__emscripten_thread_mailbox_await=Kt;function zt(){var l=lr();l&&(Kt(l),at(()=>Yt()))}a.checkMailbox=zt;var Ut=l=>l%4===0&&(l%100!==0||l%400===0),Ar=[0,31,60,91,121,152,182,213,244,274,305,335],vt=[0,31,59,90,120,151,181,212,243,273,304,334];function pn(l,m,b,A,k,V,L,de){return x?Ne(17,1,l,m,b,A,k,V,L,de):-52}function mn(l,m,b,A,k,V,L){if(x)return Ne(18,1,l,m,b,A,k,V,L)}var ct=l=>{var m=Sr(l)+1,b=Pr(m);return b&&tn(l,b,m),b},or=[],fn=(l,m)=>{or.length=0;var b;for(m>>=2;b=o()[l++>>>0];)m+=b!=105&m,or.push(b==105?n()[m>>>0]:c()[m++>>>1]),++m;return or},wt=l=>{var m=Zt();return l=l(),cr(m),l};function Ne(l,m){var b=arguments.length-2,A=arguments;return wt(()=>{for(var k=Rr(8*b),V=k>>3,L=0;L<b;L++){var de=A[2+L];c()[V+L>>>0]=de}return En(l,b,k,m)})}var Ir=[],ar={},ot=()=>{if(!qt){var l={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:(typeof navigator=="object"&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",_:w||"./this.program"},m;for(m in ar)ar[m]===void 0?delete l[m]:l[m]=ar[m];var b=[];for(m in l)b.push(`${m}=${l[m]}`);qt=b}return qt},qt;function hn(l,m){if(x)return Ne(19,1,l,m);l>>>=0,m>>>=0;var b=0;return ot().forEach(function(A,k){var V=m+b;for(k=s()[l+4*k>>2>>>0]=V,V=0;V<A.length;++V)r()[k++>>0>>>0]=A.charCodeAt(V);r()[k>>0>>>0]=0,b+=A.length+1}),0}function gn(l,m){if(x)return Ne(20,1,l,m);l>>>=0,m>>>=0;var b=ot();s()[l>>2>>>0]=b.length;var A=0;return b.forEach(function(k){A+=k.length+1}),s()[m>>2>>>0]=A,0}function Me(l){return x?Ne(21,1,l):52}function Tr(l,m,b,A){return x?Ne(22,1,l,m,b,A):52}function yn(l,m,b,A,k){return x?Ne(23,1,l,m,b,A,k):70}var vo=[null,[],[]];function bn(l,m,b,A){if(x)return Ne(24,1,l,m,b,A);m>>>=0,b>>>=0,A>>>=0;for(var k=0,V=0;V<b;V++){var L=s()[m>>2>>>0],de=s()[m+4>>2>>>0];m+=8;for(var ie=0;ie<de;ie++){var ae=o()[L+ie>>>0],ue=vo[l];ae===0||ae===10?((l===1?ce:Se)(Qr(ue,0)),ue.length=0):ue.push(ae)}k+=de}return s()[A>>2>>>0]=k,0}var vn=[31,29,31,30,31,30,31,31,30,31,30,31],wn=[31,28,31,30,31,30,31,31,30,31,30,31];function wo(l){var m=Array(Sr(l)+1);return en(l,m,0,m.length),m}var _o=(l,m)=>{r().set(l,m>>>0)};function Er(l,m,b,A){function k(R,pe,Oe){for(R=typeof R=="number"?R.toString():R||"";R.length<pe;)R=Oe[0]+R;return R}function V(R,pe){return k(R,pe,"0")}function L(R,pe){function Oe(Mn){return 0>Mn?-1:0<Mn?1:0}var Rt;return(Rt=Oe(R.getFullYear()-pe.getFullYear()))===0&&(Rt=Oe(R.getMonth()-pe.getMonth()))===0&&(Rt=Oe(R.getDate()-pe.getDate())),Rt}function de(R){switch(R.getDay()){case 0:return new Date(R.getFullYear()-1,11,29);case 1:return R;case 2:return new Date(R.getFullYear(),0,3);case 3:return new Date(R.getFullYear(),0,2);case 4:return new Date(R.getFullYear(),0,1);case 5:return new Date(R.getFullYear()-1,11,31);case 6:return new Date(R.getFullYear()-1,11,30)}}function ie(R){var pe=R.Za;for(R=new Date(new Date(R.$a+1900,0,1).getTime());0<pe;){var Oe=R.getMonth(),Rt=(Ut(R.getFullYear())?vn:wn)[Oe];if(pe>Rt-R.getDate())pe-=Rt-R.getDate()+1,R.setDate(1),11>Oe?R.setMonth(Oe+1):(R.setMonth(0),R.setFullYear(R.getFullYear()+1));else{R.setDate(R.getDate()+pe);break}}return Oe=new Date(R.getFullYear()+1,0,4),pe=de(new Date(R.getFullYear(),0,4)),Oe=de(Oe),0>=L(pe,R)?0>=L(Oe,R)?R.getFullYear()+1:R.getFullYear():R.getFullYear()-1}l>>>=0,m>>>=0,b>>>=0,A>>>=0;var ae=n()[A+40>>2>>>0];A={Kb:n()[A>>2>>>0],Jb:n()[A+4>>2>>>0],cb:n()[A+8>>2>>>0],ib:n()[A+12>>2>>>0],eb:n()[A+16>>2>>>0],$a:n()[A+20>>2>>>0],Wa:n()[A+24>>2>>>0],Za:n()[A+28>>2>>>0],Tb:n()[A+32>>2>>>0],Ib:n()[A+36>>2>>>0],Lb:ae?tt(ae):""},b=tt(b),ae={"%c":"%a %b %d %H:%M:%S %Y","%D":"%m/%d/%y","%F":"%Y-%m-%d","%h":"%b","%r":"%I:%M:%S %p","%R":"%H:%M","%T":"%H:%M:%S","%x":"%m/%d/%y","%X":"%H:%M:%S","%Ec":"%c","%EC":"%C","%Ex":"%m/%d/%y","%EX":"%H:%M:%S","%Ey":"%y","%EY":"%Y","%Od":"%d","%Oe":"%e","%OH":"%H","%OI":"%I","%Om":"%m","%OM":"%M","%OS":"%S","%Ou":"%u","%OU":"%U","%OV":"%V","%Ow":"%w","%OW":"%W","%Oy":"%y"};for(var ue in ae)b=b.replace(new RegExp(ue,"g"),ae[ue]);var xe="Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "),ke="January February March April May June July August September October November December".split(" ");ae={"%a":R=>xe[R.Wa].substring(0,3),"%A":R=>xe[R.Wa],"%b":R=>ke[R.eb].substring(0,3),"%B":R=>ke[R.eb],"%C":R=>V((R.$a+1900)/100|0,2),"%d":R=>V(R.ib,2),"%e":R=>k(R.ib,2," "),"%g":R=>ie(R).toString().substring(2),"%G":R=>ie(R),"%H":R=>V(R.cb,2),"%I":R=>(R=R.cb,R==0?R=12:12<R&&(R-=12),V(R,2)),"%j":R=>{for(var pe=0,Oe=0;Oe<=R.eb-1;pe+=(Ut(R.$a+1900)?vn:wn)[Oe++]);return V(R.ib+pe,3)},"%m":R=>V(R.eb+1,2),"%M":R=>V(R.Jb,2),"%n":()=>`\n`,"%p":R=>0<=R.cb&&12>R.cb?"AM":"PM","%S":R=>V(R.Kb,2),"%t":()=>"	","%u":R=>R.Wa||7,"%U":R=>V(Math.floor((R.Za+7-R.Wa)/7),2),"%V":R=>{var pe=Math.floor((R.Za+7-(R.Wa+6)%7)/7);if(2>=(R.Wa+371-R.Za-2)%7&&pe++,pe)pe==53&&(Oe=(R.Wa+371-R.Za)%7,Oe==4||Oe==3&&Ut(R.$a)||(pe=1));else{pe=52;var Oe=(R.Wa+7-R.Za-1)%7;(Oe==4||Oe==5&&Ut(R.$a%400-1))&&pe++}return V(pe,2)},"%w":R=>R.Wa,"%W":R=>V(Math.floor((R.Za+7-(R.Wa+6)%7)/7),2),"%y":R=>(R.$a+1900).toString().substring(2),"%Y":R=>R.$a+1900,"%z":R=>{R=R.Ib;var pe=0<=R;return R=Math.abs(R)/60,(pe?"+":"-")+("0000"+(R/60*100+R%60)).slice(-4)},"%Z":R=>R.Lb,"%%":()=>"%"},b=b.replace(/%%/g,"\\0\\0");for(ue in ae)b.includes(ue)&&(b=b.replace(new RegExp(ue,"g"),ae[ue](A)));return b=b.replace(/\\0\\0/g,"%"),ue=wo(b),ue.length>m?0:(_o(ue,l),ue.length-1)}function ir(l){try{l()}catch(m){dt(m)}}function $o(l){var m={},b;for(b in l)(function(A){var k=l[A];m[A]=typeof k=="function"?function(){sr.push(A);try{return k.apply(null,arguments)}finally{we||(sr.pop()===A||dt(),pt&&_t===1&&sr.length===0&&(_t=0,je+=1,ir(Rn),typeof Fibers<"u"&&Fibers.Ub()))}}:k})(b);return m}var _t=0,pt=null,_n=0,sr=[],$n={},Sn={},So=0,Or=null,xo=[];function kr(){return new Promise((l,m)=>{Or={resolve:l,reject:m}})}function xn(){var l=Pr(65548),m=l+12;s()[l>>2>>>0]=m,s()[l+4>>2>>>0]=m+65536,m=sr[0];var b=$n[m];return b===void 0&&(b=So++,$n[m]=b,Sn[b]=m),m=b,n()[l+8>>2>>>0]=m,l}function Co(){var l=n()[pt+8>>2>>>0];return l=W[Sn[l]],--je,l()}function ur(l){if(!we){if(_t===0){var m=!1,b=!1;l((A=0)=>{if(!we&&(_n=A,m=!0,b)){_t=2,ir(()=>Dn(pt)),typeof Browser<"u"&&Browser.hb.sb&&Browser.hb.resume(),A=!1;try{var k=Co()}catch(de){k=de,A=!0}var V=!1;if(!pt){var L=Or;L&&(Or=null,(A?L.reject:L.resolve)(k),V=!0)}if(A&&!V)throw k}}),b=!0,m||(_t=1,pt=xn(),typeof Browser<"u"&&Browser.hb.sb&&Browser.hb.pause(),ir(()=>Pn(pt)))}else _t===2?(_t=0,ir(Br),In(pt),pt=null,xo.forEach(A=>at(A))):dt(`invalid state: ${_t}`);return _n}}function Cn(l){return ur(m=>{l().then(m)})}ge.gb();var Ao=[null,Mt,_r,Jr,$r,nr,rn,nn,on,an,sn,un,ln,dn,xr,cn,Cr,pn,mn,hn,gn,Me,Tr,yn,bn],An={r:function(l,m,b){return Cn(async()=>{await a.xb(l,m,b)})},b:function(l,m,b){throw l>>>=0,new Ye(l).gb(m>>>0,b>>>0),Pt=l,bo++,Pt},O:function(l){Tn(l>>>0,!$,1,!v,131072,!1),ge.lb()},l:function(l){l>>>=0,x?postMessage({cmd:"cleanupThread",thread:l}):Zr(l)},I:jt,i:$r,U:nr,E:rn,G:nn,V:on,S:an,K:sn,R:un,p:ln,F:dn,C:xr,T:cn,D:Cr,q:()=>!0,A:function(l,m){l>>>=0,l==m>>>0?setTimeout(()=>zt()):x?postMessage({targetThread:l,cmd:"checkMailbox"}):(l=ge.Qa[l])&&l.postMessage({cmd:"checkMailbox"})},M:function(){return-1},N:Kt,X:function(l){C&&ge.Qa[l>>>0].ref()},u:function(l,m,b){l=m+2097152>>>0<4194305-!!l?(l>>>0)+4294967296*m:NaN,b>>>=0,l=new Date(1e3*l),n()[b>>2>>>0]=l.getUTCSeconds(),n()[b+4>>2>>>0]=l.getUTCMinutes(),n()[b+8>>2>>>0]=l.getUTCHours(),n()[b+12>>2>>>0]=l.getUTCDate(),n()[b+16>>2>>>0]=l.getUTCMonth(),n()[b+20>>2>>>0]=l.getUTCFullYear()-1900,n()[b+24>>2>>>0]=l.getUTCDay(),l=(l.getTime()-Date.UTC(l.getUTCFullYear(),0,1,0,0,0,0))/864e5|0,n()[b+28>>2>>>0]=l},v:function(l,m,b){l=m+2097152>>>0<4194305-!!l?(l>>>0)+4294967296*m:NaN,b>>>=0,l=new Date(1e3*l),n()[b>>2>>>0]=l.getSeconds(),n()[b+4>>2>>>0]=l.getMinutes(),n()[b+8>>2>>>0]=l.getHours(),n()[b+12>>2>>>0]=l.getDate(),n()[b+16>>2>>>0]=l.getMonth(),n()[b+20>>2>>>0]=l.getFullYear()-1900,n()[b+24>>2>>>0]=l.getDay(),m=(Ut(l.getFullYear())?Ar:vt)[l.getMonth()]+l.getDate()-1|0,n()[b+28>>2>>>0]=m,n()[b+36>>2>>>0]=-(60*l.getTimezoneOffset()),m=new Date(l.getFullYear(),6,1).getTimezoneOffset();var A=new Date(l.getFullYear(),0,1).getTimezoneOffset();l=(m!=A&&l.getTimezoneOffset()==Math.min(A,m))|0,n()[b+32>>2>>>0]=l},w:function(l){l>>>=0;var m=new Date(n()[l+20>>2>>>0]+1900,n()[l+16>>2>>>0],n()[l+12>>2>>>0],n()[l+8>>2>>>0],n()[l+4>>2>>>0],n()[l>>2>>>0],0),b=n()[l+32>>2>>>0],A=m.getTimezoneOffset(),k=new Date(m.getFullYear(),6,1).getTimezoneOffset(),V=new Date(m.getFullYear(),0,1).getTimezoneOffset(),L=Math.min(V,k);return 0>b?n()[l+32>>2>>>0]=+(k!=V&&L==A):0<b!=(L==A)&&(k=Math.max(V,k),m.setTime(m.getTime()+6e4*((0<b?L:k)-A))),n()[l+24>>2>>>0]=m.getDay(),b=(Ut(m.getFullYear())?Ar:vt)[m.getMonth()]+m.getDate()-1|0,n()[l+28>>2>>>0]=b,n()[l>>2>>>0]=m.getSeconds(),n()[l+4>>2>>>0]=m.getMinutes(),n()[l+8>>2>>>0]=m.getHours(),n()[l+12>>2>>>0]=m.getDate(),n()[l+16>>2>>>0]=m.getMonth(),n()[l+20>>2>>>0]=m.getYear(),l=m.getTime()/1e3,On((Bt=l,1<=+Math.abs(Bt)?0<Bt?+Math.floor(Bt/4294967296)>>>0:~~+Math.ceil((Bt-+(~~Bt>>>0))/4294967296)>>>0:0)),l>>>0},s:pn,t:mn,z:function(l,m,b){function A(ae){return(ae=ae.toTimeString().match(/\\(([A-Za-z ]+)\\)$/))?ae[1]:"GMT"}l>>>=0,m>>>=0,b>>>=0;var k=new Date().getFullYear(),V=new Date(k,0,1),L=new Date(k,6,1);k=V.getTimezoneOffset();var de=L.getTimezoneOffset(),ie=Math.max(k,de);s()[l>>2>>>0]=60*ie,n()[m>>2>>>0]=+(k!=de),l=A(V),m=A(L),l=ct(l),m=ct(m),de<k?(s()[b>>2>>>0]=l,s()[b+4>>2>>>0]=m):(s()[b>>2>>>0]=m,s()[b+4>>2>>>0]=l)},d:()=>{dt("")},c:function(l,m,b){return l>>>=0,m=fn(m>>>0,b>>>0),br[l].apply(null,m)},k:function(l,m,b){return l>>>=0,m=fn(m>>>0,b>>>0),br[l].apply(null,m)},m:function(){},j:function(){return Date.now()},W:()=>{throw je+=1,"unwind"},B:function(){return 4294901760},f:()=>performance.timeOrigin+performance.now(),g:function(){return C?(Ha(),Xt(Ga)).cpus().length:navigator.hardwareConcurrency},L:function(l,m,b,A){for(ge.Pb=m>>>0,Ir.length=b,m=A>>>0>>3,A=0;A<b;A++)Ir[A]=c()[m+A>>>0];return(0>l?br[-l-1]:Ao[l]).apply(null,Ir)},y:function(l){l>>>=0;var m=o().length;if(l<=m||4294901760<l)return!1;for(var b=1;4>=b;b*=2){var A=m*(1+.2/b);A=Math.min(A,l+100663296);var k=Math;A=Math.max(l,A);e:{k=k.min.call(k,4294901760,A+(65536-A%65536)%65536)-Q.buffer.byteLength+65535>>>16;try{Q.grow(k),_e();var V=1;break e}catch{}V=void 0}if(V)return!0}return!1},P:hn,Q:gn,H:wr,h:Me,o:Tr,x:yn,n:bn,a:Q||a.wasmMemory,J:Er,e:function(l,m,b,A){return Er(l>>>0,m>>>0,b>>>0,A>>>0)}};(function(){function l(b,A){return b=b.exports,b=$o(b),W=b=ya(b),ge.mb.push(W.Da),Qe.unshift(W.Y),Ce=A,yr(),b}var m={a:An};if(jr(),a.instantiateWasm)try{return a.instantiateWasm(m,l)}catch(b){Se("Module.instantiateWasm callback failed with error: "+b),g(b)}return yo(m,function(b){l(b.instance,b.module)}).catch(g),{}})(),a._OrtInit=(l,m)=>(a._OrtInit=W.Z)(l,m),a._OrtGetLastError=(l,m)=>(a._OrtGetLastError=W._)(l,m),a._OrtCreateSessionOptions=(l,m,b,A,k,V,L,de,ie,ae)=>(a._OrtCreateSessionOptions=W.$)(l,m,b,A,k,V,L,de,ie,ae),a._OrtAppendExecutionProvider=(l,m)=>(a._OrtAppendExecutionProvider=W.aa)(l,m),a._OrtAddFreeDimensionOverride=(l,m,b)=>(a._OrtAddFreeDimensionOverride=W.ba)(l,m,b),a._OrtAddSessionConfigEntry=(l,m,b)=>(a._OrtAddSessionConfigEntry=W.ca)(l,m,b),a._OrtReleaseSessionOptions=l=>(a._OrtReleaseSessionOptions=W.da)(l),a._OrtCreateSession=(l,m,b)=>(a._OrtCreateSession=W.ea)(l,m,b),a._OrtReleaseSession=l=>(a._OrtReleaseSession=W.fa)(l),a._OrtGetInputOutputCount=(l,m,b)=>(a._OrtGetInputOutputCount=W.ga)(l,m,b),a._OrtGetInputName=(l,m)=>(a._OrtGetInputName=W.ha)(l,m),a._OrtGetOutputName=(l,m)=>(a._OrtGetOutputName=W.ia)(l,m),a._OrtFree=l=>(a._OrtFree=W.ja)(l),a._OrtCreateTensor=(l,m,b,A,k,V)=>(a._OrtCreateTensor=W.ka)(l,m,b,A,k,V),a._OrtGetTensorData=(l,m,b,A,k)=>(a._OrtGetTensorData=W.la)(l,m,b,A,k),a._OrtReleaseTensor=l=>(a._OrtReleaseTensor=W.ma)(l),a._OrtCreateRunOptions=(l,m,b,A)=>(a._OrtCreateRunOptions=W.na)(l,m,b,A),a._OrtAddRunConfigEntry=(l,m,b)=>(a._OrtAddRunConfigEntry=W.oa)(l,m,b),a._OrtReleaseRunOptions=l=>(a._OrtReleaseRunOptions=W.pa)(l),a._OrtCreateBinding=l=>(a._OrtCreateBinding=W.qa)(l),a._OrtBindInput=(l,m,b)=>(a._OrtBindInput=W.ra)(l,m,b),a._OrtBindOutput=(l,m,b,A)=>(a._OrtBindOutput=W.sa)(l,m,b,A),a._OrtClearBoundOutputs=l=>(a._OrtClearBoundOutputs=W.ta)(l),a._OrtReleaseBinding=l=>(a._OrtReleaseBinding=W.ua)(l),a._OrtRunWithBinding=(l,m,b,A,k)=>(a._OrtRunWithBinding=W.va)(l,m,b,A,k),a._OrtRun=(l,m,b,A,k,V,L,de)=>(a._OrtRun=W.wa)(l,m,b,A,k,V,L,de),a._OrtEndProfiling=l=>(a._OrtEndProfiling=W.xa)(l),a._JsepOutput=(l,m,b)=>(a._JsepOutput=W.ya)(l,m,b),a._JsepGetNodeName=l=>(a._JsepGetNodeName=W.za)(l);var lr=a._pthread_self=()=>(lr=a._pthread_self=W.Aa)(),Pr=a._malloc=l=>(Pr=a._malloc=W.Ba)(l),In=a._free=l=>(In=a._free=W.Ca)(l);a.__emscripten_tls_init=()=>(a.__emscripten_tls_init=W.Da)();var Tn=a.__emscripten_thread_init=(l,m,b,A,k,V)=>(Tn=a.__emscripten_thread_init=W.Fa)(l,m,b,A,k,V);a.__emscripten_thread_crashed=()=>(a.__emscripten_thread_crashed=W.Ga)();var En=(l,m,b,A)=>(En=W.Ha)(l,m,b,A),oe=l=>(oe=W.Ia)(l),dr=a.__emscripten_thread_exit=l=>(dr=a.__emscripten_thread_exit=W.Ja)(l),Yt=a.__emscripten_check_mailbox=()=>(Yt=a.__emscripten_check_mailbox=W.Ka)(),On=l=>(On=W.La)(l),kn=(l,m)=>(kn=W.Ma)(l,m),Zt=()=>(Zt=W.Na)(),cr=l=>(cr=W.Oa)(l),Rr=l=>(Rr=W.Pa)(l),Dr=a.dynCall_ii=(l,m)=>(Dr=a.dynCall_ii=W.Ra)(l,m),Pn=l=>(Pn=W.Sa)(l),Rn=()=>(Rn=W.Ta)(),Dn=l=>(Dn=W.Ua)(l),Br=()=>(Br=W.Va)();a.___start_em_js=923047,a.___stop_em_js=923208;function ya(l){l=Object.assign({},l);var m=A=>()=>A()>>>0,b=A=>k=>A(k)>>>0;return l.__errno_location=m(l.__errno_location),l.pthread_self=m(l.pthread_self),l.malloc=b(l.malloc),l.stackSave=m(l.stackSave),l.stackAlloc=b(l.stackAlloc),l}a.keepRuntimeAlive=Ge,a.wasmMemory=Q,a.stackAlloc=Rr,a.stackSave=Zt,a.stackRestore=cr,a.UTF8ToString=tt,a.stringToUTF8=tn,a.lengthBytesUTF8=Sr,a.ExitStatus=Ht,a.PThread=ge;var pr;lt=function l(){pr||Bn(),pr||(lt=l)};function Bn(){function l(){if(!pr&&(pr=!0,a.calledRun=!0,!we)&&(x||Ft(Qe),f(a),a.onRuntimeInitialized&&a.onRuntimeInitialized(),!x)){if(a.postRun)for(typeof a.postRun=="function"&&(a.postRun=[a.postRun]);a.postRun.length;){var m=a.postRun.shift();He.unshift(m)}Ft(He)}}if(!(0<et))if(x)f(a),x||Ft(Qe),startWorker(a);else{if(a.preRun)for(typeof a.preRun=="function"&&(a.preRun=[a.preRun]);a.preRun.length;)qe.unshift(a.preRun.shift());Ft(qe),0<et||(a.setStatus?(a.setStatus("Running..."),setTimeout(function(){setTimeout(function(){a.setStatus("")},1),l()},1)):l())}}if(a.preInit)for(typeof a.preInit=="function"&&(a.preInit=[a.preInit]);0<a.preInit.length;)a.preInit.pop()();return Bn(),t.ready}})();typeof Fa=="object"&&typeof Do=="object"?Do.exports=La:typeof define=="function"&&define.amd&&define([],()=>La)});var Ka=Vr((Sf,wc)=>{wc.exports=\'"use strict";var Module={},ENVIRONMENT_IS_NODE=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string";if(ENVIRONMENT_IS_NODE){var nodeWorkerThreads=require("worker_threads"),parentPort=nodeWorkerThreads.parentPort;parentPort.on("message",e=>onmessage({data:e}));var fs=require("fs");Object.assign(global,{self:global,require,Module,location:{href:__filename},Worker:nodeWorkerThreads.Worker,importScripts:e=>(0,eval)(fs.readFileSync(e,"utf8")+"//# sourceURL="+e),postMessage:e=>parentPort.postMessage(e),performance:global.performance||{now:Date.now}})}var initializedJS=!1;function threadPrintErr(){var e=Array.prototype.slice.call(arguments).join(" ");if(ENVIRONMENT_IS_NODE){fs.writeSync(2,e+`\\n`);return}console.error(e)}function threadAlert(){var e=Array.prototype.slice.call(arguments).join(" ");postMessage({cmd:"alert",text:e,threadId:Module._pthread_self()})}var err=threadPrintErr;self.alert=threadAlert,Module.instantiateWasm=(e,t)=>{var a=Module.wasmModule;Module.wasmModule=null;var r=new WebAssembly.Instance(a,e);return t(r)},self.onunhandledrejection=e=>{throw e.reason??e};function handleMessage(e){try{if(e.data.cmd==="load"){let a=[];self.onmessage=r=>a.push(r),self.startWorker=r=>{Module=r,postMessage({cmd:"loaded"});for(let s of a)handleMessage(s);self.onmessage=handleMessage},Module.wasmModule=e.data.wasmModule;for(const r of e.data.handlers)Module[r]=(...s)=>{postMessage({cmd:"callHandler",handler:r,args:s})};if(Module.wasmMemory=e.data.wasmMemory,Module.buffer=Module.wasmMemory.buffer,Module.ENVIRONMENT_IS_PTHREAD=!0,typeof e.data.urlOrBlob=="string")importScripts(e.data.urlOrBlob);else{var t=URL.createObjectURL(e.data.urlOrBlob);importScripts(t),URL.revokeObjectURL(t)}ortWasmThreaded(Module)}else if(e.data.cmd==="run"){Module.__emscripten_thread_init(e.data.pthread_ptr,0,0,1),Module.__emscripten_thread_mailbox_await(e.data.pthread_ptr),Module.establishStackSpace(),Module.PThread.receiveObjectTransfer(e.data),Module.PThread.threadInitTLS(),initializedJS||(initializedJS=!0);try{Module.invokeEntryPoint(e.data.start_routine,e.data.arg)}catch(a){if(a!="unwind")throw a}}else e.data.cmd==="cancel"?Module._pthread_self()&&Module.__emscripten_thread_exit(-1):e.data.target==="setimmediate"||(e.data.cmd==="checkMailbox"?initializedJS&&Module.checkMailbox():e.data.cmd&&(err("worker.js received unknown command "+e.data.cmd),err(e.data)))}catch(a){throw Module.__emscripten_thread_crashed&&Module.__emscripten_thread_crashed(),a}}self.onmessage=handleMessage;\\n\'});var zo,Vt,Qt,Hn,Wr,Ja,Uo,ve=Z(()=>{"use strict";zo=e=>{switch(e){case"int8":return 3;case"uint8":return 2;case"bool":return 9;case"int16":return 5;case"uint16":return 4;case"int32":return 6;case"uint32":return 12;case"float16":return 10;case"float32":return 1;case"float64":return 11;case"string":return 8;case"int64":return 7;case"uint64":return 13;default:throw new Error(`unsupported data type: ${e}`)}},Vt=e=>{switch(e){case 3:return"int8";case 2:return"uint8";case 9:return"bool";case 5:return"int16";case 4:return"uint16";case 6:return"int32";case 12:return"uint32";case 10:return"float16";case 1:return"float32";case 11:return"float64";case 8:return"string";case 7:return"int64";case 13:return"uint64";default:throw new Error(`unsupported data type: ${e}`)}},Qt=e=>[void 0,4,1,1,2,2,4,8,void 0,1,2,8,4,8,void 0,void 0,void 0][e],Hn=e=>{switch(e){case"float16":return typeof Float16Array<"u"&&Float16Array.from?Float16Array:Uint16Array;case"float32":return Float32Array;case"uint8":return Uint8Array;case"int8":return Int8Array;case"uint16":return Uint16Array;case"int16":return Int16Array;case"int32":return Int32Array;case"bool":return Uint8Array;case"float64":return Float64Array;case"uint32":return Uint32Array;case"int64":return BigInt64Array;case"uint64":return BigUint64Array;default:throw new Error(`unsupported type: ${e}`)}},Wr=e=>{switch(e){case"verbose":return 0;case"info":return 1;case"warning":return 2;case"error":return 3;case"fatal":return 4;default:throw new Error(`unsupported logging level: ${e}`)}},Ja=e=>e==="float32"||e==="float16"||e==="int32"||e==="int64"||e==="uint32"||e==="uint8"||e==="bool",Uo=e=>{switch(e){case"none":return 0;case"cpu":return 1;case"cpu-pinned":return 2;case"texture":return 3;case"gpu-buffer":return 4;default:throw new Error(`unsupported data location: ${e}`)}}});var Ln=Z(()=>{"use strict"});var ti=Z(()=>{"use strict";Ln()});var ri,ni=Z(()=>{"use strict";ri="1.18.0"});var oi,St,Vo=Z(()=>{"use strict";ni();oi="warning",St={wasm:{},webgl:{},webgpu:{},versions:{common:ri},set logLevel(e){if(e!==void 0){if(typeof e!="string"||["verbose","info","warning","error","fatal"].indexOf(e)===-1)throw new Error(`Unsupported logging level: ${e}`);oi=e}},get logLevel(){return oi}};Object.defineProperty(St,"logLevel",{enumerable:!0})});var mr,ai=Z(()=>{"use strict";Vo();mr=St});var ii=Z(()=>{"use strict"});var si=Z(()=>{"use strict";Fn()});var li=Z(()=>{"use strict"});var di=Z(()=>{"use strict";Fn()});var Fn=Z(()=>{"use strict";ii();si();li();di()});var jn=Z(()=>{"use strict";Fn()});var ci,pi,Jt,Nt,No=Z(()=>{"use strict";Vo();ci=(e,t)=>{},pi=(e,t)=>{},Jt=e=>{(typeof St.trace>"u"?!St.wasm.trace:!St.trace)||pi("BEGIN",e)},Nt=e=>{(typeof St.trace>"u"?!St.wasm.trace:!St.trace)||pi("END",e)}});var mi=Z(()=>{"use strict";Ln();jn();No()});var fi=Z(()=>{"use strict";mi()});var hi=Z(()=>{"use strict"});var gi=Z(()=>{"use strict"});var yi=Z(()=>{"use strict"});var bi=Z(()=>{"use strict"});var vi=Z(()=>{"use strict";Ln();jn()});var wi=Z(()=>{"use strict";vi()});var fr=Z(()=>{"use strict";ti();ai();fi();jn();hi();gi();No();yi();bi();wi()});var kc,Pc,_i,$i,Si,Rc,Ue,Wt=Z(()=>{"use strict";ve();kc=["V","I","W","E","F"],Pc=(e,t)=>{console.log(`[${kc[e]},${new Date().toISOString()}]${t}`)},Si=(e,t)=>{_i=e,$i=t},Rc=(e,t)=>{let r=Wr(e),o=Wr(_i);r>=o&&Pc(r,typeof t=="function"?t():t)},Ue=(...e)=>{$i&&Rc(...e)}});var xi,Ci=Z(()=>{"use strict";ve();xi=(e,t)=>new(Hn(t))(e)});var Kn=Z(()=>{"use strict"});var Wo,Go,qn,Dc,Ai,Lo,Ho,Ti,Ei=Z(()=>{"use strict";Wt();Kn();Wo={64:50,128:30,256:10,512:10,2048:10,4096:10,8192:30,16384:10,32768:40,65536:40,131072:40,262144:30,524288:30,1048576:30,2097152:30},Go=[],qn=e=>{for(let t=0;t<Go.length;t++){let r=Go[t];if(e<r)return r}return Math.ceil(e/16)*16},Dc=1,Ai=()=>Dc++,Lo=async(e,t,r,o)=>{let n=qn(r),s=e.device.createBuffer({size:n,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ});try{let u=e.getCommandEncoder();e.endComputePass(),u.copyBufferToBuffer(t,0,s,0,n),e.flush(),await s.mapAsync(GPUMapMode.READ);let c=s.getMappedRange();if(o){let a=o();return a.set(new Uint8Array(c,0,r)),a}else return new Uint8Array(c.slice(0,r))}finally{s.destroy()}},Ho=class{constructor(t){this.backend=t;this.storageCache=new Map,this.freeBuffers=new Map,this.freeUniformBuffers=new Map,this.buffersForUploadingPending=[],this.buffersPending=[],this.externalBuffers=new Map,this.capturedPendingBuffers=new Map,this.backend.env.webgpu.cachealloc={},this.backend.env.webgpu.cachefree={},this.backend.env.webgpu.cachemiss={},this.backend.env.webgpu.cacheinflight={};for(let r in Wo)Go.push(Number(r)),this.freeBuffers.set(Number(r),[]),this.freeUniformBuffers.set(Number(r),[])}incstats(t,r){if(this.backend.env.webgpu[t][r]?this.backend.env.webgpu[t][r]+=1:this.backend.env.webgpu[t][r]=1,t!=="cachemiss"){this.backend.env.webgpu.cacheinflight[r]||(this.backend.env.webgpu.cacheinflight[r]=0),this.backend.env.webgpu.cachefree[r]||(this.backend.env.webgpu.cachefree[r]=0);let o=this.backend.env.webgpu.cachealloc[r]-this.backend.env.webgpu.cachefree[r];this.backend.env.webgpu.cacheinflight[r]<=o&&(this.backend.env.webgpu.cacheinflight[r]=o)}}upload(t,r){let o=r.buffer,n=r.byteOffset,s=r.byteLength,u=qn(s);this.backend.env.trace&&console.timeStamp(`upload-begin-${u}`);let c=this.storageCache.get(t);if(!c)throw new Error("gpu data for uploading does not exist");if(c.originalSize!==s)throw new Error(`inconsistent data size. gpu data size=${c.originalSize}, data size=${s}`);let a=this.backend.device.createBuffer({mappedAtCreation:!0,size:u,usage:GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC}),f=a.getMappedRange();new Uint8Array(f).set(new Uint8Array(o,n,s)),a.unmap();let g=this.backend.getCommandEncoder();this.backend.endComputePass(),g.copyBufferToBuffer(a,0,c.gpuData.buffer,0,u),Ue("verbose",()=>`[WebGPU] GpuDataManager.upload(id=${t})`),this.backend.env.trace&&console.timeStamp(`upload-end-${u}`),this.buffersForUploadingPending.push(a)}memcpy(t,r){let o=this.storageCache.get(t);if(!o)throw new Error("source gpu data for memcpy does not exist");let n=this.storageCache.get(r);if(!n)throw new Error("destination gpu data for memcpy does not exist");if(o.originalSize!==n.originalSize)throw new Error("inconsistent source and destination gpu data size");let s=qn(o.originalSize);this.backend.env.trace&&console.timeStamp(`memcpy-begin-${s}`);let u=this.backend.getCommandEncoder();this.backend.endComputePass(),u.copyBufferToBuffer(o.gpuData.buffer,0,n.gpuData.buffer,0,s),this.backend.env.trace&&console.timeStamp(`memcpy-end-${s}`)}registerExternalBuffer(t,r,o){let n;if(o){if(n=this.externalBuffers.get(o),n===void 0)throw new Error("previous buffer is not registered");if(t===o)return Ue("verbose",()=>`[WebGPU] GpuDataManager.registerExternalBuffer(size=${r}) => id=${n}, buffer is the same, skip.`),n;if(this.backend.capturedCommandList.has(this.backend.currentSessionId))throw new Error(`Registering a different external buffer under graph capture mode is not supported yet.\n             Please use the previous external buffer!`);this.externalBuffers.delete(o)}else n=Ai();return this.storageCache.set(n,{gpuData:{id:n,type:0,buffer:t},originalSize:r}),this.externalBuffers.set(t,n),Ue("verbose",()=>`[WebGPU] GpuDataManager.registerExternalBuffer(size=${r}) => id=${n}, registered.`),n}unregisterExternalBuffer(t){let r=this.externalBuffers.get(t);r!==void 0&&(this.storageCache.delete(r),this.externalBuffers.delete(t),Ue("verbose",()=>`[WebGPU] GpuDataManager.unregisterExternalBuffer() => id=${r}`))}create(t,r=GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST){let o=qn(t);this.incstats("cachealloc",o);let n,s=(r&GPUBufferUsage.STORAGE)===GPUBufferUsage.STORAGE,u=(r&GPUBufferUsage.UNIFORM)===GPUBufferUsage.UNIFORM;if(s||u){let f=(s?this.freeBuffers:this.freeUniformBuffers).get(o);f?f.length>0?n=f.pop():(n=this.backend.device.createBuffer({size:o,usage:r}),this.incstats("cachemiss",o)):(this.incstats("cachemiss",o),n=this.backend.device.createBuffer({size:o,usage:r}))}else n=this.backend.device.createBuffer({size:o,usage:r});let c={id:Ai(),type:0,buffer:n};return this.storageCache.set(c.id,{gpuData:c,originalSize:t}),Ue("verbose",()=>`[WebGPU] GpuDataManager.create(size=${t}) => id=${c.id}`),c}get(t){return this.storageCache.get(t)?.gpuData}release(t){let r=this.storageCache.get(t);if(!r)throw new Error("releasing data does not exist");return Ue("verbose",()=>`[WebGPU] GpuDataManager.release(id=${t}), gpuDataId=${r.gpuData.id}`),this.storageCache.delete(t),this.buffersPending.push(r.gpuData.buffer),r.originalSize}async download(t,r){let o=this.storageCache.get(t);if(!o)throw new Error("data does not exist");this.backend.env.trace&&console.timeStamp(`download-begin-${o.originalSize}`),await Lo(this.backend,o.gpuData.buffer,o.originalSize,r),this.backend.env.trace&&console.timeStamp(`download-end-${o.originalSize}`)}refreshPendingBuffers(){for(let t of this.buffersForUploadingPending)t.destroy();if(this.buffersForUploadingPending=[],this.buffersPending.length!==0)if(this.backend.sessionStatus==="default"){for(let t of this.buffersPending){let r=Wo[t.size];if(this.incstats("cachefree",t.size),(t.usage&GPUBufferUsage.STORAGE)===GPUBufferUsage.STORAGE){let o=this.freeBuffers.get(t.size)||[];r===void 0||o.length>=r?t.destroy():o.push(t)}else if((t.usage&GPUBufferUsage.UNIFORM)===GPUBufferUsage.UNIFORM){let o=Wo[t.size],n=this.freeUniformBuffers.get(t.size)||[];o===void 0||n.length>=o?t.destroy():n.push(t)}else t.destroy()}this.buffersPending=[]}else{let t=this.capturedPendingBuffers.get(this.backend.currentSessionId);t||(t=[],this.capturedPendingBuffers.set(this.backend.currentSessionId,t));for(let r of this.buffersPending)t.push(r);this.buffersPending=[]}}dispose(){this.freeBuffers.forEach(t=>{t.forEach(r=>{r.destroy()})}),this.freeUniformBuffers.forEach(t=>{t.forEach(r=>{r.destroy()})}),this.storageCache.forEach(t=>{t.gpuData.buffer.destroy()}),this.capturedPendingBuffers.forEach(t=>{t.forEach(r=>{r.destroy()})}),this.storageCache=new Map,this.freeBuffers=new Map,this.freeUniformBuffers=new Map,this.capturedPendingBuffers=new Map}onReleaseSession(t){let r=this.capturedPendingBuffers.get(t);r&&(r.forEach(o=>{o.destroy()}),this.capturedPendingBuffers.delete(t))}},Ti=(...e)=>new Ho(...e)});var Fo,Ae,Ze=Z(()=>{"use strict";Fo=class{constructor(t){Object.assign(this,t)}get cacheKey(){return this.key||(this.key=Object.getOwnPropertyNames(this).sort().map(t=>`${this[t]}`).join(";")),this.key}},Ae=e=>new Fo(e)});var jo,xt,B,er,Yn,Zn,Xn,Ee=Z(()=>{"use strict";jo=class{static calcMatMulShape(t,r){return t[1]!==r[0]?void 0:[t[0],r[1]]}},xt=class{static calcShape(t,r,o=!1){let n=t.length,s=r.length;if(n===0)return r;if(s===0)return t;let u=Math.max(t.length,r.length),c=new Array(u);if(o){if(n<2||s<2)return;let a=jo.calcMatMulShape([t[n-2],t[n-1]],[r[s-2],r[s-1]]);if(a===void 0)return;[c[u-2],c[u-1]]=a}for(let a=o?3:1;a<=u;a++){let f=n-a<0?1:t[n-a],g=s-a<0?1:r[s-a];if(f!==g&&f>1&&g>1)return;let h=Math.max(f,g);if(f&&g)c[u-a]=Math.max(f,g);else{if(h>1)return;c[u-a]=0}}return c}static isValidBroadcast(t,r){let o=t.length,n=r.length;if(o>n)return!1;for(let s=1;s<=o;s++)if(t[o-s]!==1&&t[o-s]!==r[n-s])return!1;return!0}},B=class e{static size(t){return e.getSizeFromDimensionRange(t,0,t.length)}static convertShape(t,r=4){let o=t.length;if(o===0)return[];let n=new Array(o),s=o-1;for(;s>=0;){if(t[s]%r===0){n[s]=t[s]/r;break}if(r%t[s]!==0)throw new Error("cannot convert shape");n[s]=1,r/=t[s],s--}for(s--;s>=0;s--)n[s]=t[s];return n}static sizeFromDimension(t,r){if(r<0||r>t.length)throw new Error(`invalid dimension of ${r} for sizeFromDimension as Tensor has ${t.length} dimensions.`);return e.getSizeFromDimensionRange(t,r,t.length)}static sizeToDimension(t,r){if(r<0||r>t.length)throw new Error(`invalid dimension of ${r} for sizeToDimension as Tensor has ${t.length} dimensions.`);return e.getSizeFromDimensionRange(t,0,r)}static getSizeFromDimensionRange(t,r,o){let n=1;for(let s=r;s<o;s++){if(t[s]<0)throw new Error("cannot get valid size from specified dimension range. Most likely the range contains negative values in them.");n*=t[s]}return n}static computeStrides(t){let r=t.length;if(r===0)return[];if(r===1)return[1];let o=new Array(r);o[r-1]=1,o[r-2]=t[r-1];for(let n=r-3;n>=0;--n)o[n]=o[n+1]*t[n+1];return o}static normalizeAxis(t,r){if(t<-r&&t>=r)throw new Error("unsupported axis for this operation.");return t<0?t+r:t}static normalizeAxes(t,r){return t.map(o=>this.normalizeAxis(o,r??t.length))}static sortBasedOnPerm(t,r){return r?r.map(o=>t[o]):t.slice().reverse()}static padShape(t,r){let o=t.length;return t.map((n,s)=>n+r[s]+r[s+o])}static areEqual(t,r){return t.length!==r.length?!1:t.every((o,n)=>o===r[n])}},er=class e{static adjustPoolAttributes(t,r,o,n,s,u){if(!t&&o.length!==r.length-2)throw new Error("length of specified kernel shapes should be 2 less than length of input dimensions");if(t)for(let c=0;c<r.length-2;c++)c>=o.length?o.push(r[c+2]):o[c]=r[c+2];for(let c=0;c<o.length;c++)if(c<n.length){if(n[c]<0)throw new Error("strides should be greater than or equal to 1")}else n.push(1);for(let c=0;c<o.length;c++)if(c<s.length){if(s[c]<0)throw new Error("dilations should be greater than or equal to 1")}else s.push(1);for(let c=0;c<o.length*2;c++)if(c<u.length){if(u[c]<0)throw new Error("pad should be greater than or equal to 1")}else u.push(0);for(let c=0;c<o.length;c++){if(o[c]<=0)throw new Error("kernel shapes need to be greater than 0");if(u[c]>=o[c]||u[c+o.length]>=o[c])throw new Error("pads should be smaller than kernel")}}static adjustPadsBasedOnAutoPad(t,r,o,n,s,u,c){if(c){if(s.length!==2*(t.length-2))throw new Error("length of pads should be twice the length of data dimensions");if(r.length!==t.length-2)throw new Error("length of strides should be the length of data dimensions");if(n.length!==t.length-2)throw new Error("length of kernel shapes should be the length of data dimensions");for(let a=0;a<t.length-2;a++)e.adjustPadAndReturnShape(t[a+(u?1:2)],r[a],o[a],n[a],s,a,a+t.length-2,c)}}static computePoolOutputShape(t,r,o,n,s,u,c){if(r.length<=0)throw new Error("input shape must be of size greater than 0");let a=[r[0],r[1]];return e.computeShapeHelper(t,r,a,o,n,s,u,c),a}static computeConvOutputShape(t,r,o,n,s,u,c){if(t.length<=0||r.length<=0)throw new Error("invalid input tensor dims or invalid filter tensor dims");let a=[t[0],r[0]];return e.computeShapeHelper(!1,t,a,o,n,s,u,c),a}static computeShapeHelper(t,r,o,n,s,u,c,a){if(t)for(let f=0;f<r.length-2;f++)o.push(1);else for(let f=0;f<r.length-2;f++)o.push(e.adjustPadAndReturnShape(r[f+2],n[f],s[f],u[f],c,f,f+r.length-2,a))}static adjustPadAndReturnShape(t,r,o,n,s,u,c,a){let f=o*(n-1)+1;if(a&&a!=="NOTSET")switch(a){case"VALID":return s[u]=0,s[c]=0,Math.floor((t-f)/r+1);case"SAME_LOWER":case"SAME_UPPER":if(o!==1)throw new Error("Dilation not supported for SAME_UPPER or SAME_LOWER");{let h=((t+r-1)/r-1)*r+n-t;return s[u]=Math.floor(a==="SAME_LOWER"?(h+1)/2:h/2),s[c]=h-s[u],Math.floor((t+h-n)/r+1)}default:throw new Error("Unsupported AutoPad type")}else return Math.floor((t+s[u]+s[c]-f)/r+1)}},Yn=class{static getShapeOfGemmResult(t,r,o,n,s){if(t.length!==2||o.length!==2)throw new Error("shape need to be of size 2");let u,c,a;r?(u=t[1],c=t[0]):(u=t[0],c=t[1]);let f=-1;if(n?(a=o[0],f=1):(a=o[1],f=0),o[f]!==c)throw new Error("dimension mismatch");if(u<=0||a<=0||c<=0)throw new Error("invalid shape specified");if(s&&!xt.isValidBroadcast(s,[u,a]))throw new Error("gemm: invalid bias shape for broadcast");return[u,a,c]}},Zn=-34028234663852886e22,Xn=34028234663852886e22});var tr,qo,Be,st,X,Ve,rt,ht,ut,fe,Yo,M,j,Qn,Ko,Oi,hr,Te=Z(()=>{"use strict";ve();Ee();tr=64,qo=(e,t)=>{if(t===3)throw new Error("vec3 has same alignment as vec4, use vec4 instead");switch(e){case 10:return t>1?`vec${t}<f16>`:"f16";case 1:return t>1?`vec${t}<f32>`:"f32";case 6:return t>1?`vec${t}<i32>`:"i32";case 12:return t>1?`vec${t}<u32>`:"u32";case 7:if(t>1)throw new Error("currently not supported vecX of uint64 yet");return["vec2<u32>","i32"];case 13:if(t>1)throw new Error("currently not supported vecX of uint64 yet");return["vec2<u32>","u32"];case 9:if(t!==4)throw new Error("bool must be vec4");return["u32","vec4<bool>"];default:throw new Error(`Unknown data type: ${e}`)}},Be=(e,t=1)=>{let r=qo(e,t);return typeof r=="string"?r:r[0]},st=(e,t=1)=>{let r=qo(e,t);return typeof r=="string"?r:r[1]},X=(...e)=>{let t=[];return e.forEach(r=>{r.length!==0&&t.push({type:12,data:r},{type:12,data:B.computeStrides(r)})}),t},Ve=(...e)=>e.map(t=>t%4===0).reduce((t,r)=>t&&r,!0)?4:e.map(t=>t%2===0).reduce((t,r)=>t&&r,!0)?2:1,rt=(e="f32",t,r="0")=>!t||t===1?`${e}(${r})`:`vec${t}<${e}>(${r})`,ht=(e,t,r)=>e==="f32"?r:t===1?`f32(${r})`:`vec${t}f(${r})`,ut=(e,t)=>t===4?`(${e}.x + ${e}.y + ${e}.z + ${e}.w)`:t===2?`(${e}.x + ${e}.y)`:t===3?`(${e}.x + ${e}.y + ${e}.z)`:e,fe=(e,t,r,o)=>e.startsWith("uniforms.")&&r>4?typeof t=="string"?o==="f16"?`${e}[(${t}) / 8][(${t}) % 8 / 4][(${t}) % 8 % 4]`:`${e}[(${t}) / 4][(${t}) % 4]`:o==="f16"?`${e}[${Math.floor(t/8)}][${Math.floor(t%8/4)}][${t%8%4}]`:`${e}[${Math.floor(t/4)}][${t%4}]`:r>1?`${e}[${t}]`:e,Yo=(e,t,r,o,n)=>{let s=typeof r=="number",u=s?r:r.length,c=[...new Array(u).keys()],a=u<2?"u32":u<=4?`vec${u}<u32>`:`array<u32, ${u}>`,f=qo(t,n),g=typeof f=="string"?f:f[1],h=typeof f=="string"?f:f[0],w={indices:a,value:g,storage:h,tensor:t},_=G=>typeof G=="string"?G:`${G}u`,v={offsetToIndices:!1,indicesToOffset:!1,broadcastedIndicesToOffset:!1,set:!1,setByIndices:!1,get:!1,getByIndices:!1},$=s?"uniforms.":"",C=`${$}${e}_shape`,x=`${$}${e}_strides`,S="";for(let G=0;G<u-1;G++)S+=`\n    let dim${G} = current / ${fe(x,G,u)};\n    let rest${G} = current % ${fe(x,G,u)};\n    indices[${G}] = dim${G};\n    current = rest${G};\n    `;S+=`indices[${u-1}] = current;`;let T=u<2?"":`\n  fn o2i_${e}(offset: u32) -> ${w.indices} {\n    var indices: ${w.indices};\n    var current = offset;\n    ${S}\n    return indices;\n  }`,E=G=>(v.offsetToIndices=!0,u<2?G:`o2i_${e}(${G})`),P=[];if(u>=2)for(let G=u-1;G>=0;G--)P.push(`${fe(x,G,u)} * (indices[${G}])`);let z=u<2?"":`\n  fn i2o_${e}(indices: ${w.indices}) -> u32 {\n    return ${P.join("+")};\n  }`,H=G=>(v.indicesToOffset=!0,u<2?G:`i2o_${e}(${G})`),K=(...G)=>u===0?"0u":`${w.indices}(${G.map(_).join(",")})`,re=(G,ee)=>u<2?`${G}`:`${fe(G,ee,u)}`,q=(G,ee,_e)=>u<2?`${G}=${_e};`:`${fe(G,ee,u)}=${_e};`,ce={},Se=(G,ee)=>{v.broadcastedIndicesToOffset=!0;let _e=`${ee.name}broadcastedIndicesTo${e}Offset`;if(_e in ce)return`${_e}(${G})`;let Xe=[];for(let qe=u-1;qe>=0;qe--){let Qe=ee.indicesGet("outputIndices",qe+ee.rank-u);Xe.push(`${re(x,qe)} * (${Qe} % ${re(C,qe)})`)}return ce[_e]=`fn ${_e}(outputIndices: ${ee.type.indices}) -> u32 {\n             return ${Xe.length>0?Xe.join("+"):"0u"};\n           }`,`${_e}(${G})`},Pe=(G,ee)=>(()=>{if(w.storage===w.value)return`${e}[${G}]=${ee};`;if(w.storage==="vec2<u32>"&&w.value==="i32")return`${e}[${G}]=vec2<u32>(u32(${ee}), select(0u, 0xFFFFFFFFu, ${ee} < 0));`;if(w.storage==="vec2<u32>"&&w.value==="u32")return`${e}[${G}]=vec2<u32>(u32(${ee}), 0u);`;if(w.storage==="u32"&&w.value==="vec4<bool>")return`${e}[${G}]=dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(${ee}));`;throw new Error(`not supported combination of storage type ${w.storage} and value type ${w.value} yet`)})(),U=G=>(()=>{if(w.storage===w.value)return`${e}[${G}]`;if(w.storage==="vec2<u32>"&&w.value==="i32")return`i32(${e}[${G}].x)`;if(w.storage==="vec2<u32>"&&w.value==="u32")return`u32(${e}[${G}].x)`;if(w.storage==="u32"&&w.value==="vec4<bool>")return`vec4<bool>(bool(${e}[${G}] & 0xFFu), bool(${e}[${G}] & 0xFF00u), bool(${e}[${G}] & 0xFF0000u), bool(${e}[${G}] & 0xFF000000u))`;throw new Error(`not supported combination of storage type ${w.storage} and value type ${w.value} yet`)})(),Q=u<2?"":`\n  fn get_${e}ByIndices(indices: ${w.indices}) -> ${g} {\n    return ${U(`i2o_${e}(indices)`)};\n  }`,W=u<2?"":(()=>{let G=c.map(_e=>`d${_e}: u32`).join(", "),ee=c.map(_e=>`d${_e}`).join(", ");return`\n  fn get_${e}(${G}) -> ${g} {\n    return get_${e}ByIndices(${K(ee)});\n  }`})(),Ce=(...G)=>{if(G.length!==u)throw new Error(`indices length must be ${u}`);let ee=G.map(_).join(",");return u===0?U("0u"):u===1?U(ee[0]):(v.get=!0,v.getByIndices=!0,v.indicesToOffset=!0,`get_${e}(${ee})`)},we=G=>u<2?U(G):(v.getByIndices=!0,v.indicesToOffset=!0,`get_${e}ByIndices(${G})`),he=u<2?"":`\n  fn set_${e}ByIndices(indices: ${w.indices}, value: ${g}) {\n    ${Pe(`i2o_${e}(indices)`,"value")}\n  }`,ne=u<2?"":(()=>{let G=c.map(_e=>`d${_e}: u32`).join(", "),ee=c.map(_e=>`d${_e}`).join(", ");return`\n  fn set_${e}(${G}, value: ${g}) {\n    set_${e}ByIndices(${K(ee)}, value);\n  }`})();return{impl:()=>{let G=[],ee=!1;return v.offsetToIndices&&(G.push(T),ee=!0),v.indicesToOffset&&(G.push(z),ee=!0),v.broadcastedIndicesToOffset&&(Object.values(ce).forEach(_e=>G.push(_e)),ee=!0),v.set&&(G.push(ne),ee=!0),v.setByIndices&&(G.push(he),ee=!0),v.get&&(G.push(W),ee=!0),v.getByIndices&&(G.push(Q),ee=!0),!s&&ee&&G.unshift(`const ${C} = ${w.indices}(${r.join(",")});`,`const ${x} = ${w.indices}(${B.computeStrides(r).join(",")});`),G.join(`\n`)},type:w,offsetToIndices:E,indicesToOffset:H,broadcastedIndicesToOffset:Se,indices:K,indicesGet:re,indicesSet:q,set:(...G)=>{if(G.length!==u+1)throw new Error(`indices length must be ${u}`);let ee=G[u];if(typeof ee!="string")throw new Error("value must be string");let _e=G.slice(0,u).map(_).join(",");return u===0?Pe("0u",ee):u===1?Pe(_e[0],ee):(v.set=!0,v.setByIndices=!0,v.indicesToOffset=!0,`set_${e}(${_e}, ${ee})`)},setByOffset:Pe,setByIndices:(G,ee)=>u<2?Pe(G,ee):(v.setByIndices=!0,v.indicesToOffset=!0,`set_${e}ByIndices(${G}, ${ee});`),get:Ce,getByOffset:U,getByIndices:we,usage:o,name:e,strides:x,shape:C,rank:u}},M=(e,t,r,o=1)=>Yo(e,t,r,"input",o),j=(e,t,r,o=1)=>Yo(e,t,r,"output",o),Qn=(e,t,r,o=1)=>Yo(e,t,r,"internal",o),Ko=class{constructor(t,r){this.normalizedDispatchGroup=t;this.limits=r;this.internalVariables=[];this.variables=[];this.uniforms=[];this.variableIndex=0}guardAgainstOutOfBoundsWorkgroupSizes(t){return`if (global_idx >= ${typeof t=="number"?`${t}u`:t}) { return; }`}mainStart(t=tr){let r=typeof t=="number"?t:t[0],o=typeof t=="number"?1:t[1],n=typeof t=="number"?1:t[2];if(r>this.limits.maxComputeWorkgroupSizeX||o>this.limits.maxComputeWorkgroupSizeY||n>this.limits.maxComputeWorkgroupSizeZ)throw new Error(`workgroup size [${r}, ${o}, ${n}] exceeds the maximum workgroup size [${this.limits.maxComputeWorkgroupSizeX}, ${this.limits.maxComputeWorkgroupSizeY}, ${this.limits.maxComputeWorkgroupSizeZ}].`);if(r*o*n>this.limits.maxComputeInvocationsPerWorkgroup)throw new Error(`workgroup size [${r}, ${o}, ${n}] exceeds the maximum workgroup invocations ${this.limits.maxComputeInvocationsPerWorkgroup}.`);let s=this.normalizedDispatchGroup[1]===1&&this.normalizedDispatchGroup[2]===1,u=s?`@builtin(global_invocation_id) global_id : vec3<u32>,\n    @builtin(workgroup_id) workgroup_id : vec3<u32>,\n    @builtin(local_invocation_id) local_id : vec3<u32>`:`@builtin(global_invocation_id) global_id : vec3<u32>,\n                                             @builtin(local_invocation_id) local_id : vec3<u32>,\n    @builtin(local_invocation_index) local_idx : u32,\n    @builtin(workgroup_id) workgroup_id : vec3<u32>,\n    @builtin(num_workgroups) num_workgroups : vec3<u32>`,c=s?"let global_idx = global_id.x; let local_idx = local_id.x;":`let global_idx = (workgroup_id.z * num_workgroups[0] * num_workgroups[1] +\n          workgroup_id.y * num_workgroups[0] + workgroup_id.x) * ${r*o*n}u + local_idx;`;return`@compute @workgroup_size(${r}, ${o}, ${n})\n  fn main(${u}) {\n    ${c}\n  `}appendVariableUniforms(t){t.rank!==0&&(t.shape.startsWith("uniforms.")&&this.uniforms.push({name:t.shape.replace("uniforms.",""),type:"u32",length:t.rank}),t.strides.startsWith("uniforms.")&&this.uniforms.push({name:t.strides.replace("uniforms.",""),type:"u32",length:t.rank}))}declareVariable(t,r){if(t.usage==="internal")throw new Error("cannot use internal variable with declareVariable(). use registerInternalVariables() instead.");this.variables.push(t),this.appendVariableUniforms(t);let o=t.usage==="input"?"read":"read_write",n=t.type.storage;return`@group(0) @binding(${r}) var<storage, ${o}> ${t.name}: array<${n}>;`}declareVariables(...t){return t.map(r=>this.declareVariable(r,this.variableIndex++)).join(`\n`)}registerInternalVariable(t){if(t.usage!=="internal")throw new Error("cannot use input or output variable with registerInternalVariable(). use declareVariables() instead.");this.internalVariables.push(t),this.appendVariableUniforms(t)}registerInternalVariables(...t){return t.forEach(r=>this.registerInternalVariable(r)),this}registerUniform(t,r,o=1){return this.uniforms.push({name:t,type:r,length:o}),this}registerUniforms(t){return this.uniforms=this.uniforms.concat(t),this}uniformDeclaration(){if(this.uniforms.length===0)return"";let t=[];for(let{name:r,type:o,length:n}of this.uniforms)if(n&&n>4)o==="f16"?t.push(`@align(16) ${r}:array<mat2x4<${o}>, ${Math.ceil(n/8)}>`):t.push(`${r}:array<vec4<${o}>, ${Math.ceil(n/4)}>`);else{let s=n==null||n===1?o:`vec${n}<${o}>`;t.push(`${r}:${s}`)}return`\n      struct Uniforms { ${t.join(", ")} };\n      @group(0) @binding(${this.variableIndex}) var<uniform> uniforms: Uniforms;`}get additionalImplementations(){return this.uniformDeclaration()+this.variables.map(t=>t.impl()).join(`\n`)+this.internalVariables.map(t=>t.impl()).join(`\n`)}get variablesInfo(){if(this.uniforms.length===0)return;let t=r=>[12,10,1,6][["u32","f16","f32","i32"].indexOf(r)];return this.uniforms.map(r=>[t(r.type),r.length??1])}},Oi=(e,t)=>new Ko(e,t),hr=(e,t)=>{let r=e.length,o=[];for(let n=0;n<r;n++){let s=r-1-n,u=e[s]||1;(t[t.length-1-n]||1)>1&&u===1&&o.unshift(s)}return o}});var Bc,ki,Mc,zc,ft,Pi,Ri,gr=Z(()=>{"use strict";ve();Ee();Ze();Te();Bc=e=>{if(!e||e.length!==1)throw new Error("Transpose requires 1 input.")},ki=(e,t)=>t&&t.length!==e?[...new Array(e).keys()].reverse():t,Mc=(e,t)=>B.sortBasedOnPerm(e,ki(e.length,t)),zc=(e,t,r,o)=>{let n=[];n.push(`fn perm(i: ${o.type.indices}) -> ${r.type.indices} {\n    var a: ${r.type.indices};`);for(let s=0;s<t;++s)n.push(r.indicesSet("a",e[s],`i[${s}]`));return n.push("return a;}"),n.join(`\n`)},ft=(e,t)=>{let r=e.dataType,o=e.dims.length,n=ki(o,t),s=Mc(e.dims,n),u=j("output",r,s.length),c=M("a",r,o),a=f=>`\n  ${f.registerUniform("output_size","u32").declareVariables(c,u)}\n\n  ${zc(n,o,c,u)}\n\n  ${f.mainStart()}\n    ${f.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n\n    let indices = ${u.offsetToIndices("global_idx")};\n    let aIndices = perm(indices);\n\n    ${u.setByOffset("global_idx",c.getByIndices("aIndices"))}\n  }`;return{name:"Transpose",shaderCache:{hint:`${t}`,inputDependencies:["rank"]},getRunData:f=>{let g=B.size(s);return{outputs:[{dims:s,dataType:f[0].dataType}],dispatchGroup:{x:Math.ceil(g/64)},programUniforms:[{type:12,data:g},...X(f[0].dims,s)]}},getShaderSource:a}},Pi=(e,t)=>{Bc(e.inputs),e.compute(ft(e.inputs[0],t.perm))},Ri=e=>Ae({perm:e.perm})});var Uc,Vc,Nc,Wc,Gc,Hc,Lc,Fc,jc,Kc,Ct,Di,Bi,Mi,zi,Ui,Vi,Ni,Wi,Gi,Hi,Li=Z(()=>{"use strict";ve();Ee();Te();Jn();gr();Uc={max:"select(bestValue, candidate, candidate > bestValue)",min:"select(bestValue, candidate, candidate < bestValue)",mean:"bestValue + candidate",sum:"bestValue + candidate",prod:"bestValue * candidate",sumSquare:"bestValue + candidate * candidate",logSumExp:"bestValue + exp(candidate)",l1:"bestValue + abs(candidate)",l2:"bestValue + candidate * candidate",logSum:"bestValue + candidate"},Vc={max:"select(bestValue, candidate, candidate > bestValue)",min:"select(bestValue, candidate, candidate < bestValue)",mean:"bestValue + candidate",sum:"bestValue + candidate",prod:"bestValue * candidate",sumSquare:"bestValue + candidate",logSumExp:"bestValue + candidate",l1:"bestValue + candidate",l2:"bestValue + candidate",logSum:"bestValue + candidate"},Nc={max:"_A[offset]",min:"_A[offset]",mean:"0",sum:"0",prod:"1",sumSquare:"0",logSumExp:"0",l1:"0",l2:"0",logSum:"0"},Wc={max:"bestValue",min:"bestValue",sum:"bestValue",prod:"bestValue",sumSquare:"bestValue",logSumExp:"log(bestValue)",l1:"bestValue",l2:"sqrt(bestValue)",logSum:"log(bestValue)"},Gc=(e,t)=>{let r=[];for(let o=t-e;o<t;++o)r.push(o);return r},Hc=(e,t)=>{let r=[],o=e.length;for(let s=0;s<o;s++)t.indexOf(s)===-1&&r.push(e[s]);let n=t.map(s=>e[s]);return[r,n]},Lc=(e,t)=>{let r=e.length+t.length,o=[],n=0;for(let s=0;s<r;s++)t.indexOf(s)===-1?o.push(e[n++]):o.push(1);return o},Fc=(e,t)=>{for(let r=0;r<e.length;++r)if(e[e.length-r-1]!==t-1-r)return!1;return!0},jc=(e,t)=>{let r=[];if(!Fc(e,t)){for(let o=0;o<t;++o)e.indexOf(o)===-1&&r.push(o);e.forEach(o=>r.push(o))}return r},Kc=(e,t,r,o,n,s,u)=>{let c=r[0].dims,a=B.size(s),f=B.size(u),g=M("_A",r[0].dataType,c),h=j("output",n,s),w=32,_=`\n          var<workgroup> aBestValues : array<f32, ${w}>;\n       `;return{name:e,shaderCache:t,getShaderSource:$=>`\n        ${$.registerUniform("reduceSize","u32").declareVariables(g,h)}\n        ${_}\n        fn DIV_CEIL(a : u32, b : u32) -> u32 {\n          return ((a - 1u) / b + 1u);\n         }\n         ${$.mainStart(w)}\n\n          let outputIndex = global_idx / ${w};\n          let offset = outputIndex * uniforms.reduceSize;\n\n          var bestValue = f32(${Nc[o]});\n          let Length = uniforms.reduceSize;\n          for (var k = local_idx; k < Length; k = k + ${w}) {\n           let candidate = f32(${g.getByOffset("offset + k")});\n           bestValue = ${Uc[o]};\n          }\n          aBestValues[local_idx] = bestValue;\n          workgroupBarrier();\n\n         var reduceSize = min(Length, ${w}u);\n         for (var currentSize = reduceSize / 2u; reduceSize > 1u;\n             currentSize = reduceSize / 2u) {\n           let interval = DIV_CEIL(reduceSize, 2u);\n           if (local_idx < currentSize) {\n            let candidate = aBestValues[local_idx + interval];\n            bestValue = ${Vc[o]};\n            aBestValues[local_idx] = bestValue;\n           }\n           reduceSize = interval;\n           workgroupBarrier();\n         }\n\n         if (local_idx == 0u) {\n          ${h.setByOffset("outputIndex",`${o==="mean"?`${h.type.storage}(bestValue / f32(uniforms.reduceSize))`:`${h.type.storage}(${Wc[o]})`}`)};\n         }\n        }`,getRunData:()=>({outputs:[{dims:s,dataType:n}],dispatchGroup:{x:a},programUniforms:[{type:12,data:f}]})}},Ct=(e,t,r,o)=>{let n=e.inputs.length===1?r:Zo(e.inputs,r),s=n.axes;s.length===0&&!n.noopWithEmptyAxes&&(s=e.inputs[0].dims.map((_,v)=>v));let u=B.normalizeAxes(s,e.inputs[0].dims.length),c=u,a=e.inputs[0],f=jc(c,e.inputs[0].dims.length);f.length>0&&(a=e.compute(ft(e.inputs[0],f),{inputs:[0],outputs:[-1]})[0],c=Gc(c.length,a.dims.length));let[g,h]=Hc(a.dims,c),w=g;n.keepDims&&(w=Lc(g,u)),e.compute(Kc(t,{hint:n.cacheKey,inputDependencies:["type"]},[a],o,e.inputs[0].dataType,w,h),{inputs:[a]})},Di=(e,t)=>{Ct(e,"ReduceMeanShared",t,"mean")},Bi=(e,t)=>{Ct(e,"ReduceL1Shared",t,"l1")},Mi=(e,t)=>{Ct(e,"ReduceL2Shared",t,"l2")},zi=(e,t)=>{Ct(e,"ReduceLogSumExpShared",t,"logSumExp")},Ui=(e,t)=>{Ct(e,"ReduceMaxShared",t,"max")},Vi=(e,t)=>{Ct(e,"ReduceMinShared",t,"min")},Ni=(e,t)=>{Ct(e,"ReduceProdShared",t,"prod")},Wi=(e,t)=>{Ct(e,"ReduceSumShared",t,"sum")},Gi=(e,t)=>{Ct(e,"ReduceSumSquareShared",t,"sumSquare")},Hi=(e,t)=>{Ct(e,"ReduceLogSumShared",t,"logSum")}});var At,qc,eo,Zo,It,Yc,Zc,Xc,Qc,Jc,ep,tp,rp,np,op,Tt,Fi,ji,Ki,qi,Yi,Zi,Xi,Qi,Ji,es,Jn=Z(()=>{"use strict";ve();Ee();Ze();Te();Li();At=e=>{if(!e||e.length===0||e.length>2)throw new Error("Reduce op requires 1 or 2 inputs.");if(e.length===2&&e[1].dims.length!==1)throw new Error("Invalid axes input dims.")},qc=e=>["","",`var value = ${e.getByIndices("input_indices")};`,""],eo=(e,t,r,o,n,s,u=!1,c=!1)=>{let a=[],f=r[0].dims,g=f.length,h=B.normalizeAxes(n,g),w=!c&&h.length===0;f.forEach((C,x)=>{w||h.indexOf(x)>=0?u&&a.push(1):a.push(C)});let _=a.length,v=B.size(a);return{name:e,shaderCache:t,getShaderSource:C=>{let x=[],S=M("_A",r[0].dataType,g),T=j("output",s,_),E=o(S,T,h),P=E[2];for(let z=0,H=0;z<g;z++)w||h.indexOf(z)>=0?(u&&H++,P=`for(var j${z}: u32 = 0; j${z} < ${f[z]}; j${z}++) {\n                  ${E[2].includes("last_index")?`let last_index = j${z};`:""}\n                  ${S.indicesSet("input_indices",z,`j${z}`)}\n                  ${P}\n                }`):(x.push(`${S.indicesSet("input_indices",z,T.indicesGet("output_indices",H))};`),H++);return`\n\n        ${C.registerUniform("output_size","u32").declareVariables(S,T)}\n\n        ${C.mainStart()}\n          ${C.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n          var input_indices: ${S.type.indices};\n          let output_indices = ${T.offsetToIndices("global_idx")};\n\n          ${x.join(`\n`)}\n          ${E[0]}       // init ops for reduce max/min\n          ${E[1]}\n          ${P}\n          ${E[3]}\n          ${E.length===4?T.setByOffset("global_idx","value"):E.slice(4).join(`\n`)}\n        }`},getRunData:()=>({outputs:[{dims:a,dataType:s}],dispatchGroup:{x:Math.ceil(v/64)},programUniforms:[{type:12,data:v},...X(f,a)]})}},Zo=(e,t)=>{let r=[];return e[1].dims[0]>0&&e[1].getBigInt64Array().forEach(o=>r.push(Number(o))),Ae({axes:r,keepDims:t.keepDims,noopWithEmptyAxes:t.noopWithEmptyAxes})},It=(e,t,r,o)=>{let n=e.inputs,s=n.length===1?r:Zo(n,r);e.compute(eo(t,{hint:s.cacheKey,inputDependencies:["rank"]},[n[0]],s.noopWithEmptyAxes&&s.axes.length===0?qc:o,s.axes,n[0].dataType,s.keepDims,s.noopWithEmptyAxes),{inputs:[0]})},Yc=(e,t)=>{At(e.inputs),It(e,"ReduceLogSum",t,(o,n)=>[`var value = ${n.type.storage}(0);`,"",`value += ${o.getByIndices("input_indices")};`,"value = log(value);"])},Zc=(e,t)=>{At(e.inputs),It(e,"ReduceL1",t,(o,n)=>[`var value = ${n.type.storage}(0);`,"",`value += abs(${o.getByIndices("input_indices")});`,""])},Xc=(e,t)=>{At(e.inputs),It(e,"ReduceL2",t,(o,n)=>[`var t = ${n.type.value}(0); var value = ${n.type.value}(0);`,"",`t = ${o.getByIndices("input_indices")}; value += (t * t);`,"value = sqrt(value);"])},Qc=(e,t)=>{At(e.inputs),It(e,"ReduceLogSumExp",t,(o,n)=>[`var value = ${n.type.storage}(0);`,"",`value += exp(${o.getByIndices("input_indices")});`,"value = log(value);"])},Jc=(e,t)=>{At(e.inputs),It(e,"ReduceMax",t,(o,n,s)=>{let u=[];for(let c=0;c<o.rank;c++)(s.indexOf(c)>=0||s.length===0)&&u.push(o.indicesSet("input_indices",c,0));return[`${u.join(`\n`)}`,`var value = ${o.getByIndices("input_indices")};`,`value = max(value, ${o.getByIndices("input_indices")});`,""]})},ep=(e,t)=>{At(e.inputs),It(e,"ReduceMean",t,(o,n,s)=>{let u=1;for(let c=0;c<o.rank;c++)(s.indexOf(c)>=0||s.length===0)&&(u*=e.inputs[0].dims[c]);return["var sum = f32(0);","",`sum += f32(${o.getByIndices("input_indices")});`,`let value = ${n.type.value}(sum / ${u});`]})},tp=(e,t)=>{At(e.inputs),It(e,"ReduceMin",t,(o,n,s)=>{let u=[];for(let c=0;c<o.rank;c++)(s.indexOf(c)>=0||s.length===0)&&u.push(`input_indices[${c}] = 0;`);return[`${u.join(`\n`)}`,`var value = ${o.getByIndices("input_indices")};`,`value = min(value, ${o.getByIndices("input_indices")});`,""]})},rp=(e,t)=>{At(e.inputs),It(e,"ReduceProd",t,(o,n)=>[`var value = ${n.type.storage}(1);`,"",`value *= ${o.getByIndices("input_indices")};`,""])},np=(e,t)=>{At(e.inputs),It(e,"ReduceSum",t,(o,n)=>[`var value = ${n.type.storage}(0);`,"",`value += ${o.getByIndices("input_indices")};`,""])},op=(e,t)=>{At(e.inputs),It(e,"ReduceSumSquare",t,(o,n)=>[`var t = ${n.type.value}(0); var value = ${n.type.value}(0);`,"",`t = ${o.getByIndices("input_indices")}; value += t * t;`,""])},Tt=(e,t,r)=>{if(t.length===0)return r;let o=1,n=1;for(let s=0;s<t.length;s++)t.indexOf(s)===-1?o*=e[s]:n*=e[s];return n<32&&o>1024},Fi=(e,t)=>{Tt(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?ep(e,t):Di(e,t)},ji=(e,t)=>{Tt(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Zc(e,t):Bi(e,t)},Ki=(e,t)=>{Tt(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Xc(e,t):Mi(e,t)},qi=(e,t)=>{Tt(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Qc(e,t):zi(e,t)},Yi=(e,t)=>{Tt(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Jc(e,t):Ui(e,t)},Zi=(e,t)=>{Tt(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?tp(e,t):Vi(e,t)},Xi=(e,t)=>{Tt(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?rp(e,t):Ni(e,t)},Qi=(e,t)=>{Tt(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?np(e,t):Wi(e,t)},Ji=(e,t)=>{Tt(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?op(e,t):Gi(e,t)},es=(e,t)=>{Tt(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Yc(e,t):Hi(e,t)}});var ts,rs,ns,Xo,os=Z(()=>{"use strict";ve();Ze();Jn();ts=e=>{if(!e||e.length===0||e.length>2)throw new Error("ArgMinMaxOp op requires 1 or 2 inputs.");if(e[0].dataType!==1)throw new Error("Invalid input type.")},rs=(e,t)=>{ts(e.inputs);let r=(o,n,s)=>{let u=[];for(let c=0;c<o.rank;c++)(s.indexOf(c)>=0||s.length===0)&&u.push(`input_indices[${c}] = 0;`);return[`${u.join(`\n`)}`,`var value = ${o.getByIndices("input_indices")};\nvar best_index : i32 = 0;`,`if (${o.getByIndices("input_indices")} ${t.selectLastIndex>0?"<=":"<"} value) {\n         value = ${o.getByIndices("input_indices")};\n         best_index = i32(last_index);\n       }`,"",n.setByOffset("global_idx","best_index")]};e.compute(eo("ArgMin",{hint:t.cacheKey,inputDependencies:["rank"]},[e.inputs[0]],r,[t.axis],7,t.keepDims),{inputs:[0]})},ns=(e,t)=>{ts(e.inputs);let r=(o,n,s)=>{let u=[];for(let c=0;c<o.rank;c++)(s.indexOf(c)>=0||s.length===0)&&u.push(`input_indices[${c}] = 0;`);return[`${u.join(`\n`)}`,`var value = ${o.getByIndices("input_indices")};\nvar best_index : i32 = 0;`,`if (${o.getByIndices("input_indices")} ${t.selectLastIndex>0?">=":">"} value) {\n         value = ${o.getByIndices("input_indices")};\n         best_index = i32(last_index);\n       }`,"",n.setByOffset("global_idx","best_index")]};e.compute(eo("argMax",{hint:t.cacheKey,inputDependencies:["rank"]},[e.inputs[0]],r,[t.axis],7,t.keepDims),{inputs:[0]})},Xo=e=>Ae(e)});var ap,ip,sp,up,to,lp,as,Qo=Z(()=>{"use strict";ve();Kn();Te();ap=(e,t)=>{let r=e[0],o=e[1],n=e[2],s=e[3],u=e[4],c=e[5];if(u&&c)throw new Error("Attention cannot have both past and relative_position_bias");if(r.dims.length!==3)throw new Error(\'Input "input" must have 3 dimensions\');let a=r.dims[0],f=r.dims[1],g=r.dims[2];if(n.dims.length!==1)throw new Error(\'Input "bias" is expected to have 1 dimensions\');if(o.dims.length!==2)throw new Error(\'Input "weights" is expected to have 2 dimensions\');if(o.dims[0]!==g)throw new Error("Input 1 dimension 0 should have same length as dimension 2 of input 0");if(n.dims[0]!==o.dims[1])throw new Error(\'Input "bias" dimension 0 should have same length as dimension 1 of input "weights"\');let h=n.dims[0]/3,w=h,_=w;if(t.qkvHiddenSizes.length>0){if(t.qkvHiddenSizes.length!==3)throw new Error("qkv_hidden_sizes attribute should have 3 elements");for(let T of t.qkvHiddenSizes)if(T%t.numHeads!==0)throw new Error("qkv_hidden_sizes should be divisible by num_heads");h=t.qkvHiddenSizes[0],w=t.qkvHiddenSizes[1],_=t.qkvHiddenSizes[2]}let v=f;if(h!==w)throw new Error("qkv_hidden_sizes first element should be same as the second");if(n.dims[0]!==h+w+_)throw new Error(\'Input "bias" dimension 0 should have same length as sum of Q/K/V hidden sizes\');let $=0;if(u){if(w!==_)throw new Error(\'Input "past" expect k_hidden_size == v_hidden_size\');if(u.dims.length!==5)throw new Error(\'Input "past" must have 5 dimensions\');if(u.dims[0]!==2)throw new Error(\'Input "past" first dimension must be 2\');if(u.dims[1]!==a)throw new Error(\'Input "past" second dimension must be batch_size\');if(u.dims[2]!==t.numHeads)throw new Error(\'Input "past" third dimension must be num_heads\');if(u.dims[4]!==w/t.numHeads)throw new Error(\'Input "past" fifth dimension must be k_hidden_size / num_heads\');t.pastPresentShareBuffer||($=u.dims[3])}let C=v+$,x=-1,S=0;if(s)throw new Error("Mask not supported");if(u)throw new Error("past is not supported");if(c)throw new Error("relativePositionBias is not supported");return{batchSize:a,sequenceLength:f,pastSequenceLength:$,kvSequenceLength:v,totalSequenceLength:C,maxSequenceLength:x,inputHiddenSize:g,hiddenSize:h,vHiddenSize:_,headSize:Math.floor(h/t.numHeads),vHeadSize:Math.floor(_/t.numHeads),numHeads:t.numHeads,isUnidirectional:!1,pastPresentShareBuffer:!1,maskFilterValue:t.maskFilterValue,maskType:S,scale:t.scale,broadcastResPosBias:!1,passPastInKv:!1,qkvFormat:1}},ip=(e,t,r,o)=>{let n=Ve(o),s=64,u=o/n;u<s?s=1:u/8<64&&(s=Math.ceil(u/8));let c=Math.ceil(o/n/s),a=[{type:t.dataType,data:1/o},{type:12,data:u},{type:12,data:c}],f=Be(t.dataType,n),g=h=>{let w=j("x",t.dataType,t.dims,n),_="thread_max_vector";n===2?_="max(thread_max_vector.x, thread_max_vector.y)":n===4&&(_="max(max(thread_max_vector.x, thread_max_vector.y), max(thread_max_vector.z, thread_max_vector.w))");let v=st(t.dataType),$=[{name:"d_inv",type:v},{name:"d_comp",type:"u32"},{name:"elements_per_wg",type:"u32"}];return`\n  var<workgroup> wgMax: array<f32, ${s}>;\n  var<workgroup> wgSum: array<f32, ${s}>;\n  ${h.registerUniforms($).declareVariables(w)}\n  ${h.mainStart([s,1,1])}\n    let localOffset = local_idx * uniforms.elements_per_wg;\n    let offset: u32 = workgroup_id.x * uniforms.d_comp + localOffset;\n\n    var thread_max_vector = ${rt("f32",n,"-3.402823e+38f")};\n    for (var i: u32 = 0; i < uniforms.elements_per_wg && i + localOffset < uniforms.d_comp; i++) {\n      thread_max_vector = max(${ht(v,n,"x[offset + i]")}, thread_max_vector);\n    }\n    wgMax[local_idx] = ${_};\n    workgroupBarrier();\n\n    var maxValue = -3.402823e+38f;\n    for (var i = 0u; i < ${s}; i++) {\n      maxValue = max(wgMax[i], maxValue);\n    }\n\n    var sumVector = ${rt("f32",n,"0")};\n    for (var i: u32 = 0; i < uniforms.elements_per_wg && i + localOffset < uniforms.d_comp; i++) {\n      sumVector += exp(${ht(v,n,"x[offset + i]")} - maxValue);\n    }\n    wgSum[local_idx] = ${ut("sumVector",n)};\n    workgroupBarrier();\n\n    var sum: f32 = 0;\n    for (var i = 0u; i < ${s}; i++) {\n      sum += wgSum[i];\n    }\n\n    if (sum == 0) {\n      for (var i: u32 = 0; i < uniforms.elements_per_wg && i + localOffset < uniforms.d_comp; i++) {\n        x[offset + i] = ${rt(v,n,"uniforms.d_inv")};\n      }\n    } else {\n      for (var i: u32 = 0; i < uniforms.elements_per_wg && i + localOffset < uniforms.d_comp; i++) {\n        let f32input = ${ht(v,n,"x[offset + i]")};\n        x[offset + i] = ${w.type.value}(exp(f32input - maxValue) / sum);\n      }\n    }\n  }`};e.compute({name:"AttentionProbsSoftmax",shaderCache:{hint:`${s};${f};${n}`},getShaderSource:g,getRunData:()=>({outputs:[],dispatchGroup:{x:r},programUniforms:a})},{inputs:[t],outputs:[]})},sp=(e,t,r,o,n,s)=>{let u=[n.batchSize,n.numHeads,n.sequenceLength,n.kvSequenceLength+n.pastSequenceLength],c=s.scale===0?1/Math.sqrt(n.headSize):s.scale,a=Ve(n.headSize),f=n.headSize/a,g=12,h={x:Math.ceil(n.totalSequenceLength/g),y:Math.ceil(n.sequenceLength/g),z:n.batchSize*n.numHeads},w=[{type:12,data:n.sequenceLength},{type:12,data:f},{type:12,data:n.totalSequenceLength},{type:12,data:n.kvSequenceLength},{type:t.dataType,data:c}],_=[t,r],v=C=>{let x=M("q",t.dataType,t.dims,a),S=M("key",r.dataType,r.dims,a),T=j("output",t.dataType,u),E=Be(t.dataType),P=[{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"kv_sequence_length",type:"u32"},{name:"alpha",type:E}];return`\n  const beta: ${E} = 1.0;\n  const TILE_SIZE = ${g}u;\n\n  var<workgroup> tileQ: array<${x.type.storage}, ${g*g}>;\n  var<workgroup> tileK: array<${x.type.storage}, ${g*g}>;\n  ${C.registerUniforms(P).declareVariables(x,S,T)}\n  ${C.mainStart([g,g,1])}\n    // x holds the N and y holds the M\n    let headIdx = workgroup_id.z;\n    let m = workgroup_id.y * TILE_SIZE;\n    let n = workgroup_id.x * TILE_SIZE;\n    let qOffset = uniforms.M * uniforms.K * headIdx + m * uniforms.K;\n    let kOffset = uniforms.kv_sequence_length * uniforms.K * headIdx + n * uniforms.K;\n\n    var value = ${rt(E,a)};\n    for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {\n      if (global_id.y < uniforms.M && w + local_id.x < uniforms.K) {\n        tileQ[TILE_SIZE * local_id.y + local_id.x] = q[qOffset + local_id.y * uniforms.K + w + local_id.x];\n      }\n      if (n + local_id.y < uniforms.N && w + local_id.x < uniforms.K) {\n        tileK[TILE_SIZE * local_id.y + local_id.x] = key[kOffset + local_id.y * uniforms.K + w + local_id.x];\n      }\n      workgroupBarrier();\n\n      for (var k: u32 = 0u; k<TILE_SIZE && w+k < uniforms.K; k++) {\n        value += tileQ[TILE_SIZE * local_id.y + k] * tileK[TILE_SIZE * local_id.x + k];\n      }\n\n      workgroupBarrier();\n    }\n\n    let headOffset = headIdx * uniforms.M * uniforms.N;\n    if (global_id.y < uniforms.M && global_id.x < uniforms.N) {\n      let outputIdx = headOffset + global_id.y * uniforms.N + global_id.x;\n      output[outputIdx] = ${ut("value",a)} * uniforms.alpha;\n    }\n  }`},$=e.compute({name:"AttentionProbs",shaderCache:{hint:`${a}`,inputDependencies:["type","type"]},getRunData:()=>({outputs:[{dims:u,dataType:t.dataType,gpuDataType:0}],dispatchGroup:h,programUniforms:w}),getShaderSource:v},{inputs:_,outputs:[-1]})[0];return ip(e,$,n.batchSize*n.numHeads*n.sequenceLength,n.totalSequenceLength),$},up=(e,t,r,o)=>{let n=[o.batchSize,o.sequenceLength,o.vHiddenSize],s=12,u={x:Math.ceil(o.vHeadSize/s),y:Math.ceil(o.sequenceLength/s),z:o.batchSize*o.numHeads},c=[{type:12,data:o.sequenceLength},{type:12,data:o.totalSequenceLength},{type:12,data:o.vHeadSize},{type:12,data:o.numHeads},{type:12,data:o.vHiddenSize}],a=f=>{let g=M("probs",t.dataType,t.dims),h=M("v",r.dataType,r.dims),w=j("output",t.dataType,n),_=[{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"v_hidden_size",type:"u32"}];return`\n  const TILE_SIZE = ${s}u;\n  var<workgroup> tileQ: array<${g.type.value}, ${s*s}>;\n  var<workgroup> tileK: array<${g.type.value}, ${s*s}>;\n  ${f.registerUniforms(_).declareVariables(g,h,w)}\n  ${f.mainStart([s,s,1])}\n   let headIdx = workgroup_id.z;\n   let m = global_id.y;\n   let n = global_id.x;\n\n   let offsetA = headIdx * (uniforms.M * uniforms.K) + m * uniforms.K;\n   let offsetB = headIdx * (uniforms.N * uniforms.K) + n;\n\n   var value = ${g.type.storage}(0);\n   for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {\n     if (m < uniforms.M && w + local_id.x < uniforms.K) {\n       tileQ[TILE_SIZE * local_id.y + local_id.x] = probs[offsetA + w + local_id.x];\n     }\n     if (n < uniforms.N && w + local_id.y < uniforms.K) {\n       tileK[TILE_SIZE * local_id.y + local_id.x] = v[offsetB + (w + local_id.y) * uniforms.N];\n     }\n     workgroupBarrier();\n     for (var k: u32 = 0u; k<TILE_SIZE && w+k < uniforms.K; k++) {\n       value += tileQ[TILE_SIZE * local_id.y + k] * tileK[TILE_SIZE * k + local_id.x];\n     }\n     workgroupBarrier();\n   }\n\n   // we need to transpose output from BNSH_v to BSND_v\n   let batchIdx = workgroup_id.z / uniforms.num_heads;\n   let currentBatchHeadNumber = workgroup_id.z % uniforms.num_heads;\n   let headOffset = (batchIdx * uniforms.M * uniforms.num_heads + currentBatchHeadNumber) * uniforms.N;\n   if (m < uniforms.M && n < uniforms.N) {\n     let outputIdx = batchIdx * uniforms.M *uniforms.v_hidden_size + m * uniforms.v_hidden_size\n       + currentBatchHeadNumber * uniforms.N + n;\n     output[outputIdx] = value;\n   }\n  }`};return e.compute({name:"AttentionScore",shaderCache:{inputDependencies:["type","type"]},getRunData:()=>({outputs:[{dims:n,dataType:t.dataType,gpuDataType:0}],dispatchGroup:u,programUniforms:c}),getShaderSource:a},{inputs:[t,r],outputs:[0]})[0]},to=(e,t,r,o,n,s,u,c,a,f,g)=>{let h=sp(e,t,r,a,f,g);up(e,h,o,f)},lp=(e,t)=>{let r=[t.batchSize,t.numHeads,t.sequenceLength,t.headSize],o=t.sequenceLength,n=t.inputHiddenSize,s=t.headSize,u=12,c={x:Math.ceil(t.headSize/u),y:Math.ceil(t.sequenceLength/u),z:t.batchSize*t.numHeads},a=[e.inputs[0],e.inputs[1],e.inputs[2]],f=[{type:12,data:o},{type:12,data:n},{type:12,data:s},{type:12,data:t.numHeads},{type:12,data:t.headSize},{type:12,data:t.hiddenSize},{type:12,data:t.hiddenSize+t.hiddenSize+t.vHiddenSize}],g=h=>{let w=j("output_q",a[0].dataType,r),_=j("output_k",a[0].dataType,r),v=j("output_v",a[0].dataType,r),$=M("input",a[0].dataType,a[0].dims),C=M("weight",a[1].dataType,a[1].dims),x=M("bias",a[2].dataType,a[2].dims),S=$.type.storage,T=[{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"head_size",type:"u32"},{name:"hidden_size",type:"u32"},{name:"ldb",type:"u32"}];return`\n  const TILE_SIZE = ${u}u;\n  var<workgroup> tileInput: array<${S}, ${u*u}>;\n  var<workgroup> tileWeightQ: array<${S}, ${u*u}>;\n  var<workgroup> tileWeightK: array<${S}, ${u*u}>;\n  var<workgroup> tileWeightV: array<${S}, ${u*u}>;\n  ${h.registerUniforms(T).declareVariables($,C,x,w,_,v)}\n  ${h.mainStart([u,u,1])}\n    let batchIndex = workgroup_id.z / uniforms.num_heads;\n    let headNumber = workgroup_id.z % uniforms.num_heads;\n    let m = global_id.y;\n    let n = global_id.x;\n\n    let inputOffset = batchIndex * (uniforms.M * uniforms.K) + m * uniforms.K;\n    let biasOffsetQ = headNumber * uniforms.head_size;\n    let biasOffsetK = uniforms.hidden_size + biasOffsetQ;\n    let biasOffsetV = uniforms.hidden_size + biasOffsetK;\n\n    var valueQ = ${S}(0);\n    var valueK = ${S}(0);\n    var valueV = ${S}(0);\n    for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {\n      if (m < uniforms.M && w + local_id.x < uniforms.K) {\n        tileInput[TILE_SIZE * local_id.y + local_id.x] = input[inputOffset + w + local_id.x];\n      }\n      if (n < uniforms.N && w + local_id.y < uniforms.K) {\n        let offset = n + (w + local_id.y) * uniforms.ldb;\n        tileWeightQ[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetQ + offset];\n        tileWeightK[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetK + offset];\n        tileWeightV[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetV + offset];\n      }\n      workgroupBarrier();\n      for (var k: u32 = 0u; k<TILE_SIZE && w+k < uniforms.K; k++) {\n        let inputTileOffset = TILE_SIZE * local_id.y + k;\n        let weightTileOffset = TILE_SIZE * k + local_id.x;\n        valueQ += tileInput[inputTileOffset] * tileWeightQ[weightTileOffset];\n        valueK += tileInput[inputTileOffset] * tileWeightK[weightTileOffset];\n        valueV += tileInput[inputTileOffset] * tileWeightV[weightTileOffset];\n      }\n\n      workgroupBarrier();\n    }\n\n    let headOffset = (m * uniforms.N + n) % uniforms.head_size;\n    valueQ += bias[headOffset + biasOffsetQ];\n    valueK += bias[headOffset + biasOffsetK];\n    valueV += bias[headOffset + biasOffsetV];\n\n    let offset = workgroup_id.z * uniforms.M * uniforms.N;\n    if (m < uniforms.M && n < uniforms.N) {\n      let outputIdx = offset + m * uniforms.N + n;\n      output_q[outputIdx] = valueQ;\n      output_k[outputIdx] = valueK;\n      output_v[outputIdx] = valueV;\n    }\n  }`};return e.compute({name:"AttentionPrepare",shaderCache:{inputDependencies:["type","type","type"]},getRunData:()=>({outputs:[{dims:r,dataType:e.inputs[0].dataType,gpuDataType:0},{dims:r,dataType:e.inputs[0].dataType,gpuDataType:0},{dims:r,dataType:e.inputs[0].dataType,gpuDataType:0}],dispatchGroup:c,programUniforms:f}),getShaderSource:g},{inputs:a,outputs:[-1,-1,-1]})},as=(e,t)=>{let r=ap(e.inputs,t),[o,n,s]=lp(e,r);return to(e,o,n,s,e.inputs[4],void 0,void 0,void 0,e.inputs[5],r,t)}});var dp,cp,pp,is,ss=Z(()=>{"use strict";fr();ve();Ee();Ze();Te();dp=(e,t)=>{if(!e||e.length!==5)throw new Error("BatchNormalization requires 5 inputs");let r=(o,n,s)=>{let u=n.length;if(u!==o.length)throw new Error(`${s}: num dimensions != ${u}`);n.forEach((c,a)=>{if(c!==o[a])throw new Error(`${s}: dim[${a}] do not match`)})};if(e[0].dims.length>1){let o=t.format==="NHWC"?t.spatial?e[0].dims.slice(-1):e[0].dims.slice(-1).concat(e[0].dims.slice(1,e[0].dims.length-1)):e[0].dims.slice(1,t.spatial?2:void 0);r(e[1].dims,o,"Invalid input scale"),r(e[2].dims,o,"Invalid input B"),r(e[3].dims,o,"Invalid input mean"),r(e[4].dims,o,"Invalid input var")}else r(e[1].dims,[1],"Invalid input scale"),r(e[2].dims,[1],"Invalid input B"),r(e[3].dims,[1],"Invalid input mean"),r(e[4].dims,[1],"Invalid input var")},cp=(e,t)=>{let{epsilon:r,spatial:o,format:n}=t,s=e[0].dims,u=o?Ve(s[s.length-1]):1,c=n==="NHWC"&&s.length>1?u:1,a=B.size(s)/u,f=o,g=f?s.length:s,h=M("x",e[0].dataType,e[0].dims,u),w=M("scale",e[1].dataType,e[1].dims,c),_=M("bias",e[2].dataType,e[2].dims,c),v=M("inputMean",e[3].dataType,e[3].dims,c),$=M("inputVar",e[4].dataType,e[4].dims,c),C=j("y",e[0].dataType,g,u),x=()=>{let T="";if(o)T=`let cOffset = ${s.length===1?"0u":n==="NHWC"?`outputIndices[${s.length-1}] / ${u}`:"outputIndices[1]"};`;else if(n==="NCHW")T=`\n            ${C.indicesSet("outputIndices","0","0")}\n            let cOffset = ${C.indicesToOffset("outputIndices")};`;else{T=`var cIndices = ${w.type.indices}(0);\n                       cIndices[0] = outputIndices[${s.length-1}];`;for(let E=1;E<w.rank;E++)T+=`cIndices[${E}] = outputIndices[${E}];`;T+=`let cOffset = ${w.indicesToOffset("cIndices")};`}return T},S=T=>`\n  const epsilon = ${r};\n  ${T.registerUniform("outputSize","u32").declareVariables(h,w,_,v,$,C)}\n  ${T.mainStart()}\n  ${T.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n    var outputIndices = ${C.offsetToIndices(`global_idx * ${u}`)};\n    ${x()}\n    let scale = ${w.getByOffset("cOffset")};\n    let bias = ${_.getByOffset("cOffset")};\n    let inputMean = ${v.getByOffset("cOffset")};\n    let inputVar = ${$.getByOffset("cOffset")};\n    let x = ${h.getByOffset("global_idx")};\n    let value = (x - inputMean) * inverseSqrt(inputVar + epsilon) * scale + bias;\n    ${C.setByOffset("global_idx","value")}\n  }`;return{name:"BatchNormalization",shaderCache:{hint:`${t.epsilon}_${t.format}_${o}_${u}`,inputDependencies:f?["rank","type","type","type","type"]:void 0},getShaderSource:S,getRunData:()=>({outputs:[{dims:e[0].dims,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(a/64)},programUniforms:f?[{type:12,data:a},...X(s)]:[{type:12,data:a}]})}},pp=e=>Ae(e),is=(e,t)=>{let{inputs:r,outputCount:o}=e,n=pp({...t,outputCount:o});if(mr.webgpu.validateInputContent&&dp(r,n),t.trainingMode)throw new Error("BatchNormalization trainingMode is not supported yet.");e.compute(cp(r,n))}});var mp,fp,us,ls=Z(()=>{"use strict";Ee();Te();mp=e=>{if(e[0].dims.length!==3)throw new Error("input should have 3 dimensions");if(![320,640,1280].includes(e[0].dims[2]))throw new Error("number of channels should be 320, 640 or 1280");if(e[1].dims.length!==1)throw new Error("bias is expected to have 1 dimensions");if(e[0].dims[2]!==e[1].dims[0])throw new Error("last dimension of input and bias are not the same")},fp=e=>{let t=e[0].dims,r=e[0].dims[2],o=B.size(t)/4,n=e[0].dataType,s=M("input",n,t,4),u=M("bias",n,[r],4),c=M("residual",n,t,4),a=j("output",n,t,4);return{name:"BiasAdd",getRunData:()=>({outputs:[{dims:t,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(o/64)}}),getShaderSource:g=>`\n  const channels = ${r}u / 4;\n  ${g.declareVariables(s,u,c,a)}\n\n  ${g.mainStart()}\n    ${g.guardAgainstOutOfBoundsWorkgroupSizes(o)}\n    let value = ${s.getByOffset("global_idx")}\n      + ${u.getByOffset("global_idx % channels")} + ${c.getByOffset("global_idx")};\n    ${a.setByOffset("global_idx","value")}\n  }`}},us=e=>{mp(e.inputs),e.compute(fp(e.inputs))}});var hp,Re,ds,cs,ps,ms,fs,hs,gs,ys,bs,gp,vs,ws,_s,$s,ro,Ss,no,xs,Cs,As,Is,Ts,Es,Os,ks,Ps,Rs,Ds,Bs,Ms,zs,Us,Vs,Ns,Ws,Jo,ea,Gs,Hs,Ls,oo=Z(()=>{"use strict";ve();Ee();Ze();Te();hp=(e,t,r,o,n,s)=>{let u=Math.ceil(t/4),c="";typeof n=="string"?c=`${n}(a)`:c=n("a");let a=M("inputData",r,[u],4),f=j("outputData",o,[u],4);return`\n      ${e.registerUniform("vec_size","u32").declareVariables(a,f)}\n\n  ${s??""}\n\n  ${e.mainStart()}\n    ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}\n\n    let a = ${a.getByOffset("global_idx")};\n    ${f.setByOffset("global_idx",c)}\n  }`},Re=(e,t,r,o,n,s=e.dataType)=>({name:t,shaderCache:{hint:n,inputDependencies:["type"]},getShaderSource:u=>hp(u,B.size(e.dims),e.dataType,s,r,o),getRunData:u=>({outputs:[{dims:e.dims,dataType:s}],dispatchGroup:{x:Math.ceil(B.size(u[0].dims)/64/4)},programUniforms:[{type:12,data:Math.ceil(B.size(e.dims)/4)}]})}),ds=e=>{e.compute(Re(e.inputs[0],"Abs","abs"))},cs=e=>{e.compute(Re(e.inputs[0],"Acos","acos"))},ps=e=>{e.compute(Re(e.inputs[0],"Acosh","acosh"))},ms=e=>{e.compute(Re(e.inputs[0],"Asin","asin"))},fs=e=>{e.compute(Re(e.inputs[0],"Asinh","asinh"))},hs=e=>{e.compute(Re(e.inputs[0],"Atan","atan"))},gs=e=>{e.compute(Re(e.inputs[0],"Atanh","atanh"))},ys=e=>Ae(e),bs=(e,t)=>{let r;switch(t.to){case 10:r="vec4<f16>";break;case 1:r="vec4<f32>";break;case 12:r="vec4<u32>";break;case 6:r="vec4<i32>";break;case 9:r="vec4<bool>";break;default:throw new RangeError(`not supported type (specified in attribute \'to\' from \'Cast\' operator): ${t.to}`)}e.compute(Re(e.inputs[0],"Cast",r,void 0,t.cacheKey,t.to))},gp=e=>{let t=e.length>=2&&e[1].data!==0?e[1].getFloat32Array()[0]:Zn,r=e.length>=3&&e[2].data!==0?e[2].getFloat32Array()[0]:Xn;return Ae({min:t,max:r})},vs=(e,t)=>{let r=e.inputs.length===1?t:gp(e.inputs),o=st(e.inputs[0].dataType);e.compute(Re(e.inputs[0],"Clip",n=>`clamp(${n}, clip_min_, clip_max_)`,`\n    const clip_min_: vec4<${o}> = vec4(${o}(${r.min}));\n    const clip_max_: vec4<${o}> = vec4(${o}(${r.max}));\n`,r.cacheKey),{inputs:[0]})},ws=e=>{e.compute(Re(e.inputs[0],"Ceil","ceil"))},_s=e=>{e.compute(Re(e.inputs[0],"Cos","cos"))},$s=e=>{e.compute(Re(e.inputs[0],"Cosh","cosh"))},ro=e=>Ae(e),Ss=(e,t)=>{let r=st(e.inputs[0].dataType);e.compute(Re(e.inputs[0],"Elu",o=>`elu_vf32(${o})`,`\n  const elu_alpha_ = ${r}(${t.alpha});\n\n  fn elu_f32(a: ${r}) -> ${r} {\n  return select((exp(a) - 1.0) * elu_alpha_, a, a >= 0.0);\n  }\n\n  fn elu_vf32(v: vec4<${r}>) -> vec4<${r}> {\n  return vec4(elu_f32(v.x), elu_f32(v.y), elu_f32(v.z), elu_f32(v.w));\n  }`,t.cacheKey))},no=(e="f32")=>`\nconst r0: ${e} = 0.3275911;\nconst r1: ${e} = 0.254829592;\nconst r2: ${e} = -0.284496736;\nconst r3: ${e} = 1.421413741;\nconst r4: ${e} = -1.453152027;\nconst r5: ${e} = 1.061405429;\n\nfn erf_vf32(v: vec4<${e}>) -> vec4<${e}> {\n  let absv = abs(v);\n  let x = 1.0 / (1.0 + r0 * absv);\n  return sign(v) * (1.0 - ((((r5 * x + r4) * x + r3) * x + r2) * x + r1) * x * exp(-absv * absv));\n}`,xs=e=>{let t=st(e.inputs[0].dataType);e.compute(Re(e.inputs[0],"Erf",r=>`erf_vf32(${r})`,no(t)))},Cs=e=>{e.compute(Re(e.inputs[0],"Exp","exp"))},As=e=>{e.compute(Re(e.inputs[0],"Floor","floor"))},Is=e=>{let t=st(e.inputs[0].dataType);e.compute(Re(e.inputs[0],"Gelu",r=>`0.5 * ${r} * (1.0 + erf_vf32(${r} * 0.7071067811865475))`,no(t)))},Ts=(e,t)=>{let r=st(e.inputs[0].dataType);e.compute(Re(e.inputs[0],"LeakyRelu",o=>`select(leaky_relu_alpha_ * ${o}, ${o}, ${o} >= vec4<${r}>(0.0))`,`const leaky_relu_alpha_ = ${r}(${t.alpha});`,t.cacheKey))},Es=e=>{e.compute(Re(e.inputs[0],"Not",t=>`!${t}`))},Os=e=>{e.compute(Re(e.inputs[0],"Neg",t=>`-${t}`))},ks=e=>{e.compute(Re(e.inputs[0],"Reciprocal",t=>`1.0/${t}`))},Ps=e=>{let t=st(e.inputs[0].dataType);e.compute(Re(e.inputs[0],"Relu",r=>`select(vec4<${t}>(0.0), ${r}, ${r} > vec4<${t}>(0.0))`))},Rs=e=>{e.compute(Re(e.inputs[0],"Sigmoid",t=>`(1.0 / (1.0 + exp(-${t})))`))},Ds=e=>Ae(e),Bs=(e,t)=>{let r=st(e.inputs[0].dataType);e.compute(Re(e.inputs[0],"HardSigmoid",o=>`max(vec4<${r}>(0.0), min(vec4<${r}>(1.0), ${t.alpha} * ${o} + vec4<${r}>(${t.beta})))`,void 0,t.cacheKey))},Ms=e=>{e.compute(Re(e.inputs[0],"Sin","sin"))},zs=e=>{e.compute(Re(e.inputs[0],"Sinh","sinh"))},Us=e=>{e.compute(Re(e.inputs[0],"Sqrt","sqrt"))},Vs=e=>{e.compute(Re(e.inputs[0],"Tan","tan"))},Ns=e=>`sign(${e}) * (1 - exp(-2 * abs(${e}))) / (1 + exp(-2 * abs(${e})))`,Ws=e=>{e.compute(Re(e.inputs[0],"Tanh",Ns))},Jo=(e="f32")=>`\nconst fast_gelu_a: ${e} = 0.5;\nconst fast_gelu_b: ${e} = 0.7978845608028654;\nconst fast_gelu_c: ${e} = 0.035677408136300125;\n\nfn tanh_v(v: vec4<${e}>) -> vec4<${e}> {\n  return ${Ns("v")};\n}\n`,ea=e=>`(fast_gelu_a + fast_gelu_a * tanh_v(${e} * (fast_gelu_c * ${e} * ${e} + fast_gelu_b))) * ${e}`,Gs=e=>{let t=st(e.inputs[0].dataType);e.compute(Re(e.inputs[0],"FastGelu",ea,Jo(t),void 0,e.inputs[0].dataType))},Hs=(e,t)=>{let r=st(e.inputs[0].dataType);return e.compute(Re(e.inputs[0],"ThresholdedRelu",o=>`select(vec4<${r}>(0.0), ${o}, ${o} > thresholded_relu_alpha_)`,`const thresholded_relu_alpha_ = vec4<${r}>(${t.alpha});`,t.cacheKey)),0},Ls=e=>{e.compute(Re(e.inputs[0],"Log","log"))}});var yp,bp,js,Ks=Z(()=>{"use strict";Ee();Te();oo();yp=e=>{if(e[0].dims.length!==3)throw new Error("input should have 3 dimensions");if(![2560,5120,10240].includes(e[0].dims[2]))throw new Error("hidden state should be 2560, 5120 or 10240");if(e[1].dims.length!==1)throw new Error("bias is expected to have 1 dimensions");if(e[0].dims[2]!==e[1].dims[0])throw new Error("last dimension of input and bias are not the same")},bp=e=>{let t=e[0].dims.slice();t[2]=t[2]/2;let r=M("input",e[0].dataType,e[0].dims,4),o=M("bias",e[0].dataType,[e[0].dims[2]],4),n=j("output",e[0].dataType,t,4),s=B.size(t)/4,u=Be(e[0].dataType);return{name:"BiasSplitGelu",getRunData:()=>({outputs:[{dims:t,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(s/64)}}),getShaderSource:a=>`\n  const M_SQRT2 = sqrt(2.0);\n  const halfChannels = ${e[0].dims[2]/4/2}u;\n\n  ${a.declareVariables(r,o,n)}\n\n  ${no(u)}\n\n  ${a.mainStart()}\n    ${a.guardAgainstOutOfBoundsWorkgroupSizes(s)}\n    let biasIdx = global_idx % halfChannels;\n    let batchIndex = global_idx / halfChannels;\n    let inputOffset = biasIdx + batchIndex * halfChannels * 2;\n    let valueLeft = input[inputOffset] + bias[biasIdx];\n    let valueRight = input[inputOffset + halfChannels] + bias[biasIdx + halfChannels];\n    let geluRight = valueRight * 0.5 * (erf_vf32(valueRight / M_SQRT2) + 1);\n\n    ${n.setByOffset("global_idx","valueLeft * geluRight")}\n  }`}},js=e=>{yp(e.inputs),e.compute(bp(e.inputs))}});var vp,wp,Et,qs,Ys,Zs,Xs,Qs,Js,eu,tu,ru,nu,ou=Z(()=>{"use strict";ve();Ee();Te();vp=(e,t,r,o,n,s,u,c,a,f,g,h)=>{let w,_;typeof c=="string"?w=_=(S,T)=>`${c}((${S}),(${T}))`:typeof c=="function"?w=_=c:(w=c.scalar,_=c.vector);let v=j("outputData",g,o.length,4),$=M("aData",a,t.length,4),C=M("bData",f,r.length,4),x;if(n)if(s){let S=B.size(t)===1,T=B.size(r)===1,E=t.length>0&&t[t.length-1]%4===0,P=r.length>0&&r[r.length-1]%4===0;S||T?x=v.setByOffset("global_idx",_(S?`${$.type.value}(${$.getByOffset("0")}.x)`:$.getByOffset("global_idx"),T?`${C.type.value}(${C.getByOffset("0")}.x)`:C.getByOffset("global_idx"))):x=`\n            let outputIndices = ${v.offsetToIndices("global_idx * 4u")};\n            let offsetA = ${$.broadcastedIndicesToOffset("outputIndices",v)};\n            let offsetB = ${C.broadcastedIndicesToOffset("outputIndices",v)};\n            ${v.setByOffset("global_idx",_(u||E?$.getByOffset("offsetA / 4u"):`${$.type.value}(${$.getByOffset("offsetA / 4u")}[offsetA % 4u])`,u||P?C.getByOffset("offsetB / 4u"):`${C.type.value}(${C.getByOffset("offsetB / 4u")}[offsetB % 4u])`))}\n          `}else x=v.setByOffset("global_idx",_($.getByOffset("global_idx"),C.getByOffset("global_idx")));else{if(!s)throw new Error("no necessary to use scalar implementation for element-wise binary op implementation.");let S=(T,E,P="")=>{let z=`aData[indexA${E}][componentA${E}]`,H=`bData[indexB${E}][componentB${E}]`;return`\n            let outputIndices${E} = ${v.offsetToIndices(`global_idx * 4u + ${E}u`)};\n            let offsetA${E} = ${$.broadcastedIndicesToOffset(`outputIndices${E}`,v)};\n            let offsetB${E} = ${C.broadcastedIndicesToOffset(`outputIndices${E}`,v)};\n            let indexA${E} = offsetA${E} / 4u;\n            let indexB${E} = offsetB${E} / 4u;\n            let componentA${E} = offsetA${E} % 4u;\n            let componentB${E} = offsetB${E} % 4u;\n            ${T}[${E}] = ${P}(${w(z,H)});\n          `};g===9?x=`\n            var data = vec4<u32>(0);\n            ${S("data",0,"u32")}\n            ${S("data",1,"u32")}\n            ${S("data",2,"u32")}\n            ${S("data",3,"u32")}\n            outputData[global_idx] = dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(data));`:x=`\n            ${S("outputData[global_idx]",0)}\n            ${S("outputData[global_idx]",1)}\n            ${S("outputData[global_idx]",2)}\n            ${S("outputData[global_idx]",3)}\n          `}return`\n        ${e.registerUniform("vec_size","u32").declareVariables($,C,v)}\n\n        ${h??""}\n\n        ${e.mainStart()}\n        ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}\n        ${x}\n      }`},wp=(e,t,r,o,n,s,u=r.dataType)=>{let c=!B.areEqual(r.dims,o.dims),a=r.dims,f=B.size(r.dims),g=!1,h=!1,w=[c];if(c){let _=xt.calcShape(r.dims,o.dims,!1);if(!_)throw new Error("Can\'t perform binary op on the given tensors");a=_,f=B.size(a);let v=B.size(r.dims)===1,$=B.size(o.dims)===1,C=r.dims.length>0&&r.dims[r.dims.length-1]%4===0,x=o.dims.length>0&&o.dims[o.dims.length-1]%4===0;w.push(v),w.push($),w.push(C),w.push(x);let S=1;for(let T=1;T<a.length;T++){let E=r.dims[r.dims.length-T]??1,P=o.dims[o.dims.length-T]??1;if(E===P)S*=E;else break}S%4===0?(h=!0,g=!0):(v||$||C||x)&&(g=!0)}else g=!0;return w.push(g),{name:e,shaderCache:{hint:t+w.map(_=>_.toString()).join("_"),inputDependencies:["rank","rank"]},getShaderSource:_=>vp(_,r.dims,o.dims,a,g,c,h,n,r.dataType,o.dataType,u,s),getRunData:()=>({outputs:[{dims:a,dataType:u}],dispatchGroup:{x:Math.ceil(f/64/4)},programUniforms:[{type:12,data:Math.ceil(B.size(a)/4)},...X(r.dims,o.dims,a)]})}},Et=(e,t,r,o,n,s)=>{e.compute(wp(t,n??"",e.inputs[0],e.inputs[1],r,o,s))},qs=e=>{Et(e,"Add",(t,r)=>`${t}+${r}`)},Ys=e=>{Et(e,"Div",(t,r)=>`${t}/${r}`)},Zs=e=>{Et(e,"Equal",{scalar:(t,r)=>`u32(${t}==${r})`,vector:(t,r)=>`vec4<u32>(${t}==${r})`},void 0,void 0,9)},Xs=e=>{Et(e,"Mul",(t,r)=>`${t}*${r}`)},Qs=e=>{let t=M("input",e.inputs[0].dataType,e.inputs[0].dims).type.value;Et(e,"Pow",{scalar:(o,n)=>`pow_custom(${o},${n})`,vector:(o,n)=>`pow_vector_custom(${o},${n})`},`\n    fn pow_custom(a : ${t}, b : ${t}) -> ${t} {\n      if (b == ${t}(0.0)) {\n        return ${t}(1.0);\n      } else if (a < ${t}(0.0) && f32(b) != floor(f32(b))) {\n        return ${t}(pow(f32(a), f32(b))); // NaN\n      }\n      return select(sign(a), ${t}(1.0), round(f32(abs(b) % ${t}(2.0))) != 1.0) * ${t}(${t==="i32"?"round":""}(pow(f32(abs(a)), f32(b))));\n    }\n    fn pow_vector_custom(a : vec4<${t}>, b : vec4<${t}>) -> vec4<${t}> {\n      // TODO: implement vectorized pow\n      return vec4<${t}>(pow_custom(a.x, b.x), pow_custom(a.y, b.y), pow_custom(a.z, b.z), pow_custom(a.w, b.w));\n    }\n      `)},Js=e=>{Et(e,"Sub",(t,r)=>`${t}-${r}`)},eu=e=>{Et(e,"Greater",{scalar:(t,r)=>`u32(${t}>${r})`,vector:(t,r)=>`vec4<u32>(${t}>${r})`},void 0,void 0,9)},tu=e=>{Et(e,"Less",{scalar:(t,r)=>`u32(${t}<${r})`,vector:(t,r)=>`vec4<u32>(${t}<${r})`},void 0,void 0,9)},ru=e=>{Et(e,"GreaterOrEqual",{scalar:(t,r)=>`u32(${t}>=${r})`,vector:(t,r)=>`vec4<u32>(${t}>=${r})`},void 0,void 0,9)},nu=e=>{Et(e,"LessOrEqual",{scalar:(t,r)=>`u32(${t}<=${r})`,vector:(t,r)=>`vec4<u32>(${t}<=${r})`},void 0,void 0,9)}});var $p,Sp,xp,Cp,au,iu,su=Z(()=>{"use strict";ve();Ee();Ze();Te();$p=(e,t)=>{if(!e||e.length<1)throw new Error("too few inputs");let r=0,o=e[r],n=o.dataType,s=o.dims.length;e.forEach((u,c)=>{if(c!==r){if(u.dataType!==n)throw new Error("input tensors should be one type");if(u.dims.length!==s)throw new Error("input tensors should have the same shape");u.dims.forEach((a,f)=>{if(f!==t&&a!==o.dims[f])throw new Error("non concat dimensions must match")})}})},Sp=(e,t)=>`\n  fn calculateInputIndex(index: u32) -> u32 {\n    let sizeInConcatAxis = array<u32, ${e}u>(${t});\n    for (var i: u32 = 0u; i < ${e}; i += 1u ) {\n      if (index < sizeInConcatAxis[i]) {\n        return i;\n      }\n    }\n    return ${e}u;\n  }`,xp=(e,t)=>{let r=e.length,o=[];for(let n=0;n<r;++n){let s=t.setByOffset("global_idx",e[n].getByIndices("indices"));r===1?o.push(s):n===0?o.push(`if (inputIndex == ${n}u) { ${s} }`):n===r-1?o.push(`else { ${s} }`):o.push(`else if (inputIndex == ${n}) { ${s} }`)}return o.join(`\n`)},Cp=(e,t,r,o)=>{let n=B.size(r),s=new Array(e.length),u=new Array(e.length),c=0,a=[],f=[],g=[{type:12,data:n}];for(let $=0;$<e.length;++$)c+=e[$].dims[t],s[$]=c,f.push(e[$].dims.length),u[$]=M(`input${$}`,o,f[$]),a.push("rank"),g.push({type:12,data:s[$]});for(let $=0;$<e.length;++$)g.push(...X(e[$].dims));g.push(...X(r));let h=j("output",o,r.length),w=h.indicesGet("indices",t),_=Array.from(Array(s.length).keys()).map($=>`uniforms.sizeInConcatAxis${$}`).join(","),v=$=>`\n\n  ${(()=>{$.registerUniform("outputSize","u32");for(let C=0;C<e.length;C++)$.registerUniform(`sizeInConcatAxis${C}`,"u32");return $.declareVariables(...u,h)})()}\n\n  ${Sp(s.length,_)}\n\n  ${$.mainStart()}\n    ${$.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n\n    var indices = ${h.offsetToIndices("global_idx")};\n\n    let inputIndex = calculateInputIndex(${w});\n    if (inputIndex != 0u) {\n      let sizeInConcatAxis = array<u32, ${s.length}u>(${_});\n      ${w} -= sizeInConcatAxis[inputIndex - 1u];\n    }\n\n    ${xp(u,h)}\n  }`;return{name:"Concat",shaderCache:{hint:`${t}`,inputDependencies:a},getRunData:()=>({outputs:[{dims:r,dataType:o}],dispatchGroup:{x:Math.ceil(n/64)},programUniforms:g}),getShaderSource:v}},au=(e,t)=>{let r=e.inputs,o=r[0].dims,n=B.normalizeAxis(t.axis,o.length);$p(r,n);let s=o.slice();s[n]=r.reduce((c,a)=>c+(a.dims.length>n?a.dims[n]:0),0);let u=r.filter(c=>B.size(c.dims)>0);e.compute(Cp(u,n,s,r[0].dataType),{inputs:u})},iu=e=>Ae({axis:e.axis})});var gt,yt,bt,ao,Gt=Z(()=>{"use strict";ve();Ee();gt=(e,t,r="f32")=>{switch(e.activation){case"Relu":return`value = max(value, ${t}(0.0));`;case"Sigmoid":return`value = (${t}(1.0) / (${t}(1.0) + exp(-value)));`;case"Clip":return`value = clamp(value, ${t}(${r}(uniforms.clip_min)), ${t}(${r}(uniforms.clip_max)));`;case"HardSigmoid":return`value = max(${t}(0.0), min(${t}(1.0), ${r}(uniforms.alpha) * value + ${r}(uniforms.beta)));`;case"LeakyRelu":return`value = select(${r}(uniforms.alpha) * value, value, value >= ${t}(0.0));`;case"":return"";default:throw new Error(`Unsupported activation ${e.activation}`)}},yt=(e,t)=>{e.activation==="Clip"?t.push({type:1,data:e.clipMax},{type:1,data:e.clipMin}):e.activation==="HardSigmoid"?t.push({type:1,data:e.alpha},{type:1,data:e.beta}):e.activation==="LeakyRelu"&&t.push({type:1,data:e.alpha})},bt=(e,t)=>{e.activation==="Clip"?t.push({name:"clip_max",type:"f32"},{name:"clip_min",type:"f32"}):e.activation==="HardSigmoid"?t.push({name:"alpha",type:"f32"},{name:"beta",type:"f32"}):e.activation==="LeakyRelu"&&t.push({name:"alpha",type:"f32"})},ao=e=>{let t=e?.activation||"";if(t==="HardSigmoid"){let[r,o]=e?.activation_params||[.2,.5];return{activation:t,alpha:r,beta:o}}else if(t==="Clip"){let[r,o]=e?.activation_params||[Zn,Xn];return{activation:t,clipMax:o,clipMin:r}}else if(t==="LeakyRelu"){let[r]=e?.activation_params||[.01];return{activation:t,alpha:r}}return{activation:t}}});var nt,io,so=Z(()=>{"use strict";nt=(e,t)=>{switch(e){case 1:return t;case 2:return`vec2<${t}>`;case 3:return`vec3<${t}>`;case 4:return`vec4<${t}>`;default:throw new Error(`${e}-component is not supported.`)}},io=e=>`\n      ${e?"value = value + getBiasByOutputCoords(coords);":""}\n      `});var uo,ta=Z(()=>{"use strict";uo=e=>`\nfn getIndexFromCoords4D(coords : vec4<i32>, shape : vec4<i32>) -> i32 {\n  return dot(coords, vec4<i32>(\n      shape.y * shape.z * shape.w, shape.z * shape.w, shape.w, 1));\n}\nfn getOutputIndexFromCoords(coords : vec4<i32>) -> i32 {\n  return dot(coords, vec4<i32>(\n    i32(${e}.x), i32(${e}.y), i32(${e}.z), 1));\n}\n`});var Ap,Ip,Gr,uu,Tp,Hr,Ep,lo,Lr=Z(()=>{"use strict";ve();Ee();Te();Gt();so();Ap=(e,t)=>e?`\n        mm_Asub[inputRow][inputCol] = mm_readA(batch,\n          kStart + inputRow,\n          globalRowStart / innerElementSize + inputCol${t?", batchIndices":""});\n        `:`\n        mm_Asub[inputRow][inputCol] = mm_readA(batch,\n          globalRow + innerRow,\n          kStart / innerElementSize + inputCol${t?", batchIndices":""});\n        `,Ip=(e,t)=>e?`\n        let ACached0 = mm_Asub[k * innerElementSize][localRow];\n        let ACached1 = mm_Asub[k * innerElementSize + 1][localRow];\n        let ACached2 = mm_Asub[k * innerElementSize + 2][localRow];\n        ${t===3?"":"let ACached3 = mm_Asub[k * innerElementSize + 3][localRow];"}\n        for (var i = 0; i < rowPerThread; i = i + 1) {\n          acc[i] = BCached0 * ACached0[i] + acc[i];\n          acc[i] = BCached1 * ACached1[i] + acc[i];\n          acc[i] = BCached2 * ACached2[i] + acc[i];\n          ${t===3?"":"acc[i] = BCached3 * ACached3[i] + acc[i];"}\n        }`:`\n        for (var i = 0; i < rowPerThread; i = i + 1) {\n          let ACached = mm_Asub[tileRow + i][k];\n          acc[i] = BCached0 * ACached.x + acc[i];\n          acc[i] = BCached1 * ACached.y + acc[i];\n          acc[i] = BCached2 * ACached.z + acc[i];\n          ${t===3?"":"acc[i] = BCached3 * ACached.w + acc[i];"}\n        }`,Gr=(e,t,r="f32",o,n=!1,s=32,u=!1,c=32)=>{let a=t[1]*e[1],f=t[0]*e[0],g=n?a:s,h=n?s:a,w=g/t[0],_=s/t[1];if(!((n&&w===4&&e[1]===4||!n&&(w===3||w===4))&&g%t[0]===0&&s%t[1]===0&&e[0]===4))throw new Error(`If transposeA ${n} is true, innerElementSize ${w} and workPerThread[1] ${e[1]} must be 4.\n      Otherwise, innerElementSize ${w} must be 3 or 4.\n  tileAWidth ${g} must be divisible by workgroupSize[0]${t[0]}. tileInner ${s} must be divisible by workgroupSize[1] ${t[1]}. colPerThread ${e[0]} must be 4.`);return`\nvar<workgroup> mm_Asub: array<array<vec${w}<${r}>, ${g/w}>, ${h}>;\nvar<workgroup> mm_Bsub: array<array<vec4<${r}>, ${f/e[0]}>, ${s}>;\n\nconst rowPerThread = ${e[1]};\nconst colPerThread = ${e[0]};\nconst innerElementSize = ${w};\nconst tileInner = ${s};\n\n@compute @workgroup_size(${t[0]}, ${t[1]}, ${t[2]})\nfn main(@builtin(local_invocation_id) localId : vec3<u32>,\n        @builtin(global_invocation_id) globalId : vec3<u32>,\n        @builtin(workgroup_id) workgroupId : vec3<u32>) {\n  let localRow = i32(localId.y);\n  let tileRow = localRow * rowPerThread;\n  let tileCol = i32(localId.x);\n\n  let globalRow =i32(globalId.y) * rowPerThread;\n  let globalCol = i32(globalId.x);\n  let batch = ${u?"0":"i32(globalId.z)"};\n  ${o?`let batchIndices = ${o.offsetToIndices("u32(batch)")};`:""}\n  let globalRowStart = i32(workgroupId.y) * ${a};\n\n  let num_tiles = ${u?`${Math.ceil(c/s)}`:"(uniforms.dim_inner - 1) / tileInner + 1"};\n  var kStart = ${u?`i32(globalId.z) * ${c}`:"0"};\n\n  var acc: array<vec4<${r}>, rowPerThread>;\n\n  // Loop over shared dimension.\n  let tileRowB = localRow * ${_};\n  for (var t = 0; t < num_tiles; t = t + 1) {\n      // Load one tile of A into local memory.\n      for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n          let inputRow = tileRow + innerRow;\n          let inputCol = tileCol;\n          ${Ap(n,o)}\n      }\n\n      // Load one tile of B into local memory.\n      for (var innerRow = 0; innerRow < ${_}; innerRow = innerRow + 1) {\n          let inputRow = tileRowB + innerRow;\n          let inputCol = tileCol;\n          mm_Bsub[inputRow][inputCol] = mm_readB(batch, kStart + inputRow, globalCol${o?", batchIndices":""});\n      }\n      kStart = kStart + tileInner;\n      workgroupBarrier();\n\n      // Compute acc values for a single thread.\n      for (var k = 0; k < tileInner / innerElementSize; k = k + 1) {\n          let BCached0 = mm_Bsub[k * innerElementSize][tileCol];\n          let BCached1 = mm_Bsub[k * innerElementSize + 1][tileCol];\n          let BCached2 = mm_Bsub[k * innerElementSize + 2][tileCol];\n          ${w===3?"":"let BCached3 = mm_Bsub[k * innerElementSize + 3][tileCol];"}\n\n          ${Ip(n,w)}\n      }\n\n      workgroupBarrier();\n  }\n\n  for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n      mm_write(batch, globalRow + innerRow, globalCol, acc[innerRow]);\n  }\n}`},uu=(e,t)=>e?`\n            mm_Asub[inputRow][inputCol] = mm_readA(batch,\n              kStart + inputRow,\n              globalRowStart + inputCol${t?", batchIndices":""});\n            `:`\n            mm_Asub[inputRow][inputCol] = mm_readA(batch,\n              globalRowStart + inputRow,\n              kStart + inputCol${t?", batchIndices":""});\n            `,Tp=e=>e?"let ACached = mm_Asub[k][tileRow + innerRow];":"let ACached = mm_Asub[tileRow + innerRow][k];",Hr=(e,t,r="f32",o,n=!1,s=32,u=!1,c=32,a=!1)=>{let f=e[1]*t[1],g=e[0]*t[0],h=n?f:s,w=n?s:f;if(!(w%t[1]===0&&h%t[0]===0&&s%t[1]===0))throw new Error(`tileAHight ${w} must be divisible by workgroupSize[1]${t[1]}, tileAWidth ${h} must be divisible by workgroupSize[0]${t[0]}, tileInner ${s} must be divisible by workgroupSize[1]${t[1]}`);let _=w/t[1],v=h/t[0],$=s/t[1],C=a?`\n    let localRow = i32(localId.y);\n    let localCol = i32(localId.x);\n    let globalRowStart = i32(workgroupId.y) * ${f};\n    let globalColStart = i32(workgroupId.x) * ${g};\n\n    // Loop over shared dimension.\n    for (var t = 0; t < num_tiles; t = t + 1) {\n      // Load one tile of A into local memory.\n      for (var inputRow = localRow; inputRow < ${w}; inputRow = inputRow + ${t[1]}) {\n        for (var inputCol = localCol; inputCol < ${h}; inputCol = inputCol + ${t[0]}) {\n          ${uu(n,o)}\n        }\n      }\n      // Load one tile of B into local memory.\n      for (var inputRow = localRow; inputRow < ${s}; inputRow = inputRow + ${t[1]}) {\n            for (var inputCol = localCol; inputCol < ${g}; inputCol = inputCol + ${t[0]}) {\n          mm_Bsub[inputRow][inputCol] = mm_readB(batch,\n            kStart + inputRow,\n            globalColStart + inputCol${o?", batchIndices":""});\n        }\n      }\n      kStart = kStart + tileInner;\n      workgroupBarrier();\n\n      // Compute acc values for a single thread.\n      var BCached : array<${r}, colPerThread>;\n      for (var k = 0; k < tileInner; k = k + 1) {\n        for (var inner = 0; inner < colPerThread; inner = inner + 1) {\n          BCached[inner] = mm_Bsub[k][localCol + inner * ${t[0]}];\n        }\n        for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n          let ACached = ${n?`mm_Asub[k][localRow + innerRow * ${t[1]}];`:`mm_Asub[localRow + innerRow * ${t[1]}][k];`}\n          for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n            acc[innerRow][innerCol] = acc[innerRow][innerCol] +\n                ACached * BCached[innerCol];\n          }\n        }\n      }\n      workgroupBarrier();\n    }\n    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n      let gRow = globalRowStart + localRow + innerRow * ${t[1]};\n      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n        let gCol = globalColStart + localCol + innerCol * ${t[0]};\n        mm_write(batch, gRow, gCol, acc[innerRow][innerCol]);\n      }\n    }\n    `:`\nlet tileRow = i32(localId.y) * rowPerThread;\nlet tileCol = i32(localId.x) * colPerThread;\n\nlet globalRow = i32(globalId.y) * rowPerThread;\nlet globalCol = i32(globalId.x) * colPerThread;\nlet globalRowStart = i32(workgroupId.y) * ${f};\n\nlet tileRowA = i32(localId.y) * ${_};\nlet tileColA = i32(localId.x) * ${v};\nlet tileRowB = i32(localId.y) * ${$};\n// Loop over shared dimension.\nfor (var t = 0; t < num_tiles; t = t + 1) {\n  // Load one tile of A into local memory.\n  for (var innerRow = 0; innerRow < ${_}; innerRow = innerRow + 1) {\n    for (var innerCol = 0; innerCol < ${v}; innerCol = innerCol + 1) {\n      let inputRow = tileRowA + innerRow;\n      let inputCol = tileColA + innerCol;\n      ${uu(n,o)}\n    }\n  }\n\n  // Load one tile of B into local memory.\n  for (var innerRow = 0; innerRow < ${$}; innerRow = innerRow + 1) {\n    for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n      let inputRow = tileRowB + innerRow;\n      let inputCol = tileCol + innerCol;\n      mm_Bsub[inputRow][inputCol] = mm_readB(batch,\n        kStart + inputRow,\n        globalCol + innerCol${o?", batchIndices":""});\n    }\n  }\n  kStart = kStart + tileInner;\n  workgroupBarrier();\n\n  // Compute acc values for a single thread.\n  var BCached : array<${r}, colPerThread>;\n  for (var k = 0; k < tileInner; k = k + 1) {\n    for (var inner = 0; inner < colPerThread; inner = inner + 1) {\n      BCached[inner] = mm_Bsub[k][tileCol + inner];\n    }\n\n    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n      ${Tp(n)}\n      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n        acc[innerRow][innerCol] = acc[innerRow][innerCol] + ACached * BCached[innerCol];\n      }\n    }\n  }\n\n  workgroupBarrier();\n}\n\nfor (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n  for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n    mm_write(batch, globalRow + innerRow, globalCol + innerCol,\n        acc[innerRow][innerCol]);\n  }\n}\n`;return`\n  var<workgroup> mm_Asub : array<array<${r}, ${h}>, ${w}>;\n  var<workgroup> mm_Bsub : array<array<${r}, ${g}>, ${s}>;\n  const rowPerThread = ${e[1]};\n  const colPerThread = ${e[0]};\n  const tileInner = ${s};\n\n@compute @workgroup_size(${t[0]}, ${t[1]}, ${t[2]})\nfn main(@builtin(local_invocation_id) localId : vec3<u32>,\n        @builtin(global_invocation_id) globalId : vec3<u32>,\n        @builtin(workgroup_id) workgroupId : vec3<u32>) {\n    let batch = ${u?"0":"i32(globalId.z)"};\n    ${o?`let batchIndices = ${o.offsetToIndices("u32(batch)")};`:""}\n    let num_tiles = ${u?`${Math.ceil(c/s)}`:"(uniforms.dim_inner - 1) / tileInner + 1"};\n    var kStart = ${u?`i32(globalId.z) * ${c}`:"0"};\n\n    var acc : array<array<${r}, colPerThread>, rowPerThread>;\n\n    // Without this initialization strange values show up in acc.\n    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n        acc[innerRow][innerCol] = 0.0;\n      }\n    }\n    ${C}\n  }\n`},Ep=(e,t,r,o,n,s=!1)=>{let[u,c,a]=n,[f,g,h,w]=o,_=hr(u,a),v=hr(c,a),$=Be(o[0].type.tensor),C=()=>{let T=g.rank,E=f.rank,P=`var aIndices: ${g.type.indices};`;for(let z=T-2-1,H=E-1;z>=0;z--,H--)P+=`\naIndices[${z}] = ${E>1?`batchIndices[${H}]`:"batchIndices"};`;return _.forEach(z=>{P+=`\naIndices[${z}] = 0;`}),P+=`\naIndices[${T-2}] = u32(row);\n                   aIndices[${T-1}] = u32(colIn);`,P},x=()=>{let T=h.rank,E=f.rank,P=`var bIndices: ${h.type.indices};`;for(let z=T-2-1,H=E-1;z>=0;z--,H--)P+=`\nbIndices[${z}] = ${E>1?`batchIndices[${H}]`:"batchIndices"};`;return v.forEach(z=>{P+=`\nbIndices[${z}] = 0;`}),P+=`\nbIndices[${T-2}] = u32(row);\n                   bIndices[${T-1}] = u32(colIn);`,P};return`\n    fn mm_readA(batch: i32, row: i32, colIn: i32, batchIndices: ${f.type.indices}) -> ${nt(e,$)} {\n      var value = ${nt(e,$)}(0.0);\n      let col = colIn * ${e};\n      if(row < uniforms.dim_a_outer && col < uniforms.dim_inner)\n      {\n        ${C()}\n        value = ${g.getByIndices("aIndices")};\n      }\n      return value;\n    }\n\n    fn mm_readB(batch: i32, row: i32, colIn: i32, batchIndices: ${f.type.indices}) -> ${nt(e,$)} {\n      var value = ${nt(e,$)}(0.0);\n      let col = colIn * ${e};\n      if(row < uniforms.dim_inner && col < uniforms.dim_b_outer)\n      {\n        ${x()}\n        value = ${h.getByIndices("bIndices")};\n      }\n      return value;\n    }\n\n    fn mm_write(batch: i32, row: i32, colIn: i32, valueIn: ${nt(e,$)}) {\n      let col = colIn * ${e};\n      if (row < uniforms.dim_a_outer && col < uniforms.dim_b_outer) {\n        var value = valueIn;\n        let coords = vec3<i32>(batch, row, colIn);\n        ${t?`value = value + ${s?"bias[colIn]":`${nt(e,$)}(bias[row])`};`:""}\n        ${r}\n        ${w.setByIndices("vec3<u32>(coords)","value")}\n      }\n    }\n    `},lo=(e,t,r,o,n=!1)=>{let s=e[0].dims,u=e[1].dims,c=s.slice(0,-2),a=u.slice(0,-2),f=o?o.slice(0,-2):r.slice(0,-2),g=B.size(f),h=s[s.length-2],w=s[s.length-1],_=u[u.length-1],v=w%4===0&&_%4===0,$=h<=8?[4,1,1]:[4,4,1],C=[8,8,1],x=[Math.ceil(_/C[0]/$[0]),Math.ceil(h/C[1]/$[1]),Math.ceil(g/C[2]/$[2])],S=v?4:1,T=[...c,h,w/S],E=T.length,P=[...a,w,_/S],z=P.length,H=[g,h,_/S],K=[{type:6,data:h},{type:6,data:_},{type:6,data:w}];yt(t,K),K.push(...X(f,T,P));let re=["rank","rank"],q=e.length>2;q&&(K.push(...X(e[2].dims)),re.push("rank")),K.push(...X(H));let ce=Se=>{let Pe=f.length,U=Qn("batchDims",e[0].dataType,Pe,1),Q=Be(e[0].dataType),W=M("a",e[0].dataType,E,S),Ce=M("b",e[1].dataType,z,S),we=j("result",e[0].dataType,H.length,S),he=[W,Ce];if(q){let G=n?S:1;he.push(M("bias",e[2].dataType,e[2].dims.length,G))}let ne=[{name:"dim_a_outer",type:"i32"},{name:"dim_b_outer",type:"i32"},{name:"dim_inner",type:"i32"}];bt(t,ne);let be=Be(we.type.tensor),me=gt(t,we.type.value,be),Ke=Ep(S,q,me,[U,W,Ce,we],[c,a,f],n);return`\n  ${Se.registerUniforms(ne).registerInternalVariables(U).declareVariables(...he,we)}\n  ${Ke}\n  ${v?Gr($,C,Q,U):Hr($,C,Q,U)}\n                   `};return{name:"MatMul",shaderCache:{hint:`${$};${t.activation};${v};${n}`,inputDependencies:re},getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:x[0],y:x[1],z:x[2]},programUniforms:K}),getShaderSource:ce}}});var Op,lu,du=Z(()=>{"use strict";ve();Wt();Te();Gt();so();ta();Lr();Op=(e,t,r,o,n=!1,s,u=4,c=4,a=4,f="f32")=>{let g=q=>{switch(q){case 1:return"resData = x[xIndex];";case 3:return`resData = vec3<${f}>(x[xIndex], x[xIndex + 1], x[xIndex + 2]);`;case 4:return"resData = x[xIndex / 4];";default:throw new Error(`innerElementSize ${q} is not supported.`)}},h=q=>{switch(q){case 1:return"return w[row * i32(uniforms.w_shape[3]) + colIn];";case 4:return"return w[row * i32(uniforms.w_shape[3]) / 4 + colIn];";default:throw new Error(`innerElementSize ${q} is not supported.`)}},w=e?`\n    let coord = vec4<i32>(batch, xRow, xCol, xCh);\n    `:`\n    let coord = vec4<i32>(batch, xCh, xRow, xCol);\n    `,_=e?`\n    let coords = vec4<i32>(\n      batch,\n      row / outWidth,\n      row % outWidth,\n      col);\n    `:`\n    let coords = vec4<i32>(\n      batch,\n      row,\n      col / outWidth,\n      col % outWidth);\n    `,v=e?"i32(uniforms.x_shape[1])":"i32(uniforms.x_shape[2])",$=e?"i32(uniforms.x_shape[2])":"i32(uniforms.x_shape[3])",C=e?"row":"col",x=e?"col":"row",S=`\n    let inChannels = i32(uniforms.w_shape[2]);\n    let outWidth = ${e?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};\n    let outRow = ${C} / outWidth;\n    let outCol = ${C} % outWidth;\n\n    let WRow = ${x} / (i32(uniforms.w_shape[1]) * inChannels);\n    let WCol = ${x} / inChannels % i32(uniforms.w_shape[1]);\n    let xRow = outRow * uniforms.stride[0] + uniforms.dilation[0] * WRow - uniforms.pad[0];\n    let xCol = outCol * uniforms.stride[1] + uniforms.dilation[1] * WCol - uniforms.pad[1];\n    let xCh = ${x} % inChannels;\n    var resData = ${nt(u,f)}(0.0);\n    // The bounds checking is always needed since we use it to pad zero for\n    // the \'same\' padding type.\n    if (xRow >= 0 && xRow < ${v} && xCol >= 0 && xCol < ${$}) {\n      ${w}\n      let xIndex = getIndexFromCoords4D(coord, vec4<i32>(uniforms.x_shape));\n      ${g(u)}\n    }\n    return resData;`,T=e?t&&o?`\n    let col = colIn * ${u};\n    ${S}`:`\n    let col = colIn * ${u};\n    if (row < uniforms.dim_a_outer && col < uniforms.dim_inner) {\n      ${S}\n    }\n    return ${nt(u,f)}(0.0);`:o&&r?`\n    let col = colIn * ${u};\n    ${S}`:`\n    let col = colIn * ${u};\n    if (row < uniforms.dim_inner && col < uniforms.dim_b_outer) {\n      ${S}\n    }\n    return ${nt(u,f)}(0.0);`,E=`${h(c)}`,P=nt(a,f),z=e?nt(u,f):nt(c,f),H=e?nt(c,f):nt(u,f),K=gt(s,P,f);return`\n    fn mm_readA(batch: i32, row : i32, colIn : i32) -> ${z} {\n      ${e?T:E}\n    }\n\n    fn mm_readB(batch: i32, row : i32, colIn : i32) -> ${H} {\n      ${e?E:T}\n    }\n\n    fn mm_write(batch: i32, row : i32, colIn : i32, valueIn : ${P}) {\n      let col = colIn * ${a};\n      if (row < uniforms.dim_a_outer && col < uniforms.dim_b_outer)\n      {\n      var value = valueIn;\n      let outWidth = ${e?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};\n      ${_}\n      ${io(n)}\n      ${K}\n      setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);\n      }\n    }`},lu=(e,t,r,o,n,s,u,c)=>{let a=t.format==="NHWC",f=a?e[0].dims[3]:e[0].dims[1],g=r[0],h=a?r[2]:r[3],w=a?r[1]:r[2],_=a?r[3]:r[1],v=a&&(f%4===0||f%3===0)&&_%4===0,$=a?_:h*w,C=a?h*w:_,x=[8,8,1],S=o<=8?[4,1,1]:[4,4,1],T=[Math.ceil($/x[0]/S[0]),Math.ceil(C/x[1]/S[1]),Math.ceil(g/x[2]/S[2])];Ue("verbose",()=>`[conv2d_mm_webgpu] dispatch = ${T}`);let E=v?a&&f%4!==0?3:4:1,P=x[1]*S[1],z=x[0]*S[0],H=Math.max(x[0]*E,x[1]),K=o%P===0,re=n%z===0,q=s%H===0,ce=v?[E,4,4]:[1,1,1],Se=[{type:6,data:o},{type:6,data:n},{type:6,data:s},{type:6,data:[t.pads[0],t.pads[1]]},{type:6,data:t.strides},{type:6,data:t.dilations}];yt(t,Se),Se.push(...X(e[0].dims,e[1].dims));let Pe=["rank","rank"];u&&(Se.push(...X(e[2].dims)),Pe.push("rank")),Se.push(...X(r));let U=Q=>{let W=[{name:"dim_a_outer",type:"i32"},{name:"dim_b_outer",type:"i32"},{name:"dim_inner",type:"i32"},{name:"pad",type:"i32",length:2},{name:"stride",type:"i32",length:2},{name:"dilation",type:"i32",length:2}];bt(t,W);let Ce=v?4:1,we=Be(e[0].dataType),he=`\n      fn setOutputAtIndex(flatIndex : i32, value : ${v?`vec4<${we}>`:we}) {\n        result[flatIndex] = ${v?`vec4<${we}>`:we}(value);\n      }\n      fn setOutputAtCoords(d0 : i32, d1 : i32, d2 : i32, d3 : i32, value : ${v?`vec4<${we}>`:we}) {\n        let flatIndex = getOutputIndexFromCoords(vec4<i32>(d0, d1, d2, d3));\n        setOutputAtIndex(flatIndex ${v?"/ 4":""}, value);\n      }`,ne=M("x",e[0].dataType,e[0].dims.length,E===3?1:E),be=M("w",e[1].dataType,e[1].dims.length,Ce),me=[ne,be],Ke=j("result",e[0].dataType,r.length,Ce);if(u){let G=M("bias",e[2].dataType,e[2].dims.length,Ce);me.push(G),he+=`\n        fn getBiasByOutputCoords(coords : vec4<i32>) -> ${v?`vec4<${we}>`:we} {\n          return bias[coords.${a?"w":"y"}${v?"/ 4":""}];\n        }`}return`\n        ${uo("uniforms.result_strides")}\n        //struct Uniforms { xShape : vec4<i32>, wShape : vec4<i32>, outShape : vec4<i32>,\n        //  outShapeStrides: vec3<i32>, filterDims : vec2<i32>, pad : vec2<i32>, stride : vec2<i32>,\n        //  dilation : vec2<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32 };\n        ${Q.registerUniforms(W).declareVariables(...me,Ke)}\n        ${he}\n        ${Op(a,K,re,q,u,t,ce[0],ce[1],ce[2],we)}\n        ${v?Gr(S,x,we,void 0,!a,H):Hr(S,x,we,void 0,!a,H,!1,void 0,c)}`};return{name:"Conv2DMatMul",shaderCache:{hint:`${t.cacheKey};${E};${v};${K};${re};${q};${P};${z};${H}`,inputDependencies:Pe},getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:T[0],y:T[1],z:T[2]},programUniforms:Se}),getShaderSource:U}}});var ra,cu,pu=Z(()=>{"use strict";ve();Ee();Te();na();Gt();ra=(e,t,r)=>{let o=e.length>2,n=o?"value += b[output_channel];":"",s=e[0].dims,u=e[1].dims,c=u[0]/t.group,a=t.format==="NHWC",f=co(s,u,t.dilations,t.pads,t.strides,a),g=B.size(f),h=[{type:12,data:g},{type:12,data:t.dilations},{type:12,data:[t.strides[0],t.strides[1]]},{type:12,data:[t.pads[0],t.pads[1]]},{type:12,data:c}];yt(t,h),h.push(...X(s,u));let w=["rank","rank"];o&&(h.push(...X(e[2].dims)),w.push("rank")),h.push(...X(f));let _=v=>{let $=j("output",e[0].dataType,f.length),C=Be($.type.tensor),x=gt(t,$.type.value,C),S=M("x",e[0].dataType,s.length),T=M("w",e[1].dataType,u.length),E=[S,T];o&&E.push(M("b",e[2].dataType,e[2].dims.length));let P=[{name:"output_size",type:"u32"},{name:"dilations",type:"u32",length:t.dilations.length},{name:"strides",type:"u32",length:2},{name:"pads",type:"u32",length:2},{name:"output_channels_per_group",type:"u32"}];return bt(t,P),`\n  ${v.registerUniforms(P).declareVariables(...E,$)}\n\n  ${v.mainStart()}\n    ${v.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n\n    let outputIndices = ${$.offsetToIndices("global_idx")};\n    let batch: u32 = outputIndices[0];\n    let output_channel: u32 = outputIndices[${a?3:1}];\n    let xRCCorner: vec2<u32> = vec2<u32>(outputIndices[${a?1:2}], outputIndices[${a?2:3}]) * uniforms.strides - uniforms.pads;\n    let group_id: u32 = output_channel / uniforms.output_channels_per_group;\n\n    var value: ${$.type.value} = ${$.type.value}(0);\n    for (var wInChannel: u32 = 0u; wInChannel < uniforms.w_shape[1]; wInChannel++) {\n      let input_channel = group_id * uniforms.w_shape[1] + wInChannel;\n      for (var wHeight: u32 = 0u; wHeight < uniforms.w_shape[2]; wHeight++) {\n        let xHeight = xRCCorner.x + wHeight * uniforms.dilations[0];\n\n        if (xHeight < 0u || xHeight >= uniforms.x_shape[${a?1:2}]) {\n          continue;\n        }\n\n        for (var wWidth: u32 = 0u; wWidth < uniforms.w_shape[3]; wWidth++) {\n          let xWidth = xRCCorner.y + wWidth * uniforms.dilations[1];\n          if (xWidth < 0u || xWidth >= uniforms.x_shape[${a?2:3}]) {\n            continue;\n          }\n\n          let xVal = ${a?S.get("batch","xHeight","xWidth","input_channel"):S.get("batch","input_channel","xHeight","xWidth")};\n          let wVal = ${T.get("output_channel","wInChannel","wHeight","wWidth")};\n          value += xVal*wVal;\n        }\n      }\n    }\n    ${n}\n    ${x}\n    ${$.setByOffset("global_idx","value")}\n  }`};return{name:"GroupedConv",shaderCache:{hint:t.cacheKey,inputDependencies:w},getRunData:()=>({outputs:[{dims:r?r(f):f,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(g/64)},programUniforms:h}),getShaderSource:_}},cu=(e,t,r)=>{let o=e.length>2,n=Ve(r[3]),s=Ve(r[2]),u=B.size(r)/n/s,c=[e[0].dims[0],e[0].dims[1],e[0].dims[2],e[0].dims[3]/n],a=[e[1].dims[0],e[1].dims[1],e[1].dims[2],e[1].dims[3]/n],f=[r[0],r[1],r[2],r[3]/n],g=[{type:12,data:u},{type:6,data:[t.strides[0],t.strides[1]]},{type:6,data:[t.pads[0],t.pads[1]]}];yt(t,g),g.push(...X(c,a,f));let h=(s-1)*t.strides[1]+a[1],w=_=>{let v=j("output",e[0].dataType,f.length,n),$=Be(v.type.tensor),C=gt(t,v.type.value,$),x=M("x",e[0].dataType,c.length,n),S=M("w",e[1].dataType,a.length,n),T=[x,S];o&&T.push(M("b",e[2].dataType,e[2].dims,n));let E=o?"value += b[output_channel];":"",P=[{name:"output_size",type:"u32"},{name:"strides",type:"i32",length:2},{name:"pads",type:"i32",length:2}];return bt(t,P),`\n  ${_.registerUniforms(P).declareVariables(...T,v)}\n  ${_.mainStart()}\n    ${_.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n    let width0 = uniforms.output_shape[3];\n    let output_channel = global_idx % width0;\n    var index1 = global_idx / width0;\n    let width1 = uniforms.output_shape[2] / ${s}u;\n    let col = (index1 % width1) * ${s}u;\n    index1 = index1 / width1;\n    let row = index1 % uniforms.output_shape[1];\n    let batch = index1 / uniforms.output_shape[1];\n\n    let x_corner = vec2<i32>(i32(row), i32(col)) * uniforms.strides - uniforms.pads;\n\n    var x_vals: array<${x.type.value}, ${h}>;\n    var values: array<${v.type.value}, ${s}>;\n    let input_channel = output_channel;\n    // Use constant instead of uniform can give better performance for w\'s height/width.\n    for (var w_height: u32 = 0u; w_height < ${a[0]}; w_height++) {\n      let x_height = x_corner.x + i32(w_height);\n      if (x_height >= 0 && u32(x_height) < uniforms.x_shape[1]) {\n        for (var i = 0; i < ${h}; i++) {\n          let x_width = x_corner.y + i;\n          if (x_width >= 0 && u32(x_width) < uniforms.x_shape[2]) {\n            x_vals[i] = ${x.get("batch","u32(x_height)","u32(x_width)","input_channel")};\n          } else {\n            x_vals[i] = ${x.type.value}(0);\n          }\n        }\n        for (var w_width: u32 = 0u; w_width < ${a[1]}; w_width++) {\n          let w_val = ${S.get("w_height","w_width","0","output_channel")};\n          for (var i = 0u; i < ${s}u; i++) {\n            values[i] = fma(x_vals[i * u32(uniforms.strides[1]) + w_width], w_val, values[i]);\n          }\n        }\n      }\n    }\n\n    for (var i = 0u; i < ${s}u; i++) {\n      var value = values[i];\n      ${E}\n      ${C}\n      ${v.set("batch","row","col + i","output_channel","value")};\n    }\n  }`};return{name:"GroupedConv-Vectorize",shaderCache:{hint:`${t.cacheKey};${n};${s};${h};${a[0]};${a[1]}`,inputDependencies:o?["rank","rank","type"]:["rank","rank"]},getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(u/64)},programUniforms:g}),getShaderSource:w}}});var oa,kp,mu,aa=Z(()=>{"use strict";ve();Ee();Lr();Te();Gt();oa=(e,t,r,o,n=!1)=>{let s=e[0].dims,u=e[1].dims,c=s[s.length-2],a=u[u.length-1],f=s[s.length-1],g=Ve(a),h=Ve(f),w=Ve(c),_=B.size(r)/g/w,v=e.length>2,$=o?o.slice(0,-2):r.slice(0,-2),x=[B.size($),c,a],S=[{type:12,data:_},{type:12,data:c},{type:12,data:a},{type:12,data:f}];yt(t,S),S.push(...X($,s,u)),v&&S.push(...X(e[2].dims)),S.push(...X(x));let T=E=>{let P=Qn("batch_dims",e[0].dataType,$.length),z=M("a",e[0].dataType,s.length,h),H=M("b",e[1].dataType,u.length,g),K=j("output",e[0].dataType,x.length,g),re=Be(K.type.tensor),q=gt(t,K.type.value,re),ce=[z,H],Se="";if(v){let ne=n?g:1;ce.push(M("bias",e[2].dataType,e[2].dims.length,ne)),Se=`${n?`value += bias[col / ${ne}];`:`value += ${K.type.value}(bias[row + i]);`}`}let Pe=s.slice(0,-2),U=u.slice(0,-2),Q=hr(Pe,$),W=hr(U,$),Ce=[{name:"output_size",type:"u32"},{name:"M",type:"u32"},{name:"N",type:"u32"},{name:"K",type:"u32"}];bt(t,Ce);let we=(ne,be)=>{let me=ne.rank,Ke=ne.name;if(me===2)return`var ${Ke}_indices = ${ne.type.indices}(0u, 0u);`;let G=P.rank,ee=`var ${Ke}_indices: ${ne.type.indices};`;for(let _e=me-2-1,Xe=G-1;_e>=0;_e--,Xe--)ee+=`\n${Ke}_indices[${_e}] = ${G>1?`batch_indices[${Xe}]`:"batch_indices"};`;return be.forEach(_e=>{ee+=`\n${Ke}_indices[${_e}] = 0;`}),ee+=`${Ke}_indices[${me-2}] = 0u;\n                     ${Ke}_indices[${me-1}] = 0u;`,ee},he=()=>{let ne=`var a_data: ${z.type.value};`;for(let be=0;be<h;be++)ne+=`\n              let b_data${be} = b[(b_offset + (k + ${be}) * uniforms.N + col) / ${g}];`;for(let be=0;be<w;be++){ne+=`a_data = a[(a_offset + (row + ${be}) * uniforms.K + k) / ${h}];`;for(let me=0;me<h;me++)ne+=`\n            values[${be}] = fma(${H.type.value}(a_data${h===1?"":`[${me}]`}), b_data${me}, values[${be}]);\n`}return ne};return`\n  ${E.registerUniforms(Ce).registerInternalVariables(P).declareVariables(...ce,K)}\n  ${E.mainStart()}\n    ${E.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n    let col = (global_idx % (uniforms.N / ${g})) * ${g};\n    var index1 = global_idx / (uniforms.N / ${g});\n    let stride1 = uniforms.M / ${w};\n    let row = (index1 % stride1) * ${w};\n    let batch = index1 / stride1;\n\n    ${r.length===2?"":`let batch_indices = ${P.offsetToIndices("batch")};`}\n    ${we(z,Q)}\n    let a_offset = ${z.indicesToOffset("a_indices")};\n    ${we(H,W)}\n    let b_offset = ${H.indicesToOffset("b_indices")};\n    var values: array<${K.type.value}, ${w}>;\n    for (var k: u32 = 0u; k < uniforms.K; k = k + ${h}) {\n      ${he()}\n    }\n    for (var i = 0u; i < ${w}u; i++) {\n      var value = values[i];\n      ${Se}\n      ${q}\n      let cur_indices = ${K.type.indices}(batch, row + i, col);\n      let offset = ${K.indicesToOffset("cur_indices")};\n      ${K.setByOffset(`offset / ${g}`,"value")};\n    }\n  }\n  `};return{name:"MatMulNaive",shaderCache:{hint:`${t.activation};${g};${h};${w};${n}`,inputDependencies:v?["rank","rank","rank"]:["rank","rank"]},getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(_/64)},programUniforms:S}),getShaderSource:T}},kp=e=>{if(!e||e.length!==2)throw new Error("MatMul requires 2 inputs.");if(e[0].dims[e[0].dims.length-1]!==e[1].dims[e[1].dims.length-2])throw new Error("shared dimension does not match.")},mu=e=>{kp(e.inputs);let t=xt.calcShape(e.inputs[0].dims,e.inputs[1].dims,!0);if(!t)throw new Error("Can\'t use matmul on the given tensors");let r=t[t.length-1],o=e.inputs[0].dims[e.inputs[0].dims.length-1];r<8&&o<8?e.compute(oa(e.inputs,{activation:""},t)):e.compute(lo(e.inputs,{activation:""},t))}});var co,ia,Pp,fu,sa,Rp,Dp,ua,na=Z(()=>{"use strict";Ee();du();Lr();pu();Gt();aa();gr();co=(e,t,r,o,n,s)=>{let u=e[0],c=e.slice(s?1:2,s?3:4),a=c.length,f=t[0],h=t.slice(2).map((v,$)=>v+(v-1)*(r[$]-1)),_=c.map((v,$)=>v+o[$]+o[$+a]).map((v,$)=>Math.floor((v-h[$]+n[$])/n[$]));return _.splice(0,0,u),_.splice(s?3:1,0,f),_},ia=[2,3,1,0],Pp=(e,t)=>{if(!e||e.length!==2&&e.length!==3)throw new Error("Conv requires 2 or 3 inputs");if(e[0].dims.length!==4&&e[0].dims.length!==3)throw new Error("currently only support conv 1D and 2D");if(e[0].dims.length!==e[1].dims.length)throw new Error("filter does not have same dimension as input");let r=e[0].dims[t.format==="NHWC"?e[0].dims.length-1:1],o=e[1].dims[1]*t.group;if(r!==o)throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");if(e.length===3&&(e[2].dims.length!==1||e[1].dims[0]!==e[2].dims[0]))throw new Error("invalid bias");let n=e[0].dims.length-2;if(t.dilations.length!==n)throw new Error(`dilations should be ${n}D`);if(t.strides.length!==n)throw new Error(`strides should be ${n}D`);if(t.pads.length!==n*2)throw new Error(`pads should be ${n*2}D`);if(t.kernelShape.length!==0&&t.kernelShape.length!==e[1].dims.length-2)throw new Error("invalid kernel shape")},fu=(e,t)=>{let r=e.kernelShape.slice();for(let s=2;s<t[1].dims.length;++s)r[s-2]===0&&(r[s-2]=t[1].dims[s]);let o=e.pads.slice();er.adjustPadsBasedOnAutoPad(t[0].dims,e.strides,e.dilations,r,o,e.format==="NHWC",e.autoPad);let n=Object.assign({},e);return Object.assign(n,{kernelShape:r,pads:o}),n},sa=e=>{let t=ao(e),r=e.format,o=["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][e.auto_pad],n=e.dilations,s=e.group,u=e.kernel_shape,c=e.pads,a=e.strides,f=e.w_is_const();return{autoPad:o,format:r,dilations:n,group:s,kernelShape:u,pads:c,strides:a,wIsConst:f,...t,cacheKey:`${e.format};${t.activation};`}},Rp=(e,t,r)=>{let o=fu(r,t),n=r.format==="NHWC";if(r.group!==1){if(!e.adapterInfo.isArchitecture("ampere")&&n&&t[1].dims[0]===r.group&&t[1].dims[1]===1&&r.dilations[0]===1&&r.dilations[1]===1){let H=co(t[0].dims,t[1].dims,r.dilations,o.pads,r.strides,n),K=e.kernelCustomData.wT??e.compute(ft(t[1],ia),{inputs:[1],outputs:[r.wIsConst?-2:-1]})[0];r.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=K);let re=[t[0],K];t.length===3&&re.push(t[2]),e.compute(cu(re,o,H),{inputs:re})}else e.compute(ra(t,o));return}let s=t.length===3,u=t[0].dims[n?1:2],c=t[0].dims[n?2:3],a=t[0].dims[n?3:1],f=t[1].dims[2],g=t[1].dims[3],h=co(t[0].dims,t[1].dims,r.dilations,o.pads,r.strides,n),w=h[n?1:2],_=h[n?2:3],v=h[n?3:1],$=n&&f===u&&g===c&&r.pads[0]===0&&r.pads[1]===0;if($||f===1&&g===1&&r.dilations[0]===1&&r.dilations[1]===1&&r.strides[0]===1&&r.strides[1]===1&&r.pads[0]===0&&r.pads[1]===0){let z=h[0],H,K,re,q=[];if(n){let Pe=e.kernelCustomData.wT??e.compute(ft(t[1],ia),{inputs:[1],outputs:[r.wIsConst?-2:-1]})[0];if(r.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=Pe),$){let U=u*c*a;H=t[0].reshape([1,z,U]),K=Pe.reshape([1,U,v]),re=[1,z,v]}else H=t[0].reshape([z,u*c,a]),K=Pe.reshape([1,a,v]),re=[z,w*_,v];q.push(H),q.push(K)}else H=t[0].reshape([z,a,u*c]),K=t[1].reshape([1,v,a]),re=[z,v,w*_],q.push(K),q.push(H);s&&q.push(t[2]);let ce=re[2],Se=q[0].dims[q[0].dims.length-1];ce<8&&Se<8?e.compute(oa(q,o,h,re,n),{inputs:q}):e.compute(lo(q,o,h,re,n),{inputs:q});return}let C=!0,x=e.kernelCustomData.wT??e.compute(ft(t[1],ia),{inputs:[1],outputs:[r.wIsConst?-2:-1]})[0];r.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=x);let S=[t[0],x];s&&S.push(t[2]);let T=n?w*_:v,E=n?v:w*_,P=f*g*a;e.compute(lu(S,o,h,T,E,P,s,C),{inputs:S})},Dp=(e,t)=>{let r=t.format==="NHWC",o=[e.inputs[0].reshape(r?[e.inputs[0].dims[0],1,e.inputs[0].dims[1],e.inputs[0].dims[2]]:[e.inputs[0].dims[0],e.inputs[0].dims[1],1,e.inputs[0].dims[2]]),e.inputs[1].reshape([e.inputs[1].dims[0],e.inputs[1].dims[1],1,e.inputs[1].dims[2]])];e.inputs.length===3&&o.push(e.inputs[2]);let n=[0,t.pads[0],0,t.pads[1]],s=[1].concat(t.strides),u=[1].concat(t.dilations),c=[1].concat(t.kernelShape),a=fu({...t,pads:n,strides:s,dilations:u,kernelShape:c},o);e.compute(ra(o,a,f=>r?[f[0],f[2],f[3]]:[]))},ua=(e,t)=>{Pp(e.inputs,t),e.inputs[0].dims.length===3?Dp(e,t):Rp(e,e.inputs,t)}});var Bp,hu,gu=Z(()=>{"use strict";ve();Wt();Te();Gt();so();ta();Lr();Bp=(e,t=!1,r,o,n=4)=>{let s=x=>{switch(x){case 1:return"return w[getIndexFromCoords4D(coord, vec4<i32>(uniforms.w_shape))];";case 4:return`\n            let coord1 = vec4<i32>(coordX, coordY, col + 1, rowInner);\n            let coord2 = vec4<i32>(coordX, coordY, col + 2, rowInner);\n            let coord3 = vec4<i32>(coordX, coordY, col + 3, rowInner);\n            let v0 = w[getIndexFromCoords4D(coord, vec4<i32>(uniforms.w_shape))];\n            let v1 = w[getIndexFromCoords4D(coord1, vec4<i32>(uniforms.w_shape))];\n            let v2 = w[getIndexFromCoords4D(coord2, vec4<i32>(uniforms.w_shape))];\n            let v3 = w[getIndexFromCoords4D(coord3, vec4<i32>(uniforms.w_shape))];\n            return ${o}(v0, v1, v2, v3);\n            `;default:throw new Error(`innerElementSize ${x} is not supported.`)}},u=e?`\n      let coord = vec4<i32>(batch, iXR, iXC, xCh);\n      `:`\n      let coord = vec4<i32>(batch, xCh, iXR, iXC);\n      `,c=e?`\n    let coords = vec4<i32>(\n      batch,\n      row / outWidth,\n      row % outWidth,\n      col);\n    `:`\n    let coords = vec4<i32>(\n      batch,\n      row,\n      col / outWidth,\n      col % outWidth);\n    `,a=e?"i32(uniforms.x_shape[1])":"i32(uniforms.x_shape[2])",f=e?"i32(uniforms.x_shape[2])":"i32(uniforms.x_shape[3])",g=e?"row":"col",h=e?"col":"row",w=`\n      let inChannels = ${e?"i32(uniforms.x_shape[3])":"i32(uniforms.x_shape[1])"};\n      let outWidth = ${e?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};\n      let outRow = ${g} / outWidth;\n      let outCol = ${g} % outWidth;\n\n      let WRow = ${h} / (uniforms.filter_dims[1] * inChannels);\n      let WCol = ${h} / inChannels % uniforms.filter_dims[1];\n      let xR = f32(outRow - uniforms.pads[0] + uniforms.dilations[0] * WRow) / f32(uniforms.strides[0]);\n      let xC = f32(outCol - uniforms.pads[1] + uniforms.dilations[1] * WCol) / f32(uniforms.strides[1]);\n      if (xR < 0.0 || xR >= f32(${a}) || fract(xR) > 0.0) {\n        return ${o}(0.0);\n      }\n      if (xC < 0.0 || xC >= f32(${f}) || fract(xC) > 0.0) {\n        return ${o}(0.0);\n      }\n      let iXR = i32(xR);\n      let iXC = i32(xC);\n      let xCh = ${h} % inChannels;\n      ${u}\n      return x[getIndexFromCoords4D(coord, vec4<i32>(uniforms.x_shape))/${n}];`,_=e?`\n      let col = colIn * ${n};\n      if (row < uniforms.dim_a_outer && col < uniforms.dim_inner) {\n        ${w}\n      }\n      return ${o}(0.0);`:`\n      let col = colIn * ${n};\n      if (row < uniforms.dim_inner && col < uniforms.dim_b_outer) {\n        ${w}\n      }\n      return ${o}(0.0);`,v=`\n      let col = colIn * ${n};\n      let inChannels = ${e?"i32(uniforms.x_shape[3])":"i32(uniforms.x_shape[1])"};\n      let coordX = uniforms.filter_dims[0] - 1 - row / (uniforms.filter_dims[1] * inChannels);\n      let coordY = uniforms.filter_dims[1] - 1 - (row / inChannels) % uniforms.filter_dims[1];\n      if (${e?"row < uniforms.dim_inner && col < uniforms.dim_b_outer":"row < uniforms.dim_inner && col < uniforms.dim_a_outer"}  && coordX >= 0 && coordY >= 0) {\n        let rowInner = row % inChannels;\n        let coord = vec4<i32>(coordX, coordY, col, rowInner);\n        ${s(n)}\n      }\n      return ${o}(0.0);\n      `,$=gt(r,o);return`\n  fn mm_readA(batch: i32, row : i32, colIn : i32) -> ${o} {\n    ${e?_:v}\n  }\n\n  fn mm_readB(batch: i32, row : i32, colIn : i32) -> ${o} {\n    ${e?v:_}\n  }\n\n  fn mm_write(batch: i32, row : i32, colIn : i32, valueInput : ${o}) {\n    let col = colIn * ${n};\n    if (row < uniforms.dim_a_outer && col < uniforms.dim_b_outer) {\n      var value = valueInput;\n      let outWidth = ${e?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};\n      ${c}\n      ${io(t)}\n      ${$}\n      result[getIndexFromCoords4D(coords, vec4<i32>(uniforms.result_shape))/${n}] = value;\n    }\n  }`},hu=(e,t,r,o,n,s,u,c)=>{let a=t.format==="NHWC",f=a?e[0].dims[3]:e[0].dims[1],g=r[0],h=a?r[2]:r[3],w=a?r[1]:r[2],_=a?r[3]:r[1],v=a&&f%4===0&&f%3&&_%4===0,$=a?_:h*w,C=a?h*w:_,x=[8,8,1],S=o<=8?[4,1,1]:[4,4,1],T=[Math.ceil($/x[0]/S[0]),Math.ceil(C/x[1]/S[1]),Math.ceil(g/x[2]/S[2])];Ue("verbose",()=>`[conv_backprop_mm_webgpu] dispatch = ${T}`);let E=v?4:1,P=Math.max(x[0]*E,x[1]),z=v?4:1,H=[t.kernelShape[a?1:2],t.kernelShape[a?2:3]],K=[H[0]+(t.dilations[0]<=1?0:(H[0]-1)*(t.dilations[0]-1)),H[1]+(t.dilations[1]<=1?0:(H[1]-1)*(t.dilations[1]-1))],re=[K[0]-1-Math.floor((t.pads[0]+t.pads[2])/2),K[1]-1-Math.floor((t.pads[1]+t.pads[3])/2)],q=[{type:6,data:o},{type:6,data:n},{type:6,data:s},{type:6,data:t.strides},{type:6,data:t.dilations},{type:6,data:H},{type:6,data:re}];yt(t,q),q.push(...X(e[0].dims,e[1].dims));let ce=["rank","rank"];u&&(q.push(...X(e[2].dims)),ce.push("rank")),q.push(...X(r));let Se=Pe=>{let U=M("x",e[0].dataType,e[0].dims.length,z),Q=M("w",e[1].dataType,e[1].dims.length,1),W=j("result",e[0].dataType,r.length,z),Ce=[U,Q],we="";if(u){let be=M("bias",e[2].dataType,e[2].dims.length,z);Ce.push(be),we+=`\n          fn getBiasByOutputCoords(coords : vec4<i32>) -> ${be.type.value} {\n            return bias[coords.${a?"w":"y"}${v?"/ 4":""}];\n          }`}let he=[{name:"dim_a_outer",type:"i32"},{name:"dim_b_outer",type:"i32"},{name:"dim_inner",type:"i32"},{name:"strides",type:"i32",length:2},{name:"dilations",type:"i32",length:2},{name:"filter_dims",type:"i32",length:H.length},{name:"pads",type:"i32",length:re.length}];bt(t,he);let ne=Be(e[0].dataType,1);if(ne!=="f16"&&ne!=="f32")throw new Error(`elemType ${ne} is not supported.`);return`\n        ${uo("uniforms.result_strides")}\n        ${Pe.registerUniforms(he).declareVariables(...Ce,W)};\n        ${we}\n        ${Bp(a,u,t,U.type.value,E)}\n        ${v?Gr(S,x,ne,void 0,!a,P):Hr(S,x,ne,void 0,!a,P,!1,void 0,c)}`};return{name:"Conv2DTransposeMatMul",shaderCache:{hint:`${t.cacheKey};${S};${x};${v}`,inputDependencies:ce},getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:T[0],y:T[1],z:T[2]},programUniforms:q}),getShaderSource:Se}}});var Mp,la,yu=Z(()=>{"use strict";ve();Wt();Ee();Te();Mp=(e,t,r,o,n,s=!1,u,c,a=!1)=>{let f=a?1:2,g=a?2:3,h=a?3:1,w=s?2:1,_=`\n  fn setOutputAtIndex(flatIndex : u32, value : ${s?`vec4<${u}>`:u}) {\n    result[flatIndex] = ${s?`vec4<${u}>`:u}(value);\n  }`;o&&(_+=`\n    fn getBiasByOutputCoords(coords : vec4<u32>) -> ${s?`vec4<${u}>`:u} {\n      return bias[coords.${a?"w":"y"}${s?"/ 4":""}];\n    }`);let v=s?4:1,$=M("W",t[1].dataType,t[1].dims.length,v),C=M("Dy",t[0].dataType,t[0].dims.length,v),x=[C,$];o&&x.push(M("bias",t[2].dataType,[r[h]].length,v));let S=j("result",t[0].dataType,r.length,v),T=`{\n        let batch: u32 = ${n?"global_id.z":"workgroup_id.z"} / uniforms.result_shape[1];\n        let r = ${n?"global_id.z":"workgroup_id.z"} % uniforms.result_shape[1];\n        let c = ${n?"global_id.y":"workgroup_id.y"} * ${w};\n        let d1: u32 = ${n?"global_id.x":"workgroup_id.x"} * 4;\n\n        let dyCorner = vec2<i32>(i32(r), i32(c)) - vec2<i32>(uniforms.pads);\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        var dotProd: array<vec4<${u}>, ${w}>;\n        for (var i = 0; i < ${w}; i++) {\n          dotProd[i] = vec4<${u}>(0.0);\n        }\n        for (var wR: u32 = 0; wR < uniforms.filter_dims[0]; wR = wR + 1) {\n          var dyR = (${u}(dyCorner.x) + ${u}(wR)) / ${u}(uniforms.strides.x);\n          let wRPerm = uniforms.filter_dims[0] - 1 - wR;\n          if (dyR < 0.0 || dyR >= ${u}(uniforms.Dy_shape[1]) ||\n              fract(dyR) > 0.0 || wRPerm < 0) {\n            continue;\n          }\n          let idyR: u32 = u32(dyR);\n\n          for (var wC: u32 = 0; wC < uniforms.filter_dims[1]; wC = wC + 1) {\n            let dyC = (${u}(dyCorner.y) + ${u}(wC)) / ${u}(uniforms.strides.y);\n            let dyC2 = (${u}(dyCorner.y) + 1.0 + ${u}(wC)) / ${u}(uniforms.strides.y);\n            let wCPerm = uniforms.filter_dims[1] - 1 - wC;\n            if (wCPerm < 0) {\n              continue;\n            }\n            var bDyCVal = true;\n            var bDyCVal2 = true;\n            if (dyC < 0.0 || dyC >= ${u}(uniforms.Dy_shape[2]) ||\n                fract(dyC) > 0.0) {\n              bDyCVal = false;\n            }\n            if (dyC2 < 0.0 || dyC2 >= ${u}(uniforms.Dy_shape[2]) ||\n                fract(dyC2) > 0.0) {\n              bDyCVal2 = false;\n            }\n\n            let idyC: u32 = u32(dyC);\n            let idyC2: u32 = u32(dyC2);\n            if (bDyCVal && bDyCVal2) {\n              let d2Length = uniforms.Dy_shape[3];\n              for (var d2 :u32 = 0; d2 < d2Length; d2 = d2 + 4) {\n                let wValue0 = ${$.get("u32(wRPerm)","u32(wCPerm)","d1","d2")};\n                let wValue1 = ${$.get("u32(wRPerm)","u32(wCPerm)","d1 + 1","d2")};\n                let wValue2 = ${$.get("u32(wRPerm)","u32(wCPerm)","d1 + 2","d2")};\n                let wValue3 = ${$.get("u32(wRPerm)","u32(wCPerm)","d1 + 3","d2")};\n\n                var xValue = ${C.get("batch","idyR","idyC","d2")};\n                let tmpval = vec4<${u}>(dot(xValue, wValue0),\n                                      dot(xValue, wValue1),\n                                      dot(xValue, wValue2),\n                                      dot(xValue, wValue3));\n                dotProd[0] = dotProd[0] + tmpval;\n\n                xValue =  ${C.get("batch","idyR","idyC2","d2")};\n\n                dotProd[1] = dotProd[1] + vec4<${u}>(dot(xValue, wValue0),\n                                                    dot(xValue, wValue1),\n                                                    dot(xValue, wValue2),\n                                                    dot(xValue, wValue3));\n              }\n            } else if (bDyCVal) {\n              let d2Length = uniforms.Dy_shape[${h}];\n              for (var d2: u32 = 0; d2 < d2Length; d2 = d2 + 4) {\n                let wValue0 = ${$.get("u32(wRPerm)","u32(wCPerm)","d1","d2")};\n                let wValue1 = ${$.get("u32(wRPerm)","u32(wCPerm)","d1 + 1","d2")};\n                let wValue2 = ${$.get("u32(wRPerm)","u32(wCPerm)","d1 + 2","d2")};\n                let wValue3 = ${$.get("u32(wRPerm)","u32(wCPerm)","d1 + 3","d2")};\n\n                var xValue = ${C.get("batch","idyR","idyC","d2")};\n                let tmpval = vec4<${u}>(dot(xValue, wValue0),\n                                      dot(xValue, wValue1),\n                                      dot(xValue, wValue2),\n                                      dot(xValue, wValue3));\n                dotProd[0] = dotProd[0] + tmpval;\n              }\n            } else if (bDyCVal2) {\n              let d2Length = uniforms.Dy_shape[3];\n              for (var d2: u32 = 0; d2 < d2Length; d2 = d2 + 4) {\n                let wValue0 = ${$.get("u32(wRPerm)","u32(wCPerm)","d1","d2")};\n                let wValue1 = ${$.get("u32(wRPerm)","u32(wCPerm)","d1 + 1","d2")};\n                let wValue2 = ${$.get("u32(wRPerm)","u32(wCPerm)","d1 + 2","d2")};\n                let wValue3 = ${$.get("u32(wRPerm)","u32(wCPerm)","d1 + 3","d2")};\n\n                var xValue = ${C.get("batch","idyR","idyC2","d2")};\n                let tmpval = vec4<${u}>(dot(xValue, wValue0),\n                                      dot(xValue, wValue1),\n                                      dot(xValue, wValue2),\n                                      dot(xValue, wValue3));\n                dotProd[1] = dotProd[1] + tmpval;\n              }\n            }\n          }\n        }\n\n        for (var i: u32 = 0; i < ${w}; i = i + 1) {\n          let value = dotProd[i] + ${o?"bias[c+i]":`vec4<${u}>(0.0)`};\n          ${S.set("batch","r","c + i","d1","value")};\n        }\n      }`,E=`\n          let outputIndices = ${S.offsetToIndices("global_idx")};\n          let batch = ${S.indicesGet("outputIndices",0)};\n          let d1 = ${S.indicesGet("outputIndices",h)};\n          let r = ${S.indicesGet("outputIndices",f)};\n          let c = ${S.indicesGet("outputIndices",g)};\n          let dyCorner = vec2<i32>(i32(r), i32(c)) - uniforms.pads;\n          let dyRCorner = dyCorner.x;\n          let dyCCorner = dyCorner.y;\n          let groupId = d1 / uniforms.output_channels_per_group;\n          let wOutChannel = d1 - groupId * uniforms.output_channels_per_group;\n          // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n          // ? = to be determined. : = across all values in that axis.\n          var dotProd = ${u}(0.0);\n          for (var wR: u32 = 0; wR < uniforms.effective_filter_dims.x; wR = wR + 1) {\n            if (wR % uniforms.dilations.x != 0) {\n              continue;\n            }\n            let dyR = (${u}(dyRCorner) + ${u}(wR)) / ${u}(uniforms.strides[0]);\n            let wRPerm = uniforms.filter_dims.x - 1 - wR / uniforms.dilations.x;\n            if (dyR < 0.0 || dyR >= ${u}(uniforms.Dy_shape[${f}]) || fract(dyR) > 0.0 ||\n                wRPerm < 0) {\n              continue;\n            }\n            let idyR: u32 = u32(dyR);\n\n            for (var wC: u32 = 0; wC < uniforms.effective_filter_dims.y; wC = wC + 1) {\n              if (wC % uniforms.dilations.y != 0) {\n                continue;\n              }\n              let dyC = (${u}(dyCCorner) + ${u}(wC)) / ${u}(uniforms.strides.y);\n              let wCPerm = uniforms.filter_dims.y - 1 - wC / uniforms.dilations.y;\n              if (dyC < 0.0 || dyC >= ${u}(uniforms.Dy_shape[${g}]) ||\n                  fract(dyC) > 0.0 || wCPerm < 0) {\n                continue;\n              }\n              let idyC: u32 = u32(dyC);\n              var inputChannel = groupId * uniforms.input_channels_per_group;\n              for (var d2: u32 = 0; d2 < uniforms.input_channels_per_group; d2 = d2 + 1) {\n                let xValue = ${a?C.get("batch","idyR","idyC","inputChannel"):C.get("batch","inputChannel","idyR","idyC")};\n                let wValue = ${$.get("inputChannel","wOutChannel","u32(wRPerm)","u32(wCPerm)")};\n                dotProd = dotProd + xValue * wValue;\n                inputChannel = inputChannel + 1;\n              }\n            }\n          }\n          let value = dotProd + ${o?"bias[d1]":`${u}(0.0)`};\n          ${S.setByOffset("global_idx","value")};\n        `;return`\n  ${e.registerUniforms(c).declareVariables(...x,S)}\n  ${_}\n\n    ${e.mainStart()}\n    ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")};\n  ${s?T:E}}`},la=(e,t,r)=>{let o=e.length>2,n=t.outputShape,s=B.size(n),u=[Math.ceil(s/64),1,1];Ue("verbose",()=>`[conv2d_backprop_webgpu] dispatch = ${u}`);let c=t.format==="NHWC",a=["rank","rank"],f=[t.strides[0],t.strides[1]],g=[t.kernelShape[c?1:2],t.kernelShape[c?2:3]],h=[t.dilations[0],t.dilations[1]],w=[g[0]+(t.dilations[0]<=1?0:(t.kernelShape[c?1:2]-1)*(t.dilations[0]-1)),g[1]+(t.dilations[1]<=1?0:(t.kernelShape[c?2:3]-1)*(t.dilations[1]-1))],_=[w[0]-1-Math.floor((t.pads[0]+t.pads[2])/2),w[1]-1-Math.floor(t.pads[1]+t.pads[3])/2],v=!1,$=t.group,C=e[1].dims,x=C[0]/$,S=C[1],T=[{type:12,data:s},{type:12,data:f},{type:12,data:g},{type:12,data:h},{type:12,data:w},{type:6,data:_},{type:12,data:x},{type:12,data:S},...X(e[0].dims,e[1].dims)];o&&(T.push(...X(e[2].dims)),a.push("rank")),T.push(...X(n));let E=u[1]===1&&u[2]===1,P=z=>{let H=[{name:"output_size",type:"u32"},{name:"strides",type:"u32",length:f.length},{name:"filter_dims",type:"u32",length:g.length},{name:"dilations",type:"u32",length:g.length},{name:"effective_filter_dims",type:"u32",length:w.length},{name:"pads",type:"i32",length:_.length},{name:"input_channels_per_group",type:"u32"},{name:"output_channels_per_group",type:"u32"}],K=Be(e[0].dataType);return`${Mp(z,e,n,o,E,v,K,H,c)}`};return{name:"ConvTranspose2D",shaderCache:{hint:`${t.cacheKey};`,inputDependencies:a},getRunData:()=>({dispatchGroup:{x:u[0],y:u[1],z:u[2]},outputs:[{dims:r?r(n):n,dataType:e[0].dataType}],programUniforms:T}),getShaderSource:P}}});var zp,Up,Vp,bu,vu,Np,Wp,Gp,Hp,wu,_u=Z(()=>{"use strict";gu();yu();Gt();gr();zp=(e,t,r,o,n,s)=>(e-1)*t+r+(o-1)*n+1-s,Up=(e,t,r,o,n)=>{let s=Math.floor(e/2);t==="SAME_UPPER"?(r[o]=s,r[n]=e-s):t==="SAME_LOWER"&&(r[o]=e-s,r[n]=s)},Vp=(e,t,r,o,n,s,u,c,a,f)=>{let g=e.length-2,h=f.length===0;if(a.length===0)for(let v=0;v<g;++v)a.push(0);let w=e[0],_=t[c?3:1]*n;for(let v=0,$=e.length-g-(c?1:0);v<g;++v,++$){let C=e[$],x=h?C*u[v]:f[v],S=zp(C,u[v],s[v],t[$],r[v],x);Up(S,o,s,v,v+g),h&&f.push(u[v]*(C-1)+a[v]+(t[$]-1)*r[v]+1-s[v]-s[v+g])}f.splice(0,0,w),f.splice(c?3:1,0,_)},bu=(e,t)=>{let r=e.kernelShape.slice();if(e.kernelShape.length===0||e.kernelShape.reduce((h,w)=>h*w,1)===0){r.length=0;for(let h=2;h<t[1].dims.length;++h)r.push(t[1].dims[h])}let o=e.format==="NHWC";r.splice(0,0,t[1].dims[0]),r.splice(o?3:1,0,t[1].dims[1]);let n=e.pads.slice(),s=e.outputShape.slice(),u=e.outputPadding.slice(),c=t[0].dims,a=e.dilations.slice();if(a.reduce((h,w)=>h+w,0)===0){let h=t[0].dims.length-2;a=new Array(h).fill(1)}let f=e.strides.slice();if(f.reduce((h,w)=>h+w,0)===0){let h=t[0].dims.length-2;f=new Array(h).fill(1)}Vp(c,r,a,e.autoPad,e.group,n,f,o,u,s);let g=Object.assign({},e);return Object.assign(g,{kernelShape:r,pads:n,outputPadding:u,outputShape:s,dilations:a,strides:f}),g},vu=e=>{let t=ao(e),r=e.format,o=["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][typeof e.autoPad>"u"?0:e.autoPad],n=e.dilations,s=e.group,u=e.kernelShape,c=e.pads,a=e.strides,f=e.wIsConst(),g=e.outputPadding,h=e.outputShape;return{autoPad:o,format:r,dilations:n,group:s,kernelShape:u,outputPadding:g,outputShape:h,pads:c,strides:a,wIsConst:f,...t,cacheKey:`${e.format};${t.activation};`}},Np=(e,t)=>{if(!e||e.length!==2&&e.length!==3)throw new Error("Conv requires 2 or 3 inputs");if(e[0].dims.length!==4&&e[0].dims.length!==3)throw new Error("currently only support 2-dimensional conv");if(e[0].dims.length!==e[1].dims.length)throw new Error("filter does not have same dimension as input");let r=e[0].dims[t.format==="NHWC"?e[0].dims.length-1:1],o=e[1].dims[0];if(r!==o)throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");let n=e[1].dims[1]*t.group;if(e.length===3&&(e[2].dims.length!==1||e[2].dims[0]!==n))throw new Error("invalid bias");let s=e[0].dims.length-2;if(t.dilations.reduce((g,h)=>g+h,0)>0&&t.dilations.length!==s)throw new Error(`dilations should be ${s}D`);if(t.strides.reduce((g,h)=>g+h,0)>0&&t.strides.length!==s)throw new Error(`strides should be ${s}D`);if(t.pads.reduce((g,h)=>g+h,0)>0&&t.pads.length!==s*2)throw new Error(`pads should be ${s*2}D`);if(t.outputPadding.length!==s&&t.outputPadding.length!==0)throw new Error(`output_padding should be ${s}D`);if(t.kernelShape.reduce((g,h)=>g+h,0)>0&&t.kernelShape.length!==0&&t.kernelShape.length!==e[1].dims.length-2)throw new Error("invalid kernel shape");if(t.outputShape.length!==0&&t.outputShape.length!==e[0].dims.length-2)throw new Error("invalid output shape")},Wp=[2,3,1,0],Gp=(e,t,r)=>{let o=bu(r,t),n=r.format==="NHWC",s=o.outputShape,u=s[n?3:1],c=t[0].dims[n?3:1];if(o.group!==1||u===1&&c===1){e.compute(la(t,o));return}let a=s[n?1:2],f=s[n?2:3],g=t[1].dims[2],h=t[1].dims[3],w=n?a*f:u,_=n?u:a*f,v=g*h*c,$=!0,C=e.kernelCustomData.wT??e.compute(ft(t[1],Wp),{inputs:[1],outputs:[r.wIsConst?-2:-1]})[0];r.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=C);let x=[t[0],C],S=t.length===3;S&&(!n&&t[2].dims.length===1?x.push(t[2].reshape([t[2].dims[0],1,1])):x.push(t[2])),e.compute(hu(x,o,s,w,_,v,S,$),{inputs:x})},Hp=(e,t)=>{let r=t.format==="NHWC",o=[e.inputs[0].reshape(r?[e.inputs[0].dims[0],1,e.inputs[0].dims[1],e.inputs[0].dims[2]]:[e.inputs[0].dims[0],e.inputs[0].dims[1],1,e.inputs[0].dims[2]]),e.inputs[1].reshape([e.inputs[1].dims[0],e.inputs[1].dims[1],1,e.inputs[1].dims[2]])];e.inputs.length===3&&o.push(e.inputs[2]);let n=t.kernelShape;(n.length===0||n[0]===0)&&(n=[e.inputs[1].dims[2]]);let s=t.dilations;(s.length===0||s[0]===0)&&(s=[1]);let u=t.strides;(u.length===0||u[0]===0)&&(u=[1]);let c=t.pads;c.length===0&&(c=[0,0]),c=[0,c[0],0,c[1]],u=[1].concat(u),s=[1].concat(s),n=[1].concat(n);let a=bu({...t,pads:c,strides:u,dilations:s,kernelShape:n},o);e.compute(la(o,a,f=>r?[f[0],f[2],f[3]]:[f[0],f[1],f[3]]))},wu=(e,t)=>{Np(e.inputs,t),e.inputs[0].dims.length===3?Hp(e,t):Gp(e,e.inputs,t)}});var Lp,$u,Su,xu=Z(()=>{"use strict";ve();Ee();Ze();Te();Lp=(e,t,r,o)=>{let n=B.size(t),s=t.length,u=M("input",e,s),c=j("output",e,s),a=r.dataType===6?r.getInt32Array()[0]:Number(r.getBigInt64Array()[0]),f=B.normalizeAxis(a,s),g=h=>{let w=` i32(${u.indicesGet("inputIndices","uniforms.axis")}) `,_=fe("uniforms.input_shape","uniforms.axis",s),v=o.reverse?w+(o.exclusive?" + 1":""):"0",$=o.reverse?_:w+(o.exclusive?"":" + 1");return`\n                ${h.registerUniform("outputSize","u32").registerUniform("axis","u32").declareVariables(u,c)}\n                ${h.mainStart()}\n                  ${h.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n                  var inputIndices = ${c.offsetToIndices("global_idx")};\n                  var sum = ${c.type.value}(0);\n                  let first : i32 = ${v};\n                  let last : i32 = ${$};\n                  for (var i : i32 = first; i < last; i++) {\n                    ${u.indicesSet("inputIndices","uniforms.axis","u32(i)")};\n                    sum = sum + ${u.getByIndices("inputIndices")};\n                  }\n                  ${c.setByOffset("global_idx","sum")};\n                }`};return{name:"CumSum",shaderCache:{hint:o.cacheKey,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:t,dataType:e}],dispatchGroup:{x:Math.ceil(n/64)},programUniforms:[{type:12,data:n},{type:6,data:f},...X(t,t)]}),getShaderSource:g}},$u=(e,t)=>{let r=e.inputs[0].dims,o=e.inputs[0].dataType,n=e.inputs[1];e.compute(Lp(o,r,n,t),{inputs:[0]})},Su=e=>{let t=e.exclusive===1,r=e.reverse===1;return Ae({exclusive:t,reverse:r})}});var da,po,Cu,Fp,jp,ca,pa,Au,Kp,Iu,Tu,Eu=Z(()=>{"use strict";ve();Ee();Ze();Te();da="[a-zA-Z]|\\\\.\\\\.\\\\.",po="("+da+")+",Cu="^"+po+"$",Fp="("+po+",)*"+po,jp="^"+Fp+"$",ca=class{constructor(t=-1){this.symbolToIndices=new Map,this.inputIndex=t}addSymbol(t,r){let o=this.symbolToIndices.get(t);o===void 0?o=[r]:o.push(r),this.symbolToIndices.set(t,o)}},pa=class{constructor(t,r){this.equation=r;this.hasEllipsis=!1,this.symbolToInfo=new Map,this.lhs=new Array,this.outputDims=[];let[o,n]=r.includes("->")?r.split("->",2):[r,""];if(!o.match(RegExp(jp)))throw new Error("Invalid LHS term");if(o.split(",").forEach((c,a)=>{let f=t[a].dims.slice();if(!c.match(RegExp(Cu)))throw new Error("Invalid LHS term");let g=this.processTerm(c,!0,f,a);this.lhs.push(g)}),n==="")n+=[...this.symbolToInfo.entries()].filter(([c,a])=>a.count===1||c==="...").map(([c])=>c).join("");else if(!n.match(RegExp(po)))throw new Error("Invalid RHS");n.match(RegExp(da,"g"))?.forEach(c=>{if(c==="...")this.outputDims=this.outputDims.concat(this.ellipsisDims);else{let a=this.symbolToInfo.get(c);if(a===void 0)throw new Error("Invalid RHS symbol");this.outputDims.push(a.dimValue)}}),this.rhs=this.processTerm(n,!1,this.outputDims)}addSymbol(t,r,o){let n=this.symbolToInfo.get(t);if(n!==void 0){if(n.dimValue!==r&&n.count!==1)throw new Error("Dimension mismatch");n.count++,n.inputIndices.push(o)}else n={count:1,dimValue:r,inputIndices:[o]};this.symbolToInfo.set(t,n)}processTerm(t,r,o,n=-1){let s=o.length,u=!1,c=[],a=0;if(!t.match(RegExp(Cu))&&!r&&t!=="")throw new Error("Invalid LHS term");let f=t.match(RegExp(da,"g")),g=new ca(n);return f?.forEach((h,w)=>{if(h==="..."){if(u)throw new Error("Only one ellipsis is allowed per input term");u=!0;let _=s-f.length+1;if(_<0)throw new Error("Ellipsis out of bounds");if(c=o.slice(a,a+_),this.hasEllipsis){if(this.ellipsisDims.length!==c.length||this.ellipsisDims.toString()!==c.toString())throw new Error("Ellipsis dimensions mismatch")}else if(r)this.hasEllipsis=!0,this.ellipsisDims=c;else throw new Error("Ellipsis must be specified in the LHS");for(let v=0;v<c.length;v++){let $=String.fromCharCode("0".charCodeAt(0)+v);g.addSymbol($,w+v),this.addSymbol($,o[a++],n)}}else g.addSymbol(h,w+(this.hasEllipsis?this.ellipsisDims.length-1:0)),this.addSymbol(h,o[a++],n)}),g}},Au=e=>e+"_max",Kp=(e,t,r,o)=>{let s=e.map(g=>g.length).map((g,h)=>M(`input${h}`,t,g)),u=B.size(o),c=j("output",t,o.length),a=[...r.symbolToInfo.keys()].filter(g=>!r.rhs.symbolToIndices.has(g)),f=g=>{let h=[],w="var prod = 1.0;",_="var sum = 0.0;",v="sum += prod;",$=[],C=[],x=[],S=[],T=r.symbolToInfo.size===r.rhs.symbolToIndices.size;r.symbolToInfo.forEach((P,z)=>{if(r.rhs.symbolToIndices.has(z)){let H=r.rhs.symbolToIndices.get(z)?.[0];H!==void 0&&r.lhs.forEach((K,re)=>{if(P.inputIndices.includes(re)){let q=K.symbolToIndices.get(z);if(q===void 0)throw new Error("Invalid symbol error");q.forEach(ce=>{h.push(`${s[re].indicesSet(`input${re}Indices`,ce,c.indicesGet("outputIndices",H))}`)})}})}else r.lhs.forEach((H,K)=>{if(P.inputIndices.includes(K)){let re=H.symbolToIndices.get(z);if(re===void 0)throw new Error("Invalid symbol error");re.forEach(q=>{$.push(`${s[K].indicesSet(`input${K}Indices`,q,`${z}`)}`)}),S.push(`prod *= ${s[K].getByIndices(`input${K}Indices`)};`)}}),C.push(`for(var ${z}: u32 = 0; ${z} < uniforms.${Au(z)}; ${z}++) {`),x.push("}")});let E=T?[...h,`let sum = ${s.map((P,z)=>P.getByIndices(`input${z}Indices`)).join(" * ")};`]:[...h,_,...C,...$,w,...S,v,...x];return`\n            ${g.registerUniforms(a.map(P=>({name:`${Au(P)}`,type:"u32"}))).registerUniform("outputSize","u32").declareVariables(...s,c)}\n\n            ${g.mainStart()}\n            ${g.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n            var outputIndices = ${c.offsetToIndices("global_idx")};\n            ${s.map((P,z)=>`var input${z}Indices: ${s[z].type.indices};`).join(`\n`)}\n            ${E.join(`\n`)};\n            ${c.setByOffset("global_idx","sum")};\n          }`};return{name:"Einsum",shaderCache:{hint:r.equation,inputDependencies:e.map(()=>"rank")},getRunData:()=>{let g=a.filter(w=>r.symbolToInfo.has(w)).map(w=>({type:12,data:r.symbolToInfo.get(w)?.dimValue||0}));g.push({type:12,data:u});let h=e.map((w,_)=>[...X(w)]).reduce((w,_)=>w.concat(_),g);return h.push(...X(o)),{outputs:[{dims:o,dataType:t}],dispatchGroup:{x:Math.ceil(u/64)},programUniforms:h}},getShaderSource:f}},Iu=(e,t)=>{let r=new pa(e.inputs,t.equation),o=r.outputDims,n=e.inputs.map((s,u)=>s.dims);e.compute(Kp(n,e.inputs[0].dataType,r,o))},Tu=e=>{let t=e.equation.replace(/\\s+/g,"");return Ae({equation:t})}});var qp,Ou,Yp,Zp,ku,Pu=Z(()=>{"use strict";ve();Ee();Te();qp=e=>{if(!e||e.length!==2)throw new Error("Expand requires 2 input.");let t=e[0].dims,r=Array.from(e[1].getBigInt64Array(),Number),o=r.length<t.length?0:r.length-t.length,n=t.length<r.length?0:t.length-r.length;for(;o<r.length&&n<t.length;++o,++n)if(r[o]!==t[n]&&r[o]!==1&&t[n]!==1)throw new Error("Expand requires shape to be broadcastable to input")},Ou=(e,t)=>{let r=e.length-t.length,o=[];for(let n=0;n<r;++n)o.push(e[n]);for(let n=0;n<t.length;++n)o.push(t[n]===1?e[n+r]:t[n]);return o},Yp=(e,t)=>e.length>t.length?Ou(e,t):Ou(t,e),Zp=e=>{let t=e[0].dims,r=Array.from(e[1].getBigInt64Array(),Number),o=Yp(t,r),n=e[0].dataType,s=n===9?4:1,u=Math.ceil(B.size(o)/s),c=f=>{let g=M("input",n,t.length,s),h=j("output",n,o.length,s),w;if(n===9){let _=(v,$,C="")=>`\n          let outputIndices${$} = ${h.offsetToIndices(`outputOffset + ${$}u`)};\n          let offset${$} = ${g.broadcastedIndicesToOffset(`outputIndices${$}`,h)};\n          let index${$} = offset${$} / 4u;\n          let component${$} = offset${$} % 4u;\n          ${v}[${$}] = ${C}(${g.getByOffset(`index${$}`)}[component${$}]);\n        `;w=`\n        let outputOffset = global_idx * ${s};\n        var data = vec4<u32>(0);\n        ${_("data",0,"u32")}\n        ${_("data",1,"u32")}\n        ${_("data",2,"u32")}\n        ${_("data",3,"u32")}\n        ${h.setByOffset("global_idx","data")}\n      }`}else w=`\n        let outputIndices = ${h.offsetToIndices("global_idx")};\n        let inputOffset = ${g.broadcastedIndicesToOffset("outputIndices",h)};\n        ${h.setByOffset("global_idx",g.getByOffset("inputOffset"))}\n      }`;return`\n    ${f.registerUniform("vec_size","u32").declareVariables(g,h)}\n    ${f.mainStart()}\n    ${f.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}\n    ${w}`},a=[{type:12,data:u},...X(t,o)];return{name:"Expand",shaderCache:{hint:`${o.length}`,inputDependencies:["rank"]},getShaderSource:c,getRunData:()=>({outputs:[{dims:o,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(u/64)},programUniforms:a})}},ku=e=>{qp(e.inputs),e.compute(Zp(e.inputs),{inputs:[0]})}});var Xp,Ru,Du=Z(()=>{"use strict";ve();Ee();Te();oo();Xp=e=>{let t=e[0].dataType,r=B.size(e[0].dims),o=B.size(e[1].dims),n=o%4===0,s=u=>{let c=M("x",t,[1],4),a=M("bias",t,[1],4),f=j("y",t,[1],4),g=[{name:"output_vec_size",type:"u32"},{name:"bias_size",type:"u32"}],h=_=>`\n      let bias${_}_offset: u32 = (global_idx * 4 + ${_}) % uniforms.bias_size;\n      let bias${_} = ${a.getByOffset(`bias${_}_offset / 4`)}[bias${_}_offset % 4];`,w=n?`\n      let bias = ${a.getByOffset("global_idx % (uniforms.bias_size / 4)")};`:`${h(0)}${h(1)}${h(2)}${h(3)}\n      let bias = ${c.type.value}(bias0, bias1, bias2, bias3);`;return`${u.registerUniforms(g).declareVariables(c,a,f)}\n\n    ${Jo(st(t))}\n\n    ${u.mainStart(tr)}\n      ${u.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_vec_size")}\n\n      let x = ${c.getByOffset("global_idx")};\n      ${w}\n      let x_in = x + bias;\n      ${f.setByOffset("global_idx",ea("x_in"))}\n    }`};return{name:"FastGeluWithBias",shaderCache:{hint:`${n}`,inputDependencies:["type","type"]},getShaderSource:s,getRunData:u=>({outputs:[{dims:u[0].dims,dataType:u[0].dataType}],programUniforms:[{type:12,data:Math.ceil(r/4)},{type:12,data:o}],dispatchGroup:{x:Math.ceil(r/tr/4)}})}},Ru=e=>{e.inputs.length<2||B.size(e.inputs[1].dims)===0?Gs(e):e.compute(Xp(e.inputs))}});var Qp,Jp,Bu,Mu,zu=Z(()=>{"use strict";ve();Ee();Ze();Te();Qp=e=>{if(!e||e.length!==2)throw new Error("Gather requires 2 inputs.")},Jp=(e,t)=>{let r=e[0].dims,o=e[1].dims,n=r.length,s=B.normalizeAxis(t.axis,n),u=r.slice(0);u.splice(s,1,...o);let c=r[s],a=e[0].dataType===9?4:1,f=Math.ceil(B.size(u)/a),g=[{type:12,data:f},{type:6,data:c},{type:12,data:s},...X(e[0].dims,e[1].dims,u)],h=w=>{let _=M("data",e[0].dataType,e[0].dims.length,a),v=M("inputIndices",e[1].dataType,e[1].dims.length),$=j("output",e[0].dataType,u.length,a),C=S=>{let T=o.length,E=`var indicesIndices${S}  = ${v.type.indices}(0);`;for(let P=0;P<T;P++)E+=`${T>1?`indicesIndices${S}[${P}]`:`indicesIndices${S}`} = ${u.length>1?`outputIndices${S}[uniforms.axis + ${P}]`:`outputIndices${S}`};`;E+=`\n          var idx${S} = ${v.getByIndices(`indicesIndices${S}`)};\n          if (idx${S} < 0) {\n            idx${S} = idx${S} + uniforms.axisDimLimit;\n          }\n          var dataIndices${S} : ${_.type.indices};\n        `;for(let P=0,z=0;P<n;P++)P===s?(E+=`${n>1?`dataIndices${S}[${P}]`:`dataIndices${S}`} = u32(idx${S});`,z+=T):(E+=`${n>1?`dataIndices${S}[${P}]`:`dataIndices${S}`} = ${u.length>1?`outputIndices${S}[${z}]`:`outputIndices${S}`};`,z++);return E},x;if(e[0].dataType===9){let S=(T,E,P="")=>`\n          let outputIndices${E} = ${$.offsetToIndices(`outputOffset + ${E}u`)};\n          ${C(E)};\n          let offset${E} = ${_.indicesToOffset(`dataIndices${E}`)};\n          let index${E} = offset${E} / 4u;\n          let component${E} = offset${E} % 4u;\n          ${T}[${E}] = ${P}(${_.getByOffset(`index${E}`)}[component${E}]);\n        `;x=`\n        let outputOffset = global_idx * ${a};\n        var value = vec4<u32>(0);\n        ${S("value",0,"u32")}\n        ${S("value",1,"u32")}\n        ${S("value",2,"u32")}\n        ${S("value",3,"u32")}\n        ${$.setByOffset("global_idx","value")}\n      `}else x=`\n      let outputIndices = ${$.offsetToIndices("global_idx")};\n      ${C("")};\n      let value = ${_.getByIndices("dataIndices")};\n      ${$.setByOffset("global_idx","value")};\n      `;return`\n      ${w.registerUniform("outputSize","u32").registerUniform("axisDimLimit","i32").registerUniform("axis","u32").declareVariables(_,v,$)}\n      ${w.mainStart()}\n        ${w.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n        ${x}\n      }`};return{name:"Gather",shaderCache:{hint:t.cacheKey,inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:u,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(f/64)},programUniforms:g}),getShaderSource:h}},Bu=e=>Ae({axis:e.axis}),Mu=(e,t)=>{let r=e.inputs;Qp(r),e.compute(Jp(e.inputs,t))}});var em,tm,Uu,Vu,Nu=Z(()=>{"use strict";ve();Ee();Ze();Te();em=e=>{if(!e||e.length!==2)throw new Error("GatherElements requires 2 inputs.");if(e[0].dims.length<1)throw new Error("GatherElements requires that the data input be rank >= 1.");if(e[0].dims.length!==e[1].dims.length)throw new Error(`GatherElements requires that the data input and\n                     indices input tensors be of same rank.`)},tm=(e,t)=>{let r=e[0].dims,o=e[0].dataType,n=r.length,s=e[1].dims,u=e[1].dataType,c=B.normalizeAxis(t.axis,n),a=r[c],f=s.slice(0),g=B.size(f),h=M("input",o,n),w=M("indicesInput",u,s.length),_=j("output",o,f.length),v=[{type:12,data:g},{type:6,data:a},{type:12,data:c}];return v.push(...X(r,s,f)),{name:"GatherElements",shaderCache:{inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:f,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(g/64)},programUniforms:v}),getShaderSource:x=>`\n      ${x.registerUniform("outputSize","u32").registerUniform("axisDimLimit","i32").registerUniform("axis","u32").declareVariables(h,w,_)}\n      ${x.mainStart()}\n      ${x.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n\n      let outputIndices = ${_.offsetToIndices("global_idx")};\n\n      var idx = ${w.getByOffset("global_idx")};\n      if (idx < 0) {\n        idx = idx + uniforms.axisDimLimit;\n      }\n      var inputIndices = ${h.type.indices}(outputIndices);\n      ${h.indicesSet("inputIndices","uniforms.axis","u32(idx)")};\n      let value = ${h.getByIndices("inputIndices")};\n\n      ${_.setByOffset("global_idx","value")};\n  }`}},Uu=e=>Ae({axis:e.axis}),Vu=(e,t)=>{let r=e.inputs;em(r),e.compute(tm(e.inputs,t))}});var rm,nm,Wu,Gu,Hu=Z(()=>{"use strict";ve();Ee();Te();rm=e=>{if(!e)throw new Error("Input is missing");if(e.length<2||e.length>3)throw new Error("Invaid input number.");if(e.length===3&&e[2].dims.length>2)throw new Error("Invalid input shape of C");if(e[0].dataType!==e[1].dataType||e.length===3&&e[0].dataType!==e[2].dataType)throw new Error("Input types are mismatched")},nm=(e,t)=>{let r=e[0].dims.slice(),o=e[1].dims.slice(),[n,s,u]=Yn.getShapeOfGemmResult(r,t.transA,o,t.transB,e.length===3?e[2].dims:void 0),c=[n,s];if(!c)throw new Error("Can\'t use gemm on the given tensors");let a=B.size(c),f=[{type:12,data:a},{type:12,data:n},{type:12,data:s},{type:12,data:u},{type:1,data:t.alpha},{type:1,data:t.beta}],g=["type","type"];e.length===3&&(f.push(...X(e[2].dims)),g.push("rank")),f.push(...X(c));let h=w=>{let _="";t.transA&&t.transB?_="value += a[k * uniforms.M + m] * b[n * uniforms.K + k];":t.transA&&!t.transB?_="value += a[k * uniforms.M + m] * b[k * uniforms.N + n];":!t.transA&&t.transB?_="value += a[m * uniforms.K + k] * b[n * uniforms.K + k];":!t.transA&&!t.transB&&(_="value += a[m * uniforms.K + k] * b[k * uniforms.N + n];");let v=t.alpha===1?"":"value *= uniforms.alpha;",$=M("a",e[0].dataType,e[0].dims),C=M("b",e[1].dataType,e[1].dims),x=$.type.value,S=null,T=[$,C];e.length===3&&(S=M("c",e[2].dataType,e[2].dims.length),T.push(S));let E=j("output",e[0].dataType,c.length);T.push(E);let P=[{name:"output_size",type:"u32"},{name:"M",type:"u32"},{name:"N",type:"u32"},{name:"K",type:"u32"},{name:"alpha",type:"f32"},{name:"beta",type:"f32"}];return`\n  ${w.registerUniforms(P).declareVariables(...T)}\n\n  ${w.mainStart()}\n    ${w.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n\n    let m = global_idx / uniforms.N;\n    let n = global_idx % uniforms.N;\n\n    var value = ${x}(0);\n    for (var k: u32 = 0u; k < uniforms.K; k++) {\n      ${_}\n    }\n\n    ${v}\n    ${(()=>S!=null?`let cOffset = ${S.broadcastedIndicesToOffset("vec2(m, n)",E)}; value += ${x}(uniforms.beta) * ${S.getByOffset("cOffset")};`:"")()}\n    output[global_idx] = value;\n  }`};return{name:"Gemm",shaderCache:{hint:`${t.cacheKey}`,inputDependencies:g},getRunData:()=>({outputs:[{dims:c,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(a/64)},programUniforms:f}),getShaderSource:h}},Wu=e=>{let t=e.transA,r=e.transB,o=e.alpha,n=e.beta;return{transA:t,transB:r,alpha:o,beta:n,cacheKey:`${e.transA};${e.transB};${e.alpha===1}`}},Gu=(e,t)=>{rm(e.inputs),e.compute(nm(e.inputs,t))}});var om,am,im,Lu,Fu=Z(()=>{"use strict";ve();Ee();Te();om=(e,t)=>{let r=e[0].dims,o=r,n=2,s=B.sizeToDimension(r,n),u=B.sizeFromDimension(r,n),c=Ve(u),a=u/c,f=[r[0],r[1],a],g=["rank","type","type"],h=[{type:12,data:u},{type:12,data:a}];h.push(...X(f,f));let w=_=>{let v=M("x",e[0].dataType,f.length,c),$=M("scale",e[1].dataType,e[1].dims),C=M("bias",e[2].dataType,e[2].dims),x=j("output",e[0].dataType,f.length,c),S=[v,$,C,x],T=v.type.value,E=c===1?"f32":`vec${c}<f32>`,P=64,z=[{name:"normSize",type:"u32"},{name:"normPackedSize",type:"u32"}];return`\n  var<workgroup> meanShared : f32;\n  var<workgroup> squaredNormShared : f32;\n  var<workgroup> workgroupShared : array<${E}, ${P}>;\n  const workgroupSize = ${P}u;\n  ${_.registerUniforms(z).declareVariables(...S)}\n  ${_.mainStart(P)}\n    let norm = global_idx / workgroupSize;\n    let batch = norm / uniforms.x_shape[1];\n    let channel = norm % uniforms.x_shape[1];\n    let localIndex = local_id.x;\n\n    // initialize workgroup memory\n    var initial = ${E}(0);\n    for (var h = localIndex; h < uniforms.normPackedSize; h += workgroupSize) {\n      initial = initial + ${E}(${v.get("batch","channel","h")});\n    }\n    workgroupShared[localIndex] = initial;\n    workgroupBarrier();\n\n    // Calculate the mean of current channel data.\n    for (var currSize = workgroupSize >> 1;  currSize > 0; currSize = currSize >> 1) {\n      if (localIndex < currSize) {\n        workgroupShared[localIndex] = workgroupShared[localIndex] + workgroupShared[localIndex + currSize];\n      }\n      workgroupBarrier();\n    }\n    if (localIndex == 0) {\n      meanShared = ${ut("workgroupShared[0]",c)} / f32(uniforms.normSize);\n    }\n    workgroupBarrier();\n\n    // reinitialize workgroup memory.\n    initial = ${E}(0);\n    for (var h = localIndex; h < uniforms.normPackedSize; h += workgroupSize) {\n      let deviation =  ${E}(${v.get("batch","channel","h")}) - ${E}(meanShared);\n      initial = initial + deviation * deviation;\n    }\n    workgroupShared[localIndex] = initial;\n    workgroupBarrier();\n\n    // Calculate the sum of square of deviation of current channel data.\n    for (var currSize = workgroupSize >> 1;  currSize > 0; currSize = currSize >> 1) {\n      if (localIndex < currSize) {\n        workgroupShared[localIndex] = workgroupShared[localIndex] + workgroupShared[localIndex + currSize];\n      }\n      workgroupBarrier();\n    }\n    if (localIndex == 0) {\n      squaredNormShared = ${ut("workgroupShared[0]",c)};\n    }\n    workgroupBarrier();\n\n    let invStdDev = inverseSqrt(squaredNormShared / f32(uniforms.normSize) + f32(${t.epsilon}));\n    let channelScale = invStdDev * f32(${$.getByOffset("channel")});\n    let channelShift = f32(${C.getByOffset("channel")}) - meanShared * channelScale;\n    for (var h = localIndex; h < uniforms.normPackedSize; h += workgroupSize) {\n      let value = ${v.get("batch","channel","h")} * ${T}(${E}(channelScale)) + ${T}(${E}(channelShift));\n      ${x.set("batch","channel","h","value")};\n    }\n  }`};return{name:"InstanceNormalization",shaderCache:{hint:`${t.epsilon};${c}`,inputDependencies:g},getRunData:()=>({outputs:[{dims:o,dataType:e[0].dataType}],dispatchGroup:{x:s},programUniforms:h}),getShaderSource:w}},am=(e,t,r,o,n,s,u,c)=>{let a=Ve(u),f=64,g=a===1?"vec2f":`mat2x${a}f`,h=a===1?"f32":`vec${a}f`,w=(z,H)=>`${g}(${z}, ${H})`,_=n*u/a,v=Math.ceil(s/f),$=["type"],C=[{type:12,data:v},{type:12,data:s},{type:12,data:Math.floor(u/a)},{type:12,data:Math.floor(s*u/a)}],x=z=>{let H=M("input",t.dataType,t.dims,a);return`\n  ${z.declareVariables(H)}\n  @group(0) @binding(1) var<storage, read_write> output : array<${g}>;\n  struct Uniforms {wg_size:u32, H:u32, C:u32, image_size:u32};\n  @group(0) @binding(2) var<uniform> uniforms: Uniforms;\n\n  ${z.mainStart(f)}\n    let currentImageNumber = global_idx / ${f} / uniforms.C;\n    let currentChannelNumber = (global_idx / ${f}) % uniforms.C;\n    let wgOffset = local_id.x * uniforms.wg_size;\n    if (wgOffset >= uniforms.H) {\n        return;\n    }\n    let wgMax = min(wgOffset + uniforms.wg_size, uniforms.H);\n\n    let offset = currentImageNumber * uniforms.image_size + currentChannelNumber;\n    var sum = ${rt("f32",a)};\n    var squaredSum = ${rt("f32",a)};\n    for (var i: u32 = wgOffset; i < wgMax; i++) {\n        let value = ${h}(input[offset + i * uniforms.C]);\n        sum += value;\n        squaredSum += value * value;\n    }\n    output[global_idx] = ${w("sum","squaredSum")};\n  }`},S=e.compute({name:"InstanceNormComputeMean",shaderCache:{hint:`${a}`,inputDependencies:$},getRunData:()=>({outputs:[{dims:[n,u,f,2],dataType:1}],dispatchGroup:{x:n*u/a},programUniforms:C}),getShaderSource:x},{inputs:[t],outputs:[-1]})[0],T=[{type:12,data:_},{type:12,data:s},{type:12,data:Math.floor(u/a)},{type:12,data:Math.floor(f*u/a)}],E=["type","type","type"],P=z=>{let H=M("scale",r.dataType,r.dims,a),K=M("bias",o.dataType,o.dims,a);return`\n  @group(0) @binding(0) var<storage, read> input : array<${g}>;\n  @group(0) @binding(1) var<storage, read> scale : array<${H.type.storage}>;\n  @group(0) @binding(2) var<storage, read> bias : array<${K.type.storage}>;\n  @group(0) @binding(3) var<storage, read_write> output : array<${g}>;\n  struct Uniforms {units_of_work : u32, H: u32, C : u32, image_size : u32};\n  @group(0) @binding(4) var<uniform> uniforms: Uniforms;\n\n  ${z.mainStart()}\n    ${z.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.units_of_work")}\n    let currentImageNumber = global_idx / uniforms.C;\n    let currentChannelNumber = global_idx % uniforms.C;\n\n    let offset = currentImageNumber * uniforms.image_size;\n    var sum = ${rt("f32",a)};\n    var squaredSum = ${rt("f32",a)};\n    for (var i: u32 = 0; i < min(${f}, uniforms.H); i++) {\n        let value = input[offset + i + currentChannelNumber * ${f}];\n        sum += value[0];\n        squaredSum += value[1];\n    }\n    sum = sum / f32(uniforms.H);\n    squaredSum = squaredSum / f32(uniforms.H);\n    let invStdDev = inverseSqrt(squaredSum - sum * sum + f32(${c}));\n    let channelScale = invStdDev * ${h}(scale[currentChannelNumber]);\n    let channelShift = ${h}(bias[currentChannelNumber]) - sum * channelScale;\n\n    output[global_idx] = ${w("channelScale","channelShift")};\n  }`};return e.compute({name:"InstanceNormComputeChannelScaleShift",shaderCache:{hint:`${a};${c}`,inputDependencies:E},getRunData:()=>({outputs:[{dims:[n,u,2],dataType:1}],dispatchGroup:{x:Math.ceil(_/64)},programUniforms:T}),getShaderSource:P},{inputs:[S,r,o],outputs:[-1]})[0]},im=(e,t,r)=>{let o=t[0].dims,n=o,s=o[0],u=o[o.length-1],c=B.sizeFromDimension(o,1)/u,a=Ve(u),f=B.size(n)/a,g=[{type:12,data:c},{type:12,data:Math.floor(u/a)}],h=["type","type"],w=am(e,t[0],t[1],t[2],s,c,u,r.epsilon),_=v=>{let $=Be(t[0].dataType),C=a===1?"vec2f":`mat2x${a}f`,x=a===1?$:`vec${a}<${$}>`,S=M("input",t[0].dataType,t[0].dims,a),T=j("output",t[0].dataType,n,a);return`\n  @group(0) @binding(0) var<storage, read> input : array<${S.type.storage}>;\n  @group(0) @binding(1) var<storage, read> scaleInput : array<${C}>;\n  @group(0) @binding(2) var<storage, read_write> output : array<${T.type.storage}>;\n  struct Uniforms {H: u32, C : u32};\n  @group(0) @binding(3) var<uniform> uniforms: Uniforms;\n\n  ${v.mainStart()}\n    let currentImageNumber = global_idx / (uniforms.C * uniforms.H);\n    let currentChannelNumber = global_idx % uniforms.C;\n\n    let scaleOffset = currentImageNumber * uniforms.C + currentChannelNumber;\n    let scale = scaleInput[scaleOffset];\n    output[global_idx] = fma(input[global_idx], ${x}(scale[0]), ${x}(scale[1]));\n  }`};e.compute({name:"InstanceNormalizationNHWC",shaderCache:{hint:`${a}`,inputDependencies:h},getRunData:()=>({outputs:[{dims:n,dataType:t[0].dataType}],dispatchGroup:{x:Math.ceil(f/64)},programUniforms:g}),getShaderSource:_},{inputs:[t[0],w]})},Lu=(e,t)=>{t.format==="NHWC"?im(e,e.inputs,t):e.compute(om(e.inputs,t))}});var sm,um,ju,Ku=Z(()=>{"use strict";ve();Ee();Te();sm=e=>{if(!e||e.length<2)throw new Error("layerNorm requires at least 2 inputs.")},um=(e,t,r)=>{let o=e[0].dims,n=e[1],s=e[2],u=o,c=B.normalizeAxis(t.axis,o.length),a=B.sizeToDimension(o,c),f=B.sizeFromDimension(o,c),g=B.size(n.dims),h=s?B.size(s.dims):0;if(g!==f||s&&h!==f)throw new Error(`Size of X.shape()[axis:] == ${f}.\n       Size of scale and bias (if provided) must match this.\n       Got scale size of ${g} and bias size of ${h}`);let w=[];for(let E=0;E<o.length;++E)E<c?w.push(o[E]):w.push(1);let _=Ve(f),v=["type","type"],$=[{type:12,data:a},{type:1,data:f},{type:12,data:Math.floor(f/_)},{type:1,data:t.epsilon}];s&&v.push("type");let C=r>1,x=r>2,S=E=>{let P=Be(e[0].dataType),z=[M("x",e[0].dataType,e[0].dims,_),M("scale",n.dataType,n.dims,_)];s&&z.push(M("bias",s.dataType,s.dims,_)),z.push(j("output",e[0].dataType,u,_)),C&&z.push(j("mean_data_output",1,w)),x&&z.push(j("inv_std_output",1,w));let H=[{name:"norm_count",type:"u32"},{name:"norm_size",type:"f32"},{name:"norm_size_vectorized",type:"u32"},{name:"epsilon",type:"f32"}];return`\n  ${E.registerUniforms(H).declareVariables(...z)}\n  ${E.mainStart()}\n    ${E.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.norm_count")}\n    let offset = global_idx * uniforms.norm_size_vectorized;\n    var mean_vector = ${rt("f32",_)};\n    var mean_square_vector = ${rt("f32",_)};\n\n    for (var h: u32 = 0u; h < uniforms.norm_size_vectorized; h++) {\n      let value = ${ht(P,_,"x[h + offset]")};\n      mean_vector += value;\n      mean_square_vector += value * value;\n    }\n    let mean = ${ut("mean_vector",_)} / uniforms.norm_size;\n    let inv_std_dev = inverseSqrt(${ut("mean_square_vector",_)} / uniforms.norm_size - mean * mean + uniforms.epsilon);\n\n    for (var j: u32 = 0; j < uniforms.norm_size_vectorized; j++) {\n      let f32input = ${ht(P,_,"x[j + offset]")};\n      let f32scale = ${ht(P,_,"scale[j]")};\n      output[j + offset] = ${z[0].type.value}((f32input - mean) * inv_std_dev * f32scale\n        ${s?`+ ${ht(P,_,"bias[j]")}`:""}\n      );\n    }\n\n    ${C?"mean_data_output[global_idx] = mean":""};\n    ${x?"inv_std_output[global_idx] = inv_std_dev":""};\n  }`},T=[{dims:u,dataType:e[0].dataType}];return C&&T.push({dims:w,dataType:1}),x&&T.push({dims:w,dataType:1}),{name:"LayerNormalization",shaderCache:{hint:`${_};${r}`,inputDependencies:v},getRunData:()=>({outputs:T,dispatchGroup:{x:Math.ceil(a/64)},programUniforms:$}),getShaderSource:S}},ju=(e,t)=>{sm(e.inputs),e.compute(um(e.inputs,t,e.outputCount))}});var lm,dm,qu,Yu,Zu=Z(()=>{"use strict";ve();Ee();Ze();Te();lm=(e,t)=>{if(e.length<3||e.length>4)throw new Error("MatMulNBits requires 3 or 4 inputs");let r=e[0],o=r.dims.length;if(r.dims[o-1]!==t.k)throw new Error("The last dim of input shape does not match the k value");let n=Math.floor((t.k+t.blockSize-1)/t.blockSize),s=t.blockSize/8*t.bits,u=e[1];if(!B.areEqual(u.dims,[t.n,n,s]))throw new Error("The second inputs must be 3D tensor with shape N X nBlocksPerCol X blobSize");let a=e[2].dims;if(B.size(a)!==t.n*n)throw new Error("scales input size error.");if(e.length===4){let g=e[3].dims,h=t.bits>4?t.n*n:t.n*Math.floor((n+1)/2);if(B.size(g)!==h)throw new Error("zeroPoints input size error.")}},dm=(e,t,r,o)=>{let n=e[0].dims,s=n.length,u=Math.floor((t.k+t.blockSize-1)/t.blockSize),c=n[s-2],a=t.k,f=t.n,g=n.slice(0,s-2),h=B.size(g),_=t.blockSize/8*t.bits/4,v=e[0].dataType,$=Ve(c),C=Ve(t.k),x=Ve(_),S=Qt(v),T=c*u,E=Ve(f,Math.ceil(o/T/S)),P=E*T*S>o&&T*S<=o?1:E,z=u<=r[0]&&T*P*S<=o,H=g.concat([c,f]),K=B.size(H)/P/$,re=z?[{type:12,data:t.blockSize}]:[{type:12,data:K},{type:12,data:t.k},{type:12,data:t.n},{type:12,data:t.accuracyLevel},{type:12,data:t.bits},{type:12,data:t.blockSize}],q=[h,c,a/C],ce=B.convertShape(e[1].dims).slice();ce.splice(-1,1,_/x),re.push(...X(q)),re.push(...X(ce)),re.push(...X(e[2].dims)),e.length===4&&re.push(...X(B.convertShape(e[3].dims)));let Se=[h,c,f/P];re.push(...X(Se));let Pe=U=>{let Q=q.length,W=M("a",e[0].dataType,Q,C),Ce=M("b",12,ce.length,x),we=M("scales",e[2].dataType,e[2].dims.length),he=[W,Ce,we],ne=e.length===4?M("zero_points",12,e[3].dims.length):void 0;ne&&he.push(ne);let be=Se.length,me=j("output",e[0].dataType,be,P),Ke=z?[{name:"block_size",type:"u32"}]:[{name:"output_size",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"accuracy_level",type:"u32"},{name:"bits",type:"u32"},{name:"block_size",type:"u32"}],G=Be(e[0].dataType),ee=(()=>{switch(C){case 1:return`array<${G}, 8>`;case 2:return`mat4x2<${G}>`;case 4:return`mat2x4<${G}>`;default:throw new Error(`${C}-component is not supported.`)}})(),_e=`\n        fn dequantize(quantized: ${ee}, zero_point: ${G}, scale: ${G}) -> ${ee} {\n          ${(()=>C===1?`var dequantized = ${ee}(${Array.from({length:8},(Qe,He)=>`(quantized[${He}] - zero_point) * scale`).join(", ")});\n              return dequantized;`:`var zero_points: ${ee} = ${ee}(${Array(8).fill("zero_point").join(",")});\n              return (quantized - zero_points) * scale;`)()}\n        }`,Xe=`\n        fn ortUnpack8x4snorm(value: u32) -> ${ee} {\n          var quantized: ${ee};\n          var offset: u32 = 0;\n          let count: u32 = 4;\n          for (var i: u32 = 0; i < 8u; i++) {\n            var result = ${G}(extractBits(value, offset, count));\n            ${(()=>{switch(C){case 1:return"quantized[i] = result;";case 2:return"quantized[i / 2][i % 2] = result;";case 4:return"quantized[i / 4][i % 4] = result;";default:throw new Error(`${C}-component is not supported.`)}})()}\n            offset += count;\n          }\n          return quantized;\n        }`,qe=ne?`\n          zero_point_offset += 4;\n          if (zero_point_offset == 32) {\n            zero_point_offset = 0;\n            zero_point_index++;\n            zero_point_word = ${ne.getByOffset("zero_point_index")};\n          }`:"";return z?`\n        var<workgroup> workgroup_shared: array<${me.type.value}, ${c*u}>;\n        ${U.registerUniforms(Ke).declareVariables(...he,me)}\n        ${U.mainStart([u,1,1])}\n          var a_indices: ${W.type.indices};\n          var block = local_id.x;\n          var col = workgroup_id.y;\n          var batch = workgroup_id.z;\n          ${W.indicesSet("a_indices","0","batch")};\n          // Two zero points are packed into one byte when uniforms.bits is 4.\n          for (var c: u32 = 0; c < ${P}; c++) {\n            let col_times_components_plus_c = col * ${P} + c;\n              ${ne?`\n            var zero_point_bytes_per_col: u32 = (${u} + 1) / 2;\n            var zero_point_byte_count: u32 = col_times_components_plus_c * zero_point_bytes_per_col + (block >> 0x1u);\n            var zero_point_word_index: u32 = zero_point_byte_count >> 0x2u;\n            var zero_point_byte_offset: u32 = zero_point_byte_count & 0x3u;\n            var zero_point_nibble_offset: u32 = block & 0x1u;\n            var zero_point_bits_offset: u32 = (zero_point_byte_offset << 3) + (zero_point_nibble_offset << 2);\n            var zero_point_word: u32 = ${ne.getByOffset("zero_point_word_index")} >> zero_point_bits_offset;`:""}\n            var b_indices: ${Ce.type.indices};\n            ${Ce.indicesSet("b_indices","0","col_times_components_plus_c")};\n            // The scale and zero points are computed per block.\n            var scales_index = col_times_components_plus_c * ${u} + block;\n            let scale = ${we.getByOffset("scales_index")};\n            // The default zero point is 8 for unsigned 4-bit quantization.\n            let zero_point = ${G}(${ne?"(zero_point_word) & 0xFu":8});\n            ${Ce.indicesSet("b_indices","1","block")};\n            var word_offset: u32 = block * ${t.blockSize/C};\n            var workgroup_shared_offset: u32 = block * ${c};\n            for (var word: u32 = 0; word < ${_}; word += ${x}) {\n              ${Ce.indicesSet("b_indices","2","word")};\n              let b_data = ${Ce.getByIndices("b_indices")};\n              for (var i: u32 = 0; i < ${x}; i++) {\n                let b_value: u32 = ${x===1?"b_data":"b_data[word + i]"};\n                let b_mask: u32 = 0x0F0F0F0Fu;\n                let b_value_lower: vec4<u32> = unpack4xU8(b_value & b_mask);\n                let b_value_upper: vec4<u32> = unpack4xU8((b_value >> 4) & b_mask);\n                let b_quantized_values = ${ee}(${Array.from({length:4},(Qe,He)=>`${G}(b_value_lower[${He}]), ${G}(b_value_upper[${He}])`).join(", ")});\n                let b_dequantized_values = ${(()=>C===1?`${ee}(${Array.from({length:8},(Qe,He)=>`(b_quantized_values[${He}] - zero_point) * scale`).join(", ")});`:`(b_quantized_values - ${ee}(${Array(8).fill("zero_point").join(",")})) * scale;`)()};\n                // Number of B elements per 32-bit word is 32/bits = 32/4 = 8\n                for (var m: u32 = 0; m < ${c}u; m++) {\n                  ${W.indicesSet("a_indices",Q-2,"m")};\n                  ${W.indicesSet("a_indices",Q-1,"word_offset")};\n                  var input_offset = ${W.indicesToOffset("a_indices")};\n                  var a_data: ${ee};\n                  for (var j: u32 = 0; j < ${8/C}; j++) {\n                    a_data[j] = ${W.getByOffset("input_offset")};\n                    input_offset++;\n                  }\n                  workgroup_shared[workgroup_shared_offset + m]${P>1?"[c]":""} += ${Array.from({length:8/C},(Qe,He)=>`${C===1?`a_data[${He}] * b_dequantized_values[${He}]`:`dot(a_data[${He}], b_dequantized_values[${He}])`}`).join(" + ")};\n                }\n                word_offset += ${8/C};\n              }\n            }\n          }\n          workgroupBarrier();\n          if (local_id.x == 0u) {\n            var output_indices: ${me.type.indices};\n            ${me.indicesSet("output_indices","0","batch")};\n            ${me.indicesSet("output_indices",be-1,"col")};\n            ${me.indicesSet("output_indices",be-2,"0")};\n            var output_offset = ${me.indicesToOffset("output_indices")};\n            for (var m: u32 = 0u; m < ${c}u; m++) {\n              var output_value: ${me.type.value} = ${me.type.value}(0);\n              var workgroup_shared_offset: u32 = m;\n              for (var b: u32 = 0u; b < ${u}u; b++) {\n                output_value += workgroup_shared[workgroup_shared_offset];\n                workgroup_shared_offset += ${c};\n              }\n              ${me.setByOffset("output_offset","output_value")};\n              output_offset += ${f/P};\n            }\n          }\n        }`:`\n        ${_e};\n        ${Xe};\n        ${U.registerUniforms(Ke).declareVariables(...he,me)}\n        ${U.mainStart()}\n          ${U.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n          var output_values: array<${me.type.value}, ${$}>;\n          var output_indices = ${me.offsetToIndices("global_idx")};\n          var n = ${me.indicesGet("output_indices",be-1)};\n          var m = ${me.indicesGet("output_indices",be-2)};\n          var a_indices: ${W.type.indices} = output_indices;\n          // Two zero points are packed into one byte because uniforms.bits <= 4.\n          // zero_point_offset is either 0 or 4. It is bit offset within one byte.\n          // TODO support zero_point_offset for bits > 4\n          ${ne?`\n          var zero_point_index: u32 = n * ${P} * ((${u} + 1) / 2) / 4;\n          var zero_point_word: u32 = ${ne.getByOffset("zero_point_index")};\n          var zero_point_offset: u32 = 0;`:""}\n          var scale_index = n * ${u*P};\n          var b_indices: ${Ce.type.indices};\n          for (var c: u32 = 0; c < ${P}; c++) {\n            ${Ce.indicesSet("b_indices","0",`n * ${P} + c`)};\n            var block_offset: u32 = 0;\n            for (var block: u32 = 0; block < ${u}; block++) {\n              // The scale and zero points are computed per block.\n              let scale = ${we.getByOffset("scale_index")};\n              // The default zero point is 8 for unsigned 4-bit quantization.\n              let zero_point = ${G}(${ne?"extractBits(zero_point_word, zero_point_offset, 4)":8});\n              ${Ce.indicesSet("b_indices","1","block")};\n              var word_offset: u32 = block_offset;\n              for (var word: u32 = 0; word < ${_}; word += ${x}) {\n                ${Ce.indicesSet("b_indices","2","word")};\n                let b_data = ${Ce.getByIndices("b_indices")};\n                for (var i: u32 = 0; i < ${x}; i++) {\n                  let b_value = ${x===1?"b_data":"b_data[word + i]"};\n                  let b_quantized_values: ${ee} = ortUnpack8x4snorm(b_value);\n                  let b_dequantized_values = dequantize(b_quantized_values, zero_point, scale);\n                  // Number of B elements per 32-bit word is 32/bits = 32/4 = 8\n                  var offset: u32 = word_offset;\n                  for (var j: u32 = 0; j < 8/${C}; j++) {\n                    ${W.indicesSet("a_indices",Q-1,`offset/${C}`)};\n                    for (var k: u32 = 0; k < ${$}u; k++) {\n                      ${W.indicesSet("a_indices",Q-2,`m * ${$} + k`)};\n                      let a_data = ${W.getByIndices("a_indices")};\n                      output_values[k]${P>1?"[c]":""} += ${C===1?"a_data * b_dequantized_values[j]":"dot(a_data, b_dequantized_values[j])"};\n                    }\n                    offset += ${C};\n                  }\n                  word_offset += 8;\n                }\n              }\n              scale_index++;\n              ${qe}\n              block_offset += uniforms.block_size;\n            }\n            // Drop the trailing 4 bits if the zero_poit_offset is not a byte boundary to align with the next byte.\n            ${ne?`if (zero_point_offset % 8 > 0) {\n                ${qe}\n              }`:""}\n            }\n            for (var k: u32 = 0u; k < ${$}u; k++) {\n              ${me.indicesSet("output_indices",be-2,`${$+" * m + k"}`)};\n              ${me.setByIndices("output_indices","output_values[k]")}\n            }\n        }`};return{name:z?"BlockwiseMatMulNBits":"MatMulNBits",shaderCache:{hint:z?`${t.cacheKey};${c};${v};${e.length}`:`${t.cacheKey};${e.length}`,inputDependencies:Array(e.length).fill("rank")},getRunData:()=>({outputs:[{dims:H,dataType:v}],name:z?"BlockwiseMatMulNBits":"MatMulNBits",dispatchGroup:z?{x:1,y:Math.ceil(f/P),z:h}:{x:Math.ceil(K/64)},programUniforms:re}),getShaderSource:Pe}},qu=(e,t)=>{lm(e.inputs,t);let r=e.getMaxComputeWorkgroupSizes(),o=e.getMaxComputeWorkgroupStoragesize();e.compute(dm(e.inputs,t,r,o))},Yu=e=>Ae(e)});var cm,Qu,Xu,pm,ma,Ju,el=Z(()=>{"use strict";ve();Ee();Ze();Kn();Qo();Te();gr();cm=(e,t)=>{let r=e[0],o=e[1],n=e[2],s=e[3],u=e[4],c=e[5],a=e[6],f=e[7];if(r.dims.length!==3&&r.dims.length!==5)throw new Error("Input query is expected to have 3 or 5 dimensions");let g=!1,h=r.dims[0],w=r.dims[1],_=r.dims.length===3?g?r.dims[2]/3:r.dims[2]:t.numHeads*r.dims[4],v=w,$=0,C=0,x=Math.floor(_/t.numHeads);if(a&&f){if(a.dims.length!==4)throw new Error(\'Input "past_key" is expected to have 4 dimensions\');if(f.dims.length!==4)throw new Error(\'Input "past_value" is expected to have 4 dimensions\');$=a.dims[2],C=a.dims[2]}else if(a||f)throw new Error(\'Input "past_key" and "past_value" shall be both present or both absent\');let S;if(o){if(r.dims.length!==3)throw new Error(\'Input "query" is expected to have 3 dimensions when key is given\');if(o.dims.length<3||o.dims.length>5)throw new Error(\'Input "key" is expected to have 3, 4, or 5 dimensions\');if(r.dims[0]!==o.dims[0])throw new Error(\'Input "query" and "key" shall have same dim 0 (batch size)\');if(o.dims.length===3){if(o.dims[2]!==r.dims[2])throw new Error(\'Input "query" and "key" shall have same dim 2 (hidden_size)\');S=2,v=o.dims[1]}else if(o.dims.length===5){if(o.dims[2]!==t.numHeads||o.dims[3]!==2||o.dims[4]!==x)throw new Error(\'Expect "key" shape (batch_size, kv_sequence_length, num_heads, 2, head_size) for packed kv\');if(n)throw new Error(\'Expect "value" be none when "key" has packed kv format.\');S=5,v=o.dims[1]}else{if(o.dims[1]!==t.numHeads||o.dims[3]!==x)throw new Error(\'Expect "key" shape (batch_size, num_heads, kv_sequence_length, head_size) for past_key\');S=0,v=o.dims[2]}}else{if(r.dims.length!==3&&r.dims.length!==5)throw new Error(\'Input "query" is expected to have 3 or 5 dimensions when key is empty\');if(r.dims.length===5&&(r.dims[2]!==t.numHeads||r.dims[3]!==3))throw new Error(\'Expect "query" shape (batch_size, kv_sequence_length, num_heads, 3, head_size) for packed kv\');S=3}if(s){if(s.dims.length!==1)throw new Error(\'Input "bias" is expected to have 1 dimension\');if(n&&r.dims.length===5&&r.dims[3]===2)throw new Error("bias is not allowed for packed kv.")}let T=0;if(u){T=8;let K=u.dims;throw K.length===1?K[0]===h?T=1:K[0]===3*h+2&&(T=3):K.length===2&&K[0]===h&&K[1]===v&&(T=5),T===8?new Error(\'Input "key_padding_mask" shape shall be (batch_size) or (batch_size, kv_sequence_length)\'):new Error("Mask not supported")}let E=!1,P=_;if(n){if(n.dims.length!==3&&n.dims.length!==4)throw new Error(\'Input "value" is expected to have 3 or 4 dimensions\');if(r.dims[0]!==n.dims[0])throw new Error(\'Input "query" and "value" shall have same dim 0 (batch_size)\');if(n.dims.length===3){if(v!==n.dims[1])throw new Error(\'Input "key" and "value" shall have the same dim 1 (kv_sequence_length)\');P=n.dims[2]}else{if(v!==n.dims[2])throw new Error(\'Input "past_key" and "past_value" shall have the same dim 2 (kv_sequence_length)\');P=n.dims[1]*n.dims[3],E=!0}}let z=$+v,H=!1;if(u)throw new Error("Key padding mask is not supported");if(c)throw new Error("extraAddQk is not supported");if(a)throw new Error("pastKey is not supported");if(f)throw new Error("pastValue is not supported");return{batchSize:h,sequenceLength:w,pastSequenceLength:$,kvSequenceLength:v,totalSequenceLength:z,maxSequenceLength:C,inputHiddenSize:0,hiddenSize:_,vHiddenSize:P,headSize:x,vHeadSize:Math.floor(P/t.numHeads),numHeads:t.numHeads,isUnidirectional:!1,pastPresentShareBuffer:!1,maskFilterValue:t.maskFilterValue,maskType:T,scale:t.scale,broadcastResPosBias:H,passPastInKv:E,qkvFormat:S}},Qu=e=>Ae({...e}),Xu=Ae({perm:[0,2,1,3]}),pm=(e,t,r,o,n,s,u)=>{let c=[o,n,s],a=B.size(c),f=[{type:12,data:a},{type:12,data:u},{type:12,data:s}],g=h=>{let w=j("qkv_with_bias",t.dataType,c),_=M("qkv",t.dataType,c),v=M("bias",r.dataType,c),$=[{name:"output_size",type:"u32"},{name:"bias_offset",type:"u32"},{name:"hidden_size",type:"u32"}];return`\n  ${h.registerUniforms($).declareVariables(_,v,w)}\n  ${h.mainStart()}\n    ${h.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n    let bias_offset_idx = (global_idx % uniforms.hidden_size) + uniforms.bias_offset;\n\n    qkv_with_bias[global_idx] = qkv[global_idx] + bias[bias_offset_idx];\n  }`};return e.compute({name:"MultiHeadAttentionAddBias",shaderCache:{inputDependencies:["type","type"]},getRunData:()=>({outputs:[{dims:c,dataType:t.dataType,gpuDataType:0}],dispatchGroup:{x:Math.ceil(a/64)},programUniforms:f}),getShaderSource:g},{inputs:[t,r],outputs:[-1]})[0]},ma=(e,t,r,o,n,s,u,c)=>{let a=s;if(u){if(o===1)throw new Error("AddBiasReshape is not implemented. Please export your model with packed QKV or KV");return a=pm(e,s,u,t,o,r*n,c),a=a.reshape([t,o,r,n]),e.compute(ft(a,Xu.perm),{inputs:[a],outputs:[-1]})[0]}else return s.dims.length===3&&(a=s.reshape([t,o,r,n])),e.compute(ft(a,Xu.perm),{inputs:[a],outputs:[-1]})[0]},Ju=(e,t)=>{let r=cm(e.inputs,t);if(e.inputs[0].dims.length===5)throw new Error("Packed QKV is not implemented");if(e.inputs[1]?.dims.length===5)throw new Error("Packed KV is not implemented");let o=e.inputs[1]&&e.inputs[2]&&e.inputs[1].dims.length===4&&e.inputs[2].dims.length===4,n=ma(e,r.batchSize,r.numHeads,r.sequenceLength,r.headSize,e.inputs[0],e.inputs[3],0);if(o)return to(e,n,e.inputs[1],e.inputs[2],e.inputs[4],void 0,void 0,void 0,e.inputs[5],r,t);let s=ma(e,r.batchSize,r.numHeads,r.kvSequenceLength,r.headSize,e.inputs[1],e.inputs[3],r.hiddenSize),u=ma(e,r.batchSize,r.numHeads,r.kvSequenceLength,r.vHeadSize,e.inputs[2],e.inputs[3],2*r.hiddenSize);to(e,n,s,u,e.inputs[4],void 0,e.inputs[6],e.inputs[7],e.inputs[5],r,t)}});var mm,fm,hm,gm,ym,bm,vm,wm,tl,rl=Z(()=>{"use strict";ve();Ee();Te();mm=e=>{if(!e||e.length<1)throw new Error("Too few inputs");if(e[0].dataType!==1&&e[0].dataType!==10)throw new Error("Input type must be float or float16.");if(e.length>=2){let t=e[0].dims.length*2===e[1].dims[0];if(e.length===4&&(t=e[3].dims[0]*2===e[1].dims[0]),!t)throw new Error("The pads should be a 1D tensor of shape [2 * input_rank] or [2 * num_axes].")}},fm=(e,t,r)=>{let o="";for(let n=t-1;n>=0;--n)o+=`\n            k = i32(${e.indicesGet("indices",n)}) - ${fe("uniforms.pads",n,r)};\n            if (k < 0) {\n              break;\n            }\n            if (k >= i32(${fe("uniforms.x_shape",n,t)})) {\n              break;\n            }\n            offset += k * i32(${fe("uniforms.x_strides",n,t)});\n        `;return`\n          value = ${e.type.value}(uniforms.constant_value);\n          for (var i = 0; i < 1; i++) {\n            var offset = 0;\n            var k = 0;\n            ${o}\n            value = x[offset];\n          }\n      `},hm=(e,t,r)=>{let o="";for(let n=t-1;n>=0;--n)o+=`\n                k = i32(${e.indicesGet("indices",n)}) - ${fe("uniforms.pads",n,r)};\n                if (k < 0) {\n                  k = -k;\n                }\n                {\n                  let _2n_1 = 2 * (i32(${fe("uniforms.x_shape",n,t)}) - 1);\n                  k = k % _2n_1;\n                  if(k >= i32(${fe("uniforms.x_shape",n,t)})) {\n                    k = _2n_1 - k;\n                  }\n                }\n                offset += k * i32(${fe("uniforms.x_strides",n,t)});\n            `;return`\n              var offset = 0;\n              var k = 0;\n              ${o}\n              value = x[offset];\n          `},gm=(e,t,r)=>{let o="";for(let n=t-1;n>=0;--n)o+=`\n                k = i32(${e.indicesGet("indices",n)}) - ${fe("uniforms.pads",n,r)};\n                if (k < 0) {\n                  k = 0;\n                }\n                if (k >= i32(${fe("uniforms.x_shape",n,t)})) {\n                  k = i32(${fe("uniforms.x_shape",n,t)}) - 1;\n                }\n                offset += k * i32(${fe("uniforms.x_strides",n,t)});\n            `;return`\n              var offset = 0;\n              var k = 0;\n              ${o}\n              value = x[offset];\n          `},ym=(e,t,r)=>{let o="";for(let n=t-1;n>=0;--n)o+=`\n                k = i32(${e.indicesGet("indices",n)}) - ${fe("uniforms.pads",n,r)};\n                if (k < 0)  {\n                  k += i32(${fe("uniforms.x_shape",n,t)}]);\n                }\n                if (k >= i32(${fe("uniforms.x_shape",n,t)})) {\n                  k -= i32(${fe("uniforms.x_shape",n,t)});\n                }\n                offset += k * i32(${fe("uniforms.x_strides",n,t)});\n            `;return`\n              var offset = 0;\n              var k = 0;\n              ${o}\n              value = x[offset];\n          `},bm=(e,t,r)=>{switch(r.mode){case 0:return fm(e,t,r.pads.length);case 1:return hm(e,t,r.pads.length);case 2:return gm(e,t,r.pads.length);case 3:return ym(e,t,r.pads.length);default:throw new Error("Invalid mode")}},vm=(e,t)=>{let r=B.padShape(e[0].dims.slice(),t.pads),o=e[0].dims,n=B.size(r),s=[{type:12,data:n},{type:6,data:t.pads}];t.mode===0&&s.push({type:e[0].dataType,data:t.value}),s.push(...X(e[0].dims,r));let u=["rank"],c=a=>{let f=j("output",e[0].dataType,r.length),g=M("x",e[0].dataType,o.length),h=g.type.value,w=bm(f,o.length,t),_=[{name:"output_size",type:"u32"},{name:"pads",type:"i32",length:t.pads.length}];return t.mode===0&&_.push({name:"constant_value",type:h}),`\n            ${a.registerUniforms(_).declareVariables(g,f)}\n            ${a.mainStart()}\n            ${a.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n\n            let indices = ${f.offsetToIndices("global_idx")};\n\n            var value = ${h}(0);\n            ${w}\n            output[global_idx] = value;\n        }`};return{name:"Pad",shaderCache:{hint:`${t.mode}`,inputDependencies:u},getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(B.size(r)/64)},programUniforms:s}),getShaderSource:c}},wm=(e,t)=>{if(e.length>1){let r=e[1].getBigInt64Array(),o=e.length>=3&&e[2].data?e[2].getFloat32Array()[0]:0,n=e[0].dims.length,s=new Int32Array(2*n).fill(0);if(e.length>=4){let c=e[3].getBigInt64Array();for(let a=0;a<c.length;a++)s[Number(c[a])]=Number(r[a]),s[Number(c[a])+n]=Number(r[a+c.length])}else r.forEach((c,a)=>s[Number(a)]=Number(c));let u=[];return s.forEach(c=>u.push(c)),{mode:t.mode,value:o,pads:u}}else return t},tl=(e,t)=>{mm(e.inputs);let r=wm(e.inputs,t);e.compute(vm(e.inputs,r),{inputs:[0]})}});var mo,nl,ol,al,il,_m,$m,sl,ul,ll,dl,cl,pl,ml,fl,hl,gl,yl,bl,vl=Z(()=>{"use strict";fr();ve();Ee();Te();mo=e=>{if(mr.webgpu.validateInputContent&&(!e||e.length!==1))throw new Error("Pool ops requires 1 input.")},nl=(e,t,r)=>{let o=t.format==="NHWC",n=e.dims.slice();o&&n.splice(1,0,n.pop());let s=Object.hasOwnProperty.call(t,"dilations"),u=t.kernelShape.slice(),c=t.strides.slice(),a=s?t.dilations.slice():[],f=t.pads.slice();er.adjustPoolAttributes(r,n,u,c,a,f);let g=er.computePoolOutputShape(r,n,c,a,u,f,t.autoPad),h=Object.assign({},t);s?Object.assign(h,{kernelShape:u,strides:c,pads:f,dilations:a,cacheKey:t.cacheKey}):Object.assign(h,{kernelShape:u,strides:c,pads:f,cacheKey:t.cacheKey});let w=g.slice();return w.push(w.splice(1,1)[0]),[h,o?w:g]},ol=(e,t)=>{let r=t.format==="NHWC",o=B.size(e),n=B.size(t.kernelShape),s=[{type:12,data:o},{type:12,data:n}],u=[{name:"outputSize",type:"u32"},{name:"kernelSize",type:"u32"}];if(t.kernelShape.length<=2){let c=t.kernelShape[t.kernelShape.length-1],a=t.strides[t.strides.length-1],f=t.pads[t.pads.length/2-1],g=t.pads[t.pads.length-1],h=!!(f+g);s.push({type:12,data:c},{type:12,data:a},{type:12,data:f},{type:12,data:g}),u.push({name:"kw",type:"u32"},{name:"sw",type:"u32"},{name:"pwStart",type:"u32"},{name:"pwEnd",type:"u32"});let w=!1;if(t.kernelShape.length===2){let _=t.kernelShape[t.kernelShape.length-2],v=t.strides[t.strides.length-2],$=t.pads[t.pads.length/2-2],C=t.pads[t.pads.length-2];w=!!($+C),s.push({type:12,data:_},{type:12,data:v},{type:12,data:$},{type:12,data:C}),u.push({name:"kh",type:"u32"},{name:"sh",type:"u32"},{name:"phStart",type:"u32"},{name:"phEnd",type:"u32"})}return[s,u,!0,h,w]}else{if(r)throw new Error("Pooling with kernelShape.length > 2 is not supported for NHWC format.");let c=B.computeStrides(t.kernelShape);s.push({type:12,data:c},{type:12,data:t.pads},{type:12,data:t.strides}),u.push({name:"kernelStrides",type:"u32",length:c.length},{name:"pads",type:"u32",length:t.pads.length},{name:"strides",type:"u32",length:t.strides.length});let a=t.pads.reduce((f,g)=>f+g);return[s,u,!!a,!1,!1]}},al=(e,t,r,o,n,s,u,c,a,f,g,h)=>{let w=n.format==="NHWC",_=t.type.value,v=j("output",t.type.tensor,o);if(n.kernelShape.length<=2){let $="",C="",x="",S=r-(w?2:1);if(g?$=`\n                for (var i: u32 = 0u; i < uniforms.kw; i++) {\n                  xIndices[${S}] = indices[${S}] * uniforms.sw - uniforms.pwStart + i;\n                  if (xIndices[${S}] < 0 || xIndices[${S}]\n                      >= uniforms.x_shape[${S}]) {\n                    pad++;\n                    continue;\n                  }\n                  let x_val = x[${t.indicesToOffset("xIndices")}];\n                  ${s}\n                }`:$=`\n                for (var i: u32 = 0u; i < uniforms.kw; i++) {\n                  xIndices[${S}] = indices[${S}] * uniforms.sw - uniforms.pwStart + i;\n                  let x_val = x[${t.indicesToOffset("xIndices")}];\n                  ${s}\n                }`,n.kernelShape.length===2){let E=r-(w?3:2);h?C=`\n                for (var j: u32 = 0u; j < uniforms.kh; j++) {\n                  xIndices[${E}] = indices[${E}] * uniforms.sh - uniforms.phStart + j;\n                  if (xIndices[${E}] < 0 || xIndices[${E}] >= uniforms.x_shape[${E}]) {\n                    pad += i32(uniforms.kw);\n                    continue;\n                  }\n              `:C=`\n                for (var j: u32 = 0u; j < uniforms.kh; j++) {\n                  xIndices[${E}] = indices[${E}] * uniforms.sh - uniforms.phStart + j;\n                `,x=`\n              }\n            `}return`\n            ${e.registerUniforms(a).declareVariables(t,v)}\n\n            ${e.mainStart()}\n              ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n\n              let indices = ${v.offsetToIndices("global_idx")};\n              var xIndices = ${v.offsetToIndices("global_idx")};\n\n              var value = ${_}(${c});\n              var pad = 0;\n              ${C}\n              ${$}\n              ${x}\n              ${u}\n\n              output[global_idx] = value;\n            }`}else{if(w)throw new Error("Pooling with kernelShape.length > 2 is not supported for NHWC format.");let $=n.kernelShape.length,C=n.pads.length,x="";return f?x=`\n                if (xIndices[j] >= uniforms.x_shape[j]) {\n                  pad++;\n                  isPad = true;\n                  break;\n                }\n              }\n              if (!isPad) {\n                let x_val = x[${t.indicesToOffset("xIndices")}];\n                ${s}\n              }`:x=`\n              }\n              let x_val = x[${t.indicesToOffset("xIndices")}];\n              ${s}\n            `,`\n            ${e.registerUniforms(a).declareVariables(t,v)}\n\n            ${e.mainStart()}\n              ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n              let indices = ${v.offsetToIndices("global_idx")};\n              var xIndices = ${v.offsetToIndices("global_idx")};\n\n              var offsets: array<u32, ${$}>;\n\n              var value = ${_}(${c});\n              var pad = 0;\n              var isPad = false;\n\n              for (var i: u32 = 0u; i < uniforms.kernelSize; i++) {\n                var offset = i;\n                for (var j = 0u; j < ${$-1}u; j++) {\n                  offsets[j] = offset / ${fe("uniforms.kernelStrides","j",$)};\n                  offset -= offsets[j] * ${fe("uniforms.kernelStrides","j",$)};\n                }\n                offsets[${$-1}] = offset;\n\n                isPad = false;\n                for (var j = ${r-$}u; j < ${r}u; j++) {\n                  xIndices[j] = indices[j] * ${fe("uniforms.strides",`j - ${r-$}u`,$)}\n                    + offsets[j - ${r-$}u] - ${fe("uniforms.pads","j - 2u",C)};\n                  ${x}\n              }\n              ${u}\n\n              output[global_idx] = value;\n            }`}},il=e=>`${e.format};${e.ceilMode};${e.autoPad};${e.kernelShape.length}`,_m=e=>`${il(e)};${e.countIncludePad}`,$m=e=>`${il(e)};${e.storageOrder};${e.dilations}`,sl=e=>({format:e.format,autoPad:["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][e.auto_pad],ceilMode:e.ceil_mode,kernelShape:e.kernel_shape,strides:e.strides,pads:e.pads}),ul=(e,t,r,o)=>{let[n,s]=nl(t,o,r),u=M("x",t.dataType,t.dims.length),c=u.type.value,a="value += x_val;",f="";n.countIncludePad?f+=`value /= ${c}(uniforms.kernelSize);`:f+=`value /= ${c}(i32(uniforms.kernelSize) - pad);`;let[g,h,w,_,v]=ol(s,n);g.push(...X(t.dims,s));let $=["rank"];return{name:e,shaderCache:{hint:`${o.cacheKey};${w};${_};${v}`,inputDependencies:$},getRunData:()=>({outputs:[{dims:s,dataType:t.dataType}],dispatchGroup:{x:Math.ceil(B.size(s)/64)},programUniforms:g}),getShaderSource:C=>al(C,u,t.dims.length,s.length,n,a,f,0,h,w,_,v)}},ll=e=>{let t=e.count_include_pad!==0,r=sl(e);if(r.ceilMode!==0)throw new Error("using ceil() in shape computation is not yet supported for AveragePool");let o={countIncludePad:t,...r,cacheKey:""};return{...o,cacheKey:_m(o)}},dl=(e,t)=>{mo(e.inputs),e.compute(ul("AveragePool",e.inputs[0],!1,t))},cl={autoPad:"",ceilMode:0,countIncludePad:!1,kernelShape:[],strides:[],pads:[],storageOrder:0,dilations:[]},pl=e=>{let t=e.format;return{format:t,...cl,cacheKey:t}},ml=(e,t)=>{mo(e.inputs),e.compute(ul("GlobalAveragePool",e.inputs[0],!0,t))},fl=(e,t,r,o)=>{let[n,s]=nl(t,o,r),u=`\n      value = max(x_val, value);\n    `,c="",a=M("x",t.dataType,t.dims.length),f=["rank"],[g,h,w,_,v]=ol(s,n);return g.push(...X(t.dims,s)),{name:e,shaderCache:{hint:`${o.cacheKey};${w};${_};${v}`,inputDependencies:f},getRunData:()=>({outputs:[{dims:s,dataType:t.dataType}],dispatchGroup:{x:Math.ceil(B.size(s)/64)},programUniforms:g}),getShaderSource:$=>al($,a,t.dims.length,s.length,n,u,c,t.dataType===10?-65504:-1e5,h,w,_,v)}},hl=(e,t)=>{mo(e.inputs),e.compute(fl("MaxPool",e.inputs[0],!1,t))},gl=e=>{let t=e.storage_order,r=e.dilations,o=sl(e);if(t!==0)throw new Error("column major storage order is not yet supported for MaxPool");if(o.ceilMode!==0)throw new Error("using ceil() in shape computation is not yet supported for MaxPool");let n={storageOrder:t,dilations:r,...o,cacheKey:""};return{...n,cacheKey:$m(n)}},yl=e=>{let t=e.format;return{format:t,...cl,cacheKey:t}},bl=(e,t)=>{mo(e.inputs),e.compute(fl("GlobalMaxPool",e.inputs[0],!0,t))}});var xm,Cm,wl,_l=Z(()=>{"use strict";fr();ve();Te();xm=(e,t,r)=>{let o=e===t,n=e<t&&r<0,s=e>t&&r>0;if(o||n||s)throw new Error("Range these inputs\' contents are invalid.")},Cm=(e,t,r,o)=>{let n=Math.abs(Math.ceil((t-e)/r)),s=[n],u=n,c=[{type:12,data:u},{type:o,data:e},{type:o,data:r},...X(s)],a=f=>{let g=j("output",o,s.length),h=g.type.value,w=[{name:"outputSize",type:"u32"},{name:"start",type:h},{name:"delta",type:h}];return`\n        ${f.registerUniforms(w).declareVariables(g)}\n        ${f.mainStart()}\n        ${f.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n        output[global_idx] = uniforms.start + ${h}(global_idx) * uniforms.delta;\n      }`};return{name:"Range",shaderCache:{hint:`${o}`},getShaderSource:a,getRunData:()=>({outputs:[{dims:s,dataType:o}],dispatchGroup:{x:Math.ceil(u/64)},programUniforms:c})}},wl=e=>{let t=0,r=0,o=0;e.inputs[0].dataType===6?(t=e.inputs[0].getInt32Array()[0],r=e.inputs[1].getInt32Array()[0],o=e.inputs[2].getInt32Array()[0]):e.inputs[0].dataType===1&&(t=e.inputs[0].getFloat32Array()[0],r=e.inputs[1].getFloat32Array()[0],o=e.inputs[2].getFloat32Array()[0]),mr.webgpu.validateInputContent&&xm(t,r,o),e.compute(Cm(t,r,o,e.inputs[0].dataType),{inputs:[]})}});var Am,Im,Tm,Em,Om,km,Pm,Rm,Dm,Bm,Mm,$l,zm,Um,Vm,Nm,Wm,Sl,xl,Cl=Z(()=>{"use strict";ve();Ee();Ze();Te();Am=(e,t)=>{if(e.every(r=>r>0||(()=>{throw new Error("Resize requires scales input values to be positive")})),e.length>0){if(t.mode==="linear"){if(!(e.length===2||e.length===3||e.length===4&&e[0]===1&&e[1]===1||e.length===4&&e[0]===1&&e[3]===1||e.length===5&&e[0]===1&&e[1]===1))throw new Error(`For linear mode, Resize requires scales to be 2D, 3D, 4D with either two outermost or one innermost and\n            one outermost scale values equal to 1, or 5D with two outermost scale values equal to 1`)}else if(t.mode==="cubic"&&!(e.length===2||e.length===4&&e[0]===1&&e[1]===1||e.length===4&&e[0]===1&&e[3]===1))throw new Error("Resize requires scales input size to be 2 or 4 for cubic mode")}},Im=(e,t,r)=>{t.every(n=>n>=0&&n<r||(()=>{throw new Error("Resize requires axes input values to be positive and less than rank")}));let o=new Array(r).fill(1);return t.forEach((n,s)=>o[n]=e[s]),o},Tm=(e,t,r,o,n,s)=>{let[u,c,a]=r>10?[1,2,3]:[-1,e.length>1?1:-1,-1],f=e[0].dims.length;if(u>0&&e.length>u&&e[u].dims.length>0)e[u].getFloat32Array().forEach(g=>s.push(g));else if(t.coordinateTransformMode==="tf_crop_and_resize")throw new Error("Resize requires RoI input to be specified when coordinateTransformMode is tfCropAndResize");if(c>0&&e.length>c&&e[c].dims.length>0){if(e[c].getFloat32Array().forEach(g=>o.push(g)),o.length!==0&&o.length!==f&&r>=18&&o.length!==t.axes.length)throw new Error("Resize requires scales input size to be same as input rank or axes size for opset 18 and up");Am(o,t),t.axes.length>0&&Im(o,t.axes,f).forEach((g,h)=>o[h]=g)}if(a>0&&e.length>a&&(e[a].getBigInt64Array().forEach(g=>n.push(Number(g))),n.length!==f||r>=18&&n.length===t.axes.length))throw new Error("Resize requires sizes input size to be same as input rank or axes size for opset 18 and up");if(t.axes.length>0){if(o.length!==t.axes.length)throw new Error(\'Resize requires "scales" input size to be of axes rank when axes attributes is specified\');if(n.length!==t.axes.length)throw new Error(\'Resize requires "sizes" input size to be of rank axes rank when axes attributes is specified\')}if(typeof o<"u"&&typeof n<"u"&&o.length>0&&n.length>f)throw new Error("Resize requires only of scales or sizes to be specified")},Em=(e,t)=>`fn getOriginalCoordinateFromResizedCoordinate(xResized: u32, xScale: f32, lengthResized: u32,\n     lengthOriginal: u32, roiStart: f32, roiEnd: f32) -> ${t} { `+(()=>{switch(e){case"asymmetric":return`return ${t}(xResized) / ${t}(xScale);`;case"pytorch_half_pixel":return`if (lengthResized > 1) {\n                    return (${t}(xResized) + 0.5) / ${t}(xScale) - 0.5;\n                  } else {\n                    return 0.0;\n                  }`;case"tf_half_pixel_for_nn":return`return (${t}(xResized) + 0.5) / ${t}(xScale);`;case"align_corners":return`if (lengthResized == 1) {\n                    return 0.0;\n                  } else {\n                    // The whole part and the fractional part are calculated separately due to inaccuracy of floating\n                    // point division. As an example, f32(21) / f32(7) may evaluate to 2.99... instead of 3, causing an\n                    // offset-by-one error later in floor().\n                    let whole = ${t}(xResized * (lengthOriginal - 1) / (lengthResized - 1));\n                    let fract =\n                        ${t}(xResized * (lengthOriginal - 1) % (lengthResized - 1)) / ${t}(lengthResized - 1);\n                    return whole + fract;\n                  }`;case"tf_crop_and_resize":return`if (lengthResized > 1) {\n                    return ${t}(roiStart) * ${t}(lengthOriginal - 1) +\n                        (${t}(xResized) * ${t}(roiEnd - roiStart) * ${t}(lengthOriginal - 1)) /\n                        ${t}(lengthResized - 1);\n                  } else {\n                    return 0.5 * ${t}(roiStart + roiEnd) * ${t}(lengthOriginal - 1);\n                  }`;case"half_pixel_symmetric":return`const outputWidth = ${t}xScale * ${t}(lengthResized);\n                  const adjustment = ${t}(lengthResized) / outputWidth;\n                  const center = ${t}(lengthOriginal) / 2;\n                  const offset = center * (1 - adjustment);\n                  return offset + ((${t}(xResized) + 0.5) / ${t}(xScale)) - 0.5;`;case"half_pixel":return`return ((${t}(xResized) + 0.5) / ${t}(xScale)) - 0.5;`;default:throw new Error(`Coordinate transform mode ${e} is not supported`)}})()+"}",Om=(e,t,r)=>`fn getNearestPixelFromOriginal(xOriginal: ${r}, isDownSample: bool) -> ${r} {`+(()=>{switch(e){case"round_prefer_ceil":return"if (fract(xOriginal) == 0.5) {             return ceil(xOriginal);           } else {             return round(xOriginal);           }";case"floor":return"return floor(xOriginal);";case"ceil":return"return ceil(xOriginal);";case"round_prefer_floor":return"if (fract(xOriginal) == 0.5) {                     return floor(xOriginal);                   } else {                     return round(xOriginal);                   }";case"simple":default:if(t<11)return"if (isDownSample)                     {                       return ceil(xOriginal);                     } else {                       return xOriginal;                     }";throw new Error(`Nearest mode ${e} is not supported`)}})()+"}",km=(e,t,r)=>{let o=new Array(r).fill(0).concat(new Array(r).fill(1)),n=e.length===0?o:e.slice();return t.length>0?(t.forEach((s,u)=>{o[s]=n[u],o[u+r]=n[t.length+u]}),o):n},Pm=(e,t,r,o)=>{let n=[];if(r.length>0)if(o.length>0){if(e.forEach(s=>n.push(s)),Math.max(...o)>e.length)throw new Error("axes is out of bound");o.forEach((s,u)=>n[s]=r[u])}else r.forEach(s=>n.push(s));else{if(t.length===0)throw new Error("Resize requires either scales or sizes.");n=e.map((s,u)=>Math.round(s*t[u]))}return n},Rm=(e,t,r)=>{let o=(()=>{switch(r.keepAspectRatioPolicy){case"not_larger":return r.axes.length>0?Math.min(...r.axes.map(s=>t[s]),Number.MAX_VALUE):Math.min(...t,Number.MAX_VALUE);case"not_smaller":return r.axes.length>0?Math.max(...r.axes.map(s=>t[s]),Number.MIN_VALUE):Math.max(...t,Number.MIN_VALUE);default:throw new Error(`Keep aspect ratio policy ${r.keepAspectRatioPolicy} is not supported`)}})();t.fill(1,0,t.length);let n=e.slice();return r.axes.length>0?(r.axes.forEach(s=>t[s]=o),r.axes.forEach(s=>n[s]=Math.round(e[s]*t[s]))):(t.fill(o,0,t.length),n.forEach((s,u)=>n[u]=Math.round(s*t[u]))),n},Dm=(e,t,r,o,n)=>`\n    fn calculateOriginalIndicesFromOutputIndices(output_indices: ${e.type.indices}) -> array<${e.type.value}, ${r.length}> {\n      var original_indices: array<${e.type.value}, ${r.length}>;\n      for (var i:u32 = 0; i < ${r.length}; i++) {\n        var output_index = ${e.indicesGet("output_indices","i")};\n        var scale = ${fe("uniforms.scales","i",o)};\n        var roi_low = ${fe("uniforms.roi","i",n)};\n        var roi_hi = ${fe("uniforms.roi",`i + ${t.length}`,n)};\n        if (scale == 1.0) {\n          original_indices[i] = ${e.type.value}(output_index);\n        } else {\n          var input_shape_i = ${fe("uniforms.input_shape","i",t.length)};\n          var output_shape_i = ${fe("uniforms.output_shape","i",r.length)};\n          original_indices[i] = getOriginalCoordinateFromResizedCoordinate(output_index, scale, output_shape_i,\n                                                                           input_shape_i, roi_low, roi_hi);\n        }\n      }\n      return original_indices;\n    }`,Bm=(e,t,r,o,n,s,u)=>`\n    fn calculateInputIndicesFromOutputIndices(output_indices: ${t.type.indices}) -> ${e.type.indices} {\n      var input_indices: ${e.type.indices};\n      for (var i:u32 = 0; i < ${o.length}; i++) {\n        var output_index = ${t.indicesGet("output_indices","i")};\n        var input_index: u32;\n        var scale = ${fe("uniforms.scales","i",n)};\n        if (scale == 1.0) {\n          input_index = output_index;\n        } else {\n          var roi_low = ${fe("uniforms.roi","i",s)};\n          var roi_hi = ${fe("uniforms.roi",`i + ${r.length}`,s)};\n          var input_shape_i = ${fe("uniforms.input_shape","i",r.length)};\n          var output_shape_i = ${fe("uniforms.output_shape","i",o.length)};\n          var original_idx = getOriginalCoordinateFromResizedCoordinate(output_index, scale, output_shape_i,\n                                                                        input_shape_i, roi_low, roi_hi);\n          if (!${u} || (original_idx >= 0 && original_idx < ${t.type.value}(input_shape_i))) {\n            if (original_idx < 0) {\n              input_index = 0;\n            } else if (original_idx > ${t.type.value}(input_shape_i - 1)) {\n              input_index = input_shape_i - 1;\n            } else {\n              input_index = u32(getNearestPixelFromOriginal(original_idx, scale < 1));\n            }\n          } else {\n            input_index = u32(original_idx);\n          }\n        }\n        ${e.indicesSet("input_indices","i"," input_index")}\n      }\n      return input_indices;\n    }`,Mm=(e,t)=>`\n    fn checkInputIndices(input_indices: ${e.type.indices}) -> bool {\n      for (var i:u32 = 0; i < ${t.length}; i++) {\n        var input_index = ${e.indicesGet("input_indices","i")};\n        if (input_index < 0 || input_index >= ${fe("uniforms.input_shape","i",t.length)}) {\n          return false;\n        }\n      }\n      return true;\n    }`,$l=(e,t,r,o)=>e.rank>o?`\n    ${e.indicesSet("input_indices",t,"channel")};\n    ${e.indicesSet("input_indices",r,"batch")};\n`:"",zm=(e,t,r,o,n)=>{let[u,c,a,f]=r.length===2?[-1,0,1,-1]:[0,2,3,1],g=e.type.value;return`\n    fn getInputValue(batch: u32, channel: u32, row: u32, col: u32) -> ${g} {\n      var input_indices: ${e.type.indices};\n      ${e.indicesSet("input_indices",c,`max(0, min(row, ${r[c]} - 1))`)};\n      ${e.indicesSet("input_indices",a,`max(0, min(col, ${r[a]} - 1))`)};\n      ${$l(e,f,u,2)}\n      return ${e.getByIndices("input_indices")};\n    }\n\n    fn bilinearInterpolation(output_indices: ${t.type.indices}) -> ${g} {\n      var originalIndices = calculateOriginalIndicesFromOutputIndices(output_indices);\n      var row:${g} = originalIndices[${c}];\n      var col:${g} = originalIndices[${a}];\n      ${o?`if (row < 0 || row > (${r[c]} - 1) || col < 0 || col > (${r[a]} - 1)) {\n        return ${n};\n      }`:""};\n      row = max(0, min(row, ${r[c]} - 1));\n      col = max(0, min(col, ${r[a]} - 1));\n      var row1: u32 = u32(row);\n      var col1: u32 = u32(col);\n      var row2: u32 = u32(row + 1);\n      var col2: u32 = u32(col + 1);\n      var channel: u32 = ${r.length>2?`u32(originalIndices[${f}])`:"0"};\n      var batch: u32 =  ${r.length>2?`u32(originalIndices[${u}])`:"0"};\n      var x11: ${g} = getInputValue(batch, channel, row1, col1);\n      var x12: ${g} = getInputValue(batch, channel, row1, col2);\n      var x21: ${g} = getInputValue(batch, channel, row2, col1);\n      var x22: ${g} = getInputValue(batch, channel, row2, col2);\n      var dx1: ${g} = abs(row - ${g}(row1));\n      var dx2: ${g} = abs(${g}(row2) - row);\n      var dy1: ${g} = abs(col - ${g}(col1));\n      var dy2: ${g} = abs(${g}(col2) - col);\n      if (row1 == row2) {\n        dx1 = 0.5;\n        dx2 = 0.5;\n      }\n      if (col1 == col2) {\n        dy1 = 0.5;\n        dy2 = 0.5;\n      }\n      return (x11 * dx2 * dy2 + x12 * dx2 * dy1 + x21 * dx1 * dy2 + x22 * dx1 * dy1);\n    }`},Um=(e,t,r,o,n,s,u,c,a,f)=>{let g=r.length===2,h=!0,[w,_]=g?[0,1]:h?[2,3]:[1,2],v=e.type.value,$=C=>{let x=C===w?"row":"col";return`\n      fn ${x}CubicInterpolation(input_indices: ${e.type.indices}, output_indices: ${t.type.indices}) -> ${v} {\n        var output_index = ${t.indicesGet("output_indices",C)};\n        var originalIdx: ${v} = getOriginalCoordinateFromResizedCoordinate(output_index, ${n[C]},\n        ${o[C]}, ${r[C]}, ${s[C]}, ${s[C]} + ${r.length});\n        var fractOriginalIdx: ${v} = originalIdx - floor(originalIdx);\n        var coefs = getCubicInterpolationCoefs(fractOriginalIdx);\n\n        if (${c} && (originalIdx < 0 || originalIdx > (${r[C]} - 1))) {\n          return ${a};\n        }\n        var data: array<${v}, 4> = array<${v}, 4>(0.0, 0.0, 0.0, 0.0);\n        for (var i: i32 = -1; i < 3; i++) {\n          var ${x}: ${v} = originalIdx + ${v}(i);\n          if (${x} < 0 || ${x} >= ${r[C]}) {\n            ${(()=>f?`coefs[i + 1] = 0.0;\n                        continue;`:c?`return ${a};`:`${x} = max(0, min(${x}, ${r[C]} - 1));`)()};\n          }\n        var input_indices_copy: ${e.type.indices} = input_indices;\n          ${e.indicesSet("input_indices_copy",C,`u32(${x})`)};\n          data[i + 1] = ${C===w?e.getByIndices("input_indices_copy"):"rowCubicInterpolation(input_indices_copy, output_indices)"};\n        }\n        return cubicInterpolation1D(data, coefs);\n      }`};return`\n    ${$(w)};\n    ${$(_)};\n  fn getCubicInterpolationCoefs(s: ${v}) -> array<${v}, 4> {\n    var absS = abs(s);\n    var coeffs: array<${v}, 4> = array<${v}, 4>(0.0, 0.0, 0.0, 0.0);\n    var oneMinusAbsS: ${v} = 1.0 - absS;\n    var twoMinusAbsS: ${v} = 2.0 - absS;\n    var onePlusAbsS: ${v} = 1.0 + absS;\n    coeffs[0] = ((${u} * onePlusAbsS - 5 * ${u}) * onePlusAbsS + 8 * ${u}) * onePlusAbsS - 4 * ${u};\n    coeffs[1] = ((${u} + 2) * absS - (${u} + 3)) * absS * absS + 1;\n    coeffs[2] = ((${u} + 2) * oneMinusAbsS - (${u} + 3)) * oneMinusAbsS * oneMinusAbsS + 1;\n    coeffs[3] = ((${u} * twoMinusAbsS - 5 * ${u}) * twoMinusAbsS + 8 * ${u}) * twoMinusAbsS - 4 * ${u};\n    return coeffs;\n  }\n\n  fn cubicInterpolation1D(x: array<${v}, 4>, coefs: array<${v}, 4>) -> ${v} {\n    var coefsSum: ${v} = coefs[0] + coefs[1] + coefs[2] + coefs[3];\n    return (x[0] * coefs[0] + x[1] * coefs[1]+ x[2] * coefs[2]+ x[3] * coefs[3]) / coefsSum;\n  }\n\n  fn bicubicInterpolation(output_indices: ${t.type.indices}) -> ${v} {\n    var input_indices: ${e.type.indices} = output_indices;\n    return colCubicInterpolation(input_indices, output_indices);\n  }\n    `},Vm=(e,t,r,o,n)=>{let[u,c,a,f,g]=r.length===3?[-1,0,1,2,-1]:[0,2,3,4,1],h=e.type.value;return`\n    fn getInputValue(batch: u32, channel: u32, depth:u32, height: u32, width: u32) -> ${h} {\n      var input_indices: ${e.type.indices};\n      ${e.indicesSet("input_indices",c,`max(0, min(depth, ${r[c]} - 1))`)};\n      ${e.indicesSet("input_indices",a,`max(0, min(height, ${r[a]} - 1))`)};\n      ${e.indicesSet("input_indices",f,`max(0, min(width, ${r[f]} - 1))`)};\n      ${$l(e,g,u,3)}\n      return ${e.getByIndices("input_indices")};\n    }\n\n    fn trilinearInterpolation(output_indices: ${t.type.indices}) -> ${h} {\n      var originalIndices = calculateOriginalIndicesFromOutputIndices(output_indices);\n      var depth:${h} = originalIndices[${c}];\n      var height:${h} = originalIndices[${a}];\n      var width:${h} = originalIndices[${f}];\n      ${o?`if (depth < 0 || depth > (${r[c]} - 1) || height < 0 || height > (${r[a]} - 1) || width < 0 || (width > ${r[f]} - 1)) {\n      return ${n};\n        }`:""};\n\n    depth = max(0, min(depth, ${r[c]} - 1));\n      height = max(0, min(height, ${r[a]} - 1));\n      width = max(0, min(width, ${r[f]} - 1));\n      var depth1: u32 = u32(depth);\n      var height1: u32 = u32(height);\n      var width1: u32 = u32(width);\n      var depth2: u32 = u32(depth + 1);\n      var height2: u32 = u32(height + 1);\n      var width2: u32 = u32(width + 1);\n      var channel: u32 = ${r.length>3?`u32(originalIndices[${g}])`:"0"};\n      var batch: u32 =  ${r.length>3?`u32(originalIndices[${u}])`:"0"};\n\n      var x111: ${h} = getInputValue(batch, channel, depth1, height1, width1);\n      var x112: ${h} = getInputValue(batch, channel, depth1, height1, width2);\n      var x121: ${h} = getInputValue(batch, channel, depth1, height2, width1);\n      var x122: ${h} = getInputValue(batch, channel, depth1, height2, width2);\n      var x211: ${h} = getInputValue(batch, channel, depth2, height1, width1);\n      var x212: ${h} = getInputValue(batch, channel, depth2, height1, width2);\n      var x221: ${h} = getInputValue(batch, channel, depth2, height2, width1);\n      var x222: ${h} = getInputValue(batch, channel, depth2, height2, width2);\n      var dx1: ${h} = abs(depth - ${h}(depth1));\n      var dx2: ${h} = abs(${h}(depth2) - depth);\n      var dy1: ${h} = abs(height - ${h}(height1));\n      var dy2: ${h} = abs(${h}(height2) - height);\n      var dz1: ${h} = abs(width - ${h}(width1));\n      var dz2: ${h} = abs(${h}(width2) - width);\n      if (depth1 == depth2) {\n        dx1 = 0.5;\n        dx2 = 0.5;\n      }\n      if (height1 == height2) {\n        dy1 = 0.5;\n        dy2 = 0.5;\n      }\n      if (width1 == width2) {\n        dz1 = 0.5;\n        dz2 = 0.5;\n      }\n      return (x111 * dx2 * dy2 * dz2 + x112 * dx2 * dy2 * dz1 + x121 * dx2 * dy1 *dz2 + x122 * dx2 * dy1 * dz1 +\n              x211 * dx1 * dy2 * dz2 + x212 * dx1 * dy2 * dz1 + x221 * dx1 * dy1 *dz2 + x222 * dx1 * dy1 * dz1);\n    }`},Nm=(e,t,r,o,n,s)=>{let u=e.dims,c=km(s,t.axes,u.length),a=Pm(u,o,n,t.axes),f=o.slice();o.length===0&&(f=u.map((S,T)=>S===0?1:a[T]/S),t.keepAspectRatioPolicy!=="stretch"&&(a=Rm(u,f,t)));let g=j("output",e.dataType,a.length),h=M("input",e.dataType,u.length),w=B.size(a),_=u.length===a.length&&u.every((S,T)=>S===a[T]),v=t.coordinateTransformMode==="tf_crop_and_resize",$=t.extrapolationValue,C=h.type.value,x=S=>`\n      ${_?"":`\n      ${Em(t.coordinateTransformMode,C)};\n      ${(()=>{switch(t.mode){case"nearest":return`\n              ${Mm(h,u)};\n              ${Om(t.nearestMode,r,C)};\n              ${Bm(h,g,u,a,f.length,c.length,v)};\n              `;case"linear":return`\n              ${Dm(g,u,a,f.length,c.length)};\n              ${(()=>{if(u.length===2||u.length===4)return`${zm(h,g,u,v,$)}`;if(u.length===3||u.length===5)return`${Vm(h,g,u,v,$)}`;throw Error("Linear mode only supports input dims 2, 3, 4 and 5 are supported in linear mode.")})()};\n            `;case"cubic":return`\n            ${(()=>{if(u.length===2||u.length===4)return`${Um(h,g,u,a,f,c,t.cubicCoeffA,v,t.extrapolationValue,t.excludeOutside)}`;throw Error("Cubic mode only supports input dims 2 and 4 are supported in linear mode.")})()};\n            `;default:throw Error("Invalid resize mode")}})()};\n      `}\n      ${S.registerUniform("output_size","u32").registerUniform("scales","f32",f.length).registerUniform("roi","f32",c.length).declareVariables(h,g)}\n      ${S.mainStart()}\n        ${S.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n        ${_?"output[global_idx] = input[global_idx];":`\n        let output_indices = ${g.offsetToIndices("global_idx")};\n        var input_indices: ${h.type.indices};\n        ${(()=>{switch(t.mode){case"nearest":return`input_indices = calculateInputIndicesFromOutputIndices(output_indices);\n                if (checkInputIndices(input_indices)) {\n                  output[global_idx] = ${h.getByIndices("input_indices")};\n                } else {\n                  output[global_idx] = ${t.extrapolationValue};\n                }`;case"linear":return`output[global_idx] = ${u.length===2||u.length===4?"bilinearInterpolation":"trilinearInterpolation"}(output_indices);`;case"cubic":return"output[global_idx] = bicubicInterpolation(output_indices);";default:throw Error(`Unsupported resize mode: ${t.mode}`)}})()};\n`}\n      }`;return{name:"Resize",shaderCache:{hint:`${t.cacheKey}|${r}|${f.length>0?f:""}|${n.length>0?n:""}|${c.length>0?c:""}|${_}|${u}`,inputDependencies:["rank"]},getShaderSource:x,getRunData:()=>({outputs:[{dims:a,dataType:e.dataType}],dispatchGroup:{x:Math.ceil(w/64)},programUniforms:[{type:12,data:w},{type:1,data:f},{type:1,data:c},...X(u,a)]})}},Wm=e=>{let t=e.customDataBuffer;return new Uint32Array(t,t.byteOffset,1)[0]},Sl=(e,t)=>{let r=[],o=[],n=[],s=Wm(e);if(t.antialias!==0)throw Error("Only default value (0) for Antialias attribute is supported");Tm(e.inputs,t,s,r,o,n),e.compute(Nm(e.inputs[0],t,s,r,o,n),{inputs:[0]})},xl=e=>{let t=e.antialias,r=e.axes,o=e.coordinateTransformMode,n=e.cubicCoeffA,s=e.excludeOutside!==0,u=e.extrapolationValue,c=e.keepAspectRatioPolicy,a=e.mode,f=e.nearestMode===""?"simple":e.nearestMode;return Ae({antialias:t,axes:r,coordinateTransformMode:o,cubicCoeffA:n,excludeOutside:s,extrapolationValue:u,keepAspectRatioPolicy:c,mode:a,nearestMode:f})}});var Gm,Hm,Al,Il=Z(()=>{"use strict";ve();Ee();Ze();Te();Gm=(e,t)=>{let[r,o,n,s]=e,{numHeads:u,rotaryEmbeddingDim:c}=t;if(r.dims.length!==3&&r.dims.length!==4)throw new Error(`Input \'x\' is expected to have 3 or 4 dimensions, got ${r.dims.length}`);if(!B.areEqual(o.dims,[])&&!B.areEqual(o.dims,[1])&&o.dims.length!==2)throw new Error(`Input \'position_ids\' is expected to have 0, 1, or 2 dimensions, got ${o.dims.length}`);if(n.dims.length!==2)throw new Error(`Input \'cos_cache\' is expected to have 2 dimensions, got ${n.dims.length}`);if(s.dims.length!==2)throw new Error(`Input \'sin_cache\' is expected to have 2 dimensions, got ${s.dims.length}`);if(!B.areEqual(n.dims,s.dims))throw new Error("Inputs \'cos_cache\' and \'sin_cache\' are expected to have the same shape");if(c>0&&u===0)throw new Error("num_heads must be provided if rotary_embedding_dim is specified");let a=r.dims[0],f=r.dims[r.dims.length-2],g=n.dims[0],h=B.sizeFromDimension(r.dims,1)/f,w=c===0?n.dims[1]*2:h/u;if(c>w)throw new Error("rotary_embedding_dim must be less than or equal to head_size");if(o.dims.length===2){if(a!==o.dims[0])throw new Error(`Input \'position_ids\' dimension 0 should be of size batch_size, got ${o.dims[0]}`);if(f!==o.dims[1])throw new Error(`Input \'position_ids\' dimension 1 should be of size sequence_length, got ${o.dims[1]}`)}if(w/2!==n.dims[1]&&c/2!==n.dims[1])throw new Error(`Input \'cos_cache\' dimension 1 should be same as head_size / 2 or rotary_embedding_dim / 2, got ${n.dims[1]}`);if(f>g)throw new Error("Updating cos_cache and sin_cache in RotaryEmbedding is not currently supported")},Hm=(e,t)=>{let{interleaved:r,numHeads:o,rotaryEmbeddingDim:n,scale:s}=t,u=e[0].dims[0],c=B.sizeFromDimension(e[0].dims,1),a=e[0].dims[e[0].dims.length-2],f=c/a,g=e[2].dims[1],h=n===0?g*2:f/o,w=new Array(u,a,f/h,h-g),_=B.computeStrides(w),v=[{type:1,data:s},{type:12,data:w},{type:12,data:_},...e[0].dims.length===3?new Array({type:12,data:[c,f,h,1]}):[],...e[0].dims.length===4?new Array({type:12,data:[c,h,a*h,1]}):[],...X(e[0].dims,e[1].dims,e[2].dims,e[3].dims,e[0].dims)],$=C=>{let x=M("input",e[0].dataType,e[0].dims.length),S=M("position_ids",e[1].dataType,e[1].dims.length),T=M("cos_cache",e[2].dataType,e[2].dims.length),E=M("sin_cache",e[3].dataType,e[3].dims.length),P=j("output",e[0].dataType,e[0].dims.length);return C.registerUniforms([{name:"scale",type:"f32"},{name:"global_shape",type:"u32",length:w.length},{name:"global_strides",type:"u32",length:_.length},{name:"input_output_strides",type:"u32",length:_.length}]),`\n        ${C.declareVariables(x,S,T,E,P)}\n\n        ${C.mainStart(tr)}\n          let half_rotary_emb_dim = uniforms.${T.name}_shape[1];\n          let bsnh = global_idx / uniforms.global_strides % uniforms.global_shape;\n          let size = uniforms.global_shape[0] * uniforms.global_strides[0];\n          ${C.guardAgainstOutOfBoundsWorkgroupSizes("size")}\n\n          if (bsnh[3] < half_rotary_emb_dim) {\n            let position_ids_idx =\n                ${S.broadcastedIndicesToOffset("bsnh.xy",j("",S.type.tensor,2))};\n            let position_id =\n                u32(${S.getByOffset("position_ids_idx")}) + select(0, bsnh[1], position_ids_idx == 0);\n            let i = dot(bsnh, uniforms.input_output_strides) + select(0, bsnh[3], ${r});\n            let j = i + select(half_rotary_emb_dim, 1, ${r});\n            let re = ${x.getByOffset("i")} * ${T.get("position_id","bsnh[3]")} -\n                ${x.getByOffset("j")} * ${E.get("position_id","bsnh[3]")};\n            ${P.setByOffset("i","re")}\n            let im = ${x.getByOffset("i")} * ${E.get("position_id","bsnh[3]")} +\n                ${x.getByOffset("j")} * ${T.get("position_id","bsnh[3]")};\n            ${P.setByOffset("j","im")}\n          } else {\n            let k = dot(bsnh, uniforms.input_output_strides) + half_rotary_emb_dim;\n            ${P.setByOffset("k",x.getByOffset("k"))}\n          }\n        }`};return{name:"RotaryEmbedding",shaderCache:{hint:Ae({interleaved:r}).cacheKey,inputDependencies:["rank","rank","rank","rank"]},getShaderSource:$,getRunData:()=>({outputs:[{dims:e[0].dims,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(B.size(w)/tr)},programUniforms:v})}},Al=(e,t)=>{Gm(e.inputs,t),e.compute(Hm(e.inputs,t))}});var Lm,Fm,Tl,El=Z(()=>{"use strict";ve();Ee();Te();Lm=e=>{if(!e||e.length<3)throw new Error("layerNorm requires at least 3 inputs.");let t=e[0],r=e[1],o=e[2];if(t.dataType!==r.dataType||t.dataType!==o.dataType)throw new Error("All inputs must have the same data type");if(t.dims.length!==3&&t.dims.length!==2)throw new Error("Input must be 2D or 3D");if(r.dims.length!==3&&r.dims.length!==2)throw new Error("Skip must be 2D or 3D");let n=t.dims[t.dims.length-1],s=t.dims[t.dims.length-2];if(r.dims[r.dims.length-1]!==n)throw new Error("Skip must have the same hidden size as input");if(r.dims[r.dims.length-2]!==s)throw new Error("Skip must have the same sequence length as input");if(o.dims.length!==1)throw new Error("Gamma must be 1D");if(o.dims[o.dims.length-1]!==n)throw new Error("Gamma must have the same hidden size as input");if(e.length>3){let u=e[3];if(u.dims.length!==1)throw new Error("Beta must be 1D");if(u.dims[u.dims.length-1]!==n)throw new Error("Beta must have the same hidden size as input")}if(e.length>4){let u=e[4];if(u.dims.length!==1)throw new Error("Bias must be 1D");if(u.dims[u.dims.length-1]!==n)throw new Error("Bias must have the same hidden size as input")}},Fm=(e,t,r,o)=>{let n=e[0].dims,s=B.size(n),u=n,c=s,a=n.slice(-1)[0],f=o?n.slice(0,-1).concat(1):[],g=e.length>3,h=e.length>4,w=o&&r>1,_=o&&r>2,v=r>3,$=Ve(a),C=[{type:12,data:c},{type:12,data:$},{type:12,data:a},{type:1,data:t.epsilon}],x=T=>{let E=[{name:"output_size",type:"u32"},{name:"components",type:"u32"},{name:"hidden_size",type:"u32"},{name:"epsilon",type:"f32"}],P=[M("x",e[0].dataType,e[0].dims,$),M("skip",e[1].dataType,e[1].dims,$),M("gamma",e[2].dataType,e[2].dims,$)];g&&P.push(M("beta",e[3].dataType,e[3].dims,$)),h&&P.push(M("bias",e[4].dataType,e[4].dims,$)),P.push(j("output",e[0].dataType,u,$)),w&&P.push(j("mean_output",1,f)),_&&P.push(j("inv_std_output",1,f)),v&&P.push(j("input_skip_bias_sum",e[0].dataType,u,$));let z=Be(e[0].dataType);return`\n\n      ${T.registerUniforms(E).declareVariables(...P)}\n\n      ${T.mainStart()}\n        ${T.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size / uniforms.hidden_size")}\n        let hidden_size_vectorized: u32 = uniforms.hidden_size / uniforms.components;\n        let offset = global_idx * hidden_size_vectorized;\n        var sum = ${rt("f32",$)};\n        var squareSum = ${rt("f32",$)};\n        for (var i: u32 = 0; i < hidden_size_vectorized; i++) {\n          let skip_value = skip[offset + i];\n          let bias_value = ${h?"bias[i]":"0.0"};\n          let input_value = x[offset + i];\n          let value = input_value + skip_value + bias_value;\n          ${v?"input_skip_bias_sum[offset + i] = value;":""}\n          output[offset + i] = value;\n          let f32_value = ${ht(z,$,"value")};\n          sum += f32_value;\n          squareSum += f32_value * f32_value;\n        }\n        let mean = ${ut("sum",$)} / f32(uniforms.hidden_size);\n        let inv_std_dev = inverseSqrt(${ut("squareSum",$)} / f32(uniforms.hidden_size) - mean * mean + uniforms.epsilon);\n        ${w?"mean_output[global_idx] = mean;":""}\n        ${_?"inv_std_output[global_idx] = inv_std_dev;":""}\n        for (var i: u32 = 0; i < hidden_size_vectorized; i++) {\n          output[offset + i] = (output[offset + i] - ${z}(mean)) * ${z}(inv_std_dev) * gamma[i] + ${g?"beta[i]":"0.0"};\n        }\n      }`},S=[{dims:u,dataType:e[0].dataType}];return r>1&&S.push({dims:f,dataType:1}),r>2&&S.push({dims:f,dataType:1}),r>3&&S.push({dims:n,dataType:e[0].dataType}),{name:"SkipLayerNormalization",shaderCache:{hint:`${$};${w};${_};${v}`,inputDependencies:e.map((T,E)=>"type")},getShaderSource:x,getRunData:()=>({outputs:S,dispatchGroup:{x:Math.ceil(c/a/64)},programUniforms:C})}},Tl=(e,t)=>{Lm(e.inputs);let o=[0];e.outputCount>1&&o.push(-3),e.outputCount>2&&o.push(-3),e.outputCount>3&&o.push(3),e.compute(Fm(e.inputs,t,e.outputCount,!1),{outputs:o})}});var jm,fo,Km,Ol,qm,Ym,kl,Pl,Rl=Z(()=>{"use strict";ve();Ee();Ze();Te();jm=(e,t)=>{if(!e||e.length<1)throw new Error("too few inputs");if(t.axes.length!==0){if(t.axes.length!==t.starts.length||t.axes.length!==t.ends.length)throw new Error("axes, starts and ends must have the same length")}else if(t.starts.length!==t.ends.length)throw new Error("starts and ends must have the same length");e.slice(1).forEach((r,o)=>{if(e[o+1].dataType!==6&&e[o+1].dataType!==7)throw new Error(`Input ${o} must be an array of int32 or int64`)})},fo=(e,t)=>{let r=[];if(e.length>t)if(e[t].dataType===7)e[t].getBigInt64Array().forEach(o=>r.push(Number(o)));else if(e[t].dataType===6)e[t].getInt32Array().forEach(o=>r.push(Number(o)));else throw new Error(`Input ${t} must be an array of int32 or int64`);return r},Km=(e,t)=>{if(e.length>1){let r=fo(e,1),o=fo(e,2),n=fo(e,3);return n.length===0&&(n=[...Array(e[0].dims.length).keys()]),Ae({starts:r,ends:o,axes:n})}else return t},Ol=(e,t,r,o,n)=>{let s=e;return e<0&&(s+=r[o[t]]),n[t]<0?Math.max(0,Math.min(s,r[o[t]]-1)):Math.max(0,Math.min(s,r[o[t]]))},qm=(e,t,r)=>`fn calculateInputIndices(output_indices: ${t.type.indices}) -> ${e.type.indices} {\n          var input_indices: ${e.type.indices};\n          var carry = 0u;\n          for (var i = ${r.length}; i >= 0; i--) {\n            let input_shape_i = ${fe("uniforms.input_shape","i",r.length)};\n            let steps_i = ${fe("uniforms.steps","i",r.length)};\n            let signs_i = ${fe("uniforms.signs","i",r.length)};\n            let starts_i = ${fe("uniforms.starts","i",r.length)};\n            var output_index = ${t.indicesGet("output_indices","i")};\n            var input_index = output_index * steps_i + starts_i + carry;\n            carry = input_index / input_shape_i;\n            input_index = input_index % input_shape_i;\n            if (signs_i < 0) {\n              input_index = input_shape_i - input_index - 1u + starts_i;\n            }\n            ${e.indicesSet("input_indices","i","input_index")};\n          }\n          return input_indices;\n      }`,Ym=(e,t)=>{let r=e[0].dims,o=B.size(r),n=t.axes.length>0?B.normalizeAxes(t.axes,r.length):[...Array(r.length).keys()],s=fo(e,4);s.forEach(x=>x!==0||(()=>{throw new Error("step cannot be 0")})),s.length===0&&(s=Array(n.length).fill(1));let u=t.starts.map((x,S)=>Ol(x,S,r,n,s)),c=t.ends.map((x,S)=>Ol(x,S,r,n,s));if(n.length!==u.length||n.length!==c.length)throw new Error("start, ends and axes should have the same number of elements");if(n.length!==r.length)for(let x=0;x<r.length;++x)n.includes(x)||(u.splice(x,0,0),c.splice(x,0,r[x]),s.splice(x,0,1));let a=s.map(x=>Math.sign(x));s.forEach((x,S,T)=>{if(x<0){let E=(c[S]-u[S])/x,P=u[S],z=P+E*s[S];u[S]=z,c[S]=P,T[S]=-x}});let f=r.slice(0);n.forEach((x,S)=>{f[x]=Math.ceil((c[x]-u[x])/s[x])});let g={dims:f,dataType:e[0].dataType},h=j("output",e[0].dataType,f.length),w=M("input",e[0].dataType,e[0].dims.length),_=B.size(f),v=[{name:"outputSize",type:"u32"},{name:"starts",type:"u32",length:u.length},{name:"signs",type:"i32",length:a.length},{name:"steps",type:"u32",length:s.length}],$=[{type:12,data:_},{type:12,data:u},{type:6,data:a},{type:12,data:s},...X(e[0].dims,f)],C=x=>`\n      ${x.registerUniforms(v).declareVariables(w,h)}\n        ${qm(w,h,r)}\n        ${x.mainStart()}\n          ${x.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n          let output_indices = ${h.offsetToIndices("global_idx")};\n          let input_indices = calculateInputIndices(output_indices);\n          ${h.setByOffset("global_idx",w.getByIndices("input_indices"))}\n      }`;return{name:"Slice",shaderCache:{hint:`${a.length}_${u.length}_${s.length}`,inputDependencies:["rank"]},getShaderSource:C,getRunData:()=>({outputs:[g],dispatchGroup:{x:Math.ceil(o/64)},programUniforms:$})}},kl=(e,t)=>{jm(e.inputs,t);let r=Km(e.inputs,t);e.compute(Ym(e.inputs,r),{inputs:[0]})},Pl=e=>{let t=e.starts,r=e.ends,o=e.axes;return Ae({starts:t,ends:r,axes:o})}});var Zm,Xm,Dl,Bl,Ml=Z(()=>{"use strict";ve();Ee();Ze();Te();Zm=e=>{if(!e||e.length!==1)throw new Error("Softmax op requires 1 input.")},Xm=(e,t)=>{let r=e.dims,o=B.size(r),n=64,s=t.axis;if(s<0&&(s=r.length+s),s<r.length-1)throw new Error("softmax only supports last axis for now.");let u=r[s],c=o/u,a=Ve(u),f=u/a,g=(C,x)=>x===4?`max(max(${C}.x, ${C}.y), max(${C}.z, ${C}.w))`:x===2?`max(${C}.x, ${C}.y)`:x===3?`max(max(${C}.x, ${C}.y), ${C}.z)`:C,h=M("x",e.dataType,e.dims,a),w=j("result",e.dataType,e.dims,a),_=h.type.value,v=Be(e.dataType)==="f32"?`var threadMax = ${_}(-3.402823e+38f);`:`var threadMax = ${_}(-65504.0h);`,$=C=>`\n      var<workgroup> rowMaxShared : ${_};\n      var<workgroup> rowSumShared : ${_};\n      var<workgroup> threadShared : array<${_}, ${n}>;\n\n      fn getValue(row: i32, col: i32, row_stride: i32) -> ${_} {\n        let index = row * row_stride + col;\n        return x[index];\n      }\n\n      fn setValue(row: i32, col: i32, row_stride: i32, value: ${_}) {\n        let index = row * row_stride + col;\n        result[index] = value;\n      }\n      ${C.registerUniform("packedCols","i32").declareVariables(h,w)}\n      ${C.mainStart()}\n        let gindex = i32(global_idx);\n        let lindex = i32(local_idx);\n        const wg = ${n};\n        let row = gindex / wg;\n        let cols = uniforms.packedCols;\n        let row_stride : i32 = uniforms.packedCols;\n\n        // find the rows max\n        ${v}\n        for (var col = lindex; col < cols; col += wg) {\n          let value = getValue(row, col, row_stride);\n          threadMax = max(threadMax, value);\n        }\n        if (lindex < cols) {\n          threadShared[lindex] = threadMax;\n        }\n        workgroupBarrier();\n\n        var reduceSize = min(cols, wg);\n        for (var currSize = reduceSize >> 1;  currSize > 0; currSize = reduceSize >> 1) {\n          reduceSize = currSize + (reduceSize & 1);\n          if (lindex < currSize) {\n            threadShared[lindex] = max(threadShared[lindex], threadShared[lindex + reduceSize]);\n          }\n          workgroupBarrier();\n        }\n        if (lindex == 0) {\n          rowMaxShared = ${_}(${g("threadShared[0]",a)});\n        }\n        workgroupBarrier();\n\n        // find the rows sum\n        var threadSum = ${_}(0.0);\n        for (var col = lindex; col < cols; col += wg) {\n          let subExp = exp(getValue(row, col, row_stride) - rowMaxShared);\n          threadSum += subExp;\n        }\n        threadShared[lindex] = threadSum;\n        workgroupBarrier();\n\n        for (var currSize = wg >> 1;  currSize > 0; currSize = currSize >> 1) {\n          if (lindex < currSize) {\n            threadShared[lindex] = threadShared[lindex] + threadShared[lindex + currSize];\n          }\n          workgroupBarrier();\n        }\n        if (lindex == 0) {\n          rowSumShared = ${_}(${ut("threadShared[0]",a)});\n        }\n        workgroupBarrier();\n\n        // calculate final value for each element in the row\n        for (var col = lindex; col < cols; col += wg) {\n          let value = exp(getValue(row, col, row_stride) - rowMaxShared) / rowSumShared;\n          setValue(row, col, row_stride, value);\n        }\n      }`;return{name:"Softmax",shaderCache:{hint:`${a}`,inputDependencies:["type"]},getRunData:()=>({outputs:[{dims:r,dataType:e.dataType}],dispatchGroup:{x:c},programUniforms:[{type:6,data:f}]}),getShaderSource:$}},Dl=(e,t)=>{Zm(e.inputs),e.compute(Xm(e.inputs[0],t))},Bl=e=>Ae({axis:e.axis})});var Qm,Jm,ef,tf,rf,zl,Ul,Vl=Z(()=>{"use strict";ve();Ee();Ze();Te();Qm=e=>{if(!e||e.length<1)throw new Error("too few inputs")},Jm=(e,t)=>{let r=[],o=t.numOutputs;return e[1].dims[0]>0&&(e[1].getBigInt64Array().forEach(n=>r.push(Number(n))),o=r.length),Ae({numOutputs:o,axis:t.axis,splitSizes:r})},ef=e=>`\nfn calculateOutputIndex(index: u32) -> u32 {\n    for (var i: u32 = 0u; i < ${e}u; i += 1u ) {\n    if (index < ${fe("uniforms.size_in_split_axis","i",e)}) {\n        return i;\n    }\n    }\n    return ${e}u;\n}`,tf=e=>{let t=e.length,r=[];for(let o=0;o<t;++o){let n=e[o].setByIndices("indices","input[global_idx]");t===1?r.push(n):o===0?r.push(`if (output_number == ${o}u) { ${n} }`):o===t-1?r.push(`else { ${n} }`):r.push(`else if (output_number == ${o}) { ${n} }`)}return`\n      fn writeBufferData(output_number: u32, indices: ${e[0].type.indices}, global_idx: u32) {\n        ${r.join(`\n`)}\n      }`},rf=(e,t)=>{let r=e[0].dims,o=B.size(r),n=e[0].dataType,s=B.normalizeAxis(t.axis,r.length),u=new Array(t.numOutputs),c=M("input",n,r.length),a=new Array(t.numOutputs),f=[],g=[],h=0,w=[{type:12,data:o}];for(let v=0;v<t.numOutputs;v++){h+=t.splitSizes[v],a[v]=h;let $=r.slice();$[t.axis]=t.splitSizes[v],g.push($),u[v]=j(`output${v}`,n,$.length),f.push({dims:g[v],dataType:e[0].dataType})}w.push({type:12,data:a},...X(r,...g));let _=v=>`\n  ${v.registerUniform("input_size","u32").registerUniform("size_in_split_axis","u32",a.length).declareVariables(c,...u)}\n  ${ef(a.length)}\n  ${tf(u)}\n\n  ${v.mainStart()}\n    ${v.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.input_size")}\n\n    var indices = ${c.offsetToIndices("global_idx")};\n    var index = ${c.indicesGet("indices",s)};\n    let output_number = calculateOutputIndex(index);\n    if (output_number != 0) {\n      index -= ${fe("uniforms.size_in_split_axis","output_number - 1u",a.length)};\n      ${c.indicesSet("indices",s,"index")};\n    }\n    writeBufferData(output_number, indices, global_idx);\n  }`;return{name:"Split",shaderCache:{hint:t.cacheKey,inputDependencies:["rank"]},getShaderSource:_,getRunData:()=>({outputs:f,dispatchGroup:{x:Math.ceil(o/64)},programUniforms:w})}},zl=(e,t)=>{Qm(e.inputs);let r=e.inputs.length===1?t:Jm(e.inputs,t);e.compute(rf(e.inputs,r),{inputs:[0]})},Ul=e=>{let t=e.axis,r=e.splitSizes,o=e.numOutputs<0?r.length:e.numOutputs;if(o!==r.length)throw new Error("numOutputs and splitSizes lengh must be equal");return Ae({axis:t,numOutputs:o,splitSizes:r})}});var Nl,nf,of,af,Wl,Gl=Z(()=>{"use strict";ve();Ee();Te();Nl=e=>Array.from(e.getBigInt64Array(),Number),nf=e=>{if(!e||e.length!==2)throw new Error("Tile requires 2 inputs.");if(e[0].dataType!==1&&e[0].dataType!==6&&e[0].dataType!==12)throw new Error("Tile only support float, int32, and uint32 data types");if(e[1].dataType!==7)throw new Error("Tile `repeats` input should be of int64 data type");if(e[1].dims.length!==1)throw new Error("Tile `repeats` input should be 1-D");if(Nl(e[1]).length!==e[0].dims.length)throw new Error("Tile `repeats` input should have same number of elements as rank of input data tensor")},of=(e,t)=>{let r=[];for(let o=0;o<e.length;++o)r.push(e[o]*t[o]);return r},af=e=>{let t=e[0].dims,r=Nl(e[1]),o=of(t,r),n=B.size(o),s=e[0].dataType,u=M("input",s,t.length),c=j("output",s,o.length),a=f=>`\n      const inputShape = ${u.indices(...t)};\n      ${f.registerUniform("output_size","u32").declareVariables(u,c)}\n      ${f.mainStart()}\n      ${f.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n      let output_indices = ${c.offsetToIndices("global_idx")};\n      var input_indices: ${u.type.indices};\n      for (var i = 0; i < ${t.length}; i++) {\n        let input_dim_i = ${u.indicesGet("uniforms.input_shape","i")};\n        let input_dim_value = ${c.indicesGet("output_indices","i")}  % input_dim_i;\n\n        ${u.indicesSet("input_indices","i","input_dim_value")}\n      }\n      ${c.setByOffset("global_idx",u.getByIndices("input_indices"))}\n    }`;return{name:"Tile",shaderCache:{hint:`${r}`,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:o,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(n/64)},programUniforms:[{type:12,data:n},...X(e[0].dims,o)]}),getShaderSource:a}},Wl=e=>{nf(e.inputs),e.compute(af(e.inputs),{inputs:[0]})}});var sf,uf,Hl,Ll=Z(()=>{"use strict";ve();Ee();Te();sf=(e,t,r,o,n)=>{let s=j("output_data",n,r.length,4),u=M("a_data",t[1].dataType,t[1].dims.length,4),c=M("b_data",t[2].dataType,t[2].dims.length,4),a=M("c_data",t[0].dataType,t[0].dims.length,4),f,g=(h,w,_)=>`select(${w}, ${h}, ${_})`;if(!o)f=s.setByOffset("global_idx",g(u.getByOffset("global_idx"),c.getByOffset("global_idx"),a.getByOffset("global_idx")));else{let h=(w,_,v="")=>{let $=`a_data[index_a${_}][component_a${_}]`,C=`b_data[index_b${_}][component_b${_}]`,x=`bool(c_data[index_c${_}] & (0xffu << (component_c${_} * 8)))`;return`\n            let output_indices${_} = ${s.offsetToIndices(`global_idx * 4u + ${_}u`)};\n            let offset_a${_} = ${u.broadcastedIndicesToOffset(`output_indices${_}`,s)};\n            let offset_b${_} = ${c.broadcastedIndicesToOffset(`output_indices${_}`,s)};\n            let offset_c${_} = ${a.broadcastedIndicesToOffset(`output_indices${_}`,s)};\n            let index_a${_} = offset_a${_} / 4u;\n            let index_b${_} = offset_b${_} / 4u;\n            let index_c${_} = offset_c${_} / 4u;\n            let component_a${_} = offset_a${_} % 4u;\n            let component_b${_} = offset_b${_} % 4u;\n            let component_c${_} = offset_c${_} % 4u;\n            ${w}[${_}] = ${v}(${g($,C,x)});\n          `};n===9?f=`\n            var data = vec4<u32>(0);\n            ${h("data",0,"u32")}\n            ${h("data",1,"u32")}\n            ${h("data",2,"u32")}\n            ${h("data",3,"u32")}\n            output_data[global_idx] = dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(data));`:f=`\n            ${h("output_data[global_idx]",0)}\n            ${h("output_data[global_idx]",1)}\n            ${h("output_data[global_idx]",2)}\n            ${h("output_data[global_idx]",3)}\n          `}return`\n        ${e.registerUniform("vec_size","u32").declareVariables(a,u,c,s)}\n        ${e.mainStart()}\n        ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}\n        ${f}\n      }`},uf=e=>{let t=e[1].dims,r=e[2].dims,o=e[0].dims,n=e[1].dataType,s=!(B.areEqual(t,r)&&B.areEqual(r,o)),u=t,c=B.size(t);if(s){let f=xt.calcShape(xt.calcShape(t,r,!1),o,!1);if(!f)throw new Error("Can\'t perform where op on the given tensors");u=f,c=B.size(u)}let a=Math.ceil(c/4);return{name:"Where",shaderCache:{inputDependencies:["rank","rank","rank"]},getShaderSource:f=>sf(f,e,u,s,n),getRunData:()=>({outputs:[{dims:u,dataType:n}],dispatchGroup:{x:Math.ceil(c/64/4)},programUniforms:[{type:12,data:a},...X(o,t,r,u)]})}},Hl=e=>{e.compute(uf(e.inputs))}});var Fl,jl=Z(()=>{"use strict";os();Qo();ss();ls();Ks();ou();su();na();_u();xu();Eu();Pu();Du();zu();Nu();Hu();Fu();Ku();aa();Zu();el();rl();vl();_l();Jn();Cl();Il();El();Rl();Ml();Vl();Gl();gr();oo();Ll();Fl=new Map([["Abs",[ds]],["Acos",[cs]],["Acosh",[ps]],["Add",[qs]],["ArgMax",[ns,Xo]],["ArgMin",[rs,Xo]],["Asin",[ms]],["Asinh",[fs]],["Atan",[hs]],["Atanh",[gs]],["Attention",[as]],["AveragePool",[dl,ll]],["BatchNormalization",[is]],["BiasAdd",[us]],["BiasSplitGelu",[js]],["Cast",[bs,ys]],["Ceil",[ws]],["Clip",[vs]],["Concat",[au,iu]],["Conv",[ua,sa]],["ConvTranspose",[wu,vu]],["Cos",[_s]],["Cosh",[$s]],["CumSum",[$u,Su]],["Div",[Ys]],["Einsum",[Iu,Tu]],["Elu",[Ss,ro]],["Equal",[Zs]],["Erf",[xs]],["Exp",[Cs]],["Expand",[ku]],["FastGelu",[Ru]],["Floor",[As]],["FusedConv",[ua,sa]],["Gather",[Mu,Bu]],["GatherElements",[Vu,Uu]],["Gelu",[Is]],["Gemm",[Gu,Wu]],["GlobalAveragePool",[ml,pl]],["GlobalMaxPool",[bl,yl]],["Greater",[eu]],["GreaterOrEqual",[ru]],["HardSigmoid",[Bs,Ds]],["InstanceNormalization",[Lu]],["LayerNormalization",[ju]],["LeakyRelu",[Ts,ro]],["Less",[tu]],["LessOrEqual",[nu]],["Log",[Ls]],["MatMul",[mu]],["MatMulNBits",[qu,Yu]],["MaxPool",[hl,gl]],["Mul",[Xs]],["MultiHeadAttention",[Ju,Qu]],["Neg",[Os]],["Not",[Es]],["Pad",[tl]],["Pow",[Qs]],["Range",[wl]],["Reciprocal",[ks]],["ReduceMin",[Zi]],["ReduceMean",[Fi]],["ReduceMax",[Yi]],["ReduceSum",[Qi]],["ReduceProd",[Xi]],["ReduceL1",[ji]],["ReduceL2",[Ki]],["ReduceLogSum",[es]],["ReduceLogSumExp",[qi]],["ReduceSumSquare",[Ji]],["Relu",[Ps]],["Resize",[Sl,xl]],["RotaryEmbedding",[Al]],["Sigmoid",[Rs]],["Sin",[Ms]],["Sinh",[zs]],["Slice",[kl,Pl]],["SkipLayerNormalization",[Tl]],["Split",[zl,Ul]],["Sqrt",[Us]],["Softmax",[Dl,Bl]],["Sub",[Js]],["Tan",[Vs]],["Tanh",[Ws]],["ThresholdedRelu",[Hs,ro]],["Tile",[Wl]],["Transpose",[Pi,Ri]],["Where",[Hl]]])});var ho,Kl=Z(()=>{"use strict";fr();Wt();Te();ho=class{constructor(t){this.backend=t;this.repo=new Map,this.attributesBound=!1}getArtifact(t){return this.repo.get(t)}setArtifact(t,r){this.repo.set(t,r)}run(t,r,o,n,s){Jt(t.programInfo.name);let u=this.backend.device,c=this.backend.getComputePassEncoder();this.backend.writeTimestamp(this.backend.pendingDispatchNumber*2);let a=[];for(let g of r)a.push({binding:a.length,resource:{buffer:g.buffer}});for(let g of o)a.push({binding:a.length,resource:{buffer:g.buffer}});s&&a.push({binding:a.length,resource:s});let f=u.createBindGroup({layout:t.computePipeline.getBindGroupLayout(0),entries:a,label:t.programInfo.name});if(this.backend.sessionStatus==="capturing"){let g={kernelId:this.backend.currentKernelId,computePipeline:t.computePipeline,bindGroup:f,dispatchGroup:n};this.backend.capturedCommandList.get(this.backend.currentSessionId).push(g)}c.setPipeline(t.computePipeline),c.setBindGroup(0,f),c.dispatchWorkgroups(...n),this.backend.writeTimestamp(this.backend.pendingDispatchNumber*2+1),this.backend.pendingDispatchNumber++,(this.backend.pendingDispatchNumber>=this.backend.maxDispatchNumber||this.backend.queryType==="at-passes")&&this.backend.endComputePass(),this.backend.pendingDispatchNumber>=this.backend.maxDispatchNumber&&this.backend.flush(),Nt(t.programInfo.name)}dispose(){}build(t,r){Jt(t.name);let o=this.backend.device,n=[];o.features.has("shader-f16")&&n.push("enable f16;");let s=Oi(r,this.backend.device.limits),u=t.getShaderSource(s),c=`${n.join(`\n`)}\n${s.additionalImplementations}\n${u}`,a=o.createShaderModule({code:c,label:t.name});Ue("verbose",()=>`[WebGPU] ${t.name} shader code: ${c}`);let f=o.createComputePipeline({compute:{module:a,entryPoint:"main"},layout:"auto",label:t.name});return Nt(t.name),{programInfo:t,computePipeline:f,uniformVariablesInfo:s.variablesInfo}}normalizeDispatchGroupSize(t){let r=typeof t=="number"?t:t.x,o=typeof t=="number"?1:t.y||1,n=typeof t=="number"?1:t.z||1,s=this.backend.device.limits.maxComputeWorkgroupsPerDimension;if(r<=s&&o<=s&&n<=s)return[r,o,n];let u=r*o*n,c=Math.ceil(Math.sqrt(u));if(c>s){if(c=Math.ceil(Math.cbrt(u)),c>s)throw new Error("Total dispatch size exceeds WebGPU maximum.");return[c,c,c]}else return[c,c,1]}}});var lf,df,fa,go,ql=Z(()=>{"use strict";fr();ve();Wt();Ci();Ei();jl();Kl();lf=(e,t)=>{if(t.length!==e.length)throw new Error(`inputDependencies length ${t.length} is not equal to inputTensors length ${e.length}.`);let r=[];for(let o=0;o<e.length;++o){let n=e[o].dataType;switch(t[o]){case"none":{r.push("");break}case"type":{r.push(`${n}`);break}case"rank":{let s=e[o].dims.length;r.push(`${n};${s}`);break}case"dims":{let s=e[o].dims.join(",");r.push(`${n};${s}`);break}default:throw new Error(`unsupported input dependency: ${t[o]}`)}}return r.join("|")},df=(e,t,r)=>{let o=e.name;return e.shaderCache?.hint&&(o+="["+e.shaderCache.hint+"]"),o+=":"+r+`:${lf(t,e.shaderCache?.inputDependencies??new Array(t.length).fill("dims"))}`,o},fa=class{constructor(t){t&&(this.architecture=t.architecture,this.vendor=t.vendor)}isArchitecture(t){return this.architecture===t}isVendor(t){return this.vendor===t}},go=class{constructor(){this.currentSessionId=null;this.currentKernelId=null;this.commandEncoder=null;this.computePassEncoder=null;this.maxDispatchNumber=16;this.pendingDispatchNumber=0;this.pendingKernels=[];this.pendingQueries=new Map;this.sessionStatus="default";this.capturedCommandList=new Map;this.capturedPendingKernels=new Map;this.sessionExternalDataMapping=new Map}get currentKernelCustomData(){if(this.currentKernelId===null)throw new Error("currentKernelCustomData(): currentKernelId is null. (should not happen)");let t=this.kernelCustomData.get(this.currentKernelId);return t||(t={},this.kernelCustomData.set(this.currentKernelId,t)),t}async initialize(t,r){this.env=t;let o=[],n={requiredLimits:{maxComputeWorkgroupStorageSize:r.limits.maxComputeWorkgroupStorageSize,maxComputeWorkgroupsPerDimension:r.limits.maxComputeWorkgroupsPerDimension,maxStorageBufferBindingSize:r.limits.maxStorageBufferBindingSize,maxBufferSize:r.limits.maxBufferSize,maxComputeInvocationsPerWorkgroup:r.limits.maxComputeInvocationsPerWorkgroup,maxComputeWorkgroupSizeX:r.limits.maxComputeWorkgroupSizeX,maxComputeWorkgroupSizeY:r.limits.maxComputeWorkgroupSizeY,maxComputeWorkgroupSizeZ:r.limits.maxComputeWorkgroupSizeZ},requiredFeatures:o};r.features.has("chromium-experimental-timestamp-query-inside-passes")?o.push("chromium-experimental-timestamp-query-inside-passes"):r.features.has("timestamp-query")&&o.push("timestamp-query"),r.features.has("shader-f16")&&o.push("shader-f16"),this.device=await r.requestDevice(n),this.adapterInfo=new fa(await r.requestAdapterInfo()),this.gpuDataManager=Ti(this),this.programManager=new ho(this),this.kernels=new Map,this.kernelPersistentData=new Map,this.kernelCustomData=new Map,Si(t.logLevel,!!t.debug),this.device.onuncapturederror=s=>{s.error instanceof GPUValidationError&&console.error(`An uncaught WebGPU validation error was raised: ${s.error.message}`)},Object.defineProperty(this.env.webgpu,"device",{value:this.device,writable:!1,enumerable:!0,configurable:!1}),Object.defineProperty(this.env.webgpu,"adapter",{value:r,writable:!1,enumerable:!0,configurable:!1}),this.setQueryType()}dispose(){typeof this.querySet<"u"&&this.querySet.destroy(),this.gpuDataManager.dispose()}getCommandEncoder(){return this.commandEncoder||(this.commandEncoder=this.device.createCommandEncoder()),this.commandEncoder}getComputePassEncoder(){if(!this.computePassEncoder){let t=this.getCommandEncoder(),r={};this.queryType==="at-passes"&&(r.timestampWrites={querySet:this.querySet,beginningOfPassWriteIndex:this.pendingDispatchNumber*2,endOfPassWriteIndex:this.pendingDispatchNumber*2+1}),this.computePassEncoder=t.beginComputePass(r)}return this.computePassEncoder}endComputePass(){this.computePassEncoder&&(this.computePassEncoder.end(),this.computePassEncoder=null)}flush(){if(!this.commandEncoder)return;Jt(),this.endComputePass();let t;this.queryType!=="none"&&(this.commandEncoder.resolveQuerySet(this.querySet,0,this.pendingDispatchNumber*2,this.queryResolveBuffer,0),t=this.device.createBuffer({size:this.pendingDispatchNumber*2*8,usage:GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST}),this.pendingQueries.set(t,this.pendingKernels),this.pendingKernels=[],this.commandEncoder.copyBufferToBuffer(this.queryResolveBuffer,0,t,0,this.pendingDispatchNumber*2*8)),this.device.queue.submit([this.commandEncoder.finish()]),this.gpuDataManager.refreshPendingBuffers(),this.commandEncoder=null,this.pendingDispatchNumber=0,this.queryType!=="none"&&t.mapAsync(GPUMapMode.READ).then(()=>{let r=new BigUint64Array(t.getMappedRange()),o=this.pendingQueries.get(t);for(let n=0;n<r.length/2;n++){let s=o[n],u=s.kernelId,c=this.kernels.get(u),a=c.kernelType,f=c.kernelName,g=s.programName,h=s.inputTensorViews,w=s.outputTensorViews,_=r[n*2],v=r[n*2+1];typeof this.queryTimeBase>"u"&&(this.queryTimeBase=_);let $=Number(_-this.queryTimeBase),C=Number(v-this.queryTimeBase);if(!Number.isSafeInteger($)||!Number.isSafeInteger(C))throw new RangeError("incorrect timestamp range");if(this.env.webgpu.profiling?.ondata)this.env.webgpu.profiling.ondata({version:1,inputsMetadata:h.map(x=>({dims:x.dims,dataType:Vt(x.dataType)})),outputsMetadata:w.map(x=>({dims:x.dims,dataType:Vt(x.dataType)})),kernelId:u,kernelType:a,kernelName:f,programName:g,startTime:$,endTime:C});else{let x="";h.forEach((T,E)=>{x+=`input[${E}]: [${T.dims}] | ${Vt(T.dataType)}, `});let S="";w.forEach((T,E)=>{S+=`output[${E}]: [${T.dims}] | ${Vt(T.dataType)}, `}),console.log(`[profiling] kernel "${u}|${a}|${f}|${g}" ${x}${S}execution time: ${C-$} ns`)}ci("GPU",`${g}::${_}::${v}`)}t.unmap(),this.pendingQueries.delete(t)}),Nt()}run(t,r,o,n,s){Jt(t.name);let u=[];for(let S=0;S<r.length;++S){let T=r[S].data;if(T===0)continue;let E=this.gpuDataManager.get(T);if(!E)throw new Error(`no GPU data for input: ${T}`);u.push(E)}let{outputs:c,dispatchGroup:a,programUniforms:f}=t.getRunData(r),g=o.length===0?c.map((S,T)=>T):o;if(g.length!==c.length)throw new Error(`Output size ${g.length} must be equal to ${c.length}.`);let h=[],w=[];for(let S=0;S<c.length;++S){if(!Number.isInteger(g[S])||g[S]<-3||g[S]>=c.length)throw new Error(`Invalid output index: ${g[S]}`);if(g[S]===-3)continue;let T=g[S]===-1,E=g[S]===-2,P=T||E?s(c[S].dataType,c[S].dims):n(g[S],c[S].dataType,c[S].dims);if(h.push(P),P.data===0)continue;let z=this.gpuDataManager.get(P.data);if(!z)throw new Error(`no GPU data for output: ${P.data}`);if(T&&this.temporaryData.push(z),E){let H=this.kernelPersistentData.get(this.currentKernelId);H||(H=[],this.kernelPersistentData.set(this.currentKernelId,H)),H.push(z)}w.push(z)}if(u.length!==r.length||w.length!==h.length){if(w.length===0)return Nt(t.name),h;throw new Error(`Program ${t.name} has zero-sized tensor(s) in inputs or outputs. This is not supported now.`)}let _;if(f){let S=0,T=[];f.forEach(H=>{let K=typeof H.data=="number"?[H.data]:H.data;if(K.length===0)return;let re=H.type===10?2:4,q,ce;H.type===10?(ce=K.length>4?16:K.length>2?8:K.length*re,q=K.length>4?16:re*K.length):(ce=K.length<=2?K.length*re:16,q=16),S=Math.ceil(S/ce)*ce,T.push(S);let Se=H.type===10?8:4;S+=K.length>4?Math.ceil(K.length/Se)*q:K.length*re});let E=16;S=Math.ceil(S/E)*E;let P=new ArrayBuffer(S);f.forEach((H,K)=>{let re=T[K],q=typeof H.data=="number"?[H.data]:H.data;if(H.type===6)new Int32Array(P,re,q.length).set(q);else if(H.type===12)new Uint32Array(P,re,q.length).set(q);else if(H.type===10)new Uint16Array(P,re,q.length).set(q);else if(H.type===1)new Float32Array(P,re,q.length).set(q);else throw new Error(`Unsupported uniform type: ${Vt(H.type)}`)});let z=this.gpuDataManager.create(S,GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM);this.device.queue.writeBuffer(z.buffer,0,P,0,S),this.gpuDataManager.release(z.id),_={offset:0,size:S,buffer:z.buffer}}let v=this.programManager.normalizeDispatchGroupSize(a),$=v[1]===1&&v[2]===1,C=df(t,r,$),x=this.programManager.getArtifact(C);if(x||(x=this.programManager.build(t,v),this.programManager.setArtifact(C,x),Ue("info",()=>`[artifact] key: ${C}, programName: ${t.name}`)),f&&x.uniformVariablesInfo){if(f.length!==x.uniformVariablesInfo.length)throw new Error(`Uniform variables count mismatch: expect ${x.uniformVariablesInfo.length}, got ${f.length} in program "${x.programInfo.name}".`);for(let S=0;S<f.length;S++){let T=f[S],E=T.type,P=typeof T.data=="number"?1:T.data.length,[z,H]=x.uniformVariablesInfo[S];if(E!==z||P!==H)throw new Error(`Uniform variable ${S} mismatch: expect type ${z} with size ${H}, got type ${E} with size ${P} in program "${x.programInfo.name}".`)}}if(Ue("info",()=>`[ProgramManager] run "${t.name}" (key=${C}) with ${v[0]}x${v[1]}x${v[2]}`),this.queryType!=="none"||this.sessionStatus==="capturing"){let S={kernelId:this.currentKernelId,programName:x.programInfo.name,inputTensorViews:r,outputTensorViews:h};this.pendingKernels.push(S),this.sessionStatus==="capturing"&&this.capturedPendingKernels.get(this.currentSessionId).push(S)}return this.programManager.run(x,u,w,v,_),Nt(t.name),h}upload(t,r){this.gpuDataManager.upload(t,r)}memcpy(t,r){this.gpuDataManager.memcpy(t,r)}async download(t,r){await this.gpuDataManager.download(t,r)}alloc(t){return this.gpuDataManager.create(t).id}free(t){return this.gpuDataManager.release(t)}createKernel(t,r,o,n){let s=Fl.get(t);if(!s)throw new Error(`kernel not implemented: ${t}`);let u={kernelType:t,kernelName:n,kernelEntry:s[0],attributes:[s[1],o]};this.kernels.set(r,u)}releaseKernel(t){let r=this.kernelPersistentData.get(t);if(r){for(let o of r)this.gpuDataManager.release(o.id);this.kernelPersistentData.delete(t)}this.kernelCustomData.delete(t),this.kernels.delete(t)}computeKernel(t,r,o){let n=this.kernels.get(t);if(!n)throw new Error(`kernel not created: ${t}`);let s=n.kernelType,u=n.kernelName,c=n.kernelEntry,a=n.attributes;if(this.currentKernelId!==null)throw new Error(`kernel "[${s}] ${u}" is not allowed to be called recursively`);this.currentKernelId=t,a[0]&&(a[1]=a[0](a[1]),a[0]=void 0),Ue("info",()=>`[WebGPU] Start to run kernel "[${s}] ${u}"...`),this.env.trace&&console.timeStamp(`GPU::${s},${u}`);let f=this.env.debug;this.temporaryData=[];try{return f&&this.device.pushErrorScope("validation"),c(r,a[1]),0}catch(g){return o.push(Promise.resolve(`[WebGPU] Kernel "[${s}] ${u}" failed. ${g}`)),1}finally{f&&o.push(this.device.popErrorScope().then(g=>g?`GPU validation error for kernel "[${s}] ${u}": ${g.message}`:null));for(let g of this.temporaryData)this.gpuDataManager.release(g.id);this.temporaryData=[],this.currentKernelId=null}}registerBuffer(t,r,o,n){let s=this.sessionExternalDataMapping.get(t);s||(s=new Map,this.sessionExternalDataMapping.set(t,s));let u=s.get(r),c=this.gpuDataManager.registerExternalBuffer(o,n,u?.[1]);return s.set(r,[c,o]),c}unregisterBuffers(t){let r=this.sessionExternalDataMapping.get(t);r&&(r.forEach(o=>this.gpuDataManager.unregisterExternalBuffer(o[1])),this.sessionExternalDataMapping.delete(t))}getBuffer(t){let r=this.gpuDataManager.get(t);if(!r)throw new Error(`no GPU data for buffer: ${t}`);return r.buffer}createDownloader(t,r,o){return async()=>{let n=await Lo(this,t,r);return xi(n.buffer,o)}}writeTimestamp(t){this.queryType==="inside-passes"&&this.computePassEncoder.writeTimestamp(this.querySet,t)}setQueryType(){this.queryType="none",(this.env.webgpu.profiling?.mode==="default"||(typeof this.env.trace>"u"?this.env.wasm.trace:this.env.trace))&&(this.device.features.has("chromium-experimental-timestamp-query-inside-passes")?this.queryType="inside-passes":this.device.features.has("timestamp-query")&&(this.queryType="at-passes"),this.queryType!=="none"&&typeof this.querySet>"u"&&(this.querySet=this.device.createQuerySet({type:"timestamp",count:this.maxDispatchNumber*2}),this.queryResolveBuffer=this.device.createBuffer({size:this.maxDispatchNumber*2*8,usage:GPUBufferUsage.COPY_SRC|GPUBufferUsage.QUERY_RESOLVE})))}captureBegin(){Ue("info","captureBegin"),this.capturedCommandList.get(this.currentSessionId)||this.capturedCommandList.set(this.currentSessionId,[]),this.capturedPendingKernels.get(this.currentSessionId)||this.capturedPendingKernels.set(this.currentSessionId,[]),this.flush(),this.sessionStatus="capturing"}captureEnd(){Ue("info","captureEnd"),this.flush(),this.sessionStatus="default"}replay(){Ue("info","replay"),this.sessionStatus="replaying";let t=this.capturedCommandList.get(this.currentSessionId),r=this.capturedPendingKernels.get(this.currentSessionId),o=t.length;this.pendingKernels=[];for(let n=0;n<o;n++){let s=this.getComputePassEncoder(),u=t[n];this.writeTimestamp(this.pendingDispatchNumber*2),s.setPipeline(u.computePipeline),s.setBindGroup(0,u.bindGroup),s.dispatchWorkgroups(...u.dispatchGroup),this.writeTimestamp(this.pendingDispatchNumber*2+1),this.pendingDispatchNumber++,this.queryType!=="none"&&this.pendingKernels.push(r[n]),(this.pendingDispatchNumber>=this.maxDispatchNumber||this.queryType==="at-passes")&&this.endComputePass(),this.pendingDispatchNumber>=this.maxDispatchNumber&&this.flush()}this.flush(),this.sessionStatus="default"}onReleaseSession(t){this.unregisterBuffers(t),this.capturedCommandList.has(t)&&this.capturedCommandList.delete(t),this.capturedPendingKernels.has(t)&&this.capturedPendingKernels.delete(t),this.gpuDataManager.onReleaseSession(t)}onRunStart(t){this.currentSessionId=t,this.setQueryType()}}});var Yl={};Vn(Yl,{init:()=>cf});var Fr,ha,cf,Zl=Z(()=>{"use strict";ve();ql();Wt();Ee();Fr=class e{constructor(t,r,o,n){this.module=t;this.dataType=r;this.data=o;this.dims=n}getFloat32Array(){if(this.dataType!==1)throw new Error("Invalid data type");let t=B.size(this.dims);return t===0?new Float32Array:new Float32Array(this.module.HEAP8.buffer,this.data,t)}getBigInt64Array(){if(this.dataType!==7)throw new Error("Invalid data type");let t=B.size(this.dims);return t===0?new BigInt64Array:new BigInt64Array(this.module.HEAP8.buffer,this.data,t)}getInt32Array(){if(this.dataType!==6)throw new Error("Invalid data type");let t=B.size(this.dims);return t===0?new Int32Array:new Int32Array(this.module.HEAP8.buffer,this.data,t)}reshape(t){if(B.size(t)!==B.size(this.dims))throw new Error("Invalid new shape");return new e(this.module,this.dataType,this.data,t)}},ha=class{constructor(t,r,o){this.module=t;this.backend=r;this.customDataOffset=0;this.customDataSize=0;this.adapterInfo=r.adapterInfo;let n=t.HEAPU32,s=o>>>2;this.opKernelContext=n[s++];let u=n[s++];this.outputCount=n[s++],this.customDataOffset=n[s++],this.customDataSize=n[s++];let c=[];for(let a=0;a<u;a++){let f=n[s++],g=n[s++],h=n[s++],w=[];for(let _=0;_<h;_++)w.push(n[s++]);c.push(new Fr(t,f,g,w))}this.inputs=c}get kernelCustomData(){return this.backend.currentKernelCustomData}get customDataBuffer(){return this.module.HEAPU8.subarray(this.customDataOffset,this.customDataOffset+this.customDataSize)}getMaxComputeWorkgroupSizes(){return[this.backend.device.limits.maxComputeWorkgroupSizeX,this.backend.device.limits.maxComputeWorkgroupSizeY,this.backend.device.limits.maxComputeWorkgroupSizeZ]}getMaxComputeWorkgroupStoragesize(){return this.backend.device.limits.maxComputeWorkgroupStorageSize}compute(t,r){let o=r?.inputs?.map(c=>typeof c=="number"?this.inputs[c]:c)??this.inputs,n=r?.outputs??[],s=(c,a,f)=>new Fr(this.module,a,this.output(c,f),f),u=(c,a)=>{let f=Qt(c);if(!f)throw new Error(`Unsupported data type: ${c}`);let g=f*B.size(a),h=g>0?this.backend.gpuDataManager.create(g).id:0;return new Fr(this.module,c,h,a)};return this.backend.run(t,o,n,s,u)}output(t,r){let o=this.module.stackSave();try{let n=this.module.stackAlloc((1+r.length)*4),s=n>>2;this.module.HEAPU32[s++]=r.length;for(let u=0;u<r.length;u++)this.module.HEAPU32[s++]=r[u];return this.module._JsepOutput(this.opKernelContext,t,n)}catch(n){throw new Error(`Failed to generate kernel\'s output[${t}] with dims [${r}]. If you are running with pre-allocated output, please make sure the output type/dims are correct. Error: ${n}`)}finally{this.module.stackRestore(o)}}},cf=async(e,t,r,o)=>{let n=t.jsepInit;if(!n)throw new Error("Failed to initialize JSEP. The WebAssembly module is not built with JSEP support.");if(e==="webgpu"){let s=new go;await s.initialize(r,o),n("webgpu",[s,u=>s.alloc(u),u=>s.free(u),(u,c,a,f=!1)=>{if(f)Ue("verbose",()=>`[WebGPU] jsepCopyGpuToGpu: src=${u}, dst=${c}, size=${a}`),s.memcpy(u,c);else{Ue("verbose",()=>`[WebGPU] jsepCopyCpuToGpu: dataOffset=${u}, gpuDataId=${c}, size=${a}`);let g=t.HEAPU8.subarray(u>>>0,(u>>>0)+a);s.upload(c,g)}},async(u,c,a)=>{Ue("verbose",()=>`[WebGPU] jsepCopyGpuToCpu: gpuDataId=${u}, dataOffset=${c}, size=${a}`),await s.download(u,()=>t.HEAPU8.subarray(c>>>0,(c>>>0)+a))},(u,c,a)=>s.createKernel(u,c,a,t.UTF8ToString(t._JsepGetNodeName(c))),u=>s.releaseKernel(u),(u,c,a,f)=>{Ue("verbose",()=>`[WebGPU] jsepRun: sessionHandle=${a}, kernel=${u}, contextDataOffset=${c}`);let g=new ha(t,s,c);return s.computeKernel(u,g,f)},()=>s.captureBegin(),()=>s.captureEnd(),()=>s.replay()])}else n("webnn")}});var Ya;Ya=Va();var _c=ja(),Bo,Mo=!1,Gn=!1,qa=!1,$c=e=>{if(e===1)return!1;if(typeof SharedArrayBuffer>"u")return typeof self<"u"&&!self.crossOriginIsolated&&console.warn("env.wasm.numThreads is set to "+e+", but this will not work unless you enable crossOriginIsolated mode. See https://web.dev/cross-origin-isolation-guide/ for more info."),!1;typeof process<"u"&&process.versions&&process.versions.node&&console.warn("env.wasm.numThreads is set to "+e+", however, currently onnxruntime-web does not support multi-threads in Node.js. Please consider using onnxruntime-node for performance critical scenarios.");try{return typeof MessageChannel<"u"&&new MessageChannel().port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]))}catch{return!1}},Sc=()=>{try{return WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,30,1,28,0,65,0,253,15,253,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,253,186,1,26,11]))}catch{return!1}},xc=(e,t)=>e?t?"ort-wasm-simd-threaded.wasm":"ort-wasm-simd.wasm":t?"ort-wasm-threaded.wasm":"ort-wasm.wasm",Za=async e=>{if(Mo)return Promise.resolve();if(Gn)throw new Error("multiple calls to \'initializeWebAssembly()\' detected.");if(qa)throw new Error("previous call to \'initializeWebAssembly()\' failed.");Gn=!0;let t=e.initTimeout,r=e.numThreads,o=e.simd,n=$c(r),s=o&&Sc(),u=e.wasmPaths,c=typeof u=="string"?u:void 0,a=xc(s,n),f=typeof u=="object"?u[a]:void 0,g=!1,h=[];if(t>0&&h.push(new Promise(w=>{setTimeout(()=>{g=!0,w()},t)})),h.push(new Promise((w,_)=>{let v=n?_c:Ya,$={locateFile:(C,x)=>{if(n&&C.endsWith(".worker.js")&&typeof Blob<"u")return URL.createObjectURL(new Blob([Ka()],{type:"text/javascript"}));if(C.endsWith(".wasm")){if(f)return f;let S=c??x;return a==="ort-wasm-simd.wasm"?S+"ort-wasm-simd.jsep.wasm":a==="ort-wasm-simd-threaded.wasm"?S+"ort-wasm-simd-threaded.jsep.wasm":S+a}return x+C}};if(n)if($.numThreads=r,typeof Blob>"u")$.mainScriptUrlOrBlob=(void 0)(__dirname,"ort-wasm-threaded.js");else{let C=`var ortWasmThreaded=${v.toString()};`;$.mainScriptUrlOrBlob=new Blob([C],{type:"text/javascript"})}v($).then(C=>{Gn=!1,Mo=!0,Bo=C,w()},C=>{Gn=!1,qa=!0,_(C)})})),await Promise.race(h),g)throw new Error(`WebAssembly backend initializing failed due to timeout: ${t}ms`)},Le=()=>{if(Mo&&Bo)return Bo;throw new Error("WebAssembly is not initialized yet.")};var Fe=(e,t)=>{let r=Le(),o=r.lengthBytesUTF8(e)+1,n=r._malloc(o);return r.stringToUTF8(e,n,o),t.push(n),n},Nr=(e,t,r,o)=>{if(typeof e=="object"&&e!==null){if(r.has(e))throw new Error("Circular reference in options");r.add(e)}Object.entries(e).forEach(([n,s])=>{let u=t?t+n:n;if(typeof s=="object")Nr(s,u+".",r,o);else if(typeof s=="string"||typeof s=="number")o(u,s.toString());else if(typeof s=="boolean")o(u,s?"1":"0");else throw new Error(`Can\'t handle extra config type: ${typeof s}`)})},ze=e=>{let t=Le(),r=t.stackSave();try{let o=t.stackAlloc(8);t._OrtGetLastError(o,o+4);let n=t.HEAP32[o/4],s=t.HEAPU32[o/4+1],u=s?t.UTF8ToString(s):"";throw new Error(`${e} ERROR_CODE: ${n}, ERROR_MESSAGE: ${u}`)}finally{t.stackRestore(r)}};var Xa=e=>{let t=Le(),r=0,o=[],n=e||{};try{if(e?.logSeverityLevel===void 0)n.logSeverityLevel=2;else if(typeof e.logSeverityLevel!="number"||!Number.isInteger(e.logSeverityLevel)||e.logSeverityLevel<0||e.logSeverityLevel>4)throw new Error(`log serverity level is not valid: ${e.logSeverityLevel}`);if(e?.logVerbosityLevel===void 0)n.logVerbosityLevel=0;else if(typeof e.logVerbosityLevel!="number"||!Number.isInteger(e.logVerbosityLevel))throw new Error(`log verbosity level is not valid: ${e.logVerbosityLevel}`);e?.terminate===void 0&&(n.terminate=!1);let s=0;return e?.tag!==void 0&&(s=Fe(e.tag,o)),r=t._OrtCreateRunOptions(n.logSeverityLevel,n.logVerbosityLevel,!!n.terminate,s),r===0&&ze("Can\'t create run options."),e?.extra!==void 0&&Nr(e.extra,"",new WeakSet,(u,c)=>{let a=Fe(u,o),f=Fe(c,o);t._OrtAddRunConfigEntry(r,a,f)!==0&&ze(`Can\'t set a run config entry: ${u} - ${c}.`)}),[r,o]}catch(s){throw r!==0&&t._OrtReleaseRunOptions(r),o.forEach(u=>t._free(u)),s}};var Cc=e=>{switch(e){case"disabled":return 0;case"basic":return 1;case"extended":return 2;case"all":return 99;default:throw new Error(`unsupported graph optimization level: ${e}`)}},Ac=e=>{switch(e){case"sequential":return 0;case"parallel":return 1;default:throw new Error(`unsupported execution mode: ${e}`)}},Ic=e=>{e.extra||(e.extra={}),e.extra.session||(e.extra.session={});let t=e.extra.session;t.use_ort_model_bytes_directly||(t.use_ort_model_bytes_directly="1"),e.executionProviders&&e.executionProviders.some(r=>(typeof r=="string"?r:r.name)==="webgpu")&&(e.enableMemPattern=!1)},Tc=(e,t,r)=>{for(let o of t){let n=typeof o=="string"?o:o.name;switch(n){case"webnn":if(n="WEBNN",typeof o!="string"){let u=o;if(u?.deviceType){let c=Fe("deviceType",r),a=Fe(u.deviceType,r);Le()._OrtAddSessionConfigEntry(e,c,a)!==0&&ze(`Can\'t set a session config entry: \'deviceType\' - ${u.deviceType}.`)}if(u?.numThreads){let c=u.numThreads;(typeof c!="number"||!Number.isInteger(c)||c<0)&&(c=0);let a=Fe("numThreads",r),f=Fe(c.toString(),r);Le()._OrtAddSessionConfigEntry(e,a,f)!==0&&ze(`Can\'t set a session config entry: \'numThreads\' - ${u.numThreads}.`)}if(u?.powerPreference){let c=Fe("powerPreference",r),a=Fe(u.powerPreference,r);Le()._OrtAddSessionConfigEntry(e,c,a)!==0&&ze(`Can\'t set a session config entry: \'powerPreference\' - ${u.powerPreference}.`)}}break;case"webgpu":if(n="JS",typeof o!="string"){let u=o;if(u?.preferredLayout){if(u.preferredLayout!=="NCHW"&&u.preferredLayout!=="NHWC")throw new Error(`preferredLayout must be either \'NCHW\' or \'NHWC\': ${u.preferredLayout}`);let c=Fe("preferredLayout",r),a=Fe(u.preferredLayout,r);Le()._OrtAddSessionConfigEntry(e,c,a)!==0&&ze(`Can\'t set a session config entry: \'preferredLayout\' - ${u.preferredLayout}.`)}}break;case"wasm":case"cpu":continue;default:throw new Error(`not supported execution provider: ${n}`)}let s=Fe(n,r);Le()._OrtAppendExecutionProvider(e,s)!==0&&ze(`Can\'t append execution provider: ${n}.`)}},Qa=e=>{let t=Le(),r=0,o=[],n=e||{};Ic(n);try{let s=Cc(n.graphOptimizationLevel??"all"),u=Ac(n.executionMode??"sequential"),c=typeof n.logId=="string"?Fe(n.logId,o):0,a=n.logSeverityLevel??2;if(!Number.isInteger(a)||a<0||a>4)throw new Error(`log serverity level is not valid: ${a}`);let f=n.logVerbosityLevel??0;if(!Number.isInteger(f)||f<0||f>4)throw new Error(`log verbosity level is not valid: ${f}`);let g=typeof n.optimizedModelFilePath=="string"?Fe(n.optimizedModelFilePath,o):0;if(r=t._OrtCreateSessionOptions(s,!!n.enableCpuMemArena,!!n.enableMemPattern,u,!!n.enableProfiling,0,c,a,f,g),r===0&&ze("Can\'t create session options."),n.executionProviders&&Tc(r,n.executionProviders,o),n.enableGraphCapture!==void 0){if(typeof n.enableGraphCapture!="boolean")throw new Error(`enableGraphCapture must be a boolean value: ${n.enableGraphCapture}`);let h=Fe("enableGraphCapture",o),w=Fe(n.enableGraphCapture.toString(),o);t._OrtAddSessionConfigEntry(r,h,w)!==0&&ze(`Can\'t set a session config entry: \'enableGraphCapture\' - ${n.enableGraphCapture}.`)}if(n.freeDimensionOverrides)for(let[h,w]of Object.entries(n.freeDimensionOverrides)){if(typeof h!="string")throw new Error(`free dimension override name must be a string: ${h}`);if(typeof w!="number"||!Number.isInteger(w)||w<0)throw new Error(`free dimension override value must be a non-negative integer: ${w}`);let _=Fe(h,o);t._OrtAddFreeDimensionOverride(r,_,w)!==0&&ze(`Can\'t set a free dimension override: ${h} - ${w}.`)}return n.extra!==void 0&&Nr(n.extra,"",new WeakSet,(h,w)=>{let _=Fe(h,o),v=Fe(w,o);t._OrtAddSessionConfigEntry(r,_,v)!==0&&ze(`Can\'t set a session config entry: ${h} - ${w}.`)}),[r,o]}catch(s){throw r!==0&&t._OrtReleaseSessionOptions(r),o.forEach(u=>t._free(u)),s}};ve();var ei=async e=>{if(typeof e=="string")if(typeof process<"u"&&process.versions&&process.versions.node)try{return new Uint8Array(await(void 0)(e))}catch(t){if(t.code==="ERR_FS_FILE_TOO_LARGE"){let r=(void 0)(e),o=[];for await(let n of r)o.push(n);return new Uint8Array(Buffer.concat(o))}throw t}else{let t=await fetch(e);if(!t.ok)throw new Error(`failed to load external data file: ${e}`);let r=t.headers.get("Content-Length"),o=r?parseInt(r,10):0;if(o<1073741824)return new Uint8Array(await t.arrayBuffer());{if(!t.body)throw new Error(`failed to load external data file: ${e}, no response body.`);let n=t.body.getReader(),s;try{s=new ArrayBuffer(o)}catch(c){if(c instanceof RangeError){let a=Math.ceil(o/65536);s=new WebAssembly.Memory({initial:a,maximum:a}).buffer}else throw c}let u=0;for(;;){let{done:c,value:a}=await n.read();if(c)break;let f=a.byteLength;new Uint8Array(s,u,f).set(a),u+=f}return new Uint8Array(s,0,o)}}else return e instanceof Blob?new Uint8Array(await e.arrayBuffer()):e instanceof Uint8Array?e:new Uint8Array(e)};var pf=(e,t)=>{Le()._OrtInit(e,t)!==0&&ze("Can\'t initialize onnxruntime.")},Ql=async e=>{pf(e.wasm.numThreads,Wr(e.logLevel))},Jl=async(e,t)=>{{let r=(Zl(),Xt(Yl)).init;if(t==="webgpu"){if(typeof navigator>"u"||!navigator.gpu)throw new Error("WebGPU is not supported in current environment");let o=e.webgpu.adapter;if(o){if(typeof o.limits!="object"||typeof o.features!="object"||typeof o.requestDevice!="function")throw new Error("Invalid GPU adapter set in `env.webgpu.adapter`. It must be a GPUAdapter object.")}else{let n=e.webgpu.powerPreference;if(n!==void 0&&n!=="low-power"&&n!=="high-performance")throw new Error(`Invalid powerPreference setting: "${n}"`);let s=e.webgpu.forceFallbackAdapter;if(s!==void 0&&typeof s!="boolean")throw new Error(`Invalid forceFallbackAdapter setting: "${s}"`);if(o=await navigator.gpu.requestAdapter({powerPreference:n,forceFallbackAdapter:s}),!o)throw new Error(\'Failed to get GPU adapter. You may need to enable flag "--enable-unsafe-webgpu" if you are using Chrome.\')}if(!e.wasm.simd)throw new Error("Not supported for WebGPU=ON and SIMD=OFF. Please set `env.wasm.simd` to true when using `webgpu` EP");await r("webgpu",Le(),e,o)}if(t==="webnn"){if(typeof navigator>"u"||!navigator.ml)throw new Error("WebNN is not supported in current environment");await r("webnn",Le(),e)}}},rr=new Map,mf=e=>{let t=Le(),r=t.stackSave();try{let o=t.stackAlloc(8);return t._OrtGetInputOutputCount(e,o,o+4)!==0&&ze("Can\'t get session input/output count."),[t.HEAP32[o/4],t.HEAP32[o/4+1]]}finally{t.stackRestore(r)}},ga=e=>{let t=Le(),r=t._malloc(e.byteLength);if(r===0)throw new Error(`Can\'t create a session. failed to allocate a buffer of size ${e.byteLength}.`);return t.HEAPU8.set(e,r),[r,e.byteLength]},ed=async(e,t)=>{let r,o,n=Le();Array.isArray(e)?[r,o]=e:e.buffer===n.HEAPU8.buffer?[r,o]=[e.byteOffset,e.byteLength]:[r,o]=ga(e);let s=0,u=0,c=0,a=[],f=[],g=[];try{if([u,a]=Qa(t),t?.externalData&&n.mountExternalData){let S=[];for(let T of t.externalData){let E=typeof T=="string"?T:T.path;S.push(ei(typeof T=="string"?T:T.data).then(P=>{n.mountExternalData(E,P)}))}await Promise.all(S)}s=await n._OrtCreateSession(r,o,u),s===0&&ze("Can\'t create a session.");let[h,w]=mf(s),_=!!t?.enableGraphCapture,v=[],$=[],C=[];for(let S=0;S<h;S++){let T=n._OrtGetInputName(s,S);T===0&&ze("Can\'t get an input name."),f.push(T),v.push(n.UTF8ToString(T))}for(let S=0;S<w;S++){let T=n._OrtGetOutputName(s,S);T===0&&ze("Can\'t get an output name."),g.push(T);let E=n.UTF8ToString(T);$.push(E);{if(_&&t?.preferredOutputLocation===void 0){C.push("gpu-buffer");continue}let P=typeof t?.preferredOutputLocation=="string"?t.preferredOutputLocation:t?.preferredOutputLocation?.[E]??"cpu";if(P!=="cpu"&&P!=="cpu-pinned"&&P!=="gpu-buffer")throw new Error(`Not supported preferred output location: ${P}.`);if(_&&P!=="gpu-buffer")throw new Error(`Not supported preferred output location: ${P}. Only \'gpu-buffer\' location is supported when enableGraphCapture is true.`);C.push(P)}}let x=null;return C.some(S=>S==="gpu-buffer")&&(c=n._OrtCreateBinding(s),c===0&&ze("Can\'t create IO binding."),x={handle:c,outputPreferredLocations:C,outputPreferredLocationsEncoded:C.map(S=>Uo(S))}),rr.set(s,[s,f,g,x,_,!1]),[s,v,$]}catch(h){throw f.forEach(w=>n._OrtFree(w)),g.forEach(w=>n._OrtFree(w)),c!==0&&n._OrtReleaseBinding(c),s!==0&&n._OrtReleaseSession(s),h}finally{n._free(r),u!==0&&n._OrtReleaseSessionOptions(u),a.forEach(h=>n._free(h)),n.unmountExternalData?.()}},td=e=>{let t=Le(),r=rr.get(e);if(!r)throw new Error(`cannot release session. invalid session id: ${e}`);let[o,n,s,u,c]=r;u&&(c&&t._OrtClearBoundOutputs(u.handle),t._OrtReleaseBinding(u.handle)),t.jsepOnReleaseSession?.(e),n.forEach(a=>t._OrtFree(a)),s.forEach(a=>t._OrtFree(a)),t._OrtReleaseSession(o),rr.delete(e)},Xl=(e,t,r,o,n,s=!1)=>{if(!e){t.push(0);return}let u=Le(),c=e[0],a=e[1],f=e[3],g,h;if(c==="string"&&f==="gpu-buffer")throw new Error("String tensor is not supported on GPU.");if(s&&f!=="gpu-buffer")throw new Error(`External buffer must be provided for input/output index ${n} when enableGraphCapture is true.`);if(f==="gpu-buffer"){let v=e[2].gpuBuffer,$=Qt(zo(c));h=a.reduce((x,S)=>x*S,1)*$;let C=u.jsepRegisterBuffer;if(!C)throw new Error(\'Tensor location "gpu-buffer" is not supported without using WebGPU.\');g=C(o,n,v,h)}else{let v=e[2];if(Array.isArray(v)){h=4*v.length,g=u._malloc(h),r.push(g);let $=g/4;for(let C=0;C<v.length;C++){if(typeof v[C]!="string")throw new TypeError(`tensor data at index ${C} is not a string`);u.HEAPU32[$++]=Fe(v[C],r)}}else h=v.byteLength,g=u._malloc(h),r.push(g),u.HEAPU8.set(new Uint8Array(v.buffer,v.byteOffset,h),g)}let w=u.stackSave(),_=u.stackAlloc(4*a.length);try{let v=_/4;a.forEach(C=>u.HEAP32[v++]=C);let $=u._OrtCreateTensor(zo(c),g,h,_,a.length,Uo(f));$===0&&ze(`Can\'t create tensor for input/output. session=${o}, index=${n}.`),t.push($)}finally{u.stackRestore(w)}},rd=async(e,t,r,o,n,s)=>{let u=Le(),c=rr.get(e);if(!c)throw new Error(`cannot run inference. invalid session id: ${e}`);let a=c[0],f=c[1],g=c[2],h=c[3],w=c[4],_=c[5],v=t.length,$=o.length,C=0,x=[],S=[],T=[],E=[],P=u.stackSave(),z=u.stackAlloc(v*4),H=u.stackAlloc(v*4),K=u.stackAlloc($*4),re=u.stackAlloc($*4);try{[C,x]=Xa(s);for(let W=0;W<v;W++)Xl(r[W],S,E,e,t[W],w);for(let W=0;W<$;W++)Xl(n[W],T,E,e,v+o[W],w);let q=z/4,ce=H/4,Se=K/4,Pe=re/4;for(let W=0;W<v;W++)u.HEAPU32[q++]=S[W],u.HEAPU32[ce++]=f[t[W]];for(let W=0;W<$;W++)u.HEAPU32[Se++]=T[W],u.HEAPU32[Pe++]=g[o[W]];if(h&&!_){let{handle:W,outputPreferredLocations:Ce,outputPreferredLocationsEncoded:we}=h;if(f.length!==v)throw new Error(`input count from feeds (${v}) is expected to be always equal to model\'s input count (${f.length}).`);for(let he=0;he<v;he++){let ne=t[he];await u._OrtBindInput(W,f[ne],S[he])!==0&&ze(`Can\'t bind input[${he}] for session=${e}.`)}for(let he=0;he<$;he++){let ne=o[he];n[he]?.[3]?u._OrtBindOutput(W,g[ne],T[he],0)!==0&&ze(`Can\'t bind pre-allocated output[${he}] for session=${e}.`):u._OrtBindOutput(W,g[ne],0,we[ne])!==0&&ze(`Can\'t bind output[${he}] to ${Ce[he]} for session=${e}.`)}rr.set(e,[a,f,g,h,w,!0])}u.jsepOnRunStart?.(a);let U;h?U=await u._OrtRunWithBinding(a,h.handle,$,K,C):U=await u._OrtRun(a,H,z,v,re,$,K,C),U!==0&&ze("failed to call OrtRun().");let Q=[];for(let W=0;W<$;W++){let Ce=u.HEAPU32[K/4+W];if(Ce===T[W]){Q.push(n[W]);continue}let we=u.stackSave(),he=u.stackAlloc(4*4),ne=!1,be,me=0;try{u._OrtGetTensorData(Ce,he,he+4,he+8,he+12)!==0&&ze(`Can\'t access output tensor data on index ${W}.`);let G=he/4,ee=u.HEAPU32[G++];me=u.HEAPU32[G++];let _e=u.HEAPU32[G++],Xe=u.HEAPU32[G++],qe=[];for(let je=0;je<Xe;je++)qe.push(u.HEAPU32[_e/4+je]);u._OrtFree(_e);let Qe=qe.reduce((je,Ge)=>je*Ge,1);be=Vt(ee);let He=h?.outputPreferredLocations[o[W]];if(be==="string"){if(He==="gpu-buffer")throw new Error("String tensor is not supported on GPU.");let je=[],Ge=me/4;for(let et=0;et<Qe;et++){let Dt=u.HEAPU32[Ge++],lt=et===Qe-1?void 0:u.HEAPU32[Ge]-Dt;je.push(u.UTF8ToString(Dt,lt))}Q.push([be,qe,je,"cpu"])}else if(He==="gpu-buffer"&&Qe>0){let je=u.jsepGetBuffer;if(!je)throw new Error(\'preferredLocation "gpu-buffer" is not supported without using WebGPU.\');let Ge=je(me),et=Qt(ee);if(et===void 0||!Ja(be))throw new Error(`Unsupported data type: ${be}`);ne=!0,Q.push([be,qe,{gpuBuffer:Ge,download:u.jsepCreateDownloader(Ge,Qe*et,be),dispose:()=>{u._OrtReleaseTensor(Ce)}},"gpu-buffer"])}else{let je=Hn(be),Ge=new je(Qe);new Uint8Array(Ge.buffer,Ge.byteOffset,Ge.byteLength).set(u.HEAPU8.subarray(me,me+Ge.byteLength)),Q.push([be,qe,Ge,"cpu"])}}finally{u.stackRestore(we),be==="string"&&me&&u._free(me),ne||u._OrtReleaseTensor(Ce)}}return h&&!w&&(u._OrtClearBoundOutputs(h.handle),rr.set(e,[a,f,g,h,w,!1])),Q}finally{u.stackRestore(P),S.forEach(q=>u._OrtReleaseTensor(q)),T.forEach(q=>u._OrtReleaseTensor(q)),E.forEach(q=>u._free(q)),C!==0&&u._OrtReleaseRunOptions(C),x.forEach(q=>u._free(q))}},nd=e=>{let t=Le(),r=rr.get(e);if(!r)throw new Error("invalid session id");let o=r[0],n=t._OrtEndProfiling(o);n===0&&ze("Can\'t get an profile file name."),t._OrtFree(n)},od=e=>{let t=[];for(let r of e){let o=r[2];!Array.isArray(o)&&"buffer"in o&&t.push(o.buffer)}return t};self.onmessage=e=>{let{type:t,in:r}=e.data;try{switch(t){case"init-wasm":Za(r.wasm).then(()=>{Ql(r).then(()=>{postMessage({type:t})},o=>{postMessage({type:t,err:o})})},o=>{postMessage({type:t,err:o})});break;case"init-ep":{let{epName:o,env:n}=r;Jl(n,o).then(()=>{postMessage({type:t})},s=>{postMessage({type:t,err:s})});break}case"copy-from":{let{buffer:o}=r,n=ga(o);postMessage({type:t,out:n});break}case"create":{let{model:o,options:n}=r;ed(o,n).then(s=>{postMessage({type:t,out:s})},s=>{postMessage({type:t,err:s})});break}case"release":td(r),postMessage({type:t});break;case"run":{let{sessionId:o,inputIndices:n,inputs:s,outputIndices:u,options:c}=r;rd(o,n,s,u,new Array(u.length).fill(null),c).then(a=>{a.some(f=>f[3]!=="cpu")?postMessage({type:t,err:"Proxy does not support non-cpu tensor location."}):postMessage({type:t,out:a},od([...s,...a]))},a=>{postMessage({type:t,err:a})});break}case"end-profiling":nd(r),postMessage({type:t});break;default:}}catch(o){postMessage({type:t,err:o})}};})();\n/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n'});var zn,fr,ni,Ts,Ss,Rl,zl,lo,co,LT,$s,H0,j0,q0,K0,Y0,X0,Z0,Ml=D(()=>{"use strict";Rt();G0();ao();zn=()=>!!_e.wasm.proxy&&typeof document<"u",ni=!1,Ts=!1,Ss=!1,zl=new Map,lo=(r,e)=>{let n=zl.get(r);n?n.push(e):zl.set(r,[e])},co=()=>{if(ni||!Ts||Ss||!fr)throw new Error("worker not ready")},LT=r=>{switch(r.data.type){case"init-wasm":ni=!1,r.data.err?(Ss=!0,Rl[1](r.data.err)):(Ts=!0,Rl[0]());break;case"init-ep":case"copy-from":case"create":case"release":case"run":case"end-profiling":{let e=zl.get(r.data.type);r.data.err?e.shift()[1](r.data.err):e.shift()[0](r.data.out);break}default:}},$s=typeof document<"u"?document?.currentScript?.src:void 0,H0=async()=>{if(!Ts){if(ni)throw new Error("multiple calls to 'initWasm()' detected.");if(Ss)throw new Error("previous call to 'initWasm()' failed.");if(ni=!0,zn())return _e.wasm.wasmPaths===void 0&&$s&&$s.indexOf("blob:")!==0&&(_e.wasm.wasmPaths=$s.substr(0,+$s.lastIndexOf("/")+1)),new Promise((r,e)=>{fr?.terminate();let n=URL.createObjectURL(new Blob([W0()],{type:"text/javascript"}));fr=new Worker(n,{name:"ort-wasm-proxy-worker"}),fr.onerror=o=>e(o),fr.onmessage=LT,URL.revokeObjectURL(n),Rl=[r,e];let t={type:"init-wasm",in:_e};fr.postMessage(t)});try{await eg(_e.wasm),await z0(_e),Ts=!0}catch(r){throw Ss=!0,r}finally{ni=!1}}},j0=async r=>{if(zn())return co(),new Promise((e,n)=>{lo("init-ep",[e,n]);let t={type:"init-ep",in:{epName:r,env:_e}};fr.postMessage(t)});await M0(_e,r)},q0=async r=>zn()?(co(),new Promise((e,n)=>{lo("copy-from",[e,n]);let t={type:"copy-from",in:{buffer:r}};fr.postMessage(t,[r.buffer])})):Bl(r),K0=async(r,e)=>{if(zn()){if(e?.preferredOutputLocation)throw new Error('session option "preferredOutputLocation" is not supported for proxy.');return co(),new Promise((n,t)=>{lo("create",[n,t]);let o={type:"create",in:{model:r,options:{...e}}},i=[];r instanceof Uint8Array&&i.push(r.buffer),fr.postMessage(o,i)})}else return N0(r,e)},Y0=async r=>{if(zn())return co(),new Promise((e,n)=>{lo("release",[e,n]);let t={type:"release",in:r};fr.postMessage(t)});L0(r)},X0=async(r,e,n,t,o,i)=>{if(zn()){if(n.some(s=>s[3]!=="cpu"))throw new Error("input tensor on GPU is not supported for proxy.");if(o.some(s=>s))throw new Error("pre-allocated output tensor is not supported for proxy.");return co(),new Promise((s,a)=>{lo("run",[s,a]);let u=n,l={type:"run",in:{sessionId:r,inputIndices:e,inputs:u,outputIndices:t,options:i}};fr.postMessage(l,V0(u))})}else return U0(r,e,n,t,o,i)},Z0=async r=>{if(zn())return co(),new Promise((e,n)=>{lo("end-profiling",[e,n]);let t={type:"end-profiling",in:r};fr.postMessage(t)});F0(r)}});var J0,UT,Is,Q0=D(()=>{"use strict";Rt();Ml();Ce();ol();J0=(r,e)=>{switch(r.location){case"cpu":return[r.type,r.dims,r.data,"cpu"];case"gpu-buffer":return[r.type,r.dims,{gpuBuffer:r.gpuBuffer},"gpu-buffer"];default:throw new Error(`invalid data location: ${r.location} for ${e()}`)}},UT=r=>{switch(r[3]){case"cpu":return new St(r[0],r[2],r[1]);case"gpu-buffer":{let e=r[0];if(!Qa(e))throw new Error(`not supported data type: ${e} for deserializing GPU tensor`);let{gpuBuffer:n,download:t,dispose:o}=r[2];return St.fromGpuBuffer(n,{dataType:e,dims:r[1],download:t,dispose:o})}default:throw new Error(`invalid data location: ${r[3]}`)}},Is=class{async fetchModelAndCopyToWasmMemory(e){return q0(await Jo(e))}async loadModel(e,n){jt();let t;typeof e=="string"?typeof process<"u"&&process.versions&&process.versions.node?t=await Jo(e):t=await this.fetchModelAndCopyToWasmMemory(e):t=e,[this.sessionId,this.inputNames,this.outputNames]=await K0(t,n),Ft()}async dispose(){return Y0(this.sessionId)}async run(e,n,t){jt();let o=[],i=[];Object.entries(e).forEach(h=>{let y=h[0],b=h[1],w=this.inputNames.indexOf(y);if(w===-1)throw new Error(`invalid input '${y}'`);o.push(b),i.push(w)});let s=[],a=[];Object.entries(n).forEach(h=>{let y=h[0],b=h[1],w=this.outputNames.indexOf(y);if(w===-1)throw new Error(`invalid output '${y}'`);s.push(b),a.push(w)});let u=o.map((h,y)=>J0(h,()=>`input "${this.inputNames[i[y]]}"`)),l=s.map((h,y)=>h?J0(h,()=>`output "${this.outputNames[a[y]]}"`):null),d=await X0(this.sessionId,i,u,a,l,t),p={};for(let h=0;h<d.length;h++)p[this.outputNames[a[h]]]=s[h]??UT(d[h]);return Ft(),p}startProfiling(){}endProfiling(){Z0(this.sessionId)}}});var FT,As,ev=D(()=>{"use strict";Rt();Ml();Q0();FT=()=>{if((typeof _e.wasm.initTimeout!="number"||_e.wasm.initTimeout<0)&&(_e.wasm.initTimeout=0),typeof _e.wasm.simd!="boolean"&&(_e.wasm.simd=!0),typeof _e.wasm.proxy!="boolean"&&(_e.wasm.proxy=!1),typeof _e.wasm.trace!="boolean"&&(_e.wasm.trace=!1),typeof _e.wasm.numThreads!="number"||!Number.isInteger(_e.wasm.numThreads)||_e.wasm.numThreads<=0){(typeof self<"u"&&!self.crossOriginIsolated||typeof process<"u"&&process.versions&&process.versions.node)&&(_e.wasm.numThreads=1);let r=typeof navigator>"u"?(void 0)().length:navigator.hardwareConcurrency;_e.wasm.numThreads=Math.min(4,Math.ceil((r||1)/2))}},As=class{async init(e){FT(),await H0(),await j0(e)}async createInferenceSessionHandler(e,n){let t=new Is;return await t.loadModel(e,n),Promise.resolve(t)}}});var tv={};Qr(tv,{wasmBackend:()=>VT});var VT,rv=D(()=>{"use strict";ev();VT=new As});var WT={};Qr(WT,{InferenceSession:()=>Sd,TRACE:()=>ra,TRACE_FUNC_BEGIN:()=>jt,TRACE_FUNC_END:()=>Ft,Tensor:()=>St,TrainingSession:()=>kd,default:()=>GT,env:()=>_e,registerBackend:()=>Wr});Rt();Rt();Rt();var Bd="1.18.0";var GT=Ws;{let r=(Lh(),Ir(Nh)).onnxjsBackend;Wr("webgl",r,-10)}{let r=(rv(),Ir(tv)).wasmBackend;Wr("webgpu",r,5),Wr("webnn",r,5),Wr("cpu",r,10),Wr("wasm",r,10)}Object.defineProperty(_e.versions,"web",{value:Bd,enumerable:!0});return Ir(WT);})();
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/*! Bundled license information:

long/index.js:
  (**
   * @license
   * Copyright 2009 The Closure Library Authors
   * Copyright 2020 Daniel Wirtz / The long.js Authors.
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *     http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *
   * SPDX-License-Identifier: Apache-2.0
   *)
*/
//# sourceMappingURL=ort.all.min.js.map
