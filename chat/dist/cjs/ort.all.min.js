/*!
 * ONNX Runtime Web v1.18.0
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License.
 */
"use strict";var e0=Object.create;var Ti=Object.defineProperty;var t0=Object.getOwnPropertyDescriptor;var r0=Object.getOwnPropertyNames;var n0=Object.getPrototypeOf,o0=Object.prototype.hasOwnProperty;var B=(r,e)=>()=>(r&&(e=r(r=0)),e);var it=(r,e)=>()=>(e||r((e={exports:{}}).exports,e),e.exports),Ur=(r,e)=>{for(var n in e)Ti(r,n,{get:e[n],enumerable:!0})},ol=(r,e,n,t)=>{if(e&&typeof e=="object"||typeof e=="function")for(let o of r0(e))!o0.call(r,o)&&o!==n&&Ti(r,o,{get:()=>e[o],enumerable:!(t=t0(e,o))||t.enumerable});return r};var Nn=(r,e,n)=>(n=r!=null?e0(n0(r)):{},ol(e||!r||!r.__esModule?Ti(n,"default",{value:r,enumerable:!0}):n,r)),wr=r=>ol(Ti({},"__esModule",{value:!0}),r);var $i,ln,Mr,Si,Ii=B(()=>{"use strict";$i=new Map,ln=[],Mr=(r,e,n)=>{if(e&&typeof e.init=="function"&&typeof e.createInferenceSessionHandler=="function"){let t=$i.get(r);if(t===void 0)$i.set(r,{backend:e,priority:n});else{if(t.priority>n)return;if(t.priority===n&&t.backend!==e)throw new Error(`cannot register backend "${r}" using priority ${n}`)}if(n>=0){let o=ln.indexOf(r);o!==-1&&ln.splice(o,1);for(let i=0;i<ln.length;i++)if($i.get(ln[i]).priority<=n){ln.splice(i,0,r);return}ln.push(r)}return}throw new TypeError("not a valid backend")},Si=async r=>{let e=r.length===0?ln:r,n=[];for(let t of e){let o=$i.get(t);if(o){if(o.initialized)return o.backend;if(o.aborted)continue;let i=!!o.initPromise;try{return i||(o.initPromise=o.backend.init(t)),await o.initPromise,o.initialized=!0,o.backend}catch(s){i||n.push({name:t,err:s}),o.aborted=!0}finally{delete o.initPromise}}}throw new Error(`no available backend found. ERR: ${n.map(t=>`[${t.name}] ${t.err}`).join(", ")}`)}});var il=B(()=>{"use strict";Ii()});var al,sl=B(()=>{"use strict";al="1.18.0"});var ul,dn,is=B(()=>{"use strict";sl();ul="warning",dn={wasm:{},webgl:{},webgpu:{},versions:{common:al},set logLevel(r){if(r!==void 0){if(typeof r!="string"||["verbose","info","warning","error","fatal"].indexOf(r)===-1)throw new Error(`Unsupported logging level: ${r}`);ul=r}},get logLevel(){return ul}};Object.defineProperty(dn,"logLevel",{enumerable:!0})});var be,ll=B(()=>{"use strict";is();be=dn});var dl,cl,fl=B(()=>{"use strict";dl=(r,e)=>{let n=typeof document<"u"?document.createElement("canvas"):new OffscreenCanvas(1,1);n.width=r.dims[3],n.height=r.dims[2];let t=n.getContext("2d");if(t!=null){let o,i;e?.tensorLayout!==void 0&&e.tensorLayout==="NHWC"?(o=r.dims[2],i=r.dims[3]):(o=r.dims[3],i=r.dims[2]);let s=e?.format!==void 0?e.format:"RGB",a=e?.norm,u,l;a===void 0||a.mean===void 0?u=[255,255,255,255]:typeof a.mean=="number"?u=[a.mean,a.mean,a.mean,a.mean]:(u=[a.mean[0],a.mean[1],a.mean[2],0],a.mean[3]!==void 0&&(u[3]=a.mean[3])),a===void 0||a.bias===void 0?l=[0,0,0,0]:typeof a.bias=="number"?l=[a.bias,a.bias,a.bias,a.bias]:(l=[a.bias[0],a.bias[1],a.bias[2],0],a.bias[3]!==void 0&&(l[3]=a.bias[3]));let d=i*o,p=0,h=d,g=d*2,b=-1;s==="RGBA"?(p=0,h=d,g=d*2,b=d*3):s==="RGB"?(p=0,h=d,g=d*2):s==="RBG"&&(p=0,g=d,h=d*2);for(let v=0;v<i;v++)for(let $=0;$<o;$++){let T=(r.data[p++]-l[0])*u[0],x=(r.data[h++]-l[1])*u[1],A=(r.data[g++]-l[2])*u[2],O=b===-1?255:(r.data[b++]-l[3])*u[3];t.fillStyle="rgba("+T+","+x+","+A+","+O+")",t.fillRect($,v,1,1)}if("toDataURL"in n)return n.toDataURL();throw new Error("toDataURL is not supported")}else throw new Error("Can not access image data")},cl=(r,e)=>{let n=typeof document<"u"?document.createElement("canvas").getContext("2d"):new OffscreenCanvas(1,1).getContext("2d"),t;if(n!=null){let o,i,s;e?.tensorLayout!==void 0&&e.tensorLayout==="NHWC"?(o=r.dims[2],i=r.dims[1],s=r.dims[3]):(o=r.dims[3],i=r.dims[2],s=r.dims[1]);let a=e!==void 0&&e.format!==void 0?e.format:"RGB",u=e?.norm,l,d;u===void 0||u.mean===void 0?l=[255,255,255,255]:typeof u.mean=="number"?l=[u.mean,u.mean,u.mean,u.mean]:(l=[u.mean[0],u.mean[1],u.mean[2],255],u.mean[3]!==void 0&&(l[3]=u.mean[3])),u===void 0||u.bias===void 0?d=[0,0,0,0]:typeof u.bias=="number"?d=[u.bias,u.bias,u.bias,u.bias]:(d=[u.bias[0],u.bias[1],u.bias[2],0],u.bias[3]!==void 0&&(d[3]=u.bias[3]));let p=i*o;if(e!==void 0&&(e.format!==void 0&&s===4&&e.format!=="RGBA"||s===3&&e.format!=="RGB"&&e.format!=="BGR"))throw new Error("Tensor format doesn't match input tensor dims");let h=4,g=0,b=1,v=2,$=3,T=0,x=p,A=p*2,O=-1;a==="RGBA"?(T=0,x=p,A=p*2,O=p*3):a==="RGB"?(T=0,x=p,A=p*2):a==="RBG"&&(T=0,A=p,x=p*2),t=n.createImageData(o,i);for(let k=0;k<i*o;g+=h,b+=h,v+=h,$+=h,k++)t.data[g]=(r.data[T++]-d[0])*l[0],t.data[b]=(r.data[x++]-d[1])*l[1],t.data[v]=(r.data[A++]-d[2])*l[2],t.data[$]=O===-1?255:(r.data[O++]-d[3])*l[3]}else throw new Error("Can not access image data");return t}});var as,pl,hl,ml,gl,bl=B(()=>{"use strict";Ai();as=(r,e)=>{if(r===void 0)throw new Error("Image buffer must be defined");if(e.height===void 0||e.width===void 0)throw new Error("Image height and width must be defined");if(e.tensorLayout==="NHWC")throw new Error("NHWC Tensor layout is not supported yet");let{height:n,width:t}=e,o=e.norm??{mean:255,bias:0},i,s;typeof o.mean=="number"?i=[o.mean,o.mean,o.mean,o.mean]:i=[o.mean[0],o.mean[1],o.mean[2],o.mean[3]??255],typeof o.bias=="number"?s=[o.bias,o.bias,o.bias,o.bias]:s=[o.bias[0],o.bias[1],o.bias[2],o.bias[3]??0];let a=e.format!==void 0?e.format:"RGBA",u=e.tensorFormat!==void 0&&e.tensorFormat!==void 0?e.tensorFormat:"RGB",l=n*t,d=u==="RGBA"?new Float32Array(l*4):new Float32Array(l*3),p=4,h=0,g=1,b=2,v=3,$=0,T=l,x=l*2,A=-1;a==="RGB"&&(p=3,h=0,g=1,b=2,v=-1),u==="RGBA"?A=l*3:u==="RBG"?($=0,x=l,T=l*2):u==="BGR"&&(x=0,T=l,$=l*2);for(let k=0;k<l;k++,h+=p,b+=p,g+=p,v+=p)d[$++]=(r[h]+s[0])/i[0],d[T++]=(r[g]+s[1])/i[1],d[x++]=(r[b]+s[2])/i[2],A!==-1&&v!==-1&&(d[A++]=(r[v]+s[3])/i[3]);return u==="RGBA"?new zt("float32",d,[1,4,n,t]):new zt("float32",d,[1,3,n,t])},pl=async(r,e)=>{let n=typeof HTMLImageElement<"u"&&r instanceof HTMLImageElement,t=typeof ImageData<"u"&&r instanceof ImageData,o=typeof ImageBitmap<"u"&&r instanceof ImageBitmap,i=typeof r=="string",s,a=e??{},u=()=>{if(typeof document<"u")return document.createElement("canvas");if(typeof OffscreenCanvas<"u")return new OffscreenCanvas(1,1);throw new Error("Canvas is not supported")},l=d=>d instanceof HTMLCanvasElement||d instanceof OffscreenCanvas?d.getContext("2d"):null;if(n){let d=u();d.width=r.width,d.height=r.height;let p=l(d);if(p!=null){let h=r.height,g=r.width;if(e!==void 0&&e.resizedHeight!==void 0&&e.resizedWidth!==void 0&&(h=e.resizedHeight,g=e.resizedWidth),e!==void 0){if(a=e,e.tensorFormat!==void 0)throw new Error("Image input config format must be RGBA for HTMLImageElement");a.tensorFormat="RGBA",a.height=h,a.width=g}else a.tensorFormat="RGBA",a.height=h,a.width=g;p.drawImage(r,0,0),s=p.getImageData(0,0,g,h).data}else throw new Error("Can not access image data")}else if(t){let d,p;if(e!==void 0&&e.resizedWidth!==void 0&&e.resizedHeight!==void 0?(d=e.resizedHeight,p=e.resizedWidth):(d=r.height,p=r.width),e!==void 0&&(a=e),a.format="RGBA",a.height=d,a.width=p,e!==void 0){let h=u();h.width=p,h.height=d;let g=l(h);if(g!=null)g.putImageData(r,0,0),s=g.getImageData(0,0,p,d).data;else throw new Error("Can not access image data")}else s=r.data}else if(o){if(e===void 0)throw new Error("Please provide image config with format for Imagebitmap");let d=u();d.width=r.width,d.height=r.height;let p=l(d);if(p!=null){let h=r.height,g=r.width;return p.drawImage(r,0,0,g,h),s=p.getImageData(0,0,g,h).data,a.height=h,a.width=g,as(s,a)}else throw new Error("Can not access image data")}else{if(i)return new Promise((d,p)=>{let h=u(),g=l(h);if(!r||!g)return p();let b=new Image;b.crossOrigin="Anonymous",b.src=r,b.onload=()=>{h.width=b.width,h.height=b.height,g.drawImage(b,0,0,h.width,h.height);let v=g.getImageData(0,0,h.width,h.height);a.height=h.height,a.width=h.width,d(as(v.data,a))}});throw new Error("Input data provided is not supported - aborted tensor creation")}if(s!==void 0)return as(s,a);throw new Error("Input data provided is not supported - aborted tensor creation")},hl=(r,e)=>{let{width:n,height:t,download:o,dispose:i}=e,s=[1,t,n,4];return new zt({location:"texture",type:"float32",texture:r,dims:s,download:o,dispose:i})},ml=(r,e)=>{let{dataType:n,dims:t,download:o,dispose:i}=e;return new zt({location:"gpu-buffer",type:n??"float32",gpuBuffer:r,dims:t,download:o,dispose:i})},gl=(r,e,n)=>new zt({location:"cpu-pinned",type:r,data:e,dims:n??[e.length]})});var Io,Oi,yl,vl,wl=B(()=>{"use strict";Io=new Map([["float32",Float32Array],["uint8",Uint8Array],["int8",Int8Array],["uint16",Uint16Array],["float16",Uint16Array],["int16",Int16Array],["int32",Int32Array],["bool",Uint8Array],["float64",Float64Array],["uint32",Uint32Array]]),Oi=new Map([[Float32Array,"float32"],[Uint8Array,"uint8"],[Int8Array,"int8"],[Uint16Array,"uint16"],[Int16Array,"int16"],[Int32Array,"int32"],[Float64Array,"float64"],[Uint32Array,"uint32"]]),yl=!1,vl=()=>{if(!yl){yl=!0;let r=typeof BigInt64Array<"u"&&typeof BigInt64Array.from=="function",e=typeof BigUint64Array<"u"&&typeof BigUint64Array.from=="function";r&&(Io.set("int64",BigInt64Array),Oi.set(BigInt64Array,"int64")),e&&(Io.set("uint64",BigUint64Array),Oi.set(BigUint64Array,"uint64"))}}});var xl,_l,Tl=B(()=>{"use strict";Ai();xl=r=>{let e=1;for(let n=0;n<r.length;n++){let t=r[n];if(typeof t!="number"||!Number.isSafeInteger(t))throw new TypeError(`dims[${n}] must be an integer, got: ${t}`);if(t<0)throw new RangeError(`dims[${n}] must be a non-negative integer, got: ${t}`);e*=t}return e},_l=(r,e)=>{switch(r.location){case"cpu":return new zt(r.type,r.data,e);case"cpu-pinned":return new zt({location:"cpu-pinned",data:r.data,type:r.type,dims:e});case"texture":return new zt({location:"texture",texture:r.texture,type:r.type,dims:e});case"gpu-buffer":return new zt({location:"gpu-buffer",gpuBuffer:r.gpuBuffer,type:r.type,dims:e});default:throw new Error(`tensorReshape: tensor location ${r.location} is not supported`)}}});var zt,Ai=B(()=>{"use strict";fl();bl();wl();Tl();zt=class{constructor(e,n,t){vl();let o,i;if(typeof e=="object"&&"location"in e)switch(this.dataLocation=e.location,o=e.type,i=e.dims,e.location){case"cpu-pinned":{let a=Io.get(o);if(!a)throw new TypeError(`unsupported type "${o}" to create tensor from pinned buffer`);if(!(e.data instanceof a))throw new TypeError(`buffer should be of type ${a.name}`);this.cpuData=e.data;break}case"texture":{if(o!=="float32")throw new TypeError(`unsupported type "${o}" to create tensor from texture`);this.gpuTextureData=e.texture,this.downloader=e.download,this.disposer=e.dispose;break}case"gpu-buffer":{if(o!=="float32"&&o!=="float16"&&o!=="int32"&&o!=="int64"&&o!=="uint32"&&o!=="bool")throw new TypeError(`unsupported type "${o}" to create tensor from gpu buffer`);this.gpuBufferData=e.gpuBuffer,this.downloader=e.download,this.disposer=e.dispose;break}default:throw new Error(`Tensor constructor: unsupported location '${this.dataLocation}'`)}else{let a,u;if(typeof e=="string")if(o=e,u=t,e==="string"){if(!Array.isArray(n))throw new TypeError("A string tensor's data must be a string array.");a=n}else{let l=Io.get(e);if(l===void 0)throw new TypeError(`Unsupported tensor type: ${e}.`);if(Array.isArray(n)){if(e==="float16")throw new TypeError("Creating a float16 tensor from number array is not supported. Please use Uint16Array as data.");e==="uint64"||e==="int64"?a=l.from(n,BigInt):a=l.from(n)}else if(n instanceof l)a=n;else throw new TypeError(`A ${o} tensor's data must be type of ${l}`)}else if(u=n,Array.isArray(e)){if(e.length===0)throw new TypeError("Tensor type cannot be inferred from an empty array.");let l=typeof e[0];if(l==="string")o="string",a=e;else if(l==="boolean")o="bool",a=Uint8Array.from(e);else throw new TypeError(`Invalid element type of data array: ${l}.`)}else{let l=Oi.get(e.constructor);if(l===void 0)throw new TypeError(`Unsupported type for tensor data: ${e.constructor}.`);o=l,a=e}if(u===void 0)u=[a.length];else if(!Array.isArray(u))throw new TypeError("A tensor's dims must be a number array");i=u,this.cpuData=a,this.dataLocation="cpu"}let s=xl(i);if(this.cpuData&&s!==this.cpuData.length)throw new Error(`Tensor's size(${s}) does not match data length(${this.cpuData.length}).`);this.type=o,this.dims=i,this.size=s}static async fromImage(e,n){return pl(e,n)}static fromTexture(e,n){return hl(e,n)}static fromGpuBuffer(e,n){return ml(e,n)}static fromPinnedBuffer(e,n,t){return gl(e,n,t)}toDataURL(e){return dl(this,e)}toImageData(e){return cl(this,e)}get data(){if(this.ensureValid(),!this.cpuData)throw new Error("The data is not on CPU. Use `getData()` to download GPU data to CPU, or use `texture` or `gpuBuffer` property to access the GPU data directly.");return this.cpuData}get location(){return this.dataLocation}get texture(){if(this.ensureValid(),!this.gpuTextureData)throw new Error("The data is not stored as a WebGL texture.");return this.gpuTextureData}get gpuBuffer(){if(this.ensureValid(),!this.gpuBufferData)throw new Error("The data is not stored as a WebGPU buffer.");return this.gpuBufferData}async getData(e){switch(this.ensureValid(),this.dataLocation){case"cpu":case"cpu-pinned":return this.data;case"texture":case"gpu-buffer":{if(!this.downloader)throw new Error("The current tensor is not created with a specified data downloader.");if(this.isDownloading)throw new Error("The current tensor is being downloaded.");try{this.isDownloading=!0;let n=await this.downloader();return this.downloader=void 0,this.dataLocation="cpu",this.cpuData=n,e&&this.disposer&&(this.disposer(),this.disposer=void 0),n}finally{this.isDownloading=!1}}default:throw new Error(`cannot get data from location: ${this.dataLocation}`)}}dispose(){if(this.isDownloading)throw new Error("The current tensor is being downloaded.");this.disposer&&(this.disposer(),this.disposer=void 0),this.cpuData=void 0,this.gpuTextureData=void 0,this.gpuBufferData=void 0,this.downloader=void 0,this.isDownloading=void 0,this.dataLocation="none"}ensureValid(){if(this.dataLocation==="none")throw new Error("The tensor is disposed.")}reshape(e){if(this.ensureValid(),this.downloader||this.disposer)throw new Error("Cannot reshape a tensor that owns GPU resource.");return _l(this,e)}}});var _t,Ei=B(()=>{"use strict";Ai();_t=zt});var Ao,$l,Vt,Ft,ss=B(()=>{"use strict";is();Ao=(r,e)=>{dn.wasm.trace&&console.timeStamp(`${r}::ORT::${e}`)},$l=(r,e)=>{let n=new Error().stack?.split(/\r\n|\r|\n/g)||[],t=!1;for(let o=0;o<n.length;o++){if(t&&!n[o].includes("TRACE_FUNC")){let i=`FUNC_${r}::${n[o].trim().split(" ")[1]}`;e&&(i+=`::${e}`),Ao("CPU",i);return}n[o].includes("TRACE_FUNC")&&(t=!0)}},Vt=r=>{dn.wasm.trace&&$l("BEGIN",r)},Ft=r=>{dn.wasm.trace&&$l("END",r)}});var Ci,Sl=B(()=>{"use strict";Ii();Ei();ss();Ci=class r{constructor(e){this.handler=e}async run(e,n,t){Vt();let o={},i={};if(typeof e!="object"||e===null||e instanceof _t||Array.isArray(e))throw new TypeError("'feeds' must be an object that use input names as keys and OnnxValue as corresponding values.");let s=!0;if(typeof n=="object"){if(n===null)throw new TypeError("Unexpected argument[1]: cannot be null.");if(n instanceof _t)throw new TypeError("'fetches' cannot be a Tensor");if(Array.isArray(n)){if(n.length===0)throw new TypeError("'fetches' cannot be an empty array.");s=!1;for(let l of n){if(typeof l!="string")throw new TypeError("'fetches' must be a string array or an object.");if(this.outputNames.indexOf(l)===-1)throw new RangeError(`'fetches' contains invalid output name: ${l}.`);o[l]=null}if(typeof t=="object"&&t!==null)i=t;else if(typeof t<"u")throw new TypeError("'options' must be an object.")}else{let l=!1,d=Object.getOwnPropertyNames(n);for(let p of this.outputNames)if(d.indexOf(p)!==-1){let h=n[p];(h===null||h instanceof _t)&&(l=!0,s=!1,o[p]=h)}if(l){if(typeof t=="object"&&t!==null)i=t;else if(typeof t<"u")throw new TypeError("'options' must be an object.")}else i=n}}else if(typeof n<"u")throw new TypeError("Unexpected argument[1]: must be 'fetches' or 'options'.");for(let l of this.inputNames)if(typeof e[l]>"u")throw new Error(`input '${l}' is missing in 'feeds'.`);if(s)for(let l of this.outputNames)o[l]=null;let a=await this.handler.run(e,o,i),u={};for(let l in a)if(Object.hasOwnProperty.call(a,l)){let d=a[l];d instanceof _t?u[l]=d:u[l]=new _t(d.type,d.data,d.dims)}return Ft(),u}async release(){return this.handler.dispose()}static async create(e,n,t,o){Vt();let i,s={};if(typeof e=="string"){if(i=e,typeof n=="object"&&n!==null)s=n;else if(typeof n<"u")throw new TypeError("'options' must be an object.")}else if(e instanceof Uint8Array){if(i=e,typeof n=="object"&&n!==null)s=n;else if(typeof n<"u")throw new TypeError("'options' must be an object.")}else if(e instanceof ArrayBuffer||typeof SharedArrayBuffer<"u"&&e instanceof SharedArrayBuffer){let p=e,h=0,g=e.byteLength;if(typeof n=="object"&&n!==null)s=n;else if(typeof n=="number"){if(h=n,!Number.isSafeInteger(h))throw new RangeError("'byteOffset' must be an integer.");if(h<0||h>=p.byteLength)throw new RangeError(`'byteOffset' is out of range [0, ${p.byteLength}).`);if(g=e.byteLength-h,typeof t=="number"){if(g=t,!Number.isSafeInteger(g))throw new RangeError("'byteLength' must be an integer.");if(g<=0||h+g>p.byteLength)throw new RangeError(`'byteLength' is out of range (0, ${p.byteLength-h}].`);if(typeof o=="object"&&o!==null)s=o;else if(typeof o<"u")throw new TypeError("'options' must be an object.")}else if(typeof t<"u")throw new TypeError("'byteLength' must be a number.")}else if(typeof n<"u")throw new TypeError("'options' must be an object.");i=new Uint8Array(p,h,g)}else throw new TypeError("Unexpected argument[0]: must be 'path' or 'buffer'.");let u=(s.executionProviders||[]).map(p=>typeof p=="string"?p:p.name),d=await(await Si(u)).createInferenceSessionHandler(i,s);return Ft(),new r(d)}startProfiling(){this.handler.startProfiling()}endProfiling(){this.handler.endProfiling()}get inputNames(){return this.handler.inputNames}get outputNames(){return this.handler.outputNames}}});var Il,Al=B(()=>{"use strict";Sl();Il=Ci});var Ol=B(()=>{"use strict"});var i0,Pi,El=B(()=>{"use strict";Ii();Ei();i0="Training backend could not be resolved. Make sure you're using the correct configuration & WebAssembly files.",Pi=class r{constructor(e,n,t){this.handler=e,this.hasOptimizerModel=n,this.hasEvalModel=t}get trainingInputNames(){return this.handler.inputNames}get trainingOutputNames(){return this.handler.outputNames}get evalInputNames(){if(this.hasEvalModel)return this.handler.evalInputNames;throw new Error("This training session has no evalModel loaded.")}get evalOutputNames(){if(this.hasEvalModel)return this.handler.evalOutputNames;throw new Error("This training session has no evalModel loaded.")}static async create(e,n){let t=e.evalModel||"",o=e.optimizerModel||"",i=n||{},a=(i.executionProviders||[]).map(l=>typeof l=="string"?l:l.name),u=await Si(a);if(u.createTrainingSessionHandler){let l=await u.createTrainingSessionHandler(e.checkpointState,e.trainModel,t,o,i);return new r(l,!!e.optimizerModel,!!e.evalModel)}else throw new Error(i0)}typeNarrowingForRunStep(e,n,t,o,i){let s={},a={};if(typeof t!="object"||t===null||t instanceof _t||Array.isArray(t))throw new TypeError("'feeds' must be an object that use input names as keys and OnnxValue as corresponding values.");let u=!0;if(typeof o=="object"){if(o===null)throw new TypeError("Unexpected argument[1]: cannot be null.");if(o instanceof _t)throw new TypeError("'fetches' cannot be a Tensor");if(Array.isArray(o)){if(o.length===0)throw new TypeError("'fetches' cannot be an empty array.");u=!1;for(let l of o){if(typeof l!="string")throw new TypeError("'fetches' must be a string array or an object.");if(n.indexOf(l)===-1)throw new RangeError(`'fetches' contains invalid output name: ${l}.`);s[l]=null}if(typeof i=="object"&&i!==null)a=i;else if(typeof i<"u")throw new TypeError("'options' must be an object.")}else{let l=!1,d=Object.getOwnPropertyNames(o);for(let p of n)if(d.indexOf(p)!==-1){let h=o[p];(h===null||h instanceof _t)&&(l=!0,u=!1,s[p]=h)}if(l){if(typeof i=="object"&&i!==null)a=i;else if(typeof i<"u")throw new TypeError("'options' must be an object.")}else a=o}}else if(typeof o<"u")throw new TypeError("Unexpected argument[1]: must be 'fetches' or 'options'.");for(let l of e)if(typeof t[l]>"u")throw new Error(`input '${l}' is missing in 'feeds'.`);if(u)for(let l of n)s[l]=null;return[s,a]}convertHandlerReturnTypeToMapOfTensors(e){let n={};for(let t in e)if(Object.hasOwnProperty.call(e,t)){let o=e[t];o instanceof _t?n[t]=o:n[t]=new _t(o.type,o.data,o.dims)}return n}async lazyResetGrad(){await this.handler.lazyResetGrad()}async runTrainStep(e,n,t){let[o,i]=this.typeNarrowingForRunStep(this.trainingInputNames,this.trainingOutputNames,e,n,t),s=await this.handler.runTrainStep(e,o,i);return this.convertHandlerReturnTypeToMapOfTensors(s)}async runOptimizerStep(e){if(this.hasOptimizerModel)await this.handler.runOptimizerStep(e||{});else throw new Error("This TrainingSession has no OptimizerModel loaded.")}async runEvalStep(e,n,t){if(this.hasEvalModel){let[o,i]=this.typeNarrowingForRunStep(this.evalInputNames,this.evalOutputNames,e,n,t),s=await this.handler.runEvalStep(e,o,i);return this.convertHandlerReturnTypeToMapOfTensors(s)}else throw new Error("This TrainingSession has no EvalModel loaded.")}async getParametersSize(e=!0){return this.handler.getParametersSize(e)}async loadParametersBuffer(e,n=!0){let t=await this.getParametersSize(n);if(e.length!==4*t)throw new Error("Size of the buffer passed into loadParametersBuffer must match the number of parameters in the model. Please use getParametersSize method to check.");return this.handler.loadParametersBuffer(e,n)}async getContiguousParameters(e=!0){return this.handler.getContiguousParameters(e)}async release(){return this.handler.dispose()}}});var Cl,Pl=B(()=>{"use strict";El();Cl=Pi});var us={};Ur(us,{InferenceSession:()=>Il,TRACE:()=>Ao,TRACE_FUNC_BEGIN:()=>Vt,TRACE_FUNC_END:()=>Ft,Tensor:()=>_t,TrainingSession:()=>Cl,env:()=>be,registerBackend:()=>Mr});var kt=B(()=>{"use strict";il();ll();Al();Ei();ss();Ol();Pl()});function Wr(r,e,n,t){if(e===void 0)return s0(r);if(n===void 0)ki(r,e,1);else if(typeof n=="number"&&t===void 0)ki(r,e,n);else if(typeof n=="string"&&t===void 0)ki(r,n,1,e);else if(typeof n=="string"&&typeof t=="number")ki(r,n,t,e);else throw new TypeError("input is valid")}function s0(r){return{verbose:Wr.verbose.bind(null,r),info:Wr.info.bind(null,r),warning:Wr.warning.bind(null,r),error:Wr.error.bind(null,r),fatal:Wr.fatal.bind(null,r)}}function ki(r,e,n,t){let o=Oo[t||""]||Oo[""];Dl[r]<Dl[o.minimalSeverity]||(o.logDateTime&&(e=`${new Date().toISOString()}|${e}`),o.logSourceLocation,a0[o.provider].log(r,e,t))}var ls,ds,Dl,a0,Bl,Oo,Ze,Bi,Ri,zi,Di,Jt=B(()=>{"use strict";ls=class{log(e,n,t){}},ds=class{log(e,n,t){console.log(`${this.color(e)} ${t?"\x1B[35m"+t+"\x1B[0m ":""}${n}`)}color(e){switch(e){case"verbose":return"\x1B[34;40mv\x1B[0m";case"info":return"\x1B[32mi\x1B[0m";case"warning":return"\x1B[30;43mw\x1B[0m";case"error":return"\x1B[31;40me\x1B[0m";case"fatal":return"\x1B[101mf\x1B[0m";default:throw new Error(`unsupported severity: ${e}`)}}},Dl={verbose:1e3,info:2e3,warning:4e3,error:5e3,fatal:6e3},a0={none:new ls,console:new ds},Bl={provider:"console",minimalSeverity:"warning",logDateTime:!0,logSourceLocation:!1},Oo={"":Bl};(u=>{function r(l,d){u("verbose",l,d)}u.verbose=r;function e(l,d){u("info",l,d)}u.info=e;function n(l,d){u("warning",l,d)}u.warning=n;function t(l,d){u("error",l,d)}u.error=t;function o(l,d){u("fatal",l,d)}u.fatal=o;function i(l){Oo={},s("",l||{})}u.reset=i;function s(l,d){if(l==="*")i(d);else{let p=Oo[l]||Bl;Oo[l]={provider:d.provider||p.provider,minimalSeverity:d.minimalSeverity||p.minimalSeverity,logDateTime:d.logDateTime===void 0?p.logDateTime:d.logDateTime,logSourceLocation:d.logSourceLocation===void 0?p.logSourceLocation:d.logSourceLocation}}}u.set=s;function a(l){let d={};l.logLevel&&(d.minimalSeverity=l.logLevel),s("",d)}u.setWithEnv=a})(Wr||={});Ze=Wr,Bi=class{constructor(e,n,t,o,i,s){this.category=e;this.name=n;this.startTime=t;this.endCallback=o;this.timer=i;this.ctx=s}async end(){return this.endCallback(this)}async checkTimer(){if(this.ctx===void 0||this.timer===void 0)throw new Error("No webgl timer found");return this.ctx.endTimer(),this.ctx.waitForQueryAndGetTime(this.timer)}},Ri=class{constructor(e,n,t,o){this.category=e;this.name=n;this.startTime=t;this.endTime=o}},zi=class{constructor(e,n,t){this._started=!1;this._flushPointer=0;this._started=!1,this._maxNumberEvents=e===void 0?1e4:e,this._flushBatchSize=n===void 0?10:n,this._flushIntervalInMilliseconds=t===void 0?5e3:t}static create(e){return e===void 0?new this:new this(e.maxNumberEvents,e.flushBatchSize,e.flushIntervalInMilliseconds)}start(){this._started=!0,this._timingEvents=[],this._flushTime=Di(),this._flushPointer=0}stop(){for(this._started=!1;this._flushPointer<this._timingEvents.length;this._flushPointer++)this.logOneEvent(this._timingEvents[this._flushPointer])}event(e,n,t,o){let i=this._started?this.begin(e,n,o):void 0,s=!1,a=t();if(a&&typeof a.then=="function")return s=!0,new Promise((u,l)=>{a.then(async d=>{i&&await i.end(),u(d)},async d=>{i&&await i.end(),l(d)})});if(!s&&i){let u=i.end();if(u&&typeof u.then=="function")return new Promise((l,d)=>{u.then(()=>{l(a)},p=>{d(p)})})}return a}begin(e,n,t){if(!this._started)throw new Error("profiler is not started yet");if(t===void 0){let o=Di();return this.flush(o),new Bi(e,n,o,i=>this.endSync(i))}else{let o=t.beginTimer();return new Bi(e,n,0,async i=>this.end(i),o,t)}}async end(e){let n=await e.checkTimer();this._timingEvents.length<this._maxNumberEvents&&(this._timingEvents.push(new Ri(e.category,e.name,e.startTime,n)),this.flush(n))}endSync(e){let n=Di();this._timingEvents.length<this._maxNumberEvents&&(this._timingEvents.push(new Ri(e.category,e.name,e.startTime,n)),this.flush(n))}logOneEvent(e){Ze.verbose(`Profiler.${e.category}`,`${(e.endTime-e.startTime).toFixed(2)}ms on event '${e.name}' at ${e.endTime.toFixed(2)}`)}flush(e){if(this._timingEvents.length-this._flushPointer>=this._flushBatchSize||e-this._flushTime>=this._flushIntervalInMilliseconds){for(let n=this._flushPointer;this._flushPointer<n+this._flushBatchSize&&this._flushPointer<this._timingEvents.length;this._flushPointer++)this.logOneEvent(this._timingEvents[this._flushPointer]);this._flushTime=Di()}}get started(){return this._started}},Di=typeof performance<"u"&&performance.now?()=>performance.now():Date.now});function Rl(r,e,n){for(let t of n){let o=t[0],i=t[1],s=t[2],a=t[3],u=t[4];if(r.opType===o){for(let l of e)if((l.domain===i||l.domain==="ai.onnx"&&i==="")&&u0(l.version,s))return{opImpl:a,opInit:u}}}throw new TypeError(`cannot resolve operator '${r.opType}' with opsets: ${e.map(t=>`${t.domain||"ai.onnx"} v${t.version}`).join(", ")}`)}function u0(r,e){if(e.endsWith("+")){let n=Number.parseInt(e.substring(0,e.length-1),10);return!isNaN(n)&&n<=r}else if(e.split("-").length===2){let n=e.split("-"),t=Number.parseInt(n[0],10),o=Number.parseInt(n[1],10);return!isNaN(t)&&!isNaN(o)&&t<=r&&r<=o}else return Number.parseInt(e,10)===r}var zl=B(()=>{"use strict"});var Ml=it(cs=>{"use strict";cs.__esModule=!0;var l0=function(){function r(e){if(!e)throw new TypeError("Invalid argument; `value` has no value.");this.value=r.EMPTY,e&&r.isGuid(e)&&(this.value=e)}return r.isGuid=function(e){var n=e.toString();return e&&(e instanceof r||r.validator.test(n))},r.create=function(){return new r([r.gen(2),r.gen(1),r.gen(1),r.gen(1),r.gen(3)].join("-"))},r.createEmpty=function(){return new r("emptyguid")},r.parse=function(e){return new r(e)},r.raw=function(){return[r.gen(2),r.gen(1),r.gen(1),r.gen(1),r.gen(3)].join("-")},r.gen=function(e){for(var n="",t=0;t<e;t++)n+=((1+Math.random())*65536|0).toString(16).substring(1);return n},r.prototype.equals=function(e){return r.isGuid(e)&&this.value===e.toString()},r.prototype.isEmpty=function(){return this.value===r.EMPTY},r.prototype.toString=function(){return this.value},r.prototype.toJSON=function(){return{value:this.value}},r.validator=new RegExp("^[a-z0-9]{8}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{12}$","i"),r.EMPTY="00000000-0000-0000-0000-000000000000",r}();cs.Guid=l0});function at(r,e,n){this.low=r|0,this.high=e|0,this.unsigned=!!n}function Dt(r){return(r&&r.__isLong__)===!0}function Ll(r){var e=Math.clz32(r&-r);return r?31-e:e}function cn(r,e){var n,t,o;return e?(r>>>=0,(o=0<=r&&r<256)&&(t=Vl[r],t)?t:(n=je(r,0,!0),o&&(Vl[r]=n),n)):(r|=0,(o=-128<=r&&r<128)&&(t=Nl[r],t)?t:(n=je(r,r<0?-1:0,!1),o&&(Nl[r]=n),n))}function er(r,e){if(isNaN(r))return e?Lr:dr;if(e){if(r<0)return Lr;if(r>=Wl)return jl}else{if(r<=-Gl)return Gt;if(r+1>=Gl)return ql}return r<0?er(-r,e).neg():je(r%Fn|0,r/Fn|0,e)}function je(r,e,n){return new at(r,e,n)}function ps(r,e,n){if(r.length===0)throw Error("empty string");if(typeof e=="number"?(n=e,e=!1):e=!!e,r==="NaN"||r==="Infinity"||r==="+Infinity"||r==="-Infinity")return e?Lr:dr;if(n=n||10,n<2||36<n)throw RangeError("radix");var t;if((t=r.indexOf("-"))>0)throw Error("interior hyphen");if(t===0)return ps(r.substring(1),e,n).neg();for(var o=er(Mi(n,8)),i=dr,s=0;s<r.length;s+=8){var a=Math.min(8,r.length-s),u=parseInt(r.substring(s,s+a),n);if(a<8){var l=er(Mi(n,a));i=i.mul(l).add(er(u))}else i=i.mul(o),i=i.add(er(u))}return i.unsigned=e,i}function cr(r,e){return typeof r=="number"?er(r,e):typeof r=="string"?ps(r,e):je(r.low,r.high,typeof e=="boolean"?e:r.unsigned)}var Qt,Nl,Vl,Mi,Fl,d0,Fn,Wl,Gl,Ul,dr,Lr,Vn,Hl,fs,ql,jl,Gt,X,Nr,hs=B(()=>{Qt=null;try{Qt=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch{}at.prototype.__isLong__;Object.defineProperty(at.prototype,"__isLong__",{value:!0});at.isLong=Dt;Nl={},Vl={};at.fromInt=cn;at.fromNumber=er;at.fromBits=je;Mi=Math.pow;at.fromString=ps;at.fromValue=cr;Fl=65536,d0=1<<24,Fn=Fl*Fl,Wl=Fn*Fn,Gl=Wl/2,Ul=cn(d0),dr=cn(0);at.ZERO=dr;Lr=cn(0,!0);at.UZERO=Lr;Vn=cn(1);at.ONE=Vn;Hl=cn(1,!0);at.UONE=Hl;fs=cn(-1);at.NEG_ONE=fs;ql=je(-1,2147483647,!1);at.MAX_VALUE=ql;jl=je(-1,-1,!0);at.MAX_UNSIGNED_VALUE=jl;Gt=je(0,-2147483648,!1);at.MIN_VALUE=Gt;X=at.prototype;X.toInt=function(){return this.unsigned?this.low>>>0:this.low};X.toNumber=function(){return this.unsigned?(this.high>>>0)*Fn+(this.low>>>0):this.high*Fn+(this.low>>>0)};X.toString=function(e){if(e=e||10,e<2||36<e)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative())if(this.eq(Gt)){var n=er(e),t=this.div(n),o=t.mul(n).sub(this);return t.toString(e)+o.toInt().toString(e)}else return"-"+this.neg().toString(e);for(var i=er(Mi(e,6),this.unsigned),s=this,a="";;){var u=s.div(i),l=s.sub(u.mul(i)).toInt()>>>0,d=l.toString(e);if(s=u,s.isZero())return d+a;for(;d.length<6;)d="0"+d;a=""+d+a}};X.getHighBits=function(){return this.high};X.getHighBitsUnsigned=function(){return this.high>>>0};X.getLowBits=function(){return this.low};X.getLowBitsUnsigned=function(){return this.low>>>0};X.getNumBitsAbs=function(){if(this.isNegative())return this.eq(Gt)?64:this.neg().getNumBitsAbs();for(var e=this.high!=0?this.high:this.low,n=31;n>0&&!(e&1<<n);n--);return this.high!=0?n+33:n+1};X.isZero=function(){return this.high===0&&this.low===0};X.eqz=X.isZero;X.isNegative=function(){return!this.unsigned&&this.high<0};X.isPositive=function(){return this.unsigned||this.high>=0};X.isOdd=function(){return(this.low&1)===1};X.isEven=function(){return(this.low&1)===0};X.equals=function(e){return Dt(e)||(e=cr(e)),this.unsigned!==e.unsigned&&this.high>>>31===1&&e.high>>>31===1?!1:this.high===e.high&&this.low===e.low};X.eq=X.equals;X.notEquals=function(e){return!this.eq(e)};X.neq=X.notEquals;X.ne=X.notEquals;X.lessThan=function(e){return this.comp(e)<0};X.lt=X.lessThan;X.lessThanOrEqual=function(e){return this.comp(e)<=0};X.lte=X.lessThanOrEqual;X.le=X.lessThanOrEqual;X.greaterThan=function(e){return this.comp(e)>0};X.gt=X.greaterThan;X.greaterThanOrEqual=function(e){return this.comp(e)>=0};X.gte=X.greaterThanOrEqual;X.ge=X.greaterThanOrEqual;X.compare=function(e){if(Dt(e)||(e=cr(e)),this.eq(e))return 0;var n=this.isNegative(),t=e.isNegative();return n&&!t?-1:!n&&t?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1};X.comp=X.compare;X.negate=function(){return!this.unsigned&&this.eq(Gt)?Gt:this.not().add(Vn)};X.neg=X.negate;X.add=function(e){Dt(e)||(e=cr(e));var n=this.high>>>16,t=this.high&65535,o=this.low>>>16,i=this.low&65535,s=e.high>>>16,a=e.high&65535,u=e.low>>>16,l=e.low&65535,d=0,p=0,h=0,g=0;return g+=i+l,h+=g>>>16,g&=65535,h+=o+u,p+=h>>>16,h&=65535,p+=t+a,d+=p>>>16,p&=65535,d+=n+s,d&=65535,je(h<<16|g,d<<16|p,this.unsigned)};X.subtract=function(e){return Dt(e)||(e=cr(e)),this.add(e.neg())};X.sub=X.subtract;X.multiply=function(e){if(this.isZero())return this;if(Dt(e)||(e=cr(e)),Qt){var n=Qt.mul(this.low,this.high,e.low,e.high);return je(n,Qt.get_high(),this.unsigned)}if(e.isZero())return this.unsigned?Lr:dr;if(this.eq(Gt))return e.isOdd()?Gt:dr;if(e.eq(Gt))return this.isOdd()?Gt:dr;if(this.isNegative())return e.isNegative()?this.neg().mul(e.neg()):this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt(Ul)&&e.lt(Ul))return er(this.toNumber()*e.toNumber(),this.unsigned);var t=this.high>>>16,o=this.high&65535,i=this.low>>>16,s=this.low&65535,a=e.high>>>16,u=e.high&65535,l=e.low>>>16,d=e.low&65535,p=0,h=0,g=0,b=0;return b+=s*d,g+=b>>>16,b&=65535,g+=i*d,h+=g>>>16,g&=65535,g+=s*l,h+=g>>>16,g&=65535,h+=o*d,p+=h>>>16,h&=65535,h+=i*l,p+=h>>>16,h&=65535,h+=s*u,p+=h>>>16,h&=65535,p+=t*d+o*l+i*u+s*a,p&=65535,je(g<<16|b,p<<16|h,this.unsigned)};X.mul=X.multiply;X.divide=function(e){if(Dt(e)||(e=cr(e)),e.isZero())throw Error("division by zero");if(Qt){if(!this.unsigned&&this.high===-2147483648&&e.low===-1&&e.high===-1)return this;var n=(this.unsigned?Qt.div_u:Qt.div_s)(this.low,this.high,e.low,e.high);return je(n,Qt.get_high(),this.unsigned)}if(this.isZero())return this.unsigned?Lr:dr;var t,o,i;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return Lr;if(e.gt(this.shru(1)))return Hl;i=Lr}else{if(this.eq(Gt)){if(e.eq(Vn)||e.eq(fs))return Gt;if(e.eq(Gt))return Vn;var s=this.shr(1);return t=s.div(e).shl(1),t.eq(dr)?e.isNegative()?Vn:fs:(o=this.sub(e.mul(t)),i=t.add(o.div(e)),i)}else if(e.eq(Gt))return this.unsigned?Lr:dr;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();i=dr}for(o=this;o.gte(e);){t=Math.max(1,Math.floor(o.toNumber()/e.toNumber()));for(var a=Math.ceil(Math.log(t)/Math.LN2),u=a<=48?1:Mi(2,a-48),l=er(t),d=l.mul(e);d.isNegative()||d.gt(o);)t-=u,l=er(t,this.unsigned),d=l.mul(e);l.isZero()&&(l=Vn),i=i.add(l),o=o.sub(d)}return i};X.div=X.divide;X.modulo=function(e){if(Dt(e)||(e=cr(e)),Qt){var n=(this.unsigned?Qt.rem_u:Qt.rem_s)(this.low,this.high,e.low,e.high);return je(n,Qt.get_high(),this.unsigned)}return this.sub(this.div(e).mul(e))};X.mod=X.modulo;X.rem=X.modulo;X.not=function(){return je(~this.low,~this.high,this.unsigned)};X.countLeadingZeros=function(){return this.high?Math.clz32(this.high):Math.clz32(this.low)+32};X.clz=X.countLeadingZeros;X.countTrailingZeros=function(){return this.low?Ll(this.low):Ll(this.high)+32};X.ctz=X.countTrailingZeros;X.and=function(e){return Dt(e)||(e=cr(e)),je(this.low&e.low,this.high&e.high,this.unsigned)};X.or=function(e){return Dt(e)||(e=cr(e)),je(this.low|e.low,this.high|e.high,this.unsigned)};X.xor=function(e){return Dt(e)||(e=cr(e)),je(this.low^e.low,this.high^e.high,this.unsigned)};X.shiftLeft=function(e){return Dt(e)&&(e=e.toInt()),(e&=63)===0?this:e<32?je(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):je(0,this.low<<e-32,this.unsigned)};X.shl=X.shiftLeft;X.shiftRight=function(e){return Dt(e)&&(e=e.toInt()),(e&=63)===0?this:e<32?je(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):je(this.high>>e-32,this.high>=0?0:-1,this.unsigned)};X.shr=X.shiftRight;X.shiftRightUnsigned=function(e){return Dt(e)&&(e=e.toInt()),(e&=63)===0?this:e<32?je(this.low>>>e|this.high<<32-e,this.high>>>e,this.unsigned):e===32?je(this.high,0,this.unsigned):je(this.high>>>e-32,0,this.unsigned)};X.shru=X.shiftRightUnsigned;X.shr_u=X.shiftRightUnsigned;X.rotateLeft=function(e){var n;return Dt(e)&&(e=e.toInt()),(e&=63)===0?this:e===32?je(this.high,this.low,this.unsigned):e<32?(n=32-e,je(this.low<<e|this.high>>>n,this.high<<e|this.low>>>n,this.unsigned)):(e-=32,n=32-e,je(this.high<<e|this.low>>>n,this.low<<e|this.high>>>n,this.unsigned))};X.rotl=X.rotateLeft;X.rotateRight=function(e){var n;return Dt(e)&&(e=e.toInt()),(e&=63)===0?this:e===32?je(this.high,this.low,this.unsigned):e<32?(n=32-e,je(this.high<<n|this.low>>>e,this.low<<n|this.high>>>e,this.unsigned)):(e-=32,n=32-e,je(this.low<<n|this.high>>>e,this.high<<n|this.low>>>e,this.unsigned))};X.rotr=X.rotateRight;X.toSigned=function(){return this.unsigned?je(this.low,this.high,!1):this};X.toUnsigned=function(){return this.unsigned?this:je(this.low,this.high,!0)};X.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()};X.toBytesLE=function(){var e=this.high,n=this.low;return[n&255,n>>>8&255,n>>>16&255,n>>>24,e&255,e>>>8&255,e>>>16&255,e>>>24]};X.toBytesBE=function(){var e=this.high,n=this.low;return[e>>>24,e>>>16&255,e>>>8&255,e&255,n>>>24,n>>>16&255,n>>>8&255,n&255]};at.fromBytes=function(e,n,t){return t?at.fromBytesLE(e,n):at.fromBytesBE(e,n)};at.fromBytesLE=function(e,n){return new at(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,n)};at.fromBytesBE=function(e,n){return new at(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],n)};Nr=at});var D,Li=B(()=>{D={};D.Offset;D.Table;D.SIZEOF_SHORT=2;D.SIZEOF_INT=4;D.FILE_IDENTIFIER_LENGTH=4;D.SIZE_PREFIX_LENGTH=4;D.Encoding={UTF8_BYTES:1,UTF16_STRING:2};D.int32=new Int32Array(2);D.float32=new Float32Array(D.int32.buffer);D.float64=new Float64Array(D.int32.buffer);D.isLittleEndian=new Uint16Array(new Uint8Array([1,0]).buffer)[0]===1;D.Long=function(r,e){this.low=r|0,this.high=e|0};D.Long.create=function(r,e){return r==0&&e==0?D.Long.ZERO:new D.Long(r,e)};D.Long.prototype.toFloat64=function(){return(this.low>>>0)+this.high*4294967296};D.Long.prototype.equals=function(r){return this.low==r.low&&this.high==r.high};D.Long.ZERO=new D.Long(0,0);D.Builder=function(r){if(r)var e=r;else var e=1024;this.bb=D.ByteBuffer.allocate(e),this.space=e,this.minalign=1,this.vtable=null,this.vtable_in_use=0,this.isNested=!1,this.object_start=0,this.vtables=[],this.vector_num_elems=0,this.force_defaults=!1};D.Builder.prototype.clear=function(){this.bb.clear(),this.space=this.bb.capacity(),this.minalign=1,this.vtable=null,this.vtable_in_use=0,this.isNested=!1,this.object_start=0,this.vtables=[],this.vector_num_elems=0,this.force_defaults=!1};D.Builder.prototype.forceDefaults=function(r){this.force_defaults=r};D.Builder.prototype.dataBuffer=function(){return this.bb};D.Builder.prototype.asUint8Array=function(){return this.bb.bytes().subarray(this.bb.position(),this.bb.position()+this.offset())};D.Builder.prototype.prep=function(r,e){r>this.minalign&&(this.minalign=r);for(var n=~(this.bb.capacity()-this.space+e)+1&r-1;this.space<n+r+e;){var t=this.bb.capacity();this.bb=D.Builder.growByteBuffer(this.bb),this.space+=this.bb.capacity()-t}this.pad(n)};D.Builder.prototype.pad=function(r){for(var e=0;e<r;e++)this.bb.writeInt8(--this.space,0)};D.Builder.prototype.writeInt8=function(r){this.bb.writeInt8(this.space-=1,r)};D.Builder.prototype.writeInt16=function(r){this.bb.writeInt16(this.space-=2,r)};D.Builder.prototype.writeInt32=function(r){this.bb.writeInt32(this.space-=4,r)};D.Builder.prototype.writeInt64=function(r){this.bb.writeInt64(this.space-=8,r)};D.Builder.prototype.writeFloat32=function(r){this.bb.writeFloat32(this.space-=4,r)};D.Builder.prototype.writeFloat64=function(r){this.bb.writeFloat64(this.space-=8,r)};D.Builder.prototype.addInt8=function(r){this.prep(1,0),this.writeInt8(r)};D.Builder.prototype.addInt16=function(r){this.prep(2,0),this.writeInt16(r)};D.Builder.prototype.addInt32=function(r){this.prep(4,0),this.writeInt32(r)};D.Builder.prototype.addInt64=function(r){this.prep(8,0),this.writeInt64(r)};D.Builder.prototype.addFloat32=function(r){this.prep(4,0),this.writeFloat32(r)};D.Builder.prototype.addFloat64=function(r){this.prep(8,0),this.writeFloat64(r)};D.Builder.prototype.addFieldInt8=function(r,e,n){(this.force_defaults||e!=n)&&(this.addInt8(e),this.slot(r))};D.Builder.prototype.addFieldInt16=function(r,e,n){(this.force_defaults||e!=n)&&(this.addInt16(e),this.slot(r))};D.Builder.prototype.addFieldInt32=function(r,e,n){(this.force_defaults||e!=n)&&(this.addInt32(e),this.slot(r))};D.Builder.prototype.addFieldInt64=function(r,e,n){(this.force_defaults||!e.equals(n))&&(this.addInt64(e),this.slot(r))};D.Builder.prototype.addFieldFloat32=function(r,e,n){(this.force_defaults||e!=n)&&(this.addFloat32(e),this.slot(r))};D.Builder.prototype.addFieldFloat64=function(r,e,n){(this.force_defaults||e!=n)&&(this.addFloat64(e),this.slot(r))};D.Builder.prototype.addFieldOffset=function(r,e,n){(this.force_defaults||e!=n)&&(this.addOffset(e),this.slot(r))};D.Builder.prototype.addFieldStruct=function(r,e,n){e!=n&&(this.nested(e),this.slot(r))};D.Builder.prototype.nested=function(r){if(r!=this.offset())throw new Error("FlatBuffers: struct must be serialized inline.")};D.Builder.prototype.notNested=function(){if(this.isNested)throw new Error("FlatBuffers: object serialization must not be nested.")};D.Builder.prototype.slot=function(r){this.vtable[r]=this.offset()};D.Builder.prototype.offset=function(){return this.bb.capacity()-this.space};D.Builder.growByteBuffer=function(r){var e=r.capacity();if(e&3221225472)throw new Error("FlatBuffers: cannot grow buffer beyond 2 gigabytes.");var n=e<<1,t=D.ByteBuffer.allocate(n);return t.setPosition(n-e),t.bytes().set(r.bytes(),n-e),t};D.Builder.prototype.addOffset=function(r){this.prep(D.SIZEOF_INT,0),this.writeInt32(this.offset()-r+D.SIZEOF_INT)};D.Builder.prototype.startObject=function(r){this.notNested(),this.vtable==null&&(this.vtable=[]),this.vtable_in_use=r;for(var e=0;e<r;e++)this.vtable[e]=0;this.isNested=!0,this.object_start=this.offset()};D.Builder.prototype.endObject=function(){if(this.vtable==null||!this.isNested)throw new Error("FlatBuffers: endObject called without startObject");this.addInt32(0);for(var r=this.offset(),e=this.vtable_in_use-1;e>=0&&this.vtable[e]==0;e--);for(var n=e+1;e>=0;e--)this.addInt16(this.vtable[e]!=0?r-this.vtable[e]:0);var t=2;this.addInt16(r-this.object_start);var o=(n+t)*D.SIZEOF_SHORT;this.addInt16(o);var i=0,s=this.space;e:for(e=0;e<this.vtables.length;e++){var a=this.bb.capacity()-this.vtables[e];if(o==this.bb.readInt16(a)){for(var u=D.SIZEOF_SHORT;u<o;u+=D.SIZEOF_SHORT)if(this.bb.readInt16(s+u)!=this.bb.readInt16(a+u))continue e;i=this.vtables[e];break}}return i?(this.space=this.bb.capacity()-r,this.bb.writeInt32(this.space,i-r)):(this.vtables.push(this.offset()),this.bb.writeInt32(this.bb.capacity()-r,this.offset()-r)),this.isNested=!1,r};D.Builder.prototype.finish=function(r,e,n){var t=n?D.SIZE_PREFIX_LENGTH:0;if(e){var o=e;if(this.prep(this.minalign,D.SIZEOF_INT+D.FILE_IDENTIFIER_LENGTH+t),o.length!=D.FILE_IDENTIFIER_LENGTH)throw new Error("FlatBuffers: file identifier must be length "+D.FILE_IDENTIFIER_LENGTH);for(var i=D.FILE_IDENTIFIER_LENGTH-1;i>=0;i--)this.writeInt8(o.charCodeAt(i))}this.prep(this.minalign,D.SIZEOF_INT+t),this.addOffset(r),t&&this.addInt32(this.bb.capacity()-this.space),this.bb.setPosition(this.space)};D.Builder.prototype.finishSizePrefixed=function(r,e){this.finish(r,e,!0)};D.Builder.prototype.requiredField=function(r,e){var n=this.bb.capacity()-r,t=n-this.bb.readInt32(n),o=this.bb.readInt16(t+e)!=0;if(!o)throw new Error("FlatBuffers: field "+e+" must be set")};D.Builder.prototype.startVector=function(r,e,n){this.notNested(),this.vector_num_elems=e,this.prep(D.SIZEOF_INT,r*e),this.prep(n,r*e)};D.Builder.prototype.endVector=function(){return this.writeInt32(this.vector_num_elems),this.offset()};D.Builder.prototype.createString=function(r){if(r instanceof Uint8Array)var e=r;else for(var e=[],n=0;n<r.length;){var t,o=r.charCodeAt(n++);if(o<55296||o>=56320)t=o;else{var i=r.charCodeAt(n++);t=(o<<10)+i+(65536-56623104-56320)}t<128?e.push(t):(t<2048?e.push(t>>6&31|192):(t<65536?e.push(t>>12&15|224):e.push(t>>18&7|240,t>>12&63|128),e.push(t>>6&63|128)),e.push(t&63|128))}this.addInt8(0),this.startVector(1,e.length,1),this.bb.setPosition(this.space-=e.length);for(var n=0,s=this.space,a=this.bb.bytes();n<e.length;n++)a[s++]=e[n];return this.endVector()};D.Builder.prototype.createLong=function(r,e){return D.Long.create(r,e)};D.ByteBuffer=function(r){this.bytes_=r,this.position_=0};D.ByteBuffer.allocate=function(r){return new D.ByteBuffer(new Uint8Array(r))};D.ByteBuffer.prototype.clear=function(){this.position_=0};D.ByteBuffer.prototype.bytes=function(){return this.bytes_};D.ByteBuffer.prototype.position=function(){return this.position_};D.ByteBuffer.prototype.setPosition=function(r){this.position_=r};D.ByteBuffer.prototype.capacity=function(){return this.bytes_.length};D.ByteBuffer.prototype.readInt8=function(r){return this.readUint8(r)<<24>>24};D.ByteBuffer.prototype.readUint8=function(r){return this.bytes_[r]};D.ByteBuffer.prototype.readInt16=function(r){return this.readUint16(r)<<16>>16};D.ByteBuffer.prototype.readUint16=function(r){return this.bytes_[r]|this.bytes_[r+1]<<8};D.ByteBuffer.prototype.readInt32=function(r){return this.bytes_[r]|this.bytes_[r+1]<<8|this.bytes_[r+2]<<16|this.bytes_[r+3]<<24};D.ByteBuffer.prototype.readUint32=function(r){return this.readInt32(r)>>>0};D.ByteBuffer.prototype.readInt64=function(r){return new D.Long(this.readInt32(r),this.readInt32(r+4))};D.ByteBuffer.prototype.readUint64=function(r){return new D.Long(this.readUint32(r),this.readUint32(r+4))};D.ByteBuffer.prototype.readFloat32=function(r){return D.int32[0]=this.readInt32(r),D.float32[0]};D.ByteBuffer.prototype.readFloat64=function(r){return D.int32[D.isLittleEndian?0:1]=this.readInt32(r),D.int32[D.isLittleEndian?1:0]=this.readInt32(r+4),D.float64[0]};D.ByteBuffer.prototype.writeInt8=function(r,e){this.bytes_[r]=e};D.ByteBuffer.prototype.writeUint8=function(r,e){this.bytes_[r]=e};D.ByteBuffer.prototype.writeInt16=function(r,e){this.bytes_[r]=e,this.bytes_[r+1]=e>>8};D.ByteBuffer.prototype.writeUint16=function(r,e){this.bytes_[r]=e,this.bytes_[r+1]=e>>8};D.ByteBuffer.prototype.writeInt32=function(r,e){this.bytes_[r]=e,this.bytes_[r+1]=e>>8,this.bytes_[r+2]=e>>16,this.bytes_[r+3]=e>>24};D.ByteBuffer.prototype.writeUint32=function(r,e){this.bytes_[r]=e,this.bytes_[r+1]=e>>8,this.bytes_[r+2]=e>>16,this.bytes_[r+3]=e>>24};D.ByteBuffer.prototype.writeInt64=function(r,e){this.writeInt32(r,e.low),this.writeInt32(r+4,e.high)};D.ByteBuffer.prototype.writeUint64=function(r,e){this.writeUint32(r,e.low),this.writeUint32(r+4,e.high)};D.ByteBuffer.prototype.writeFloat32=function(r,e){D.float32[0]=e,this.writeInt32(r,D.int32[0])};D.ByteBuffer.prototype.writeFloat64=function(r,e){D.float64[0]=e,this.writeInt32(r,D.int32[D.isLittleEndian?0:1]),this.writeInt32(r+4,D.int32[D.isLittleEndian?1:0])};D.ByteBuffer.prototype.getBufferIdentifier=function(){if(this.bytes_.length<this.position_+D.SIZEOF_INT+D.FILE_IDENTIFIER_LENGTH)throw new Error("FlatBuffers: ByteBuffer is too short to contain an identifier.");for(var r="",e=0;e<D.FILE_IDENTIFIER_LENGTH;e++)r+=String.fromCharCode(this.readInt8(this.position_+D.SIZEOF_INT+e));return r};D.ByteBuffer.prototype.__offset=function(r,e){var n=r-this.readInt32(r);return e<this.readInt16(n)?this.readInt16(n+e):0};D.ByteBuffer.prototype.__union=function(r,e){return r.bb_pos=e+this.readInt32(e),r.bb=this,r};D.ByteBuffer.prototype.__string=function(r,e){r+=this.readInt32(r);var n=this.readInt32(r),t="",o=0;if(r+=D.SIZEOF_INT,e===D.Encoding.UTF8_BYTES)return this.bytes_.subarray(r,r+n);for(;o<n;){var i,s=this.readUint8(r+o++);if(s<192)i=s;else{var a=this.readUint8(r+o++);if(s<224)i=(s&31)<<6|a&63;else{var u=this.readUint8(r+o++);if(s<240)i=(s&15)<<12|(a&63)<<6|u&63;else{var l=this.readUint8(r+o++);i=(s&7)<<18|(a&63)<<12|(u&63)<<6|l&63}}}i<65536?t+=String.fromCharCode(i):(i-=65536,t+=String.fromCharCode((i>>10)+55296,(i&1024-1)+56320))}return t};D.ByteBuffer.prototype.__indirect=function(r){return r+this.readInt32(r)};D.ByteBuffer.prototype.__vector=function(r){return r+this.readInt32(r)+D.SIZEOF_INT};D.ByteBuffer.prototype.__vector_len=function(r){return this.readInt32(r+this.readInt32(r))};D.ByteBuffer.prototype.__has_identifier=function(r){if(r.length!=D.FILE_IDENTIFIER_LENGTH)throw new Error("FlatBuffers: file identifier must be length "+D.FILE_IDENTIFIER_LENGTH);for(var e=0;e<D.FILE_IDENTIFIER_LENGTH;e++)if(r.charCodeAt(e)!=this.readInt8(this.position_+D.SIZEOF_INT+e))return!1;return!0};D.ByteBuffer.prototype.createLong=function(r,e){return D.Long.create(r,e)}});var le,Eo=B(()=>{"use strict";Li();(e=>{let r;(t=>{let n;(i=>{let o;(A=>(A[A.UNDEFINED=0]="UNDEFINED",A[A.FLOAT=1]="FLOAT",A[A.INT=2]="INT",A[A.STRING=3]="STRING",A[A.TENSOR=4]="TENSOR",A[A.GRAPH=5]="GRAPH",A[A.FLOATS=6]="FLOATS",A[A.INTS=7]="INTS",A[A.STRINGS=8]="STRINGS",A[A.TENSORS=9]="TENSORS",A[A.GRAPHS=10]="GRAPHS",A[A.SPARSE_TENSOR=11]="SPARSE_TENSOR",A[A.SPARSE_TENSORS=12]="SPARSE_TENSORS"))(o=i.AttributeType||={})})(n=t.fbs||={})})(r=e.experimental||={})})(le||={});(e=>{let r;(t=>{let n;(i=>{let o;(l=>(l[l.UNKNOWN=0]="UNKNOWN",l[l.VALUE=1]="VALUE",l[l.PARAM=2]="PARAM"))(o=i.DimensionValueType||={})})(n=t.fbs||={})})(r=e.experimental||={})})(le||={});(e=>{let r;(t=>{let n;(i=>{let o;(H=>(H[H.UNDEFINED=0]="UNDEFINED",H[H.FLOAT=1]="FLOAT",H[H.UINT8=2]="UINT8",H[H.INT8=3]="INT8",H[H.UINT16=4]="UINT16",H[H.INT16=5]="INT16",H[H.INT32=6]="INT32",H[H.INT64=7]="INT64",H[H.STRING=8]="STRING",H[H.BOOL=9]="BOOL",H[H.FLOAT16=10]="FLOAT16",H[H.DOUBLE=11]="DOUBLE",H[H.UINT32=12]="UINT32",H[H.UINT64=13]="UINT64",H[H.COMPLEX64=14]="COMPLEX64",H[H.COMPLEX128=15]="COMPLEX128",H[H.BFLOAT16=16]="BFLOAT16",H[H.FLOAT8E4M3FN=17]="FLOAT8E4M3FN",H[H.FLOAT8E4M3FNUZ=18]="FLOAT8E4M3FNUZ",H[H.FLOAT8E5M2=19]="FLOAT8E5M2",H[H.FLOAT8E5M2FNUZ=20]="FLOAT8E5M2FNUZ"))(o=i.TensorDataType||={})})(n=t.fbs||={})})(r=e.experimental||={})})(le||={});(e=>{let r;(t=>{let n;(i=>{let o;(u=>(u[u.Primitive=0]="Primitive",u[u.Fused=1]="Fused"))(o=i.NodeType||={})})(n=t.fbs||={})})(r=e.experimental||={})})(le||={});(e=>{let r;(t=>{let n;(i=>{let o;(d=>(d[d.NONE=0]="NONE",d[d.tensor_type=1]="tensor_type",d[d.sequence_type=2]="sequence_type",d[d.map_type=3]="map_type"))(o=i.TypeInfoValue||={})})(n=t.fbs||={})})(r=e.experimental||={})})(le||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,u){return this.bb_pos=a,this.bb=u,this}static getRootAsShape(a,u){return(u||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsShape(a,u){return a.setPosition(a.position()+D.SIZE_PREFIX_LENGTH),(u||new o).__init(a.readInt32(a.position())+a.position(),a)}dim(a,u){let l=this.bb.__offset(this.bb_pos,4);return l?(u||new e.experimental.fbs.Dimension).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+l)+a*4),this.bb):null}dimLength(){let a=this.bb.__offset(this.bb_pos,4);return a?this.bb.__vector_len(this.bb_pos+a):0}static startShape(a){a.startObject(1)}static addDim(a,u){a.addFieldOffset(0,u,0)}static createDimVector(a,u){a.startVector(4,u.length,4);for(let l=u.length-1;l>=0;l--)a.addOffset(u[l]);return a.endVector()}static startDimVector(a,u){a.startVector(4,u,4)}static endShape(a){return a.endObject()}static createShape(a,u){return o.startShape(a),o.addDim(a,u),o.endShape(a)}}i.Shape=o})(n=t.fbs||={})})(r=e.experimental||={})})(le||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,u){return this.bb_pos=a,this.bb=u,this}static getRootAsDimension(a,u){return(u||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsDimension(a,u){return a.setPosition(a.position()+D.SIZE_PREFIX_LENGTH),(u||new o).__init(a.readInt32(a.position())+a.position(),a)}value(a){let u=this.bb.__offset(this.bb_pos,4);return u?(a||new e.experimental.fbs.DimensionValue).__init(this.bb.__indirect(this.bb_pos+u),this.bb):null}denotation(a){let u=this.bb.__offset(this.bb_pos,6);return u?this.bb.__string(this.bb_pos+u,a):null}static startDimension(a){a.startObject(2)}static addValue(a,u){a.addFieldOffset(0,u,0)}static addDenotation(a,u){a.addFieldOffset(1,u,0)}static endDimension(a){return a.endObject()}static createDimension(a,u,l){return o.startDimension(a),o.addValue(a,u),o.addDenotation(a,l),o.endDimension(a)}}i.Dimension=o})(n=t.fbs||={})})(r=e.experimental||={})})(le||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,u){return this.bb_pos=a,this.bb=u,this}static getRootAsDimensionValue(a,u){return(u||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsDimensionValue(a,u){return a.setPosition(a.position()+D.SIZE_PREFIX_LENGTH),(u||new o).__init(a.readInt32(a.position())+a.position(),a)}dimType(){let a=this.bb.__offset(this.bb_pos,4);return a?this.bb.readInt8(this.bb_pos+a):0}dimValue(){let a=this.bb.__offset(this.bb_pos,6);return a?this.bb.readInt64(this.bb_pos+a):this.bb.createLong(0,0)}dimParam(a){let u=this.bb.__offset(this.bb_pos,8);return u?this.bb.__string(this.bb_pos+u,a):null}static startDimensionValue(a){a.startObject(3)}static addDimType(a,u){a.addFieldInt8(0,u,0)}static addDimValue(a,u){a.addFieldInt64(1,u,a.createLong(0,0))}static addDimParam(a,u){a.addFieldOffset(2,u,0)}static endDimensionValue(a){return a.endObject()}static createDimensionValue(a,u,l,d){return o.startDimensionValue(a),o.addDimType(a,u),o.addDimValue(a,l),o.addDimParam(a,d),o.endDimensionValue(a)}}i.DimensionValue=o})(n=t.fbs||={})})(r=e.experimental||={})})(le||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,u){return this.bb_pos=a,this.bb=u,this}static getRootAsTensorTypeAndShape(a,u){return(u||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsTensorTypeAndShape(a,u){return a.setPosition(a.position()+D.SIZE_PREFIX_LENGTH),(u||new o).__init(a.readInt32(a.position())+a.position(),a)}elemType(){let a=this.bb.__offset(this.bb_pos,4);return a?this.bb.readInt32(this.bb_pos+a):0}shape(a){let u=this.bb.__offset(this.bb_pos,6);return u?(a||new e.experimental.fbs.Shape).__init(this.bb.__indirect(this.bb_pos+u),this.bb):null}static startTensorTypeAndShape(a){a.startObject(2)}static addElemType(a,u){a.addFieldInt32(0,u,0)}static addShape(a,u){a.addFieldOffset(1,u,0)}static endTensorTypeAndShape(a){return a.endObject()}static createTensorTypeAndShape(a,u,l){return o.startTensorTypeAndShape(a),o.addElemType(a,u),o.addShape(a,l),o.endTensorTypeAndShape(a)}}i.TensorTypeAndShape=o})(n=t.fbs||={})})(r=e.experimental||={})})(le||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,u){return this.bb_pos=a,this.bb=u,this}static getRootAsMapType(a,u){return(u||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsMapType(a,u){return a.setPosition(a.position()+D.SIZE_PREFIX_LENGTH),(u||new o).__init(a.readInt32(a.position())+a.position(),a)}keyType(){let a=this.bb.__offset(this.bb_pos,4);return a?this.bb.readInt32(this.bb_pos+a):0}valueType(a){let u=this.bb.__offset(this.bb_pos,6);return u?(a||new e.experimental.fbs.TypeInfo).__init(this.bb.__indirect(this.bb_pos+u),this.bb):null}static startMapType(a){a.startObject(2)}static addKeyType(a,u){a.addFieldInt32(0,u,0)}static addValueType(a,u){a.addFieldOffset(1,u,0)}static endMapType(a){return a.endObject()}static createMapType(a,u,l){return o.startMapType(a),o.addKeyType(a,u),o.addValueType(a,l),o.endMapType(a)}}i.MapType=o})(n=t.fbs||={})})(r=e.experimental||={})})(le||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,u){return this.bb_pos=a,this.bb=u,this}static getRootAsSequenceType(a,u){return(u||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsSequenceType(a,u){return a.setPosition(a.position()+D.SIZE_PREFIX_LENGTH),(u||new o).__init(a.readInt32(a.position())+a.position(),a)}elemType(a){let u=this.bb.__offset(this.bb_pos,4);return u?(a||new e.experimental.fbs.TypeInfo).__init(this.bb.__indirect(this.bb_pos+u),this.bb):null}static startSequenceType(a){a.startObject(1)}static addElemType(a,u){a.addFieldOffset(0,u,0)}static endSequenceType(a){return a.endObject()}static createSequenceType(a,u){return o.startSequenceType(a),o.addElemType(a,u),o.endSequenceType(a)}}i.SequenceType=o})(n=t.fbs||={})})(r=e.experimental||={})})(le||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,u){return this.bb_pos=a,this.bb=u,this}nodeIndex(){return this.bb.readUint32(this.bb_pos)}srcArgIndex(){return this.bb.readInt32(this.bb_pos+4)}dstArgIndex(){return this.bb.readInt32(this.bb_pos+8)}static createEdgeEnd(a,u,l,d){return a.prep(4,12),a.writeInt32(d),a.writeInt32(l),a.writeInt32(u),a.offset()}}i.EdgeEnd=o})(n=t.fbs||={})})(r=e.experimental||={})})(le||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,u){return this.bb_pos=a,this.bb=u,this}static getRootAsNodeEdge(a,u){return(u||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsNodeEdge(a,u){return a.setPosition(a.position()+D.SIZE_PREFIX_LENGTH),(u||new o).__init(a.readInt32(a.position())+a.position(),a)}nodeIndex(){let a=this.bb.__offset(this.bb_pos,4);return a?this.bb.readUint32(this.bb_pos+a):0}inputEdges(a,u){let l=this.bb.__offset(this.bb_pos,6);return l?(u||new e.experimental.fbs.EdgeEnd).__init(this.bb.__vector(this.bb_pos+l)+a*12,this.bb):null}inputEdgesLength(){let a=this.bb.__offset(this.bb_pos,6);return a?this.bb.__vector_len(this.bb_pos+a):0}outputEdges(a,u){let l=this.bb.__offset(this.bb_pos,8);return l?(u||new e.experimental.fbs.EdgeEnd).__init(this.bb.__vector(this.bb_pos+l)+a*12,this.bb):null}outputEdgesLength(){let a=this.bb.__offset(this.bb_pos,8);return a?this.bb.__vector_len(this.bb_pos+a):0}static startNodeEdge(a){a.startObject(3)}static addNodeIndex(a,u){a.addFieldInt32(0,u,0)}static addInputEdges(a,u){a.addFieldOffset(1,u,0)}static startInputEdgesVector(a,u){a.startVector(12,u,4)}static addOutputEdges(a,u){a.addFieldOffset(2,u,0)}static startOutputEdgesVector(a,u){a.startVector(12,u,4)}static endNodeEdge(a){return a.endObject()}static createNodeEdge(a,u,l,d){return o.startNodeEdge(a),o.addNodeIndex(a,u),o.addInputEdges(a,l),o.addOutputEdges(a,d),o.endNodeEdge(a)}}i.NodeEdge=o})(n=t.fbs||={})})(r=e.experimental||={})})(le||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,u){return this.bb_pos=a,this.bb=u,this}static getRootAsNode(a,u){return(u||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsNode(a,u){return a.setPosition(a.position()+D.SIZE_PREFIX_LENGTH),(u||new o).__init(a.readInt32(a.position())+a.position(),a)}name(a){let u=this.bb.__offset(this.bb_pos,4);return u?this.bb.__string(this.bb_pos+u,a):null}docString(a){let u=this.bb.__offset(this.bb_pos,6);return u?this.bb.__string(this.bb_pos+u,a):null}domain(a){let u=this.bb.__offset(this.bb_pos,8);return u?this.bb.__string(this.bb_pos+u,a):null}sinceVersion(){let a=this.bb.__offset(this.bb_pos,10);return a?this.bb.readInt32(this.bb_pos+a):0}index(){let a=this.bb.__offset(this.bb_pos,12);return a?this.bb.readUint32(this.bb_pos+a):0}opType(a){let u=this.bb.__offset(this.bb_pos,14);return u?this.bb.__string(this.bb_pos+u,a):null}type(){let a=this.bb.__offset(this.bb_pos,16);return a?this.bb.readInt32(this.bb_pos+a):0}executionProviderType(a){let u=this.bb.__offset(this.bb_pos,18);return u?this.bb.__string(this.bb_pos+u,a):null}inputs(a,u){let l=this.bb.__offset(this.bb_pos,20);return l?this.bb.__string(this.bb.__vector(this.bb_pos+l)+a*4,u):null}inputsLength(){let a=this.bb.__offset(this.bb_pos,20);return a?this.bb.__vector_len(this.bb_pos+a):0}outputs(a,u){let l=this.bb.__offset(this.bb_pos,22);return l?this.bb.__string(this.bb.__vector(this.bb_pos+l)+a*4,u):null}outputsLength(){let a=this.bb.__offset(this.bb_pos,22);return a?this.bb.__vector_len(this.bb_pos+a):0}attributes(a,u){let l=this.bb.__offset(this.bb_pos,24);return l?(u||new e.experimental.fbs.Attribute).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+l)+a*4),this.bb):null}attributesLength(){let a=this.bb.__offset(this.bb_pos,24);return a?this.bb.__vector_len(this.bb_pos+a):0}inputArgCounts(a){let u=this.bb.__offset(this.bb_pos,26);return u?this.bb.readInt32(this.bb.__vector(this.bb_pos+u)+a*4):0}inputArgCountsLength(){let a=this.bb.__offset(this.bb_pos,26);return a?this.bb.__vector_len(this.bb_pos+a):0}inputArgCountsArray(){let a=this.bb.__offset(this.bb_pos,26);return a?new Int32Array(this.bb.bytes().buffer,this.bb.bytes().byteOffset+this.bb.__vector(this.bb_pos+a),this.bb.__vector_len(this.bb_pos+a)):null}implicitInputs(a,u){let l=this.bb.__offset(this.bb_pos,28);return l?this.bb.__string(this.bb.__vector(this.bb_pos+l)+a*4,u):null}implicitInputsLength(){let a=this.bb.__offset(this.bb_pos,28);return a?this.bb.__vector_len(this.bb_pos+a):0}static startNode(a){a.startObject(13)}static addName(a,u){a.addFieldOffset(0,u,0)}static addDocString(a,u){a.addFieldOffset(1,u,0)}static addDomain(a,u){a.addFieldOffset(2,u,0)}static addSinceVersion(a,u){a.addFieldInt32(3,u,0)}static addIndex(a,u){a.addFieldInt32(4,u,0)}static addOpType(a,u){a.addFieldOffset(5,u,0)}static addType(a,u){a.addFieldInt32(6,u,0)}static addExecutionProviderType(a,u){a.addFieldOffset(7,u,0)}static addInputs(a,u){a.addFieldOffset(8,u,0)}static createInputsVector(a,u){a.startVector(4,u.length,4);for(let l=u.length-1;l>=0;l--)a.addOffset(u[l]);return a.endVector()}static startInputsVector(a,u){a.startVector(4,u,4)}static addOutputs(a,u){a.addFieldOffset(9,u,0)}static createOutputsVector(a,u){a.startVector(4,u.length,4);for(let l=u.length-1;l>=0;l--)a.addOffset(u[l]);return a.endVector()}static startOutputsVector(a,u){a.startVector(4,u,4)}static addAttributes(a,u){a.addFieldOffset(10,u,0)}static createAttributesVector(a,u){a.startVector(4,u.length,4);for(let l=u.length-1;l>=0;l--)a.addOffset(u[l]);return a.endVector()}static startAttributesVector(a,u){a.startVector(4,u,4)}static addInputArgCounts(a,u){a.addFieldOffset(11,u,0)}static createInputArgCountsVector(a,u){a.startVector(4,u.length,4);for(let l=u.length-1;l>=0;l--)a.addInt32(u[l]);return a.endVector()}static startInputArgCountsVector(a,u){a.startVector(4,u,4)}static addImplicitInputs(a,u){a.addFieldOffset(12,u,0)}static createImplicitInputsVector(a,u){a.startVector(4,u.length,4);for(let l=u.length-1;l>=0;l--)a.addOffset(u[l]);return a.endVector()}static startImplicitInputsVector(a,u){a.startVector(4,u,4)}static endNode(a){return a.endObject()}static createNode(a,u,l,d,p,h,g,b,v,$,T,x,A,O){return o.startNode(a),o.addName(a,u),o.addDocString(a,l),o.addDomain(a,d),o.addSinceVersion(a,p),o.addIndex(a,h),o.addOpType(a,g),o.addType(a,b),o.addExecutionProviderType(a,v),o.addInputs(a,$),o.addOutputs(a,T),o.addAttributes(a,x),o.addInputArgCounts(a,A),o.addImplicitInputs(a,O),o.endNode(a)}}i.Node=o})(n=t.fbs||={})})(r=e.experimental||={})})(le||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,u){return this.bb_pos=a,this.bb=u,this}static getRootAsValueInfo(a,u){return(u||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsValueInfo(a,u){return a.setPosition(a.position()+D.SIZE_PREFIX_LENGTH),(u||new o).__init(a.readInt32(a.position())+a.position(),a)}name(a){let u=this.bb.__offset(this.bb_pos,4);return u?this.bb.__string(this.bb_pos+u,a):null}docString(a){let u=this.bb.__offset(this.bb_pos,6);return u?this.bb.__string(this.bb_pos+u,a):null}type(a){let u=this.bb.__offset(this.bb_pos,8);return u?(a||new e.experimental.fbs.TypeInfo).__init(this.bb.__indirect(this.bb_pos+u),this.bb):null}static startValueInfo(a){a.startObject(3)}static addName(a,u){a.addFieldOffset(0,u,0)}static addDocString(a,u){a.addFieldOffset(1,u,0)}static addType(a,u){a.addFieldOffset(2,u,0)}static endValueInfo(a){return a.endObject()}static createValueInfo(a,u,l,d){return o.startValueInfo(a),o.addName(a,u),o.addDocString(a,l),o.addType(a,d),o.endValueInfo(a)}}i.ValueInfo=o})(n=t.fbs||={})})(r=e.experimental||={})})(le||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,u){return this.bb_pos=a,this.bb=u,this}static getRootAsTypeInfo(a,u){return(u||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsTypeInfo(a,u){return a.setPosition(a.position()+D.SIZE_PREFIX_LENGTH),(u||new o).__init(a.readInt32(a.position())+a.position(),a)}denotation(a){let u=this.bb.__offset(this.bb_pos,4);return u?this.bb.__string(this.bb_pos+u,a):null}valueType(){let a=this.bb.__offset(this.bb_pos,6);return a?this.bb.readUint8(this.bb_pos+a):0}value(a){let u=this.bb.__offset(this.bb_pos,8);return u?this.bb.__union(a,this.bb_pos+u):null}static startTypeInfo(a){a.startObject(3)}static addDenotation(a,u){a.addFieldOffset(0,u,0)}static addValueType(a,u){a.addFieldInt8(1,u,0)}static addValue(a,u){a.addFieldOffset(2,u,0)}static endTypeInfo(a){return a.endObject()}static createTypeInfo(a,u,l,d){return o.startTypeInfo(a),o.addDenotation(a,u),o.addValueType(a,l),o.addValue(a,d),o.endTypeInfo(a)}}i.TypeInfo=o})(n=t.fbs||={})})(r=e.experimental||={})})(le||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,u){return this.bb_pos=a,this.bb=u,this}static getRootAsOperatorSetId(a,u){return(u||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsOperatorSetId(a,u){return a.setPosition(a.position()+D.SIZE_PREFIX_LENGTH),(u||new o).__init(a.readInt32(a.position())+a.position(),a)}domain(a){let u=this.bb.__offset(this.bb_pos,4);return u?this.bb.__string(this.bb_pos+u,a):null}version(){let a=this.bb.__offset(this.bb_pos,6);return a?this.bb.readInt64(this.bb_pos+a):this.bb.createLong(0,0)}static startOperatorSetId(a){a.startObject(2)}static addDomain(a,u){a.addFieldOffset(0,u,0)}static addVersion(a,u){a.addFieldInt64(1,u,a.createLong(0,0))}static endOperatorSetId(a){return a.endObject()}static createOperatorSetId(a,u,l){return o.startOperatorSetId(a),o.addDomain(a,u),o.addVersion(a,l),o.endOperatorSetId(a)}}i.OperatorSetId=o})(n=t.fbs||={})})(r=e.experimental||={})})(le||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,u){return this.bb_pos=a,this.bb=u,this}static getRootAsTensor(a,u){return(u||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsTensor(a,u){return a.setPosition(a.position()+D.SIZE_PREFIX_LENGTH),(u||new o).__init(a.readInt32(a.position())+a.position(),a)}name(a){let u=this.bb.__offset(this.bb_pos,4);return u?this.bb.__string(this.bb_pos+u,a):null}docString(a){let u=this.bb.__offset(this.bb_pos,6);return u?this.bb.__string(this.bb_pos+u,a):null}dims(a){let u=this.bb.__offset(this.bb_pos,8);return u?this.bb.readInt64(this.bb.__vector(this.bb_pos+u)+a*8):this.bb.createLong(0,0)}dimsLength(){let a=this.bb.__offset(this.bb_pos,8);return a?this.bb.__vector_len(this.bb_pos+a):0}dataType(){let a=this.bb.__offset(this.bb_pos,10);return a?this.bb.readInt32(this.bb_pos+a):0}rawData(a){let u=this.bb.__offset(this.bb_pos,12);return u?this.bb.readUint8(this.bb.__vector(this.bb_pos+u)+a):0}rawDataLength(){let a=this.bb.__offset(this.bb_pos,12);return a?this.bb.__vector_len(this.bb_pos+a):0}rawDataArray(){let a=this.bb.__offset(this.bb_pos,12);return a?new Uint8Array(this.bb.bytes().buffer,this.bb.bytes().byteOffset+this.bb.__vector(this.bb_pos+a),this.bb.__vector_len(this.bb_pos+a)):null}stringData(a,u){let l=this.bb.__offset(this.bb_pos,14);return l?this.bb.__string(this.bb.__vector(this.bb_pos+l)+a*4,u):null}stringDataLength(){let a=this.bb.__offset(this.bb_pos,14);return a?this.bb.__vector_len(this.bb_pos+a):0}static startTensor(a){a.startObject(6)}static addName(a,u){a.addFieldOffset(0,u,0)}static addDocString(a,u){a.addFieldOffset(1,u,0)}static addDims(a,u){a.addFieldOffset(2,u,0)}static createDimsVector(a,u){a.startVector(8,u.length,8);for(let l=u.length-1;l>=0;l--)a.addInt64(u[l]);return a.endVector()}static startDimsVector(a,u){a.startVector(8,u,8)}static addDataType(a,u){a.addFieldInt32(3,u,0)}static addRawData(a,u){a.addFieldOffset(4,u,0)}static createRawDataVector(a,u){a.startVector(1,u.length,1);for(let l=u.length-1;l>=0;l--)a.addInt8(u[l]);return a.endVector()}static startRawDataVector(a,u){a.startVector(1,u,1)}static addStringData(a,u){a.addFieldOffset(5,u,0)}static createStringDataVector(a,u){a.startVector(4,u.length,4);for(let l=u.length-1;l>=0;l--)a.addOffset(u[l]);return a.endVector()}static startStringDataVector(a,u){a.startVector(4,u,4)}static endTensor(a){return a.endObject()}static createTensor(a,u,l,d,p,h,g){return o.startTensor(a),o.addName(a,u),o.addDocString(a,l),o.addDims(a,d),o.addDataType(a,p),o.addRawData(a,h),o.addStringData(a,g),o.endTensor(a)}}i.Tensor=o})(n=t.fbs||={})})(r=e.experimental||={})})(le||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,u){return this.bb_pos=a,this.bb=u,this}static getRootAsSparseTensor(a,u){return(u||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsSparseTensor(a,u){return a.setPosition(a.position()+D.SIZE_PREFIX_LENGTH),(u||new o).__init(a.readInt32(a.position())+a.position(),a)}values(a){let u=this.bb.__offset(this.bb_pos,4);return u?(a||new e.experimental.fbs.Tensor).__init(this.bb.__indirect(this.bb_pos+u),this.bb):null}indices(a){let u=this.bb.__offset(this.bb_pos,6);return u?(a||new e.experimental.fbs.Tensor).__init(this.bb.__indirect(this.bb_pos+u),this.bb):null}dims(a){let u=this.bb.__offset(this.bb_pos,8);return u?this.bb.readInt64(this.bb.__vector(this.bb_pos+u)+a*8):this.bb.createLong(0,0)}dimsLength(){let a=this.bb.__offset(this.bb_pos,8);return a?this.bb.__vector_len(this.bb_pos+a):0}static startSparseTensor(a){a.startObject(3)}static addValues(a,u){a.addFieldOffset(0,u,0)}static addIndices(a,u){a.addFieldOffset(1,u,0)}static addDims(a,u){a.addFieldOffset(2,u,0)}static createDimsVector(a,u){a.startVector(8,u.length,8);for(let l=u.length-1;l>=0;l--)a.addInt64(u[l]);return a.endVector()}static startDimsVector(a,u){a.startVector(8,u,8)}static endSparseTensor(a){return a.endObject()}static createSparseTensor(a,u,l,d){return o.startSparseTensor(a),o.addValues(a,u),o.addIndices(a,l),o.addDims(a,d),o.endSparseTensor(a)}}i.SparseTensor=o})(n=t.fbs||={})})(r=e.experimental||={})})(le||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,u){return this.bb_pos=a,this.bb=u,this}static getRootAsAttribute(a,u){return(u||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsAttribute(a,u){return a.setPosition(a.position()+D.SIZE_PREFIX_LENGTH),(u||new o).__init(a.readInt32(a.position())+a.position(),a)}name(a){let u=this.bb.__offset(this.bb_pos,4);return u?this.bb.__string(this.bb_pos+u,a):null}docString(a){let u=this.bb.__offset(this.bb_pos,6);return u?this.bb.__string(this.bb_pos+u,a):null}type(){let a=this.bb.__offset(this.bb_pos,8);return a?this.bb.readInt32(this.bb_pos+a):0}f(){let a=this.bb.__offset(this.bb_pos,10);return a?this.bb.readFloat32(this.bb_pos+a):0}i(){let a=this.bb.__offset(this.bb_pos,12);return a?this.bb.readInt64(this.bb_pos+a):this.bb.createLong(0,0)}s(a){let u=this.bb.__offset(this.bb_pos,14);return u?this.bb.__string(this.bb_pos+u,a):null}t(a){let u=this.bb.__offset(this.bb_pos,16);return u?(a||new e.experimental.fbs.Tensor).__init(this.bb.__indirect(this.bb_pos+u),this.bb):null}g(a){let u=this.bb.__offset(this.bb_pos,18);return u?(a||new e.experimental.fbs.Graph).__init(this.bb.__indirect(this.bb_pos+u),this.bb):null}floats(a){let u=this.bb.__offset(this.bb_pos,20);return u?this.bb.readFloat32(this.bb.__vector(this.bb_pos+u)+a*4):0}floatsLength(){let a=this.bb.__offset(this.bb_pos,20);return a?this.bb.__vector_len(this.bb_pos+a):0}floatsArray(){let a=this.bb.__offset(this.bb_pos,20);return a?new Float32Array(this.bb.bytes().buffer,this.bb.bytes().byteOffset+this.bb.__vector(this.bb_pos+a),this.bb.__vector_len(this.bb_pos+a)):null}ints(a){let u=this.bb.__offset(this.bb_pos,22);return u?this.bb.readInt64(this.bb.__vector(this.bb_pos+u)+a*8):this.bb.createLong(0,0)}intsLength(){let a=this.bb.__offset(this.bb_pos,22);return a?this.bb.__vector_len(this.bb_pos+a):0}strings(a,u){let l=this.bb.__offset(this.bb_pos,24);return l?this.bb.__string(this.bb.__vector(this.bb_pos+l)+a*4,u):null}stringsLength(){let a=this.bb.__offset(this.bb_pos,24);return a?this.bb.__vector_len(this.bb_pos+a):0}tensors(a,u){let l=this.bb.__offset(this.bb_pos,26);return l?(u||new e.experimental.fbs.Tensor).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+l)+a*4),this.bb):null}tensorsLength(){let a=this.bb.__offset(this.bb_pos,26);return a?this.bb.__vector_len(this.bb_pos+a):0}graphs(a,u){let l=this.bb.__offset(this.bb_pos,28);return l?(u||new e.experimental.fbs.Graph).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+l)+a*4),this.bb):null}graphsLength(){let a=this.bb.__offset(this.bb_pos,28);return a?this.bb.__vector_len(this.bb_pos+a):0}static startAttribute(a){a.startObject(13)}static addName(a,u){a.addFieldOffset(0,u,0)}static addDocString(a,u){a.addFieldOffset(1,u,0)}static addType(a,u){a.addFieldInt32(2,u,0)}static addF(a,u){a.addFieldFloat32(3,u,0)}static addI(a,u){a.addFieldInt64(4,u,a.createLong(0,0))}static addS(a,u){a.addFieldOffset(5,u,0)}static addT(a,u){a.addFieldOffset(6,u,0)}static addG(a,u){a.addFieldOffset(7,u,0)}static addFloats(a,u){a.addFieldOffset(8,u,0)}static createFloatsVector(a,u){a.startVector(4,u.length,4);for(let l=u.length-1;l>=0;l--)a.addFloat32(u[l]);return a.endVector()}static startFloatsVector(a,u){a.startVector(4,u,4)}static addInts(a,u){a.addFieldOffset(9,u,0)}static createIntsVector(a,u){a.startVector(8,u.length,8);for(let l=u.length-1;l>=0;l--)a.addInt64(u[l]);return a.endVector()}static startIntsVector(a,u){a.startVector(8,u,8)}static addStrings(a,u){a.addFieldOffset(10,u,0)}static createStringsVector(a,u){a.startVector(4,u.length,4);for(let l=u.length-1;l>=0;l--)a.addOffset(u[l]);return a.endVector()}static startStringsVector(a,u){a.startVector(4,u,4)}static addTensors(a,u){a.addFieldOffset(11,u,0)}static createTensorsVector(a,u){a.startVector(4,u.length,4);for(let l=u.length-1;l>=0;l--)a.addOffset(u[l]);return a.endVector()}static startTensorsVector(a,u){a.startVector(4,u,4)}static addGraphs(a,u){a.addFieldOffset(12,u,0)}static createGraphsVector(a,u){a.startVector(4,u.length,4);for(let l=u.length-1;l>=0;l--)a.addOffset(u[l]);return a.endVector()}static startGraphsVector(a,u){a.startVector(4,u,4)}static endAttribute(a){return a.endObject()}static createAttribute(a,u,l,d,p,h,g,b,v,$,T,x,A,O){return o.startAttribute(a),o.addName(a,u),o.addDocString(a,l),o.addType(a,d),o.addF(a,p),o.addI(a,h),o.addS(a,g),o.addT(a,b),o.addG(a,v),o.addFloats(a,$),o.addInts(a,T),o.addStrings(a,x),o.addTensors(a,A),o.addGraphs(a,O),o.endAttribute(a)}}i.Attribute=o})(n=t.fbs||={})})(r=e.experimental||={})})(le||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,u){return this.bb_pos=a,this.bb=u,this}static getRootAsGraph(a,u){return(u||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsGraph(a,u){return a.setPosition(a.position()+D.SIZE_PREFIX_LENGTH),(u||new o).__init(a.readInt32(a.position())+a.position(),a)}initializers(a,u){let l=this.bb.__offset(this.bb_pos,4);return l?(u||new e.experimental.fbs.Tensor).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+l)+a*4),this.bb):null}initializersLength(){let a=this.bb.__offset(this.bb_pos,4);return a?this.bb.__vector_len(this.bb_pos+a):0}nodeArgs(a,u){let l=this.bb.__offset(this.bb_pos,6);return l?(u||new e.experimental.fbs.ValueInfo).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+l)+a*4),this.bb):null}nodeArgsLength(){let a=this.bb.__offset(this.bb_pos,6);return a?this.bb.__vector_len(this.bb_pos+a):0}nodes(a,u){let l=this.bb.__offset(this.bb_pos,8);return l?(u||new e.experimental.fbs.Node).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+l)+a*4),this.bb):null}nodesLength(){let a=this.bb.__offset(this.bb_pos,8);return a?this.bb.__vector_len(this.bb_pos+a):0}maxNodeIndex(){let a=this.bb.__offset(this.bb_pos,10);return a?this.bb.readUint32(this.bb_pos+a):0}nodeEdges(a,u){let l=this.bb.__offset(this.bb_pos,12);return l?(u||new e.experimental.fbs.NodeEdge).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+l)+a*4),this.bb):null}nodeEdgesLength(){let a=this.bb.__offset(this.bb_pos,12);return a?this.bb.__vector_len(this.bb_pos+a):0}inputs(a,u){let l=this.bb.__offset(this.bb_pos,14);return l?this.bb.__string(this.bb.__vector(this.bb_pos+l)+a*4,u):null}inputsLength(){let a=this.bb.__offset(this.bb_pos,14);return a?this.bb.__vector_len(this.bb_pos+a):0}outputs(a,u){let l=this.bb.__offset(this.bb_pos,16);return l?this.bb.__string(this.bb.__vector(this.bb_pos+l)+a*4,u):null}outputsLength(){let a=this.bb.__offset(this.bb_pos,16);return a?this.bb.__vector_len(this.bb_pos+a):0}sparseInitializers(a,u){let l=this.bb.__offset(this.bb_pos,18);return l?(u||new e.experimental.fbs.SparseTensor).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+l)+a*4),this.bb):null}sparseInitializersLength(){let a=this.bb.__offset(this.bb_pos,18);return a?this.bb.__vector_len(this.bb_pos+a):0}static startGraph(a){a.startObject(8)}static addInitializers(a,u){a.addFieldOffset(0,u,0)}static createInitializersVector(a,u){a.startVector(4,u.length,4);for(let l=u.length-1;l>=0;l--)a.addOffset(u[l]);return a.endVector()}static startInitializersVector(a,u){a.startVector(4,u,4)}static addNodeArgs(a,u){a.addFieldOffset(1,u,0)}static createNodeArgsVector(a,u){a.startVector(4,u.length,4);for(let l=u.length-1;l>=0;l--)a.addOffset(u[l]);return a.endVector()}static startNodeArgsVector(a,u){a.startVector(4,u,4)}static addNodes(a,u){a.addFieldOffset(2,u,0)}static createNodesVector(a,u){a.startVector(4,u.length,4);for(let l=u.length-1;l>=0;l--)a.addOffset(u[l]);return a.endVector()}static startNodesVector(a,u){a.startVector(4,u,4)}static addMaxNodeIndex(a,u){a.addFieldInt32(3,u,0)}static addNodeEdges(a,u){a.addFieldOffset(4,u,0)}static createNodeEdgesVector(a,u){a.startVector(4,u.length,4);for(let l=u.length-1;l>=0;l--)a.addOffset(u[l]);return a.endVector()}static startNodeEdgesVector(a,u){a.startVector(4,u,4)}static addInputs(a,u){a.addFieldOffset(5,u,0)}static createInputsVector(a,u){a.startVector(4,u.length,4);for(let l=u.length-1;l>=0;l--)a.addOffset(u[l]);return a.endVector()}static startInputsVector(a,u){a.startVector(4,u,4)}static addOutputs(a,u){a.addFieldOffset(6,u,0)}static createOutputsVector(a,u){a.startVector(4,u.length,4);for(let l=u.length-1;l>=0;l--)a.addOffset(u[l]);return a.endVector()}static startOutputsVector(a,u){a.startVector(4,u,4)}static addSparseInitializers(a,u){a.addFieldOffset(7,u,0)}static createSparseInitializersVector(a,u){a.startVector(4,u.length,4);for(let l=u.length-1;l>=0;l--)a.addOffset(u[l]);return a.endVector()}static startSparseInitializersVector(a,u){a.startVector(4,u,4)}static endGraph(a){return a.endObject()}static createGraph(a,u,l,d,p,h,g,b,v){return o.startGraph(a),o.addInitializers(a,u),o.addNodeArgs(a,l),o.addNodes(a,d),o.addMaxNodeIndex(a,p),o.addNodeEdges(a,h),o.addInputs(a,g),o.addOutputs(a,b),o.addSparseInitializers(a,v),o.endGraph(a)}}i.Graph=o})(n=t.fbs||={})})(r=e.experimental||={})})(le||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,u){return this.bb_pos=a,this.bb=u,this}static getRootAsModel(a,u){return(u||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsModel(a,u){return a.setPosition(a.position()+D.SIZE_PREFIX_LENGTH),(u||new o).__init(a.readInt32(a.position())+a.position(),a)}irVersion(){let a=this.bb.__offset(this.bb_pos,4);return a?this.bb.readInt64(this.bb_pos+a):this.bb.createLong(0,0)}opsetImport(a,u){let l=this.bb.__offset(this.bb_pos,6);return l?(u||new e.experimental.fbs.OperatorSetId).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+l)+a*4),this.bb):null}opsetImportLength(){let a=this.bb.__offset(this.bb_pos,6);return a?this.bb.__vector_len(this.bb_pos+a):0}producerName(a){let u=this.bb.__offset(this.bb_pos,8);return u?this.bb.__string(this.bb_pos+u,a):null}producerVersion(a){let u=this.bb.__offset(this.bb_pos,10);return u?this.bb.__string(this.bb_pos+u,a):null}domain(a){let u=this.bb.__offset(this.bb_pos,12);return u?this.bb.__string(this.bb_pos+u,a):null}modelVersion(){let a=this.bb.__offset(this.bb_pos,14);return a?this.bb.readInt64(this.bb_pos+a):this.bb.createLong(0,0)}docString(a){let u=this.bb.__offset(this.bb_pos,16);return u?this.bb.__string(this.bb_pos+u,a):null}graph(a){let u=this.bb.__offset(this.bb_pos,18);return u?(a||new e.experimental.fbs.Graph).__init(this.bb.__indirect(this.bb_pos+u),this.bb):null}graphDocString(a){let u=this.bb.__offset(this.bb_pos,20);return u?this.bb.__string(this.bb_pos+u,a):null}static startModel(a){a.startObject(9)}static addIrVersion(a,u){a.addFieldInt64(0,u,a.createLong(0,0))}static addOpsetImport(a,u){a.addFieldOffset(1,u,0)}static createOpsetImportVector(a,u){a.startVector(4,u.length,4);for(let l=u.length-1;l>=0;l--)a.addOffset(u[l]);return a.endVector()}static startOpsetImportVector(a,u){a.startVector(4,u,4)}static addProducerName(a,u){a.addFieldOffset(2,u,0)}static addProducerVersion(a,u){a.addFieldOffset(3,u,0)}static addDomain(a,u){a.addFieldOffset(4,u,0)}static addModelVersion(a,u){a.addFieldInt64(5,u,a.createLong(0,0))}static addDocString(a,u){a.addFieldOffset(6,u,0)}static addGraph(a,u){a.addFieldOffset(7,u,0)}static addGraphDocString(a,u){a.addFieldOffset(8,u,0)}static endModel(a){return a.endObject()}static createModel(a,u,l,d,p,h,g,b,v,$){return o.startModel(a),o.addIrVersion(a,u),o.addOpsetImport(a,l),o.addProducerName(a,d),o.addProducerVersion(a,p),o.addDomain(a,h),o.addModelVersion(a,g),o.addDocString(a,b),o.addGraph(a,v),o.addGraphDocString(a,$),o.endModel(a)}}i.Model=o})(n=t.fbs||={})})(r=e.experimental||={})})(le||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,u){return this.bb_pos=a,this.bb=u,this}static getRootAsKernelCreateInfos(a,u){return(u||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsKernelCreateInfos(a,u){return a.setPosition(a.position()+D.SIZE_PREFIX_LENGTH),(u||new o).__init(a.readInt32(a.position())+a.position(),a)}nodeIndices(a){let u=this.bb.__offset(this.bb_pos,4);return u?this.bb.readUint32(this.bb.__vector(this.bb_pos+u)+a*4):0}nodeIndicesLength(){let a=this.bb.__offset(this.bb_pos,4);return a?this.bb.__vector_len(this.bb_pos+a):0}nodeIndicesArray(){let a=this.bb.__offset(this.bb_pos,4);return a?new Uint32Array(this.bb.bytes().buffer,this.bb.bytes().byteOffset+this.bb.__vector(this.bb_pos+a),this.bb.__vector_len(this.bb_pos+a)):null}kernelDefHashes(a){let u=this.bb.__offset(this.bb_pos,6);return u?this.bb.readUint64(this.bb.__vector(this.bb_pos+u)+a*8):this.bb.createLong(0,0)}kernelDefHashesLength(){let a=this.bb.__offset(this.bb_pos,6);return a?this.bb.__vector_len(this.bb_pos+a):0}static startKernelCreateInfos(a){a.startObject(2)}static addNodeIndices(a,u){a.addFieldOffset(0,u,0)}static createNodeIndicesVector(a,u){a.startVector(4,u.length,4);for(let l=u.length-1;l>=0;l--)a.addInt32(u[l]);return a.endVector()}static startNodeIndicesVector(a,u){a.startVector(4,u,4)}static addKernelDefHashes(a,u){a.addFieldOffset(1,u,0)}static createKernelDefHashesVector(a,u){a.startVector(8,u.length,8);for(let l=u.length-1;l>=0;l--)a.addInt64(u[l]);return a.endVector()}static startKernelDefHashesVector(a,u){a.startVector(8,u,8)}static endKernelCreateInfos(a){return a.endObject()}static createKernelCreateInfos(a,u,l){return o.startKernelCreateInfos(a),o.addNodeIndices(a,u),o.addKernelDefHashes(a,l),o.endKernelCreateInfos(a)}}i.KernelCreateInfos=o})(n=t.fbs||={})})(r=e.experimental||={})})(le||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,u){return this.bb_pos=a,this.bb=u,this}static getRootAsSubGraphSessionState(a,u){return(u||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsSubGraphSessionState(a,u){return a.setPosition(a.position()+D.SIZE_PREFIX_LENGTH),(u||new o).__init(a.readInt32(a.position())+a.position(),a)}graphId(a){let u=this.bb.__offset(this.bb_pos,4);return u?this.bb.__string(this.bb_pos+u,a):null}sessionState(a){let u=this.bb.__offset(this.bb_pos,6);return u?(a||new e.experimental.fbs.SessionState).__init(this.bb.__indirect(this.bb_pos+u),this.bb):null}static startSubGraphSessionState(a){a.startObject(2)}static addGraphId(a,u){a.addFieldOffset(0,u,0)}static addSessionState(a,u){a.addFieldOffset(1,u,0)}static endSubGraphSessionState(a){let u=a.endObject();return a.requiredField(u,4),u}static createSubGraphSessionState(a,u,l){return o.startSubGraphSessionState(a),o.addGraphId(a,u),o.addSessionState(a,l),o.endSubGraphSessionState(a)}}i.SubGraphSessionState=o})(n=t.fbs||={})})(r=e.experimental||={})})(le||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,u){return this.bb_pos=a,this.bb=u,this}static getRootAsSessionState(a,u){return(u||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsSessionState(a,u){return a.setPosition(a.position()+D.SIZE_PREFIX_LENGTH),(u||new o).__init(a.readInt32(a.position())+a.position(),a)}kernels(a){let u=this.bb.__offset(this.bb_pos,4);return u?(a||new e.experimental.fbs.KernelCreateInfos).__init(this.bb.__indirect(this.bb_pos+u),this.bb):null}subGraphSessionStates(a,u){let l=this.bb.__offset(this.bb_pos,6);return l?(u||new e.experimental.fbs.SubGraphSessionState).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+l)+a*4),this.bb):null}subGraphSessionStatesLength(){let a=this.bb.__offset(this.bb_pos,6);return a?this.bb.__vector_len(this.bb_pos+a):0}static startSessionState(a){a.startObject(2)}static addKernels(a,u){a.addFieldOffset(0,u,0)}static addSubGraphSessionStates(a,u){a.addFieldOffset(1,u,0)}static createSubGraphSessionStatesVector(a,u){a.startVector(4,u.length,4);for(let l=u.length-1;l>=0;l--)a.addOffset(u[l]);return a.endVector()}static startSubGraphSessionStatesVector(a,u){a.startVector(4,u,4)}static endSessionState(a){return a.endObject()}static createSessionState(a,u,l){return o.startSessionState(a),o.addKernels(a,u),o.addSubGraphSessionStates(a,l),o.endSessionState(a)}}i.SessionState=o})(n=t.fbs||={})})(r=e.experimental||={})})(le||={});(e=>{let r;(t=>{let n;(i=>{class o{constructor(){this.bb=null;this.bb_pos=0}__init(a,u){return this.bb_pos=a,this.bb=u,this}static getRootAsInferenceSession(a,u){return(u||new o).__init(a.readInt32(a.position())+a.position(),a)}static getSizePrefixedRootAsInferenceSession(a,u){return a.setPosition(a.position()+D.SIZE_PREFIX_LENGTH),(u||new o).__init(a.readInt32(a.position())+a.position(),a)}static bufferHasIdentifier(a){return a.__has_identifier("ORTM")}ortVersion(a){let u=this.bb.__offset(this.bb_pos,4);return u?this.bb.__string(this.bb_pos+u,a):null}model(a){let u=this.bb.__offset(this.bb_pos,6);return u?(a||new e.experimental.fbs.Model).__init(this.bb.__indirect(this.bb_pos+u),this.bb):null}sessionState(a){let u=this.bb.__offset(this.bb_pos,8);return u?(a||new e.experimental.fbs.SessionState).__init(this.bb.__indirect(this.bb_pos+u),this.bb):null}static startInferenceSession(a){a.startObject(3)}static addOrtVersion(a,u){a.addFieldOffset(0,u,0)}static addModel(a,u){a.addFieldOffset(1,u,0)}static addSessionState(a,u){a.addFieldOffset(2,u,0)}static endInferenceSession(a){return a.endObject()}static finishInferenceSessionBuffer(a,u){a.finish(u,"ORTM")}static finishSizePrefixedInferenceSessionBuffer(a,u){a.finish(u,"ORTM",!0)}static createInferenceSession(a,u,l,d){return o.startInferenceSession(a),o.addOrtVersion(a,u),o.addModel(a,l),o.addSessionState(a,d),o.endInferenceSession(a)}}i.InferenceSession=o})(n=t.fbs||={})})(r=e.experimental||={})})(le||={})});var Yl=it((OT,Kl)=>{"use strict";Kl.exports=c0;function c0(r,e){for(var n=new Array(arguments.length-1),t=0,o=2,i=!0;o<arguments.length;)n[t++]=arguments[o++];return new Promise(function(a,u){n[t]=function(d){if(i)if(i=!1,d)u(d);else{for(var p=new Array(arguments.length-1),h=0;h<p.length;)p[h++]=arguments[h];a.apply(null,p)}};try{r.apply(e||null,n)}catch(l){i&&(i=!1,u(l))}})}});var Ql=it(Jl=>{"use strict";var Ni=Jl;Ni.length=function(e){var n=e.length;if(!n)return 0;for(var t=0;--n%4>1&&e.charAt(n)==="=";)++t;return Math.ceil(e.length*3)/4-t};var Gn=new Array(64),Zl=new Array(123);for(fr=0;fr<64;)Zl[Gn[fr]=fr<26?fr+65:fr<52?fr+71:fr<62?fr-4:fr-59|43]=fr++;var fr;Ni.encode=function(e,n,t){for(var o=null,i=[],s=0,a=0,u;n<t;){var l=e[n++];switch(a){case 0:i[s++]=Gn[l>>2],u=(l&3)<<4,a=1;break;case 1:i[s++]=Gn[u|l>>4],u=(l&15)<<2,a=2;break;case 2:i[s++]=Gn[u|l>>6],i[s++]=Gn[l&63],a=0;break}s>8191&&((o||(o=[])).push(String.fromCharCode.apply(String,i)),s=0)}return a&&(i[s++]=Gn[u],i[s++]=61,a===1&&(i[s++]=61)),o?(s&&o.push(String.fromCharCode.apply(String,i.slice(0,s))),o.join("")):String.fromCharCode.apply(String,i.slice(0,s))};var Xl="invalid encoding";Ni.decode=function(e,n,t){for(var o=t,i=0,s,a=0;a<e.length;){var u=e.charCodeAt(a++);if(u===61&&i>1)break;if((u=Zl[u])===void 0)throw Error(Xl);switch(i){case 0:s=u,i=1;break;case 1:n[t++]=s<<2|(u&48)>>4,s=u,i=2;break;case 2:n[t++]=(s&15)<<4|(u&60)>>2,s=u,i=3;break;case 3:n[t++]=(s&3)<<6|u,i=0;break}}if(i===1)throw Error(Xl);return t-o};Ni.test=function(e){return/^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/.test(e)}});var td=it((CT,ed)=>{"use strict";ed.exports=Vi;function Vi(){this._listeners={}}Vi.prototype.on=function(e,n,t){return(this._listeners[e]||(this._listeners[e]=[])).push({fn:n,ctx:t||this}),this};Vi.prototype.off=function(e,n){if(e===void 0)this._listeners={};else if(n===void 0)this._listeners[e]=[];else for(var t=this._listeners[e],o=0;o<t.length;)t[o].fn===n?t.splice(o,1):++o;return this};Vi.prototype.emit=function(e){var n=this._listeners[e];if(n){for(var t=[],o=1;o<arguments.length;)t.push(arguments[o++]);for(o=0;o<n.length;)n[o].fn.apply(n[o++].ctx,t)}return this}});var ud=it((PT,sd)=>{"use strict";sd.exports=rd(rd);function rd(r){return typeof Float32Array<"u"?function(){var e=new Float32Array([-0]),n=new Uint8Array(e.buffer),t=n[3]===128;function o(u,l,d){e[0]=u,l[d]=n[0],l[d+1]=n[1],l[d+2]=n[2],l[d+3]=n[3]}function i(u,l,d){e[0]=u,l[d]=n[3],l[d+1]=n[2],l[d+2]=n[1],l[d+3]=n[0]}r.writeFloatLE=t?o:i,r.writeFloatBE=t?i:o;function s(u,l){return n[0]=u[l],n[1]=u[l+1],n[2]=u[l+2],n[3]=u[l+3],e[0]}function a(u,l){return n[3]=u[l],n[2]=u[l+1],n[1]=u[l+2],n[0]=u[l+3],e[0]}r.readFloatLE=t?s:a,r.readFloatBE=t?a:s}():function(){function e(t,o,i,s){var a=o<0?1:0;if(a&&(o=-o),o===0)t(1/o>0?0:2147483648,i,s);else if(isNaN(o))t(2143289344,i,s);else if(o>34028234663852886e22)t((a<<31|2139095040)>>>0,i,s);else if(o<11754943508222875e-54)t((a<<31|Math.round(o/1401298464324817e-60))>>>0,i,s);else{var u=Math.floor(Math.log(o)/Math.LN2),l=Math.round(o*Math.pow(2,-u)*8388608)&8388607;t((a<<31|u+127<<23|l)>>>0,i,s)}}r.writeFloatLE=e.bind(null,nd),r.writeFloatBE=e.bind(null,od);function n(t,o,i){var s=t(o,i),a=(s>>31)*2+1,u=s>>>23&255,l=s&8388607;return u===255?l?NaN:a*(1/0):u===0?a*1401298464324817e-60*l:a*Math.pow(2,u-150)*(l+8388608)}r.readFloatLE=n.bind(null,id),r.readFloatBE=n.bind(null,ad)}(),typeof Float64Array<"u"?function(){var e=new Float64Array([-0]),n=new Uint8Array(e.buffer),t=n[7]===128;function o(u,l,d){e[0]=u,l[d]=n[0],l[d+1]=n[1],l[d+2]=n[2],l[d+3]=n[3],l[d+4]=n[4],l[d+5]=n[5],l[d+6]=n[6],l[d+7]=n[7]}function i(u,l,d){e[0]=u,l[d]=n[7],l[d+1]=n[6],l[d+2]=n[5],l[d+3]=n[4],l[d+4]=n[3],l[d+5]=n[2],l[d+6]=n[1],l[d+7]=n[0]}r.writeDoubleLE=t?o:i,r.writeDoubleBE=t?i:o;function s(u,l){return n[0]=u[l],n[1]=u[l+1],n[2]=u[l+2],n[3]=u[l+3],n[4]=u[l+4],n[5]=u[l+5],n[6]=u[l+6],n[7]=u[l+7],e[0]}function a(u,l){return n[7]=u[l],n[6]=u[l+1],n[5]=u[l+2],n[4]=u[l+3],n[3]=u[l+4],n[2]=u[l+5],n[1]=u[l+6],n[0]=u[l+7],e[0]}r.readDoubleLE=t?s:a,r.readDoubleBE=t?a:s}():function(){function e(t,o,i,s,a,u){var l=s<0?1:0;if(l&&(s=-s),s===0)t(0,a,u+o),t(1/s>0?0:2147483648,a,u+i);else if(isNaN(s))t(0,a,u+o),t(2146959360,a,u+i);else if(s>17976931348623157e292)t(0,a,u+o),t((l<<31|2146435072)>>>0,a,u+i);else{var d;if(s<22250738585072014e-324)d=s/5e-324,t(d>>>0,a,u+o),t((l<<31|d/4294967296)>>>0,a,u+i);else{var p=Math.floor(Math.log(s)/Math.LN2);p===1024&&(p=1023),d=s*Math.pow(2,-p),t(d*4503599627370496>>>0,a,u+o),t((l<<31|p+1023<<20|d*1048576&1048575)>>>0,a,u+i)}}}r.writeDoubleLE=e.bind(null,nd,0,4),r.writeDoubleBE=e.bind(null,od,4,0);function n(t,o,i,s,a){var u=t(s,a+o),l=t(s,a+i),d=(l>>31)*2+1,p=l>>>20&2047,h=4294967296*(l&1048575)+u;return p===2047?h?NaN:d*(1/0):p===0?d*5e-324*h:d*Math.pow(2,p-1075)*(h+4503599627370496)}r.readDoubleLE=n.bind(null,id,0,4),r.readDoubleBE=n.bind(null,ad,4,0)}(),r}function nd(r,e,n){e[n]=r&255,e[n+1]=r>>>8&255,e[n+2]=r>>>16&255,e[n+3]=r>>>24}function od(r,e,n){e[n]=r>>>24,e[n+1]=r>>>16&255,e[n+2]=r>>>8&255,e[n+3]=r&255}function id(r,e){return(r[e]|r[e+1]<<8|r[e+2]<<16|r[e+3]<<24)>>>0}function ad(r,e){return(r[e]<<24|r[e+1]<<16|r[e+2]<<8|r[e+3])>>>0}});var ld=it((exports,module)=>{"use strict";module.exports=inquire;function inquire(moduleName){try{var mod=eval("quire".replace(/^/,"re"))(moduleName);if(mod&&(mod.length||Object.keys(mod).length))return mod}catch(r){}return null}});var cd=it(dd=>{"use strict";var ms=dd;ms.length=function(e){for(var n=0,t=0,o=0;o<e.length;++o)t=e.charCodeAt(o),t<128?n+=1:t<2048?n+=2:(t&64512)===55296&&(e.charCodeAt(o+1)&64512)===56320?(++o,n+=4):n+=3;return n};ms.read=function(e,n,t){var o=t-n;if(o<1)return"";for(var i=null,s=[],a=0,u;n<t;)u=e[n++],u<128?s[a++]=u:u>191&&u<224?s[a++]=(u&31)<<6|e[n++]&63:u>239&&u<365?(u=((u&7)<<18|(e[n++]&63)<<12|(e[n++]&63)<<6|e[n++]&63)-65536,s[a++]=55296+(u>>10),s[a++]=56320+(u&1023)):s[a++]=(u&15)<<12|(e[n++]&63)<<6|e[n++]&63,a>8191&&((i||(i=[])).push(String.fromCharCode.apply(String,s)),a=0);return i?(a&&i.push(String.fromCharCode.apply(String,s.slice(0,a))),i.join("")):String.fromCharCode.apply(String,s.slice(0,a))};ms.write=function(e,n,t){for(var o=t,i,s,a=0;a<e.length;++a)i=e.charCodeAt(a),i<128?n[t++]=i:i<2048?(n[t++]=i>>6|192,n[t++]=i&63|128):(i&64512)===55296&&((s=e.charCodeAt(a+1))&64512)===56320?(i=65536+((i&1023)<<10)+(s&1023),++a,n[t++]=i>>18|240,n[t++]=i>>12&63|128,n[t++]=i>>6&63|128,n[t++]=i&63|128):(n[t++]=i>>12|224,n[t++]=i>>6&63|128,n[t++]=i&63|128);return t-o}});var pd=it((DT,fd)=>{"use strict";fd.exports=f0;function f0(r,e,n){var t=n||8192,o=t>>>1,i=null,s=t;return function(u){if(u<1||u>o)return r(u);s+u>t&&(i=r(t),s=0);var l=e.call(i,s,s+=u);return s&7&&(s=(s|7)+1),l}}});var md=it((BT,hd)=>{"use strict";hd.exports=It;var Co=qr();function It(r,e){this.lo=r>>>0,this.hi=e>>>0}var fn=It.zero=new It(0,0);fn.toNumber=function(){return 0};fn.zzEncode=fn.zzDecode=function(){return this};fn.length=function(){return 1};var p0=It.zeroHash="\0\0\0\0\0\0\0\0";It.fromNumber=function(e){if(e===0)return fn;var n=e<0;n&&(e=-e);var t=e>>>0,o=(e-t)/4294967296>>>0;return n&&(o=~o>>>0,t=~t>>>0,++t>4294967295&&(t=0,++o>4294967295&&(o=0))),new It(t,o)};It.from=function(e){if(typeof e=="number")return It.fromNumber(e);if(Co.isString(e))if(Co.Long)e=Co.Long.fromString(e);else return It.fromNumber(parseInt(e,10));return e.low||e.high?new It(e.low>>>0,e.high>>>0):fn};It.prototype.toNumber=function(e){if(!e&&this.hi>>>31){var n=~this.lo+1>>>0,t=~this.hi>>>0;return n||(t=t+1>>>0),-(n+t*4294967296)}return this.lo+this.hi*4294967296};It.prototype.toLong=function(e){return Co.Long?new Co.Long(this.lo|0,this.hi|0,!!e):{low:this.lo|0,high:this.hi|0,unsigned:!!e}};var Hr=String.prototype.charCodeAt;It.fromHash=function(e){return e===p0?fn:new It((Hr.call(e,0)|Hr.call(e,1)<<8|Hr.call(e,2)<<16|Hr.call(e,3)<<24)>>>0,(Hr.call(e,4)|Hr.call(e,5)<<8|Hr.call(e,6)<<16|Hr.call(e,7)<<24)>>>0)};It.prototype.toHash=function(){return String.fromCharCode(this.lo&255,this.lo>>>8&255,this.lo>>>16&255,this.lo>>>24,this.hi&255,this.hi>>>8&255,this.hi>>>16&255,this.hi>>>24)};It.prototype.zzEncode=function(){var e=this.hi>>31;return this.hi=((this.hi<<1|this.lo>>>31)^e)>>>0,this.lo=(this.lo<<1^e)>>>0,this};It.prototype.zzDecode=function(){var e=-(this.lo&1);return this.lo=((this.lo>>>1|this.hi<<31)^e)>>>0,this.hi=(this.hi>>>1^e)>>>0,this};It.prototype.length=function(){var e=this.lo,n=(this.lo>>>28|this.hi<<4)>>>0,t=this.hi>>>24;return t===0?n===0?e<16384?e<128?1:2:e<2097152?3:4:n<16384?n<128?5:6:n<2097152?7:8:t<128?9:10}});var qr=it(gs=>{"use strict";var ce=gs;ce.asPromise=Yl();ce.base64=Ql();ce.EventEmitter=td();ce.float=ud();ce.inquire=ld();ce.utf8=cd();ce.pool=pd();ce.LongBits=md();ce.isNode=!!(typeof global<"u"&&global&&global.process&&global.process.versions&&global.process.versions.node);ce.global=ce.isNode&&global||typeof window<"u"&&window||typeof self<"u"&&self||gs;ce.emptyArray=Object.freeze?Object.freeze([]):[];ce.emptyObject=Object.freeze?Object.freeze({}):{};ce.isInteger=Number.isInteger||function(e){return typeof e=="number"&&isFinite(e)&&Math.floor(e)===e};ce.isString=function(e){return typeof e=="string"||e instanceof String};ce.isObject=function(e){return e&&typeof e=="object"};ce.isset=ce.isSet=function(e,n){var t=e[n];return t!=null&&e.hasOwnProperty(n)?typeof t!="object"||(Array.isArray(t)?t.length:Object.keys(t).length)>0:!1};ce.Buffer=function(){try{var r=ce.inquire("buffer").Buffer;return r.prototype.utf8Write?r:null}catch{return null}}();ce._Buffer_from=null;ce._Buffer_allocUnsafe=null;ce.newBuffer=function(e){return typeof e=="number"?ce.Buffer?ce._Buffer_allocUnsafe(e):new ce.Array(e):ce.Buffer?ce._Buffer_from(e):typeof Uint8Array>"u"?e:new Uint8Array(e)};ce.Array=typeof Uint8Array<"u"?Uint8Array:Array;ce.Long=ce.global.dcodeIO&&ce.global.dcodeIO.Long||ce.global.Long||ce.inquire("long");ce.key2Re=/^true|false|0|1$/;ce.key32Re=/^-?(?:0|[1-9][0-9]*)$/;ce.key64Re=/^(?:[\\x00-\\xff]{8}|-?(?:0|[1-9][0-9]*))$/;ce.longToHash=function(e){return e?ce.LongBits.from(e).toHash():ce.LongBits.zeroHash};ce.longFromHash=function(e,n){var t=ce.LongBits.fromHash(e);return ce.Long?ce.Long.fromBits(t.lo,t.hi,n):t.toNumber(!!n)};function gd(r,e,n){for(var t=Object.keys(e),o=0;o<t.length;++o)(r[t[o]]===void 0||!n)&&(r[t[o]]=e[t[o]]);return r}ce.merge=gd;ce.lcFirst=function(e){return e.charAt(0).toLowerCase()+e.substring(1)};function bd(r){function e(n,t){if(!(this instanceof e))return new e(n,t);Object.defineProperty(this,"message",{get:function(){return n}}),Error.captureStackTrace?Error.captureStackTrace(this,e):Object.defineProperty(this,"stack",{value:new Error().stack||""}),t&&gd(this,t)}return e.prototype=Object.create(Error.prototype,{constructor:{value:e,writable:!0,enumerable:!1,configurable:!0},name:{get:function(){return r},set:void 0,enumerable:!1,configurable:!0},toString:{value:function(){return this.name+": "+this.message},writable:!0,enumerable:!1,configurable:!0}}),e}ce.newError=bd;ce.ProtocolError=bd("ProtocolError");ce.oneOfGetter=function(e){for(var n={},t=0;t<e.length;++t)n[e[t]]=1;return function(){for(var o=Object.keys(this),i=o.length-1;i>-1;--i)if(n[o[i]]===1&&this[o[i]]!==void 0&&this[o[i]]!==null)return o[i]}};ce.oneOfSetter=function(e){return function(n){for(var t=0;t<e.length;++t)e[t]!==n&&delete this[e[t]]}};ce.toJSONOptions={longs:String,enums:String,bytes:String,json:!0};ce._configure=function(){var r=ce.Buffer;if(!r){ce._Buffer_from=ce._Buffer_allocUnsafe=null;return}ce._Buffer_from=r.from!==Uint8Array.from&&r.from||function(n,t){return new r(n,t)},ce._Buffer_allocUnsafe=r.allocUnsafe||function(n){return new r(n)}}});var Ts=it((zT,xd)=>{"use strict";xd.exports=We;var tr=qr(),bs,Fi=tr.LongBits,yd=tr.base64,vd=tr.utf8;function Po(r,e,n){this.fn=r,this.len=e,this.next=void 0,this.val=n}function vs(){}function h0(r){this.head=r.head,this.tail=r.tail,this.len=r.len,this.next=r.states}function We(){this.len=0,this.head=new Po(vs,0,0),this.tail=this.head,this.states=null}var wd=function(){return tr.Buffer?function(){return(We.create=function(){return new bs})()}:function(){return new We}};We.create=wd();We.alloc=function(e){return new tr.Array(e)};tr.Array!==Array&&(We.alloc=tr.pool(We.alloc,tr.Array.prototype.subarray));We.prototype._push=function(e,n,t){return this.tail=this.tail.next=new Po(e,n,t),this.len+=n,this};function ws(r,e,n){e[n]=r&255}function m0(r,e,n){for(;r>127;)e[n++]=r&127|128,r>>>=7;e[n]=r}function xs(r,e){this.len=r,this.next=void 0,this.val=e}xs.prototype=Object.create(Po.prototype);xs.prototype.fn=m0;We.prototype.uint32=function(e){return this.len+=(this.tail=this.tail.next=new xs((e=e>>>0)<128?1:e<16384?2:e<2097152?3:e<268435456?4:5,e)).len,this};We.prototype.int32=function(e){return e<0?this._push(_s,10,Fi.fromNumber(e)):this.uint32(e)};We.prototype.sint32=function(e){return this.uint32((e<<1^e>>31)>>>0)};function _s(r,e,n){for(;r.hi;)e[n++]=r.lo&127|128,r.lo=(r.lo>>>7|r.hi<<25)>>>0,r.hi>>>=7;for(;r.lo>127;)e[n++]=r.lo&127|128,r.lo=r.lo>>>7;e[n++]=r.lo}We.prototype.uint64=function(e){var n=Fi.from(e);return this._push(_s,n.length(),n)};We.prototype.int64=We.prototype.uint64;We.prototype.sint64=function(e){var n=Fi.from(e).zzEncode();return this._push(_s,n.length(),n)};We.prototype.bool=function(e){return this._push(ws,1,e?1:0)};function ys(r,e,n){e[n]=r&255,e[n+1]=r>>>8&255,e[n+2]=r>>>16&255,e[n+3]=r>>>24}We.prototype.fixed32=function(e){return this._push(ys,4,e>>>0)};We.prototype.sfixed32=We.prototype.fixed32;We.prototype.fixed64=function(e){var n=Fi.from(e);return this._push(ys,4,n.lo)._push(ys,4,n.hi)};We.prototype.sfixed64=We.prototype.fixed64;We.prototype.float=function(e){return this._push(tr.float.writeFloatLE,4,e)};We.prototype.double=function(e){return this._push(tr.float.writeDoubleLE,8,e)};var g0=tr.Array.prototype.set?function(e,n,t){n.set(e,t)}:function(e,n,t){for(var o=0;o<e.length;++o)n[t+o]=e[o]};We.prototype.bytes=function(e){var n=e.length>>>0;if(!n)return this._push(ws,1,0);if(tr.isString(e)){var t=We.alloc(n=yd.length(e));yd.decode(e,t,0),e=t}return this.uint32(n)._push(g0,n,e)};We.prototype.string=function(e){var n=vd.length(e);return n?this.uint32(n)._push(vd.write,n,e):this._push(ws,1,0)};We.prototype.fork=function(){return this.states=new h0(this),this.head=this.tail=new Po(vs,0,0),this.len=0,this};We.prototype.reset=function(){return this.states?(this.head=this.states.head,this.tail=this.states.tail,this.len=this.states.len,this.states=this.states.next):(this.head=this.tail=new Po(vs,0,0),this.len=0),this};We.prototype.ldelim=function(){var e=this.head,n=this.tail,t=this.len;return this.reset().uint32(t),t&&(this.tail.next=e.next,this.tail=n,this.len+=t),this};We.prototype.finish=function(){for(var e=this.head.next,n=this.constructor.alloc(this.len),t=0;e;)e.fn(e.val,n,t),t+=e.len,e=e.next;return n};We._configure=function(r){bs=r,We.create=wd(),bs._configure()}});var $d=it((MT,Td)=>{"use strict";Td.exports=xr;var _d=Ts();(xr.prototype=Object.create(_d.prototype)).constructor=xr;var jr=qr();function xr(){_d.call(this)}xr._configure=function(){xr.alloc=jr._Buffer_allocUnsafe,xr.writeBytesBuffer=jr.Buffer&&jr.Buffer.prototype instanceof Uint8Array&&jr.Buffer.prototype.set.name==="set"?function(e,n,t){n.set(e,t)}:function(e,n,t){if(e.copy)e.copy(n,t,0,e.length);else for(var o=0;o<e.length;)n[t++]=e[o++]}};xr.prototype.bytes=function(e){jr.isString(e)&&(e=jr._Buffer_from(e,"base64"));var n=e.length>>>0;return this.uint32(n),n&&this._push(xr.writeBytesBuffer,n,e),this};function b0(r,e,n){r.length<40?jr.utf8.write(r,e,n):e.utf8Write?e.utf8Write(r,n):e.write(r,n)}xr.prototype.string=function(e){var n=jr.Buffer.byteLength(e);return this.uint32(n),n&&this._push(b0,n,e),this};xr._configure()});var Is=it((LT,Ed)=>{"use strict";Ed.exports=mt;var _r=qr(),Ss,Ad=_r.LongBits,y0=_r.utf8;function pr(r,e){return RangeError("index out of range: "+r.pos+" + "+(e||1)+" > "+r.len)}function mt(r){this.buf=r,this.pos=0,this.len=r.length}var Sd=typeof Uint8Array<"u"?function(e){if(e instanceof Uint8Array||Array.isArray(e))return new mt(e);throw Error("illegal buffer")}:function(e){if(Array.isArray(e))return new mt(e);throw Error("illegal buffer")},Od=function(){return _r.Buffer?function(n){return(mt.create=function(o){return _r.Buffer.isBuffer(o)?new Ss(o):Sd(o)})(n)}:Sd};mt.create=Od();mt.prototype._slice=_r.Array.prototype.subarray||_r.Array.prototype.slice;mt.prototype.uint32=function(){var e=4294967295;return function(){if(e=(this.buf[this.pos]&127)>>>0,this.buf[this.pos++]<128||(e=(e|(this.buf[this.pos]&127)<<7)>>>0,this.buf[this.pos++]<128)||(e=(e|(this.buf[this.pos]&127)<<14)>>>0,this.buf[this.pos++]<128)||(e=(e|(this.buf[this.pos]&127)<<21)>>>0,this.buf[this.pos++]<128)||(e=(e|(this.buf[this.pos]&15)<<28)>>>0,this.buf[this.pos++]<128))return e;if((this.pos+=5)>this.len)throw this.pos=this.len,pr(this,10);return e}}();mt.prototype.int32=function(){return this.uint32()|0};mt.prototype.sint32=function(){var e=this.uint32();return e>>>1^-(e&1)|0};function $s(){var r=new Ad(0,0),e=0;if(this.len-this.pos>4){for(;e<4;++e)if(r.lo=(r.lo|(this.buf[this.pos]&127)<<e*7)>>>0,this.buf[this.pos++]<128)return r;if(r.lo=(r.lo|(this.buf[this.pos]&127)<<28)>>>0,r.hi=(r.hi|(this.buf[this.pos]&127)>>4)>>>0,this.buf[this.pos++]<128)return r;e=0}else{for(;e<3;++e){if(this.pos>=this.len)throw pr(this);if(r.lo=(r.lo|(this.buf[this.pos]&127)<<e*7)>>>0,this.buf[this.pos++]<128)return r}return r.lo=(r.lo|(this.buf[this.pos++]&127)<<e*7)>>>0,r}if(this.len-this.pos>4){for(;e<5;++e)if(r.hi=(r.hi|(this.buf[this.pos]&127)<<e*7+3)>>>0,this.buf[this.pos++]<128)return r}else for(;e<5;++e){if(this.pos>=this.len)throw pr(this);if(r.hi=(r.hi|(this.buf[this.pos]&127)<<e*7+3)>>>0,this.buf[this.pos++]<128)return r}throw Error("invalid varint encoding")}mt.prototype.bool=function(){return this.uint32()!==0};function Gi(r,e){return(r[e-4]|r[e-3]<<8|r[e-2]<<16|r[e-1]<<24)>>>0}mt.prototype.fixed32=function(){if(this.pos+4>this.len)throw pr(this,4);return Gi(this.buf,this.pos+=4)};mt.prototype.sfixed32=function(){if(this.pos+4>this.len)throw pr(this,4);return Gi(this.buf,this.pos+=4)|0};function Id(){if(this.pos+8>this.len)throw pr(this,8);return new Ad(Gi(this.buf,this.pos+=4),Gi(this.buf,this.pos+=4))}mt.prototype.float=function(){if(this.pos+4>this.len)throw pr(this,4);var e=_r.float.readFloatLE(this.buf,this.pos);return this.pos+=4,e};mt.prototype.double=function(){if(this.pos+8>this.len)throw pr(this,4);var e=_r.float.readDoubleLE(this.buf,this.pos);return this.pos+=8,e};mt.prototype.bytes=function(){var e=this.uint32(),n=this.pos,t=this.pos+e;if(t>this.len)throw pr(this,e);return this.pos+=e,Array.isArray(this.buf)?this.buf.slice(n,t):n===t?new this.buf.constructor(0):this._slice.call(this.buf,n,t)};mt.prototype.string=function(){var e=this.bytes();return y0.read(e,0,e.length)};mt.prototype.skip=function(e){if(typeof e=="number"){if(this.pos+e>this.len)throw pr(this,e);this.pos+=e}else do if(this.pos>=this.len)throw pr(this);while(this.buf[this.pos++]&128);return this};mt.prototype.skipType=function(r){switch(r){case 0:this.skip();break;case 1:this.skip(8);break;case 2:this.skip(this.uint32());break;case 3:for(;(r=this.uint32()&7)!==4;)this.skipType(r);break;case 5:this.skip(4);break;default:throw Error("invalid wire type "+r+" at offset "+this.pos)}return this};mt._configure=function(r){Ss=r,mt.create=Od(),Ss._configure();var e=_r.Long?"toLong":"toNumber";_r.merge(mt.prototype,{int64:function(){return $s.call(this)[e](!1)},uint64:function(){return $s.call(this)[e](!0)},sint64:function(){return $s.call(this).zzDecode()[e](!1)},fixed64:function(){return Id.call(this)[e](!0)},sfixed64:function(){return Id.call(this)[e](!1)}})}});var Dd=it((NT,kd)=>{"use strict";kd.exports=pn;var Pd=Is();(pn.prototype=Object.create(Pd.prototype)).constructor=pn;var Cd=qr();function pn(r){Pd.call(this,r)}pn._configure=function(){Cd.Buffer&&(pn.prototype._slice=Cd.Buffer.prototype.slice)};pn.prototype.string=function(){var e=this.uint32();return this.buf.utf8Slice?this.buf.utf8Slice(this.pos,this.pos=Math.min(this.pos+e,this.len)):this.buf.toString("utf-8",this.pos,this.pos=Math.min(this.pos+e,this.len))};pn._configure()});var Rd=it((VT,Bd)=>{"use strict";Bd.exports=ko;var As=qr();(ko.prototype=Object.create(As.EventEmitter.prototype)).constructor=ko;function ko(r,e,n){if(typeof r!="function")throw TypeError("rpcImpl must be a function");As.EventEmitter.call(this),this.rpcImpl=r,this.requestDelimited=!!e,this.responseDelimited=!!n}ko.prototype.rpcCall=function r(e,n,t,o,i){if(!o)throw TypeError("request must be specified");var s=this;if(!i)return As.asPromise(r,s,e,n,t,o);if(!s.rpcImpl){setTimeout(function(){i(Error("already ended"))},0);return}try{return s.rpcImpl(e,n[s.requestDelimited?"encodeDelimited":"encode"](o).finish(),function(u,l){if(u)return s.emit("error",u,e),i(u);if(l===null){s.end(!0);return}if(!(l instanceof t))try{l=t[s.responseDelimited?"decodeDelimited":"decode"](l)}catch(d){return s.emit("error",d,e),i(d)}return s.emit("data",l,e),i(null,l)})}catch(a){s.emit("error",a,e),setTimeout(function(){i(a)},0);return}};ko.prototype.end=function(e){return this.rpcImpl&&(e||this.rpcImpl(null,null,null),this.rpcImpl=null,this.emit("end").off()),this}});var Md=it(zd=>{"use strict";var v0=zd;v0.Service=Rd()});var Nd=it((GT,Ld)=>{"use strict";Ld.exports={}});var Gd=it(Fd=>{"use strict";var Ut=Fd;Ut.build="minimal";Ut.Writer=Ts();Ut.BufferWriter=$d();Ut.Reader=Is();Ut.BufferReader=Dd();Ut.util=qr();Ut.rpc=Md();Ut.roots=Nd();Ut.configure=Vd;function Vd(){Ut.util._configure(),Ut.Writer._configure(Ut.BufferWriter),Ut.Reader._configure(Ut.BufferReader)}Vd()});var Wd=it((WT,Ud)=>{"use strict";Ud.exports=Gd()});var Un=it((HT,Hd)=>{"use strict";var st=Wd(),ee=st.Reader,gt=st.Writer,C=st.util,I=st.roots.default||(st.roots.default={});I.onnx=function(){var r={};return r.Version=function(){var e={},n=Object.create(e);return n[e[0]="_START_VERSION"]=0,n[e[1]="IR_VERSION_2017_10_10"]=1,n[e[2]="IR_VERSION_2017_10_30"]=2,n[e[3]="IR_VERSION_2017_11_3"]=3,n[e[4]="IR_VERSION_2019_1_22"]=4,n[e[5]="IR_VERSION_2019_3_18"]=5,n[e[6]="IR_VERSION_2019_9_19"]=6,n[e[7]="IR_VERSION_2020_5_8"]=7,n[e[8]="IR_VERSION_2021_7_30"]=8,n[e[9]="IR_VERSION"]=9,n}(),r.AttributeProto=function(){function e(n){if(this.floats=[],this.ints=[],this.strings=[],this.tensors=[],this.graphs=[],this.sparseTensors=[],this.typeProtos=[],n)for(var t=Object.keys(n),o=0;o<t.length;++o)n[t[o]]!=null&&(this[t[o]]=n[t[o]])}return e.prototype.name="",e.prototype.refAttrName="",e.prototype.docString="",e.prototype.type=0,e.prototype.f=0,e.prototype.i=C.Long?C.Long.fromBits(0,0,!1):0,e.prototype.s=C.newBuffer([]),e.prototype.t=null,e.prototype.g=null,e.prototype.sparseTensor=null,e.prototype.tp=null,e.prototype.floats=C.emptyArray,e.prototype.ints=C.emptyArray,e.prototype.strings=C.emptyArray,e.prototype.tensors=C.emptyArray,e.prototype.graphs=C.emptyArray,e.prototype.sparseTensors=C.emptyArray,e.prototype.typeProtos=C.emptyArray,e.create=function(t){return new e(t)},e.encode=function(t,o){if(o||(o=gt.create()),t.name!=null&&Object.hasOwnProperty.call(t,"name")&&o.uint32(10).string(t.name),t.f!=null&&Object.hasOwnProperty.call(t,"f")&&o.uint32(21).float(t.f),t.i!=null&&Object.hasOwnProperty.call(t,"i")&&o.uint32(24).int64(t.i),t.s!=null&&Object.hasOwnProperty.call(t,"s")&&o.uint32(34).bytes(t.s),t.t!=null&&Object.hasOwnProperty.call(t,"t")&&I.onnx.TensorProto.encode(t.t,o.uint32(42).fork()).ldelim(),t.g!=null&&Object.hasOwnProperty.call(t,"g")&&I.onnx.GraphProto.encode(t.g,o.uint32(50).fork()).ldelim(),t.floats!=null&&t.floats.length){o.uint32(58).fork();for(var i=0;i<t.floats.length;++i)o.float(t.floats[i]);o.ldelim()}if(t.ints!=null&&t.ints.length){o.uint32(66).fork();for(var i=0;i<t.ints.length;++i)o.int64(t.ints[i]);o.ldelim()}if(t.strings!=null&&t.strings.length)for(var i=0;i<t.strings.length;++i)o.uint32(74).bytes(t.strings[i]);if(t.tensors!=null&&t.tensors.length)for(var i=0;i<t.tensors.length;++i)I.onnx.TensorProto.encode(t.tensors[i],o.uint32(82).fork()).ldelim();if(t.graphs!=null&&t.graphs.length)for(var i=0;i<t.graphs.length;++i)I.onnx.GraphProto.encode(t.graphs[i],o.uint32(90).fork()).ldelim();if(t.docString!=null&&Object.hasOwnProperty.call(t,"docString")&&o.uint32(106).string(t.docString),t.tp!=null&&Object.hasOwnProperty.call(t,"tp")&&I.onnx.TypeProto.encode(t.tp,o.uint32(114).fork()).ldelim(),t.typeProtos!=null&&t.typeProtos.length)for(var i=0;i<t.typeProtos.length;++i)I.onnx.TypeProto.encode(t.typeProtos[i],o.uint32(122).fork()).ldelim();if(t.type!=null&&Object.hasOwnProperty.call(t,"type")&&o.uint32(160).int32(t.type),t.refAttrName!=null&&Object.hasOwnProperty.call(t,"refAttrName")&&o.uint32(170).string(t.refAttrName),t.sparseTensor!=null&&Object.hasOwnProperty.call(t,"sparseTensor")&&I.onnx.SparseTensorProto.encode(t.sparseTensor,o.uint32(178).fork()).ldelim(),t.sparseTensors!=null&&t.sparseTensors.length)for(var i=0;i<t.sparseTensors.length;++i)I.onnx.SparseTensorProto.encode(t.sparseTensors[i],o.uint32(186).fork()).ldelim();return o},e.encodeDelimited=function(t,o){return this.encode(t,o).ldelim()},e.decode=function(t,o){t instanceof ee||(t=ee.create(t));for(var i=o===void 0?t.len:t.pos+o,s=new I.onnx.AttributeProto;t.pos<i;){var a=t.uint32();switch(a>>>3){case 1:{s.name=t.string();break}case 21:{s.refAttrName=t.string();break}case 13:{s.docString=t.string();break}case 20:{s.type=t.int32();break}case 2:{s.f=t.float();break}case 3:{s.i=t.int64();break}case 4:{s.s=t.bytes();break}case 5:{s.t=I.onnx.TensorProto.decode(t,t.uint32());break}case 6:{s.g=I.onnx.GraphProto.decode(t,t.uint32());break}case 22:{s.sparseTensor=I.onnx.SparseTensorProto.decode(t,t.uint32());break}case 14:{s.tp=I.onnx.TypeProto.decode(t,t.uint32());break}case 7:{if(s.floats&&s.floats.length||(s.floats=[]),(a&7)===2)for(var u=t.uint32()+t.pos;t.pos<u;)s.floats.push(t.float());else s.floats.push(t.float());break}case 8:{if(s.ints&&s.ints.length||(s.ints=[]),(a&7)===2)for(var u=t.uint32()+t.pos;t.pos<u;)s.ints.push(t.int64());else s.ints.push(t.int64());break}case 9:{s.strings&&s.strings.length||(s.strings=[]),s.strings.push(t.bytes());break}case 10:{s.tensors&&s.tensors.length||(s.tensors=[]),s.tensors.push(I.onnx.TensorProto.decode(t,t.uint32()));break}case 11:{s.graphs&&s.graphs.length||(s.graphs=[]),s.graphs.push(I.onnx.GraphProto.decode(t,t.uint32()));break}case 23:{s.sparseTensors&&s.sparseTensors.length||(s.sparseTensors=[]),s.sparseTensors.push(I.onnx.SparseTensorProto.decode(t,t.uint32()));break}case 15:{s.typeProtos&&s.typeProtos.length||(s.typeProtos=[]),s.typeProtos.push(I.onnx.TypeProto.decode(t,t.uint32()));break}default:t.skipType(a&7);break}}return s},e.decodeDelimited=function(t){return t instanceof ee||(t=new ee(t)),this.decode(t,t.uint32())},e.verify=function(t){if(typeof t!="object"||t===null)return"object expected";if(t.name!=null&&t.hasOwnProperty("name")&&!C.isString(t.name))return"name: string expected";if(t.refAttrName!=null&&t.hasOwnProperty("refAttrName")&&!C.isString(t.refAttrName))return"refAttrName: string expected";if(t.docString!=null&&t.hasOwnProperty("docString")&&!C.isString(t.docString))return"docString: string expected";if(t.type!=null&&t.hasOwnProperty("type"))switch(t.type){default:return"type: enum value expected";case 0:case 1:case 2:case 3:case 4:case 5:case 11:case 13:case 6:case 7:case 8:case 9:case 10:case 12:case 14:break}if(t.f!=null&&t.hasOwnProperty("f")&&typeof t.f!="number")return"f: number expected";if(t.i!=null&&t.hasOwnProperty("i")&&!C.isInteger(t.i)&&!(t.i&&C.isInteger(t.i.low)&&C.isInteger(t.i.high)))return"i: integer|Long expected";if(t.s!=null&&t.hasOwnProperty("s")&&!(t.s&&typeof t.s.length=="number"||C.isString(t.s)))return"s: buffer expected";if(t.t!=null&&t.hasOwnProperty("t")){var o=I.onnx.TensorProto.verify(t.t);if(o)return"t."+o}if(t.g!=null&&t.hasOwnProperty("g")){var o=I.onnx.GraphProto.verify(t.g);if(o)return"g."+o}if(t.sparseTensor!=null&&t.hasOwnProperty("sparseTensor")){var o=I.onnx.SparseTensorProto.verify(t.sparseTensor);if(o)return"sparseTensor."+o}if(t.tp!=null&&t.hasOwnProperty("tp")){var o=I.onnx.TypeProto.verify(t.tp);if(o)return"tp."+o}if(t.floats!=null&&t.hasOwnProperty("floats")){if(!Array.isArray(t.floats))return"floats: array expected";for(var i=0;i<t.floats.length;++i)if(typeof t.floats[i]!="number")return"floats: number[] expected"}if(t.ints!=null&&t.hasOwnProperty("ints")){if(!Array.isArray(t.ints))return"ints: array expected";for(var i=0;i<t.ints.length;++i)if(!C.isInteger(t.ints[i])&&!(t.ints[i]&&C.isInteger(t.ints[i].low)&&C.isInteger(t.ints[i].high)))return"ints: integer|Long[] expected"}if(t.strings!=null&&t.hasOwnProperty("strings")){if(!Array.isArray(t.strings))return"strings: array expected";for(var i=0;i<t.strings.length;++i)if(!(t.strings[i]&&typeof t.strings[i].length=="number"||C.isString(t.strings[i])))return"strings: buffer[] expected"}if(t.tensors!=null&&t.hasOwnProperty("tensors")){if(!Array.isArray(t.tensors))return"tensors: array expected";for(var i=0;i<t.tensors.length;++i){var o=I.onnx.TensorProto.verify(t.tensors[i]);if(o)return"tensors."+o}}if(t.graphs!=null&&t.hasOwnProperty("graphs")){if(!Array.isArray(t.graphs))return"graphs: array expected";for(var i=0;i<t.graphs.length;++i){var o=I.onnx.GraphProto.verify(t.graphs[i]);if(o)return"graphs."+o}}if(t.sparseTensors!=null&&t.hasOwnProperty("sparseTensors")){if(!Array.isArray(t.sparseTensors))return"sparseTensors: array expected";for(var i=0;i<t.sparseTensors.length;++i){var o=I.onnx.SparseTensorProto.verify(t.sparseTensors[i]);if(o)return"sparseTensors."+o}}if(t.typeProtos!=null&&t.hasOwnProperty("typeProtos")){if(!Array.isArray(t.typeProtos))return"typeProtos: array expected";for(var i=0;i<t.typeProtos.length;++i){var o=I.onnx.TypeProto.verify(t.typeProtos[i]);if(o)return"typeProtos."+o}}return null},e.fromObject=function(t){if(t instanceof I.onnx.AttributeProto)return t;var o=new I.onnx.AttributeProto;switch(t.name!=null&&(o.name=String(t.name)),t.refAttrName!=null&&(o.refAttrName=String(t.refAttrName)),t.docString!=null&&(o.docString=String(t.docString)),t.type){default:if(typeof t.type=="number"){o.type=t.type;break}break;case"UNDEFINED":case 0:o.type=0;break;case"FLOAT":case 1:o.type=1;break;case"INT":case 2:o.type=2;break;case"STRING":case 3:o.type=3;break;case"TENSOR":case 4:o.type=4;break;case"GRAPH":case 5:o.type=5;break;case"SPARSE_TENSOR":case 11:o.type=11;break;case"TYPE_PROTO":case 13:o.type=13;break;case"FLOATS":case 6:o.type=6;break;case"INTS":case 7:o.type=7;break;case"STRINGS":case 8:o.type=8;break;case"TENSORS":case 9:o.type=9;break;case"GRAPHS":case 10:o.type=10;break;case"SPARSE_TENSORS":case 12:o.type=12;break;case"TYPE_PROTOS":case 14:o.type=14;break}if(t.f!=null&&(o.f=Number(t.f)),t.i!=null&&(C.Long?(o.i=C.Long.fromValue(t.i)).unsigned=!1:typeof t.i=="string"?o.i=parseInt(t.i,10):typeof t.i=="number"?o.i=t.i:typeof t.i=="object"&&(o.i=new C.LongBits(t.i.low>>>0,t.i.high>>>0).toNumber())),t.s!=null&&(typeof t.s=="string"?C.base64.decode(t.s,o.s=C.newBuffer(C.base64.length(t.s)),0):t.s.length>=0&&(o.s=t.s)),t.t!=null){if(typeof t.t!="object")throw TypeError(".onnx.AttributeProto.t: object expected");o.t=I.onnx.TensorProto.fromObject(t.t)}if(t.g!=null){if(typeof t.g!="object")throw TypeError(".onnx.AttributeProto.g: object expected");o.g=I.onnx.GraphProto.fromObject(t.g)}if(t.sparseTensor!=null){if(typeof t.sparseTensor!="object")throw TypeError(".onnx.AttributeProto.sparseTensor: object expected");o.sparseTensor=I.onnx.SparseTensorProto.fromObject(t.sparseTensor)}if(t.tp!=null){if(typeof t.tp!="object")throw TypeError(".onnx.AttributeProto.tp: object expected");o.tp=I.onnx.TypeProto.fromObject(t.tp)}if(t.floats){if(!Array.isArray(t.floats))throw TypeError(".onnx.AttributeProto.floats: array expected");o.floats=[];for(var i=0;i<t.floats.length;++i)o.floats[i]=Number(t.floats[i])}if(t.ints){if(!Array.isArray(t.ints))throw TypeError(".onnx.AttributeProto.ints: array expected");o.ints=[];for(var i=0;i<t.ints.length;++i)C.Long?(o.ints[i]=C.Long.fromValue(t.ints[i])).unsigned=!1:typeof t.ints[i]=="string"?o.ints[i]=parseInt(t.ints[i],10):typeof t.ints[i]=="number"?o.ints[i]=t.ints[i]:typeof t.ints[i]=="object"&&(o.ints[i]=new C.LongBits(t.ints[i].low>>>0,t.ints[i].high>>>0).toNumber())}if(t.strings){if(!Array.isArray(t.strings))throw TypeError(".onnx.AttributeProto.strings: array expected");o.strings=[];for(var i=0;i<t.strings.length;++i)typeof t.strings[i]=="string"?C.base64.decode(t.strings[i],o.strings[i]=C.newBuffer(C.base64.length(t.strings[i])),0):t.strings[i].length>=0&&(o.strings[i]=t.strings[i])}if(t.tensors){if(!Array.isArray(t.tensors))throw TypeError(".onnx.AttributeProto.tensors: array expected");o.tensors=[];for(var i=0;i<t.tensors.length;++i){if(typeof t.tensors[i]!="object")throw TypeError(".onnx.AttributeProto.tensors: object expected");o.tensors[i]=I.onnx.TensorProto.fromObject(t.tensors[i])}}if(t.graphs){if(!Array.isArray(t.graphs))throw TypeError(".onnx.AttributeProto.graphs: array expected");o.graphs=[];for(var i=0;i<t.graphs.length;++i){if(typeof t.graphs[i]!="object")throw TypeError(".onnx.AttributeProto.graphs: object expected");o.graphs[i]=I.onnx.GraphProto.fromObject(t.graphs[i])}}if(t.sparseTensors){if(!Array.isArray(t.sparseTensors))throw TypeError(".onnx.AttributeProto.sparseTensors: array expected");o.sparseTensors=[];for(var i=0;i<t.sparseTensors.length;++i){if(typeof t.sparseTensors[i]!="object")throw TypeError(".onnx.AttributeProto.sparseTensors: object expected");o.sparseTensors[i]=I.onnx.SparseTensorProto.fromObject(t.sparseTensors[i])}}if(t.typeProtos){if(!Array.isArray(t.typeProtos))throw TypeError(".onnx.AttributeProto.typeProtos: array expected");o.typeProtos=[];for(var i=0;i<t.typeProtos.length;++i){if(typeof t.typeProtos[i]!="object")throw TypeError(".onnx.AttributeProto.typeProtos: object expected");o.typeProtos[i]=I.onnx.TypeProto.fromObject(t.typeProtos[i])}}return o},e.toObject=function(t,o){o||(o={});var i={};if((o.arrays||o.defaults)&&(i.floats=[],i.ints=[],i.strings=[],i.tensors=[],i.graphs=[],i.typeProtos=[],i.sparseTensors=[]),o.defaults){if(i.name="",i.f=0,C.Long){var s=new C.Long(0,0,!1);i.i=o.longs===String?s.toString():o.longs===Number?s.toNumber():s}else i.i=o.longs===String?"0":0;o.bytes===String?i.s="":(i.s=[],o.bytes!==Array&&(i.s=C.newBuffer(i.s))),i.t=null,i.g=null,i.docString="",i.tp=null,i.type=o.enums===String?"UNDEFINED":0,i.refAttrName="",i.sparseTensor=null}if(t.name!=null&&t.hasOwnProperty("name")&&(i.name=t.name),t.f!=null&&t.hasOwnProperty("f")&&(i.f=o.json&&!isFinite(t.f)?String(t.f):t.f),t.i!=null&&t.hasOwnProperty("i")&&(typeof t.i=="number"?i.i=o.longs===String?String(t.i):t.i:i.i=o.longs===String?C.Long.prototype.toString.call(t.i):o.longs===Number?new C.LongBits(t.i.low>>>0,t.i.high>>>0).toNumber():t.i),t.s!=null&&t.hasOwnProperty("s")&&(i.s=o.bytes===String?C.base64.encode(t.s,0,t.s.length):o.bytes===Array?Array.prototype.slice.call(t.s):t.s),t.t!=null&&t.hasOwnProperty("t")&&(i.t=I.onnx.TensorProto.toObject(t.t,o)),t.g!=null&&t.hasOwnProperty("g")&&(i.g=I.onnx.GraphProto.toObject(t.g,o)),t.floats&&t.floats.length){i.floats=[];for(var a=0;a<t.floats.length;++a)i.floats[a]=o.json&&!isFinite(t.floats[a])?String(t.floats[a]):t.floats[a]}if(t.ints&&t.ints.length){i.ints=[];for(var a=0;a<t.ints.length;++a)typeof t.ints[a]=="number"?i.ints[a]=o.longs===String?String(t.ints[a]):t.ints[a]:i.ints[a]=o.longs===String?C.Long.prototype.toString.call(t.ints[a]):o.longs===Number?new C.LongBits(t.ints[a].low>>>0,t.ints[a].high>>>0).toNumber():t.ints[a]}if(t.strings&&t.strings.length){i.strings=[];for(var a=0;a<t.strings.length;++a)i.strings[a]=o.bytes===String?C.base64.encode(t.strings[a],0,t.strings[a].length):o.bytes===Array?Array.prototype.slice.call(t.strings[a]):t.strings[a]}if(t.tensors&&t.tensors.length){i.tensors=[];for(var a=0;a<t.tensors.length;++a)i.tensors[a]=I.onnx.TensorProto.toObject(t.tensors[a],o)}if(t.graphs&&t.graphs.length){i.graphs=[];for(var a=0;a<t.graphs.length;++a)i.graphs[a]=I.onnx.GraphProto.toObject(t.graphs[a],o)}if(t.docString!=null&&t.hasOwnProperty("docString")&&(i.docString=t.docString),t.tp!=null&&t.hasOwnProperty("tp")&&(i.tp=I.onnx.TypeProto.toObject(t.tp,o)),t.typeProtos&&t.typeProtos.length){i.typeProtos=[];for(var a=0;a<t.typeProtos.length;++a)i.typeProtos[a]=I.onnx.TypeProto.toObject(t.typeProtos[a],o)}if(t.type!=null&&t.hasOwnProperty("type")&&(i.type=o.enums===String?I.onnx.AttributeProto.AttributeType[t.type]===void 0?t.type:I.onnx.AttributeProto.AttributeType[t.type]:t.type),t.refAttrName!=null&&t.hasOwnProperty("refAttrName")&&(i.refAttrName=t.refAttrName),t.sparseTensor!=null&&t.hasOwnProperty("sparseTensor")&&(i.sparseTensor=I.onnx.SparseTensorProto.toObject(t.sparseTensor,o)),t.sparseTensors&&t.sparseTensors.length){i.sparseTensors=[];for(var a=0;a<t.sparseTensors.length;++a)i.sparseTensors[a]=I.onnx.SparseTensorProto.toObject(t.sparseTensors[a],o)}return i},e.prototype.toJSON=function(){return this.constructor.toObject(this,st.util.toJSONOptions)},e.getTypeUrl=function(t){return t===void 0&&(t="type.googleapis.com"),t+"/onnx.AttributeProto"},e.AttributeType=function(){var n={},t=Object.create(n);return t[n[0]="UNDEFINED"]=0,t[n[1]="FLOAT"]=1,t[n[2]="INT"]=2,t[n[3]="STRING"]=3,t[n[4]="TENSOR"]=4,t[n[5]="GRAPH"]=5,t[n[11]="SPARSE_TENSOR"]=11,t[n[13]="TYPE_PROTO"]=13,t[n[6]="FLOATS"]=6,t[n[7]="INTS"]=7,t[n[8]="STRINGS"]=8,t[n[9]="TENSORS"]=9,t[n[10]="GRAPHS"]=10,t[n[12]="SPARSE_TENSORS"]=12,t[n[14]="TYPE_PROTOS"]=14,t}(),e}(),r.ValueInfoProto=function(){function e(n){if(n)for(var t=Object.keys(n),o=0;o<t.length;++o)n[t[o]]!=null&&(this[t[o]]=n[t[o]])}return e.prototype.name="",e.prototype.type=null,e.prototype.docString="",e.create=function(t){return new e(t)},e.encode=function(t,o){return o||(o=gt.create()),t.name!=null&&Object.hasOwnProperty.call(t,"name")&&o.uint32(10).string(t.name),t.type!=null&&Object.hasOwnProperty.call(t,"type")&&I.onnx.TypeProto.encode(t.type,o.uint32(18).fork()).ldelim(),t.docString!=null&&Object.hasOwnProperty.call(t,"docString")&&o.uint32(26).string(t.docString),o},e.encodeDelimited=function(t,o){return this.encode(t,o).ldelim()},e.decode=function(t,o){t instanceof ee||(t=ee.create(t));for(var i=o===void 0?t.len:t.pos+o,s=new I.onnx.ValueInfoProto;t.pos<i;){var a=t.uint32();switch(a>>>3){case 1:{s.name=t.string();break}case 2:{s.type=I.onnx.TypeProto.decode(t,t.uint32());break}case 3:{s.docString=t.string();break}default:t.skipType(a&7);break}}return s},e.decodeDelimited=function(t){return t instanceof ee||(t=new ee(t)),this.decode(t,t.uint32())},e.verify=function(t){if(typeof t!="object"||t===null)return"object expected";if(t.name!=null&&t.hasOwnProperty("name")&&!C.isString(t.name))return"name: string expected";if(t.type!=null&&t.hasOwnProperty("type")){var o=I.onnx.TypeProto.verify(t.type);if(o)return"type."+o}return t.docString!=null&&t.hasOwnProperty("docString")&&!C.isString(t.docString)?"docString: string expected":null},e.fromObject=function(t){if(t instanceof I.onnx.ValueInfoProto)return t;var o=new I.onnx.ValueInfoProto;if(t.name!=null&&(o.name=String(t.name)),t.type!=null){if(typeof t.type!="object")throw TypeError(".onnx.ValueInfoProto.type: object expected");o.type=I.onnx.TypeProto.fromObject(t.type)}return t.docString!=null&&(o.docString=String(t.docString)),o},e.toObject=function(t,o){o||(o={});var i={};return o.defaults&&(i.name="",i.type=null,i.docString=""),t.name!=null&&t.hasOwnProperty("name")&&(i.name=t.name),t.type!=null&&t.hasOwnProperty("type")&&(i.type=I.onnx.TypeProto.toObject(t.type,o)),t.docString!=null&&t.hasOwnProperty("docString")&&(i.docString=t.docString),i},e.prototype.toJSON=function(){return this.constructor.toObject(this,st.util.toJSONOptions)},e.getTypeUrl=function(t){return t===void 0&&(t="type.googleapis.com"),t+"/onnx.ValueInfoProto"},e}(),r.NodeProto=function(){function e(n){if(this.input=[],this.output=[],this.attribute=[],n)for(var t=Object.keys(n),o=0;o<t.length;++o)n[t[o]]!=null&&(this[t[o]]=n[t[o]])}return e.prototype.input=C.emptyArray,e.prototype.output=C.emptyArray,e.prototype.name="",e.prototype.opType="",e.prototype.domain="",e.prototype.attribute=C.emptyArray,e.prototype.docString="",e.create=function(t){return new e(t)},e.encode=function(t,o){if(o||(o=gt.create()),t.input!=null&&t.input.length)for(var i=0;i<t.input.length;++i)o.uint32(10).string(t.input[i]);if(t.output!=null&&t.output.length)for(var i=0;i<t.output.length;++i)o.uint32(18).string(t.output[i]);if(t.name!=null&&Object.hasOwnProperty.call(t,"name")&&o.uint32(26).string(t.name),t.opType!=null&&Object.hasOwnProperty.call(t,"opType")&&o.uint32(34).string(t.opType),t.attribute!=null&&t.attribute.length)for(var i=0;i<t.attribute.length;++i)I.onnx.AttributeProto.encode(t.attribute[i],o.uint32(42).fork()).ldelim();return t.docString!=null&&Object.hasOwnProperty.call(t,"docString")&&o.uint32(50).string(t.docString),t.domain!=null&&Object.hasOwnProperty.call(t,"domain")&&o.uint32(58).string(t.domain),o},e.encodeDelimited=function(t,o){return this.encode(t,o).ldelim()},e.decode=function(t,o){t instanceof ee||(t=ee.create(t));for(var i=o===void 0?t.len:t.pos+o,s=new I.onnx.NodeProto;t.pos<i;){var a=t.uint32();switch(a>>>3){case 1:{s.input&&s.input.length||(s.input=[]),s.input.push(t.string());break}case 2:{s.output&&s.output.length||(s.output=[]),s.output.push(t.string());break}case 3:{s.name=t.string();break}case 4:{s.opType=t.string();break}case 7:{s.domain=t.string();break}case 5:{s.attribute&&s.attribute.length||(s.attribute=[]),s.attribute.push(I.onnx.AttributeProto.decode(t,t.uint32()));break}case 6:{s.docString=t.string();break}default:t.skipType(a&7);break}}return s},e.decodeDelimited=function(t){return t instanceof ee||(t=new ee(t)),this.decode(t,t.uint32())},e.verify=function(t){if(typeof t!="object"||t===null)return"object expected";if(t.input!=null&&t.hasOwnProperty("input")){if(!Array.isArray(t.input))return"input: array expected";for(var o=0;o<t.input.length;++o)if(!C.isString(t.input[o]))return"input: string[] expected"}if(t.output!=null&&t.hasOwnProperty("output")){if(!Array.isArray(t.output))return"output: array expected";for(var o=0;o<t.output.length;++o)if(!C.isString(t.output[o]))return"output: string[] expected"}if(t.name!=null&&t.hasOwnProperty("name")&&!C.isString(t.name))return"name: string expected";if(t.opType!=null&&t.hasOwnProperty("opType")&&!C.isString(t.opType))return"opType: string expected";if(t.domain!=null&&t.hasOwnProperty("domain")&&!C.isString(t.domain))return"domain: string expected";if(t.attribute!=null&&t.hasOwnProperty("attribute")){if(!Array.isArray(t.attribute))return"attribute: array expected";for(var o=0;o<t.attribute.length;++o){var i=I.onnx.AttributeProto.verify(t.attribute[o]);if(i)return"attribute."+i}}return t.docString!=null&&t.hasOwnProperty("docString")&&!C.isString(t.docString)?"docString: string expected":null},e.fromObject=function(t){if(t instanceof I.onnx.NodeProto)return t;var o=new I.onnx.NodeProto;if(t.input){if(!Array.isArray(t.input))throw TypeError(".onnx.NodeProto.input: array expected");o.input=[];for(var i=0;i<t.input.length;++i)o.input[i]=String(t.input[i])}if(t.output){if(!Array.isArray(t.output))throw TypeError(".onnx.NodeProto.output: array expected");o.output=[];for(var i=0;i<t.output.length;++i)o.output[i]=String(t.output[i])}if(t.name!=null&&(o.name=String(t.name)),t.opType!=null&&(o.opType=String(t.opType)),t.domain!=null&&(o.domain=String(t.domain)),t.attribute){if(!Array.isArray(t.attribute))throw TypeError(".onnx.NodeProto.attribute: array expected");o.attribute=[];for(var i=0;i<t.attribute.length;++i){if(typeof t.attribute[i]!="object")throw TypeError(".onnx.NodeProto.attribute: object expected");o.attribute[i]=I.onnx.AttributeProto.fromObject(t.attribute[i])}}return t.docString!=null&&(o.docString=String(t.docString)),o},e.toObject=function(t,o){o||(o={});var i={};if((o.arrays||o.defaults)&&(i.input=[],i.output=[],i.attribute=[]),o.defaults&&(i.name="",i.opType="",i.docString="",i.domain=""),t.input&&t.input.length){i.input=[];for(var s=0;s<t.input.length;++s)i.input[s]=t.input[s]}if(t.output&&t.output.length){i.output=[];for(var s=0;s<t.output.length;++s)i.output[s]=t.output[s]}if(t.name!=null&&t.hasOwnProperty("name")&&(i.name=t.name),t.opType!=null&&t.hasOwnProperty("opType")&&(i.opType=t.opType),t.attribute&&t.attribute.length){i.attribute=[];for(var s=0;s<t.attribute.length;++s)i.attribute[s]=I.onnx.AttributeProto.toObject(t.attribute[s],o)}return t.docString!=null&&t.hasOwnProperty("docString")&&(i.docString=t.docString),t.domain!=null&&t.hasOwnProperty("domain")&&(i.domain=t.domain),i},e.prototype.toJSON=function(){return this.constructor.toObject(this,st.util.toJSONOptions)},e.getTypeUrl=function(t){return t===void 0&&(t="type.googleapis.com"),t+"/onnx.NodeProto"},e}(),r.TrainingInfoProto=function(){function e(n){if(this.initializationBinding=[],this.updateBinding=[],n)for(var t=Object.keys(n),o=0;o<t.length;++o)n[t[o]]!=null&&(this[t[o]]=n[t[o]])}return e.prototype.initialization=null,e.prototype.algorithm=null,e.prototype.initializationBinding=C.emptyArray,e.prototype.updateBinding=C.emptyArray,e.create=function(t){return new e(t)},e.encode=function(t,o){if(o||(o=gt.create()),t.initialization!=null&&Object.hasOwnProperty.call(t,"initialization")&&I.onnx.GraphProto.encode(t.initialization,o.uint32(10).fork()).ldelim(),t.algorithm!=null&&Object.hasOwnProperty.call(t,"algorithm")&&I.onnx.GraphProto.encode(t.algorithm,o.uint32(18).fork()).ldelim(),t.initializationBinding!=null&&t.initializationBinding.length)for(var i=0;i<t.initializationBinding.length;++i)I.onnx.StringStringEntryProto.encode(t.initializationBinding[i],o.uint32(26).fork()).ldelim();if(t.updateBinding!=null&&t.updateBinding.length)for(var i=0;i<t.updateBinding.length;++i)I.onnx.StringStringEntryProto.encode(t.updateBinding[i],o.uint32(34).fork()).ldelim();return o},e.encodeDelimited=function(t,o){return this.encode(t,o).ldelim()},e.decode=function(t,o){t instanceof ee||(t=ee.create(t));for(var i=o===void 0?t.len:t.pos+o,s=new I.onnx.TrainingInfoProto;t.pos<i;){var a=t.uint32();switch(a>>>3){case 1:{s.initialization=I.onnx.GraphProto.decode(t,t.uint32());break}case 2:{s.algorithm=I.onnx.GraphProto.decode(t,t.uint32());break}case 3:{s.initializationBinding&&s.initializationBinding.length||(s.initializationBinding=[]),s.initializationBinding.push(I.onnx.StringStringEntryProto.decode(t,t.uint32()));break}case 4:{s.updateBinding&&s.updateBinding.length||(s.updateBinding=[]),s.updateBinding.push(I.onnx.StringStringEntryProto.decode(t,t.uint32()));break}default:t.skipType(a&7);break}}return s},e.decodeDelimited=function(t){return t instanceof ee||(t=new ee(t)),this.decode(t,t.uint32())},e.verify=function(t){if(typeof t!="object"||t===null)return"object expected";if(t.initialization!=null&&t.hasOwnProperty("initialization")){var o=I.onnx.GraphProto.verify(t.initialization);if(o)return"initialization."+o}if(t.algorithm!=null&&t.hasOwnProperty("algorithm")){var o=I.onnx.GraphProto.verify(t.algorithm);if(o)return"algorithm."+o}if(t.initializationBinding!=null&&t.hasOwnProperty("initializationBinding")){if(!Array.isArray(t.initializationBinding))return"initializationBinding: array expected";for(var i=0;i<t.initializationBinding.length;++i){var o=I.onnx.StringStringEntryProto.verify(t.initializationBinding[i]);if(o)return"initializationBinding."+o}}if(t.updateBinding!=null&&t.hasOwnProperty("updateBinding")){if(!Array.isArray(t.updateBinding))return"updateBinding: array expected";for(var i=0;i<t.updateBinding.length;++i){var o=I.onnx.StringStringEntryProto.verify(t.updateBinding[i]);if(o)return"updateBinding."+o}}return null},e.fromObject=function(t){if(t instanceof I.onnx.TrainingInfoProto)return t;var o=new I.onnx.TrainingInfoProto;if(t.initialization!=null){if(typeof t.initialization!="object")throw TypeError(".onnx.TrainingInfoProto.initialization: object expected");o.initialization=I.onnx.GraphProto.fromObject(t.initialization)}if(t.algorithm!=null){if(typeof t.algorithm!="object")throw TypeError(".onnx.TrainingInfoProto.algorithm: object expected");o.algorithm=I.onnx.GraphProto.fromObject(t.algorithm)}if(t.initializationBinding){if(!Array.isArray(t.initializationBinding))throw TypeError(".onnx.TrainingInfoProto.initializationBinding: array expected");o.initializationBinding=[];for(var i=0;i<t.initializationBinding.length;++i){if(typeof t.initializationBinding[i]!="object")throw TypeError(".onnx.TrainingInfoProto.initializationBinding: object expected");o.initializationBinding[i]=I.onnx.StringStringEntryProto.fromObject(t.initializationBinding[i])}}if(t.updateBinding){if(!Array.isArray(t.updateBinding))throw TypeError(".onnx.TrainingInfoProto.updateBinding: array expected");o.updateBinding=[];for(var i=0;i<t.updateBinding.length;++i){if(typeof t.updateBinding[i]!="object")throw TypeError(".onnx.TrainingInfoProto.updateBinding: object expected");o.updateBinding[i]=I.onnx.StringStringEntryProto.fromObject(t.updateBinding[i])}}return o},e.toObject=function(t,o){o||(o={});var i={};if((o.arrays||o.defaults)&&(i.initializationBinding=[],i.updateBinding=[]),o.defaults&&(i.initialization=null,i.algorithm=null),t.initialization!=null&&t.hasOwnProperty("initialization")&&(i.initialization=I.onnx.GraphProto.toObject(t.initialization,o)),t.algorithm!=null&&t.hasOwnProperty("algorithm")&&(i.algorithm=I.onnx.GraphProto.toObject(t.algorithm,o)),t.initializationBinding&&t.initializationBinding.length){i.initializationBinding=[];for(var s=0;s<t.initializationBinding.length;++s)i.initializationBinding[s]=I.onnx.StringStringEntryProto.toObject(t.initializationBinding[s],o)}if(t.updateBinding&&t.updateBinding.length){i.updateBinding=[];for(var s=0;s<t.updateBinding.length;++s)i.updateBinding[s]=I.onnx.StringStringEntryProto.toObject(t.updateBinding[s],o)}return i},e.prototype.toJSON=function(){return this.constructor.toObject(this,st.util.toJSONOptions)},e.getTypeUrl=function(t){return t===void 0&&(t="type.googleapis.com"),t+"/onnx.TrainingInfoProto"},e}(),r.ModelProto=function(){function e(n){if(this.opsetImport=[],this.metadataProps=[],this.trainingInfo=[],this.functions=[],n)for(var t=Object.keys(n),o=0;o<t.length;++o)n[t[o]]!=null&&(this[t[o]]=n[t[o]])}return e.prototype.irVersion=C.Long?C.Long.fromBits(0,0,!1):0,e.prototype.opsetImport=C.emptyArray,e.prototype.producerName="",e.prototype.producerVersion="",e.prototype.domain="",e.prototype.modelVersion=C.Long?C.Long.fromBits(0,0,!1):0,e.prototype.docString="",e.prototype.graph=null,e.prototype.metadataProps=C.emptyArray,e.prototype.trainingInfo=C.emptyArray,e.prototype.functions=C.emptyArray,e.create=function(t){return new e(t)},e.encode=function(t,o){if(o||(o=gt.create()),t.irVersion!=null&&Object.hasOwnProperty.call(t,"irVersion")&&o.uint32(8).int64(t.irVersion),t.producerName!=null&&Object.hasOwnProperty.call(t,"producerName")&&o.uint32(18).string(t.producerName),t.producerVersion!=null&&Object.hasOwnProperty.call(t,"producerVersion")&&o.uint32(26).string(t.producerVersion),t.domain!=null&&Object.hasOwnProperty.call(t,"domain")&&o.uint32(34).string(t.domain),t.modelVersion!=null&&Object.hasOwnProperty.call(t,"modelVersion")&&o.uint32(40).int64(t.modelVersion),t.docString!=null&&Object.hasOwnProperty.call(t,"docString")&&o.uint32(50).string(t.docString),t.graph!=null&&Object.hasOwnProperty.call(t,"graph")&&I.onnx.GraphProto.encode(t.graph,o.uint32(58).fork()).ldelim(),t.opsetImport!=null&&t.opsetImport.length)for(var i=0;i<t.opsetImport.length;++i)I.onnx.OperatorSetIdProto.encode(t.opsetImport[i],o.uint32(66).fork()).ldelim();if(t.metadataProps!=null&&t.metadataProps.length)for(var i=0;i<t.metadataProps.length;++i)I.onnx.StringStringEntryProto.encode(t.metadataProps[i],o.uint32(114).fork()).ldelim();if(t.trainingInfo!=null&&t.trainingInfo.length)for(var i=0;i<t.trainingInfo.length;++i)I.onnx.TrainingInfoProto.encode(t.trainingInfo[i],o.uint32(162).fork()).ldelim();if(t.functions!=null&&t.functions.length)for(var i=0;i<t.functions.length;++i)I.onnx.FunctionProto.encode(t.functions[i],o.uint32(202).fork()).ldelim();return o},e.encodeDelimited=function(t,o){return this.encode(t,o).ldelim()},e.decode=function(t,o){t instanceof ee||(t=ee.create(t));for(var i=o===void 0?t.len:t.pos+o,s=new I.onnx.ModelProto;t.pos<i;){var a=t.uint32();switch(a>>>3){case 1:{s.irVersion=t.int64();break}case 8:{s.opsetImport&&s.opsetImport.length||(s.opsetImport=[]),s.opsetImport.push(I.onnx.OperatorSetIdProto.decode(t,t.uint32()));break}case 2:{s.producerName=t.string();break}case 3:{s.producerVersion=t.string();break}case 4:{s.domain=t.string();break}case 5:{s.modelVersion=t.int64();break}case 6:{s.docString=t.string();break}case 7:{s.graph=I.onnx.GraphProto.decode(t,t.uint32());break}case 14:{s.metadataProps&&s.metadataProps.length||(s.metadataProps=[]),s.metadataProps.push(I.onnx.StringStringEntryProto.decode(t,t.uint32()));break}case 20:{s.trainingInfo&&s.trainingInfo.length||(s.trainingInfo=[]),s.trainingInfo.push(I.onnx.TrainingInfoProto.decode(t,t.uint32()));break}case 25:{s.functions&&s.functions.length||(s.functions=[]),s.functions.push(I.onnx.FunctionProto.decode(t,t.uint32()));break}default:t.skipType(a&7);break}}return s},e.decodeDelimited=function(t){return t instanceof ee||(t=new ee(t)),this.decode(t,t.uint32())},e.verify=function(t){if(typeof t!="object"||t===null)return"object expected";if(t.irVersion!=null&&t.hasOwnProperty("irVersion")&&!C.isInteger(t.irVersion)&&!(t.irVersion&&C.isInteger(t.irVersion.low)&&C.isInteger(t.irVersion.high)))return"irVersion: integer|Long expected";if(t.opsetImport!=null&&t.hasOwnProperty("opsetImport")){if(!Array.isArray(t.opsetImport))return"opsetImport: array expected";for(var o=0;o<t.opsetImport.length;++o){var i=I.onnx.OperatorSetIdProto.verify(t.opsetImport[o]);if(i)return"opsetImport."+i}}if(t.producerName!=null&&t.hasOwnProperty("producerName")&&!C.isString(t.producerName))return"producerName: string expected";if(t.producerVersion!=null&&t.hasOwnProperty("producerVersion")&&!C.isString(t.producerVersion))return"producerVersion: string expected";if(t.domain!=null&&t.hasOwnProperty("domain")&&!C.isString(t.domain))return"domain: string expected";if(t.modelVersion!=null&&t.hasOwnProperty("modelVersion")&&!C.isInteger(t.modelVersion)&&!(t.modelVersion&&C.isInteger(t.modelVersion.low)&&C.isInteger(t.modelVersion.high)))return"modelVersion: integer|Long expected";if(t.docString!=null&&t.hasOwnProperty("docString")&&!C.isString(t.docString))return"docString: string expected";if(t.graph!=null&&t.hasOwnProperty("graph")){var i=I.onnx.GraphProto.verify(t.graph);if(i)return"graph."+i}if(t.metadataProps!=null&&t.hasOwnProperty("metadataProps")){if(!Array.isArray(t.metadataProps))return"metadataProps: array expected";for(var o=0;o<t.metadataProps.length;++o){var i=I.onnx.StringStringEntryProto.verify(t.metadataProps[o]);if(i)return"metadataProps."+i}}if(t.trainingInfo!=null&&t.hasOwnProperty("trainingInfo")){if(!Array.isArray(t.trainingInfo))return"trainingInfo: array expected";for(var o=0;o<t.trainingInfo.length;++o){var i=I.onnx.TrainingInfoProto.verify(t.trainingInfo[o]);if(i)return"trainingInfo."+i}}if(t.functions!=null&&t.hasOwnProperty("functions")){if(!Array.isArray(t.functions))return"functions: array expected";for(var o=0;o<t.functions.length;++o){var i=I.onnx.FunctionProto.verify(t.functions[o]);if(i)return"functions."+i}}return null},e.fromObject=function(t){if(t instanceof I.onnx.ModelProto)return t;var o=new I.onnx.ModelProto;if(t.irVersion!=null&&(C.Long?(o.irVersion=C.Long.fromValue(t.irVersion)).unsigned=!1:typeof t.irVersion=="string"?o.irVersion=parseInt(t.irVersion,10):typeof t.irVersion=="number"?o.irVersion=t.irVersion:typeof t.irVersion=="object"&&(o.irVersion=new C.LongBits(t.irVersion.low>>>0,t.irVersion.high>>>0).toNumber())),t.opsetImport){if(!Array.isArray(t.opsetImport))throw TypeError(".onnx.ModelProto.opsetImport: array expected");o.opsetImport=[];for(var i=0;i<t.opsetImport.length;++i){if(typeof t.opsetImport[i]!="object")throw TypeError(".onnx.ModelProto.opsetImport: object expected");o.opsetImport[i]=I.onnx.OperatorSetIdProto.fromObject(t.opsetImport[i])}}if(t.producerName!=null&&(o.producerName=String(t.producerName)),t.producerVersion!=null&&(o.producerVersion=String(t.producerVersion)),t.domain!=null&&(o.domain=String(t.domain)),t.modelVersion!=null&&(C.Long?(o.modelVersion=C.Long.fromValue(t.modelVersion)).unsigned=!1:typeof t.modelVersion=="string"?o.modelVersion=parseInt(t.modelVersion,10):typeof t.modelVersion=="number"?o.modelVersion=t.modelVersion:typeof t.modelVersion=="object"&&(o.modelVersion=new C.LongBits(t.modelVersion.low>>>0,t.modelVersion.high>>>0).toNumber())),t.docString!=null&&(o.docString=String(t.docString)),t.graph!=null){if(typeof t.graph!="object")throw TypeError(".onnx.ModelProto.graph: object expected");o.graph=I.onnx.GraphProto.fromObject(t.graph)}if(t.metadataProps){if(!Array.isArray(t.metadataProps))throw TypeError(".onnx.ModelProto.metadataProps: array expected");o.metadataProps=[];for(var i=0;i<t.metadataProps.length;++i){if(typeof t.metadataProps[i]!="object")throw TypeError(".onnx.ModelProto.metadataProps: object expected");o.metadataProps[i]=I.onnx.StringStringEntryProto.fromObject(t.metadataProps[i])}}if(t.trainingInfo){if(!Array.isArray(t.trainingInfo))throw TypeError(".onnx.ModelProto.trainingInfo: array expected");o.trainingInfo=[];for(var i=0;i<t.trainingInfo.length;++i){if(typeof t.trainingInfo[i]!="object")throw TypeError(".onnx.ModelProto.trainingInfo: object expected");o.trainingInfo[i]=I.onnx.TrainingInfoProto.fromObject(t.trainingInfo[i])}}if(t.functions){if(!Array.isArray(t.functions))throw TypeError(".onnx.ModelProto.functions: array expected");o.functions=[];for(var i=0;i<t.functions.length;++i){if(typeof t.functions[i]!="object")throw TypeError(".onnx.ModelProto.functions: object expected");o.functions[i]=I.onnx.FunctionProto.fromObject(t.functions[i])}}return o},e.toObject=function(t,o){o||(o={});var i={};if((o.arrays||o.defaults)&&(i.opsetImport=[],i.metadataProps=[],i.trainingInfo=[],i.functions=[]),o.defaults){if(C.Long){var s=new C.Long(0,0,!1);i.irVersion=o.longs===String?s.toString():o.longs===Number?s.toNumber():s}else i.irVersion=o.longs===String?"0":0;if(i.producerName="",i.producerVersion="",i.domain="",C.Long){var s=new C.Long(0,0,!1);i.modelVersion=o.longs===String?s.toString():o.longs===Number?s.toNumber():s}else i.modelVersion=o.longs===String?"0":0;i.docString="",i.graph=null}if(t.irVersion!=null&&t.hasOwnProperty("irVersion")&&(typeof t.irVersion=="number"?i.irVersion=o.longs===String?String(t.irVersion):t.irVersion:i.irVersion=o.longs===String?C.Long.prototype.toString.call(t.irVersion):o.longs===Number?new C.LongBits(t.irVersion.low>>>0,t.irVersion.high>>>0).toNumber():t.irVersion),t.producerName!=null&&t.hasOwnProperty("producerName")&&(i.producerName=t.producerName),t.producerVersion!=null&&t.hasOwnProperty("producerVersion")&&(i.producerVersion=t.producerVersion),t.domain!=null&&t.hasOwnProperty("domain")&&(i.domain=t.domain),t.modelVersion!=null&&t.hasOwnProperty("modelVersion")&&(typeof t.modelVersion=="number"?i.modelVersion=o.longs===String?String(t.modelVersion):t.modelVersion:i.modelVersion=o.longs===String?C.Long.prototype.toString.call(t.modelVersion):o.longs===Number?new C.LongBits(t.modelVersion.low>>>0,t.modelVersion.high>>>0).toNumber():t.modelVersion),t.docString!=null&&t.hasOwnProperty("docString")&&(i.docString=t.docString),t.graph!=null&&t.hasOwnProperty("graph")&&(i.graph=I.onnx.GraphProto.toObject(t.graph,o)),t.opsetImport&&t.opsetImport.length){i.opsetImport=[];for(var a=0;a<t.opsetImport.length;++a)i.opsetImport[a]=I.onnx.OperatorSetIdProto.toObject(t.opsetImport[a],o)}if(t.metadataProps&&t.metadataProps.length){i.metadataProps=[];for(var a=0;a<t.metadataProps.length;++a)i.metadataProps[a]=I.onnx.StringStringEntryProto.toObject(t.metadataProps[a],o)}if(t.trainingInfo&&t.trainingInfo.length){i.trainingInfo=[];for(var a=0;a<t.trainingInfo.length;++a)i.trainingInfo[a]=I.onnx.TrainingInfoProto.toObject(t.trainingInfo[a],o)}if(t.functions&&t.functions.length){i.functions=[];for(var a=0;a<t.functions.length;++a)i.functions[a]=I.onnx.FunctionProto.toObject(t.functions[a],o)}return i},e.prototype.toJSON=function(){return this.constructor.toObject(this,st.util.toJSONOptions)},e.getTypeUrl=function(t){return t===void 0&&(t="type.googleapis.com"),t+"/onnx.ModelProto"},e}(),r.StringStringEntryProto=function(){function e(n){if(n)for(var t=Object.keys(n),o=0;o<t.length;++o)n[t[o]]!=null&&(this[t[o]]=n[t[o]])}return e.prototype.key="",e.prototype.value="",e.create=function(t){return new e(t)},e.encode=function(t,o){return o||(o=gt.create()),t.key!=null&&Object.hasOwnProperty.call(t,"key")&&o.uint32(10).string(t.key),t.value!=null&&Object.hasOwnProperty.call(t,"value")&&o.uint32(18).string(t.value),o},e.encodeDelimited=function(t,o){return this.encode(t,o).ldelim()},e.decode=function(t,o){t instanceof ee||(t=ee.create(t));for(var i=o===void 0?t.len:t.pos+o,s=new I.onnx.StringStringEntryProto;t.pos<i;){var a=t.uint32();switch(a>>>3){case 1:{s.key=t.string();break}case 2:{s.value=t.string();break}default:t.skipType(a&7);break}}return s},e.decodeDelimited=function(t){return t instanceof ee||(t=new ee(t)),this.decode(t,t.uint32())},e.verify=function(t){return typeof t!="object"||t===null?"object expected":t.key!=null&&t.hasOwnProperty("key")&&!C.isString(t.key)?"key: string expected":t.value!=null&&t.hasOwnProperty("value")&&!C.isString(t.value)?"value: string expected":null},e.fromObject=function(t){if(t instanceof I.onnx.StringStringEntryProto)return t;var o=new I.onnx.StringStringEntryProto;return t.key!=null&&(o.key=String(t.key)),t.value!=null&&(o.value=String(t.value)),o},e.toObject=function(t,o){o||(o={});var i={};return o.defaults&&(i.key="",i.value=""),t.key!=null&&t.hasOwnProperty("key")&&(i.key=t.key),t.value!=null&&t.hasOwnProperty("value")&&(i.value=t.value),i},e.prototype.toJSON=function(){return this.constructor.toObject(this,st.util.toJSONOptions)},e.getTypeUrl=function(t){return t===void 0&&(t="type.googleapis.com"),t+"/onnx.StringStringEntryProto"},e}(),r.TensorAnnotation=function(){function e(n){if(this.quantParameterTensorNames=[],n)for(var t=Object.keys(n),o=0;o<t.length;++o)n[t[o]]!=null&&(this[t[o]]=n[t[o]])}return e.prototype.tensorName="",e.prototype.quantParameterTensorNames=C.emptyArray,e.create=function(t){return new e(t)},e.encode=function(t,o){if(o||(o=gt.create()),t.tensorName!=null&&Object.hasOwnProperty.call(t,"tensorName")&&o.uint32(10).string(t.tensorName),t.quantParameterTensorNames!=null&&t.quantParameterTensorNames.length)for(var i=0;i<t.quantParameterTensorNames.length;++i)I.onnx.StringStringEntryProto.encode(t.quantParameterTensorNames[i],o.uint32(18).fork()).ldelim();return o},e.encodeDelimited=function(t,o){return this.encode(t,o).ldelim()},e.decode=function(t,o){t instanceof ee||(t=ee.create(t));for(var i=o===void 0?t.len:t.pos+o,s=new I.onnx.TensorAnnotation;t.pos<i;){var a=t.uint32();switch(a>>>3){case 1:{s.tensorName=t.string();break}case 2:{s.quantParameterTensorNames&&s.quantParameterTensorNames.length||(s.quantParameterTensorNames=[]),s.quantParameterTensorNames.push(I.onnx.StringStringEntryProto.decode(t,t.uint32()));break}default:t.skipType(a&7);break}}return s},e.decodeDelimited=function(t){return t instanceof ee||(t=new ee(t)),this.decode(t,t.uint32())},e.verify=function(t){if(typeof t!="object"||t===null)return"object expected";if(t.tensorName!=null&&t.hasOwnProperty("tensorName")&&!C.isString(t.tensorName))return"tensorName: string expected";if(t.quantParameterTensorNames!=null&&t.hasOwnProperty("quantParameterTensorNames")){if(!Array.isArray(t.quantParameterTensorNames))return"quantParameterTensorNames: array expected";for(var o=0;o<t.quantParameterTensorNames.length;++o){var i=I.onnx.StringStringEntryProto.verify(t.quantParameterTensorNames[o]);if(i)return"quantParameterTensorNames."+i}}return null},e.fromObject=function(t){if(t instanceof I.onnx.TensorAnnotation)return t;var o=new I.onnx.TensorAnnotation;if(t.tensorName!=null&&(o.tensorName=String(t.tensorName)),t.quantParameterTensorNames){if(!Array.isArray(t.quantParameterTensorNames))throw TypeError(".onnx.TensorAnnotation.quantParameterTensorNames: array expected");o.quantParameterTensorNames=[];for(var i=0;i<t.quantParameterTensorNames.length;++i){if(typeof t.quantParameterTensorNames[i]!="object")throw TypeError(".onnx.TensorAnnotation.quantParameterTensorNames: object expected");o.quantParameterTensorNames[i]=I.onnx.StringStringEntryProto.fromObject(t.quantParameterTensorNames[i])}}return o},e.toObject=function(t,o){o||(o={});var i={};if((o.arrays||o.defaults)&&(i.quantParameterTensorNames=[]),o.defaults&&(i.tensorName=""),t.tensorName!=null&&t.hasOwnProperty("tensorName")&&(i.tensorName=t.tensorName),t.quantParameterTensorNames&&t.quantParameterTensorNames.length){i.quantParameterTensorNames=[];for(var s=0;s<t.quantParameterTensorNames.length;++s)i.quantParameterTensorNames[s]=I.onnx.StringStringEntryProto.toObject(t.quantParameterTensorNames[s],o)}return i},e.prototype.toJSON=function(){return this.constructor.toObject(this,st.util.toJSONOptions)},e.getTypeUrl=function(t){return t===void 0&&(t="type.googleapis.com"),t+"/onnx.TensorAnnotation"},e}(),r.GraphProto=function(){function e(n){if(this.node=[],this.initializer=[],this.sparseInitializer=[],this.input=[],this.output=[],this.valueInfo=[],this.quantizationAnnotation=[],n)for(var t=Object.keys(n),o=0;o<t.length;++o)n[t[o]]!=null&&(this[t[o]]=n[t[o]])}return e.prototype.node=C.emptyArray,e.prototype.name="",e.prototype.initializer=C.emptyArray,e.prototype.sparseInitializer=C.emptyArray,e.prototype.docString="",e.prototype.input=C.emptyArray,e.prototype.output=C.emptyArray,e.prototype.valueInfo=C.emptyArray,e.prototype.quantizationAnnotation=C.emptyArray,e.create=function(t){return new e(t)},e.encode=function(t,o){if(o||(o=gt.create()),t.node!=null&&t.node.length)for(var i=0;i<t.node.length;++i)I.onnx.NodeProto.encode(t.node[i],o.uint32(10).fork()).ldelim();if(t.name!=null&&Object.hasOwnProperty.call(t,"name")&&o.uint32(18).string(t.name),t.initializer!=null&&t.initializer.length)for(var i=0;i<t.initializer.length;++i)I.onnx.TensorProto.encode(t.initializer[i],o.uint32(42).fork()).ldelim();if(t.docString!=null&&Object.hasOwnProperty.call(t,"docString")&&o.uint32(82).string(t.docString),t.input!=null&&t.input.length)for(var i=0;i<t.input.length;++i)I.onnx.ValueInfoProto.encode(t.input[i],o.uint32(90).fork()).ldelim();if(t.output!=null&&t.output.length)for(var i=0;i<t.output.length;++i)I.onnx.ValueInfoProto.encode(t.output[i],o.uint32(98).fork()).ldelim();if(t.valueInfo!=null&&t.valueInfo.length)for(var i=0;i<t.valueInfo.length;++i)I.onnx.ValueInfoProto.encode(t.valueInfo[i],o.uint32(106).fork()).ldelim();if(t.quantizationAnnotation!=null&&t.quantizationAnnotation.length)for(var i=0;i<t.quantizationAnnotation.length;++i)I.onnx.TensorAnnotation.encode(t.quantizationAnnotation[i],o.uint32(114).fork()).ldelim();if(t.sparseInitializer!=null&&t.sparseInitializer.length)for(var i=0;i<t.sparseInitializer.length;++i)I.onnx.SparseTensorProto.encode(t.sparseInitializer[i],o.uint32(122).fork()).ldelim();return o},e.encodeDelimited=function(t,o){return this.encode(t,o).ldelim()},e.decode=function(t,o){t instanceof ee||(t=ee.create(t));for(var i=o===void 0?t.len:t.pos+o,s=new I.onnx.GraphProto;t.pos<i;){var a=t.uint32();switch(a>>>3){case 1:{s.node&&s.node.length||(s.node=[]),s.node.push(I.onnx.NodeProto.decode(t,t.uint32()));break}case 2:{s.name=t.string();break}case 5:{s.initializer&&s.initializer.length||(s.initializer=[]),s.initializer.push(I.onnx.TensorProto.decode(t,t.uint32()));break}case 15:{s.sparseInitializer&&s.sparseInitializer.length||(s.sparseInitializer=[]),s.sparseInitializer.push(I.onnx.SparseTensorProto.decode(t,t.uint32()));break}case 10:{s.docString=t.string();break}case 11:{s.input&&s.input.length||(s.input=[]),s.input.push(I.onnx.ValueInfoProto.decode(t,t.uint32()));break}case 12:{s.output&&s.output.length||(s.output=[]),s.output.push(I.onnx.ValueInfoProto.decode(t,t.uint32()));break}case 13:{s.valueInfo&&s.valueInfo.length||(s.valueInfo=[]),s.valueInfo.push(I.onnx.ValueInfoProto.decode(t,t.uint32()));break}case 14:{s.quantizationAnnotation&&s.quantizationAnnotation.length||(s.quantizationAnnotation=[]),s.quantizationAnnotation.push(I.onnx.TensorAnnotation.decode(t,t.uint32()));break}default:t.skipType(a&7);break}}return s},e.decodeDelimited=function(t){return t instanceof ee||(t=new ee(t)),this.decode(t,t.uint32())},e.verify=function(t){if(typeof t!="object"||t===null)return"object expected";if(t.node!=null&&t.hasOwnProperty("node")){if(!Array.isArray(t.node))return"node: array expected";for(var o=0;o<t.node.length;++o){var i=I.onnx.NodeProto.verify(t.node[o]);if(i)return"node."+i}}if(t.name!=null&&t.hasOwnProperty("name")&&!C.isString(t.name))return"name: string expected";if(t.initializer!=null&&t.hasOwnProperty("initializer")){if(!Array.isArray(t.initializer))return"initializer: array expected";for(var o=0;o<t.initializer.length;++o){var i=I.onnx.TensorProto.verify(t.initializer[o]);if(i)return"initializer."+i}}if(t.sparseInitializer!=null&&t.hasOwnProperty("sparseInitializer")){if(!Array.isArray(t.sparseInitializer))return"sparseInitializer: array expected";for(var o=0;o<t.sparseInitializer.length;++o){var i=I.onnx.SparseTensorProto.verify(t.sparseInitializer[o]);if(i)return"sparseInitializer."+i}}if(t.docString!=null&&t.hasOwnProperty("docString")&&!C.isString(t.docString))return"docString: string expected";if(t.input!=null&&t.hasOwnProperty("input")){if(!Array.isArray(t.input))return"input: array expected";for(var o=0;o<t.input.length;++o){var i=I.onnx.ValueInfoProto.verify(t.input[o]);if(i)return"input."+i}}if(t.output!=null&&t.hasOwnProperty("output")){if(!Array.isArray(t.output))return"output: array expected";for(var o=0;o<t.output.length;++o){var i=I.onnx.ValueInfoProto.verify(t.output[o]);if(i)return"output."+i}}if(t.valueInfo!=null&&t.hasOwnProperty("valueInfo")){if(!Array.isArray(t.valueInfo))return"valueInfo: array expected";for(var o=0;o<t.valueInfo.length;++o){var i=I.onnx.ValueInfoProto.verify(t.valueInfo[o]);if(i)return"valueInfo."+i}}if(t.quantizationAnnotation!=null&&t.hasOwnProperty("quantizationAnnotation")){if(!Array.isArray(t.quantizationAnnotation))return"quantizationAnnotation: array expected";for(var o=0;o<t.quantizationAnnotation.length;++o){var i=I.onnx.TensorAnnotation.verify(t.quantizationAnnotation[o]);if(i)return"quantizationAnnotation."+i}}return null},e.fromObject=function(t){if(t instanceof I.onnx.GraphProto)return t;var o=new I.onnx.GraphProto;if(t.node){if(!Array.isArray(t.node))throw TypeError(".onnx.GraphProto.node: array expected");o.node=[];for(var i=0;i<t.node.length;++i){if(typeof t.node[i]!="object")throw TypeError(".onnx.GraphProto.node: object expected");o.node[i]=I.onnx.NodeProto.fromObject(t.node[i])}}if(t.name!=null&&(o.name=String(t.name)),t.initializer){if(!Array.isArray(t.initializer))throw TypeError(".onnx.GraphProto.initializer: array expected");o.initializer=[];for(var i=0;i<t.initializer.length;++i){if(typeof t.initializer[i]!="object")throw TypeError(".onnx.GraphProto.initializer: object expected");o.initializer[i]=I.onnx.TensorProto.fromObject(t.initializer[i])}}if(t.sparseInitializer){if(!Array.isArray(t.sparseInitializer))throw TypeError(".onnx.GraphProto.sparseInitializer: array expected");o.sparseInitializer=[];for(var i=0;i<t.sparseInitializer.length;++i){if(typeof t.sparseInitializer[i]!="object")throw TypeError(".onnx.GraphProto.sparseInitializer: object expected");o.sparseInitializer[i]=I.onnx.SparseTensorProto.fromObject(t.sparseInitializer[i])}}if(t.docString!=null&&(o.docString=String(t.docString)),t.input){if(!Array.isArray(t.input))throw TypeError(".onnx.GraphProto.input: array expected");o.input=[];for(var i=0;i<t.input.length;++i){if(typeof t.input[i]!="object")throw TypeError(".onnx.GraphProto.input: object expected");o.input[i]=I.onnx.ValueInfoProto.fromObject(t.input[i])}}if(t.output){if(!Array.isArray(t.output))throw TypeError(".onnx.GraphProto.output: array expected");o.output=[];for(var i=0;i<t.output.length;++i){if(typeof t.output[i]!="object")throw TypeError(".onnx.GraphProto.output: object expected");o.output[i]=I.onnx.ValueInfoProto.fromObject(t.output[i])}}if(t.valueInfo){if(!Array.isArray(t.valueInfo))throw TypeError(".onnx.GraphProto.valueInfo: array expected");o.valueInfo=[];for(var i=0;i<t.valueInfo.length;++i){if(typeof t.valueInfo[i]!="object")throw TypeError(".onnx.GraphProto.valueInfo: object expected");o.valueInfo[i]=I.onnx.ValueInfoProto.fromObject(t.valueInfo[i])}}if(t.quantizationAnnotation){if(!Array.isArray(t.quantizationAnnotation))throw TypeError(".onnx.GraphProto.quantizationAnnotation: array expected");o.quantizationAnnotation=[];for(var i=0;i<t.quantizationAnnotation.length;++i){if(typeof t.quantizationAnnotation[i]!="object")throw TypeError(".onnx.GraphProto.quantizationAnnotation: object expected");o.quantizationAnnotation[i]=I.onnx.TensorAnnotation.fromObject(t.quantizationAnnotation[i])}}return o},e.toObject=function(t,o){o||(o={});var i={};if((o.arrays||o.defaults)&&(i.node=[],i.initializer=[],i.input=[],i.output=[],i.valueInfo=[],i.quantizationAnnotation=[],i.sparseInitializer=[]),o.defaults&&(i.name="",i.docString=""),t.node&&t.node.length){i.node=[];for(var s=0;s<t.node.length;++s)i.node[s]=I.onnx.NodeProto.toObject(t.node[s],o)}if(t.name!=null&&t.hasOwnProperty("name")&&(i.name=t.name),t.initializer&&t.initializer.length){i.initializer=[];for(var s=0;s<t.initializer.length;++s)i.initializer[s]=I.onnx.TensorProto.toObject(t.initializer[s],o)}if(t.docString!=null&&t.hasOwnProperty("docString")&&(i.docString=t.docString),t.input&&t.input.length){i.input=[];for(var s=0;s<t.input.length;++s)i.input[s]=I.onnx.ValueInfoProto.toObject(t.input[s],o)}if(t.output&&t.output.length){i.output=[];for(var s=0;s<t.output.length;++s)i.output[s]=I.onnx.ValueInfoProto.toObject(t.output[s],o)}if(t.valueInfo&&t.valueInfo.length){i.valueInfo=[];for(var s=0;s<t.valueInfo.length;++s)i.valueInfo[s]=I.onnx.ValueInfoProto.toObject(t.valueInfo[s],o)}if(t.quantizationAnnotation&&t.quantizationAnnotation.length){i.quantizationAnnotation=[];for(var s=0;s<t.quantizationAnnotation.length;++s)i.quantizationAnnotation[s]=I.onnx.TensorAnnotation.toObject(t.quantizationAnnotation[s],o)}if(t.sparseInitializer&&t.sparseInitializer.length){i.sparseInitializer=[];for(var s=0;s<t.sparseInitializer.length;++s)i.sparseInitializer[s]=I.onnx.SparseTensorProto.toObject(t.sparseInitializer[s],o)}return i},e.prototype.toJSON=function(){return this.constructor.toObject(this,st.util.toJSONOptions)},e.getTypeUrl=function(t){return t===void 0&&(t="type.googleapis.com"),t+"/onnx.GraphProto"},e}(),r.TensorProto=function(){function e(n){if(this.dims=[],this.floatData=[],this.int32Data=[],this.stringData=[],this.int64Data=[],this.externalData=[],this.doubleData=[],this.uint64Data=[],n)for(var t=Object.keys(n),o=0;o<t.length;++o)n[t[o]]!=null&&(this[t[o]]=n[t[o]])}return e.prototype.dims=C.emptyArray,e.prototype.dataType=0,e.prototype.segment=null,e.prototype.floatData=C.emptyArray,e.prototype.int32Data=C.emptyArray,e.prototype.stringData=C.emptyArray,e.prototype.int64Data=C.emptyArray,e.prototype.name="",e.prototype.docString="",e.prototype.rawData=C.newBuffer([]),e.prototype.externalData=C.emptyArray,e.prototype.dataLocation=0,e.prototype.doubleData=C.emptyArray,e.prototype.uint64Data=C.emptyArray,e.create=function(t){return new e(t)},e.encode=function(t,o){if(o||(o=gt.create()),t.dims!=null&&t.dims.length){o.uint32(10).fork();for(var i=0;i<t.dims.length;++i)o.int64(t.dims[i]);o.ldelim()}if(t.dataType!=null&&Object.hasOwnProperty.call(t,"dataType")&&o.uint32(16).int32(t.dataType),t.segment!=null&&Object.hasOwnProperty.call(t,"segment")&&I.onnx.TensorProto.Segment.encode(t.segment,o.uint32(26).fork()).ldelim(),t.floatData!=null&&t.floatData.length){o.uint32(34).fork();for(var i=0;i<t.floatData.length;++i)o.float(t.floatData[i]);o.ldelim()}if(t.int32Data!=null&&t.int32Data.length){o.uint32(42).fork();for(var i=0;i<t.int32Data.length;++i)o.int32(t.int32Data[i]);o.ldelim()}if(t.stringData!=null&&t.stringData.length)for(var i=0;i<t.stringData.length;++i)o.uint32(50).bytes(t.stringData[i]);if(t.int64Data!=null&&t.int64Data.length){o.uint32(58).fork();for(var i=0;i<t.int64Data.length;++i)o.int64(t.int64Data[i]);o.ldelim()}if(t.name!=null&&Object.hasOwnProperty.call(t,"name")&&o.uint32(66).string(t.name),t.rawData!=null&&Object.hasOwnProperty.call(t,"rawData")&&o.uint32(74).bytes(t.rawData),t.doubleData!=null&&t.doubleData.length){o.uint32(82).fork();for(var i=0;i<t.doubleData.length;++i)o.double(t.doubleData[i]);o.ldelim()}if(t.uint64Data!=null&&t.uint64Data.length){o.uint32(90).fork();for(var i=0;i<t.uint64Data.length;++i)o.uint64(t.uint64Data[i]);o.ldelim()}if(t.docString!=null&&Object.hasOwnProperty.call(t,"docString")&&o.uint32(98).string(t.docString),t.externalData!=null&&t.externalData.length)for(var i=0;i<t.externalData.length;++i)I.onnx.StringStringEntryProto.encode(t.externalData[i],o.uint32(106).fork()).ldelim();return t.dataLocation!=null&&Object.hasOwnProperty.call(t,"dataLocation")&&o.uint32(112).int32(t.dataLocation),o},e.encodeDelimited=function(t,o){return this.encode(t,o).ldelim()},e.decode=function(t,o){t instanceof ee||(t=ee.create(t));for(var i=o===void 0?t.len:t.pos+o,s=new I.onnx.TensorProto;t.pos<i;){var a=t.uint32();switch(a>>>3){case 1:{if(s.dims&&s.dims.length||(s.dims=[]),(a&7)===2)for(var u=t.uint32()+t.pos;t.pos<u;)s.dims.push(t.int64());else s.dims.push(t.int64());break}case 2:{s.dataType=t.int32();break}case 3:{s.segment=I.onnx.TensorProto.Segment.decode(t,t.uint32());break}case 4:{if(s.floatData&&s.floatData.length||(s.floatData=[]),(a&7)===2)for(var u=t.uint32()+t.pos;t.pos<u;)s.floatData.push(t.float());else s.floatData.push(t.float());break}case 5:{if(s.int32Data&&s.int32Data.length||(s.int32Data=[]),(a&7)===2)for(var u=t.uint32()+t.pos;t.pos<u;)s.int32Data.push(t.int32());else s.int32Data.push(t.int32());break}case 6:{s.stringData&&s.stringData.length||(s.stringData=[]),s.stringData.push(t.bytes());break}case 7:{if(s.int64Data&&s.int64Data.length||(s.int64Data=[]),(a&7)===2)for(var u=t.uint32()+t.pos;t.pos<u;)s.int64Data.push(t.int64());else s.int64Data.push(t.int64());break}case 8:{s.name=t.string();break}case 12:{s.docString=t.string();break}case 9:{s.rawData=t.bytes();break}case 13:{s.externalData&&s.externalData.length||(s.externalData=[]),s.externalData.push(I.onnx.StringStringEntryProto.decode(t,t.uint32()));break}case 14:{s.dataLocation=t.int32();break}case 10:{if(s.doubleData&&s.doubleData.length||(s.doubleData=[]),(a&7)===2)for(var u=t.uint32()+t.pos;t.pos<u;)s.doubleData.push(t.double());else s.doubleData.push(t.double());break}case 11:{if(s.uint64Data&&s.uint64Data.length||(s.uint64Data=[]),(a&7)===2)for(var u=t.uint32()+t.pos;t.pos<u;)s.uint64Data.push(t.uint64());else s.uint64Data.push(t.uint64());break}default:t.skipType(a&7);break}}return s},e.decodeDelimited=function(t){return t instanceof ee||(t=new ee(t)),this.decode(t,t.uint32())},e.verify=function(t){if(typeof t!="object"||t===null)return"object expected";if(t.dims!=null&&t.hasOwnProperty("dims")){if(!Array.isArray(t.dims))return"dims: array expected";for(var o=0;o<t.dims.length;++o)if(!C.isInteger(t.dims[o])&&!(t.dims[o]&&C.isInteger(t.dims[o].low)&&C.isInteger(t.dims[o].high)))return"dims: integer|Long[] expected"}if(t.dataType!=null&&t.hasOwnProperty("dataType")&&!C.isInteger(t.dataType))return"dataType: integer expected";if(t.segment!=null&&t.hasOwnProperty("segment")){var i=I.onnx.TensorProto.Segment.verify(t.segment);if(i)return"segment."+i}if(t.floatData!=null&&t.hasOwnProperty("floatData")){if(!Array.isArray(t.floatData))return"floatData: array expected";for(var o=0;o<t.floatData.length;++o)if(typeof t.floatData[o]!="number")return"floatData: number[] expected"}if(t.int32Data!=null&&t.hasOwnProperty("int32Data")){if(!Array.isArray(t.int32Data))return"int32Data: array expected";for(var o=0;o<t.int32Data.length;++o)if(!C.isInteger(t.int32Data[o]))return"int32Data: integer[] expected"}if(t.stringData!=null&&t.hasOwnProperty("stringData")){if(!Array.isArray(t.stringData))return"stringData: array expected";for(var o=0;o<t.stringData.length;++o)if(!(t.stringData[o]&&typeof t.stringData[o].length=="number"||C.isString(t.stringData[o])))return"stringData: buffer[] expected"}if(t.int64Data!=null&&t.hasOwnProperty("int64Data")){if(!Array.isArray(t.int64Data))return"int64Data: array expected";for(var o=0;o<t.int64Data.length;++o)if(!C.isInteger(t.int64Data[o])&&!(t.int64Data[o]&&C.isInteger(t.int64Data[o].low)&&C.isInteger(t.int64Data[o].high)))return"int64Data: integer|Long[] expected"}if(t.name!=null&&t.hasOwnProperty("name")&&!C.isString(t.name))return"name: string expected";if(t.docString!=null&&t.hasOwnProperty("docString")&&!C.isString(t.docString))return"docString: string expected";if(t.rawData!=null&&t.hasOwnProperty("rawData")&&!(t.rawData&&typeof t.rawData.length=="number"||C.isString(t.rawData)))return"rawData: buffer expected";if(t.externalData!=null&&t.hasOwnProperty("externalData")){if(!Array.isArray(t.externalData))return"externalData: array expected";for(var o=0;o<t.externalData.length;++o){var i=I.onnx.StringStringEntryProto.verify(t.externalData[o]);if(i)return"externalData."+i}}if(t.dataLocation!=null&&t.hasOwnProperty("dataLocation"))switch(t.dataLocation){default:return"dataLocation: enum value expected";case 0:case 1:break}if(t.doubleData!=null&&t.hasOwnProperty("doubleData")){if(!Array.isArray(t.doubleData))return"doubleData: array expected";for(var o=0;o<t.doubleData.length;++o)if(typeof t.doubleData[o]!="number")return"doubleData: number[] expected"}if(t.uint64Data!=null&&t.hasOwnProperty("uint64Data")){if(!Array.isArray(t.uint64Data))return"uint64Data: array expected";for(var o=0;o<t.uint64Data.length;++o)if(!C.isInteger(t.uint64Data[o])&&!(t.uint64Data[o]&&C.isInteger(t.uint64Data[o].low)&&C.isInteger(t.uint64Data[o].high)))return"uint64Data: integer|Long[] expected"}return null},e.fromObject=function(t){if(t instanceof I.onnx.TensorProto)return t;var o=new I.onnx.TensorProto;if(t.dims){if(!Array.isArray(t.dims))throw TypeError(".onnx.TensorProto.dims: array expected");o.dims=[];for(var i=0;i<t.dims.length;++i)C.Long?(o.dims[i]=C.Long.fromValue(t.dims[i])).unsigned=!1:typeof t.dims[i]=="string"?o.dims[i]=parseInt(t.dims[i],10):typeof t.dims[i]=="number"?o.dims[i]=t.dims[i]:typeof t.dims[i]=="object"&&(o.dims[i]=new C.LongBits(t.dims[i].low>>>0,t.dims[i].high>>>0).toNumber())}if(t.dataType!=null&&(o.dataType=t.dataType|0),t.segment!=null){if(typeof t.segment!="object")throw TypeError(".onnx.TensorProto.segment: object expected");o.segment=I.onnx.TensorProto.Segment.fromObject(t.segment)}if(t.floatData){if(!Array.isArray(t.floatData))throw TypeError(".onnx.TensorProto.floatData: array expected");o.floatData=[];for(var i=0;i<t.floatData.length;++i)o.floatData[i]=Number(t.floatData[i])}if(t.int32Data){if(!Array.isArray(t.int32Data))throw TypeError(".onnx.TensorProto.int32Data: array expected");o.int32Data=[];for(var i=0;i<t.int32Data.length;++i)o.int32Data[i]=t.int32Data[i]|0}if(t.stringData){if(!Array.isArray(t.stringData))throw TypeError(".onnx.TensorProto.stringData: array expected");o.stringData=[];for(var i=0;i<t.stringData.length;++i)typeof t.stringData[i]=="string"?C.base64.decode(t.stringData[i],o.stringData[i]=C.newBuffer(C.base64.length(t.stringData[i])),0):t.stringData[i].length>=0&&(o.stringData[i]=t.stringData[i])}if(t.int64Data){if(!Array.isArray(t.int64Data))throw TypeError(".onnx.TensorProto.int64Data: array expected");o.int64Data=[];for(var i=0;i<t.int64Data.length;++i)C.Long?(o.int64Data[i]=C.Long.fromValue(t.int64Data[i])).unsigned=!1:typeof t.int64Data[i]=="string"?o.int64Data[i]=parseInt(t.int64Data[i],10):typeof t.int64Data[i]=="number"?o.int64Data[i]=t.int64Data[i]:typeof t.int64Data[i]=="object"&&(o.int64Data[i]=new C.LongBits(t.int64Data[i].low>>>0,t.int64Data[i].high>>>0).toNumber())}if(t.name!=null&&(o.name=String(t.name)),t.docString!=null&&(o.docString=String(t.docString)),t.rawData!=null&&(typeof t.rawData=="string"?C.base64.decode(t.rawData,o.rawData=C.newBuffer(C.base64.length(t.rawData)),0):t.rawData.length>=0&&(o.rawData=t.rawData)),t.externalData){if(!Array.isArray(t.externalData))throw TypeError(".onnx.TensorProto.externalData: array expected");o.externalData=[];for(var i=0;i<t.externalData.length;++i){if(typeof t.externalData[i]!="object")throw TypeError(".onnx.TensorProto.externalData: object expected");o.externalData[i]=I.onnx.StringStringEntryProto.fromObject(t.externalData[i])}}switch(t.dataLocation){default:if(typeof t.dataLocation=="number"){o.dataLocation=t.dataLocation;break}break;case"DEFAULT":case 0:o.dataLocation=0;break;case"EXTERNAL":case 1:o.dataLocation=1;break}if(t.doubleData){if(!Array.isArray(t.doubleData))throw TypeError(".onnx.TensorProto.doubleData: array expected");o.doubleData=[];for(var i=0;i<t.doubleData.length;++i)o.doubleData[i]=Number(t.doubleData[i])}if(t.uint64Data){if(!Array.isArray(t.uint64Data))throw TypeError(".onnx.TensorProto.uint64Data: array expected");o.uint64Data=[];for(var i=0;i<t.uint64Data.length;++i)C.Long?(o.uint64Data[i]=C.Long.fromValue(t.uint64Data[i])).unsigned=!0:typeof t.uint64Data[i]=="string"?o.uint64Data[i]=parseInt(t.uint64Data[i],10):typeof t.uint64Data[i]=="number"?o.uint64Data[i]=t.uint64Data[i]:typeof t.uint64Data[i]=="object"&&(o.uint64Data[i]=new C.LongBits(t.uint64Data[i].low>>>0,t.uint64Data[i].high>>>0).toNumber(!0))}return o},e.toObject=function(t,o){o||(o={});var i={};if((o.arrays||o.defaults)&&(i.dims=[],i.floatData=[],i.int32Data=[],i.stringData=[],i.int64Data=[],i.doubleData=[],i.uint64Data=[],i.externalData=[]),o.defaults&&(i.dataType=0,i.segment=null,i.name="",o.bytes===String?i.rawData="":(i.rawData=[],o.bytes!==Array&&(i.rawData=C.newBuffer(i.rawData))),i.docString="",i.dataLocation=o.enums===String?"DEFAULT":0),t.dims&&t.dims.length){i.dims=[];for(var s=0;s<t.dims.length;++s)typeof t.dims[s]=="number"?i.dims[s]=o.longs===String?String(t.dims[s]):t.dims[s]:i.dims[s]=o.longs===String?C.Long.prototype.toString.call(t.dims[s]):o.longs===Number?new C.LongBits(t.dims[s].low>>>0,t.dims[s].high>>>0).toNumber():t.dims[s]}if(t.dataType!=null&&t.hasOwnProperty("dataType")&&(i.dataType=t.dataType),t.segment!=null&&t.hasOwnProperty("segment")&&(i.segment=I.onnx.TensorProto.Segment.toObject(t.segment,o)),t.floatData&&t.floatData.length){i.floatData=[];for(var s=0;s<t.floatData.length;++s)i.floatData[s]=o.json&&!isFinite(t.floatData[s])?String(t.floatData[s]):t.floatData[s]}if(t.int32Data&&t.int32Data.length){i.int32Data=[];for(var s=0;s<t.int32Data.length;++s)i.int32Data[s]=t.int32Data[s]}if(t.stringData&&t.stringData.length){i.stringData=[];for(var s=0;s<t.stringData.length;++s)i.stringData[s]=o.bytes===String?C.base64.encode(t.stringData[s],0,t.stringData[s].length):o.bytes===Array?Array.prototype.slice.call(t.stringData[s]):t.stringData[s]}if(t.int64Data&&t.int64Data.length){i.int64Data=[];for(var s=0;s<t.int64Data.length;++s)typeof t.int64Data[s]=="number"?i.int64Data[s]=o.longs===String?String(t.int64Data[s]):t.int64Data[s]:i.int64Data[s]=o.longs===String?C.Long.prototype.toString.call(t.int64Data[s]):o.longs===Number?new C.LongBits(t.int64Data[s].low>>>0,t.int64Data[s].high>>>0).toNumber():t.int64Data[s]}if(t.name!=null&&t.hasOwnProperty("name")&&(i.name=t.name),t.rawData!=null&&t.hasOwnProperty("rawData")&&(i.rawData=o.bytes===String?C.base64.encode(t.rawData,0,t.rawData.length):o.bytes===Array?Array.prototype.slice.call(t.rawData):t.rawData),t.doubleData&&t.doubleData.length){i.doubleData=[];for(var s=0;s<t.doubleData.length;++s)i.doubleData[s]=o.json&&!isFinite(t.doubleData[s])?String(t.doubleData[s]):t.doubleData[s]}if(t.uint64Data&&t.uint64Data.length){i.uint64Data=[];for(var s=0;s<t.uint64Data.length;++s)typeof t.uint64Data[s]=="number"?i.uint64Data[s]=o.longs===String?String(t.uint64Data[s]):t.uint64Data[s]:i.uint64Data[s]=o.longs===String?C.Long.prototype.toString.call(t.uint64Data[s]):o.longs===Number?new C.LongBits(t.uint64Data[s].low>>>0,t.uint64Data[s].high>>>0).toNumber(!0):t.uint64Data[s]}if(t.docString!=null&&t.hasOwnProperty("docString")&&(i.docString=t.docString),t.externalData&&t.externalData.length){i.externalData=[];for(var s=0;s<t.externalData.length;++s)i.externalData[s]=I.onnx.StringStringEntryProto.toObject(t.externalData[s],o)}return t.dataLocation!=null&&t.hasOwnProperty("dataLocation")&&(i.dataLocation=o.enums===String?I.onnx.TensorProto.DataLocation[t.dataLocation]===void 0?t.dataLocation:I.onnx.TensorProto.DataLocation[t.dataLocation]:t.dataLocation),i},e.prototype.toJSON=function(){return this.constructor.toObject(this,st.util.toJSONOptions)},e.getTypeUrl=function(t){return t===void 0&&(t="type.googleapis.com"),t+"/onnx.TensorProto"},e.DataType=function(){var n={},t=Object.create(n);return t[n[0]="UNDEFINED"]=0,t[n[1]="FLOAT"]=1,t[n[2]="UINT8"]=2,t[n[3]="INT8"]=3,t[n[4]="UINT16"]=4,t[n[5]="INT16"]=5,t[n[6]="INT32"]=6,t[n[7]="INT64"]=7,t[n[8]="STRING"]=8,t[n[9]="BOOL"]=9,t[n[10]="FLOAT16"]=10,t[n[11]="DOUBLE"]=11,t[n[12]="UINT32"]=12,t[n[13]="UINT64"]=13,t[n[14]="COMPLEX64"]=14,t[n[15]="COMPLEX128"]=15,t[n[16]="BFLOAT16"]=16,t[n[17]="FLOAT8E4M3FN"]=17,t[n[18]="FLOAT8E4M3FNUZ"]=18,t[n[19]="FLOAT8E5M2"]=19,t[n[20]="FLOAT8E5M2FNUZ"]=20,t}(),e.Segment=function(){function n(t){if(t)for(var o=Object.keys(t),i=0;i<o.length;++i)t[o[i]]!=null&&(this[o[i]]=t[o[i]])}return n.prototype.begin=C.Long?C.Long.fromBits(0,0,!1):0,n.prototype.end=C.Long?C.Long.fromBits(0,0,!1):0,n.create=function(o){return new n(o)},n.encode=function(o,i){return i||(i=gt.create()),o.begin!=null&&Object.hasOwnProperty.call(o,"begin")&&i.uint32(8).int64(o.begin),o.end!=null&&Object.hasOwnProperty.call(o,"end")&&i.uint32(16).int64(o.end),i},n.encodeDelimited=function(o,i){return this.encode(o,i).ldelim()},n.decode=function(o,i){o instanceof ee||(o=ee.create(o));for(var s=i===void 0?o.len:o.pos+i,a=new I.onnx.TensorProto.Segment;o.pos<s;){var u=o.uint32();switch(u>>>3){case 1:{a.begin=o.int64();break}case 2:{a.end=o.int64();break}default:o.skipType(u&7);break}}return a},n.decodeDelimited=function(o){return o instanceof ee||(o=new ee(o)),this.decode(o,o.uint32())},n.verify=function(o){return typeof o!="object"||o===null?"object expected":o.begin!=null&&o.hasOwnProperty("begin")&&!C.isInteger(o.begin)&&!(o.begin&&C.isInteger(o.begin.low)&&C.isInteger(o.begin.high))?"begin: integer|Long expected":o.end!=null&&o.hasOwnProperty("end")&&!C.isInteger(o.end)&&!(o.end&&C.isInteger(o.end.low)&&C.isInteger(o.end.high))?"end: integer|Long expected":null},n.fromObject=function(o){if(o instanceof I.onnx.TensorProto.Segment)return o;var i=new I.onnx.TensorProto.Segment;return o.begin!=null&&(C.Long?(i.begin=C.Long.fromValue(o.begin)).unsigned=!1:typeof o.begin=="string"?i.begin=parseInt(o.begin,10):typeof o.begin=="number"?i.begin=o.begin:typeof o.begin=="object"&&(i.begin=new C.LongBits(o.begin.low>>>0,o.begin.high>>>0).toNumber())),o.end!=null&&(C.Long?(i.end=C.Long.fromValue(o.end)).unsigned=!1:typeof o.end=="string"?i.end=parseInt(o.end,10):typeof o.end=="number"?i.end=o.end:typeof o.end=="object"&&(i.end=new C.LongBits(o.end.low>>>0,o.end.high>>>0).toNumber())),i},n.toObject=function(o,i){i||(i={});var s={};if(i.defaults){if(C.Long){var a=new C.Long(0,0,!1);s.begin=i.longs===String?a.toString():i.longs===Number?a.toNumber():a}else s.begin=i.longs===String?"0":0;if(C.Long){var a=new C.Long(0,0,!1);s.end=i.longs===String?a.toString():i.longs===Number?a.toNumber():a}else s.end=i.longs===String?"0":0}return o.begin!=null&&o.hasOwnProperty("begin")&&(typeof o.begin=="number"?s.begin=i.longs===String?String(o.begin):o.begin:s.begin=i.longs===String?C.Long.prototype.toString.call(o.begin):i.longs===Number?new C.LongBits(o.begin.low>>>0,o.begin.high>>>0).toNumber():o.begin),o.end!=null&&o.hasOwnProperty("end")&&(typeof o.end=="number"?s.end=i.longs===String?String(o.end):o.end:s.end=i.longs===String?C.Long.prototype.toString.call(o.end):i.longs===Number?new C.LongBits(o.end.low>>>0,o.end.high>>>0).toNumber():o.end),s},n.prototype.toJSON=function(){return this.constructor.toObject(this,st.util.toJSONOptions)},n.getTypeUrl=function(o){return o===void 0&&(o="type.googleapis.com"),o+"/onnx.TensorProto.Segment"},n}(),e.DataLocation=function(){var n={},t=Object.create(n);return t[n[0]="DEFAULT"]=0,t[n[1]="EXTERNAL"]=1,t}(),e}(),r.SparseTensorProto=function(){function e(n){if(this.dims=[],n)for(var t=Object.keys(n),o=0;o<t.length;++o)n[t[o]]!=null&&(this[t[o]]=n[t[o]])}return e.prototype.values=null,e.prototype.indices=null,e.prototype.dims=C.emptyArray,e.create=function(t){return new e(t)},e.encode=function(t,o){if(o||(o=gt.create()),t.values!=null&&Object.hasOwnProperty.call(t,"values")&&I.onnx.TensorProto.encode(t.values,o.uint32(10).fork()).ldelim(),t.indices!=null&&Object.hasOwnProperty.call(t,"indices")&&I.onnx.TensorProto.encode(t.indices,o.uint32(18).fork()).ldelim(),t.dims!=null&&t.dims.length){o.uint32(26).fork();for(var i=0;i<t.dims.length;++i)o.int64(t.dims[i]);o.ldelim()}return o},e.encodeDelimited=function(t,o){return this.encode(t,o).ldelim()},e.decode=function(t,o){t instanceof ee||(t=ee.create(t));for(var i=o===void 0?t.len:t.pos+o,s=new I.onnx.SparseTensorProto;t.pos<i;){var a=t.uint32();switch(a>>>3){case 1:{s.values=I.onnx.TensorProto.decode(t,t.uint32());break}case 2:{s.indices=I.onnx.TensorProto.decode(t,t.uint32());break}case 3:{if(s.dims&&s.dims.length||(s.dims=[]),(a&7)===2)for(var u=t.uint32()+t.pos;t.pos<u;)s.dims.push(t.int64());else s.dims.push(t.int64());break}default:t.skipType(a&7);break}}return s},e.decodeDelimited=function(t){return t instanceof ee||(t=new ee(t)),this.decode(t,t.uint32())},e.verify=function(t){if(typeof t!="object"||t===null)return"object expected";if(t.values!=null&&t.hasOwnProperty("values")){var o=I.onnx.TensorProto.verify(t.values);if(o)return"values."+o}if(t.indices!=null&&t.hasOwnProperty("indices")){var o=I.onnx.TensorProto.verify(t.indices);if(o)return"indices."+o}if(t.dims!=null&&t.hasOwnProperty("dims")){if(!Array.isArray(t.dims))return"dims: array expected";for(var i=0;i<t.dims.length;++i)if(!C.isInteger(t.dims[i])&&!(t.dims[i]&&C.isInteger(t.dims[i].low)&&C.isInteger(t.dims[i].high)))return"dims: integer|Long[] expected"}return null},e.fromObject=function(t){if(t instanceof I.onnx.SparseTensorProto)return t;var o=new I.onnx.SparseTensorProto;if(t.values!=null){if(typeof t.values!="object")throw TypeError(".onnx.SparseTensorProto.values: object expected");o.values=I.onnx.TensorProto.fromObject(t.values)}if(t.indices!=null){if(typeof t.indices!="object")throw TypeError(".onnx.SparseTensorProto.indices: object expected");o.indices=I.onnx.TensorProto.fromObject(t.indices)}if(t.dims){if(!Array.isArray(t.dims))throw TypeError(".onnx.SparseTensorProto.dims: array expected");o.dims=[];for(var i=0;i<t.dims.length;++i)C.Long?(o.dims[i]=C.Long.fromValue(t.dims[i])).unsigned=!1:typeof t.dims[i]=="string"?o.dims[i]=parseInt(t.dims[i],10):typeof t.dims[i]=="number"?o.dims[i]=t.dims[i]:typeof t.dims[i]=="object"&&(o.dims[i]=new C.LongBits(t.dims[i].low>>>0,t.dims[i].high>>>0).toNumber())}return o},e.toObject=function(t,o){o||(o={});var i={};if((o.arrays||o.defaults)&&(i.dims=[]),o.defaults&&(i.values=null,i.indices=null),t.values!=null&&t.hasOwnProperty("values")&&(i.values=I.onnx.TensorProto.toObject(t.values,o)),t.indices!=null&&t.hasOwnProperty("indices")&&(i.indices=I.onnx.TensorProto.toObject(t.indices,o)),t.dims&&t.dims.length){i.dims=[];for(var s=0;s<t.dims.length;++s)typeof t.dims[s]=="number"?i.dims[s]=o.longs===String?String(t.dims[s]):t.dims[s]:i.dims[s]=o.longs===String?C.Long.prototype.toString.call(t.dims[s]):o.longs===Number?new C.LongBits(t.dims[s].low>>>0,t.dims[s].high>>>0).toNumber():t.dims[s]}return i},e.prototype.toJSON=function(){return this.constructor.toObject(this,st.util.toJSONOptions)},e.getTypeUrl=function(t){return t===void 0&&(t="type.googleapis.com"),t+"/onnx.SparseTensorProto"},e}(),r.TensorShapeProto=function(){function e(n){if(this.dim=[],n)for(var t=Object.keys(n),o=0;o<t.length;++o)n[t[o]]!=null&&(this[t[o]]=n[t[o]])}return e.prototype.dim=C.emptyArray,e.create=function(t){return new e(t)},e.encode=function(t,o){if(o||(o=gt.create()),t.dim!=null&&t.dim.length)for(var i=0;i<t.dim.length;++i)I.onnx.TensorShapeProto.Dimension.encode(t.dim[i],o.uint32(10).fork()).ldelim();return o},e.encodeDelimited=function(t,o){return this.encode(t,o).ldelim()},e.decode=function(t,o){t instanceof ee||(t=ee.create(t));for(var i=o===void 0?t.len:t.pos+o,s=new I.onnx.TensorShapeProto;t.pos<i;){var a=t.uint32();switch(a>>>3){case 1:{s.dim&&s.dim.length||(s.dim=[]),s.dim.push(I.onnx.TensorShapeProto.Dimension.decode(t,t.uint32()));break}default:t.skipType(a&7);break}}return s},e.decodeDelimited=function(t){return t instanceof ee||(t=new ee(t)),this.decode(t,t.uint32())},e.verify=function(t){if(typeof t!="object"||t===null)return"object expected";if(t.dim!=null&&t.hasOwnProperty("dim")){if(!Array.isArray(t.dim))return"dim: array expected";for(var o=0;o<t.dim.length;++o){var i=I.onnx.TensorShapeProto.Dimension.verify(t.dim[o]);if(i)return"dim."+i}}return null},e.fromObject=function(t){if(t instanceof I.onnx.TensorShapeProto)return t;var o=new I.onnx.TensorShapeProto;if(t.dim){if(!Array.isArray(t.dim))throw TypeError(".onnx.TensorShapeProto.dim: array expected");o.dim=[];for(var i=0;i<t.dim.length;++i){if(typeof t.dim[i]!="object")throw TypeError(".onnx.TensorShapeProto.dim: object expected");o.dim[i]=I.onnx.TensorShapeProto.Dimension.fromObject(t.dim[i])}}return o},e.toObject=function(t,o){o||(o={});var i={};if((o.arrays||o.defaults)&&(i.dim=[]),t.dim&&t.dim.length){i.dim=[];for(var s=0;s<t.dim.length;++s)i.dim[s]=I.onnx.TensorShapeProto.Dimension.toObject(t.dim[s],o)}return i},e.prototype.toJSON=function(){return this.constructor.toObject(this,st.util.toJSONOptions)},e.getTypeUrl=function(t){return t===void 0&&(t="type.googleapis.com"),t+"/onnx.TensorShapeProto"},e.Dimension=function(){function n(o){if(o)for(var i=Object.keys(o),s=0;s<i.length;++s)o[i[s]]!=null&&(this[i[s]]=o[i[s]])}n.prototype.dimValue=null,n.prototype.dimParam=null,n.prototype.denotation="";var t;return Object.defineProperty(n.prototype,"value",{get:C.oneOfGetter(t=["dimValue","dimParam"]),set:C.oneOfSetter(t)}),n.create=function(i){return new n(i)},n.encode=function(i,s){return s||(s=gt.create()),i.dimValue!=null&&Object.hasOwnProperty.call(i,"dimValue")&&s.uint32(8).int64(i.dimValue),i.dimParam!=null&&Object.hasOwnProperty.call(i,"dimParam")&&s.uint32(18).string(i.dimParam),i.denotation!=null&&Object.hasOwnProperty.call(i,"denotation")&&s.uint32(26).string(i.denotation),s},n.encodeDelimited=function(i,s){return this.encode(i,s).ldelim()},n.decode=function(i,s){i instanceof ee||(i=ee.create(i));for(var a=s===void 0?i.len:i.pos+s,u=new I.onnx.TensorShapeProto.Dimension;i.pos<a;){var l=i.uint32();switch(l>>>3){case 1:{u.dimValue=i.int64();break}case 2:{u.dimParam=i.string();break}case 3:{u.denotation=i.string();break}default:i.skipType(l&7);break}}return u},n.decodeDelimited=function(i){return i instanceof ee||(i=new ee(i)),this.decode(i,i.uint32())},n.verify=function(i){if(typeof i!="object"||i===null)return"object expected";var s={};if(i.dimValue!=null&&i.hasOwnProperty("dimValue")&&(s.value=1,!C.isInteger(i.dimValue)&&!(i.dimValue&&C.isInteger(i.dimValue.low)&&C.isInteger(i.dimValue.high))))return"dimValue: integer|Long expected";if(i.dimParam!=null&&i.hasOwnProperty("dimParam")){if(s.value===1)return"value: multiple values";if(s.value=1,!C.isString(i.dimParam))return"dimParam: string expected"}return i.denotation!=null&&i.hasOwnProperty("denotation")&&!C.isString(i.denotation)?"denotation: string expected":null},n.fromObject=function(i){if(i instanceof I.onnx.TensorShapeProto.Dimension)return i;var s=new I.onnx.TensorShapeProto.Dimension;return i.dimValue!=null&&(C.Long?(s.dimValue=C.Long.fromValue(i.dimValue)).unsigned=!1:typeof i.dimValue=="string"?s.dimValue=parseInt(i.dimValue,10):typeof i.dimValue=="number"?s.dimValue=i.dimValue:typeof i.dimValue=="object"&&(s.dimValue=new C.LongBits(i.dimValue.low>>>0,i.dimValue.high>>>0).toNumber())),i.dimParam!=null&&(s.dimParam=String(i.dimParam)),i.denotation!=null&&(s.denotation=String(i.denotation)),s},n.toObject=function(i,s){s||(s={});var a={};return s.defaults&&(a.denotation=""),i.dimValue!=null&&i.hasOwnProperty("dimValue")&&(typeof i.dimValue=="number"?a.dimValue=s.longs===String?String(i.dimValue):i.dimValue:a.dimValue=s.longs===String?C.Long.prototype.toString.call(i.dimValue):s.longs===Number?new C.LongBits(i.dimValue.low>>>0,i.dimValue.high>>>0).toNumber():i.dimValue,s.oneofs&&(a.value="dimValue")),i.dimParam!=null&&i.hasOwnProperty("dimParam")&&(a.dimParam=i.dimParam,s.oneofs&&(a.value="dimParam")),i.denotation!=null&&i.hasOwnProperty("denotation")&&(a.denotation=i.denotation),a},n.prototype.toJSON=function(){return this.constructor.toObject(this,st.util.toJSONOptions)},n.getTypeUrl=function(i){return i===void 0&&(i="type.googleapis.com"),i+"/onnx.TensorShapeProto.Dimension"},n}(),e}(),r.TypeProto=function(){function e(t){if(t)for(var o=Object.keys(t),i=0;i<o.length;++i)t[o[i]]!=null&&(this[o[i]]=t[o[i]])}e.prototype.tensorType=null,e.prototype.sequenceType=null,e.prototype.mapType=null,e.prototype.optionalType=null,e.prototype.sparseTensorType=null,e.prototype.denotation="";var n;return Object.defineProperty(e.prototype,"value",{get:C.oneOfGetter(n=["tensorType","sequenceType","mapType","optionalType","sparseTensorType"]),set:C.oneOfSetter(n)}),e.create=function(o){return new e(o)},e.encode=function(o,i){return i||(i=gt.create()),o.tensorType!=null&&Object.hasOwnProperty.call(o,"tensorType")&&I.onnx.TypeProto.Tensor.encode(o.tensorType,i.uint32(10).fork()).ldelim(),o.sequenceType!=null&&Object.hasOwnProperty.call(o,"sequenceType")&&I.onnx.TypeProto.Sequence.encode(o.sequenceType,i.uint32(34).fork()).ldelim(),o.mapType!=null&&Object.hasOwnProperty.call(o,"mapType")&&I.onnx.TypeProto.Map.encode(o.mapType,i.uint32(42).fork()).ldelim(),o.denotation!=null&&Object.hasOwnProperty.call(o,"denotation")&&i.uint32(50).string(o.denotation),o.sparseTensorType!=null&&Object.hasOwnProperty.call(o,"sparseTensorType")&&I.onnx.TypeProto.SparseTensor.encode(o.sparseTensorType,i.uint32(66).fork()).ldelim(),o.optionalType!=null&&Object.hasOwnProperty.call(o,"optionalType")&&I.onnx.TypeProto.Optional.encode(o.optionalType,i.uint32(74).fork()).ldelim(),i},e.encodeDelimited=function(o,i){return this.encode(o,i).ldelim()},e.decode=function(o,i){o instanceof ee||(o=ee.create(o));for(var s=i===void 0?o.len:o.pos+i,a=new I.onnx.TypeProto;o.pos<s;){var u=o.uint32();switch(u>>>3){case 1:{a.tensorType=I.onnx.TypeProto.Tensor.decode(o,o.uint32());break}case 4:{a.sequenceType=I.onnx.TypeProto.Sequence.decode(o,o.uint32());break}case 5:{a.mapType=I.onnx.TypeProto.Map.decode(o,o.uint32());break}case 9:{a.optionalType=I.onnx.TypeProto.Optional.decode(o,o.uint32());break}case 8:{a.sparseTensorType=I.onnx.TypeProto.SparseTensor.decode(o,o.uint32());break}case 6:{a.denotation=o.string();break}default:o.skipType(u&7);break}}return a},e.decodeDelimited=function(o){return o instanceof ee||(o=new ee(o)),this.decode(o,o.uint32())},e.verify=function(o){if(typeof o!="object"||o===null)return"object expected";var i={};if(o.tensorType!=null&&o.hasOwnProperty("tensorType")){i.value=1;{var s=I.onnx.TypeProto.Tensor.verify(o.tensorType);if(s)return"tensorType."+s}}if(o.sequenceType!=null&&o.hasOwnProperty("sequenceType")){if(i.value===1)return"value: multiple values";i.value=1;{var s=I.onnx.TypeProto.Sequence.verify(o.sequenceType);if(s)return"sequenceType."+s}}if(o.mapType!=null&&o.hasOwnProperty("mapType")){if(i.value===1)return"value: multiple values";i.value=1;{var s=I.onnx.TypeProto.Map.verify(o.mapType);if(s)return"mapType."+s}}if(o.optionalType!=null&&o.hasOwnProperty("optionalType")){if(i.value===1)return"value: multiple values";i.value=1;{var s=I.onnx.TypeProto.Optional.verify(o.optionalType);if(s)return"optionalType."+s}}if(o.sparseTensorType!=null&&o.hasOwnProperty("sparseTensorType")){if(i.value===1)return"value: multiple values";i.value=1;{var s=I.onnx.TypeProto.SparseTensor.verify(o.sparseTensorType);if(s)return"sparseTensorType."+s}}return o.denotation!=null&&o.hasOwnProperty("denotation")&&!C.isString(o.denotation)?"denotation: string expected":null},e.fromObject=function(o){if(o instanceof I.onnx.TypeProto)return o;var i=new I.onnx.TypeProto;if(o.tensorType!=null){if(typeof o.tensorType!="object")throw TypeError(".onnx.TypeProto.tensorType: object expected");i.tensorType=I.onnx.TypeProto.Tensor.fromObject(o.tensorType)}if(o.sequenceType!=null){if(typeof o.sequenceType!="object")throw TypeError(".onnx.TypeProto.sequenceType: object expected");i.sequenceType=I.onnx.TypeProto.Sequence.fromObject(o.sequenceType)}if(o.mapType!=null){if(typeof o.mapType!="object")throw TypeError(".onnx.TypeProto.mapType: object expected");i.mapType=I.onnx.TypeProto.Map.fromObject(o.mapType)}if(o.optionalType!=null){if(typeof o.optionalType!="object")throw TypeError(".onnx.TypeProto.optionalType: object expected");i.optionalType=I.onnx.TypeProto.Optional.fromObject(o.optionalType)}if(o.sparseTensorType!=null){if(typeof o.sparseTensorType!="object")throw TypeError(".onnx.TypeProto.sparseTensorType: object expected");i.sparseTensorType=I.onnx.TypeProto.SparseTensor.fromObject(o.sparseTensorType)}return o.denotation!=null&&(i.denotation=String(o.denotation)),i},e.toObject=function(o,i){i||(i={});var s={};return i.defaults&&(s.denotation=""),o.tensorType!=null&&o.hasOwnProperty("tensorType")&&(s.tensorType=I.onnx.TypeProto.Tensor.toObject(o.tensorType,i),i.oneofs&&(s.value="tensorType")),o.sequenceType!=null&&o.hasOwnProperty("sequenceType")&&(s.sequenceType=I.onnx.TypeProto.Sequence.toObject(o.sequenceType,i),i.oneofs&&(s.value="sequenceType")),o.mapType!=null&&o.hasOwnProperty("mapType")&&(s.mapType=I.onnx.TypeProto.Map.toObject(o.mapType,i),i.oneofs&&(s.value="mapType")),o.denotation!=null&&o.hasOwnProperty("denotation")&&(s.denotation=o.denotation),o.sparseTensorType!=null&&o.hasOwnProperty("sparseTensorType")&&(s.sparseTensorType=I.onnx.TypeProto.SparseTensor.toObject(o.sparseTensorType,i),i.oneofs&&(s.value="sparseTensorType")),o.optionalType!=null&&o.hasOwnProperty("optionalType")&&(s.optionalType=I.onnx.TypeProto.Optional.toObject(o.optionalType,i),i.oneofs&&(s.value="optionalType")),s},e.prototype.toJSON=function(){return this.constructor.toObject(this,st.util.toJSONOptions)},e.getTypeUrl=function(o){return o===void 0&&(o="type.googleapis.com"),o+"/onnx.TypeProto"},e.Tensor=function(){function t(o){if(o)for(var i=Object.keys(o),s=0;s<i.length;++s)o[i[s]]!=null&&(this[i[s]]=o[i[s]])}return t.prototype.elemType=0,t.prototype.shape=null,t.create=function(i){return new t(i)},t.encode=function(i,s){return s||(s=gt.create()),i.elemType!=null&&Object.hasOwnProperty.call(i,"elemType")&&s.uint32(8).int32(i.elemType),i.shape!=null&&Object.hasOwnProperty.call(i,"shape")&&I.onnx.TensorShapeProto.encode(i.shape,s.uint32(18).fork()).ldelim(),s},t.encodeDelimited=function(i,s){return this.encode(i,s).ldelim()},t.decode=function(i,s){i instanceof ee||(i=ee.create(i));for(var a=s===void 0?i.len:i.pos+s,u=new I.onnx.TypeProto.Tensor;i.pos<a;){var l=i.uint32();switch(l>>>3){case 1:{u.elemType=i.int32();break}case 2:{u.shape=I.onnx.TensorShapeProto.decode(i,i.uint32());break}default:i.skipType(l&7);break}}return u},t.decodeDelimited=function(i){return i instanceof ee||(i=new ee(i)),this.decode(i,i.uint32())},t.verify=function(i){if(typeof i!="object"||i===null)return"object expected";if(i.elemType!=null&&i.hasOwnProperty("elemType")&&!C.isInteger(i.elemType))return"elemType: integer expected";if(i.shape!=null&&i.hasOwnProperty("shape")){var s=I.onnx.TensorShapeProto.verify(i.shape);if(s)return"shape."+s}return null},t.fromObject=function(i){if(i instanceof I.onnx.TypeProto.Tensor)return i;var s=new I.onnx.TypeProto.Tensor;if(i.elemType!=null&&(s.elemType=i.elemType|0),i.shape!=null){if(typeof i.shape!="object")throw TypeError(".onnx.TypeProto.Tensor.shape: object expected");s.shape=I.onnx.TensorShapeProto.fromObject(i.shape)}return s},t.toObject=function(i,s){s||(s={});var a={};return s.defaults&&(a.elemType=0,a.shape=null),i.elemType!=null&&i.hasOwnProperty("elemType")&&(a.elemType=i.elemType),i.shape!=null&&i.hasOwnProperty("shape")&&(a.shape=I.onnx.TensorShapeProto.toObject(i.shape,s)),a},t.prototype.toJSON=function(){return this.constructor.toObject(this,st.util.toJSONOptions)},t.getTypeUrl=function(i){return i===void 0&&(i="type.googleapis.com"),i+"/onnx.TypeProto.Tensor"},t}(),e.Sequence=function(){function t(o){if(o)for(var i=Object.keys(o),s=0;s<i.length;++s)o[i[s]]!=null&&(this[i[s]]=o[i[s]])}return t.prototype.elemType=null,t.create=function(i){return new t(i)},t.encode=function(i,s){return s||(s=gt.create()),i.elemType!=null&&Object.hasOwnProperty.call(i,"elemType")&&I.onnx.TypeProto.encode(i.elemType,s.uint32(10).fork()).ldelim(),s},t.encodeDelimited=function(i,s){return this.encode(i,s).ldelim()},t.decode=function(i,s){i instanceof ee||(i=ee.create(i));for(var a=s===void 0?i.len:i.pos+s,u=new I.onnx.TypeProto.Sequence;i.pos<a;){var l=i.uint32();switch(l>>>3){case 1:{u.elemType=I.onnx.TypeProto.decode(i,i.uint32());break}default:i.skipType(l&7);break}}return u},t.decodeDelimited=function(i){return i instanceof ee||(i=new ee(i)),this.decode(i,i.uint32())},t.verify=function(i){if(typeof i!="object"||i===null)return"object expected";if(i.elemType!=null&&i.hasOwnProperty("elemType")){var s=I.onnx.TypeProto.verify(i.elemType);if(s)return"elemType."+s}return null},t.fromObject=function(i){if(i instanceof I.onnx.TypeProto.Sequence)return i;var s=new I.onnx.TypeProto.Sequence;if(i.elemType!=null){if(typeof i.elemType!="object")throw TypeError(".onnx.TypeProto.Sequence.elemType: object expected");s.elemType=I.onnx.TypeProto.fromObject(i.elemType)}return s},t.toObject=function(i,s){s||(s={});var a={};return s.defaults&&(a.elemType=null),i.elemType!=null&&i.hasOwnProperty("elemType")&&(a.elemType=I.onnx.TypeProto.toObject(i.elemType,s)),a},t.prototype.toJSON=function(){return this.constructor.toObject(this,st.util.toJSONOptions)},t.getTypeUrl=function(i){return i===void 0&&(i="type.googleapis.com"),i+"/onnx.TypeProto.Sequence"},t}(),e.Map=function(){function t(o){if(o)for(var i=Object.keys(o),s=0;s<i.length;++s)o[i[s]]!=null&&(this[i[s]]=o[i[s]])}return t.prototype.keyType=0,t.prototype.valueType=null,t.create=function(i){return new t(i)},t.encode=function(i,s){return s||(s=gt.create()),i.keyType!=null&&Object.hasOwnProperty.call(i,"keyType")&&s.uint32(8).int32(i.keyType),i.valueType!=null&&Object.hasOwnProperty.call(i,"valueType")&&I.onnx.TypeProto.encode(i.valueType,s.uint32(18).fork()).ldelim(),s},t.encodeDelimited=function(i,s){return this.encode(i,s).ldelim()},t.decode=function(i,s){i instanceof ee||(i=ee.create(i));for(var a=s===void 0?i.len:i.pos+s,u=new I.onnx.TypeProto.Map;i.pos<a;){var l=i.uint32();switch(l>>>3){case 1:{u.keyType=i.int32();break}case 2:{u.valueType=I.onnx.TypeProto.decode(i,i.uint32());break}default:i.skipType(l&7);break}}return u},t.decodeDelimited=function(i){return i instanceof ee||(i=new ee(i)),this.decode(i,i.uint32())},t.verify=function(i){if(typeof i!="object"||i===null)return"object expected";if(i.keyType!=null&&i.hasOwnProperty("keyType")&&!C.isInteger(i.keyType))return"keyType: integer expected";if(i.valueType!=null&&i.hasOwnProperty("valueType")){var s=I.onnx.TypeProto.verify(i.valueType);if(s)return"valueType."+s}return null},t.fromObject=function(i){if(i instanceof I.onnx.TypeProto.Map)return i;var s=new I.onnx.TypeProto.Map;if(i.keyType!=null&&(s.keyType=i.keyType|0),i.valueType!=null){if(typeof i.valueType!="object")throw TypeError(".onnx.TypeProto.Map.valueType: object expected");s.valueType=I.onnx.TypeProto.fromObject(i.valueType)}return s},t.toObject=function(i,s){s||(s={});var a={};return s.defaults&&(a.keyType=0,a.valueType=null),i.keyType!=null&&i.hasOwnProperty("keyType")&&(a.keyType=i.keyType),i.valueType!=null&&i.hasOwnProperty("valueType")&&(a.valueType=I.onnx.TypeProto.toObject(i.valueType,s)),a},t.prototype.toJSON=function(){return this.constructor.toObject(this,st.util.toJSONOptions)},t.getTypeUrl=function(i){return i===void 0&&(i="type.googleapis.com"),i+"/onnx.TypeProto.Map"},t}(),e.Optional=function(){function t(o){if(o)for(var i=Object.keys(o),s=0;s<i.length;++s)o[i[s]]!=null&&(this[i[s]]=o[i[s]])}return t.prototype.elemType=null,t.create=function(i){return new t(i)},t.encode=function(i,s){return s||(s=gt.create()),i.elemType!=null&&Object.hasOwnProperty.call(i,"elemType")&&I.onnx.TypeProto.encode(i.elemType,s.uint32(10).fork()).ldelim(),s},t.encodeDelimited=function(i,s){return this.encode(i,s).ldelim()},t.decode=function(i,s){i instanceof ee||(i=ee.create(i));for(var a=s===void 0?i.len:i.pos+s,u=new I.onnx.TypeProto.Optional;i.pos<a;){var l=i.uint32();switch(l>>>3){case 1:{u.elemType=I.onnx.TypeProto.decode(i,i.uint32());break}default:i.skipType(l&7);break}}return u},t.decodeDelimited=function(i){return i instanceof ee||(i=new ee(i)),this.decode(i,i.uint32())},t.verify=function(i){if(typeof i!="object"||i===null)return"object expected";if(i.elemType!=null&&i.hasOwnProperty("elemType")){var s=I.onnx.TypeProto.verify(i.elemType);if(s)return"elemType."+s}return null},t.fromObject=function(i){if(i instanceof I.onnx.TypeProto.Optional)return i;var s=new I.onnx.TypeProto.Optional;if(i.elemType!=null){if(typeof i.elemType!="object")throw TypeError(".onnx.TypeProto.Optional.elemType: object expected");s.elemType=I.onnx.TypeProto.fromObject(i.elemType)}return s},t.toObject=function(i,s){s||(s={});var a={};return s.defaults&&(a.elemType=null),i.elemType!=null&&i.hasOwnProperty("elemType")&&(a.elemType=I.onnx.TypeProto.toObject(i.elemType,s)),a},t.prototype.toJSON=function(){return this.constructor.toObject(this,st.util.toJSONOptions)},t.getTypeUrl=function(i){return i===void 0&&(i="type.googleapis.com"),i+"/onnx.TypeProto.Optional"},t}(),e.SparseTensor=function(){function t(o){if(o)for(var i=Object.keys(o),s=0;s<i.length;++s)o[i[s]]!=null&&(this[i[s]]=o[i[s]])}return t.prototype.elemType=0,t.prototype.shape=null,t.create=function(i){return new t(i)},t.encode=function(i,s){return s||(s=gt.create()),i.elemType!=null&&Object.hasOwnProperty.call(i,"elemType")&&s.uint32(8).int32(i.elemType),i.shape!=null&&Object.hasOwnProperty.call(i,"shape")&&I.onnx.TensorShapeProto.encode(i.shape,s.uint32(18).fork()).ldelim(),s},t.encodeDelimited=function(i,s){return this.encode(i,s).ldelim()},t.decode=function(i,s){i instanceof ee||(i=ee.create(i));for(var a=s===void 0?i.len:i.pos+s,u=new I.onnx.TypeProto.SparseTensor;i.pos<a;){var l=i.uint32();switch(l>>>3){case 1:{u.elemType=i.int32();break}case 2:{u.shape=I.onnx.TensorShapeProto.decode(i,i.uint32());break}default:i.skipType(l&7);break}}return u},t.decodeDelimited=function(i){return i instanceof ee||(i=new ee(i)),this.decode(i,i.uint32())},t.verify=function(i){if(typeof i!="object"||i===null)return"object expected";if(i.elemType!=null&&i.hasOwnProperty("elemType")&&!C.isInteger(i.elemType))return"elemType: integer expected";if(i.shape!=null&&i.hasOwnProperty("shape")){var s=I.onnx.TensorShapeProto.verify(i.shape);if(s)return"shape."+s}return null},t.fromObject=function(i){if(i instanceof I.onnx.TypeProto.SparseTensor)return i;var s=new I.onnx.TypeProto.SparseTensor;if(i.elemType!=null&&(s.elemType=i.elemType|0),i.shape!=null){if(typeof i.shape!="object")throw TypeError(".onnx.TypeProto.SparseTensor.shape: object expected");s.shape=I.onnx.TensorShapeProto.fromObject(i.shape)}return s},t.toObject=function(i,s){s||(s={});var a={};return s.defaults&&(a.elemType=0,a.shape=null),i.elemType!=null&&i.hasOwnProperty("elemType")&&(a.elemType=i.elemType),i.shape!=null&&i.hasOwnProperty("shape")&&(a.shape=I.onnx.TensorShapeProto.toObject(i.shape,s)),a},t.prototype.toJSON=function(){return this.constructor.toObject(this,st.util.toJSONOptions)},t.getTypeUrl=function(i){return i===void 0&&(i="type.googleapis.com"),i+"/onnx.TypeProto.SparseTensor"},t}(),e}(),r.OperatorSetIdProto=function(){function e(n){if(n)for(var t=Object.keys(n),o=0;o<t.length;++o)n[t[o]]!=null&&(this[t[o]]=n[t[o]])}return e.prototype.domain="",e.prototype.version=C.Long?C.Long.fromBits(0,0,!1):0,e.create=function(t){return new e(t)},e.encode=function(t,o){return o||(o=gt.create()),t.domain!=null&&Object.hasOwnProperty.call(t,"domain")&&o.uint32(10).string(t.domain),t.version!=null&&Object.hasOwnProperty.call(t,"version")&&o.uint32(16).int64(t.version),o},e.encodeDelimited=function(t,o){return this.encode(t,o).ldelim()},e.decode=function(t,o){t instanceof ee||(t=ee.create(t));for(var i=o===void 0?t.len:t.pos+o,s=new I.onnx.OperatorSetIdProto;t.pos<i;){var a=t.uint32();switch(a>>>3){case 1:{s.domain=t.string();break}case 2:{s.version=t.int64();break}default:t.skipType(a&7);break}}return s},e.decodeDelimited=function(t){return t instanceof ee||(t=new ee(t)),this.decode(t,t.uint32())},e.verify=function(t){return typeof t!="object"||t===null?"object expected":t.domain!=null&&t.hasOwnProperty("domain")&&!C.isString(t.domain)?"domain: string expected":t.version!=null&&t.hasOwnProperty("version")&&!C.isInteger(t.version)&&!(t.version&&C.isInteger(t.version.low)&&C.isInteger(t.version.high))?"version: integer|Long expected":null},e.fromObject=function(t){if(t instanceof I.onnx.OperatorSetIdProto)return t;var o=new I.onnx.OperatorSetIdProto;return t.domain!=null&&(o.domain=String(t.domain)),t.version!=null&&(C.Long?(o.version=C.Long.fromValue(t.version)).unsigned=!1:typeof t.version=="string"?o.version=parseInt(t.version,10):typeof t.version=="number"?o.version=t.version:typeof t.version=="object"&&(o.version=new C.LongBits(t.version.low>>>0,t.version.high>>>0).toNumber())),o},e.toObject=function(t,o){o||(o={});var i={};if(o.defaults)if(i.domain="",C.Long){var s=new C.Long(0,0,!1);i.version=o.longs===String?s.toString():o.longs===Number?s.toNumber():s}else i.version=o.longs===String?"0":0;return t.domain!=null&&t.hasOwnProperty("domain")&&(i.domain=t.domain),t.version!=null&&t.hasOwnProperty("version")&&(typeof t.version=="number"?i.version=o.longs===String?String(t.version):t.version:i.version=o.longs===String?C.Long.prototype.toString.call(t.version):o.longs===Number?new C.LongBits(t.version.low>>>0,t.version.high>>>0).toNumber():t.version),i},e.prototype.toJSON=function(){return this.constructor.toObject(this,st.util.toJSONOptions)},e.getTypeUrl=function(t){return t===void 0&&(t="type.googleapis.com"),t+"/onnx.OperatorSetIdProto"},e}(),r.OperatorStatus=function(){var e={},n=Object.create(e);return n[e[0]="EXPERIMENTAL"]=0,n[e[1]="STABLE"]=1,n}(),r.FunctionProto=function(){function e(n){if(this.input=[],this.output=[],this.attribute=[],this.attributeProto=[],this.node=[],this.opsetImport=[],n)for(var t=Object.keys(n),o=0;o<t.length;++o)n[t[o]]!=null&&(this[t[o]]=n[t[o]])}return e.prototype.name="",e.prototype.input=C.emptyArray,e.prototype.output=C.emptyArray,e.prototype.attribute=C.emptyArray,e.prototype.attributeProto=C.emptyArray,e.prototype.node=C.emptyArray,e.prototype.docString="",e.prototype.opsetImport=C.emptyArray,e.prototype.domain="",e.create=function(t){return new e(t)},e.encode=function(t,o){if(o||(o=gt.create()),t.name!=null&&Object.hasOwnProperty.call(t,"name")&&o.uint32(10).string(t.name),t.input!=null&&t.input.length)for(var i=0;i<t.input.length;++i)o.uint32(34).string(t.input[i]);if(t.output!=null&&t.output.length)for(var i=0;i<t.output.length;++i)o.uint32(42).string(t.output[i]);if(t.attribute!=null&&t.attribute.length)for(var i=0;i<t.attribute.length;++i)o.uint32(50).string(t.attribute[i]);if(t.node!=null&&t.node.length)for(var i=0;i<t.node.length;++i)I.onnx.NodeProto.encode(t.node[i],o.uint32(58).fork()).ldelim();if(t.docString!=null&&Object.hasOwnProperty.call(t,"docString")&&o.uint32(66).string(t.docString),t.opsetImport!=null&&t.opsetImport.length)for(var i=0;i<t.opsetImport.length;++i)I.onnx.OperatorSetIdProto.encode(t.opsetImport[i],o.uint32(74).fork()).ldelim();if(t.domain!=null&&Object.hasOwnProperty.call(t,"domain")&&o.uint32(82).string(t.domain),t.attributeProto!=null&&t.attributeProto.length)for(var i=0;i<t.attributeProto.length;++i)I.onnx.AttributeProto.encode(t.attributeProto[i],o.uint32(90).fork()).ldelim();return o},e.encodeDelimited=function(t,o){return this.encode(t,o).ldelim()},e.decode=function(t,o){t instanceof ee||(t=ee.create(t));for(var i=o===void 0?t.len:t.pos+o,s=new I.onnx.FunctionProto;t.pos<i;){var a=t.uint32();switch(a>>>3){case 1:{s.name=t.string();break}case 4:{s.input&&s.input.length||(s.input=[]),s.input.push(t.string());break}case 5:{s.output&&s.output.length||(s.output=[]),s.output.push(t.string());break}case 6:{s.attribute&&s.attribute.length||(s.attribute=[]),s.attribute.push(t.string());break}case 11:{s.attributeProto&&s.attributeProto.length||(s.attributeProto=[]),s.attributeProto.push(I.onnx.AttributeProto.decode(t,t.uint32()));break}case 7:{s.node&&s.node.length||(s.node=[]),s.node.push(I.onnx.NodeProto.decode(t,t.uint32()));break}case 8:{s.docString=t.string();break}case 9:{s.opsetImport&&s.opsetImport.length||(s.opsetImport=[]),s.opsetImport.push(I.onnx.OperatorSetIdProto.decode(t,t.uint32()));break}case 10:{s.domain=t.string();break}default:t.skipType(a&7);break}}return s},e.decodeDelimited=function(t){return t instanceof ee||(t=new ee(t)),this.decode(t,t.uint32())},e.verify=function(t){if(typeof t!="object"||t===null)return"object expected";if(t.name!=null&&t.hasOwnProperty("name")&&!C.isString(t.name))return"name: string expected";if(t.input!=null&&t.hasOwnProperty("input")){if(!Array.isArray(t.input))return"input: array expected";for(var o=0;o<t.input.length;++o)if(!C.isString(t.input[o]))return"input: string[] expected"}if(t.output!=null&&t.hasOwnProperty("output")){if(!Array.isArray(t.output))return"output: array expected";for(var o=0;o<t.output.length;++o)if(!C.isString(t.output[o]))return"output: string[] expected"}if(t.attribute!=null&&t.hasOwnProperty("attribute")){if(!Array.isArray(t.attribute))return"attribute: array expected";for(var o=0;o<t.attribute.length;++o)if(!C.isString(t.attribute[o]))return"attribute: string[] expected"}if(t.attributeProto!=null&&t.hasOwnProperty("attributeProto")){if(!Array.isArray(t.attributeProto))return"attributeProto: array expected";for(var o=0;o<t.attributeProto.length;++o){var i=I.onnx.AttributeProto.verify(t.attributeProto[o]);if(i)return"attributeProto."+i}}if(t.node!=null&&t.hasOwnProperty("node")){if(!Array.isArray(t.node))return"node: array expected";for(var o=0;o<t.node.length;++o){var i=I.onnx.NodeProto.verify(t.node[o]);if(i)return"node."+i}}if(t.docString!=null&&t.hasOwnProperty("docString")&&!C.isString(t.docString))return"docString: string expected";if(t.opsetImport!=null&&t.hasOwnProperty("opsetImport")){if(!Array.isArray(t.opsetImport))return"opsetImport: array expected";for(var o=0;o<t.opsetImport.length;++o){var i=I.onnx.OperatorSetIdProto.verify(t.opsetImport[o]);if(i)return"opsetImport."+i}}return t.domain!=null&&t.hasOwnProperty("domain")&&!C.isString(t.domain)?"domain: string expected":null},e.fromObject=function(t){if(t instanceof I.onnx.FunctionProto)return t;var o=new I.onnx.FunctionProto;if(t.name!=null&&(o.name=String(t.name)),t.input){if(!Array.isArray(t.input))throw TypeError(".onnx.FunctionProto.input: array expected");o.input=[];for(var i=0;i<t.input.length;++i)o.input[i]=String(t.input[i])}if(t.output){if(!Array.isArray(t.output))throw TypeError(".onnx.FunctionProto.output: array expected");o.output=[];for(var i=0;i<t.output.length;++i)o.output[i]=String(t.output[i])}if(t.attribute){if(!Array.isArray(t.attribute))throw TypeError(".onnx.FunctionProto.attribute: array expected");o.attribute=[];for(var i=0;i<t.attribute.length;++i)o.attribute[i]=String(t.attribute[i])}if(t.attributeProto){if(!Array.isArray(t.attributeProto))throw TypeError(".onnx.FunctionProto.attributeProto: array expected");o.attributeProto=[];for(var i=0;i<t.attributeProto.length;++i){if(typeof t.attributeProto[i]!="object")throw TypeError(".onnx.FunctionProto.attributeProto: object expected");o.attributeProto[i]=I.onnx.AttributeProto.fromObject(t.attributeProto[i])}}if(t.node){if(!Array.isArray(t.node))throw TypeError(".onnx.FunctionProto.node: array expected");o.node=[];for(var i=0;i<t.node.length;++i){if(typeof t.node[i]!="object")throw TypeError(".onnx.FunctionProto.node: object expected");o.node[i]=I.onnx.NodeProto.fromObject(t.node[i])}}if(t.docString!=null&&(o.docString=String(t.docString)),t.opsetImport){if(!Array.isArray(t.opsetImport))throw TypeError(".onnx.FunctionProto.opsetImport: array expected");o.opsetImport=[];for(var i=0;i<t.opsetImport.length;++i){if(typeof t.opsetImport[i]!="object")throw TypeError(".onnx.FunctionProto.opsetImport: object expected");o.opsetImport[i]=I.onnx.OperatorSetIdProto.fromObject(t.opsetImport[i])}}return t.domain!=null&&(o.domain=String(t.domain)),o},e.toObject=function(t,o){o||(o={});var i={};if((o.arrays||o.defaults)&&(i.input=[],i.output=[],i.attribute=[],i.node=[],i.opsetImport=[],i.attributeProto=[]),o.defaults&&(i.name="",i.docString="",i.domain=""),t.name!=null&&t.hasOwnProperty("name")&&(i.name=t.name),t.input&&t.input.length){i.input=[];for(var s=0;s<t.input.length;++s)i.input[s]=t.input[s]}if(t.output&&t.output.length){i.output=[];for(var s=0;s<t.output.length;++s)i.output[s]=t.output[s]}if(t.attribute&&t.attribute.length){i.attribute=[];for(var s=0;s<t.attribute.length;++s)i.attribute[s]=t.attribute[s]}if(t.node&&t.node.length){i.node=[];for(var s=0;s<t.node.length;++s)i.node[s]=I.onnx.NodeProto.toObject(t.node[s],o)}if(t.docString!=null&&t.hasOwnProperty("docString")&&(i.docString=t.docString),t.opsetImport&&t.opsetImport.length){i.opsetImport=[];for(var s=0;s<t.opsetImport.length;++s)i.opsetImport[s]=I.onnx.OperatorSetIdProto.toObject(t.opsetImport[s],o)}if(t.domain!=null&&t.hasOwnProperty("domain")&&(i.domain=t.domain),t.attributeProto&&t.attributeProto.length){i.attributeProto=[];for(var s=0;s<t.attributeProto.length;++s)i.attributeProto[s]=I.onnx.AttributeProto.toObject(t.attributeProto[s],o)}return i},e.prototype.toJSON=function(){return this.constructor.toObject(this,st.util.toJSONOptions)},e.getTypeUrl=function(t){return t===void 0&&(t="type.googleapis.com"),t+"/onnx.FunctionProto"},e}(),r}();Hd.exports=I});function Wn(r,e){if(!r)throw new Error(typeof e=="string"?e:e())}function Bo(r){return new TextDecoder().decode(r)}var ut,hn,Os,Mt,Ui,Et,Wt,ie,Do,mn,gn,bn,Ke=B(()=>{"use strict";Li();hs();ut=Nn(Un());yn();hn=class{static arraysEqual(e,n){if(e.length!==n.length)return!1;for(let t=0;t<e.length;t++)if(e[t]!==n[t])return!1;return!0}},Os=class{static preprocessInputShapes(e,n){let t=e.length===1?[1,e[0]]:e,o=n.length===1?[n[0],1]:n;return[t,o]}static postprocessOutputShape(e,n,t){n===1&&e.splice(e.length-2,1),t===1&&e.pop()}static calcMatMulShape(e,n){return e[1]!==n[0]?void 0:[e[0],n[1]]}},Mt=class r{static calcShape(e,n,t=!1){let o=e.length,i=n.length;if(o===0)return n;if(i===0)return e;let s=Math.max(e.length,n.length),a=new Array(s);if(t){if(o<2||i<2)return;let u=Os.calcMatMulShape([e[o-2],e[o-1]],[n[i-2],n[i-1]]);if(u===void 0)return;[a[s-2],a[s-1]]=u}for(let u=t?3:1;u<=s;u++){let l=o-u<0?1:e[o-u],d=i-u<0?1:n[i-u];if(l!==d&&l>1&&d>1)return;a[s-u]=Math.max(l,d)}return a}static index(e,n){let t=new Array(n.length);return r.fillIndex(e,n,t),t}static fillIndex(e,n,t){let o=e.length-n.length;for(let i=0;i<n.length;i++)t[i]=e[o+i]%n[i]}static calc(e,n,t,o,i){let s=r.calcShape(e.dims,n.dims);if(s){if(o&&!ie.areEqual(s,e.dims))return;let a=ie.size(s),u=o?e:new wt(s,i||e.type);if(s.length===0)u.set([],t(e.get([]),n.get([])));else{let l=new Array(s.length),d=new Array(e.dims.length),p=new Array(n.dims.length),h=0,g=0,b=!1,v=!1;e.dims.length===0&&(h=e.get([]),b=!0),n.dims.length===0&&(g=n.get([]),v=!0);let $;for(let T=0;T<a;T++){$=T;for(let x=s.length-1;x>=0;x--)l[x]=$%s[x],$=Math.floor($/s[x]);b||(r.fillIndex(l,e.dims,d),h=e.get(d)),v||(r.fillIndex(l,n.dims,p),g=n.get(p)),u.set(l,t(h,g))}}return u}}static isValidBroadcast(e,n){let t=e.length,o=n.length;if(t>o)return!1;for(let i=1;i<=t;i++)if(e[t-i]!==1&&e[t-i]!==n[o-i])return!1;return!0}static getBroadcastDims(e,n){let t=e.length,o=[];for(let i=0;i<t;i++){let s=t-1-i,a=e[s]||1;(n[n.length-1-i]||1)>1&&a===1&&o.unshift(s)}return o}},Ui=class{static getShapeOfGemmResult(e,n,t,o,i){if(e.length!==2||t.length!==2)throw new Error("shape need to be of size 2");let s,a,u;n?(s=e[1],a=e[0]):(s=e[0],a=e[1]);let l=-1;if(o?(u=t[0],l=1):(u=t[1],l=0),t[l]!==a)throw new Error("dimension mismatch");if(s<=0||u<=0||a<=0)throw new Error("invalid shape specified");if(i&&!Mt.isValidBroadcast(i,[s,u]))throw new Error("gemm: invalid bias shape for broadcast");return[s,u,a]}},Et=class r{static tensorDataTypeFromProto(e){switch(e){case ut.onnx.TensorProto.DataType.INT8:return"int8";case ut.onnx.TensorProto.DataType.UINT8:return"uint8";case ut.onnx.TensorProto.DataType.BOOL:return"bool";case ut.onnx.TensorProto.DataType.INT16:return"int16";case ut.onnx.TensorProto.DataType.UINT16:return"uint16";case ut.onnx.TensorProto.DataType.INT32:return"int32";case ut.onnx.TensorProto.DataType.UINT32:return"uint32";case ut.onnx.TensorProto.DataType.FLOAT:return"float32";case ut.onnx.TensorProto.DataType.DOUBLE:return"float64";case ut.onnx.TensorProto.DataType.STRING:return"string";case ut.onnx.TensorProto.DataType.INT64:return"int32";case ut.onnx.TensorProto.DataType.UINT64:return"uint32";default:throw new Error(`unsupported data type: ${ut.onnx.TensorProto.DataType[e]}`)}}static tensorDataTypeStringToEnum(e){switch(e){case"int8":return ut.onnx.TensorProto.DataType.INT8;case"uint8":return ut.onnx.TensorProto.DataType.UINT8;case"bool":return ut.onnx.TensorProto.DataType.BOOL;case"int16":return ut.onnx.TensorProto.DataType.INT16;case"uint16":return ut.onnx.TensorProto.DataType.UINT16;case"int32":return ut.onnx.TensorProto.DataType.INT32;case"uint32":return ut.onnx.TensorProto.DataType.UINT32;case"float32":return ut.onnx.TensorProto.DataType.FLOAT;case"float64":return ut.onnx.TensorProto.DataType.DOUBLE;case"string":return ut.onnx.TensorProto.DataType.STRING;case"int64":return ut.onnx.TensorProto.DataType.INT64;case"uint64":return ut.onnx.TensorProto.DataType.UINT64;default:throw new Error(`unsupported data type: ${e}`)}}static tensorDimsFromProto(e){return e.map(n=>Nr.isLong(n)?n.toNumber():n)}static tensorValueTypeFromProto(e){return{tensorType:r.tensorDataTypeFromProto(e.elemType),shape:{dims:r.tensorDimsFromProto(e.shape.dim.map(n=>n.dimValue))}}}static tensorDimsFromORTFormat(e){let n=[];for(let t=0;t<e.dimsLength();t++)n.push(Wt.longToNumber(e.dims(t)));return n}static tensorAttributesFromORTFormat(e){let n=[];for(let t=0;t<e.attributesLength();t++)n.push(e.attributes(t));return n}},Wt=class{static longToNumber(e,n){return Nr.isLong(e)?e.toNumber():e instanceof D.Long?Nr.fromValue({low:e.low,high:e.high,unsigned:n??!1}).toNumber():e}static isLong(e){return Nr.isLong(e)||e instanceof D.Long}},ie=class r{static size(e){return r.getSizeFromDimensionRange(e,0,e.length)}static sizeFromDimension(e,n){if(n<0||n>e.length)throw new Error(`invalid dimension of ${n} for sizeFromDimension as Tensor has ${e.length} dimensions.`);return r.getSizeFromDimensionRange(e,n,e.length)}static sizeToDimension(e,n){if(n<0||n>e.length)throw new Error(`invalid dimension of ${n} for sizeToDimension as Tensor has ${e.length} dimensions.`);return r.getSizeFromDimensionRange(e,0,n)}static getSizeFromDimensionRange(e,n,t){let o=1;for(let i=n;i<t;i++){if(e[i]<=0)throw new Error("cannot get valid size from specified dimension range. Most likely the range contains 0 or negative values in them.");o*=e[i]}return o}static computeStrides(e){let n=e.length;if(n===0)return[];if(n===1)return[1];let t=new Array(n);t[n-1]=1,t[n-2]=e[n-1];for(let o=n-3;o>=0;--o)t[o]=t[o+1]*e[o+1];return t}static transpose(e){return e.slice().reverse()}static indicesToOffset(e,n,t){t===void 0&&(t=e.length);let o=0;for(let i=0;i<t;++i)o+=n[i]*e[i];return o}static offsetToIndices(e,n){let t=n.length;if(t===0)return[];if(t===1)return[e*n[0]];let o=new Array(n.length);for(let i=0;i<o.length-1;++i)o[i]=Math.floor(e/n[i]),e-=o[i]*n[i];return o[o.length-1]=e,o}static normalizeAxis(e,n){if(e<-n&&e>=n)throw new Error("unsupported axis for this operation.");return e<0?e+n:e}static normalizeAxes(e,n){return e.map(t=>this.normalizeAxis(t,n))}static incrementIndex(e,n,t){if(n.length===0||e.length===0)throw new Error("Index incrementing unsupported for scalar Tensor");if(t===void 0)t=n.length;else if(t<=0||t>n.length)throw new Error("Incorrect axis to increment on");for(let o=t-1;o>=0&&(e[o]++,!(e[o]<n[o]));--o)e[o]=0}static calculateReshapedDims(e,n){if(n.length===0){if(e.length===0||r.size(e)===1)return[];throw new Error("cannot reshape to a scalar Tensor")}let t=n.length,o=new Array(t),i=-1,s=1;for(let u=0;u<t;u++){if(n[u]<-1)throw new Error("a dimension in shape hints cannot be less than -1");if(n[u]===-1){if(i!==-1)throw new Error("at most one dimension in shape hints can be -1");i=u}else{if(n[u]===0){if(u>=e.length)throw new Error("the dimension with value zero exceeds the dimension size of the input tensor");o[u]=e[u]}else o[u]=n[u];s*=o[u]}}let a=r.size(e);if(i!==-1){if(a%s!==0)throw new Error(`the input tensor cannot be reshaped to the requested shape. Input shape: [${e}] Output shape: [${n}]`);o[i]=a/s}else if(s!==a)throw new Error("reshapedDims and originalDims don't have matching sizes");return o}static sortBasedOnPerm(e,n){return n?n.map(t=>e[t]):e.slice().reverse()}static padShape(e,n){let t=e.length;return e.map((o,i)=>o+n[i]+n[i+t])}static areEqual(e,n){return e.length!==n.length?!1:e.every((t,o)=>t===n[o])}static validateDimsAndCalcSize(e){if(e.length>6)throw new TypeError("Only rank 0 to 6 is supported for tensor shape.");let n=1;for(let t of e){if(!Number.isInteger(t))throw new TypeError(`Invalid shape: ${t} is not an integer`);if(t<0||t>2147483647)throw new TypeError(`Invalid shape: length ${t} is not allowed`);n*=t}return n}static flattenShape(e,n){n<0&&(n+=e.length);let t=e.reduce((s,a)=>s*a,1),o=e.slice(n).reduce((s,a)=>s*a,1);return[t/o,o]}static squeezeShape(e,n){let t=new Array;n=r.normalizeAxes(n,e.length);for(let o=0;o<e.length;o++){let i=n.indexOf(o)>=0;if(i&&e[o]!==1)throw new Error("squeeze an axis of size different than 1");(n.length===0&&e[o]>1||n.length>0&&!i)&&t.push(e[o])}return t}static unsqueezeShape(e,n){let t=new Array(e.length+n.length);t.fill(0);for(let i=0;i<n.length;i++){let s=r.normalizeAxis(n[i],t.length);if(s>=t.length)throw new Error("'axes' has an out of range axis");if(t[s]!==0)throw new Error("'axes' has a duplicate axis");t[s]=1}let o=0;for(let i=0;i<t.length;i++)t[i]===0&&(t[i]=e[o++]);if(o!==e.length)throw new Error("the unsqueezed dimension could not be established");return t}},Do=class r{static splitShape(e,n,t,o){if(t.length===0){if(!o)throw new Error("need to know number of outputs when the 'split' attribute is not specified");r.determineSplit(e[n],o,t)}let i=[],s=[0];for(let a=0;a<t.length;++a){a!==0&&s.push(s[a-1]+t[a-1]);let u=e.slice();u[n]=t[a],i.push(u)}return[i,s]}static determineSplit(e,n,t){if(e%n!==0)throw new Error("cannot split tensor to equal sized parts");for(let o=0;o<n;++o)t.push(e/n)}},mn=class r{static adjustPoolAttributes(e,n,t,o,i,s){if(!e&&t.length!==n.length-2)throw new Error("length of specified kernel shapes should be 2 less than length of input dimensions");if(e)for(let a=0;a<n.length-2;a++)a>=t.length?t.push(n[a+2]):t[a]=n[a+2];for(let a=0;a<t.length;a++)if(a<o.length){if(o[a]<0)throw new Error("strides should be greater than or equal to 1")}else o.push(1);for(let a=0;a<t.length;a++)if(a<i.length){if(i[a]<0)throw new Error("dilations should be greater than or equal to 1")}else i.push(1);for(let a=0;a<t.length*2;a++)if(a<s.length){if(s[a]<0)throw new Error("pad should be greater than or equal to 1")}else s.push(0);for(let a=0;a<t.length;a++){if(t[a]<=0)throw new Error("kernel shapes need to be greater than 0");if(s[a]>=t[a]||s[a+t.length]>=t[a])throw new Error("pads should be smaller than kernel")}}static adjustPadsBasedOnAutoPad(e,n,t,o,i,s){if(s){if(i.length!==2*(e.length-2))throw new Error("length of pads should be twice the length of data dimensions");if(n.length!==e.length-2)throw new Error("length of strides should be the length of data dimensions");if(o.length!==e.length-2)throw new Error("length of kernel shapes should be the length of data dimensions");for(let a=0;a<e.length-2;a++)r.adjustPadAndReturnShape(e[a+2],n[a],t[a],o[a],i,a,a+e.length-2,s)}}static computePoolOutputShape(e,n,t,o,i,s,a){if(n.length<=0)throw new Error("input shape must be of size greater than 0");let u=[n[0],n[1]];return r.computeShapeHelper(e,n,u,t,o,i,s,a),u}static computeConvOutputShape(e,n,t,o,i,s,a){if(e.length<=0||n.length<=0)throw new Error("invalid input tensor dims or invalid filter tensor dims");let u=[e[0],n[0]];return r.computeShapeHelper(!1,e,u,t,o,i,s,a),u}static computeShapeHelper(e,n,t,o,i,s,a,u){if(e)for(let l=0;l<n.length-2;l++)t.push(1);else for(let l=0;l<n.length-2;l++)t.push(r.adjustPadAndReturnShape(n[l+2],o[l],i[l],s[l],a,l,l+n.length-2,u))}static adjustPadAndReturnShape(e,n,t,o,i,s,a,u){let l=t*(o-1)+1;if(u&&u!=="NOTSET")switch(u){case"VALID":return i[s]=0,i[a]=0,Math.floor((e-l)/n+1);case"SAME_LOWER":case"SAME_UPPER":if(t!==1)throw new Error("Dilation not supported for SAME_UPPER or SAME_LOWER");{let p=((e+n-1)/n-1)*n+o-e;return i[s]=Math.floor(u==="SAME_LOWER"?(p+1)/2:p/2),i[a]=p-i[s],Math.floor((e+p-o)/n+1)}default:throw new Error("Unsupported AutoPad type")}else return Math.floor((e+i[s]+i[a]-l)/n+1)}},gn=-34028234663852886e22,bn=34028234663852886e22});function w0(r){switch(r){case"bool":case"int8":case"uint8":return 1;case"int16":case"uint16":return 2;case"int32":case"uint32":case"float32":return 4;case"float64":return 8;default:throw new Error(`cannot calculate sizeof() on type ${r}`)}}function qd(r){switch(r){case Pe.onnx.TensorProto.DataType.UINT8:case Pe.onnx.TensorProto.DataType.INT8:case Pe.onnx.TensorProto.DataType.BOOL:return 1;case Pe.onnx.TensorProto.DataType.UINT16:case Pe.onnx.TensorProto.DataType.INT16:return 2;case Pe.onnx.TensorProto.DataType.FLOAT:case Pe.onnx.TensorProto.DataType.INT32:case Pe.onnx.TensorProto.DataType.UINT32:return 4;case Pe.onnx.TensorProto.DataType.INT64:case Pe.onnx.TensorProto.DataType.DOUBLE:case Pe.onnx.TensorProto.DataType.UINT64:return 8;default:throw new Error(`cannot calculate sizeof() on type ${Pe.onnx.TensorProto.DataType[r]}`)}}function x0(r,e){return new(Yd(e))(r)}function Yd(r){switch(r){case"bool":case"uint8":return Uint8Array;case"int8":return Int8Array;case"int16":return Int16Array;case"uint16":return Uint16Array;case"int32":return Int32Array;case"uint32":return Uint32Array;case"int64":return BigInt64Array;case"float32":return Float32Array;case"float64":return Float64Array;default:throw new Error("unspecified error")}}function Cs(r,e){if(e===Pe.onnx.TensorProto.DataType.INT64||e===Es.TensorDataType.INT64){if(r.greaterThanOrEqual(2147483648)||r.lessThan(-2147483648))throw new TypeError("int64 is not supported")}else if(e===Pe.onnx.TensorProto.DataType.UINT32||e===Es.TensorDataType.UINT32||e===Pe.onnx.TensorProto.DataType.UINT64||e===Es.TensorDataType.UINT64){if(r.greaterThanOrEqual(4294967296)||r.lessThan(0))throw new TypeError("uint64 is not supported")}else throw new TypeError(`not a LONG type: ${Pe.onnx.TensorProto.DataType[e]}`);return r.toNumber()}function jd(r,e,n){switch(e){case Pe.onnx.TensorProto.DataType.BOOL:case Pe.onnx.TensorProto.DataType.UINT8:return r.getUint8(n);case Pe.onnx.TensorProto.DataType.INT8:return r.getInt8(n);case Pe.onnx.TensorProto.DataType.UINT16:return r.getUint16(n,!0);case Pe.onnx.TensorProto.DataType.INT16:return r.getInt16(n,!0);case Pe.onnx.TensorProto.DataType.FLOAT:return r.getFloat32(n,!0);case Pe.onnx.TensorProto.DataType.INT32:return r.getInt32(n,!0);case Pe.onnx.TensorProto.DataType.UINT32:return r.getUint32(n,!0);case Pe.onnx.TensorProto.DataType.INT64:return Cs(Nr.fromBits(r.getUint32(n,!0),r.getUint32(n+4,!0),!1),e);case Pe.onnx.TensorProto.DataType.DOUBLE:return r.getFloat64(n,!0);case Pe.onnx.TensorProto.DataType.UINT64:return Cs(Nr.fromBits(r.getUint32(n,!0),r.getUint32(n+4,!0),!0),e);default:throw new Error(`cannot read from DataView for type ${Pe.onnx.TensorProto.DataType[e]}`)}}var Kd,Pe,Es,wt,yn=B(()=>{"use strict";Kd=Nn(Ml());hs();Eo();Pe=Nn(Un());Ke();Es=le.experimental.fbs,wt=class r{constructor(e,n,t,o,i,s=Kd.Guid.create()){this.dims=e;this.type=n;this.dataProvider=t;this.asyncDataProvider=o;this.cache=i;this.dataId=s;this.size=ie.validateDimsAndCalcSize(e);let a=this.size,u=t===void 0&&o===void 0&&i===void 0;if(i!==void 0&&i.length!==a)throw new RangeError("Input dims doesn't match data length.");if(n==="string"){if(i!==void 0&&(!Array.isArray(i)||!i.every(l=>typeof l=="string")))throw new TypeError("cache should be a string array");u&&(this.cache=new Array(a))}else{if(i!==void 0){let l=Yd(n);if(!(i instanceof l))throw new TypeError(`cache should be type ${l.name}`)}if(u){let l=new ArrayBuffer(a*w0(n));this.cache=x0(l,n)}}}get data(){if(this.cache===void 0){let e=this.dataProvider(this.dataId);if(e.length!==this.size)throw new Error("Length of data provided by the Data Provider is inconsistent with the dims of this Tensor.");this.cache=e}return this.cache}get stringData(){if(this.type!=="string")throw new TypeError("data type is not string");return this.data}get integerData(){switch(this.type){case"uint8":case"int8":case"uint16":case"int16":case"int32":case"uint32":case"bool":return this.data;default:throw new TypeError("data type is not integer (uint8, int8, uint16, int16, int32, uint32, bool)")}}get floatData(){switch(this.type){case"float32":case"float64":return this.data;default:throw new TypeError("data type is not float (float32, float64)")}}get numberData(){if(this.type!=="string")return this.data;throw new TypeError("type cannot be non-number (string)")}get(e){return this.data[ie.indicesToOffset(e,this.strides)]}set(e,n){this.data[ie.indicesToOffset(e,this.strides)]=n}async getData(){return this.cache===void 0&&(this.cache=await this.asyncDataProvider(this.dataId)),this.cache}get strides(){return this._strides||(this._strides=ie.computeStrides(this.dims)),this._strides}static fromProto(e){if(!e)throw new Error("cannot construct Value from an empty tensor");let n=Et.tensorDataTypeFromProto(e.dataType),t=Et.tensorDimsFromProto(e.dims),o=new r(t,n);if(n==="string")e.stringData.forEach((i,s)=>{o.data[s]=Bo(i)});else if(e.rawData&&typeof e.rawData.byteLength=="number"&&e.rawData.byteLength>0){let i=o.data,s=new DataView(e.rawData.buffer,e.rawData.byteOffset,e.rawData.byteLength),a=qd(e.dataType),u=e.rawData.byteLength/a;if(e.rawData.byteLength%a!==0)throw new Error("invalid buffer length");if(i.length!==u)throw new Error("buffer length mismatch");for(let l=0;l<u;l++){let d=jd(s,e.dataType,l*a);i[l]=d}}else{let i;switch(e.dataType){case Pe.onnx.TensorProto.DataType.FLOAT:i=e.floatData;break;case Pe.onnx.TensorProto.DataType.INT32:case Pe.onnx.TensorProto.DataType.INT16:case Pe.onnx.TensorProto.DataType.UINT16:case Pe.onnx.TensorProto.DataType.INT8:case Pe.onnx.TensorProto.DataType.UINT8:case Pe.onnx.TensorProto.DataType.BOOL:i=e.int32Data;break;case Pe.onnx.TensorProto.DataType.INT64:i=e.int64Data;break;case Pe.onnx.TensorProto.DataType.DOUBLE:i=e.doubleData;break;case Pe.onnx.TensorProto.DataType.UINT32:case Pe.onnx.TensorProto.DataType.UINT64:i=e.uint64Data;break;default:throw new Error("unspecific error")}if(i==null)throw new Error("failed to populate data from a tensorproto value");let s=o.data;if(s.length!==i.length)throw new Error("array length mismatch");for(let a=0;a<i.length;a++){let u=i[a];Nr.isLong(u)?s[a]=Cs(u,e.dataType):s[a]=u}}return o}static fromData(e,n,t){return new r(n,t,void 0,void 0,e)}static fromOrtTensor(e){if(!e)throw new Error("cannot construct Value from an empty tensor");let n=Et.tensorDimsFromORTFormat(e),t=Et.tensorDataTypeFromProto(e.dataType()),o=new r(n,t);if(t==="string")for(let i=0;i<e.stringDataLength();i++)o.data[i]=e.stringData(i);else if(e.rawDataArray()&&typeof e.rawDataLength()=="number"&&e.rawDataLength()>0){let i=o.data,s=new DataView(e.rawDataArray().buffer,e.rawDataArray().byteOffset,e.rawDataLength()),a=qd(e.dataType()),u=e.rawDataLength()/a;if(e.rawDataLength()%a!==0)throw new Error("invalid buffer length");if(i.length!==u)throw new Error("buffer length mismatch");for(let l=0;l<u;l++){let d=jd(s,e.dataType(),l*a);i[l]=d}}return o}}});function fe(r){return r===1?_0:T0}function Xd(r){let e=fe(r);return`${e.version}
      precision highp float;
      ${e.attribute} vec3 position;
      ${e.attribute} vec2 textureCoord;

      ${e.varyingVertex} vec2 TexCoords;

      void main()
      {
          gl_Position = vec4(position, 1.0);
          TexCoords = textureCoord;
      }`}function Zd(r){let e=fe(r);return`${e.version}
    precision highp float;
    precision highp int;
    precision highp sampler2D;
    ${e.varyingFrag} vec2 TexCoords;
    ${e.outputDeclaration}
    const vec2 halfCR = vec2(0.5, 0.5);

    // Custom vector types to handle higher dimenalities.
    struct ivec5
    {
      int x;
      int y;
      int z;
      int w;
      int u;
    };

    struct ivec6
    {
      int x;
      int y;
      int z;
      int w;
      int u;
      int v;
    };

    int imod(int x, int y) {
      return x - y * (x / y);
    }

    `}function Jd(r,e){let n=fe(r);return`
  void main() {
    int indices[${e}];
    toVec(TexCoords, indices);
    vec4 result = vec4(process(indices));
    ${n.output} = result;
  }
  `}var _0,T0,lt=B(()=>{"use strict";_0={version:"",attribute:"attribute",varyingVertex:"varying",varyingFrag:"varying",texture2D:"texture2D",output:"gl_FragColor",outputDeclaration:""},T0={version:"#version 300 es",attribute:"in",varyingVertex:"out",varyingFrag:"in",texture2D:"texture",output:"outputColor",outputDeclaration:"out vec4 outputColor;"}});var Fe=B(()=>{"use strict"});async function Ps(r,e=t=>0,n){return new Promise((t,o)=>{let i=0,s=()=>{if(r()){t();return}i++;let a=e(i);if(n!=null&&i>=n){o();return}setTimeout(s,a)};s()})}function Wi(r){return Wn(typeof r<"u"&&r.length!==0,()=>"empty string found for sampler name"),"get"+r.charAt(0).toUpperCase()+r.slice(1)}function Qd(r){return Wn(typeof r<"u"&&r.length!==0,()=>"empty string found for sampler name"),"get"+r.charAt(0).toUpperCase()+r.slice(1)+"AtOutCoords"}function Hn(r,e){let n=JSON.parse(JSON.stringify(r));return n=e,n}function qn(r,e){return e.map(n=>r[n]).join(", ")}function Lt(r){if(r<=1)return"int";if(r===2)return"ivec2";if(r===3)return"ivec3";if(r===4)return"ivec4";if(r===5)return"ivec5";if(r===6)return"ivec6";throw Error(`GPU for rank ${r} is not yet supported`)}function hr(r=6){return["x","y","z","w","u","v"].slice(0,r)}var Tr=B(()=>{"use strict";Ke()});function $0(r,e){return hr(e).map(n=>`${r}.${n}`)}function jn(r,e){return e===1?[r]:$0(r,e)}function $r(){return`
    float getChannel(vec4 frag, int dim) {
      int modCoord = imod(dim, 2);
      return modCoord == 0 ? frag.r : frag.g;
    }

    float getChannel(vec4 frag, vec2 innerDims) {
      vec2 modCoord = mod(innerDims, 2.);
      return modCoord.x == 0. ?
        (modCoord.y == 0. ? frag.r : frag.g) :
        (modCoord.y == 0. ? frag.b : frag.a);
    }
  `}var vn=B(()=>{"use strict";Tr()});function I0(r,e,n){if(r===0)return"false";if(r===1)return`rc > ${e[0]}`;let t="";for(let o=r-2;o<r;o++)t+=`${n[o]} >= ${e[o-r+2]}`,o<r-1&&(t+="||");return t}function A0(r,e){let n=r.length;if(n===0)return"getA(), 0, 0, 0";if(n===1)return`getA(rc),
            rc + 1 >= ${r[0]} ? 0. : getA(rc + 1),
            0, 0`;let t="r, c",o="r, cp1",i="rp1, c",s="rp1, cp1",a="";if(n>2)for(let u=0;u<n-2;++u)a=a+`${e[u]},`;return`getA(${a}${t}),
          rEdge ? 0. : getA(${a}${i}),
          cEdge ? 0. : getA(${a}${o}),
          rEdge || cEdge ? 0. : getA(${a}${s})`}function O0(r,e,n,t){return r===0||r===1?"":`
    int r = ${e[r-2]};
    int c = ${e[r-1]};
    int rp1 = ${e[r-2]} + 1;
    int cp1 = ${e[r-1]} + 1;
    bool rEdge = rp1 >= ${t};
    bool cEdge = cp1 >= ${n};
    `}var ec,S0,tc,rc=B(()=>{"use strict";lt();Fe();Tr();vn();ec={name:"pack",inputNames:["A"],inputTypes:[1]},S0=(r,e)=>{let n=fe(r.session.backend.glContext.version),t=e.dims,o=t.length,i=e.dims.length,s=Lt(i),a=jn("rc",i),u=O0(i,a,t[t.length-2],t[t.length-1]),l;o===0?l=[1,1]:o===1?l=[t[0],1]:l=[t[i-1],t[i-2]];let d=I0(i,l,a),p=A0(t,a),h=`
        void main() {
          ${s} rc = getOutputCoords();

          if(${d}) {
            ${n.output} = vec4(0);
          } else {
            ${u}

            ${n.output} = vec4(${p});
          }
        }
      `;return{...ec,hasMain:!0,output:{dims:e.dims,type:e.type,textureType:2},shaderSource:h}},tc=(r,e)=>({...ec,get:()=>S0(r,e)})});function ks(r){if(r.length===0)return[1,1,1];let e=1;for(let n=0;n<r.length-2;++n)e*=r[n];return[e,r.length>1?r[r.length-2]:1,r[r.length-1]]}function oc(r,e){let n=!1;return r.length===0||e.length===0?n=!0:r.length<2||e.length<2?n=r[r.length-1]===e[e.length-1]:n=r[r.length-1]===e[e.length-1]&&r[r.length-2]===e[e.length-2],n}function P0(r){let e=ie.computeStrides(r),n=["b","r","c"],t="index";return`
    ivec3 inputCoordsFromReshapedOutCoords(int index) {
      ${e.map((i,s)=>{let a=`int ${n[s]} = ${t} / ${i}`,u=s===e.length-1?`int ${n[s+1]} = ${t} - ${n[s]} * ${i}`:`index -= ${n[s]} * ${i}`;return`${a}; ${u};`}).join("")}
      return ivec3(b, r, c);
    }
  `}function k0(r){let e=ie.computeStrides(r);return`
  int getFlattenedIndex(ivec3 coords) {
    // reverse y, z order
    return coords.x * ${e[0]} + coords.z * ${e[1]} + coords.y;
  }
`}var E0,C0,nc,ic=B(()=>{"use strict";Ke();lt();Fe();vn();E0=r=>({name:"Reshape (packed)",inputTypes:[2],inputNames:["A"],cacheHint:`${r}`}),C0=(r,e,n,t)=>{let o=e.dims,i=t,s="";for(let l=0;l<4;l++){let d="";switch(l){case 0:d="outputCoords = rc;";break;case 1:d="outputCoords = ivec3(rc.x, rc.y+1, rc.z);";break;case 2:d="outputCoords = ivec3(rc.x, rc.y, rc.z+1);";break;case 3:d="outputCoords = ivec3(rc.x, rc.y+1, rc.z+1);";break;default:throw new Error}s+=`
        ${d}
        ${l>0?"if(outputCoords.y < rows && outputCoords.z < cols){":""}
          int flattenedIndex = getFlattenedIndex(outputCoords);

          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flattenedIndex);
          vec2 innerDims = vec2(float(inputRC.y),float(inputRC.z));

          result[${l}] = getChannel(getA(inputRC.x, inputRC.y, inputRC.z), innerDims);

        ${l>0?"}":""}
      `}let a=fe(r.session.backend.glContext.version),u=`
      ${P0(o)}
      ${k0(i)}
      ${$r()}

      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0.0);

        ivec3 outputCoords;
        int rows = ${i[2]};
        int cols = ${i[1]};

        ${s}
        ${a.output} = result;
      }
    `;return{...n,output:{dims:i,type:e.type,textureType:2},shaderSource:u,hasMain:!0}},nc=(r,e,n)=>{let t=E0(n);return{...t,get:()=>C0(r,e,t,n)}}});var Ds,ac=B(()=>{"use strict";lt();Fe();Ds=(r,e)=>{let n=e.shape,t=fe(r.session.backend.glContext.version),o=`
    const float FLOAT_MAX = 1.70141184e38;
    const float FLOAT_MIN = 1.17549435e-38;

    bool isNaN(float val) {
      return (val < 1.0 || 0.0 < val || val == 0.0) ? false : true;
    }

    highp vec4 encodeAsUint8(highp float v) {
      if (isNaN(v)) {
        return vec4(255, 255, 255, 255);
      }

      highp float av = abs(v);

      if(av < FLOAT_MIN) {
        return vec4(0.0, 0.0, 0.0, 0.0);
      } else if(v > FLOAT_MAX) {
        return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;
      } else if(v < -FLOAT_MAX) {
        return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;
      }

      highp vec4 c = vec4(0,0,0,0);

      highp float e = floor(log2(av));
      highp float m = exp2(fract(log2(av))) - 1.0;

      c[2] = floor(128.0 * m);
      m -= c[2] / 128.0;
      c[1] = floor(32768.0 * m);
      m -= c[1] / 32768.0;
      c[0] = floor(8388608.0 * m);

      highp float ebias = e + 127.0;
      c[3] = floor(ebias / 2.0);
      ebias -= c[3] * 2.0;
      c[2] += floor(ebias) * 128.0;

      c[3] += 128.0 * step(0.0, -v);

      return c / 255.0;
    }

    void main() {
      float value = ${t.texture2D}(X,TexCoords).r;
      ${t.output} = encodeAsUint8(value);
    }`,i={name:"Uint8Encode",inputTypes:[0],inputNames:["X"],output:{dims:n,type:e.tensor.type,textureType:3},shaderSource:o,hasMain:!0};return r.executeProgram(i,[e.tensor])}});function B0(r,e){if(r===1)return"rc";let n="";for(let t=0;t<r;t++)n+=e[t],t<r-1&&(n+=",");return n}var sc,D0,uc,lc=B(()=>{"use strict";lt();Fe();Tr();vn();sc={name:"unpack",inputNames:["A"],inputTypes:[2]},D0=(r,e)=>{let n=e.dims.length,t=jn("rc",n),o=t.slice(-2),i=Lt(n),s=$r(),u=e.dims.length===0?"":B0(n,t),l=n<=1?"rc":`vec2(${o.join(",")})`,d=fe(r.session.backend.glContext.version),p=`
    ${s}
    void main() {
      ${i} rc = getOutputCoords();

       // Sample the texture with the coords to get the rgba channel value.
       vec4 packedInput = getA(${u});

       ${d.output} = vec4(getChannel(packedInput, ${l}), 0, 0, 0);
     }
   `;return{...sc,hasMain:!0,output:{dims:e.dims,type:e.type,textureType:0},shaderSource:p}},uc=(r,e)=>({...sc,get:()=>D0(r,e)})});var Hi,Ro,qi,zo=B(()=>{"use strict";Jt();Hi=class{constructor(e,n=1){if(n===1)this.internalFormat=e.R32F,this.format=e.RED,this.textureType=e.FLOAT,this.channelSize=n;else if(n===4)this.internalFormat=e.RGBA32F,this.format=e.RGBA,this.textureType=e.FLOAT,this.channelSize=n;else throw new Error(`Invalid number of channels: ${n}`)}encode(e,n){let t,o;return e.constructor!==Float32Array&&(Ze.warning("Encoder","data was not of type Float32; creating new Float32Array"),o=new Float32Array(e)),n*this.channelSize>e.length?(Ze.warning("Encoder","Source data too small. Allocating larger array"),o=e,t=this.allocate(n*this.channelSize),o.forEach((i,s)=>t[s]=i)):(o=e,t=o),t}allocate(e){return new Float32Array(e*4)}decode(e,n){return this.channelSize===1?e.filter((o,i)=>i%4===0).subarray(0,n):e.subarray(0,n)}},Ro=class{constructor(e,n=1,t){if(n!==1&&n!==4)throw new Error(`Invalid number of channels: ${n}`);this.internalFormat=e.RGBA,this.format=e.RGBA,this.channelSize=n,this.textureType=t||e.FLOAT}encode(e,n){let t=e;return this.channelSize===1&&(Ze.verbose("Encoder","Exploding into a larger array"),t=this.allocate(n),e.forEach((o,i)=>t[i*4]=o)),t}allocate(e){return new Float32Array(e*4)}decode(e,n){return this.channelSize===1?e.filter((o,i)=>i%4===0).subarray(0,n):e.subarray(0,n)}},qi=class{constructor(e,n=1){this.channelSize=4;if(n===1)this.internalFormat=e.ALPHA,this.format=e.ALPHA,this.textureType=e.UNSIGNED_BYTE,this.channelSize=n;else if(n===4)this.internalFormat=e.RGBA,this.format=e.RGBA,this.textureType=e.UNSIGNED_BYTE,this.channelSize=n;else throw new Error(`Invalid number of channels: ${n}`)}encode(e,n){return new Uint8Array(e.buffer,e.byteOffset,e.byteLength)}allocate(e){return new Uint8Array(e*this.channelSize)}decode(e,n){if(e instanceof Uint8Array)return e.subarray(0,n);throw new Error(`Invalid array type: ${e.constructor}`)}}});var Mo,dc,Bs,cc=B(()=>{"use strict";Ke();Fe();Mo=(r,e,n)=>{let t=n===0||n===1?1:4,o=n===2,i=n===1||n===2,s=n===4?e.length-1:void 0,a=n===4?e.map((u,l)=>l===e.length-1?u*4:u):void 0;return Bs(r,e,t,a,{isPacked:o,reverseWH:i,breakAxis:s})},dc=(r,e,n)=>{let t=Mo(r,e,n);return[t.width,t.height]},Bs=(r,e,n=1,t,o)=>{let i=!!(o&&o.isPacked),[s,a]=r.computeTextureWH(i&&t||e,o),u=e.length,l=e.slice(0);if(u===0&&(l=[1]),n===1)t=e;else if(i){if(n!==4)throw new Error("a packed texture must be 4-channel");t=e,u>0&&(l[u-1]=Math.ceil(l[u-1]/2)),u>1&&(l[u-2]=Math.ceil(l[u-2]/2))}else if(!t)throw new Error("Unpacked shape is needed when using channels > 1");return{width:s,height:a,channels:n,isPacked:i,shape:l,strides:ie.computeStrides(l),unpackedShape:t,reversedWH:o&&o.reverseWH}}});var z0,ji,pc=B(()=>{"use strict";Jt();yn();Ke();rc();ic();ac();lc();zo();cc();Fe();z0=(r,e)=>{let n=e.map(o=>`${o.unpackedShape.join(",")};${o.width}x${o.height}`).join("_"),t=r.name;return r.cacheHint&&(t+="["+r.cacheHint+"]"),t+=":"+n,t},ji=class{constructor(e){this.session=e;this.packedTextureDataCache=new Map,this.unpackedTextureDataCache=new Map}calculateTextureWidthAndHeight(e,n){return dc(this.session.layoutStrategy,e,n)}executeProgram(e,n){if(n.length<e.inputNames.length)throw new Error(`Input size mustn't be less than ${e.inputNames.length}.`);if(e.inputNames.length!==e.inputTypes.length)throw new Error("input names size does not match input types");let t=[];for(let l=0;l<e.inputNames.length;++l)t[l]=this.getOrCreateTextureData(n[l],e.inputTypes[l]);let o=z0(e,t),i=this.session.programManager.getArtifact(o),s=i?i.programInfo:typeof e.get=="function"?e.get():e,a=Mo(this.session.layoutStrategy,s.output.dims,s.output.textureType),u=this.createTextureData(a,s.output.type);return i||(i=this.session.programManager.build(s,t,u),this.session.programManager.setArtifact(o,i)),this.runProgram(i,t,u),u}run(e,n){return this.executeProgram(e,n).tensor}runProgram(e,n,t){for(let o=0;o<n.length;++o)if(!!n[o].isPacked!=(e.programInfo.inputTypes[o]===2))throw new Error(`input[${o}] property packed inconsistent`);if(!!t.isPacked!=(e.programInfo.output.textureType===2))throw new Error("output property packed inconsistent");this.session.programManager.run(e,n,t)}getOrCreateTextureData(e,n){let t=this.getTextureData(e.dataId,n===2);if(!t&&(t=this.getTextureData(e.dataId,n!==2),t))return n===2?this.pack(t):this.unpack(t);if(!t){let o=Mo(this.session.layoutStrategy,e.dims,n);if(n===4){let a=e.dims;if(a.length===4){let u=[a[0],Math.ceil(a[1]*a[2]*a[3]/4)],l=Mo(this.session.layoutStrategy,u,n),d=e.numberData;if(a[1]*a[2]*a[3]%4!==0){let p=a[0],h=a[1]*a[2]*a[3],g=Math.ceil(h*1/4)*4,b=p*g;d=new Float32Array(b);for(let v=0;v<p;++v){let $=v*h,T=v*g+v%1*h;d.set(e.numberData.subarray($,$+h),T)}}return this.createTextureData(l,e.type,d,e,1)}}if(n===2){let i=Bs(this.session.layoutStrategy,e.dims,1,[],{reverseWH:!0}),s=this.createTextureData(i,e.type,e.numberData,e,1);t=this.pack(s)}else t=this.createTextureData(o,e.type,e.numberData,e,1)}return t}createTextureDataFromLayoutBindTensor(e,n,t,o){return this.createTextureData(e,n,t,o,1)}createTextureData(e,n,t,o,i){Ze.verbose("InferenceHandler",`Creating TextureData: layout:[${JSON.stringify(e)}]`);let s=this.session.textureManager.createTextureFromLayout(n,e,t,i);return this.createTextureDataFromTexture(e,n,s,o)}reshapeUnpacked(e,n){let t=this.getOrCreateTextureData(e,0),o={channels:t.channels,height:t.height,width:t.width,shape:n.length!==0?n:[1],strides:ie.computeStrides(n),unpackedShape:n};return this.createTextureDataFromTexture(o,e.type,t.texture).tensor}reshapePacked(e,n){let t=this.getOrCreateTextureData(e,2);if(oc(e.dims,n)){let l={channels:t.channels,height:t.height,width:t.width,shape:n.length!==0?n:[1],strides:ie.computeStrides(n),unpackedShape:n,isPacked:!0};return this.createTextureDataFromTexture(l,e.type,t.texture).tensor}let o=ks(e.dims),i=ks(n),s=this.reshapePacked(e,o),a=this.run(nc(this,s,i),[s]);return this.reshapePacked(a,n)}cast(e,n){let t=this.getOrCreateTextureData(e,0);return this.createTextureDataFromTexture(t,n,t.texture).tensor}createTextureDataFromTexture(e,n,t,o,i){let s={...e,tensor:o||new wt(e.unpackedShape,n,a=>this.readTexture(s),async a=>this.readTextureAsync(s),void 0,i),texture:t};return this.setTextureData(s.tensor.dataId,s,e.isPacked),s}getTextureData(e,n=!1){return this.session.isInitializer(e)?this.session.getTextureData(e,n):n?this.packedTextureDataCache.get(e):this.unpackedTextureDataCache.get(e)}setTextureData(e,n,t=!1){this.session.isInitializer(e)?this.session.setTextureData(e,n,t):(t?this.packedTextureDataCache:this.unpackedTextureDataCache).set(e,n)}isTextureLayoutCached(e,n=!1){return!!this.getTextureData(e.dataId,n)}dispose(){this.session.textureManager.clearActiveTextures(),this.packedTextureDataCache.forEach(e=>this.session.textureManager.releaseTexture(e)),this.packedTextureDataCache=new Map,this.unpackedTextureDataCache.forEach(e=>this.session.textureManager.releaseTexture(e)),this.unpackedTextureDataCache=new Map}readTexture(e){return e.isPacked?this.readTexture(this.unpack(e)):this.session.backend.glContext.isFloat32DownloadSupported?this.session.textureManager.readTexture(e,e.tensor.type,e.channels):this.session.textureManager.readUint8TextureAsFloat(Ds(this,e))}async readTextureAsync(e){return e.isPacked?this.readTextureAsync(this.unpack(e)):this.session.backend.glContext.isFloat32DownloadSupported?this.session.textureManager.readTextureAsync(e,e.tensor.type,e.channels):this.session.textureManager.readUint8TextureAsFloat(Ds(this,e))}pack(e){return this.executeProgram(tc(this,e.tensor),[e.tensor])}unpack(e){return this.executeProgram(uc(this,e.tensor),[e.tensor])}}});var Rs,Oe,At=B(()=>{"use strict";Rs=class{constructor(e){Object.assign(this,e)}get cacheKey(){return this.key||(this.key=Object.getOwnPropertyNames(this).sort().map(e=>`${this[e]}`).join(";")),this.key}},Oe=r=>new Rs(r)});var hc,mc,gc,M0,L0,bc=B(()=>{"use strict";At();lt();Fe();hc={name:"BatchNormalization",inputNames:["A","Scale","B","Mean","Variance"],inputTypes:[0,0,0,0,0]},mc=(r,e,n)=>(L0(e),[r.run({...hc,cacheHint:n.cacheKey,get:()=>M0(r,e,n)},e)]),gc=r=>{let e=r.attributes.getFloat("epsilon",1e-5),n=r.attributes.getFloat("momentum",.9),t=r.attributes.getInt("spatial",1);return Oe({epsilon:e,momentum:n,spatial:t})},M0=(r,e,n)=>{let t=fe(r.session.backend.glContext.version),o=e[0].dims.length,[i,s]=r.calculateTextureWidthAndHeight(e[1].dims,0),a=`
  float process(int[${o}] indices) {
    vec2 position = offsetToCoords(indices[1], ${i}, ${s});
    float scale = getColorAsFloat(${t.texture2D}(Scale, position));
    float mean = getColorAsFloat(${t.texture2D}(Mean, position));
    float variance = getColorAsFloat(${t.texture2D}(Variance, position));
    float b = getColorAsFloat(${t.texture2D}(B, position));

    return scale * ( (_A(indices) - mean) / sqrt(variance + float(${n.epsilon})) ) + b;
  }`;return{...hc,output:{dims:e[0].dims,type:e[0].type,textureType:0},shaderSource:a}},L0=r=>{if(!r||r.length!==5)throw new Error("BatchNormalization requires 5 inputs.");let e=r[0],n=r[1],t=r[2],o=r[3],i=r[4];if(e.dims.length<3||n.dims.length!==1||t.dims.length!==1||o.dims.length!==1||i.dims.length!==1)throw new Error("invalid input shape.");if(n.dims[0]!==e.dims[1]||t.dims[0]!==e.dims[1]||o.dims[0]!==e.dims[1]||i.dims[0]!==e.dims[1])throw new Error("invalid input shape.");if(e.type!=="float32"&&e.type!=="float64"||n.type!=="float32"&&n.type!=="float64"||t.type!=="float32"&&t.type!=="float64"||o.type!=="float32"&&o.type!=="float64"||i.type!=="float32"&&i.type!=="float64")throw new Error("invalid input tensor types.")}});var Ki,rr,re,Lo,Yi,Vr=B(()=>{"use strict";Ki=class{constructor(e,n,t,o){this.glContext=e;this.programInfo=n;this.inputTextureLayouts=t;this.outputTextureLayout=o}},rr=class{constructor(e){this.context=e}},re=class{constructor(e,n){this.routineBody=e;this.dependencies=n}},Lo=class{constructor(e,n,t){this.name=e;t?this.dependencies=t:this.dependencies=[],n&&(this.routineBody=n)}addDependency(e){e&&this.dependencies.push(e)}},Yi=class{static returnOrderedNodes(e){if(!e||e.length===0)return[];if(e.length===1)return e;let n=new Set,t=new Set,o=new Array;return this.createOrderedNodes(e,n,t,o),o}static createOrderedNodes(e,n,t,o){for(let i=0;i<e.length;++i)this.dfsTraverse(e[i],n,t,o)}static dfsTraverse(e,n,t,o){if(!e||t.has(e.name))return;if(n.has(e.name))throw new Error("Cyclic dependency detected. Can't topologically sort routines needed for shader.");n.add(e.name);let i=e.dependencies;if(i&&i.length>0)for(let s=0;s<i.length;++s)this.dfsTraverse(i[s],n,t,o);o.push(e),t.add(e.name),n.delete(e.name)}}});function V0(){let r="add_";return{body:`
  float ${r}(float a, float b) {
    return a + b;
  }
  vec4 ${r}(vec4 v1, vec4 v2) {
    return v1 + v2;
  }
  `,name:r,type:0}}function F0(){let r="div_";return{body:`
  float ${r}(float a, float b) {
    return a / b;
  }
  vec4 ${r}(vec4 v1, vec4 v2) {
    return v1 / v2;
  }
  `,name:r,type:0}}function G0(){let r="mul_";return{body:`
  float ${r}(float a, float b) {
    return a * b;
  }
  vec4 ${r}(vec4 v1, vec4 v2) {
    return v1 * v2;
  }
  `,name:r,type:0}}function U0(){let r="sub_";return{body:`
  float ${r}(float a, float b) {
    return a - b;
  }
  vec4 ${r}(vec4 v1, vec4 v2) {
    return v1 - v2;
  }
  `,name:r,type:0}}function W0(){let r="equal_";return{body:`
  float ${r}(float a, float b) {
    return float(a == b);
  }
  vec4 ${r}(vec4 v1, vec4 v2) {
    return vec4(equal(v1, v2));
  }
  `,name:r,type:0}}function H0(){let r="greater_";return{body:`
  float ${r}(float a, float b) {
    return float(a > b);
  }
  vec4 ${r}(vec4 v1, vec4 v2) {
    return vec4( v1.r > v2.r ,
      v1.g > v2.g,
      v1.b > v2.b,
      v1.a > v2.a );
  }
  `,name:r,type:0}}function q0(){let r="less_";return{body:`
  float ${r}(float a, float b) {
    return float(a < b);
  }
  vec4 ${r}(vec4 v1, vec4 v2) {
    return vec4( v1.r < v2.r ,
                v1.g < v2.g,
                v1.b < v2.b,
                v1.a < v2.a );
  }
  `,name:r,type:0}}function j0(){let r="and_";return{body:`
  float ${r}(float a, float b) {
    return float( bool(a) && bool(b) );
  }
  vec4 ${r}(vec4 v1, vec4 v2) {
    bvec4 b1 = bvec4(v1);
    bvec4 b2 = bvec4(v2);
    return vec4( b1.r && b2.r ,
                b1.g && b2.g,
                b1.b && b2.b,
                b1.a && b2.a );
  }
  `,name:r,type:0}}function K0(){let r="or_";return{body:`
  float ${r}(float a, float b) {
    return float( bool(a) || bool(b) );
  }
  vec4 ${r}(vec4 v1, vec4 v2) {
    bvec4 b1 = bvec4(v1);
    bvec4 b2 = bvec4(v2);
    return vec4( b1.r || b2.r ,
                b1.g || b2.g,
                b1.b || b2.b,
                b1.a || b2.a );
  }
  `,name:r,type:0}}function Y0(){let r="xor_";return{body:`
  float ${r}(float a, float b) {
    return float( bool(a) ^^ bool(b) );
  }
  vec4 ${r}(vec4 v1, vec4 v2) {
    bvec4 b1 = bvec4(v1);
    bvec4 b2 = bvec4(v2);
    return vec4( b1.r ^^ b2.r ,
                b1.g ^^ b2.g,
                b1.b ^^ b2.b,
                b1.a ^^ b2.a );
  }
  `,name:r,type:0}}function X0(){return J0("pow")}function Z0(){let r="prelu_";return{body:`
  float ${r}(float a, float b) {
    return a < 0.0 ? a * b: a;
  }
  vec4 ${r}(vec4 v1, vec4 v2) {
    return vec4(
      v1.r < 0.0 ? v1.r * v2.r: v1.r,
      v1.g < 0.0 ? v1.g * v2.g: v1.g,
      v1.b < 0.0 ? v1.b * v2.b: v1.b,
      v1.a < 0.0 ? v1.a * v2.a: v1.a
      );
  }
  `,name:r,type:0}}function J0(r){let e=`${r}_`;return{body:`
  float ${e}(float a, float b) {
    return ${r}(a, b);
  }
  vec4 ${e}(vec4 v1, vec4 v2) {
    return ${r}(v1, v2);
  }
  `,name:e,type:0}}var nr,Q0,yc,vc,wc,xc,_c,Tc,$c,Sc,Ic,Ac,Oc,Ec,Cc=B(()=>{"use strict";Ke();Vr();lt();Fe();nr=(r,e,n,t=e[0].type,o)=>{let i=r.session.pack?2:0;return{name:n.name,inputNames:["A","B"],inputTypes:[i,i],cacheHint:o,get:()=>Q0(r,e,n,t)}},Q0=(r,e,n,t=e[0].type)=>{let o=r.session.pack?2:0,i=!ie.areEqual(e[0].dims,e[1].dims),s=e[0].dims,a=r.session.pack;if(i){let d=Mt.calcShape(e[0].dims,e[1].dims,!1);if(!d)throw new Error("Can't perform binary op on the given tensors");s=d;let p=s.length,h=e[0].dims.length!==0?e[0].dims.length:1,g=e[1].dims.length!==0?e[1].dims.length:1,b=e[0].dims.length!==0?"bcastIndices_A(indices, aindices);":"aindices[0] = 0;",v=e[1].dims.length!==0?"bcastIndices_B(indices, bindices);":"bindices[0] = 0;",$=fe(r.session.backend.glContext.version),T=a?`
      ${n.body}
      void main() {
        vec4 a = getAAtOutCoords();
        vec4 b = getBAtOutCoords();
        vec4 result = ${n.name}(a, b);
        ${$.output} = result;
      }`:`
      ${n.body}
      float process(int indices[${p}]) {
        int aindices[${h}];
        int bindices[${g}];
        ${b}
        ${v}
        return ${n.name}(_A(aindices), _B(bindices));
      }`;return{name:n.name,inputNames:["A","B"],inputTypes:[o,o],output:{dims:s,type:t,textureType:o},shaderSource:T,hasMain:a}}let u=fe(r.session.backend.glContext.version),l=`
    ${n.body}
    void main() {
      vec4 v1 = ${u.texture2D}(A, TexCoords);
      vec4 v2 = ${u.texture2D}(B, TexCoords);
      vec4 result = ${n.name}(v1, v2);
      ${u.output} = result;
    }
    `;return{name:n.name,inputNames:["A","B"],inputTypes:[o,o],output:{dims:e[0].dims,type:t,textureType:o},shaderSource:l,hasMain:!0}},yc=(r,e)=>[r.run(nr(r,e,V0()),e)],vc=(r,e)=>[r.run(nr(r,e,j0(),"bool"),e)],wc=(r,e)=>[r.run(nr(r,e,F0()),e)],xc=(r,e)=>[r.run(nr(r,e,W0(),"bool"),e)],_c=(r,e)=>[r.run(nr(r,e,H0(),"bool"),e)],Tc=(r,e)=>[r.run(nr(r,e,q0(),"bool"),e)],$c=(r,e)=>[r.run(nr(r,e,G0()),e)],Sc=(r,e)=>[r.run(nr(r,e,K0(),"bool"),e)],Ic=(r,e)=>[r.run(nr(r,e,X0()),e)],Ac=(r,e)=>[r.run(nr(r,e,Z0()),e)],Oc=(r,e)=>[r.run(nr(r,e,U0()),e)],Ec=(r,e)=>[r.run(nr(r,e,Y0(),"bool"),e)]});var Pc,kc,tv,Dc=B(()=>{"use strict";Ke();Pc=(r,e,n)=>(tv(e),[r.cast(e[0],n)]),kc=r=>Et.tensorDataTypeFromProto(r.attributes.getInt("to")),tv=r=>{if(!r||r.length!==1)throw new Error("Cast requires 1 input.");if(r[0].type==="string")throw new Error("Invalid input type.")}});var rv,nv,Bc,Xi,Rc=B(()=>{"use strict";lt();Fe();Tr();vn();rv=(r,e)=>({name:"Concat (packed)",inputNames:Array.from({length:r},(n,t)=>`X${t}`),inputTypes:Array(r).fill(2),cacheHint:e}),nv=(r,e,n,t)=>{let o=n[0].dims.slice();if(t>=o.length||t<-1*o.length)throw new Error("axis specified for concat doesn't match input dimensionality");t<0&&(t=o.length+t);let i=o.slice(0);for(let k=1;k<n.length;k++){let L=n[k].dims.slice();for(let W=0;W<o.length;W++)if(W===t)i[t]+=L[W];else if(o[W]!==L[W])throw new Error("non concat dimensions must match")}let s=i.length,a=jn("coords",s),u=Lt(s),l=$r(),d=n.map(k=>k.dims),p=hr(s),h=new Array(d.length-1);h[0]=d[0][t];for(let k=1;k<h.length;k++)h[k]=h[k-1]+d[k][t];let g=p[t],b=p.slice(-2),v=p.join(),$=`if (${g} < ${h[0]}) {
        return getChannel(
            getX0(${v}), vec2(${b.join()}));
        }`;for(let k=1;k<h.length;k++){let L=h[k-1];$+=`
            if (${g} < ${h[k]}  && ${g} >= ${h[k-1]}) {
              return getChannel(
                getX${k}(${Xi(p,g,L)}),
                vec2(${Xi(b,g,L)}));
            }`}let T=h.length,x=h[h.length-1];$+=`
            return getChannel(
              getX${T}(${Xi(p,g,x)}),
              vec2(${Xi(b,g,x)}));`;let A=fe(r.session.backend.glContext.version),O=`
          ${l}
          float getValue(${p.map(k=>"int "+k)}) {
            ${$}
          }

          void main() {
            ${u} coords = getOutputCoords();
            int lastDim = coords.${p[s-1]};
            coords.${p[s-1]} = coords.${p[s-2]};
            coords.${p[s-2]} = lastDim;

            vec4 result = vec4(getValue(${a}), 0., 0., 0.);

            ${a[s-1]} = ${a[s-1]} + 1;
            if (${a[s-1]} < ${i[s-1]}) {
              result.g = getValue(${a});
            }

            ${a[s-2]} = ${a[s-2]} + 1;
            if (${a[s-2]} < ${i[s-2]}) {
              result.a = getValue(${a});
            }

            ${a[s-1]} = ${a[s-1]} - 1;
            if (${a[s-2]} < ${i[s-2]} &&
                ${a[s-1]} < ${i[s-1]}) {
              result.b = getValue(${a});
            }
            ${A.output} = result;
          }
        `;return{...e,output:{dims:i,type:n[0].type,textureType:2},shaderSource:O,hasMain:!0}},Bc=(r,e,n)=>{let t=rv(e.length,n.cacheKey);return{...t,get:()=>nv(r,t,e,n.axis)}},Xi=(r,e,n)=>{let t=r.indexOf(e);return r.map((i,s)=>s===t?`${i} - ${n}`:i).join()}});var zc,ov,iv,av,Mc,sv,uv,lv,Lc,dv,Nc=B(()=>{"use strict";At();Fe();Rc();zc=(r,e,n)=>(dv(e),r.session.pack&&e[0].dims.length>1?[r.run(Bc(r,e,n),e)]:[r.run(av(r,e,n),e)]),ov=(r,e)=>({name:"Concat",inputNames:Array.from({length:r},(n,t)=>`X${t}`),inputTypes:Array(r).fill(0),cacheHint:e}),iv=(r,e,n,t)=>{let o=n[0].dims.slice();if(t>=o.length||t<-1*o.length)throw new Error("axis specified for concat doesn't match input dimensionality");t<0&&(t=o.length+t);let i=o.slice(0);for(let g=1;g<n.length;g++){let b=n[g].dims.slice();for(let v=0;v<o.length;v++)if(v===t)i[t]+=b[v];else if(o[v]!==b[v])throw new Error("non concat dimensions must match")}let s=i.length,a=new Array(n.length),u=0;for(let g=0;g<a.length;++g)u+=n[g].dims[t],a[g]=u;let l="";n.length<5?l=Mc(a):l=sv(a);let d=uv(n.length,s),p=lv(a),h=`
        ${d}
        ${p}
        ${l}
        float process(int indices[${s}]) {
          int textureIndex = getTextureWhereDataResides (indices[${t}]);

          if(textureIndex != 0) {
            indices[${t}] = indices[${t}] - int(getSizeInConcatAxisValueFromIndex(textureIndex-int(1)));
          }

          return fetchDataFromCorrectTexture(textureIndex, indices);
        }`;return{...e,output:{dims:i,type:n[0].type,textureType:0},shaderSource:h}},av=(r,e,n)=>{let t=ov(e.length,n.cacheKey);return{...t,get:()=>iv(r,t,e,n.axis)}},Mc=r=>`int getTextureWhereDataResides(int index) {
      ${r.map((n,t)=>`if(index<${n}) {return ${t};}
`).join("")}
    }`,sv=r=>Mc(r),uv=(r,e)=>{let n=[`float fetchDataFromCorrectTexture(int textureIndex, int indices[${e}]) {`];for(let t=0;t<r;++t)t===0?n.push(`	if (textureIndex == ${t}) { return _X${t}(indices); }`):t===r-1?n.push(`	else { return _X${t}(indices); }`):n.push(`	else if (textureIndex == ${t}) { return _X${t}(indices); }`);return n.push("	}"),n.join(`
`)},lv=r=>{let e=["int getSizeInConcatAxisValueFromIndex(int index) {"];for(let n=0;n<r.length;++n)n===0?e.push(`	if (index == ${n}) { return ${r[n]}; }`):n===r.length-1?e.push(`	else { return ${r[n]}; }`):e.push(`	else if (index == ${n}) { return ${r[n]}; }`);return e.push("	}"),e.join(`
`)},Lc=r=>Oe({axis:r.attributes.getInt("axis")}),dv=r=>{if(!r||r.length<1)throw new Error("too few inputs");let e=r[0].type,n=r[0].dims.length;if(e==="string")throw new Error("string tensor is not supported yet");for(let t of r){if(t.type!==e)throw new Error("input tensors should be one type");if(t.dims.length!==n)throw new Error("input tensors should have the same shape")}}});function cv(){return or("abs")}function fv(){return or("acos")}function pv(){return or("asin")}function hv(){return or("atan")}function mv(){return or("ceil")}function gv(){return or("cos")}function bv(r){let e="elu";return{body:`
  const float alpha = float(${r});

  float ${e}_(float a) {
    return a >= 0.0 ? a: (exp(a) - 1.0) * alpha;
  }
  vec4 ${e}_(vec4 v) {
    return vec4(${e}_(v.x), ${e}_(v.y), ${e}_(v.z), ${e}_(v.w));
  }
  `,name:e,type:0}}function yv(){return or("exp")}function vv(){return or("floor")}function zs(r,e){let n="clip";return{body:`
  const float min = float(${r});
  const float max = float(${e});

  float ${n}_(float a) {
    return clamp(a, min, max);
  }
  vec4 ${n}_(vec4 v) {
    return clamp(v, min, max);
  }
  `,name:n,type:0}}function wv(){let r="indentity";return{body:`
  float ${r}_(float a) {
    return a;
  }
  vec4 ${r}_(vec4 v) {
    return v;
  }
  `,name:r,type:0}}function xv(r){let e="leakyRelu";return{body:`
  const float alpha = float(${r});

  float ${e}_(float a) {
    return a < 0.0 ? a * alpha : a;
  }
  vec4 ${e}_(vec4 v) {
    return vec4(${e}_(v.x), ${e}_(v.y), ${e}_(v.z), ${e}_(v.w));
  }
  `,name:e,type:0}}function _v(){return or("log")}function Tv(){let r="neg";return{body:`
  float ${r}_(float a) {
    return -a;
  }
  vec4 ${r}_(vec4 v) {
    return -v;
  }
  `,name:r,type:0}}function $v(){let r="not";return{body:`
  float ${r}_(float a) {
    return float( ! bool(a) );
  }
  bool ${r}_(bool a) {
    return !a;
  }
  vec4 ${r}_(vec4 v) {
    return vec4(!bool(v.x), !bool(v.y), !bool(v.z), !bool(v.w));
  }
  bvec4 ${r}_(bvec4 v) {
    return bvec4(!v.x, !v.y, !v.z, !v.w);
  }
  `,name:r,type:0}}function Sv(){return or("sin")}function Ms(){let r="relu";return{body:`
  float ${r}_(float a) {
    return max( a, 0.0 );
  }
  vec4 ${r}_(vec4 v) {
    return max( v, 0.0 );
  }
  `,name:r,type:0}}function Ls(){let r="sigmoid";return{body:`
  float ${r}_(float a) {
    return 1.0 / (1.0 + exp(-a));
  }
  vec4 ${r}_(vec4 v) {
    return 1.0 / (1.0 + exp(-v));
  }
  `,name:r,type:0}}function Iv(){return or("sqrt")}function Av(){return or("tan")}function Ov(){let r="tanh";return{body:`
  float ${r}_(float a) {
    a = clamp(a, -10., 10.);
    a = exp(2.*a);
    return (a - 1.) / (a + 1.);
  }
  vec4 ${r}_(vec4 v) {
    v = clamp(v, -10., 10.);
    v = exp(2.*v);
    return (v - 1.) / (v + 1.);
  }
  `,name:r,type:0}}function or(r){return{body:`
  float ${r}_(float a) {
    return ${r}(a);
  }
  vec4 ${r}_(vec4 v) {
    return ${r}(v);
  }
  `,name:r,type:0}}var Ev,bt,Vc,Fc,Gc,Uc,Ns,Wc,Hc,Cv,qc,jc,Kc,Yc,Xc,Zc,Vs,Jc,Qc,ef,tf,rf,nf,of,af,sf,uf,lf,Fs=B(()=>{"use strict";At();Ke();Vr();lt();Fe();Ev=(r,e,n,t)=>{let o=r.session.pack?2:0,i=fe(r.session.backend.glContext.version);return{...e,output:{dims:n.dims,type:n.type,textureType:o},shaderSource:`
     ${t.body}
     void main() {
       vec4 v = ${i.texture2D}(A, TexCoords);
       v = ${t.name}_(v);
       ${i.output} = v;
     }
     `,hasMain:!0}},bt=(r,e,n,t)=>{let o=r.session.pack?2:0,i={name:n.name,inputTypes:[o],inputNames:["A"],cacheHint:t};return{...i,get:()=>Ev(r,i,e,n)}},Vc=(r,e)=>[r.run(bt(r,e[0],cv()),e)],Fc=(r,e)=>[r.run(bt(r,e[0],fv()),e)],Gc=(r,e)=>[r.run(bt(r,e[0],pv()),e)],Uc=(r,e)=>[r.run(bt(r,e[0],hv()),e)],Ns=(r,e,n)=>[r.run(bt(r,e[0],zs(n.min,n.max),n.cacheKey),e)],Wc=r=>Oe({min:r.attributes.getFloat("min",gn),max:r.attributes.getFloat("max",bn)}),Hc=(r,e)=>{let n=Cv(r,e);return Ns(r,[e[0]],n)},Cv=(r,e)=>{if(e.length>=3&&(!r.session.isInitializer(e[1].dataId)||!r.session.isInitializer(e[2].dataId)))throw new Error("dynamic clip attributes are not allowed");let n=e.length>=3?e[1].numberData[0]:gn,t=e.length>=3?e[2].numberData[0]:bn;return Oe({min:n,max:t})},qc=(r,e)=>[r.run(bt(r,e[0],mv()),e)],jc=(r,e)=>[r.run(bt(r,e[0],gv()),e)],Kc=(r,e,n)=>[r.run(bt(r,e[0],bv(n.alpha),n.cacheKey),e)],Yc=r=>Oe({alpha:r.attributes.getFloat("alpha",1)}),Xc=(r,e)=>[r.run(bt(r,e[0],yv()),e)],Zc=(r,e)=>[r.run(bt(r,e[0],vv()),e)],Vs=(r,e)=>[r.run(bt(r,e[0],wv()),e)],Jc=(r,e,n)=>[r.run(bt(r,e[0],xv(n.alpha),n.cacheKey),e)],Qc=r=>Oe({alpha:r.attributes.getFloat("alpha",.01)}),ef=(r,e)=>[r.run(bt(r,e[0],_v()),e)],tf=(r,e)=>[r.run(bt(r,e[0],Tv()),e)],rf=(r,e)=>[r.run(bt(r,e[0],$v()),e)],nf=(r,e)=>[r.run(bt(r,e[0],Ms()),e)],of=(r,e)=>[r.run(bt(r,e[0],Ls()),e)],af=(r,e)=>[r.run(bt(r,e[0],Sv()),e)],sf=(r,e)=>[r.run(bt(r,e[0],Iv()),e)],uf=(r,e)=>[r.run(bt(r,e[0],Av()),e)],lf=(r,e)=>[r.run(bt(r,e[0],Ov()),e)]});function Sr(r){let e;switch(r.activation){case"Relu":e=Ms();break;case"Sigmoid":e=Ls();break;case"Clip":e=zs(r.clipMin,r.clipMax);break;default:return{activationFunction:"",applyActivation:""}}let n=e.name,t=e.body,o=`value = ${n}_(value);`;return{activationFunction:t,applyActivation:o}}var Kn,wn=B(()=>{"use strict";Ke();Fs();Kn=r=>{let e=r.getString("activation","");if(e==="Clip"){let[n,t]=r.getFloats("activation_params",[gn,bn]);return{activation:e,clipMax:t,clipMin:n,activationCacheKey:`${e}:${n},${t}`}}return{activation:e,activationCacheKey:e}}});var kv,Dv,df,cf=B(()=>{"use strict";Jt();lt();Fe();Zi();wn();kv=(r,e)=>({name:"GroupedConv",inputNames:r?["X","W","Bias"]:["X","W"],inputTypes:r?[0,0,0]:[0,0],cacheHint:e}),Dv=(r,e,n,t)=>{let i=e.length>2?"value += getBias(output_channel);":"",s=e[0].dims.slice(),a=e[1].dims.slice(),u=a[0]/t.group;Ze.verbose("GroupedConv",`autpPad:${t.autoPad}, dilations:${t.dilations}, group:${t.group}, kernelShape:${t.kernelShape}, pads:${t.pads}, strides:${t.strides}`);let l=Yn(s,a,t.dilations,t.pads,t.strides),d=fe(r.session.backend.glContext.version),{activationFunction:p,applyActivation:h}=Sr(t),g=`
  const ivec2 strides = ivec2(${t.strides[0]}, ${t.strides[1]});
  const ivec2 pads = ivec2(${t.pads[0]}, ${t.pads[1]});
  ${p}
  void main() {
    ivec4 coords = getOutputCoords();
    int batch = coords.x;
    int output_channel = coords.y;
    ivec2 xRCCorner = coords.zw * strides - pads;
    int group_id = output_channel / ${u};

    float value = 0.0;
    for (int wInChannel = 0; wInChannel < ${a[1]}; wInChannel++) {
      int input_channel = group_id * ${a[1]} + wInChannel;
      for (int wHeight = 0; wHeight < ${a[2]}; wHeight++) {
        int xHeight = xRCCorner.x + wHeight * ${t.dilations[0]};

        if (xHeight < 0 || xHeight >= ${s[2]}) {
          continue;
        }

        for (int wWidth = 0; wWidth < ${a[3]}; wWidth++) {
          int xWidth = xRCCorner.y + wWidth * ${t.dilations[1]};
          if (xWidth < 0 || xWidth >= ${s[3]}) {
            continue;
          }

          float xVal = getX(batch, input_channel, xWidth, xHeight);
          float wVal = getW(output_channel, wInChannel, wWidth, wHeight);
          value += xVal*wVal;
        }
      }
    }
    ${i}
    ${h}
    ${d.output} = vec4(value, .0, .0, .0);
  }
`;return{...n,output:{dims:l,type:e[0].type,textureType:0},shaderSource:g,hasMain:!0}},df=(r,e,n)=>{let t=kv(e.length>2,n.cacheKey);return{...t,get:()=>Dv(r,e,t,n)}}});var Bv,Rv,ff,pf=B(()=>{"use strict";lt();Fe();vn();Bv=r=>({name:"Im2Col (packed)",inputNames:["A"],inputTypes:[2],cacheHint:r}),Rv=(r,e,n,t,o,i)=>{let s=n.dims,a=t.dims,u=2,l=3,d=o.length,p=[a[1]*a[2]*a[3],o[2]*o[3]],h=a[2]*a[3],g=$r(),b=fe(r.session.backend.glContext.version),v="";for(let T=0;T<=1;T++)for(let x=0;x<=1;x++)v+=`
            blockIndex = rc.x + ${x};
            pos = rc.y + ${T};

            if(blockIndex < ${p[1]} && pos < ${p[0]}) {
              offsetY = int(blockIndex / (${o[d-1]})) * ${i.strides[0]} -
                ${i.pads[0]};
              d0 = offsetY + ${i.dilations[0]} * (imod(pos, ${h}) / ${a[2]});

              if(d0 < ${s[u]} && d0 >= 0) {
                offsetX = imod(blockIndex, ${o[d-1]}) * ${i.strides[1]} -
                  ${i.pads[1]};
                d1 = offsetX + ${i.dilations[1]} * imod(imod(pos, ${h}), ${a[2]});

                if(d1 < ${s[l]} && d1 >= 0) {

                  ch = int(float(pos)/ ${h}.);
                    innerDims = vec2(d0, d1);
                    result[${T*2+x}] = getChannel(
                      getA(0, ch, int(innerDims.x),
                      int(innerDims.y)), innerDims);
                }
              }
            }

          `;let $=`
      ${g}

      void main() {
        ivec2 rc = getOutputCoords();
          vec4 result = vec4(0.0);
          int blockIndex, pos, offsetY, d0, offsetX, d1, ch;
          vec2 innerDims;
          ${v}
          ${b.output} = result;
      }
            `;return{...e,output:{dims:p,type:n.type,textureType:2},shaderSource:$,hasMain:!0}},ff=(r,e,n,t,o)=>{let i=Bv(o.cacheKey);return{...i,get:()=>Rv(r,i,e,n,t,o)}}});function Mv(r,e,n){let t=e[0].dims,o=e[1].dims,i=Mt.calcShape(t,o,!0);if(!i)throw new Error("Can't use matmul on the given tensors");let s=Lt(i.length),a=hr(),{activationFunction:u,applyActivation:l}=Sr(n),d=e.length>2,p=d?"value += getBiasForMatmul();":"",h=d?`${Us(s,a,e[2].dims,i,!1)}`:"",g=i.length,b=t.length,v=o.length,$=t[t.length-1],T=`
    ${u}
    ${h}
    float process(int indices[${g}]) {
        int a[${b}];
        int b[${v}];
        bcastMatmulIndices_A(indices, a);
        bcastMatmulIndices_B(indices, b);

        float value;
        for (int k=0; k<${$}; ++k) {
            a[${b-1}] = k;
            b[${v-2}] = k;
            value += _A(a) * _B(b);
        }
        ${p}
        ${l}
        return value;
    }`;return{...r,output:{dims:i,type:e[0].type,textureType:0},shaderSource:T}}function Gs(r,e){let n=zv(r.length>2,e.activationCacheKey);return{...n,get:()=>Mv(n,r,e)}}function Us(r,e,n,t,o){let i="",s=n.length,a=t.length,u=a-s;a<2&&s>0?i="coords":i=n.map((v,$)=>`coords.${e[$+u]}`).join(", ");let d=Mt.getBroadcastDims(n,t).map(v=>`coords.${e[v+u]} = 0;`).join(`
`),h=ie.size(n)===1,g="vec4(outputValue.xx, outputValue.yy)";return h&&(g="vec4(outputValue.x)"),o?`
vec4 getBiasForMatmul() {
  ${r} coords = getOutputCoords();
  ${d}
  vec4 outputValue = getBias(${i});
  return ${g};
}`:`
float getBiasForMatmul() {
  ${r} coords = getOutputCoords();
  ${d}
  return getBias(coords.x);
}`}var hf,mf,zv,Lv,Ji=B(()=>{"use strict";Ke();Fe();Tr();wn();Ws();hf=(r,e,n)=>(Lv(e),r.session.pack?[r.run(Qi(r,e,n),e)]:[r.run(Gs(e,n),e)]),mf=r=>Kn(r.attributes),zv=(r,e)=>({name:"MatMul",inputNames:r?["A","B","Bias"]:["A","B"],inputTypes:r?[0,0,0]:[0,0],cacheHint:e});Lv=r=>{if(!r||r.length!==2)throw new Error("MatMul requires 2 inputs.");if(r[0].dims[r[0].dims.length-1]!==r[1].dims[r[1].dims.length-2])throw new Error("shared dimension does not match.");if(r[0].type!=="float32"&&r[0].type!=="float64"||r[1].type!=="float32"&&r[1].type!=="float64")throw new Error("inputs should be float type");if(r[0].type!==r[1].type)throw new Error("inputs types should match")}});function Fv(r,e,n,t){let o=[],i=[],s=n[0].dims,a=n[1].dims,u=s.length,l=a.length,d=t.length,p=d-u,h=d-l;o=s.map((A,O)=>`coords.${e[O+p]}`),o[u-1]="i*2",o.join(", "),i=a.map((A,O)=>`coords.${e[O+h]}`),i[l-2]="i*2",i.join(", ");let g=Mt.getBroadcastDims(s,t),b=Mt.getBroadcastDims(a,t),v=g.map(A=>`coords.${e[A+p]} = 0;`).join(`
`),$=b.map(A=>`coords.${e[A+h]} = 0;`).join(`
`),T=`int lastDim = coords.${e[d-1]};
  coords.${e[d-1]} = coords.${e[d-2]};
  coords.${e[d-2]} = lastDim;`;return`
vec4 getAAtOutCoordsMatmul(int i) {
  ${r} coords = getOutputCoords();
  ${T}
  ${v}
  vec4 outputValue = getA(${o});
  return outputValue;
}

vec4 getBAtOutCoordsMatmul(int i) {
  ${r} coords = getOutputCoords();
  ${T}
  ${$}
  vec4 outputValue = getB(${i});
  return outputValue;
}`}function Gv(r,e){let n="";for(let t=0;t<e-2;t++)n+=`rc.${r[t]}, `;return n+=`rc.${r[e-2]}, i*2`,n}function Uv(r,e){let n="";for(let t=0;t<e-2;t++)n+=`rc.${r[t]}, `;return n+=`i*2, rc.${r[e-1]}`,n}var Nv,Vv,Qi,Ws=B(()=>{"use strict";Ke();lt();Fe();Tr();wn();Ji();Nv=(r,e)=>({name:"MatMul (packed)",inputNames:r?["A","B","Bias"]:["A","B"],inputTypes:r?[2,2,2]:[2,2],cacheHint:e}),Vv=(r,e,n,t)=>{let o=n.length>2,i=o?"value += getBiasForMatmul();":"",s=n[0].dims,a=n[1].dims,u=Mt.calcShape(s,a,!0),l=!ie.areEqual(n[0].dims,n[1].dims);if(!u)throw new Error("Can't use matmul on the given tensors");let d=s[s.length-1],p=Math.ceil(d/2),h=s.length,g=a.length,b=fe(r.session.backend.glContext.version),v=Lt(u.length),$=u.length,T=hr(),{activationFunction:x,applyActivation:A}=Sr(t),O=o?`${Us(v,T,n[2].dims,u,!0)}`:"",k=l?`${Fv(v,T,n,u)}`:"",L=l?"getAAtOutCoordsMatmul(i)":`getA(${Gv(T,h)})`,W=l?"getBAtOutCoordsMatmul(i)":`getB(${Uv(T,g)})`,J=l?"":`${v} rc =
          getOutputCoords(); int lastDim = rc.${T[$-1]}; rc.${T[$-1]} =
          rc.${T[$-2]}; rc.${T[$-2]} = lastDim;
      `,se=`
            ${k}
            ${O}
            ${x}
            void main() {
              ${J}

              vec4 value = vec4(0);
              for (int i = 0; i < ${p}; i++) {
                vec4 a = ${L};
                vec4 b = ${W};

                value += (a.rrbb * b.rgrg);
                value += (a.ggaa * b.baba);
              }
              ${i}
              ${A}
              ${b.output} = value;
            }`;return{...e,output:{dims:u,type:n[0].type,textureType:2},shaderSource:se,hasMain:!0}},Qi=(r,e,n)=>{let t=Nv(e.length>2,n.activationCacheKey);return{...t,get:()=>Vv(r,t,e,n)}}});var gf,bf=B(()=>{"use strict";Zi();pf();Ws();gf=(r,e,n)=>{let t=e[0].dims,o=e[1].dims,i=Yn(t,o,n.dilations,n.pads,n.strides),s=r.run(ff(r,e[0],e[1],i,n),[e[0]]),a=r.reshapePacked(e[1],[o[0],o[1]*o[2]*o[3]]),u=e.length===3?[a,s,e[2]]:[a,s],l=r.run(Qi(r,u,n),u);return r.reshapePacked(l,i)}});var Wv,Hv,yf,Hs,qs=B(()=>{"use strict";Fe();Wv=r=>({name:"Im2Col",inputNames:["X"],inputTypes:[0],cacheHint:r}),Hv=(r,e,n,t,o,i)=>{let s=n.dims,a=t.dims,u=o.length,l=Hs(s,a,o,4),d=`
        const int XC = ${s[1]};
        const int XH = ${s[2]};
        const int XW = ${s[3]};
        const int KH = ${i.kernelShape[0]};
        const int KW = ${i.kernelShape[1]};
        const int dilationH = ${i.dilations[0]};
        const int dilationW = ${i.dilations[1]};
        const int strideH = ${i.strides[0]};
        const int strideW = ${i.strides[1]};
        const int padH = ${i.pads[0]};
        const int padW = ${i.pads[1]};
        const int KHKW = KH*KW;
        const int XCKHKW = XC * KHKW;
        const int outputChannels = 4;
        vec4 process(int indices[${u}]) {
          int b  = indices[0]; // batch size
          int oh = indices[1] * strideH - padH; //output height
          int ow = indices[2] * strideW - padW; //output width
          int p = indices[3] * outputChannels; //patch
          vec4 value = vec4(0.0);
          for(int i=0; i < outputChannels; ++i) {
            if(p < XCKHKW) {
              int patchC = p / KHKW;
              int patchH = (p - patchC*KHKW) / KW;
              int patchW = (p - patchC*KHKW) - patchH * KW;
              int xh2 = oh + patchH * dilationH;
              int xw2 = ow + patchW * dilationW;
              int x[${s.length}];
              x[0] = b;
              x[1] = patchC;
              x[2] = xh2;
              x[3] = xw2;
              if(xh2 >= 0 &&
                  xh2 < XH &&
                  xw2 >= 0 &&
                  xw2 < XW) {
                value[i] = _X(x);
              }
            }
            ++p;
          }
          return value;
        }
        `;return{...e,output:{dims:l,type:n.type,textureType:4},shaderSource:d}},yf=(r,e,n,t,o)=>{let i=Wv(o.cacheKey);return{...i,get:()=>Hv(r,i,e,n,t,o)}},Hs=(r,e,n,t=4)=>[n[0],n[2],n[3],Math.ceil(r[1]*e[2]*e[3]/t)]});var qv,jv,vf,wf=B(()=>{"use strict";Ke();lt();Fe();wn();qs();qv=(r,e)=>({name:"ConvDotProduct",inputNames:r?["Im2Col","K","B"]:["Im2Col","K"],inputTypes:r?[0,4,0]:[0,4],cacheKey:e.activationCacheKey}),jv=(r,e,n,t,o)=>{let i=n[0].dims,s=n[1].dims,a=[s[0],Math.ceil(i[1]*s[2]*s[3]/4)],u=Hs(i,s,t),[l,d]=r.calculateTextureWidthAndHeight(a,4),p=ie.computeStrides(u),[h,g]=r.calculateTextureWidthAndHeight(u,4),b=t.length,v=n.length<3?"0.0":"_B(b)",$=Math.ceil(i[1]*s[2]*s[3]/4),{activationFunction:T,applyActivation:x}=Sr(o),A=fe(r.session.backend.glContext.version),O=`
${T}
float process(int indices[${b}]) {
  int b[1];
  b[0] = indices[1];
  int im2col[4];
  im2col[0] = indices[0];
  im2col[1] = indices[2];
  im2col[2] = indices[3];
  int im2colOffset = im2col[0] * ${p[0]} + im2col[1] * ${p[1]} + im2col[2] * ${p[2]};
  int kernelOffset = indices[1] * ${a[1]};
  float value = ${v};
  for (int i = 0; i < ${$}; ++i) {
    vec2 im2colCoords = offsetToCoords(im2colOffset, ${h}, ${g});
    vec2 kernelCoords = offsetToCoords(kernelOffset, ${l}, ${d});
    value += dot(${A.texture2D}(Im2Col, im2colCoords), ${A.texture2D}(K, kernelCoords));
    ++im2colOffset;
    ++kernelOffset;
  }
  ${x}
  return value;
}`;return{...e,output:{dims:t,type:n[0].type,textureType:0},shaderSource:O}},vf=(r,e,n,t)=>{let o=qv(e.length>2,t);return{...o,get:()=>jv(r,o,e,n,t)}}});var Yn,js,Kv,Yv,Xv,Zv,Ks,Jv,Zi=B(()=>{"use strict";At();Ke();cf();bf();wf();wn();qs();Ji();Yn=(r,e,n,t,o)=>{let i=r[0],s=r.slice(2),a=s.length,u=e[0],d=e.slice(2).map((b,v)=>b+(b-1)*(n[v]-1)),h=s.map((b,v)=>b+t[v]+t[v+a]).map((b,v)=>Math.floor((b-d[v]+o[v])/o[v]));return[i,u].concat(...h)},js=(r,e,n)=>(Jv(e,n),Kv(r,e,n)),Kv=(r,e,n)=>{let t=Zv(n,e),o=r.session.pack,i=t.kernelShape[0]===1&&t.kernelShape[1]===1;return t.group>1?[r.run(df(r,e,t),e)]:i&&o?[Yv(r,e,t)]:o&&e[0].dims.length===4&&e[0].dims[0]===1&&!i?[gf(r,e,t)]:[Xv(r,e,t)]},Yv=(r,e,n)=>{let t=e[0].dims,o=e[1].dims,i=Yn(t,o,n.dilations,n.pads,n.strides),s=r.reshapeUnpacked(e[0],[t[1],t[2]*t[3]]),a=r.reshapeUnpacked(e[1],[o[0],o[1]]),u=e.length>2?[a,s,e[2]]:[a,s],l=r.run(Gs(u,n),u);return r.reshapeUnpacked(l,i)},Xv=(r,e,n)=>{let t=e[0].dims,o=e[1].dims,i=Yn(t,o,n.dilations,n.pads,n.strides),s=r.run(yf(r,e[0],e[1],i,n),[e[0]]),a=e.length===3?[s,e[1],e[2]]:[s,e[1]];return r.run(vf(r,e,i,n),a)},Zv=(r,e)=>{let n=r.kernelShape.slice();if(r.kernelShape.length===0)for(let i=2;i<e[1].dims.length;++i)n.push(e[1].dims[i]);let t=r.pads.slice();mn.adjustPadsBasedOnAutoPad(e[0].dims,r.strides,r.dilations,n,t,r.autoPad);let o=Object.assign({},r);return Object.assign(o,{kernelShape:n,pads:t,cacheKey:r.cacheKey}),o},Ks=r=>{let e=r.attributes,n=Kn(e),t=e.getString("auto_pad","NOTSET"),o=e.getInts("dilations",[1,1]),i=e.getInt("group",1),s=e.getInts("kernel_shape",[]),a=e.getInts("pads",[0,0,0,0]),u=e.getInts("strides",[1,1]);return Oe({autoPad:t,dilations:o,group:i,kernelShape:s,pads:a,strides:u,...n})},Jv=(r,e)=>{if(!r||r.length!==2&&r.length!==3)throw new Error("Conv requires 2 or 3 inputs");if(r[0].dims.length!==4||r[1].dims.length!==4)throw new Error("currently only support 2-dimensional conv");let n=r[0].dims[1],t=r[1].dims[1]*e.group;if(n!==t)throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");if(r.length===3&&(r[2].dims.length!==1||r[1].dims[0]!==r[2].dims[0]))throw new Error("invalid bias");let o=r[0].dims.length-2;if(e.dilations.length!==o)throw new Error(`dilations should be ${o}D`);if(e.strides.length!==o)throw new Error(`strides should be ${o}D`);if(e.pads.length!==o*2)throw new Error(`pads should be ${o*2}D`);if(e.kernelShape.length!==0&&e.kernelShape.length!==r[1].dims.length-2)throw new Error("invalid kernel shape");if(r[0].type!=="float32"||r[1].type!=="float32")throw new Error("Conv input(X,W) should be float tensor");if(r.length===3&&r[2].type!=="float32")throw new Error("Conv input(bias) should be float tensor")}});var Qv,ew,tw,xf,rw,nw,ow,iw,aw,sw,_f,uw,Tf=B(()=>{"use strict";At();lt();Fe();wn();Qv=(r,e,n,t,o,i)=>(r-1)*e+n+(t-1)*o+1-i,ew=(r,e,n,t,o)=>{let i=Math.floor(r/2);e==="SAME_UPPER"?(n[t]=i,n[o]=r-i):e==="SAME_LOWER"&&(n[t]=r-i,n[o]=i)},tw=(r,e,n,t,o,i,s,a)=>{let u=r.length-2,l=a.length===0;for(let d=0;d<u;++d){let p=l?r[d+2]*i[d]:a[d],h=Qv(r[d+2],i[d],o[d],e[d],n[d],p);ew(h,t,o,d,d+u),l&&a.push(i[d]*(r[d+2]-1)+s[d]+(e[d]-1)*n[d]+1-o[d]-o[d+u])}},xf=(r,e,n)=>(uw(e,n),rw(r,e,n)),rw=(r,e,n)=>{let t=sw(n,e);return[aw(r,e,t)]},nw=(r,e)=>({name:"ConvTranspose",inputNames:r?["X","W","B"]:["X","W"],inputTypes:r?[0,0,0]:[0,0],cacheHint:e}),ow=(r,e,n,t)=>{let i=e.length>2?"getB(output_channel)":"0.0",s=e[0].dims,a=e[1].dims,u=a[1],l=a[0]/t.group,d=[e[0].dims[0],e[1].dims[1]*t.group,...t.outputShape],p=fe(r.session.backend.glContext.version),{activationFunction:h,applyActivation:g}=Sr(t),b=`
  const ivec2 strides = ivec2(${t.strides[0]}, ${t.strides[1]});
  const ivec2 pads = ivec2(${t.pads[0]}, ${t.pads[1]});
  ${h}
  void main() {
    ivec4 coords = getOutputCoords();
    int batch = coords.x;
    int output_channel = coords.y;

    ivec2 loc = coords.zw + pads;

    int group_id = output_channel / ${u};
    int wOutChannel = output_channel - group_id * ${u};

    float value = ${i};
    for (int inChannelOffset = 0; inChannelOffset < ${l}; inChannelOffset++) {
      int input_channel = group_id * ${l} + inChannelOffset;
      for (int wWOff = 0; wWOff < ${a[2]}; wWOff++) {
        for (int wHOff = 0; wHOff < ${a[3]}; wHOff++) {
          ivec2 wOff = ivec2(wWOff * ${t.dilations[0]}, wHOff * ${t.dilations[1]});
          ivec2 wLoc = loc - wOff;
          ivec2 wLocIn = wLoc / strides;
          if (
            wLocIn * strides == wLoc &&
            wLocIn.x >= 0 && wLocIn.x < ${s[2]} &&
            wLocIn.y >= 0 && wLocIn.y < ${s[3]}
          ) {
            float xVal = getX(batch, input_channel, wLocIn.y, wLocIn.x);
            float wVal = getW(input_channel, wOutChannel, wHOff, wWOff);
            value += xVal * wVal;
          }
        }
      }
    }
    ${g}
    ${p.output} = vec4(value, .0, .0, .0);
  }
`;return{...n,output:{dims:d,type:e[0].type,textureType:0},shaderSource:b,hasMain:!0}},iw=(r,e,n)=>{let t=nw(e.length>2,n.cacheKey);return{...t,get:()=>ow(r,e,t,n)}},aw=(r,e,n)=>r.run(iw(r,e,n),e),sw=(r,e)=>{let n=r.kernelShape.slice();if(r.kernelShape.length===0)for(let a=2;a<e[1].dims.length;++a)n.push(e[1].dims[a]);let t=r.pads.slice(),o=r.outputShape.slice(),i=e[0].dims;tw(i,n,r.dilations,r.autoPad,t,r.strides,r.outputPadding,o);let s=Object.assign({},r);return Object.assign(s,{kernelShape:n,pads:t,outputShape:o,cacheKey:r.cacheKey}),s},_f=r=>{let e=r.attributes,n=Kn(e),t=e.getString("auto_pad","NOTSET"),o=e.getInts("dilations",[1,1]),i=e.getInt("group",1),s=e.getInts("kernel_shape",[]),a=e.getInts("output_padding",[0,0]),u=e.getInts("output_shape",[]),l=e.getInts("pads",[0,0,0,0]),d=e.getInts("strides",[1,1]);return Oe({autoPad:t,dilations:o,group:i,kernelShape:s,outputPadding:a,outputShape:u,pads:l,strides:d,...n})},uw=(r,e)=>{if(!r||r.length!==2&&r.length!==3)throw new Error("Conv requires 2 or 3 inputs");if(r[0].dims.length!==4||r[1].dims.length!==4)throw new Error("currently only support 2-dimensional conv");let n=r[0].dims[1],t=r[1].dims[0];if(n!==t)throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");let o=r[1].dims[1]*e.group;if(r.length===3&&(r[2].dims.length!==1||r[2].dims[0]!==o))throw new Error("invalid bias");let i=r[0].dims.length-2;if(e.dilations.length!==i)throw new Error(`dilations should be ${i}D`);if(e.strides.length!==i)throw new Error(`strides should be ${i}D`);if(e.pads.length!==i*2)throw new Error(`pads should be ${i*2}D`);if(e.outputPadding.length!==i)throw new Error(`output_padding should be ${i}D`);if(e.kernelShape.length!==0&&e.kernelShape.length!==r[1].dims.length-2)throw new Error("invalid kernel shape");if(e.outputShape.length!==0&&e.outputShape.length!==r[0].dims.length-2)throw new Error("invalid output shape");if(r[0].type!=="float32"||r[1].type!=="float32")throw new Error("ConvTranspose input(X,W) should be float tensor");if(r.length===3&&r[2].type!=="float32")throw new Error("ConvTranspose input(bias) should be float tensor")}});var $f,xn,Sf,lw,If,dw,cw,fw,ea=B(()=>{"use strict";At();Ke();Fe();$f={name:"Transpose",inputNames:["A"],inputTypes:[0]},xn=(r,e,n)=>(fw(e),[r.run({...$f,cacheHint:n.cacheKey,get:()=>lw(r,e[0],n.perm)},e)]),Sf=r=>Oe({perm:r.attributes.getInts("perm",[])}),lw=(r,e,n)=>{let t=e.dims;n=If(t,n);let o=dw(t,n),i=t.length,s=`
      ${cw("perm",n,i)}
      float process(int indices[${i}]) {
        int a[${i}];
        perm(a, indices);
        return _A(a);
      }`;return{...$f,output:{dims:o,type:e.type,textureType:0},shaderSource:s}},If=(r,e)=>(e&&e.length!==r.length&&(e=[...r.keys()].reverse()),e),dw=(r,e)=>(e=If(r,e),ie.sortBasedOnPerm(r,e)),cw=(r,e,n)=>{let t=[];t.push(`void ${r}(out int a[${n}], int src[${n}]) {`);for(let o=0;o<n;++o)t.push(`	a[${e[o]}]=src[${o}];`);return t.push("	}"),t.join(`
`)},fw=r=>{if(!r||r.length!==1)throw new Error("Transpose requires 1 input.");if(r[0].type!=="float32"&&r[0].type!=="float64")throw new Error("input should be float tensor")}});var Af,Of,pw,Ef=B(()=>{"use strict";ea();Af=(r,e,n)=>{pw(e);let t=n.blocksize,o=t*t,i=n.mode==="DCR"?[0,3,4,1,5,2]:[0,1,4,2,5,3],s=n.mode==="DCR"?[e[0].dims[0],t,t,e[0].dims[1]/o,e[0].dims[2],e[0].dims[3]]:[e[0].dims[0],e[0].dims[1]/o,t,t,e[0].dims[2],e[0].dims[3]],a=r.reshapeUnpacked(e[0],s),u={perm:i,cacheKey:`${i}`},[l]=xn(r,[a],u),d=[e[0].dims[0],e[0].dims[1]/o,e[0].dims[2]*t,e[0].dims[3]*t];return[r.reshapeUnpacked(l,d)]},Of=r=>{let e=r.attributes.getInt("blocksize");if(e<1)throw new Error(`blocksize must be >= 1, but got : ${e} for DepthToSpace`);let n=r.attributes.getString("mode","DCR");if(n!=="DCR"&&n!=="CRD")throw new Error(`unrecognized mode: ${n} for DepthToSpace`);return{mode:n,blocksize:e}},pw=r=>{if(r.length!==1)throw new Error(`DepthToSpace expect 1 inputs, but got ${r.length}`);if(r[0].type==="string"||r[0].dims.length!==4)throw new TypeError("DepthToSpace input should be a 4-D numeric tensor")}});var Cf,Pf,hw,kf=B(()=>{"use strict";Ke();Cf=(r,e,n)=>{hw(e,n);let t=ie.flattenShape(e[0].dims,n);return[r.reshapeUnpacked(e[0],t)]},Pf=r=>r.attributes.getInt("axis",1),hw=(r,e)=>{if(!r||r.length!==1)throw new Error("Flatten requires 1 input.");let n=r[0].dims.length;if(n===0)throw new Error("scalar tensor is not supported.");if(e<-n||e>n)throw new Error("Invalid axis");if(r[0].type==="string")throw new Error("string tensor is not supported.")}});var Kr,No=B(()=>{"use strict";Kr=["float32","float64","int32","int16","int8","uint16","uint32","uint8"]});var Df,Bf,mw,gw,bw,yw,Rf=B(()=>{"use strict";At();No();Ke();Fe();Df=(r,e,n)=>(yw(e,n.axis),[r.run(bw(r,e,n),e)]),Bf=r=>Oe({axis:r.attributes.getInt("axis",0)}),mw={name:"Gather",inputNames:["A","B"],inputTypes:[0,0]},gw=(r,e,n,t)=>{let o=n[0].dims.slice(),i=n[1].dims.slice(),s=new Array(o.length+i.length-1);t=ie.normalizeAxis(t,o.length);let a=[];for(let h=0;h<s.length;h++)h<t?(s[h]=o[h],a.push(`inputIdx[${h}] = outputIdx[${h}];`)):h<t+i.length?(s[h]=i[h-t],a.push(`indexDataIdx[${h-t}] = outputIdx[${h}];`)):(s[h]=o[h-i.length+1],a.push(`inputIdx[${h-i.length+1}] = outputIdx[${h}];`));let u=s.length||1,l=o.length,d=i.length||1,p=`
      float process(int outputIdx[${u}]) {
        int inputIdx[${l}];
        int indexDataIdx[${d}];
        indexDataIdx[0] = 0;
        ${a.join(`
        `)}
        int idx = int(_B(indexDataIdx));
        inputIdx[${t}] = idx < 0 ? idx + ${o[t]} : idx;
        return _A(inputIdx);
      }`;return{...e,output:{dims:s,type:n[0].type,textureType:0},shaderSource:p}},bw=(r,e,n)=>{let t={...mw,cacheHint:n.cacheKey};return{...t,get:()=>gw(r,t,e,n.axis)}},yw=(r,e)=>{if(!r||r.length!==2)throw new Error("Gather requires 2 inputs.");let n=r[0].dims.length;if(n<1)throw new Error("Invalid input shape.");if(e<-n||e>n-1)throw new Error("Invalid axis.");if(Kr.indexOf(r[0].type)===-1)throw new Error("Invaid input type.");if(r[1].type!=="int32"&&r[1].type!=="int16")throw new Error("Invaid input type.")}});var Ys,zf,Mf,Lf,vw,ww,xw,Nf=B(()=>{"use strict";At();Ke();Fe();Ys=(r,e,n)=>(xw(e,n),[r.run(vw(e,n),e)]),zf=(r,e)=>{let n=r.attributes.getInt("transA",0)!==0,t=r.attributes.getInt("transB",0)!==0,o=r.attributes.getFloat("alpha",1),i=r.attributes.getFloat("beta",1);return Oe({transA:n,transB:t,alpha:o,beta:i,isOptionalC:e})},Mf=r=>zf(r,!1),Lf=r=>zf(r,!0),vw=(r,e)=>{let n={name:"Gemm",inputNames:r.length===3?["A","B","C"]:["A","B"],inputTypes:r.length===3?[0,0,0]:[0,0],key:e.cacheKey};return{...n,get:()=>ww(n,r,e)}},ww=(r,e,n)=>{let t=e[0].dims.slice(),o=e[1].dims.slice(),[i,s]=Ui.getShapeOfGemmResult(t,n.transA,o,n.transB,e.length===3?e[2].dims:void 0),a=[i,s];if(!a)throw new Error("Can't use gemm on the given tensors");let u=t[t.length-1],l="";n.transA&&(u=t[0]),n.transA&&n.transB?l="value += _A_T(a) * _B_T(b);":n.transA&&!n.transB?l="value += _A_T(a) * _B(b);":!n.transA&&n.transB?l="value += _A(a) * _B_T(b);":!n.transA&&!n.transB&&(l="value += _A(a) * _B(b);");let d=a.length,p=e.length===3?`int c[${e[2].dims.length}];`:"",h=e.length===3?"bcastIndices_C(indices, c);":"",g=e.length===3?"value += beta * _C(c);":"",b=`
      float process(int indices[${d}]) {
          int a[${d}];
          int b[${d}];
          ${p}

          copyVec(indices, a);
          copyVec(indices, b);
          ${h}

          float value = 0.0;
          for (int k=0; k<${u}; ++k) {
              a[${d-1}] = k;
              b[${d-2}] = k;
              ${l}
          }

          value = value * alpha;
          ${g}
          return value;
      }`;return{...r,output:{dims:a,type:e[0].type,textureType:0},variables:[{name:"alpha",type:"float",data:n.alpha},{name:"beta",type:"float",data:n.beta}],shaderSource:b}},xw=(r,e)=>{if(!r)throw new Error("Input is missing");if(e.isOptionalC&&(r.length<2||r.length>3))throw new Error("Invaid input shape.");if(!e.isOptionalC&&r.length!==3)throw new Error("Gemm requires 3 inputs");if(r.length===3&&r[2].dims.length!==1&&r[2].dims.length!==2)throw new Error("Invalid input shape of C");if(r[0].type!=="float32"&&r[0].type!=="float64"||r[1].type!=="float32"&&r[1].type!=="float64"||r.length===3&&r[2].type!=="float32"&&r[2].type!=="float64")throw new Error("Invalid input type.");if(r[0].type!==r[1].type||r.length===3&&r[0].type!==r[2].type)throw new Error("Input types are mismatched")}});var Vf,Ff,_w,Tw,$w,Sw,Iw,Gf=B(()=>{"use strict";At();Fe();Vf=(r,e,n)=>(Iw(e),[r.run($w(r,e,n),e)]),Ff=r=>{let e=r.attributes.getFloat("scale"),n=r.attributes.getFloats("bias");return Oe({scale:e,bias:n})},_w={name:"ImageScaler",inputNames:["X"],inputTypes:[0]},Tw=(r,e,n,t)=>{let o=n[0].dims.slice(),i=o.length,a=`
      ${Sw(t.bias.length)}
      float process(int indices[${i}]) {
        return _X(indices) * scale + getBias(bias, indices[1]);
      }`;return{...e,output:{dims:o,type:n[0].type,textureType:0},variables:[{name:"bias",type:"float",arrayLength:t.bias.length,data:t.bias},{name:"scale",type:"float",data:t.scale}],shaderSource:a}},$w=(r,e,n)=>{let t={..._w,cacheHint:n.cacheKey};return{...t,get:()=>Tw(r,t,e,n)}},Sw=r=>{let e=[`float getBias(float bias[${r}], int channel) {`];for(let n=0;n<r;++n)n===0?e.push(`	if (channel == ${n}) { return bias[${n}]; }`):n===r-1?e.push(`	else { return bias[${n}]; }`):e.push(`	else if (channel == ${n}) { return bias[${n}]; }`);return e.push("	}"),e.join(`
`)},Iw=r=>{if(!r||r.length!==1)throw new Error("ImageScaler requires 1 input.");if(r[0].dims.length!==4)throw new Error("Invalid input shape.");if(r[0].type!=="float32"&&r[0].type!=="float64")throw new Error("Invalid input type.")}});var Wf,Hf,Uf,Aw,Ow,Ew,Cw,Pw,kw,qf=B(()=>{"use strict";lt();Fe();Wf=(r,e,n)=>{kw(e);let t=r.run(Ow(e[0]),e);return[r.run(Pw(r,e[0],n,t.dims),[e[0],t,e[1],e[2]])]},Hf=r=>r.attributes.getFloat("epsilon",1e-5),Uf={name:"InstanceNormalization_MeanAndVariance",inputNames:["X"],inputTypes:[0]},Aw=(r,e)=>{let n=e.dims.slice(),t=n[1],o=n[2]*n[3],i=[n[0],t],s=`
      vec4 process(int[2] indices) {
        vec4 v = vec4(0.0);
        int a[4];
        a[0] = indices[0];
        a[1] = indices[1];
        float temp = 0.0;
        for(int a2=0; a2<${n[2]}; a2++) {
          a[2] = a2;
          for(int a3=0; a3<${n[3]}; a3++) {
            a[3] = a3;
            float x = _X(a);
            temp += x;
          }
        }
        float mean = temp / float(${o});
        temp = 0.0;
        for(int a2=0; a2<${n[2]}; a2++) {
          a[2] = a2;
          for(int a3=0; a3<${n[3]}; a3++) {
            a[3] = a3;
            float x = _X(a);
            temp += (x - mean) * (x - mean);
          }
        }
        v.r = mean;
        v.g = temp / float(${o});

        return v;
      }`;return{...r,output:{dims:i,type:e.type,textureType:4},shaderSource:s}},Ow=r=>({...Uf,get:()=>Aw(Uf,r)}),Ew={name:"InstanceNormalization_ComputeOutput",inputNames:["X","MeanAndVariance","Scale","B"],inputTypes:[0,4,0,0]},Cw=(r,e,n,t,o)=>{let i=fe(r.session.backend.glContext.version),[s,a]=r.calculateTextureWidthAndHeight(o,4),[u,l]=[s/4,a],d=`
      vec4 get_MeanAndVariance(int[2] mv) {
        int offset = indicesToOffset_MeanAndVariance(mv);
        vec2 coords = offsetToCoords(offset, ${u}, ${l});
        return ${i.texture2D}(MeanAndVariance, coords);
      }

      float process(int[4] indices) {
        int mv[2];
        mv[0] = indices[0];
        mv[1] = indices[1];
        vec4 mean_and_variance = get_MeanAndVariance(mv);
        float mean = mean_and_variance.r;
        float variance = mean_and_variance.g;

        int sb[1];
        sb[0] = indices[1];
        float scale = _Scale(sb);
        float b = _B(sb);

        return scale * (_X(indices) - mean) / sqrt(variance + epsilon) + b;
      }`;return{...e,output:{dims:n.dims,type:n.type,textureType:0},variables:[{name:"epsilon",type:"float",data:t}],shaderSource:d}},Pw=(r,e,n,t)=>{let o={...Ew,cacheHint:`${n}`};return{...o,get:()=>Cw(r,o,e,n,t)}},kw=r=>{if(!r||r.length!==3)throw new Error("InstanceNormalization requires 3 inputs.");let e=r[0],n=r[1],t=r[2];if(e.dims.length<3||n.dims.length!==1||t.dims.length!==1)throw new Error("Invalid input shape.");if(n.dims[0]!==e.dims[1]||t.dims[0]!==e.dims[1])throw new Error("Input shapes are mismatched.");if(e.type!=="float32"&&e.type!=="float64"||n.type!=="float32"&&n.type!=="float64"||t.type!=="float32"&&t.type!=="float64")throw new Error("Invalid input type.");if(r[0].dims.length!==4)throw new Error("Only support 4-D input shape.")}});function Dw(r,e){let n=r[0].dims[1],t=r[0].dims.length,o=-Math.floor((e.size-1)/2),i=Math.ceil((e.size-1)/2),s=`float(${e.alpha}) / float(${e.size})`,a=`float(${e.bias})`,u=`float(${e.beta})`,l=`
    float process(int indices[${t}]) {
        int c = indices[1];
        float x = _X(indices);
        float square_sum = 0.0;

        for (int i = ${o}; i <= ${i}; i++) {
          int idx = c + i;
          if (c >= 0 && c < ${n}) {
            indices[1] = idx;
            float j = _X(indices);
            square_sum += j * j;
          }
        }
        return x / pow(${a} + ${s} * square_sum, ${u});
    }`;return{...Yf,cacheHint:e.cacheKey,output:{dims:r[0].dims,type:r[0].type,textureType:0},shaderSource:l}}function Bw(r,e){return{...Yf,cacheHint:e.cacheKey,get:()=>Dw(r,e)}}var jf,Kf,Yf,Rw,Xf=B(()=>{"use strict";At();Fe();jf=(r,e,n)=>(Rw(e),[r.run(Bw(e,n),e)]),Kf=r=>{let e=r.attributes.getFloat("alpha",1e-4),n=r.attributes.getFloat("beta",.75),t=r.attributes.getFloat("bias",1),o=r.attributes.getInt("size");return Oe({alpha:e,beta:n,bias:t,size:o})},Yf={name:"LRN",inputNames:["X"],inputTypes:[0]};Rw=r=>{if(!r||r.length!==1)throw new Error("LRN requires 1 input.");if(r[0].dims.length!==4)throw new Error('currently only support LRN for input with "NCHW" format');if(r[0].type!=="float32")throw new Error("input should be float type")}});var zw,Xs,Zf,Jf,Qf,Mw,Lw,Nw,Vw,Fw,Gw,Uw,Ww,ep=B(()=>{"use strict";At();Ke();lt();Fe();zw={name:"Pad",inputNames:["A"],inputTypes:[0]},Xs=(r,e,n)=>(Nw(e),[r.run({...zw,cacheHint:n.cacheKey,get:()=>Lw(r,e[0],n)},e)]),Zf=r=>{let e=r.attributes.getString("mode","constant"),n=r.attributes.getFloat("value",0),t=r.attributes.getInts("pads");return Oe({mode:e,value:n,pads:t})},Jf=(r,e,n)=>{Vw(e);let t=Mw(r,e,n);return Xs(r,[e[0]],t)},Qf=r=>r.attributes.getString("mode","constant"),Mw=(r,e,n)=>{if(!r.session.isInitializer(e[1].dataId)||e.length>=3&&!r.session.isInitializer(e[2].dataId))throw new Error("dynamic pad attributes are not allowed");let t=Array.from(e[1].integerData),o=e.length>=3?e[2].floatData[0]:0;return Oe({mode:n,pads:t,value:o})},Lw=(r,e,n)=>{let t=ie.padShape(e.dims.slice(),n.pads),o=t.length,s=`
      ${Fw(r,e,n)}
      float process(int[${o}] indices) {
          return padA(indices);
      }`;return{name:"Pad",inputNames:["A"],inputTypes:[0],output:{dims:t,type:e.type,textureType:0},shaderSource:s}},Nw=r=>{if(!r||r.length!==1)throw new Error("Pad requires 1 input");if(r[0].type!=="float32"&&r[0].type!=="float64")throw new Error("Invalid input type.")},Vw=r=>{if(!r||r.length!==2&&r.length!==3)throw new Error("Pad requires 2 or 3 inputs");if(r[1].type!=="int32")throw new Error("Invalid input type.");if(r.length>=3&&r[2].type==="string")throw new Error("Invalid input type.")},Fw=(r,e,n)=>{let t=fe(r.session.backend.glContext.version),[o,i]=r.calculateTextureWidthAndHeight(e.dims,0),s=ie.computeStrides(e.dims);switch(n.mode){case"constant":return Gw(t,e.dims,s,o,i,n.pads,n.value);case"reflect":return Uw(t,e.dims,s,o,i,n.pads);case"edge":return Ww(t,e.dims,s,o,i,n.pads);default:throw new Error("Invalid mode")}},Gw=(r,e,n,t,o,i,s)=>{let a=e.length,u="";for(let l=a-1;l>=0;--l)u+=`
        k = m[${l}] - ${i[l]};
        if (k < 0)  return constant;
        if (k >= ${e[l]}) return constant;
        offset += k * ${n[l]};
        `;return`
      float padA(int m[${a}]) {
        const float constant = float(${s});
        int offset = 0;
        int k = 0;
        ${u}
        vec2 coords = offsetToCoords(offset, ${t}, ${o});
        float value = getColorAsFloat(${r.texture2D}(A, coords));
        return value;
      }
      `},Uw=(r,e,n,t,o,i)=>{let s=e.length,a="";for(let u=s-1;u>=0;--u)a+=`
        k = m[${u}] - ${i[u]};
        if (k < 0) { k = -k; }
        {
          const int _2n_1 = ${2*(e[u]-1)};
          k = int( mod( float(k), float(_2n_1) ) ) ;
          if(k >= ${e[u]}) { k = _2n_1 - k; }
        }
        offset += k * ${n[u]};
        `;return`
      float padA(int m[${s}]) {
        int offset = 0;
        int k = 0;
        ${a}
        vec2 coords = offsetToCoords(offset, ${t}, ${o});
        float value = getColorAsFloat(${r.texture2D}(A, coords));
        return value;
      }
      `},Ww=(r,e,n,t,o,i)=>{let s=e.length,a="";for(let u=s-1;u>=0;--u)a+=`
        k = m[${u}] - ${i[u]};
        if (k < 0)  k = 0;
        if (k >= ${e[u]}) k = ${e[u]-1};
        offset += k * ${n[u]};
      `;return`
      float padA(int m[${s}]) {
        int offset = 0;
        int k = 0;
        ${a}
        vec2 coords = offsetToCoords(offset, ${t}, ${o});
        float value = getColorAsFloat(${r.texture2D}(A, coords));
        return value;
      }
      `}});var rp,np,op,ip,ap,sp,up,lp,dp,Hw,tp,cp,ra,fp,ta,qw,pp=B(()=>{"use strict";At();Ke();Fe();rp=(r,e,n)=>{ra(e);let t={name:"AveragePool",inputNames:["X"],inputTypes:[0],cacheHint:n.cacheKey};return[r.run({...t,get:()=>op(e,t,!1,n)},e)]},np=r=>{let e=r.attributes.getString("auto_pad","NOTSET"),n=r.attributes.getInt("ceil_mode",0),t=r.attributes.getInt("count_include_pad",0)!==0,o=r.attributes.getInts("kernel_shape"),i=r.attributes.getInts("strides",[]),s=r.attributes.getInts("pads",[]);if(n!==0)throw new Error("using ceil() in shape computation is not yet supported for AveragePool");return Oe({autoPad:e,ceilMode:n,countIncludePad:t,kernelShape:o,strides:i,pads:s})},op=(r,e,n,t)=>{let[o,i]=dp(r,t,n),s=ie.size(o.kernelShape),a="value += _X(x);",u="";o.countIncludePad?u+=`value /= float(${s});`:u+=`value /= float(${s} - pad);`;let d=`
        ${fp(r[0].dims,o,a,u,"0.0")}
      `;return{...e,output:{dims:i,type:r[0].type,textureType:0},shaderSource:d}},ip=(r,e,n)=>{ra(e);let t={name:"GlobalAveragePool",inputNames:["X"],inputTypes:[0],cacheHint:`${n.countIncludePad}`};return[r.run({...t,get:()=>op(e,t,!0,n)},e)]},ap=r=>{let e=r.attributes.getInt("count_include_pad",0)!==0;return Oe({autoPad:"",ceilMode:0,countIncludePad:e,kernelShape:[],strides:[],pads:[]})},sp=(r,e,n)=>{ra(e);let t={name:"MaxPool",inputNames:["X"],inputTypes:[0],cacheHint:n.cacheKey};return[r.run({...t,get:()=>lp(e,t,!1,n)},e)]},up=r=>{let e=r.attributes.getString("auto_pad","NOTSET"),n=r.attributes.getInt("ceil_mode",0),t=r.attributes.getInts("kernel_shape"),o=r.attributes.getInts("strides",[]),i=r.attributes.getInts("pads",[]),s=r.attributes.getInt("storage_order",0),a=r.attributes.getInts("dilations",[]);if(s!==0)throw new Error("column major storage order is not yet supported for MaxPool");if(n!==0)throw new Error("using ceil() in shape computation is not yet supported for MaxPool");return Oe({autoPad:e,ceilMode:n,countIncludePad:!1,kernelShape:t,strides:o,pads:i,storageOrder:s,dilations:a})},lp=(r,e,n,t)=>{let[o,i]=dp(r,t,n),s=`
      value = max(_X(x), value);
    `,a="",l=`
      ${fp(r[0].dims,o,s,a,"-1e5")}
    `;return{...e,output:{dims:i,type:r[0].type,textureType:0},shaderSource:l}},dp=(r,e,n)=>{let t=r[0].dims.slice(),o=Object.hasOwnProperty.call(e,"dilations"),i=e.kernelShape.slice(),s=e.strides.slice(),a=o?e.dilations.slice():[],u=e.pads.slice();mn.adjustPoolAttributes(n,t,i,s,a,u);let l=mn.computePoolOutputShape(n,t,s,a,i,u,e.autoPad),d=Object.assign({},e);return o?Object.assign(d,{kernelShape:i,strides:s,pads:u,dilations:a,cacheKey:e.cacheKey}):Object.assign(d,{kernelShape:i,strides:s,pads:u,cacheKey:e.cacheKey}),[d,l]},Hw={autoPad:"",ceilMode:0,countIncludePad:!1,kernelShape:[],strides:[],pads:[],storageOrder:0,dilations:[],cacheKey:""},tp={name:"GlobalMaxPool",inputNames:["X"],inputTypes:[0]},cp=(r,e)=>(ra(e),[r.run({...tp,get:()=>lp(e,tp,!0,Hw)},e)]),ra=r=>{if(!r||r.length!==1)throw new Error("Pool ops requires 1 input.");if(r[0].type!=="float32"&&r[0].type!=="float64")throw new Error("Invalid input type.")},fp=(r,e,n,t,o)=>{let i=r.length;if(e.kernelShape.length<=2){let s=e.kernelShape[e.kernelShape.length-1],a=e.strides[e.strides.length-1],u=e.pads[e.pads.length/2-1],l=e.pads[e.pads.length-1],d=r[i-1],p="",h="",g="";if(u+l!==0?p=`
          for (int i = 0; i < ${s}; i++) {
            x[${i} - 1] = indices[${i} - 1] * ${a} - ${u} + i;
            if (x[${i} - 1] < 0 || x[${i} - 1] >= ${d}) {
              pad++;
              continue;
            }
            ${n}
          }`:p=`
          for (int i = 0; i < ${s}; i++) {
            x[${i} - 1] = indices[${i} - 1] * ${a} - ${u} + i;
            ${n}
          }`,e.kernelShape.length===2){let v=e.kernelShape[e.kernelShape.length-2],$=e.strides[e.strides.length-2],T=e.pads[e.pads.length/2-2],x=e.pads[e.pads.length-2],A=r[i-2];T+x!==0?h=`
            for (int j = 0; j < ${v}; j++) {
              x[${i} - 2] = indices[${i} - 2] * ${$} - ${T} + j;
              if (x[${i} - 2] < 0 || x[${i} - 2] >= ${A}) {
                pad+= ${s};
                continue;
              }
          `:h=`
            for (int j = 0; j < ${v}; j++) {
              x[${i} - 2] = indices[${i} - 2] * ${$} - ${T} + j;
            `,g=`
          }
        `}return`
        float process(int indices[${i}]) {
          int x[${i}];
          copyVec(indices, x);

          float value = ${o};
          int pad = 0;
          ${h}
          ${p}
          ${g}
          ${t}
          return value;
        }
      `}else{let s=ie.size(e.kernelShape),a=ie.computeStrides(e.kernelShape),u=a.length,l=e.pads.length,d=qw(u),p=ta(r,"inputDims"),h=ta(e.pads,"pads"),g=ta(a,"kernelStrides"),b=ta(e.strides,"strides"),v=e.pads.reduce((x,A)=>x+A),$="";return v?$=`
            if (x[j] >= inputDims[j] || x[j] < 0) {
              pad++;
              isPad = true;
              break;
            }
          }
          if (!isPad) {
            ${n}
          }`:$=`
          }
          ${n}
        `,`
        ${d}
        float process(int indices[${i}]) {
          int x[${i}];
          copyVec(indices, x);
          int offset[${u}];
          int pads[${l}];
          int inputDims[${i}];
          int kernelStrides[${u}];
          int strides[${u}];
          ${h}
          ${p}
          ${b}
          ${g}

          float value = ${o};
          int pad = 0;
          bool isPad = false;
          for (int i = 0; i < ${s}; i++) {
            offsetToIndices(i, kernelStrides, offset);
            isPad = false;
            for (int j = ${i} - ${u}; j < ${i}; j++) {
              x[j] = indices[j] * strides[j - ${i} + ${u}]
                + offset[j - ${i} + ${u}] - pads[j - 2];
              ${$}
          }
          ${t}

          return value;
        }
      `}},ta=(r,e)=>{let n="";for(let t=0;t<r.length;t++)n+=`
      ${e}[${t}] = ${r[t]};
    `;return n},qw=r=>`
  void offsetToIndices(int offset, int[${r}] strides, out int[${r}] indices) {
    if (${r} == 0) {
      return;
    }
    for (int i = 0; i < ${r} - 1; ++i) {
      indices[i] = offset / strides[i];
      offset -= indices[i] * strides[i];
    }
    indices[${r} - 1] = offset;
  }`});var _n,Yr,jw,Kw,hp,mp,gp,bp,yp,vp,wp,xp=B(()=>{"use strict";At();No();Ke();Fe();_n=(r,e,n,t,o)=>{Kw(e);let i={name:t,inputNames:["A"],inputTypes:[0]};return[r.run({...i,cacheHint:n.cacheKey,get:()=>jw(r,e,n,t,o,i)},e)]},Yr=r=>{let e=r.attributes.getInts("axes",[]),n=r.attributes.getInt("keepdims",1)===1;return Oe({axes:e,keepDims:n})},jw=(r,e,n,t,o,i)=>{let s=[],a=e[0].dims.length||1,u=[],l=ie.normalizeAxes(n.axes,e[0].dims.length),d=o(e,l),p=d[1];for(let b=0;b<e[0].dims.length;b++)l.indexOf(b)>=0||l.length===0?(n.keepDims&&s.push(1),p=`
          for(int j${b} = 0; j${b} < ${e[0].dims[b]}; j${b}++) {
            inputIdx[${b}] = j${b};
            ${p}
          }`):(u.push(`inputIdx[${b}] = outputIdx[${s.length}];`),s.push(e[0].dims[b]));let g=`
      float process(int outputIdx[${s.length||1}]) {
        float value;                 // final result
        int inputIdx[${a}];      // addressing input data
        ${u.join(`
`)}
        ${d[0]}       // init ops for reduce max/min
        ${p}
        ${d[2]}       // final computation for reduce mean
        return value;
      }`;return{...i,output:{dims:s,type:e[0].type,textureType:0},shaderSource:g}},Kw=r=>{if(!r||r.length!==1)throw new Error("Reduce op requires 1 input.");if(Kr.indexOf(r[0].type)===-1)throw new Error("Invalid input type.")},hp=(r,e,n)=>_n(r,e,n,"ReduceSum",()=>["value = 0.0;","value += _A(inputIdx);",""]),mp=(r,e,n)=>_n(r,e,n,"ReduceMean",(o,i)=>{let s=1;for(let a=0;a<o[0].dims.length;a++)(i.indexOf(a)>=0||i.length===0)&&(s*=o[0].dims[a]);return["value = 0.0;","value += _A(inputIdx);",`value /= ${s}.;`]}),gp=(r,e,n)=>_n(r,e,n,"ReduceMax",(o,i)=>{let s=[];for(let a=0;a<o[0].dims.length;a++)(i.indexOf(a)>=0||i.length===0)&&s.push(`inputIdx[${a}] = 0;`);return[`${s.join(`
`)}
value = _A(inputIdx);`,"value = max(value, _A(inputIdx));",""]}),bp=(r,e,n)=>_n(r,e,n,"ReduceMin",(o,i)=>{let s=[];for(let a=0;a<o[0].dims.length;a++)(i.indexOf(a)>=0||i.length===0)&&s.push(`inputIdx[${a}] = 0;`);return[`${s.join(`
`)}
value = _A(inputIdx);`,"value = min(value, _A(inputIdx));",""]}),yp=(r,e,n)=>_n(r,e,n,"ReduceProd",()=>["value = 1.0;","value *= _A(inputIdx);",""]),vp=(r,e,n)=>_n(r,e,n,"ReduceLogSum",()=>["value = 0.0;","value += _A(inputIdx);","value = log(value);"]),wp=(r,e,n)=>_n(r,e,n,"ReduceLogSumSquare",()=>["float t; value = 0.0;","t = _A(inputIdx); value += t * t;",""])});var _p,Tp=B(()=>{"use strict";Ke();_p=(r,e)=>{let n=ie.calculateReshapedDims(e[0].dims,e[1].integerData);return r.session.pack?[r.reshapePacked(e[0],n)]:[r.reshapeUnpacked(e[0],n)]}});var $p,Zs,Sp,Ip,Vo,Yw,Js,na,Qs=B(()=>{"use strict";At();lt();Fe();$p={name:"Upsample",inputNames:["X"],inputTypes:[0]},Zs=(r,e,n)=>(Js(e,n),[r.run({...$p,cacheHint:n.cacheKey,get:()=>Yw(r,e,n)},e)]),Sp=r=>Vo(r,7),Ip=r=>Vo(r,9),Vo=(r,e)=>{let n=e>=10,t=r.attributes.getString("mode","nearest");if(t!=="nearest"&&t!=="linear"&&(e<11||t!=="cubic"))throw new Error(`unrecognized mode: ${t}`);let o=[];e<9&&(o=r.attributes.getFloats("scales"),na(o,t,n));let i=r.attributes.getFloat("extrapolation_value",0),s=e>10?r.attributes.getString("coordinate_transformation_mode","half_pixel"):"asymmetric";if(["asymmetric","pytorch_half_pixel","tf_half_pixel_for_nn","align_corners","tf_crop_and_resize","half_pixel"].indexOf(s)===-1)throw new Error(`coordinate_transform_mode '${s}' is not supported`);let a=s==="tf_crop_and_resize",u=a,l=t==="nearest"&&e>=11?r.attributes.getString("nearest_mode","round_prefer_floor"):"";if(["round_prefer_floor","round_prefer_ceil","floor","ceil",""].indexOf(l)===-1)throw new Error(`nearest_mode '${l}' is not supported`);let d=r.attributes.getFloat("cubic_coeff_a",-.75),p=r.attributes.getInt("exclude_outside",0)!==0;if(p&&t!=="cubic")throw new Error("exclude_outside can be set to 1 only when mode is CUBIC.");let h=e<11?!0:t==="nearest"&&s==="asymmetric"&&l==="floor",g=0,b=0,v=0;return e>10?r.inputs.length>2?(g=1,b=2,v=3):(b=1,v=2):e===9&&(b=1),Oe({opset:e,isResize:n,mode:t,scales:o,extrapolationValue:i,coordinateTransformMode:s,useExtrapolation:u,needRoiInput:a,nearestMode:l,cubicCoefficientA:d,excludeOutside:p,useNearest2xOptimization:h,roiInputIdx:g,scalesInputIdx:b,sizesInputIdx:v})},Yw=(r,e,n)=>{let t=fe(r.session.backend.glContext.version),[o,i]=r.calculateTextureWidthAndHeight(e[0].dims,0),s=e[0].dims.map((v,$)=>Math.floor(v*n.scales[$])),[a,u]=r.calculateTextureWidthAndHeight(s,0),l=s.length,d=new Array(l),p=new Array(l),h=`
      int output_pitches[${l}];
      int input_pitches[${l}];
      `;for(let v=l-1;v>=0;v--)d[v]=v===l-1?1:d[v+1]*s[v+1],p[v]=v===l-1?1:p[v+1]*e[0].dims[v+1],h+=`
        output_pitches[${v}] = ${d[v]};
        input_pitches[${v}] = ${p[v]};
        `;let g=`
      float getInputFloat(int index) {
        vec2 coords = offsetToCoords(index, ${o}, ${i});
        float value = getColorAsFloat(${t.texture2D}(X, coords));
        return value;
      }
      `,b=n.mode==="nearest"?`
    ${g}
    float process(int indices[${l}]) {
      int input_index = 0;
      int output_index = coordsToOffset(TexCoords, ${a}, ${u});

      ${h}

      int d, m;
      for (int dim = 0; dim < ${l}; ++dim) {
        d = output_index / output_pitches[dim];
        m = output_index - d * output_pitches[dim];
        output_index = m;

        if (scales[dim] != 1 && d > 0) {
          int d2 = d / scales[dim];
          m = d - d2 * scales[dim];
          d = d2;
        }
        input_index += input_pitches[dim] * d;
      }

      return getInputFloat(input_index);
    }`:l===4?`
    ${g}
    float process(int indices[4]) {
      int input_index = 0;
      int output_index = coordsToOffset(TexCoords, ${a}, ${u});

      ${h}

      int m;
      int index_of_dim0, index_of_dim1, index_of_dim2, index_of_dim3;
      index_of_dim0 = output_index / output_pitches[0];
      m = output_index - index_of_dim0 * output_pitches[0];
      index_of_dim1 = m / output_pitches[1];
      m = m - index_of_dim1 * output_pitches[1];
      index_of_dim2 = m / output_pitches[2];
      m = m - index_of_dim2 * output_pitches[2];
      index_of_dim3 = m;

      int index_of_input_dim2, index_of_input_dim3, x_offset, y_offset;
      index_of_input_dim2 = index_of_dim2 / scales[2];
      y_offset = index_of_dim2 - index_of_input_dim2 * scales[2];
      index_of_input_dim3 = index_of_dim3 / scales[3];
      x_offset = index_of_dim3 - index_of_input_dim3 * scales[3];

      input_index = index_of_dim0 * input_pitches[0] +
            index_of_dim1 * input_pitches[1] +
            index_of_input_dim2 * input_pitches[2] +
            index_of_input_dim3;

      float x00 = getInputFloat(input_index);
      float x10, x01, x11;

      bool end_of_dim2 = false;
      if (index_of_input_dim2 == (${e[0].dims[2]} - 1)) {
        // It's the end in dimension 2
        x01 = x00;
        end_of_dim2 = true;
      } else {
        x01 = getInputFloat(input_index + input_pitches[2]);
      }

      if (index_of_input_dim3 == (input_pitches[2] - 1)) {
        // It's the end in dimension 3
        x10 = x00;
        x11 = x01;
      }
      else {
        x10 = getInputFloat(input_index + 1);
        x11 = end_of_dim2 ? x10 : getInputFloat(input_index + input_pitches[2] + 1);
      }

      float y0 = x00 + float(y_offset) * (x01 - x00) / float(scales[2]);
      float y1 = x10 + float(y_offset) * (x11 - x10) / float(scales[2]);
      return y0 + float(x_offset) * (y1 - y0) / float(scales[3]);
    }`:`
    ${g}
    float process(int indices[2]) {
      int input_index = 0;
      int output_index = coordsToOffset(TexCoords, ${a}, ${u});

      ${h}

      int m;
      int index_of_dim0, index_of_dim1;
      index_of_dim0 = output_index / output_pitches[0];
      m = output_index - index_of_dim0 * output_pitches[0];
      index_of_dim1 = m;

      int index_of_input_dim0, index_of_input_dim1, x_offset, y_offset;
      index_of_input_dim0 = index_of_dim0 / scales[0];
      y_offset = index_of_dim0 - index_of_input_dim0 * scales[0];
      index_of_input_dim1 = index_of_dim1 / scales[1];
      x_offset = index_of_dim1 - index_of_input_dim1 * scales[1];

      input_index = index_of_input_dim0 * input_pitches[0] + index_of_input_dim1;

      float x00 = getInputFloat(input_index);
      float x10, x01, x11;

      bool end_of_dim0 = false;
      if (index_of_input_dim0 == (${e[0].dims[0]} - 1)) {
        // It's the end in dimension 0
        x01 = x00;
        end_of_dim0 = true;
      } else {
        x01 = getInputFloat(input_index + input_pitches[0]);
      }

      if (index_of_input_dim1 == (input_pitches[0] - 1)) {
        // It's the end in dimension 1
        x10 = x00;
        x11 = x01;
      }
      else {
        x10 = getInputFloat(input_index + 1);
        x11 = end_of_dim0 ? x10 : getInputFloat(input_index + input_pitches[0] + 1);
      }

      float y0 = x00 + float(y_offset) * (x01 - x00) / float(scales[0]);
      float y1 = x10 + float(y_offset) * (x11 - x10) / float(scales[0]);
      return y0 + float(x_offset) * (y1 - y0) / float(scales[1]);
    }`;return{...$p,output:{dims:s,type:e[0].type,textureType:0},shaderSource:b,variables:[{name:"scales",type:"int",arrayLength:n.scales.length,data:n.scales.map(v=>Math.ceil(v))}]}},Js=(r,e)=>{if(!r||e.opset<9&&r.length!==1||e.opset>=9&&e.opset<11&&r.length!==2||e.opset>=11&&r.length<2)throw new Error("invalid inputs.");if(e.scales.length>0&&r[0].dims.length!==e.scales.length)throw new Error("Invalid input shape.");if(r[0].type==="string")throw new Error("Invalid input tensor types.")},na=(r,e,n)=>{if(n){for(let t of r)if(t<=0)throw new Error("Scale value should be greater than 0.")}else for(let t of r)if(t<1)throw new Error("Scale value should be greater than or equal to 1.");if((e==="linear"||e==="cubic")&&r.length!==2&&(r.length!==4||r[0]!==1||r[1]!==1))throw new Error(`'Linear' mode and 'Cubic' mode only support 2-D inputs ('Bilinear', 'Bicubic')         or 4-D inputs with the corresponding outermost 2 scale values being 1         in the ${n?"Resize":"Upsample"} opeartor.`)}});var eu,tu,Ap,Op,Xw,Zw,Jw,Qw,Ep=B(()=>{"use strict";lt();Fe();Tr();vn();Qs();eu={name:"Resize",inputNames:["A"],inputTypes:[2]},tu=(r,e,n)=>(Js(e,n),[r.run({...eu,cacheHint:n.cacheKey,get:()=>Xw(r,e,n)},e)]),Ap=r=>Vo(r,10),Op=r=>Vo(r,11),Xw=(r,e,n)=>{let t=fe(r.session.backend.glContext.version),[o,i]=Zw(e,n);if(o.every(A=>A===1)&&n.coordinateTransformMode!=="tf_crop_and_resize")return{...eu,output:{dims:i,type:e[0].type,textureType:2},hasMain:!0,shaderSource:`void main() {
                    vec4 v = ${t.texture2D}(X, TexCoords);
                    ${t.output} = v;
                }`};let a=i.length;if(a<2)throw new Error(`output dimension should be at least 2, but got ${a}`);let u=i[a-2],l=i[a-1],d=e[0].dims;if(a!==d.length)throw new Error(`output dimension should match input ${d.length}, but got ${a}`);let p=d[a-2],h=d[a-1],g=o[a-2],b=o[a-1],v="";if(n.mode!=="linear")throw new Error(`resize (packed) does not support mode: '${n.mode}'`);switch(n.coordinateTransformMode){case"asymmetric":v=`
                    vec4 getSourceFracIndex(ivec4 coords) {
                        return vec4(coords) / scaleWHWH;
                    }
                `;break;case"half_pixel":v=`
                    vec4 getSourceFracIndex(ivec4 coords) {
                        return (vec4(coords) + 0.5) / scaleWHWH - 0.5;
                    }
                `;break;case"pytorch_half_pixel":v=`
                    vec4 getSourceFracIndex(ivec4 coords) {
                        vec4 fcoords = vec4(coords);
                        return vec4(
                            ${l}.0 > 1.0 ? (fcoords.x + 0.5) / scaleWHWH.x - 0.5 : 0.0,
                            ${u}.0 > 1.0 ? (fcoords.y + 0.5) / scaleWHWH.y - 0.5 : 0.0,
                            ${l}.0 > 1.0 ? (fcoords.z + 0.5) / scaleWHWH.z - 0.5 : 0.0,
                            ${u}.0 > 1.0 ? (fcoords.w + 0.5) / scaleWHWH.w - 0.5 : 0.0
                          );
                    }
                `;break;case"align_corners":v=`
                    vec4 getSourceFracIndex(ivec4 coords) {
                        vec4 resized = vec4(${l}.0 - 1.0, ${u}.0 - 1.0, ${l}.0 - 1.0,
                            ${u}.0 - 1.0);
                        vec4 original = vec4(${h}.0 - 1.0, ${p}.0 - 1.0, ${h}.0 - 1.0,
                            ${p}.0 - 1.0);
                        vec4 new_scale = original / resized;
                        return vec4(coords) * new_scale;
                    }
                `;break;default:throw new Error(`resize (packed) does not support coordinateTransformMode:                                 '${n.coordinateTransformMode}'`)}let $=Lt(a),T=$r(),x=`
            const vec2 inputWH = vec2(${p}.0, ${h}.0);
            const vec4 scaleWHWH = vec4(float(${g}), float(${b}), float(${g}), float(${b}));
            ${T}
            ${v}
            float getAValue(int x10, int r, int c, int d) {
                return getChannel(getA(x10, r, c, d), vec2(c, d));
            }
            void main() {
                ${$} rc = getOutputCoords();

                int batch = rc[0];
                int depth = rc[1];

                // retrieve the 4 coordinates that is used in the 4 packed output values.
                ivec4 coords = ivec4(rc.wz, rc.w + 1, rc.z + 1);

                // calculate the source index in fraction
                vec4 sourceFrac = getSourceFracIndex(coords);

                // get the lower and upper bound of the 4 values that will be packed into one texel.
                ivec4 x00 = ivec4(max(sourceFrac.xy, vec2(0.0)), min(inputWH - 1.0, ceil(sourceFrac.xy)));
                ivec4 x01 = ivec4(max(sourceFrac.xw, vec2(0.0)), min(inputWH - 1.0, ceil(sourceFrac.xw)));
                ivec4 x10 = ivec4(max(sourceFrac.zy, vec2(0.0)), min(inputWH - 1.0, ceil(sourceFrac.zy)));
                ivec4 x11 = ivec4(max(sourceFrac.zw, vec2(0.0)), min(inputWH - 1.0, ceil(sourceFrac.zw)));

                bool hasNextRow = rc.w < ${u-1};
                bool hasNextCol = rc.z < ${l-1};

                // pack x00, x01, x10, x11's top-left corner into one vec4 structure
                vec4 topLeft = vec4(
                    getAValue(batch, depth, x00.x, x00.y),
                    hasNextCol ? getAValue(batch, depth, x01.x, x01.y) : 0.0,
                    hasNextRow ? getAValue(batch, depth, x10.x, x10.y) : 0.0,
                    (hasNextRow && hasNextCol) ? getAValue(batch, depth, x11.x, x11.y) : 0.0);

                // pack x00, x01, x10, x11's top-right corner into one vec4 structure
                vec4 topRight = vec4(
                    getAValue(batch, depth, x00.x, x00.w),
                    hasNextCol ? getAValue(batch, depth, x01.x, x01.w) : 0.0,
                    hasNextRow ? getAValue(batch, depth, x10.x, x10.w) : 0.0,
                    (hasNextRow && hasNextCol) ? getAValue(batch, depth, x11.x, x11.w) : 0.0);

                // pack x00, x01, x10, x11's bottom-left corner into one vec4 structure
                vec4 bottomLeft = vec4(
                    getAValue(batch, depth, x00.z, x00.y),
                    hasNextCol ? getAValue(batch, depth, x01.z, x01.y) : 0.0,
                    hasNextRow ? getAValue(batch, depth, x10.z, x10.y) : 0.0,
                    (hasNextRow && hasNextCol) ? getAValue(batch, depth, x11.z, x11.y) : 0.0);

                // pack x00, x01, x10, x11's bottom-right corner into one vec4 structure
                vec4 bottomRight = vec4(
                    getAValue(batch, depth, x00.z, x00.w),
                    hasNextCol ? getAValue(batch, depth, x01.z, x01.w) : 0.0,
                    hasNextRow ? getAValue(batch, depth, x10.z, x10.w) : 0.0,
                    (hasNextRow && hasNextCol) ? getAValue(batch, depth, x11.z, x11.w) : 0.0);

                // calculate the interpolation fraction on u and v direction
                vec4 frac = vec4(sourceFrac) - floor(sourceFrac);
                vec4 clampFrac = clamp(frac, vec4(0.0), vec4(1.0));

                vec4 top = mix(topLeft, topRight, clampFrac.ywyw);
                vec4 bottom = mix(bottomLeft, bottomRight, clampFrac.ywyw);
                vec4 newValue = mix(top, bottom, clampFrac.xxzz);

                ${t.output} = vec4(newValue);
            }
        `;return{...eu,output:{dims:i,type:e[0].type,textureType:2},hasMain:!0,shaderSource:x}},Zw=(r,e)=>{let t=r[0].dims,o=e.scales,i;if(o.length===0){let a=r[e.scalesInputIdx];if(a&&a.size!==0){if(r[e.sizesInputIdx])throw new Error("Only one of scales or sizes must be provided as input.");o=Jw(a,e.mode,e.isResize)}else{let u=r[e.sizesInputIdx];if(!u||u.size===0)throw new Error("Either scales or sizes MUST be provided as input.");i=Array.from(u.integerData),o=Qw(i,t,e.mode,e.isResize)}}else if(r[e.sizesInputIdx])throw new Error("Only one of scales or sizes must be provided as input.");let s=i||t.map((a,u)=>Math.floor(a*o[u]));return[o,s]},Jw=(r,e,n)=>{let t=Array.from(r.floatData);return na(t,e,n),t},Qw=(r,e,n,t)=>{let o=e.length,i=new Array(o);for(let s=0,a=o;s<a;s++)if(e[s]===0){if(r[s]!==0)throw new Error("Input dim is zero but required output dim is non-zero.");i[s]=1}else i[s]=r[s]/e[s];return na(i,n,t),i}});var Cp,ex,Pp=B(()=>{"use strict";yn();Cp=(r,e)=>(ex(e),[new wt([e[0].dims.length],"int32",void 0,void 0,new Int32Array(e[0].dims))]),ex=r=>{if(!r||r.length!==1)throw new Error("Shape requires 1 input.")}});var ru,kp,Dp,Bp,tx,Rp,rx,nx,zp=B(()=>{"use strict";At();No();Ke();Fe();ru={name:"Slice",inputNames:["A"],inputTypes:[0]},kp=(r,e,n)=>(tx(e),[r.run({...ru,cacheHint:n.cacheKey,get:()=>Bp(r,e[0],n)},e)]),Dp=r=>{let e=r.attributes.getInts("starts"),n=r.attributes.getInts("ends"),t=r.attributes.getInts("axes",[]);return Oe({starts:e,ends:n,axes:t})},Bp=(r,e,n)=>{let t=n.axes.length===0?e.dims.slice(0).map((p,h)=>h):n.axes,o=ie.normalizeAxes(t,e.dims.length),i=n.starts.map((p,h)=>p>e.dims[o[h]]-1?e.dims[o[h]]:ie.normalizeAxis(p,e.dims[o[h]])),s=n.ends.map((p,h)=>p>e.dims[o[h]]-1?e.dims[o[h]]:ie.normalizeAxis(p,e.dims[o[h]])),a=e.dims.slice(),u=[];for(let p=0;p<o.length;p++)a[o[p]]=s[p]-i[p],i[p]>0&&u.push(`outputIdx[${o[p]}] += ${i[p]};`);let d=`
      float process(int outputIdx[${a.length}]) {
        ${u.join(`
      `)}
        return _A(outputIdx);
      }`;return{...ru,output:{dims:a,type:e.type,textureType:0},shaderSource:d}},tx=r=>{if(!r||r.length!==1)throw new Error("Slice requires 1 input.");if(Kr.indexOf(r[0].type)===-1)throw new Error("Invalid input type.")},Rp=(r,e)=>{nx(e);let n=rx(r,e);return[r.run({...ru,cacheHint:n.cacheKey,get:()=>Bp(r,e[0],n)},[e[0]])]},rx=(r,e)=>{if(!r.session.isInitializer(e[1].dataId)||!r.session.isInitializer(e[2].dataId)||e.length>=4&&!r.session.isInitializer(e[3].dataId)||e.length>=5&&!r.session.isInitializer(e[4].dataId))throw new Error("dynamic slice attributes are not allowed");if(e.length>=5&&e[4].integerData.some(s=>s!==1))throw new Error("currently non-1 steps is not supported for Slice");let n=Array.from(e[1].integerData),t=Array.from(e[2].integerData),o=e.length>=4?Array.from(e[3].integerData):[],i=`${o};${n};${t}`;return{starts:n,ends:t,axes:o,cacheKey:i}},nx=r=>{if(!r||r.length<3||r.length>5)throw new Error("Invalid input number.");if(r[1].type!=="int32"||r[1].dims.length!==1)throw new Error("Invalid input type.");if(r[2].type!=="int32"||r[2].dims.length!==1)throw new Error("Invalid input type.");if(r.length>=4&&(r[3].type!=="int32"||r[3].dims.length!==1))throw new Error("Invalid input type.");if(r.length>=5&&(r[4].type!=="int32"||r[4].dims.length!==1))throw new Error("Invalid input type.")}});var Mp,Lp,Np,Vp,Fp,Gp,Up,Wp,ox,ix,ax,Hp,qp=B(()=>{"use strict";At();Ke();lt();Fe();ea();Mp={name:"SoftmaxComputeMax",inputNames:["A"],inputTypes:[0]},Lp={name:"SoftmaxComputeScale",inputNames:["A","Max"],inputTypes:[0,0]},Np={name:"SoftMax",inputNames:["A","Max","Norm"],inputTypes:[0,0,0]},Vp=(r,e,n)=>{Hp(e);let t=e[0].dims.slice(),o=ie.normalizeAxis(n.axis,t.length),i=ie.sizeToDimension(t,o),s=ie.sizeFromDimension(t,o);return Wp(r,e,n,i,s)},Fp=r=>Oe({axis:r.attributes.getInt("axis",1)}),Gp=r=>Oe({axis:r.attributes.getInt("axis",-1)}),Up=(r,e,n)=>{Hp(e);let t=e[0].dims.slice(),o=ie.normalizeAxis(n.axis,t.length),i=t.length,s=o!==i-1,a=[],u=[],l=[],d;s&&(u=Array.from({length:i}).map((b,v)=>v),u[o]=i-1,u[i-1]=o,u.map(b=>a.push(t[b])),d=Oe({perm:u}),l=xn(r,e,d));let p=s?ie.sizeToDimension(a,i-1):ie.sizeToDimension(t,i-1),h=s?ie.sizeFromDimension(a,i-1):ie.sizeFromDimension(t,i-1),g=Wp(r,s?l:e,n,p,h);return s?xn(r,g,d):g},Wp=(r,e,n,t,o)=>{let i=ox(r,e[0],t,o,[t]),s=r.run({...Mp,cacheHint:n.cacheKey,get:()=>i},e),a=ix(r,e[0],t,o,i.output.dims,[t]),u=r.run({...Lp,cacheHint:n.cacheKey,get:()=>a},[e[0],s]),l=ax(r,e[0],t,o,i.output.dims,a.output.dims);return[r.run({...Np,cacheHint:n.cacheKey,get:()=>l},[e[0],s,u])]},ox=(r,e,n,t,o)=>{let[i,s]=r.calculateTextureWidthAndHeight(e.dims,0),a=o.length;if(n<1||t<1)throw new Error("Logical row count N and feature count D must be greater than or equal to 1");if(o.length!==1)throw new Error("Dimensionality of the output should be 1");if(o[0]!==n)throw new Error("Shape of the output should be equal to logical row count");let u=fe(r.session.backend.glContext.version),l=`
      float process(int[${a}] indices) {
        int logical_row_start_offset = indices[0] * ${t};

        float max = getColorAsFloat(${u.texture2D}(A, offsetToCoords(logical_row_start_offset, ${i},
        ${s} )));
        for(int i=1; i<${t}; ++i)
        {
          float current = getColorAsFloat(${u.texture2D}(A, offsetToCoords(logical_row_start_offset + i,
            ${i}, ${s})));
          if(current > max)
          max = current;
        }

        return max;
      }`;return{...Mp,output:{dims:o,type:e.type,textureType:0},shaderSource:l}},ix=(r,e,n,t,o,i)=>{let[s,a]=r.calculateTextureWidthAndHeight(e.dims,0),u=i.length;if(n<1||t<1)throw new Error("Logical row count N and feature count D must be greater than or equal to 1");if(i.length!==1)throw new Error("Dimensionality of the output should be 1");if(i[0]!==n)throw new Error("Shape of the output should be equal to logical row count");if(o.length!==1)throw new Error("Dimensionality of the intermediate results should be 1");if(o[0]!==n)throw new Error("Shape of the intermediate results should be equal to logical row count");let l=fe(r.session.backend.glContext.version),d=`
      float process(int[${u}] indices) {
        int logical_row_start_offset = indices[0] * ${t};

        float norm_factor = 0.0;
        float max = _Max(indices);
        for(int i=0; i<${t}; ++i)
        {
          norm_factor += exp(getColorAsFloat(${l.texture2D}(A, offsetToCoords(logical_row_start_offset + i,
            ${s}, ${a}))) - max);
        }

        return norm_factor;
      }`;return{...Lp,output:{dims:i,type:e.type,textureType:0},shaderSource:d}},ax=(r,e,n,t,o,i)=>{let[s,a]=r.calculateTextureWidthAndHeight(e.dims,0),u=e.dims.length;if(n<1||t<1)throw new Error("Logical row count N and feature count D must be greater than or equal to 1");if(o.length!==1||i.length!==1)throw new Error("Dimensionality of the intermediate results should be 1");if(o[0]!==n||i[0]!==n)throw new Error("Shape of the intermediate results should be equal to logical row count");let l=`
      float process(int[${u}] indices) {

      // get offset of current logical tensor index from the 2-D texture coordinates (TexCoords)
      int offset = coordsToOffset(TexCoords, ${s}, ${a});

      //determine the logical row for this index
      int logical_row_index[1];
      logical_row_index[0] = offset / ${t};

      float norm_factor = _Norm(logical_row_index);

      // avoid possible division by 0
      // if norm_facor is 0, all elements are zero
      // if so, return 0
      if(norm_factor == 0.0)
        return 0.0;

      return exp(_A(indices) - _Max(logical_row_index)) / norm_factor;
    }`;return{...Np,output:{dims:e.dims,type:e.type,textureType:0},shaderSource:l}},Hp=r=>{if(!r||r.length!==1)throw new Error("Softmax requires 1 input.");if(r[0].type!=="float32"&&r[0].type!=="float64")throw new Error("Invalid input type")}});var jp,Kp,Yp,sx,ux,lx,Xp=B(()=>{"use strict";At();Ke();Fe();jp={name:"Split",inputNames:["A"],inputTypes:[0]},Kp=(r,e,n)=>{lx(e);let t=ie.normalizeAxis(n.axis,e[0].dims.length),o=sx(r,e,t,n),i=[];for(let s=0;s<o;++s)i.push(r.run({...jp,cacheHint:`${n.cacheKey};${s}`,get:()=>ux(r,e[0],n,t,s)},e));return i},Yp=r=>{let e=r.attributes.getInt("axis",0),n=r.attributes.getInts("split",[]),t=r.outputs.length;return Oe({axis:e,split:n,numOutputs:t})},sx=(r,e,n,t)=>{let[,o]=Do.splitShape(e[0].dims,n,t.split,t.numOutputs);return o.length},ux=(r,e,n,t,o)=>{let[i,s]=Do.splitShape(e.dims,t,n.split,n.numOutputs),a=s[o],u=i[o],d=`
      float process(int indices[${u.length}]) {
        indices[${t}] += ${a};
        return _A(indices);
      }
    `;return{...jp,cacheHint:`${n.cacheKey}:${o}`,output:{dims:u,type:e.type,textureType:0},shaderSource:d}},lx=r=>{if(!r||r.length!==1)throw new Error("Split requires one input.");if(r[0].type!=="int8"&&r[0].type!=="uint8"&&r[0].type!=="int16"&&r[0].type!=="uint16"&&r[0].type!=="int32"&&r[0].type!=="uint32"&&r[0].type!=="float32"&&r[0].type!=="float64"&&r[0].type!=="bool")throw new Error("Invalid input type.")}});var nu,Zp,Jp,dx,cx,Qp=B(()=>{"use strict";Ke();nu=(r,e,n)=>{dx(e);let t=ie.squeezeShape(e[0].dims,n);return[r.reshapeUnpacked(e[0],t)]},Zp=(r,e)=>(cx(e),nu(r,[e[0]],Array.from(e[1].integerData))),Jp=r=>r.attributes.getInts("axes"),dx=r=>{if(!r||r.length!==1)throw new Error("Squeeze requires 1 input.");if(r[0].type==="string")throw new Error("invalid input tensor types.")},cx=r=>{if(!r||r.length!==2)throw new Error("Squeeze requires 2 inputs.");if(r[1].type!=="int32")throw new Error("Invalid input type.")}});var eh,fx,px,th=B(()=>{"use strict";lt();Fe();eh=(r,e)=>{px(e);let n={name:"Sum",inputNames:e.map((o,i)=>`X${i}`),inputTypes:new Array(e.length).fill(0)};return[r.run({...n,get:()=>fx(r,e,n)},e)]},fx=(r,e,n)=>{let t=fe(r.session.backend.glContext.version),o=e[0].dims.slice(),s=`
      void main() {
        vec4 result = ${e.map((a,u)=>`${t.texture2D}(X${u},TexCoords)`).join(" + ")};
        ${t.output} = result;
      }
    `;return{...n,output:{dims:o,type:e[0].type,textureType:0},hasMain:!0,shaderSource:s}},px=r=>{if(!r||r.length===0)throw new Error("Sum requires inputs.");let e=r[0].dims.length;for(let n=1;n<r.length;n++){if(e!==r[n].dims.length)throw new Error("Input shapes are mismatched.");for(let t=0;t<e;t++)if(r[0].dims[t]!==r[n].dims[t])throw new Error("Input shapes are not matched.")}if(r[0].type!=="float32"&&r[0].type!=="float64")throw new Error("Invalid input type.");for(let n=1;n<r.length;n++)if(r[0].type!==r[n].type)throw new Error("Input types are not matched.")}});var rh,hx,mx,nh=B(()=>{"use strict";No();Fe();rh=(r,e)=>{mx(e);let n={name:"Tile",inputNames:["A"],inputTypes:[0]};return[r.run({...n,get:()=>hx(r,e,n)},e)]},hx=(r,e,n)=>{let t=e[0].dims.slice(),o=new Array(t.length),i=[];for(let u=0;u<t.length;u++)o[u]=t[u]*e[1].numberData[u],i.push(`inputIdx[${u}] = int(mod(float(outputIdx[${u}]), ${t[u]}.));`);let s=o.length,a=`
      float process(int outputIdx[${s}]) {
        int inputIdx[${s}];
        ${i.join(`
`)}
        return _A(inputIdx);
      }
    `;return{...n,output:{dims:o,type:e[0].type,textureType:0},shaderSource:a}},mx=r=>{if(!r||r.length!==2)throw new Error("Tile requires 2 input.");if(r[1].dims.length!==1)throw new Error("The second input shape must 1 dimension.");if(r[1].dims[0]!==r[0].dims.length)throw new Error("Invalid input shape.");if(Kr.indexOf(r[0].type)===-1)throw new Error("Invalid input type.");if(r[1].type!=="int32"&&r[1].type!=="int16")throw new Error("Invalid repeat type.")}});var ou,oh,ih,gx,bx,ah=B(()=>{"use strict";Ke();ou=(r,e,n)=>{gx(e);let t=ie.unsqueezeShape(e[0].dims,n);return[r.reshapeUnpacked(e[0],t)]},oh=(r,e)=>(bx(e),ou(r,[e[0]],Array.from(e[1].integerData))),ih=r=>r.attributes.getInts("axes"),gx=r=>{if(!r||r.length!==1)throw new Error("Unsqueeze requires 1 input.");if(r[0].type==="string")throw new Error("invalid input tensor types.")},bx=r=>{if(!r||r.length!==2)throw new Error("Unsqueeze requires 2 inputs.");if(r[1].type!=="int32")throw new Error("Invalid input type.")}});var sh,uh=B(()=>{"use strict";bc();Cc();Dc();Nc();Zi();Tf();Ef();kf();Rf();Nf();Gf();qf();Xf();Ji();ep();pp();xp();Tp();Ep();Pp();zp();qp();Xp();Qp();th();nh();ea();Fs();ah();Qs();sh=[["Abs","","6+",Vc],["Acos","","7+",Fc],["Add","","7+",yc],["And","","7+",vc],["Asin","","7+",Gc],["Atan","","7+",Uc],["AveragePool","","7+",rp,np],["BatchNormalization","","7+",mc,gc],["Cast","","6+",Pc,kc],["Ceil","","6+",qc],["Clip","","6-10",Ns,Wc],["Clip","","11+",Hc],["Concat","","4+",zc,Lc],["Conv","","1+",js,Ks],["ConvTranspose","","1+",xf,_f],["Cos","","7+",jc],["Div","","7+",wc],["Dropout","","7+",Vs],["DepthToSpace","","1+",Af,Of],["Equal","","7+",xc],["Elu","","6+",Kc,Yc],["Exp","","6+",Xc],["Flatten","","1+",Cf,Pf],["Floor","","6+",Zc],["FusedConv","com.microsoft","1+",js,Ks],["Gather","","1+",Df,Bf],["Gemm","","7-10",Ys,Mf],["Gemm","","11+",Ys,Lf],["GlobalAveragePool","","1+",ip,ap],["GlobalMaxPool","","1+",cp],["Greater","","7+",_c],["Identity","","1+",Vs],["ImageScaler","","1+",Vf,Ff],["InstanceNormalization","","6+",Wf,Hf],["LeakyRelu","","6+",Jc,Qc],["Less","","7+",Tc],["LRN","","1+",jf,Kf],["Log","","6+",ef],["MatMul","","1+",hf,mf],["MaxPool","","1+",sp,up],["Mul","","7+",$c],["Neg","","6+",tf],["Not","","1+",rf],["Or","","7+",Sc],["Pad","","2-10",Xs,Zf],["Pad","","11+",Jf,Qf],["Pow","","7+",Ic],["PRelu","","7+",Ac],["ReduceLogSum","","1+",vp,Yr],["ReduceMax","","1+",gp,Yr],["ReduceMean","","1+",mp,Yr],["ReduceMin","","1+",bp,Yr],["ReduceProd","","1+",yp,Yr],["ReduceSum","","1-12",hp,Yr],["ReduceSumSquare","","1+",wp,Yr],["Relu","","6+",nf],["Reshape","","5+",_p],["Resize","","10",tu,Ap],["Resize","","11+",tu,Op],["Shape","","1+",Cp],["Sigmoid","","6+",of],["Sin","","7+",af],["Slice","","10+",Rp],["Slice","","1-9",kp,Dp],["Softmax","","1-12",Vp,Fp],["Softmax","","13+",Up,Gp],["Split","","2-12",Kp,Yp],["Sqrt","","6+",sf],["Squeeze","","1-12",nu,Jp],["Squeeze","","13+",Zp],["Sub","","7+",Oc],["Sum","","6+",eh],["Tan","","7+",uf],["Tanh","","6+",lf],["Tile","","6+",rh],["Transpose","","1+",xn,Sf],["Upsample","","7-8",Zs,Sp],["Upsample","","9",Zs,Ip],["Unsqueeze","","1-12",ou,ih],["Unsqueeze","","13+",oh],["Xor","","7+",Ec]]});function dh(r){let e={},n;for(;(n=lh.exec(r))!==null;){let t=n[3].split(",").map(o=>{let i=o.trim().split(" ");return i&&i.length===2?{type:i[0],name:i[1]}:null}).filter(o=>o!==null);e[n[2]]={params:t,body:n[4]}}for(let t in e){let o=yx.replace("__FUNC__",t),i=new RegExp(o,"gm");for(;(n=i.exec(r))!==null;){let s=n[1],a=n[2],u=n[3].split(","),l=s?`${s} ${a};`:"",d=e[t].body,p="";e[t].params.forEach((g,b)=>{g&&(p+=`${g.type} ${g.name} = ${u[b]};
`)}),d=`${p}
 ${d}`,d=d.replace("return",`${a} = `);let h=`
      ${l}
      {
        ${d}
      }
      `;r=r.replace(n[0],h)}}return r=r.replace(lh,""),r}var lh,yx,ch=B(()=>{"use strict";lh=/@inline[\s\n\r]+(\w+)[\s\n\r]+([0-9a-zA-Z_]+)\s*\(([^)]*)\)\s*{(([^}]|[\n\r])*)}/gm,yx="(\\w+)?\\s+([_0-9a-zA-Z]+)\\s+=\\s+__FUNC__\\((.*)\\)\\s*;"});function Xn(r,e){let n=[],t=[],o=e!=null&&Array.isArray(e)&&e.length===0,i=e==null||o?null:vx(e,r).sort(),s=0;for(let a=0;a<r.length;++a){if(i!=null){if(i[s]===a&&r[a]!==1)throw new Error(`Can't squeeze axis ${a} since its dim '${r[a]}' is not 1`);(i[s]==null||i[s]>a)&&r[a]===1&&(n.push(r[a]),t.push(a)),i[s]<=a&&s++}r[a]!==1&&(n.push(r[a]),t.push(a))}return{newShape:n,keptDims:t}}function vx(r,e){let n=e.length;return r=r==null?e.map((t,o)=>o):[].concat(r),Wn(r.every(t=>t>=-n&&t<n),()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${r}`),Wn(r.every(wx),()=>`All values in axis param must be integers but got axis ${r}`),r.map(t=>t<0?n+t:t)}function wx(r){return r%1===0}function xx(r){if(r.length===0)return 1;let e=r[0];for(let n=1;n<r.length;n++)e*=r[n];return e}function fh(r){let e=Math.ceil(Math.sqrt(r));return[e,Math.ceil(r/e)]}var oa,iu=B(()=>{"use strict";Jt();Ke();oa=class{constructor(e){this.maxTextureSize=e}computeTextureWH(e,n){let t=this.computeTexture(e,n);return n&&n.isPacked&&(t[0]/=2,t[1]/=2),n&&n.reverseWH?[t[1],t[0]]:t}computeTexture(e,n){let t=n&&n.isPacked;if(e.length===0)return t?[2,2]:[1,1];let o=this.maxTextureSize;if(n&&n.breakAxis!==void 0){let a=n.breakAxis>=e.length?1:e.slice(n.breakAxis).reduce((l,d)=>l*d),u=n.breakAxis<=0?1:e.slice(0,n.breakAxis).reduce((l,d)=>l*d);if(a>o||u>o)Ze.verbose("TextureLayout",`Given width/height preferences were unattainable: shape:${e}, breakAxis:${n.breakAxis}`);else return[a,u]}let i=e.slice(0);t&&(o=o*2,i=i.map((a,u)=>u>=i.length-2?i[u]%2===0?i[u]:i[u]+1:i[u]),i.length===1&&(i=[2,i[0]])),i.length!==2&&(i=Xn(i).newShape);let s=xx(i);return i.length<=1&&s<=o?[1,s]:i.length===2&&i[0]<=o&&i[1]<=o?i:i.length===3&&i[0]*i[1]<=o&&i[2]<=o?[i[0]*i[1],i[2]]:i.length===3&&i[0]<=o&&i[1]*i[2]<=o?[i[0],i[1]*i[2]]:i.length===4&&i[0]*i[1]*i[2]<=o&&i[3]<=o?[i[0]*i[1]*i[2],i[3]]:i.length===4&&i[0]<=o&&i[1]*i[2]*i[3]<=o?[i[0],i[1]*i[2]*i[3]]:t?fh(s/4).map(a=>a*2):fh(s)}}});var ia,ph=B(()=>{"use strict";Ke();Vr();lt();iu();Tr();ia=class extends rr{constructor(n){super(n)}getFunctions(){return{...this.offsetToCoords(),...this.coordsToOffset(),...this.toVec(),...this.valueFrom(),...this.getCommonUtilFuncs(),...this.getInputsSamplingSnippets(),...this.getOutputSamplingSnippet()}}getCustomTypes(){return{}}offsetToCoords(){let n="offsetToCoords";return{offsetToCoords:new re(`
      vec2 ${n}(int offset, int width, int height) {
        int t = offset / width;
        int s = offset - t*width;
        vec2 coords = (vec2(s,t) + vec2(0.5,0.5)) / vec2(width, height);
        return coords;
      }
      `)}}coordsToOffset(){let n="coordsToOffset";return{coordsToOffset:new re(`
      int ${n}(vec2 coords, int width, int height) {
        float s = coords.s * float(width);
        float t = coords.t * float(height);
        int offset = int(t) * width + int(s);
        return offset;
      }
      `)}}getOutputSamplingSnippet(){let n=this.context.outputTextureLayout;return n.isPacked?this.getPackedOutputSamplingSnippet(n):this.getUnpackedOutputSamplingSnippet(n)}getPackedOutputSamplingSnippet(n){let t=n.unpackedShape,o=[n.width,n.height],i={},s="getOutputCoords";switch(t.length){case 0:i[s]=this.getOutputScalarCoords();break;case 1:i[s]=this.getOutputPacked1DCoords(t,o);break;case 2:i[s]=this.getOutputPacked2DCoords(t,o);break;case 3:i[s]=this.getOutputPacked3DCoords(t,o);break;default:i[s]=this.getOutputPackedNDCoords(t,o)}let u=`
      void setOutput(vec4 val) {
        ${fe(this.context.glContext.version).output} = val;
      }
    `,l="floatTextureSetRGBA";return i[l]=new re(u),i}getUnpackedOutputSamplingSnippet(n){let t=n.unpackedShape,o=[n.width,n.height],i={},s="getOutputCoords";switch(t.length){case 0:i[s]=this.getOutputScalarCoords();break;case 1:i[s]=this.getOutputUnpacked1DCoords(t,o);break;case 2:i[s]=this.getOutputUnpacked2DCoords(t,o);break;case 3:i[s]=this.getOutputUnpacked3DCoords(t,o);break;case 4:i[s]=this.getOutputUnpacked4DCoords(t,o);break;case 5:i[s]=this.getOutputUnpacked5DCoords(t,o);break;case 6:i[s]=this.getOutputUnpacked6DCoords(t,o);break;default:throw new Error(`Unsupported output dimensionality: ${t.length}`)}let u=`
        void setOutput(float val) {
          ${fe(this.context.glContext.version).output} = vec4(val, 0, 0, 0);
        }
    `,l="floatTextureSetR";return i[l]=new re(u),i}getOutputScalarCoords(){return new re(`
      int getOutputCoords() {
        return 0;
      }
    `)}getOutputPacked1DCoords(n,t){let o=t,i="";return o[0]===1?(i=`
          int getOutputCoords() {
            return 2 * int(TexCoords.y * ${o[1]}.0);
          }
        `,new re(i)):o[1]===1?(i=`
          int getOutputCoords() {
            return 2 * int(TexCoords.x * ${o[0]}.0);
          }
        `,new re(i)):(i=`
        int getOutputCoords() {
          ivec2 resTexRC = ivec2(TexCoords.xy *
                                 vec2(${o[0]}, ${o[1]}));
          return 2 * (resTexRC.y * ${o[0]} + resTexRC.x);
        }
      `,new re(i))}getOutputPacked2DCoords(n,t){let o="";if(hn.arraysEqual(n,t))return o=`
        ivec2 getOutputCoords() {
          return 2 * ivec2(TexCoords.xy * vec2(${t[0]}, ${t[1]}));
        }
      `,new re(o);let i=t,s=Math.ceil(n[1]/2);return o=`
        ivec2 getOutputCoords() {
          ivec2 resTexRC = ivec2(TexCoords.xy *
                                vec2(${i[0]}, ${i[1]}));

          int index = resTexRC.y * ${i[0]} + resTexRC.x;

          // reverse r and c order for packed texture
          int r = imod(index, ${s}) * 2;
          int c = 2 * (index / ${s});

          return ivec2(r, c);
        }
      `,new re(o)}getOutputPacked3DCoords(n,t){let o=[t[0],t[1]],i=Math.ceil(n[2]/2),s=i*Math.ceil(n[1]/2),a=`
        ivec3 getOutputCoords() {
          ivec2 resTexRC = ivec2(TexCoords.xy *
                                vec2(${o[0]}, ${o[1]}));
          int index = resTexRC.y * ${o[0]} + resTexRC.x;

          int b = index / ${s};
          index -= b * ${s};

          // reverse r and c order for packed texture
          int r = imod(index, ${i}) * 2;
          int c = 2 * (index / ${i});

          return ivec3(b, r, c);
        }
      `;return new re(a)}getOutputPackedNDCoords(n,t){let o=[t[0],t[1]],i=Math.ceil(n[n.length-1]/2),s=i*Math.ceil(n[n.length-2]/2),a=s,u="",l="b, r, c";for(let p=2;p<n.length-1;p++)a*=n[n.length-p-1],u=`
      int b${p} = index / ${a};
      index -= b${p} * ${a};
    `+u,l=`b${p}, `+l;let d=`
      ivec${n.length} getOutputCoords() {
        ivec2 resTexRC = ivec2(TexCoords.xy *
                              vec2(${o[0]}, ${o[1]}));
        int index = resTexRC.y * ${o[0]} + resTexRC.x;

        ${u}

        int b = index / ${s};
        index -= b * ${s};

        // reverse r and c order for packed texture
        int r = imod(index, ${i}) * 2;
        int c = 2 * (index / ${i});

        return ivec${n.length}(${l});
      }
    `;return new re(d)}getOutputUnpacked1DCoords(n,t){let o=`
        int getOutputCoords() {
          ivec2 resTexRC = ivec2(TexCoords.xy *
                                vec2(${t[0]}, ${t[1]}));
          return resTexRC.y * ${t[0]} + resTexRC.x;
        }
      `;return new re(o)}getOutputUnpacked2DCoords(n,t){let o=`
        ivec2 getOutputCoords() {
          ivec2 resTexRC = ivec2(TexCoords.xy *
                                vec2(${t[0]}, ${t[1]}));
          int index = resTexRC.y * ${t[0]} + resTexRC.x;
          int r = index / ${n[1]};
          int c = index - r * ${n[1]};
          return ivec2(r, c);
        }
      `;return new re(o)}getOutputUnpacked3DCoords(n,t){let o="",i=n.length,s=null;i<2&&(s=[]),s=new Array(i-1),s[i-2]=n[i-1];for(let l=i-3;l>=0;--l)s[l]=s[l+1]*n[l+1];let a=["r","c","d"],u=s.map((l,d)=>{let p=`int ${a[d]} = index / ${l}`,h=d===s.length-1?`int ${a[d+1]} = index - ${a[d]} * ${l}`:`index -= ${a[d]} * ${l}`;return`${p}; ${h};`}).join("");return o=`
        ivec3 getOutputCoords() {
          ivec2 resTexRC = ivec2(TexCoords.xy *
                                vec2(${t[0]}, ${t[1]}));
          int index = resTexRC.y * ${t[0]} + resTexRC.x;
          ${u}
          return ivec3(r, c, d);
        }
      `,new re(o)}getOutputUnpacked4DCoords(n,t){let o="",i=n.length,s=null;i<2&&(s=[]),s=new Array(i-1),s[i-2]=n[i-1];for(let l=i-3;l>=0;--l)s[l]=s[l+1]*n[l+1];let a=["r","c","d","d2"],u=s.map((l,d)=>{let p=`int ${a[d]} = index / ${l}`,h=d===s.length-1?`int ${a[d+1]} = index - ${a[d]} * ${l}`:`index -= ${a[d]} * ${l}`;return`${p}; ${h};`}).join("");return o=`
      ivec4 getOutputCoords() {
          ivec2 resTexRC = ivec2(TexCoords.xy *
                                vec2(${t[0]}, ${t[1]}));
          int index = resTexRC.y * ${t[0]} + resTexRC.x;
          ${u}
          return ivec4(r, c, d, d2);
        }
      `,new re(o)}getOutputUnpacked5DCoords(n,t){let o="",i=n.length,s=null;i<2&&(s=[]),s=new Array(i-1),s[i-2]=n[i-1];for(let l=i-3;l>=0;--l)s[l]=s[l+1]*n[l+1];let a=["r","c","d","d2","d3"],u=s.map((l,d)=>{let p=`int ${a[d]} = index / ${l}`,h=d===s.length-1?`int ${a[d+1]} = index - ${a[d]} * ${l}`:`index -= ${a[d]} * ${l}`;return`${p}; ${h};`}).join("");return o=`
      ivec5 getOutputCoords() {
          ivec2 resTexRC = ivec2(TexCoords.xy *
                                vec2(${t[0]}, ${t[1]}));
          int index = resTexRC.y * ${t[0]} + resTexRC.x;
          ${u}
          return ivec5(r, c, d, d2, d3);
        }
      `,new re(o)}getOutputUnpacked6DCoords(n,t){let o="",i=n.length,s=null;i<2&&(s=[]),s=new Array(i-1),s[i-2]=n[i-1];for(let l=i-3;l>=0;--l)s[l]=s[l+1]*n[l+1];let a=["r","c","d","d2","d3","d4"],u=s.map((l,d)=>{let p=`int ${a[d]} = index / ${l}`,h=d===s.length-1?`int ${a[d+1]} = index - ${a[d]} * ${l}`:`index -= ${a[d]} * ${l}`;return`${p}; ${h};`}).join("");return o=`
     ivec6 getOutputCoords() {
         ivec2 resTexRC = ivec2(TexCoords.xy *
                               vec2(${t[0]}, ${t[1]}));
         int index = resTexRC.y * ${t[0]} + resTexRC.x;
         ${u}
         return ivec6(r, c, d, d2, d3, d4);
       }
     `,new re(o)}getCommonUtilFuncs(){let n={},t="uvFromFlat";n[t]=new re(`
    vec2 uvFromFlat(int texNumR, int texNumC, int index) {
      int texC = index / texNumR;
      int texR = index - texC * texNumR;
      // TODO: swap texR, texC order in following function so row is corresponding to u and column is corresponding to
      //       v.
      return (vec2(texR, texC) + halfCR) / vec2(texNumR, texNumC);
    }
    `),t="packedUVfrom1D",n[t]=new re(`
      vec2 packedUVfrom1D(int texNumR, int texNumC, int index) {
        int texelIndex = index / 2;
        int texR = texelIndex / texNumC;
        int texC = texelIndex - texR * texNumC;
        return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
      }
      `),t="packedUVfrom2D",n[t]=new re(`
      vec2 packedUVfrom2D(int texNumR, int texNumC, int texelsInLogicalRow, int row, int col) {
        int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);
        int texR = texelIndex / texNumC;
        int texC = texelIndex - texR * texNumC;
        return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
      }
      `),t="packedUVfrom3D",n[t]=new re(`
      vec2 packedUVfrom3D(int texNumR, int texNumC,
          int texelsInBatch, int texelsInLogicalRow, int b,
          int row, int col) {
        int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);
        int texR = index / texNumC;
        int texC = index - texR * texNumC;
        return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
      }
      `),t="sampleTexture";let o=fe(this.context.glContext.version);return n[t]=new re(`
        float sampleTexture(sampler2D textureSampler, vec2 uv) {
            return ${o.texture2D}(textureSampler, uv).r;
        }`),n}getInputsSamplingSnippets(){let n={},t=this.context.outputTextureLayout;return this.context.programInfo.inputNames.forEach((o,i)=>{let s=this.context.inputTextureLayouts[i],a=Wi(o);s.isPacked?n[a]=this.getPackedSamplerFromInput(a,o,s):n[a]=this.getUnpackedSamplerFromInput(a,o,s);let u=Qd(o);s.unpackedShape.length<=t.unpackedShape.length&&(s.isPacked?n[u]=this.getPackedSamplerAtOutputCoords(u,s,t,o):n[u]=this.getUnpackedSamplerAtOutputCoords(u,s,t,o))}),n}getPackedSamplerAtOutputCoords(n,t,o,i){let s=t.unpackedShape,a=o.unpackedShape,l=Wi(i),d=s.length,p=a.length,h=Mt.getBroadcastDims(s,a),g=Lt(p),b=p-d,v,$=hr();d===0?v="":p<2&&h.length>=1?v="coords = 0;":v=h.map(se=>`coords.${$[se+b]} = 0;`).join(`
`);let T="";p<2&&d>0?T="coords":T=s.map((se,R)=>`coords.${$[R+b]}`).join(", ");let x="return outputValue;",O=ie.size(s)===1,L=ie.size(a)===1;if(d===1&&!O&&!L)x=`
        return vec4(outputValue.xy, outputValue.xy);
      `;else if(O&&!L)p===1?x=`
          return vec4(outputValue.x, outputValue.x, 0., 0.);
        `:x=`
          return vec4(outputValue.x);
        `;else if(h.length){let se=d-2,R=d-1;h.indexOf(se)>-1&&h.indexOf(R)>-1?x="return vec4(outputValue.x);":h.indexOf(se)>-1?x="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":h.indexOf(R)>-1&&(x="return vec4(outputValue.xx, outputValue.zz);")}let W=`
        int lastDim = coords.${$[p-1]};
        coords.${$[p-1]} = coords.${$[p-2]};
        coords.${$[p-2]} = lastDim;
      `,J=`
      vec4 ${n}() {
        ${g} coords = getOutputCoords();
        ${W}
        ${v}
        vec4 outputValue = ${l}(${T});
        ${x}
      }
    `;return new re(J,["coordinates.getOutputCoords"])}getUnpackedSamplerAtOutputCoords(n,t,o,i){let s=[o.width,o.height],a=[t.width,t.height],u=t.unpackedShape.length,l=o.unpackedShape.length,d=t.unpackedShape,p=o.unpackedShape,h=Wi(i);if(u===l&&hn.arraysEqual(a,s)){let O=`
          float ${n}() {
            return sampleTexture(${i}, TexCoords);
          }
        `;return new re(O,["coordinates.sampleTexture"])}let g=Lt(l),b=Mt.getBroadcastDims(d,p),v=l-u,$,T=hr();u===0?$="":l<2&&b.length>=1?$="coords = 0;":$=b.map(O=>`coords.${T[O+v]} = 0;`).join(`
`);let x="";l<2&&u>0?x="coords":x=t.unpackedShape.map((O,k)=>`coords.${T[k+v]}`).join(", ");let A=`
        float ${n}() {
          ${g} coords = getOutputCoords();
          ${$}
          return ${h}(${x});
        }
      `;return new re(A,["coordinates.getOutputCoords"])}getPackedSamplerFromInput(n,t,o){switch(o.unpackedShape.length){case 0:return this.getPackedSamplerScalar(n,t);case 1:return this.getPackedSampler1D(n,t,o);case 2:return this.getPackedSampler2D(n,t,o);case 3:return this.getPackedSampler3D(n,t,o);default:return this.getPackedSamplerND(n,t,o)}}getUnpackedSamplerFromInput(n,t,o){let i=o.unpackedShape;switch(i.length){case 0:return this.getUnpackedSamplerScalar(n,t,o);case 1:return this.getUnpackedSampler1D(n,t,o);case 2:return this.getUnpackedSampler2D(n,t,o);case 3:return this.getUnpackedSampler3D(n,t,o);case 4:return this.getUnpackedSampler4D(n,t,o);case 5:return this.getUnpackedSampler5D(n,t,o);case 6:return this.getUnpackedSampler6D(n,t,o);default:throw new Error(`Unsupported dimension ${i.length}-D`)}}getPackedSamplerScalar(n,t){let o=fe(this.context.glContext.version),i=`
          vec4 ${n}() {
            return ${o.texture2D}(${t}, halfCR);
          }
        `;return new re(i)}getPackedSampler1D(n,t,o){let i=[o.width,o.height],s=[i[1],i[0]],a=fe(this.context.glContext.version),l=`vec4 ${n}(int index) {
      vec2 uv = packedUVfrom1D(
      ${s[0]}, ${s[1]}, index);
      return ${a.texture2D}(${t}, uv);
    }`;return new re(l,["coordinates.packedUVfrom1D"])}getPackedSampler2D(n,t,o){let i=o.unpackedShape,s=[o.width,o.height],a=fe(this.context.glContext.version),u=s[0],l=s[1];if(s!=null&&hn.arraysEqual(i,s)){let b=`vec4 ${n}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${l}.0, ${u}.0);
        return ${a.texture2D}(${t}, uv);
      }`;return new re(b)}let d=s,p=Math.ceil(i[1]/2),g=`vec4 ${n}(int row, int col) {
      vec2 uv = packedUVfrom2D(${d[1]}, ${d[0]}, ${p}, row, col);
      return ${a.texture2D}(${t}, uv);
    }`;return new re(g,["coordinates.packedUVfrom2D"])}getPackedSampler3D(n,t,o){let i=o.unpackedShape,s=[o.width,o.height],a=[s[0],s[1]],u=fe(this.context.glContext.version);if(i[0]===1){let v=i.slice(1),$=[1,2],T=Hn(i,v),x=["b","row","col"],A=JSON.parse(JSON.stringify(o));A.unpackedShape=T;let O=this.getPackedSamplerFromInput(n,t,A),L=`${O.routineBody}
      vec4 ${n}(int b, int row, int col) {
        return ${n}(${qn(x,$)});
      } `;return new re(L,O.dependencies)}let l=a[0],d=a[1],p=Math.ceil(i[2]/2),h=p*Math.ceil(i[1]/2),b=`vec4 ${n}(int b, int row, int col) {
      vec2 uv = packedUVfrom3D(
        ${d}, ${l}, ${h}, ${p}, b, row, col);
      return ${u.texture2D}(${t}, uv);}`;return new re(b,["coordinates.packedUVfrom3D"])}getPackedSamplerND(n,t,o){let i=o.unpackedShape,s=i.length,a=[o.width,o.height],u=fe(this.context.glContext.version),l=[a[0],a[1]],d=l[1],p=l[0],h=Math.ceil(i[s-1]/2),g=h*Math.ceil(i[s-2]/2),b="int b, int row, int col",v=`b * ${g} + (row / 2) * ${h} + (col / 2)`;for(let x=2;x<s-1;x++)b=`int b${x}, `+b,g*=i[s-x-1],v=`b${x} * ${g} + `+v;let T=`vec4 ${n}(${b}) {
      int index = ${v};
      int texR = index / ${p};
      int texC = index - texR * ${p};
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${p}, ${d});
      return ${u.texture2D}(${t}, uv);
    }`;return new re(T)}getUnpackedSamplerScalar(n,t,o){let[i,s]=[o.width,o.height];if(i===1&&s===1){let u=`
          float ${n}() {
            return sampleTexture(${t}, halfCR);
          }
        `;return new re(u,["coordinates.sampleTexture"])}let a=`
        float ${n}() {
          int offset_${t} = coordsToOffset(TexCoords, ${i}, ${s});
          vec2 uv = uvFromFlat(${i}, ${s}, offset_${t});
          return sampleTexture(${t}, uv);
        }
      `;return new re(a,["coordinates.uvFromFlat","coordinates.sampleTexture","coordinates.coordsToOffset"])}getUnpackedSampler1D(n,t,o){let i=o.width,s=o.height;if(s===1&&i===1){let u=`
        float ${n}(int index) {
          return sampleTexture(${t}, halfCR);
        }
      `;return new re(u,["coordinates.sampleTexture"])}if(s===1){let u=`
          float ${n}(int index) {
            vec2 uv = vec2((float(index) + 0.5) / ${i}.0, 0.5);
            return sampleTexture(${t}, uv);
          }
        `;return new re(u,["coordinates.sampleTexture"])}if(i===1){let u=`
          float ${n}(int index) {
            vec2 uv = vec2(0.5, (float(index) + 0.5) / ${s}.0);
            return sampleTexture(${t}, uv);
          }
        `;return new re(u,["coordinates.sampleTexture"])}let a=`
        float ${n}(int index) {
          vec2 uv = uvFromFlat(${i}, ${s}, index);
          return sampleTexture(${t}, uv);
        }
      `;return new re(a,["coordinates.uvFromFlat","coordinates.sampleTexture"])}getUnpackedSampler2D(n,t,o){let i=o.unpackedShape,s=[o.height,o.width];if(s!=null&&hn.arraysEqual(i,s)){let g=s[1],b=s[0],v=`
          float ${n}(int row, int col) {
            vec2 uv = (vec2(row, col) + halfCR) / vec2(${g}.0, ${b}.0);
            return sampleTexture(${t}, uv);
          }
        `;return new re(v,["coordinates.sampleTexture"])}let{newShape:a,keptDims:u}=Xn(i),l=a;if(l.length<i.length){let g=Hn(i,l),b=JSON.parse(JSON.stringify(o));b.unpackedShape=g;let v=["col","row"],$=`
          ${this.getUnpackedSamplerFromInput(n,t,b).routineBody}
          float ${n}(int row, int col) {
            return ${n}(${qn(v,u)});
          }
        `;return new re($,["coordinates.sampleTexture"])}let d=s[1],p=s[0];if(p===1){let g=`
          float ${n}(int row, int col) {
            int offset_${t} = coordsToOffset(TexCoords, ${d}, ${p});
            float index = dot(vec3(row, col, offset_${t}), vec3(${i[1]}, 1, 1));
            vec2 uv = vec2(0.5, (index + 0.5) / ${d}.0);
            return sampleTexture(${t}, uv);
          }
        `;return new re(g,["coordinates.sampleTexture","coordinates.coordsToOffset"])}if(d===1){let g=`
          float ${n}(int row, int col) {
            int offset_${t} = coordsToOffset(TexCoords, ${d}, ${p});
            float index = dot(vec3(row, col, offset_${t}), vec3(${i[1]}, 1, 1));
            vec2 uv = vec2((index + 0.5) / ${p}.0, 0.5);
            return sampleTexture(${t}, uv);
          }
        `;return new re(g,["coordinates.sampleTexture","coordinates.coordsToOffset"])}let h=`
        float ${n}(int row, int col) {
          int index = col * ${i[1]} + row;
          vec2 uv = uvFromFlat(${d}, ${p}, index);
          return sampleTexture(${t}, uv);
        }
      `;return new re(h,["coordinates.uvFromFlat","coordinates.sampleTexture","coordinates.coordsToOffset"])}getUnpackedSampler3D(n,t,o){let i=o.unpackedShape,s=i[1]*i[2],a=i[2],{newShape:u,keptDims:l}=Xn(i),d=u;if(d.length<i.length){let b=Hn(i,d),v=["batch","col","row"],$=JSON.parse(JSON.stringify(o));$.unpackedShape=b;let T=this.getUnpackedSamplerFromInput(n,t,$),x=l.reverse(),A=`
          ${T.routineBody}
          float ${n}(int batch, int row, int col) {
            return ${n}(${qn(v,x)});
          }
        `;return new re(A,T.dependencies)}let p=o.width,h=o.height,g=`
          float ${n}(int depth, int row, int col) {
            // Explicitly use integer operations as dot() only works on floats.
            int index = depth * ${s} + col * ${a} + row;
            vec2 uv = uvFromFlat(${p}, ${h}, index);
            return sampleTexture(${t}, uv);
          }
      `;return new re(g,["coordinates.uvFromFlat","coordinates.sampleTexture","coordinates.coordsToOffset"])}getUnpackedSampler4D(n,t,o){let i=o.unpackedShape,s=i[3],a=i[2]*s,u=i[1]*a,l=o.width,d=o.height,p=`
        float ${n}(int row, int col, int depth, int depth2) {
          int index = row * ${u} + col * ${a} +
              depth2 * ${s} + depth;
          vec2 uv = uvFromFlat(${l}, ${d}, index);
          return sampleTexture(${t}, uv);
        }
      `;return new re(p,["coordinates.uvFromFlat","coordinates.sampleTexture"])}getUnpackedSampler5D(n,t,o){let i=o.unpackedShape,s=i[4],a=i[3]*s,u=i[2]*a,l=i[1]*u,{newShape:d,keptDims:p}=Xn(i);if(d.length<i.length){let v=Hn(i,d),$=["row","col","depth","depth2","depth3"],T=JSON.parse(JSON.stringify(o));T.unpackedShape=v;let x=`
          ${this.getUnpackedSamplerFromInput(n,t,T).routineBody}
          float ${n}(int row, int col, int depth, int depth2, int depth3) {
            return ${n}(${qn($,p)});
          }
        `;return new re(x,["coordinates.sampleTexture","coordinates.uvFromFlat"])}let h=o.width,g=o.height,b=`
        float ${n}(int row, int col, int depth, int depth2, int depth3) {
          int index = row * ${l} + col * ${u} + depth * ${a} +
          depth3 * ${s} + depth2;
          vec2 uv = uvFromFlat(${h}, ${g}, index);
          return sampleTexture(${t}, uv);
        }
      `;return new re(b,["coordinates.sampleTexture","coordinates.uvFromFlat"])}getUnpackedSampler6D(n,t,o){let i=o.unpackedShape,s=i[5],a=i[4]*s,u=i[3]*a,l=i[2]*u,d=i[1]*l,{newShape:p,keptDims:h}=Xn(i);if(p.length<i.length){let $=Hn(i,p),T=["row","col","depth","depth2","depth3","depth4"],x=JSON.parse(JSON.stringify(o));x.unpackedShape=$;let A=`
            ${this.getUnpackedSamplerFromInput(n,t,x).routineBody}
            float ${n}(int row, int col, int depth,
              int depth2, int depth3, int depth4) {
              return ${n}(${qn(T,h)});
            }
          `;return new re(A,["coordinates.sampleTexture","coordinates.uvFromFlat"])}let g=o.width,b=o.height,v=`
          float ${n}(int row, int col, int depth,
            int depth2, int depth3, int depth4) {
            int index = row * ${d} + col * ${l} + depth * ${u} +
            depth2 * ${a} + depth3 * ${s} + depth4;
            vec2 uv = uvFromFlat(${g}, ${b}, index);
            return sampleTexture(${t}, uv);
          }
        `;return new re(v,["coordinates.uvFromFlat","coordinates.sampleTexture","coordinates.coordsToOffset"])}toVec(){let n=this.context.outputTextureLayout,t=n.shape.length,o=n.strides,i=n.width,s=n.height,a=[];for(let l=0;l<t-1;++l)a.push(`
        c[${l}] = offset / ${o[l]};`),a.push(`
        offset -= c[${l}] * ${o[l]};`);a.push(`
        c[${t-1}] = offset;`);let u=`
      void toVec(vec2 texCoords, out int c[${t}]) {
        int offset = coordsToOffset(texCoords, ${i}, ${s});
        ${a.join("")}
      }
      void toVec(int offset, out int c[${t}]) {
        ${a.join("")}
      }
    `;return{toVec:new re(u,["coordinates.coordsToOffset"])}}valueFrom(){let n={};return this.context.programInfo.inputNames.forEach((t,o)=>{let i=this.context.inputTextureLayouts[o],a=(i.unpackedShape.length>0?i.unpackedShape:i.shape).length,u=`_${t}`;n[u]=new re(this.getValueFromSingle(t,a,i.width,i.height,!1),[`shapeUtils.indicesToOffset${u}`,"coordinates.offsetToCoords","fragcolor.getColorAsFloat"]),u=u+"_T",n[u]=new re(this.getValueFromSingle(t,a,i.width,i.height,!0),[`shapeUtils.indicesToOffset${u}`,"coordinates.offsetToCoords","fragcolor.getColorAsFloat"])}),n}getValueFromSingle(n,t,o,i,s){let a=`_${n}`;s&&(a=a+"_T");let u=fe(this.context.glContext.version);return`
        float ${a}(int m[${t}]) {
          int offset = indicesToOffset${a}(m);
          vec2 coords = offsetToCoords(offset, ${o}, ${i});
          float value = getColorAsFloat(${u.texture2D}(${n}, coords));
          return value;
        }
        `}getPackedValueFrom(n,t,o,i,s){let a=`_${n}_Pack`;s&&(a=a+"_T");let u=fe(this.context.glContext.version);return`
        vec4 ${a}(int m[${t}]) {
          int offset = indicesToOffset_${n}(m);
          vec2 coords = offsetToCoords(offset, ${o}, ${i});
          return ${u.texture2D}(${n}, coords);
        }
        `}}});var aa,hh=B(()=>{"use strict";Vr();aa=class r extends rr{constructor(e){super(e)}getFunctions(){return{...this.encodeFloat32(),...this.decodeFloat32()}}getCustomTypes(){return{}}encodeFloat32(){return{encode:new re(`highp vec4 encode(highp float f) {
        return vec4(f, 0.0, 0.0, 0.0);
      }
        `)}}decodeFloat32(){return{decode:new re(`highp float decode(highp vec4 rgba) {
        return rgba.r;
      }
        `)}}encodeUint8(){let e=r.isLittleEndian()?"rgba.rgba=rgba.abgr;":"";return{encode:new re(`
      highp vec4 encode(highp float f) {
        highp float F = abs(f);
        highp float Sign = step(0.0,-f);
        highp float Exponent = floor(log2(F));
        highp float Mantissa = (exp2(- Exponent) * F);
        Exponent = floor(log2(F) + 127.0) + floor(log2(Mantissa));
        highp vec4 rgba;
        rgba[0] = 128.0 * Sign  + floor(Exponent*exp2(-1.0));
        rgba[1] = 128.0 * mod(Exponent,2.0) + mod(floor(Mantissa*128.0),128.0);
        rgba[2] = floor(mod(floor(Mantissa*exp2(23.0 -8.0)),exp2(8.0)));
        rgba[3] = floor(exp2(23.0)*mod(Mantissa,exp2(-15.0)));
        ${e}
        rgba = rgba / 255.0; // values need to be normalized to [0,1]
        return rgba;
    }
        `)}}decodeUint8(){let e=r.isLittleEndian()?"rgba.rgba=rgba.abgr;":"";return{decode:new re(`
        highp float decode(highp vec4 rgba) {
          rgba = rgba * 255.0; // values need to be de-normalized from [0,1] to [0,255]
          ${e}
          highp float Sign = 1.0 - step(128.0,rgba[0])*2.0;
          highp float Exponent = 2.0 * mod(rgba[0],128.0) + step(128.0,rgba[1]) - 127.0;
          highp float Mantissa = mod(rgba[1],128.0)*65536.0 + rgba[2]*256.0 +rgba[3] + float(0x800000);
          highp float Result =  Sign * exp2(Exponent) * (Mantissa * exp2(-23.0 ));
          return Result;
      }
        `)}}static isLittleEndian(){let e=new ArrayBuffer(4),n=new Uint32Array(e),t=new Uint8Array(e);if(n[0]=3735928559,t[0]===239)return!0;if(t[0]===222)return!1;throw new Error("unknown endianness")}}});var sa,mh=B(()=>{"use strict";Vr();lt();sa=class extends rr{constructor(e){super(e)}getFunctions(){return{...this.setFragColor(),...this.getColorAsFloat()}}getCustomTypes(){return{}}setFragColor(){let e=fe(this.context.glContext.version);return{setFragColor:new re(`
        void setFragColor(float value) {
            ${e.output} = encode(value);
        }
        `,["encoding.encode"])}}getColorAsFloat(){return{getColorAsFloat:new re(`
        float getColorAsFloat(vec4 color) {
            return decode(color);
        }
        `,["encoding.decode"])}}}});var ua,gh=B(()=>{"use strict";Vr();ua=class r extends rr{constructor(e){super(e)}getFunctions(){return{...this.bcastIndex(),...this.bcastMatmulIndex(),...this.offsetToIndices(),...this.indicesToOffset(),...this.incrementIndices()}}getCustomTypes(){return{}}bcastIndex(){let e=this.context.outputTextureLayout.shape.length,n={};return this.context.programInfo.inputNames.forEach((t,o)=>{let i=this.context.inputTextureLayouts[o].unpackedShape;if(i.length<=e){let s=i.length,a=e-s,u=`bcastIndices_${t}`,l="";for(let p=0;p<s;++p)l+=`
          realIndices[${p}] = int( mod(float(bcastedIndices[${a+p}]), ${i[p]}.0) );
          `;let d=`
        void ${u} (int bcastedIndices[${e}], out int realIndices[${s}]) {
          ${l}
        }
        `;n[u]=new re(d)}}),n}bcastMatmulIndex(){let e=this.context.outputTextureLayout.shape.length,n={};return this.context.programInfo.inputNames.forEach((t,o)=>{let i=this.context.inputTextureLayouts[o].shape;if(!(i.length<2||i.length>e)){let s=i.length,a=e-s,u=`bcastMatmulIndices_${t}`,l="";for(let p=0;p<s-2;++p)l+=`
          realIndices[${p}] = int( mod(float(bcastedIndices[${a+p}]), ${i[p]}.0) );
          `;let d=`
        void ${u}(int bcastedIndices[${e}], out int realIndices[${s}]) {
          ${l}
          realIndices[${s-1}] = bcastedIndices[${e-1}];
          realIndices[${s-2}] = bcastedIndices[${e-2}];
        }
        `;n[u]=new re(d)}}),n}indicesToOffset(){let e={};return this.context.programInfo.inputNames.forEach((n,t)=>{let o=this.context.inputTextureLayouts[t].shape,i=this.context.inputTextureLayouts[t].strides,s=o.length,a=`indicesToOffset_${n}`;e[a]=new re(r.indexToOffsetSingle(a,s,i)),a=`indicesToOffset_${n}_T`,e[a]=new re(r.indexToOffsetSingle(a,s,i.slice().reverse()))}),e}static indexToOffsetSingle(e,n,t){let o="";for(let i=n-1;i>=0;--i)o+=`
        offset += indices[${i}] * ${t[i]};
        `;return`
      int ${e}(int indices[${n}]) {
        int offset = 0;
        ${o}
        return offset;
      }
      `}offsetToIndices(){let e={};return this.context.programInfo.inputNames.forEach((n,t)=>{let o=this.context.inputTextureLayouts[t].shape,i=this.context.inputTextureLayouts[t].strides,s=o.length,a=`offsetToIndices_${n}`;e[a]=new re(r.offsetToIndicesSingle(a,s,i)),a=`offsetToIndices_${n}_T`,e[a]=new re(r.offsetToIndicesSingle(a,s,i.slice().reverse()))}),e}static offsetToIndicesSingle(e,n,t){let o=[];for(let i=0;i<n-1;++i)o.push(`
      indices[${i}] = offset / ${t[i]};`),o.push(`
        offset -= indices[${i}] * ${t[i]};`);return o.push(`
      indices[${n-1}] = offset;`),`
      void ${e}(int offset, out int indices[${n}]) {
        ${o.join("")}
      }
      `}incrementIndices(){let e={};return this.context.programInfo.inputNames.forEach((n,t)=>{let o=this.context.inputTextureLayouts[t].shape,i=o.length,s=`incrementIndices_${n}`,a="";for(let l=0;l<i;++l)a+=`
        shape[${l}] = ${o[l]};`;let u=`
        void ${s}(int axis, out int indices[${i}]) {
          int shape[${i}];
          ${a};
          for(int i = ${i} -1 ; i >= 0; --i) {
            if(i > axis) continue;
            indices[i] += 1;
            if(indices[i] < shape[i]) {
              break;
            }
            indices[i] = 0;
          }
        }
        `;e[s]=new re(u)}),e}}});var la,bh=B(()=>{"use strict";Vr();la=class extends rr{constructor(e){super(e)}getCustomTypes(){return{}}getFunctions(){return{...this.binaryVecFunctions(),...this.copyVec(),...this.setVecItem(),...this.getVecItem()}}binaryVecFunctions(){let n=this.context.outputTextureLayout.shape.length,t={add:"+=",sub:"-=",mul:"*=",div:"/="},o={};for(let i in t){let s=`${i}Vec`,a="";for(let l=0;l<n;++l)a+=`
          dest[${l}] ${t[i]} src[${l}];
          `;let u=`
        void ${s}(int src[${n}], out int dest[${n}]) {
          ${a}
        }
        `;o[s]=new re(u)}return o}copyVec(){let n=this.context.outputTextureLayout.shape.length,t="";for(let i=0;i<n;++i)t+=`
        dest[${i}] = src[${i}];
        `;let o=`
      void copyVec(int src[${n}], out int dest[${n}]) {
        ${t}
      }
      `;return{copyVec:new re(o)}}setVecItem(){let n=this.context.outputTextureLayout.shape.length,t=`
        if(index < 0)
            index =${n} + index;
        if (index == 0)
            m[0] = value;
        `;for(let i=1;i<n-1;++i)t+=`
        else if (index == ${i})
            m[${i}] = value;
            `;t+=`
        else
            m[${n-1}] = value;
        `;let o=`
      void setVecItem(out int m[${n}], int index, int value) {
        ${t}
      }
        `;return{setVecItem:new re(o)}}getVecItem(){let n=this.context.outputTextureLayout.shape.length,t=`
        if(index < 0)
            index = ${n} + index;
        if (index == 0)
            return m[0];
      `;for(let i=1;i<n-1;++i)t+=`
        else if (index == ${i})
            return m[${i}];
      `;t+=`
        else
            return m[${n-1}];
        `;let o=`
      int getVecItem(int m[${n}], int index) {
        ${t}
      }
    `;return{getVecItem:new re(o)}}}});var au,yh=B(()=>{"use strict";ph();hh();mh();gh();bh();au={encoding:aa,fragcolor:sa,vec:la,shapeUtils:ua,coordinates:ia}});var da,vh=B(()=>{"use strict";Vr();ch();yh();lt();da=class{constructor(e,n,t,o){this.libs={};this.glslLibRoutineDependencyGraph={};this.context=new Ki(e,n,t,o),Object.keys(au).forEach(s=>{let a=new au[s](this.context);this.libs[s]=a});let i=this.glslLibRoutineDependencyGraph;for(let s in this.libs){let u=this.libs[s].getFunctions();for(let l in u){let d=s+"."+l,p;i[d]?(p=i[d],p.routineBody=u[l].routineBody):(p=new Lo(d,u[l].routineBody),i[d]=p);let h=u[l].dependencies;if(h)for(let g=0;g<h.length;++g)if(i[h[g]])p.addDependency(i[h[g]]);else{let b=new Lo(h[g]);i[h[g]]=b,p.addDependency(b)}}}}preprocess(){let e=this.context.programInfo,n=e.shaderSource;return this.context.programInfo.hasMain||(n=`${n}
      ${Jd(this.context.glContext.version,this.context.outputTextureLayout.shape.length)}`),n=dh(n),`${Zd(this.context.glContext.version)}
    ${this.getUniforms(e.inputNames,e.variables)}
    ${this.getImports(n)}
    ${n}`}getImports(e){let n=this.selectGlslLibRoutinesToBeIncluded(e);if(n.length===0)return"";let t="";for(let o=0;o<n.length;++o)if(n[o].routineBody)t+=n[o].routineBody+`
`;else throw new Error(`Missing body for the Glsl Library routine: ${n[o].name}`);return t}selectGlslLibRoutinesToBeIncluded(e){let n=[];return Object.keys(this.glslLibRoutineDependencyGraph).forEach(t=>{let o=t.split(".")[1];e.indexOf(o)!==-1&&n.push(this.glslLibRoutineDependencyGraph[t])}),Yi.returnOrderedNodes(n)}getUniforms(e,n){let t=[];if(e)for(let o of e)t.push(`uniform sampler2D ${o};`);if(n)for(let o of n)t.push(`uniform ${o.type} ${o.name}${o.arrayLength?`[${o.arrayLength}]`:""};`);return t.join(`
`)}}});var ca,wh=B(()=>{"use strict";kt();Jt();vh();lt();ca=class{constructor(e,n,t){this.profiler=e;this.glContext=n;this.textureLayoutStrategy=t;this.repo=new Map,this.attributesBound=!1}getArtifact(e){return this.repo.get(e)}setArtifact(e,n){this.repo.set(e,n)}run(e,n,t){this.profiler.event("op",`ProgramManager.run ${e.programInfo.name??"unknown kernel"}`,()=>{let o=this.glContext.gl,i=e.program;o.useProgram(i);try{this.bindOutput(t),this.attributesBound||this.bindAttributes(e.attribLocations),this.bindUniforms(e.uniformLocations,e.programInfo.variables??[],n)}catch(s){throw Ze.error("ProgramManager",e.programInfo.shaderSource),s}this.profiler.event("backend","GlContext.draw()",()=>{this.glContext.draw()})},this.glContext)}dispose(){this.vertexShader&&this.glContext.deleteShader(this.vertexShader),this.repo.forEach(e=>this.glContext.deleteProgram(e.program))}build(e,n,t){return this.profiler.event("backend","ProgramManager.build",()=>{let o=new da(this.glContext,e,n,t),i=o.preprocess(),s=this.compile(i);return{programInfo:e,program:s,uniformLocations:this.getUniformLocations(s,o.context.programInfo.inputNames,o.context.programInfo.variables),attribLocations:this.getAttribLocations(s)}})}compile(e){if(!this.vertexShader){Ze.verbose("ProrgramManager","Compiling and caching Vertex shader for the first time");let o=Xd(this.glContext.version);this.vertexShader=this.glContext.compileShader(o,this.glContext.gl.VERTEX_SHADER)}be.debug&&Ze.verbose("ProrgramManager",`FragShader:
${e}
`);let n=this.glContext.compileShader(e,this.glContext.gl.FRAGMENT_SHADER),t=this.glContext.createProgram(this.vertexShader,n);return this.glContext.deleteShader(n),t}bindOutput(e){let n=e.width,t=e.height;Ze.verbose("ProrgramManager",`Binding output texture to Framebuffer: w/h=${n}/${t}, shape=${e.shape}, type=${e.tensor.type}`),this.glContext.attachFramebuffer(e.texture,n,t)}bindAttributes(e){let n=e.position,t=e.textureCoord;this.glContext.setVertexAttributes(n,t),this.attributesBound=!0}bindUniforms(e,n,t){let o=this.glContext.gl,i=0;for(let{name:s,type:a,location:u,arrayLength:l}of e){let d=n.find(p=>p.name===s)?.data;if(a!=="sampler2D"&&!d)throw new Error(`variable '${s}' does not have data defined in program info`);switch(a){case"sampler2D":this.bindTexture(t[i],u,i),i++;break;case"float":l?o.uniform1fv(u,d):o.uniform1f(u,d);break;case"int":l?o.uniform1iv(u,d):o.uniform1i(u,d);break;default:throw new Error(`Uniform not implemented: ${a}`)}}}bindTexture(e,n,t){this.glContext.bindTextureToUniform(e.texture,t,n)}getAttribLocations(e){return{position:this.getAttribLocation(e,"position"),textureCoord:this.getAttribLocation(e,"textureCoord")}}getUniformLocations(e,n,t){let o=[];if(n)for(let i of n)o.push({name:i,type:"sampler2D",location:this.getUniformLocation(e,i)});if(t)for(let i of t)o.push({...i,location:this.getUniformLocation(e,i.name)});return o}getUniformLocation(e,n){let o=this.glContext.gl.getUniformLocation(e,n);if(o===null)throw new Error(`Uniform ${n} not found.`);return o}getAttribLocation(e,n){return this.glContext.gl.getAttribLocation(e,n)}}});var fa,xh=B(()=>{"use strict";Jt();zo();fa=class{constructor(e,n,t,o){this.glContext=e;this.layoutStrategy=n;this.profiler=t;this.config=o;this.pendingRead=new Map;o.reuseTextures&&(this.inUseTextures=new Map,this.idleTextures=new Map,this.textureLookup=new Map)}createTextureFromLayout(e,n,t,o){let i=this.toEncoderType(e),s=this.glContext.getEncoder(i,n.channels||1,o);if(n.isPacked&&o===1)throw new Error("not implemented");let a=n.width,u=n.height,l,d;if(this.config.reuseTextures){l=`${a}x${u}_${s.format}_${s.internalFormat}_${s.textureType}`,d=this.inUseTextures.get(l),d||(d=[],this.inUseTextures.set(l,d));let h=this.idleTextures.get(l);if(h&&h.length>0){let g=h.pop();return d.push(g),o===1&&this.glContext.updateTexture(g,a,u,s,this.toTextureData(e,t)),g}}Ze.verbose("TextureManager",`Creating new texture of size ${n.width}x${n.height}`);let p=this.glContext.allocateTexture(a,u,s,this.toTextureData(e,t));return this.config.reuseTextures&&(d.push(p),this.textureLookup.set(p,l)),p}readTexture(e,n,t){return t||(t=1),this.profiler.event("backend","TextureManager.readTexture",()=>{let o=e.shape.reduce((s,a)=>s*a)*t,i=this.glContext.readTexture(e.texture,e.width,e.height,o,this.toEncoderType(n),t);return this.toTensorData(n,i)})}async readTextureAsync(e,n,t){let o=e.tensor.dataId;if(t||(t=1),this.pendingRead.has(o)){let i=this.pendingRead.get(o);return new Promise(s=>i?.push(s))}return this.profiler.event("backend","TextureManager.readTextureAsync",async()=>{this.pendingRead.set(o,[]);let i=e.shape.reduce((l,d)=>l*d)*t;await this.glContext.createAndWaitForFence();let s=this.glContext.readTexture(e.texture,e.width,e.height,i,this.toEncoderType(n),t),a=this.toTensorData(n,s),u=this.pendingRead.get(o);return this.pendingRead.delete(o),u?.forEach(l=>l(a)),a})}readUint8TextureAsFloat(e){return this.profiler.event("backend","TextureManager.readUint8TextureAsFloat",()=>{let n=e.shape.reduce((o,i)=>o*i),t=this.glContext.readTexture(e.texture,e.width,e.height,n*4,"byte",4);return new Float32Array(t.buffer,t.byteOffset,n)})}releaseTexture(e,n){let t;if(this.config.reuseTextures&&(t=this.textureLookup.get(e.texture),t)){n&&this.textureLookup.delete(t);let o=this.inUseTextures.get(t);if(o){let i=o.indexOf(e.texture);if(i!==-1){o.splice(i,1);let s=this.idleTextures.get(t);s||(s=[],this.idleTextures.set(t,s)),s.push(e.texture)}}}(!t||n)&&(Ze.verbose("TextureManager",`Deleting texture of size ${e.width}x${e.height}`),this.glContext.deleteTexture(e.texture))}toTensorData(e,n){switch(e){case"int16":return n instanceof Int16Array?n:Int16Array.from(n);case"int32":return n instanceof Int32Array?n:Int32Array.from(n);case"int8":return n instanceof Int8Array?n:Int8Array.from(n);case"uint16":return n instanceof Uint16Array?n:Uint16Array.from(n);case"uint32":return n instanceof Uint32Array?n:Uint32Array.from(n);case"uint8":case"bool":return n instanceof Uint8Array?n:Uint8Array.from(n);case"float32":return n instanceof Float32Array?n:Float32Array.from(n);case"float64":return n instanceof Float64Array?n:Float64Array.from(n);default:throw new Error(`TensorData type ${e} is not supported`)}}toTextureData(e,n){if(n)return n instanceof Float32Array?n:new Float32Array(n)}toEncoderType(e){return"float"}clearActiveTextures(){this.glContext.clearActiveTextures()}}});var pa,_h=B(()=>{"use strict";Jt();zl();pc();uh();wh();iu();xh();pa=class{constructor(e,n){this.backend=e;this.context=n;this.layoutStrategy=new oa(e.glContext.maxTextureSize),this.programManager=new ca(this.context.profiler,e.glContext,this.layoutStrategy),this.textureManager=new fa(e.glContext,this.layoutStrategy,this.context.profiler,{reuseTextures:e.textureCacheMode==="full"}),this.packedTextureDataCache=new Map,this.unpackedTextureDataCache=new Map,this.pack=e.pack,this.pack2unpackMap=new Map,this.unpack2packMap=new Map}createInferenceHandler(){return new ji(this)}onGraphInitialized(e){let n=e.getValues().filter(t=>t.from===-1&&t.tensor).map(t=>t.tensor.dataId);this.initializers=new Set(n)}isInitializer(e){return this.initializers?this.initializers.has(e):!1}addInitializer(e){this.initializers.add(e)}getTextureData(e,n){return n?this.packedTextureDataCache.get(e):this.unpackedTextureDataCache.get(e)}setTextureData(e,n,t=!1){Ze.verbose("WebGLSessionHandler","Storing Texture data in cache"),t?this.packedTextureDataCache.set(e,n):this.unpackedTextureDataCache.set(e,n)}dispose(){this.programManager.dispose(),this.textureManager.clearActiveTextures(),this.packedTextureDataCache.forEach(e=>this.textureManager.releaseTexture(e,!0)),this.packedTextureDataCache=new Map,this.unpackedTextureDataCache.forEach(e=>this.textureManager.releaseTexture(e,!0)),this.unpackedTextureDataCache=new Map}resolve(e,n,t){let o=Rl(e,n,sh);return{impl:o.opImpl,context:o.opInit?o.opInit(e,t):e}}}});function _x(r){let e=0;for(;e<r.length&&r[e]();++e);return e-1}var Fo,Th=B(()=>{"use strict";kt();zo();zo();Tr();Fo=class{constructor(e,n){this.frameBufferBound=!1;this.itemsToPoll=[];this.gl=e,this.version=n,this.getExtensions(),this.vertexbuffer=this.createVertexbuffer(),this.framebuffer=this.createFramebuffer(),this.queryVitalParameters()}allocateTexture(e,n,t,o){let i=this.gl,s=i.createTexture();i.bindTexture(i.TEXTURE_2D,s),i.texParameteri(i.TEXTURE_2D,i.TEXTURE_MIN_FILTER,i.NEAREST),i.texParameteri(i.TEXTURE_2D,i.TEXTURE_MAG_FILTER,i.NEAREST),i.texParameteri(i.TEXTURE_2D,i.TEXTURE_WRAP_S,i.CLAMP_TO_EDGE),i.texParameteri(i.TEXTURE_2D,i.TEXTURE_WRAP_T,i.CLAMP_TO_EDGE);let a=o?t.encode(o,e*n):null;return i.texImage2D(i.TEXTURE_2D,0,t.internalFormat,e,n,0,t.format,t.textureType,a),this.checkError(),s}updateTexture(e,n,t,o,i){let s=this.gl;s.bindTexture(s.TEXTURE_2D,e);let a=o.encode(i,n*t);s.texSubImage2D(s.TEXTURE_2D,0,0,0,n,t,o.format,o.textureType,a),this.checkError()}attachFramebuffer(e,n,t){let o=this.gl;o.bindTexture(o.TEXTURE_2D,e),o.bindFramebuffer(o.FRAMEBUFFER,this.framebuffer),o.framebufferTexture2D(o.FRAMEBUFFER,o.COLOR_ATTACHMENT0,o.TEXTURE_2D,e,0),this.checkError(),o.viewport(0,0,n,t),o.scissor(0,0,n,t)}readTexture(e,n,t,o,i,s){let a=this.gl;s||(s=1),this.frameBufferBound||this.attachFramebuffer(e,n,t);let u=this.getEncoder(i,s),l=u.allocate(n*t);return a.bindTexture(a.TEXTURE_2D,e),a.framebufferTexture2D(a.FRAMEBUFFER,a.COLOR_ATTACHMENT0,a.TEXTURE_2D,e,0),a.readPixels(0,0,n,t,a.RGBA,u.textureType,l),this.checkError(),u.decode(l,o)}isFramebufferReady(){return!0}getActiveTexture(){let e=this.gl;return`TEXTURE${e.getParameter(this.gl.ACTIVE_TEXTURE)-e.TEXTURE0}`}getTextureBinding(){return this.gl.getParameter(this.gl.TEXTURE_BINDING_2D)}getFramebufferBinding(){return this.gl.getParameter(this.gl.FRAMEBUFFER_BINDING)}setVertexAttributes(e,n){let t=this.gl;t.vertexAttribPointer(e,3,t.FLOAT,!1,20,0),t.enableVertexAttribArray(e),n!==-1&&(t.vertexAttribPointer(n,2,t.FLOAT,!1,20,12),t.enableVertexAttribArray(n)),this.checkError()}createProgram(e,n){let t=this.gl,o=t.createProgram();return t.attachShader(o,e),t.attachShader(o,n),t.linkProgram(o),o}compileShader(e,n){let t=this.gl,o=t.createShader(n);if(!o)throw new Error(`createShader() returned null with type ${n}`);if(t.shaderSource(o,e),t.compileShader(o),t.getShaderParameter(o,t.COMPILE_STATUS)===!1)throw new Error(`Failed to compile shader: ${t.getShaderInfoLog(o)}
Shader source:
${e}`);return o}deleteShader(e){this.gl.deleteShader(e)}bindTextureToUniform(e,n,t){let o=this.gl;o.activeTexture(o.TEXTURE0+n),this.checkError(),o.bindTexture(o.TEXTURE_2D,e),this.checkError(),o.uniform1i(t,n),this.checkError()}draw(){this.gl.drawArrays(this.gl.TRIANGLE_STRIP,0,4),this.checkError()}checkError(){if(be.debug){let e=this.gl,n=e.getError(),t="";switch(n){case e.NO_ERROR:return;case e.INVALID_ENUM:t="INVALID_ENUM";break;case e.INVALID_VALUE:t="INVALID_VALUE";break;case e.INVALID_OPERATION:t="INVALID_OPERATION";break;case e.INVALID_FRAMEBUFFER_OPERATION:t="INVALID_FRAMEBUFFER_OPERATION";break;case e.OUT_OF_MEMORY:t="OUT_OF_MEMORY";break;case e.CONTEXT_LOST_WEBGL:t="CONTEXT_LOST_WEBGL";break;default:t=`Unknown WebGL Error: ${n.toString(16)}`}throw new Error(t)}}deleteTexture(e){this.gl.deleteTexture(e)}deleteProgram(e){this.gl.deleteProgram(e)}getEncoder(e,n,t=0){if(this.version===2)return new Hi(this.gl,n);switch(e){case"float":return t===1||this.isRenderFloat32Supported?new Ro(this.gl,n):new Ro(this.gl,n,this.textureHalfFloatExtension.HALF_FLOAT_OES);case"int":throw new Error("not implemented");case"byte":return new qi(this.gl,n);default:throw new Error(`Invalid dataType: ${e}`)}}clearActiveTextures(){let e=this.gl;for(let n=0;n<this.maxTextureImageUnits;++n)e.activeTexture(e.TEXTURE0+n),e.bindTexture(e.TEXTURE_2D,null)}dispose(){if(this.disposed)return;let e=this.gl;e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteFramebuffer(this.framebuffer),e.bindBuffer(e.ARRAY_BUFFER,null),e.deleteBuffer(this.vertexbuffer),e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null),e.finish(),this.disposed=!0}createDefaultGeometry(){return new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0])}createVertexbuffer(){let e=this.gl,n=e.createBuffer();if(!n)throw new Error("createBuffer() returned null");let t=this.createDefaultGeometry();return e.bindBuffer(e.ARRAY_BUFFER,n),e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW),this.checkError(),n}createFramebuffer(){let e=this.gl.createFramebuffer();if(!e)throw new Error("createFramebuffer returned null");return e}queryVitalParameters(){let e=this.gl;if(this.isFloatTextureAttachableToFrameBuffer=this.checkFloatTextureAttachableToFrameBuffer(),this.isRenderFloat32Supported=this.checkRenderFloat32(),this.isFloat32DownloadSupported=this.checkFloat32Download(),this.version===1&&!this.textureHalfFloatExtension&&!this.isRenderFloat32Supported)throw new Error("both float32 and float16 TextureType are not supported");this.isBlendSupported=!this.isRenderFloat32Supported||this.checkFloat32Blend(),this.maxTextureSize=e.getParameter(e.MAX_TEXTURE_SIZE),this.maxTextureImageUnits=e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS),this.version}getExtensions(){this.version===2?(this.colorBufferFloatExtension=this.gl.getExtension("EXT_color_buffer_float"),this.disjointTimerQueryWebgl2Extension=this.gl.getExtension("EXT_disjoint_timer_query_webgl2")):(this.textureFloatExtension=this.gl.getExtension("OES_texture_float"),this.textureHalfFloatExtension=this.gl.getExtension("OES_texture_half_float"))}checkFloatTextureAttachableToFrameBuffer(){let e=this.gl,n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n);let t=this.version===2?e.RGBA32F:e.RGBA;e.texImage2D(e.TEXTURE_2D,0,t,1,1,0,e.RGBA,e.FLOAT,null);let o=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,o),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);let i=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(o),i}checkRenderFloat32(){if(this.version===2){if(!this.colorBufferFloatExtension)return!1}else if(!this.textureFloatExtension)return!1;return this.isFloatTextureAttachableToFrameBuffer}checkFloat32Download(){if(this.version===2){if(!this.colorBufferFloatExtension)return!1}else if(!this.textureFloatExtension||!this.gl.getExtension("WEBGL_color_buffer_float"))return!1;return this.isFloatTextureAttachableToFrameBuffer}checkFloat32Blend(){let e=this.gl,n,t,o,i,s;try{n=e.createTexture(),t=e.createFramebuffer(),e.bindTexture(e.TEXTURE_2D,n);let a=this.version===2?e.RGBA32F:e.RGBA;return e.texImage2D(e.TEXTURE_2D,0,a,1,1,0,e.RGBA,e.FLOAT,null),e.bindFramebuffer(e.FRAMEBUFFER,t),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0),e.enable(e.BLEND),o=e.createShader(e.VERTEX_SHADER),!o||(e.shaderSource(o,"void main(){}"),e.compileShader(o),i=e.createShader(e.FRAGMENT_SHADER),!i)||(e.shaderSource(i,"precision highp float;void main(){gl_FragColor=vec4(0.5);}"),e.compileShader(i),s=e.createProgram(),!s)?!1:(e.attachShader(s,o),e.attachShader(s,i),e.linkProgram(s),e.useProgram(s),e.drawArrays(e.POINTS,0,1),e.getError()===e.NO_ERROR)}finally{e.disable(e.BLEND),s&&e.deleteProgram(s),o&&e.deleteShader(o),i&&e.deleteShader(i),t&&(e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteFramebuffer(t)),n&&(e.bindTexture(e.TEXTURE_2D,null),e.deleteTexture(n))}}beginTimer(){if(this.version===2&&this.disjointTimerQueryWebgl2Extension){let e=this.gl,n=this.disjointTimerQueryWebgl2Extension,t=e.createQuery();return e.beginQuery(n.TIME_ELAPSED_EXT,t),t}else throw new Error("WebGL1 profiling currently not supported.")}endTimer(){if(this.version===2&&this.disjointTimerQueryWebgl2Extension){let e=this.gl,n=this.disjointTimerQueryWebgl2Extension;e.endQuery(n.TIME_ELAPSED_EXT);return}else throw new Error("WebGL1 profiling currently not supported")}isTimerResultAvailable(e){let n=!1,t=!1;if(this.version===2&&this.disjointTimerQueryWebgl2Extension){let o=this.gl,i=this.disjointTimerQueryWebgl2Extension;n=o.getQueryParameter(e,o.QUERY_RESULT_AVAILABLE),t=o.getParameter(i.GPU_DISJOINT_EXT)}else throw new Error("WebGL1 profiling currently not supported");return n&&!t}getTimerResult(e){let n=0;if(this.version===2){let t=this.gl;n=t.getQueryParameter(e,t.QUERY_RESULT),t.deleteQuery(e)}else throw new Error("WebGL1 profiling currently not supported");return n/1e6}async waitForQueryAndGetTime(e){return await Ps(()=>this.isTimerResultAvailable(e)),this.getTimerResult(e)}async createAndWaitForFence(){let e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let n,t=e,o=t.fenceSync(t.SYNC_GPU_COMMANDS_COMPLETE,0);return e.flush(),o===null?n=()=>!0:n=()=>{let i=t.clientWaitSync(o,0,0);return i===t.ALREADY_SIGNALED||i===t.CONDITION_SATISFIED},{query:o,isFencePassed:n}}async pollFence(e){return new Promise(n=>{this.addItemToPoll(()=>e.isFencePassed(),()=>n())})}pollItems(){let e=_x(this.itemsToPoll.map(n=>n.isDoneFn));for(let n=0;n<=e;++n){let{resolveFn:t}=this.itemsToPoll[n];t()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}async addItemToPoll(e,n){this.itemsToPoll.push({isDoneFn:e,resolveFn:n}),!(this.itemsToPoll.length>1)&&await Ps(()=>(this.pollItems(),this.itemsToPoll.length===0))}}});function su(r){let e;if((!r||r==="webgl2")&&"webgl2"in Zn?e=Zn.webgl2:(!r||r==="webgl")&&"webgl"in Zn&&(e=Zn.webgl),!e)try{let t=$x();e=$h(t,r)}catch{let o=Tx();e=$h(o,r)}r=r||e.version===1?"webgl":"webgl2";let n=e.gl;return Zn[r]=e,n.isContextLost()?(delete Zn[r],su(r)):(n.disable(n.DEPTH_TEST),n.disable(n.STENCIL_TEST),n.disable(n.BLEND),n.disable(n.DITHER),n.disable(n.POLYGON_OFFSET_FILL),n.disable(n.SAMPLE_COVERAGE),n.enable(n.SCISSOR_TEST),n.enable(n.CULL_FACE),n.cullFace(n.BACK),e)}function $h(r,e){let n={alpha:!1,depth:!1,antialias:!1,stencil:!1,preserveDrawingBuffer:!1,premultipliedAlpha:!1,failIfMajorPerformanceCaveat:!1},t,o=n;if((!e||e==="webgl2")&&(t=r.getContext("webgl2",o),t))try{return new Fo(t,2)}catch(i){Ze.warning("GlContextFactory",`failed to create WebGLContext using contextId 'webgl2'. Error: ${i}`)}if((!e||e==="webgl")&&(t=r.getContext("webgl",o)||r.getContext("experimental-webgl",o),t))try{return new Fo(t,1)}catch(i){Ze.warning("GlContextFactory",`failed to create WebGLContext using contextId 'webgl' or 'experimental-webgl'. Error: ${i}`)}throw new Error("WebGL is not supported")}function Tx(){if(typeof document>"u")throw new TypeError("failed to create canvas: document is not supported");let r=document.createElement("canvas");return r.width=1,r.height=1,r}function $x(){if(typeof OffscreenCanvas>"u")throw new TypeError("failed to create offscreen canvas: OffscreenCanvas is not supported");return new OffscreenCanvas(1,1)}var Zn,Sh=B(()=>{"use strict";Jt();Th();Zn={}});var ha,Ih=B(()=>{"use strict";kt();Jt();_h();Sh();ha=class{get contextId(){return be.webgl.contextId}set contextId(e){be.webgl.contextId=e}get matmulMaxBatchSize(){return be.webgl.matmulMaxBatchSize}set matmulMaxBatchSize(e){be.webgl.matmulMaxBatchSize=e}get textureCacheMode(){return be.webgl.textureCacheMode}set textureCacheMode(e){be.webgl.textureCacheMode=e}get pack(){return be.webgl.pack}set pack(e){be.webgl.pack=e}get async(){return be.webgl.async}set async(e){be.webgl.async=e}initialize(){try{return this.glContext=su(this.contextId),typeof this.matmulMaxBatchSize!="number"&&(this.matmulMaxBatchSize=16),typeof this.textureCacheMode!="string"&&(this.textureCacheMode="full"),typeof this.pack!="boolean"&&(this.pack=!1),typeof this.async!="boolean"&&(this.async=!1),Ze.setWithEnv(be),be.webgl.context||Object.defineProperty(be.webgl,"context",{value:this.glContext.gl}),Ze.verbose("WebGLBackend",`Created WebGLContext: ${typeof this.glContext} with matmulMaxBatchSize: ${this.matmulMaxBatchSize}; textureCacheMode: ${this.textureCacheMode}; pack: ${this.pack}; async: ${this.async}.`),!0}catch(e){return Ze.warning("WebGLBackend",`Unable to initialize WebGLBackend. ${e}`),!1}}createSessionHandler(e){return new pa(this,e)}dispose(){this.glContext.dispose()}}});async function uu(r){if(r){let e=typeof r=="string"?[r]:r;for(let n of e){let t=Ah.get(n);if(t)return t;let o=await Ix(n);if(o)return o}}else return uu(["webgl"]);throw new Error("no available backend to use")}async function Ix(r){let e=Sx;if(typeof e[r]<"u"&&Ax(e[r])){let n=e[r],t=n.initialize();if(typeof t=="object"&&"then"in t&&(t=await t),t)return Ah.set(r,n),n}}function Ax(r){let e=r;return"initialize"in e&&typeof e.initialize=="function"&&"createSessionHandler"in e&&typeof e.createSessionHandler=="function"&&"dispose"in e&&typeof e.dispose=="function"}var Ah,Sx,Oh=B(()=>{"use strict";Ih();Ah=new Map,Sx={webgl:new ha}});var lu,ma,Eh=B(()=>{"use strict";Jt();lu=class{constructor(e,n){this.op=e;this.node=n}},ma=class{constructor(e,n,t){this.graph=e;this.profiler=t;this.initialize(n)}initialize(e){this.profiler.event("session","ExecutionPlan.initialize",()=>{let n=this.graph.getNodes();if(n.length!==e.length)throw new Error("The size of nodes and OPs do not match.");this._ops=e.map((t,o)=>new lu(t,n[o])),this.reset(),this._starter=[],this._ops.forEach((t,o)=>{let i=!0;for(let s of t.node.inputs)if(!this._values[s]&&this.graph.getInputIndices().indexOf(s)===-1){i=!1;break}i&&this._starter.push(o)})})}reset(){this._values=this.graph.getValues().map(e=>e.tensor)}async execute(e,n){return this.profiler.event("session","ExecutionPlan.execute",async()=>{this.reset();let t=e.createInferenceHandler(),o=this.graph.getInputIndices();if(n.length!==o.length)throw new Error(`number of input tensors don't match the number of inputs to the model: actual: ${n.length} expected: ${o.length}`);n.forEach((d,p)=>{let h=o[p];this._values[h]=d});let i=this._starter.slice(0),s=this.graph.getValues(),a=this.graph.getNodes(),u=0;for(;u<i.length;){let d=i[u++],p=this._ops[d],h=p.node.inputs.map($=>this._values[$]);if(h.indexOf(void 0)!==-1)throw new Error(`unresolved input detected: op: ${p.node}`);let g=h;Ze.verbose("ExecPlan",`Runing op:${p.node.name} (${g.map(($,T)=>`'${p.node.inputs[T]}': ${$.type}[${$.dims.join(",")}]`).join(", ")})`);let b=await this.profiler.event("node",p.node.name,async()=>p.op.impl(t,g,p.op.context));if(b.length!==p.node.outputs.length)throw new Error("the size of output does not match model definition.");b.forEach(($,T)=>{let x=p.node.outputs[T];if(this._values[x])throw new Error(`output [${x}] already has value: op:${p.node.name}`);this._values[x]=$});let v=new Set;b.forEach(($,T)=>{let x=p.node.outputs[T];for(let A of s[x].to){let O=a[A],k=!0;for(let L of O.inputs)if(!this._values[L]){k=!1;break}k&&v.add(A)}}),i.push(...v)}let l=[];for(let d=0;d<this.graph.getOutputIndices().length;d++){let p=this.graph.getOutputIndices()[d],h=this._values[p];if(h===void 0)throw new Error(`required output [${p}] does not have value`);p===0?await h.getData():h.data,l.push(h)}return Ze.verbose("ExecPlan","disposing of inferenceHandler"),t.dispose(),l})}}});var Ne,ir,Go,Ch=B(()=>{"use strict";Eo();Ne=Nn(Un());yn();Ke();ir=le.experimental.fbs,Go=class r{constructor(e){if(this._attributes=new Map,e!=null){for(let n of e)n instanceof Ne.onnx.AttributeProto?this._attributes.set(n.name,[r.getValue(n),r.getType(n)]):n instanceof ir.Attribute&&this._attributes.set(n.name(),[r.getValue(n),r.getType(n)]);if(this._attributes.size<e.length)throw new Error("duplicated attribute names")}}set(e,n,t){this._attributes.set(e,[t,n])}delete(e){this._attributes.delete(e)}getFloat(e,n){return this.get(e,"float",n)}getInt(e,n){return this.get(e,"int",n)}getString(e,n){return this.get(e,"string",n)}getTensor(e,n){return this.get(e,"tensor",n)}getFloats(e,n){return this.get(e,"floats",n)}getInts(e,n){return this.get(e,"ints",n)}getStrings(e,n){return this.get(e,"strings",n)}getTensors(e,n){return this.get(e,"tensors",n)}get(e,n,t){let o=this._attributes.get(e);if(o===void 0){if(t!==void 0)return t;throw new Error(`required attribute not found: ${e}`)}if(o[1]!==n)throw new Error(`type mismatch: expected ${n} but got ${o[1]}`);return o[0]}static getType(e){let n=e instanceof Ne.onnx.AttributeProto?e.type:e.type();switch(n){case Ne.onnx.AttributeProto.AttributeType.FLOAT:return"float";case Ne.onnx.AttributeProto.AttributeType.INT:return"int";case Ne.onnx.AttributeProto.AttributeType.STRING:return"string";case Ne.onnx.AttributeProto.AttributeType.TENSOR:return"tensor";case Ne.onnx.AttributeProto.AttributeType.FLOATS:return"floats";case Ne.onnx.AttributeProto.AttributeType.INTS:return"ints";case Ne.onnx.AttributeProto.AttributeType.STRINGS:return"strings";case Ne.onnx.AttributeProto.AttributeType.TENSORS:return"tensors";default:throw new Error(`attribute type is not supported yet: ${Ne.onnx.AttributeProto.AttributeType[n]}`)}}static getValue(e){let n=e instanceof Ne.onnx.AttributeProto?e.type:e.type();if(n===Ne.onnx.AttributeProto.AttributeType.GRAPH||n===Ne.onnx.AttributeProto.AttributeType.GRAPHS)throw new Error("graph attribute is not supported yet");let t=this.getValueNoCheck(e);if(n===Ne.onnx.AttributeProto.AttributeType.INT&&Wt.isLong(t))return Wt.longToNumber(t);if(n===Ne.onnx.AttributeProto.AttributeType.INTS){let o=t,i=new Array(o.length);for(let s=0;s<o.length;s++){let a=o[s];i[s]=Wt.longToNumber(a)}return i}if(n===Ne.onnx.AttributeProto.AttributeType.TENSOR)return e instanceof Ne.onnx.AttributeProto?wt.fromProto(t):wt.fromOrtTensor(t);if(n===Ne.onnx.AttributeProto.AttributeType.TENSORS){if(e instanceof Ne.onnx.AttributeProto)return t.map(i=>wt.fromProto(i));if(e instanceof ir.Attribute)return t.map(i=>wt.fromOrtTensor(i))}return n===Ne.onnx.AttributeProto.AttributeType.STRING&&e instanceof Ne.onnx.AttributeProto?Bo(t):n===Ne.onnx.AttributeProto.AttributeType.STRINGS&&e instanceof Ne.onnx.AttributeProto?t.map(Bo):t}static getValueNoCheck(e){return e instanceof Ne.onnx.AttributeProto?this.getValueNoCheckFromOnnxFormat(e):this.getValueNoCheckFromOrtFormat(e)}static getValueNoCheckFromOnnxFormat(e){switch(e.type){case Ne.onnx.AttributeProto.AttributeType.FLOAT:return e.f;case Ne.onnx.AttributeProto.AttributeType.INT:return e.i;case Ne.onnx.AttributeProto.AttributeType.STRING:return e.s;case Ne.onnx.AttributeProto.AttributeType.TENSOR:return e.t;case Ne.onnx.AttributeProto.AttributeType.GRAPH:return e.g;case Ne.onnx.AttributeProto.AttributeType.FLOATS:return e.floats;case Ne.onnx.AttributeProto.AttributeType.INTS:return e.ints;case Ne.onnx.AttributeProto.AttributeType.STRINGS:return e.strings;case Ne.onnx.AttributeProto.AttributeType.TENSORS:return e.tensors;case Ne.onnx.AttributeProto.AttributeType.GRAPHS:return e.graphs;default:throw new Error(`unsupported attribute type: ${Ne.onnx.AttributeProto.AttributeType[e.type]}`)}}static getValueNoCheckFromOrtFormat(e){switch(e.type()){case ir.AttributeType.FLOAT:return e.f();case ir.AttributeType.INT:return e.i();case ir.AttributeType.STRING:return e.s();case ir.AttributeType.TENSOR:return e.t();case ir.AttributeType.GRAPH:return e.g();case ir.AttributeType.FLOATS:return e.floatsArray();case ir.AttributeType.INTS:{let n=[];for(let t=0;t<e.intsLength();t++)n.push(e.ints(t));return n}case ir.AttributeType.STRINGS:{let n=[];for(let t=0;t<e.stringsLength();t++)n.push(e.strings(t));return n}case ir.AttributeType.TENSORS:{let n=[];for(let t=0;t<e.tensorsLength();t++)n.push(e.tensors(t));return n}default:throw new Error(`unsupported attribute type: ${ir.AttributeType[e.type()]}`)}}}});var cu,ga,fu,Ir,ba,du,Ph=B(()=>{"use strict";Ch();Eo();cu=Nn(Un());yn();Ke();ga=le.experimental.fbs,fu={from:(r,e)=>new du(r,e)},Ir=class{constructor(e){this._from=void 0,this._to=[],this.tensor=void 0,this.type=void 0,e&&(this.type=Et.tensorValueTypeFromProto(e.type.tensorType))}get from(){return this._from}get to(){return this._to}},ba=class{constructor(e,n){e instanceof cu.onnx.NodeProto?(this.name=e.name,this.opType=e.opType,this.attributes=new Go(e.attribute)):e instanceof ga.Node&&(this.name=n??e.name(),this.opType=e.opType(),this.attributes=new Go(Et.tensorAttributesFromORTFormat(e))),this.inputs=[],this.outputs=[],this.executeNode=!0}},du=class{constructor(e,n){if(!e)throw new TypeError("graph is empty");this.buildGraph(e),this.transformGraph(n),this.checkIsAcyclic()}getInputIndices(){return this._allInputIndices}getInputNames(){return this._allInputNames}getOutputIndices(){return this._allOutputIndices}getOutputNames(){return this._allOutputNames}getValues(){return this._allData}getNodes(){return this._nodes}buildGraph(e){if(e instanceof cu.onnx.GraphProto)this.buildGraphFromOnnxFormat(e);else if(e instanceof ga.Graph)this.buildGraphFromOrtFormat(e);else throw new TypeError("Graph type is not supported.")}buildGraphFromOnnxFormat(e){let n=new Map;this._allData=[],this._allInputIndices=[],this._allInputNames=[],this._allOutputIndices=[],this._allOutputNames=[],this._nodes=[];let t=new Map;if(!e.input)throw new Error("missing information in graph: input");let o=[];for(let i of e.input){if(n.has(i.name))throw new Error(`duplicated input name: ${i.name}`);let s=this._allData.push(new Ir(i))-1;n.set(i.name,s),o.push(i.name)}if(!e.initializer)throw new Error("missing information in graph: initializer");for(let i of e.initializer){let s=n.get(i.name);if(s===void 0){let a=new Ir;a.type={shape:{dims:Et.tensorDimsFromProto(i.dims)},tensorType:Et.tensorDataTypeFromProto(i.dataType)},s=this._allData.push(a)-1,n.set(i.name,s)}this._allData[s]._from=-1,this._allData[s].tensor=wt.fromProto(i)}for(let i=0;i<this._allData.length;i++)this._allData[i].tensor||(this._allInputIndices.push(i),this._allInputNames.push(o[i]));if(!e.output)throw new Error("missing information in graph: output");for(let i of e.output){if(n.has(i.name))throw new Error(`duplicated output name: ${i.name}`);let s=this._allData.push(new Ir(i))-1;n.set(i.name,s),this._allOutputIndices.push(s),this._allOutputNames.push(i.name)}if(!e.node)throw new Error("missing information in graph: node");for(let i of e.node){if(!i.name)for(let a=0;;a++){let u=`unnamed_${i.opType}_${a}`;if(!t.has(u)){i.name=u;break}}if(t.has(i.name))throw new Error(`duplicated node name: ${i.name}`);let s=this._nodes.push(new ba(i))-1;t.set(i.name,s)}for(let i=0;i<this._nodes.length;i++){let s=this._nodes[i],a=e.node[i];if(!a.output)throw new Error(`missing output for node: ${a.name}`);for(let u of a.output){let l=n.get(u);if(typeof l>"u"&&(l=this._allData.push(new Ir)-1,n.set(u,l)),s.outputs.push(l),this._allData[l]._from!==void 0)throw new Error(`multiple nodes output to one data value: ${l}`);if(this._allData[l]._from=i,a.opType==="Constant"){if(!a.attribute||a.attribute.length!==1||!a.attribute[0].t)throw new Error("missing attributes or missing tensor value in attributes for this Constant operator");if(!a.output||a.output.length!==1)throw new Error("missing output or incorrect number of outputs for this Constant operator");s.outputs.pop(),s.executeNode=!1,this._allData[l]._from=-1,this._allData[l].tensor=wt.fromProto(a.attribute[0].t)}}}for(let i=0;i<this._nodes.length;i++){let s=this._nodes[i],a=e.node[i];if(!a.input)throw new Error(`missing input for node: ${a.name}`);for(let u of a.input){let l=n.get(u);if(typeof l>"u"){if(u===""&&(a.input.length===3||a.input.length===4)&&a.opType==="Resize")continue;throw new Error(`unrecognized input '${u}' for node: ${a.name}`)}s.inputs.push(l),this._allData[l]._to.push(i)}}return!0}buildGraphFromOrtFormat(e){let n=new Map;this._allData=[],this._allInputIndices=[],this._allInputNames=[],this._allOutputIndices=[],this._allOutputNames=[],this._nodes=[];let t=new Map,o=[];for(let i=0;i<e.inputsLength();i++){let s=e.inputs(i);if(n.has(s))throw new Error(`duplicated input name: ${s}`);for(let a=0;a<e.nodeArgsLength();a++)if(e.nodeArgs(a)?.name()===s){let u=new Ir;if(e.nodeArgs(a)?.type()?.valueType()!==ga.TypeInfoValue.tensor_type)throw new Error("Unexpected value type for the nodeArg.");let d=e.nodeArgs(a).type().value(new ga.TensorTypeAndShape),p=Et.tensorDataTypeFromProto(d.elemType()),h=d.shape(),g=[];for(let v=0;v<h.dimLength();v++)g.push(Wt.longToNumber(h.dim(v).value().dimValue()));u.type={shape:{dims:g},tensorType:p};let b=this._allData.push(u)-1;n.set(s,b),o.push(s)}}for(let i=0;i<e.initializersLength();i++){let s=e.initializers(i),a=n.get(s.name());if(a===void 0){let u=new Ir,l=Et.tensorDimsFromORTFormat(s),d=Et.tensorDataTypeFromProto(s.dataType());u.type={shape:{dims:l},tensorType:d},a=this._allData.push(u)-1,n.set(s.name(),a)}this._allData[a]._from=-1,this._allData[a].tensor=wt.fromOrtTensor(s)}for(let i=0;i<this._allData.length;i++)this._allData[i].tensor||(this._allInputIndices.push(i),this._allInputNames.push(o[i]));for(let i=0;i<e.outputsLength();i++){let s=e.outputs(i);if(n.has(s))throw new Error(`duplicated output name: ${s}`);let a=this._allData.push(new Ir)-1;n.set(s,a),this._allOutputIndices.push(a),this._allOutputNames.push(s)}if(!e.nodes)throw new Error("missing information in graph: node");for(let i=0;i<e.nodesLength();i++){let s=e.nodes(i),a=s.name();if(!a)for(let l=0;a=`unnamed_${s.opType()}_${l}`,!!t.has(a);l++);if(t.has(a))throw new Error(`duplicated node name: ${a}`);let u=this._nodes.push(new ba(s,a))-1;t.set(a,u)}for(let i=0;i<this._nodes.length;i++){let s=this._nodes[i],a=e.nodes(i);if(a==null)throw new Error(`No node exists at index ${i}`);if(a?.outputsLength()===0)throw new Error(`missing output for node: ${a.name}`);for(let u=0;u<a?.outputsLength();u++){let l=a?.outputs(u),d=n.get(l);if(typeof d>"u"&&(d=this._allData.push(new Ir)-1,n.set(l,d)),s.outputs.push(d),this._allData[d]._from!==void 0)throw new Error(`multiple nodes output to one data value: ${d}`);if(this._allData[d]._from=i,a.opType()==="Constant"){if(a.attributesLength()!==1||!a.attributes(0).t())throw new Error("missing attributes or missing tensor value in attributes for this Constant operator");if(a.outputsLength()!==1)throw new Error("missing output or incorrect number of outputs for this Constant operator");s.outputs.pop(),s.executeNode=!1,this._allData[d]._from=-1,this._allData[d].tensor=wt.fromOrtTensor(a.attributes(0).t())}}}for(let i=0;i<this._nodes.length;i++){let s=this._nodes[i],a=e.nodes(i);if(a.inputsLength()===0)throw new Error(`missing input for node: ${a.name}`);for(let u=0;u<a.inputsLength();u++){let l=a.inputs(u),d=n.get(l);if(typeof d>"u")throw new Error(`unrecognized input '${l}' for node: ${a.name()}`);s.inputs.push(d),this._allData[d]._to.push(i)}}}checkIsAcyclic(){let e=new Set;this._allInputIndices.forEach(o=>{this._allData[o]._to.forEach(s=>{e.add(s)})});let n=Array.from(e),t=new Array(this._nodes.length).fill("white");for(;n.length>0;){let o=n.pop();t[o]==="gray"?t[o]="black":(n.push(o),t[o]="gray",this._nodes[o].outputs.forEach(i=>{let s=this._allData[i];if(typeof s.tensor<"u")throw new Error("node outputs should not be initialized");if(s._from!==o)throw new Error("from property of the Value object doesn't match index of Node being processed");s._to.forEach(a=>{if(t[a]==="gray")throw new Error("model graph is cyclic");t[a]==="white"&&n.push(a)})}))}}transformGraph(e){this.removeAllIdentityNodes(),this.removeAllDropoutNodes(),this.fuseConvActivationNodes(),e&&e.transformGraph(this),this.finalizeGraph()}finalizeGraph(){let e=0,n=new Array(this._nodes.length,0),t=0;for(let o=0;o<this._nodes.length;o++)n[o]=t,this._nodes[o].executeNode?(t!==o&&(this._nodes[t]=this._nodes[o]),t++):this._nodes[o].outputs.forEach(i=>{this._allData[i]._from=-2});this._nodes.splice(t,this._nodes.length-t);for(let o=0;o<this._allData.length;o++){let i=this._allData[o];i._from!==void 0&&i._from!==-1&&i._from!==-2&&(i._from=n[i._from]);for(let s=0;s<i._to.length;s++)if(i._to[s]>=0)i._to[s]=n[i._to[s]];else throw new Error("Trying to update a removed node")}e=0;for(let o=0;o<this._allData.length;o++){if(this._allData[o].from===-2&&this._allOutputIndices.indexOf(o+e)===-1){e++,this._allData.splice(o,1),o--;continue}if(e>0){let i=-1;this._allData[o].from!==void 0&&this._allData[o].from!==-1?(i=this._nodes[this._allData[o].from].outputs.indexOf(o+e),i!==-1&&(this._nodes[this._allData[o].from].outputs[i]=o)):(i=this._allInputIndices.indexOf(o+e),i!==-1&&(this._allInputIndices[i]=o)),this._allData[o].to.forEach(s=>{i=this._nodes[s].inputs.indexOf(o+e),i!==-1&&(this._nodes[s].inputs[i]=o)}),this._allData[o].to.length===0&&(i=this._allOutputIndices.indexOf(o+e),i!==-1&&(this._allOutputIndices[i]=o))}}}deleteNode(e){let n=this._nodes[e];if(n.outputs.length>1){for(let a=1;a<n.outputs.length;a++)if(this._allData[n.outputs[a]].to.length>0)throw new Error("Node deletion with more than one output connected to other nodes is not supported. ")}n.executeNode=!1;let t=n.inputs[0],o=n.outputs[0],i=this._allData[o].to;for(let a=0;a<n.inputs.length;a++){let u=this._allData[n.inputs[a]].to.indexOf(e);if(u===-1)throw new Error("The Value object doesn't have the current Node in it's 'to' property ");this._allData[n.inputs[a]].to.splice(u,1)}this._allData[o]._to=[];let s=this._allOutputIndices.indexOf(o);if(s!==-1&&(this._allOutputIndices[s]=t),i&&i.length>0)for(let a of i){let u=this._nodes[a].inputs.indexOf(o);if(u===-1)throw new Error("The Node object doesn't have the output Value in it's 'inputs' property ");this._nodes[a].inputs[u]=t,this._allData[t].to.push(a)}}removeAllDropoutNodes(){let e=0;for(let n of this._nodes){if(n.opType==="Dropout"){if(n.inputs.length!==1)throw new Error("Dropout nodes should only contain one input. ");if(n.outputs.length!==1&&n.outputs.length!==2)throw new Error("Dropout nodes should contain either 1 or 2 output(s)");if(n.outputs.length===2&&this._allData[n.outputs[1]]._to.length!==0)throw new Error("Dropout nodes's second output should not be referenced by other nodes");this.deleteNode(e)}e++}}removeAllIdentityNodes(){let e=0;for(let n of this._nodes)n.opType==="Identity"&&this.deleteNode(e),e++}isActivation(e){switch(e.opType){case"Relu":case"Sigmoid":case"Clip":return!0;default:return!1}}fuseConvActivationNodes(){for(let e of this._nodes)if(e.opType==="Conv"){let n=this._allData[e.outputs[0]]._to;if(n.length===1&&this.isActivation(this._nodes[n[0]])){let t=this._nodes[n[0]];if(t.opType==="Clip")if(t.inputs.length===1)try{e.attributes.set("activation_params","floats",[t.attributes.getFloat("min"),t.attributes.getFloat("max")])}catch{e.attributes.set("activation_params","floats",[gn,bn])}else if(t.inputs.length>=3&&this._allData[t.inputs[1]].tensor!==void 0&&this._allData[t.inputs[2]].tensor!==void 0)e.attributes.set("activation_params","floats",[this._allData[t.inputs[1]].tensor.floatData[0],this._allData[t.inputs[2]].tensor.floatData[0]]);else continue;e.attributes.set("activation","string",t.opType),this.deleteNode(n[0])}}}}});var kh,Ox,ya,Dh=B(()=>{"use strict";Li();Ph();Eo();kh=Nn(Un());Ke();Ox=le.experimental.fbs,ya=class{constructor(){}load(e,n,t){if(!t)try{this.loadFromOnnxFormat(e,n);return}catch(o){if(t!==void 0)throw o}this.loadFromOrtFormat(e,n)}loadFromOnnxFormat(e,n){let t=kh.onnx.ModelProto.decode(e);if(Wt.longToNumber(t.irVersion)<3)throw new Error("only support ONNX model with IR_VERSION>=3");this._opsets=t.opsetImport.map(i=>({domain:i.domain,version:Wt.longToNumber(i.version)})),this._graph=fu.from(t.graph,n)}loadFromOrtFormat(e,n){let t=new D.ByteBuffer(e),o=Ox.InferenceSession.getRootAsInferenceSession(t).model();if(Wt.longToNumber(o.irVersion())<3)throw new Error("only support ONNX model with IR_VERSION>=3");this._opsets=[];for(let s=0;s<o.opsetImportLength();s++){let a=o.opsetImport(s);this._opsets.push({domain:a?.domain(),version:Wt.longToNumber(a.version())})}this._graph=fu.from(o.graph(),n)}get graph(){return this._graph}get opsets(){return this._opsets}}});var va,Bh=B(()=>{"use strict";Oh();Eh();Jt();Dh();va=class{constructor(e={}){this._initialized=!1,this.backendHint=e.backendHint,this.profiler=zi.create(e.profiler),this.context={profiler:this.profiler,graphInputTypes:[],graphInputDims:[]}}get inputNames(){return this._model.graph.getInputNames()}get outputNames(){return this._model.graph.getOutputNames()}startProfiling(){this.profiler.start()}endProfiling(){this.profiler.stop()}async loadModel(e,n,t){await this.profiler.event("session","Session.loadModel",async()=>{let o=await uu(this.backendHint);if(this.sessionHandler=o.createSessionHandler(this.context),this._model=new ya,typeof e=="string"){let i=e.endsWith(".ort");if(typeof process<"u"&&process.versions&&process.versions.node){let s=await(void 0)(e);this.initialize(s,i)}else{let a=await(await fetch(e)).arrayBuffer();this.initialize(new Uint8Array(a),i)}}else if(ArrayBuffer.isView(e))this.initialize(e);else{let i=new Uint8Array(e,n||0,t||e.byteLength);this.initialize(i)}})}initialize(e,n){if(this._initialized)throw new Error("already initialized");this.profiler.event("session","Session.initialize",()=>{let t=this.sessionHandler.transformGraph?this.sessionHandler:void 0;this._model.load(e,t,n),this.sessionHandler.onGraphInitialized&&this.sessionHandler.onGraphInitialized(this._model.graph),this.initializeOps(this._model.graph),this._executionPlan=new ma(this._model.graph,this._ops,this.profiler)}),this._initialized=!0}async run(e){if(!this._initialized)throw new Error("session not initialized yet");return this.profiler.event("session","Session.run",async()=>{let n=this.normalizeAndValidateInputs(e),t=await this._executionPlan.execute(this.sessionHandler,n);return this.createOutput(t)})}normalizeAndValidateInputs(e){let n=this._model.graph.getInputNames();if(Array.isArray(e)){if(e.length!==n.length)throw new Error(`incorrect input array length: expected ${n.length} but got ${e.length}`)}else{if(e.size!==n.length)throw new Error(`incorrect input map size: expected ${n.length} but got ${e.size}`);let t=new Array(e.size),o=0;for(let i=0;i<n.length;++i){let s=e.get(n[i]);if(!s)throw new Error(`missing input tensor for: '${name}'`);t[o++]=s}e=t}if(!this.context.graphInputTypes||this.context.graphInputTypes.length===0||!this.context.graphInputDims||this.context.graphInputDims.length===0){let t=this._model.graph.getInputIndices(),o=this._model.graph.getValues(),i=new Array(t.length);for(let s=0;s<t.length;++s){let a=o[t[s]];i[s]=a.type.shape.dims,this.context.graphInputTypes.push(a.type.tensorType),this.context.graphInputDims.push(e[s].dims)}this.validateInputTensorDims(i,e,!0)}else this.validateInputTensorDims(this.context.graphInputDims,e,!1);return this.validateInputTensorTypes(this.context.graphInputTypes,e),e}validateInputTensorTypes(e,n){for(let t=0;t<n.length;t++){let o=e[t],i=n[t].type;if(o!==i)throw new Error(`input tensor[${t}] check failed: expected type '${o}' but got ${i}`)}}validateInputTensorDims(e,n,t){for(let o=0;o<n.length;o++){let i=e[o],s=n[o].dims;if(!this.compareTensorDims(i,s,t))throw new Error(`input tensor[${o}] check failed: expected shape '[${i.join(",")}]' but got [${s.join(",")}]`)}}compareTensorDims(e,n,t){if(e.length!==n.length)return!1;for(let o=0;o<e.length;++o)if(e[o]!==n[o]&&(!t||e[o]!==0))return!1;return!0}createOutput(e){let n=this._model.graph.getOutputNames();if(e.length!==n.length)throw new Error("expected number of outputs do not match number of generated outputs");let t=new Map;for(let o=0;o<n.length;++o)t.set(n[o],e[o]);return t}initializeOps(e){let n=e.getNodes();this._ops=new Array(n.length);for(let t=0;t<n.length;t++)this._ops[t]=this.sessionHandler.resolve(n[t],this._model.opsets,e)}}});var wa,Rh=B(()=>{"use strict";kt();yn();wa=class{constructor(e){this.session=e;this.inputNames=this.session.inputNames,this.outputNames=this.session.outputNames}async dispose(){}async run(e,n,t){let o=new Map;for(let a in e)if(Object.hasOwnProperty.call(e,a)){let u=e[a];o.set(a,new wt(u.dims,u.type,void 0,void 0,u.data))}let i=await this.session.run(o),s={};return i.forEach((a,u)=>{s[u]=new _t(a.type,a.data,a.dims)}),s}startProfiling(){this.session.startProfiling()}endProfiling(){this.session.endProfiling()}}});var zh={};Ur(zh,{onnxjsBackend:()=>Cx});var pu,Cx,Mh=B(()=>{"use strict";Bh();Rh();pu=class{async init(){}async createInferenceSessionHandler(e,n){let t=new va(n);return typeof e=="string"?await t.loadModel(e):await t.loadModel(e),new wa(t)}},Cx=new pu});var xa={};Ur(xa,{createReadStream:()=>Lh,readFile:()=>Px,readFileSync:()=>kx});var Px,kx,Lh,_a=B(()=>{Px=void 0,kx=void 0,Lh=void 0});var hu={};Ur(hu,{join:()=>Dx});var Dx,mu=B(()=>{Dx=void 0});var Fh=it((Vh,gu)=>{"use strict";var Nh=(()=>{var r=typeof document<"u"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename<"u"&&(r=r||__filename),function(e={}){var n=e,t,o;n.ready=new Promise((c,m)=>{t=c,o=m}),n.mountExternalData=(c,m)=>{(n.gb||(n.gb=new Map)).set(c,m)},n.unmountExternalData=()=>{delete n.gb},n.jsepInit=(c,m,w,S,P,V,j,Z,oe,te,ye)=>{n.Ib=c,n.vb=m,n.zb=w,n.ob=S,n.yb=P,n.Sa=V,n.Ab=j,n.Cb=Z,n.wb=oe,n.xb=te,n.Bb=ye,m=(ae,Se,z)=>(...ue)=>{let Ee=Yt,St=Se?.();ue=ae(...ue);let vr=Se?.();return St!==vr&&(ae=vr,z(St),Se=z=null),Yt!=Ee?li():ue},w=ae=>async(...Se)=>{try{if(n.fb)throw Error("Session already started");let z=n.fb={Db:Se[0],errors:[]},ue=await ae(...Se);if(n.fb!==z)throw Error("Session mismatch");c.flush();let Ee=z.errors;if(0<Ee.length){let St=await Promise.all(Ee);if(St=St.filter(vr=>vr),0<St.length)throw Error(St.join(`
`))}return ue}finally{n.fb=null}},n._OrtCreateSession=m(n._OrtCreateSession,()=>n._OrtCreateSession,ae=>n._OrtCreateSession=ae),n._OrtRun=w(m(n._OrtRun,()=>n._OrtRun,ae=>n._OrtRun=ae)),n._OrtRunWithBinding=w(m(n._OrtRunWithBinding,()=>n._OrtRunWithBinding,ae=>n._OrtRunWithBinding=ae)),n._OrtBindInput=m(n._OrtBindInput,()=>n._OrtBindInput,ae=>n._OrtBindInput=ae),n.jsepRegisterBuffer=(ae,Se,z,ue)=>c.registerBuffer(ae,Se,z,ue),n.jsepGetBuffer=ae=>c.getBuffer(ae),n.jsepCreateDownloader=(ae,Se,z)=>c.createDownloader(ae,Se,z),n.jsepOnReleaseSession=ae=>{c.onReleaseSession(ae)},n.jsepOnRunStart=ae=>c.onRunStart(ae)};var i=Object.assign({},n),s="./this.program",a=(c,m)=>{throw m},u=typeof window=="object",l=typeof importScripts=="function",d=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",p="",h,g,b;if(d){var v=(_a(),wr(xa)),$=(mu(),wr(hu));p=l?$.dirname(p)+"/":__dirname+"/",h=(c,m)=>(c=pe(c)?new URL(c):$.normalize(c),v.readFileSync(c,m?void 0:"utf8")),b=c=>(c=h(c,!0),c.buffer||(c=new Uint8Array(c)),c),g=(c,m,w,S=!0)=>{c=pe(c)?new URL(c):$.normalize(c),v.readFile(c,S?void 0:"utf8",(P,V)=>{P?w(P):m(S?V.buffer:V)})},!n.thisProgram&&1<process.argv.length&&(s=process.argv[1].replace(/\\/g,"/")),process.argv.slice(2),a=(c,m)=>{throw process.exitCode=c,m},n.inspect=()=>"[Emscripten Module object]"}else(u||l)&&(l?p=self.location.href:typeof document<"u"&&document.currentScript&&(p=document.currentScript.src),r&&(p=r),p.indexOf("blob:")!==0?p=p.substr(0,p.replace(/[?#].*/,"").lastIndexOf("/")+1):p="",h=c=>{var m=new XMLHttpRequest;return m.open("GET",c,!1),m.send(null),m.responseText},l&&(b=c=>{var m=new XMLHttpRequest;return m.open("GET",c,!1),m.responseType="arraybuffer",m.send(null),new Uint8Array(m.response)}),g=(c,m,w)=>{var S=new XMLHttpRequest;S.open("GET",c,!0),S.responseType="arraybuffer",S.onload=()=>{S.status==200||S.status==0&&S.response?m(S.response):w()},S.onerror=w,S.send(null)});var T=console.log.bind(console),x=console.error.bind(console);Object.assign(n,i),i=null,typeof WebAssembly!="object"&&ft("no native wasm support detected");var A,O=!1,k,L,W,J,se,R,H,Be,Je,Qe,Re;function q(){var c=A.buffer;n.HEAP8=L=new Int8Array(c),n.HEAP16=J=new Int16Array(c),n.HEAPU8=W=new Uint8Array(c),n.HEAPU16=se=new Uint16Array(c),n.HEAP32=R=new Int32Array(c),n.HEAPU32=H=new Uint32Array(c),n.HEAPF32=Be=new Float32Array(c),n.HEAPF64=Re=new Float64Array(c),n.HEAP64=Je=new BigInt64Array(c),n.HEAPU64=Qe=new BigUint64Array(c)}var et=[],Ce=[],Ae=[],Te=0,Le=null,Ge=null;function ft(c){throw c="Aborted("+c+")",x(c),O=!0,k=1,c=new WebAssembly.RuntimeError(c+". Build with -sASSERTIONS for more info."),o(c),c}var Y=c=>c.startsWith("data:application/octet-stream;base64,"),pe=c=>c.startsWith("file://"),$e;if($e="ort-wasm-simd.wasm",!Y($e)){var Pt=$e;$e=n.locateFile?n.locateFile(Pt,p):p+Pt}function Tt(c){if(b)return b(c);throw"both async and sync fetching of the wasm failed"}function jt(c){if(u||l){if(typeof fetch=="function"&&!pe(c))return fetch(c,{credentials:"same-origin"}).then(m=>{if(!m.ok)throw"failed to load wasm binary file at '"+c+"'";return m.arrayBuffer()}).catch(()=>Tt(c));if(g)return new Promise((m,w)=>{g(c,S=>m(new Uint8Array(S)),w)})}return Promise.resolve().then(()=>Tt(c))}function Fr(c,m,w){return jt(c).then(S=>WebAssembly.instantiate(S,m)).then(S=>S).then(w,S=>{x(`failed to asynchronously prepare wasm: ${S}`),ft(S)})}function yt(c,m){var w=$e;return typeof WebAssembly.instantiateStreaming!="function"||Y(w)||pe(w)||d||typeof fetch!="function"?Fr(w,c,m):fetch(w,{credentials:"same-origin"}).then(S=>WebAssembly.instantiateStreaming(S,c).then(m,function(P){return x(`wasm streaming compile failed: ${P}`),x("falling back to ArrayBuffer instantiation"),Fr(w,c,m)}))}var pt={1374704:(c,m,w,S)=>{if(typeof n>"u"||!n.gb)return 1;if(c=vt(c>>>0),c.startsWith("./")&&(c=c.substring(2)),c=n.gb.get(c),!c)return 2;if(m>>>=0,w>>>=0,m+w>c.byteLength)return 3;try{return W.set(c.subarray(m,m+w),S>>>0>>>0),0}catch{return 4}},1375205:(c,m,w)=>{w=vt(w);let S=new Uint8Array(m);S.set(W.subarray(c>>>0,c+m>>>0)),typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string"?(_a(),wr(xa)).writeFileSync(w,S):(c=new File([S],w,{type:"application/octet-stream"}),c=URL.createObjectURL(c),window.open(c,"_blank"))},1375713:()=>{n.wb()},1375744:()=>{n.xb()},1375773:()=>{n.Bb()},1375798:c=>n.vb(c),1375831:c=>n.zb(c),1375863:(c,m,w)=>{n.ob(c,m,w,!0)},1375902:(c,m,w)=>{n.ob(c,m,w)},1375935:c=>{n.Sa("Abs",c,void 0)},1375986:c=>{n.Sa("Neg",c,void 0)},1376037:c=>{n.Sa("Floor",c,void 0)},1376090:c=>{n.Sa("Ceil",c,void 0)},1376142:c=>{n.Sa("Reciprocal",c,void 0)},1376200:c=>{n.Sa("Sqrt",c,void 0)},1376252:c=>{n.Sa("Exp",c,void 0)},1376303:c=>{n.Sa("Erf",c,void 0)},1376354:c=>{n.Sa("Sigmoid",c,void 0)},1376409:(c,m,w)=>{n.Sa("HardSigmoid",c,{alpha:m,beta:w})},1376488:c=>{n.Sa("Log",c,void 0)},1376539:c=>{n.Sa("Sin",c,void 0)},1376590:c=>{n.Sa("Cos",c,void 0)},1376641:c=>{n.Sa("Tan",c,void 0)},1376692:c=>{n.Sa("Asin",c,void 0)},1376744:c=>{n.Sa("Acos",c,void 0)},1376796:c=>{n.Sa("Atan",c,void 0)},1376848:c=>{n.Sa("Sinh",c,void 0)},1376900:c=>{n.Sa("Cosh",c,void 0)},1376952:c=>{n.Sa("Asinh",c,void 0)},1377005:c=>{n.Sa("Acosh",c,void 0)},1377058:c=>{n.Sa("Atanh",c,void 0)},1377111:c=>{n.Sa("Tanh",c,void 0)},1377163:c=>{n.Sa("Not",c,void 0)},1377214:(c,m,w)=>{n.Sa("Clip",c,{min:m,max:w})},1377283:c=>{n.Sa("Clip",c,void 0)},1377335:(c,m)=>{n.Sa("Elu",c,{alpha:m})},1377393:c=>{n.Sa("Relu",c,void 0)},1377445:(c,m)=>{n.Sa("LeakyRelu",c,{alpha:m})},1377509:(c,m)=>{n.Sa("ThresholdedRelu",c,{alpha:m})},1377579:(c,m)=>{n.Sa("Cast",c,{to:m})},1377637:c=>{n.Sa("Add",c,void 0)},1377688:c=>{n.Sa("Sub",c,void 0)},1377739:c=>{n.Sa("Mul",c,void 0)},1377790:c=>{n.Sa("Div",c,void 0)},1377841:c=>{n.Sa("Pow",c,void 0)},1377892:c=>{n.Sa("Equal",c,void 0)},1377945:c=>{n.Sa("Greater",c,void 0)},1378e3:c=>{n.Sa("GreaterOrEqual",c,void 0)},1378062:c=>{n.Sa("Less",c,void 0)},1378114:c=>{n.Sa("LessOrEqual",c,void 0)},1378173:(c,m,w,S,P)=>{n.Sa("ReduceMean",c,{keepDims:!!m,noopWithEmptyAxes:!!w,axes:S?Array.from(R.subarray(S>>>0,P>>>0)):[]})},1378332:(c,m,w,S,P)=>{n.Sa("ReduceMax",c,{keepDims:!!m,noopWithEmptyAxes:!!w,axes:S?Array.from(R.subarray(S>>>0,P>>>0)):[]})},1378490:(c,m,w,S,P)=>{n.Sa("ReduceMin",c,{keepDims:!!m,noopWithEmptyAxes:!!w,axes:S?Array.from(R.subarray(S>>>0,P>>>0)):[]})},1378648:(c,m,w,S,P)=>{n.Sa("ReduceProd",c,{keepDims:!!m,noopWithEmptyAxes:!!w,axes:S?Array.from(R.subarray(S>>>0,P>>>0)):[]})},1378807:(c,m,w,S,P)=>{n.Sa("ReduceSum",c,{keepDims:!!m,noopWithEmptyAxes:!!w,axes:S?Array.from(R.subarray(S>>>0,P>>>0)):[]})},1378965:(c,m,w,S,P)=>{n.Sa("ReduceL1",c,{keepDims:!!m,noopWithEmptyAxes:!!w,axes:S?Array.from(R.subarray(S>>>0,P>>>0)):[]})},1379122:(c,m,w,S,P)=>{n.Sa("ReduceL2",c,{keepDims:!!m,noopWithEmptyAxes:!!w,axes:S?Array.from(R.subarray(S>>>0,P>>>0)):[]})},1379279:(c,m,w,S,P)=>{n.Sa("ReduceLogSum",c,{keepDims:!!m,noopWithEmptyAxes:!!w,axes:S?Array.from(R.subarray(S>>>0,P>>>0)):[]})},1379440:(c,m,w,S,P)=>{n.Sa("ReduceSumSquare",c,{keepDims:!!m,noopWithEmptyAxes:!!w,axes:S?Array.from(R.subarray(S>>>0,P>>>0)):[]})},1379604:(c,m,w,S,P)=>{n.Sa("ReduceLogSumExp",c,{keepDims:!!m,noopWithEmptyAxes:!!w,axes:S?Array.from(R.subarray(S>>>0,P>>>0)):[]})},1379768:c=>{n.Sa("Where",c,void 0)},1379821:(c,m,w)=>{n.Sa("Transpose",c,{perm:m?Array.from(R.subarray(m>>>0,w>>>0)):[]})},1379929:(c,m,w,S,P,V,j,Z,oe,te,ye,ae,Se,z,ue)=>{n.Sa("ConvTranspose",c,{format:oe?"NHWC":"NCHW",autoPad:m,dilations:[w],group:S,kernel_shape:[P],pads:[V,j],strides:[Z],wIsConst:()=>!!L[te>>>0],outputPadding:ye?Array.from(R.subarray(ye>>>0,ae>>>0)):[],outputShape:Se?Array.from(R.subarray(Se>>>0,z>>>0)):[],activation:vt(ue)})},1380331:(c,m,w,S,P,V,j,Z,oe,te,ye,ae,Se,z)=>{n.Sa("ConvTranspose",c,{format:Z?"NHWC":"NCHW",autoPad:m,dilations:Array.from(R.subarray(w>>>0,(w>>>0)+2>>>0)),group:S,kernelShape:Array.from(R.subarray(P>>>0,(P>>>0)+2>>>0)),pads:Array.from(R.subarray(V>>>0,(V>>>0)+4>>>0)),strides:Array.from(R.subarray(j>>>0,(j>>>0)+2>>>0)),wIsConst:()=>!!L[oe>>>0],outputPadding:te?Array.from(R.subarray(te>>>0,ye>>>0)):[],outputShape:ae?Array.from(R.subarray(ae>>>0,Se>>>0)):[],activation:vt(z)})},1380896:(c,m,w,S,P,V,j,Z,oe,te,ye,ae,Se,z,ue)=>{n.Sa("ConvTranspose",c,{format:oe?"NHWC":"NCHW",autoPad:m,dilations:[w],group:S,kernel_shape:[P],pads:[V,j],strides:[Z],wIsConst:()=>!!L[te>>>0],outputPadding:ye?Array.from(R.subarray(ye>>>0,ae>>>0)):[],outputShape:Se?Array.from(R.subarray(Se>>>0,z>>>0)):[],activation:vt(ue)})},1381298:(c,m,w,S,P,V,j,Z,oe,te,ye,ae,Se,z)=>{n.Sa("ConvTranspose",c,{format:Z?"NHWC":"NCHW",autoPad:m,dilations:Array.from(R.subarray(w>>>0,(w>>>0)+2>>>0)),group:S,kernelShape:Array.from(R.subarray(P>>>0,(P>>>0)+2>>>0)),pads:Array.from(R.subarray(V>>>0,(V>>>0)+4>>>0)),strides:Array.from(R.subarray(j>>>0,(j>>>0)+2>>>0)),wIsConst:()=>!!L[oe>>>0],outputPadding:te?Array.from(R.subarray(te>>>0,ye>>>0)):[],outputShape:ae?Array.from(R.subarray(ae>>>0,Se>>>0)):[],activation:vt(z)})},1381863:(c,m)=>{n.Sa("GlobalAveragePool",c,{format:m?"NHWC":"NCHW"})},1381954:(c,m,w,S,P,V,j,Z,oe,te,ye,ae,Se,z,ue,Ee)=>{n.Sa("AveragePool",c,{format:Ee?"NHWC":"NCHW",auto_pad:m,ceil_mode:w,count_include_pad:S,storage_order:P,dilations:[V,j],kernel_shape:[Z,oe],pads:[te,ye,ae,Se],strides:[z,ue]})},1382238:(c,m)=>{n.Sa("GlobalAveragePool",c,{format:m?"NHWC":"NCHW"})},1382329:(c,m,w,S,P,V,j,Z,oe,te,ye,ae,Se,z,ue,Ee)=>{n.Sa("AveragePool",c,{format:Ee?"NHWC":"NCHW",auto_pad:m,ceil_mode:w,count_include_pad:S,storage_order:P,dilations:[V,j],kernel_shape:[Z,oe],pads:[te,ye,ae,Se],strides:[z,ue]})},1382613:(c,m)=>{n.Sa("GlobalMaxPool",c,{format:m?"NHWC":"NCHW"})},1382700:(c,m,w,S,P,V,j,Z,oe,te,ye,ae,Se,z,ue,Ee)=>{n.Sa("MaxPool",c,{format:Ee?"NHWC":"NCHW",auto_pad:m,ceil_mode:w,count_include_pad:S,storage_order:P,dilations:[V,j],kernel_shape:[Z,oe],pads:[te,ye,ae,Se],strides:[z,ue]})},1382980:(c,m)=>{n.Sa("GlobalMaxPool",c,{format:m?"NHWC":"NCHW"})},1383067:(c,m,w,S,P,V,j,Z,oe,te,ye,ae,Se,z,ue,Ee)=>{n.Sa("MaxPool",c,{format:Ee?"NHWC":"NCHW",auto_pad:m,ceil_mode:w,count_include_pad:S,storage_order:P,dilations:[V,j],kernel_shape:[Z,oe],pads:[te,ye,ae,Se],strides:[z,ue]})},1383347:(c,m,w,S,P)=>{n.Sa("Gemm",c,{alpha:m,beta:w,transA:S,transB:P})},1383451:c=>{n.Sa("MatMul",c,void 0)},1383505:(c,m,w,S)=>{n.Sa("ArgMax",c,{keepDims:!!m,selectLastIndex:!!w,axis:S})},1383613:(c,m,w,S)=>{n.Sa("ArgMin",c,{keepDims:!!m,selectLastIndex:!!w,axis:S})},1383721:(c,m)=>{n.Sa("Softmax",c,{axis:m})},1383784:(c,m)=>{n.Sa("Concat",c,{axis:m})},1383844:(c,m,w,S,P)=>{n.Sa("Split",c,{axis:m,numOutputs:w,splitSizes:S?Array.from(R.subarray(S>>>0,P>>>0)):[]})},1383984:c=>{n.Sa("Expand",c,void 0)},1384038:(c,m)=>{n.Sa("Gather",c,{axis:Number(m)})},1384109:(c,m)=>{n.Sa("GatherElements",c,{axis:Number(m)})},1384188:(c,m,w,S,P,V,j,Z,oe,te,ye)=>{n.Sa("Resize",c,{antialias:m,axes:w?Array.from(R.subarray(w>>>0,S>>>0)):[],coordinateTransformMode:vt(P),cubicCoeffA:V,excludeOutside:j,extrapolationValue:Z,keepAspectRatioPolicy:vt(oe),mode:vt(te),nearestMode:vt(ye)})},1384534:(c,m,w,S,P,V,j)=>{n.Sa("Slice",c,{starts:m?Array.from(R.subarray(m>>>0,w>>>0)):[],ends:S?Array.from(R.subarray(S>>>0,P>>>0)):[],axes:V?Array.from(R.subarray(V>>>0,j>>>0)):[]})},1384750:c=>{n.Sa("Tile",c,void 0)},1384802:(c,m,w)=>{n.Sa("LayerNormalization",c,{axis:Number(m),epsilon:Number(w)})},1384909:(c,m,w)=>{n.Sa("InstanceNormalization",c,{epsilon:m,format:w?"NHWC":"NCHW"})},1385023:(c,m,w)=>{n.Sa("InstanceNormalization",c,{epsilon:m,format:w?"NHWC":"NCHW"})},1385137:c=>{n.Sa("Range",c,void 0)},1385190:(c,m)=>{n.Sa("Einsum",c,{equation:vt(m)})},1385271:(c,m,w,S,P)=>{n.Sa("Pad",c,{mode:m,value:w,pads:S?Array.from(R.subarray(S>>>0,P>>>0)):[]})},1385398:(c,m,w,S,P,V)=>{n.Sa("BatchNormalization",c,{epsilon:m,momentum:w,spatial:!!P,trainingMode:!!S,format:V?"NHWC":"NCHW"})},1385567:(c,m,w,S,P,V)=>{n.Sa("BatchNormalization",c,{epsilon:m,momentum:w,spatial:!!P,trainingMode:!!S,format:V?"NHWC":"NCHW"})},1385736:(c,m,w)=>{n.Sa("CumSum",c,{exclusive:Number(m),reverse:Number(w)})},1385833:(c,m,w,S,P,V,j,Z,oe)=>{n.Sa("Attention",c,{numHeads:m,isUnidirectional:w,maskFilterValue:S,scale:P,doRotary:V,qkvHiddenSizes:j?Array.from(R.subarray(Number(Z)>>>0,Number(Z)+j>>>0)):[],pastPresentShareBuffer:!!oe})},1386105:c=>{n.Sa("BiasAdd",c,void 0)},1386160:c=>{n.Sa("BiasSplitGelu",c,void 0)},1386221:c=>{n.Sa("FastGelu",c,void 0)},1386277:(c,m,w,S,P,V,j,Z,oe,te,ye,ae,Se)=>{n.Sa("Conv",c,{format:oe?"NHWC":"NCHW",auto_pad:m,dilations:[w],group:S,kernel_shape:[P],pads:V?Array.from(R.subarray(V>>>0,j>>>0)):[],strides:[Z],w_is_const:()=>!!L[te>>>0],activation:vt(ye),activation_params:ae?Array.from(Be.subarray(ae>>>0,Se>>>0)):[]})},1386647:(c,m,w,S,P,V,j,Z,oe,te,ye,ae,Se,z,ue,Ee)=>{n.Sa("Conv",c,{format:ae?"NHWC":"NCHW",auto_pad:m,dilations:[w,S],group:P,kernel_shape:[V,j],pads:Z?Array.from(R.subarray(Z>>>0,oe>>>0)):[],strides:[te,ye],w_is_const:()=>!!L[Se>>>0],activation:vt(z),activation_params:ue?Array.from(Be.subarray(ue>>>0,Ee>>>0)):[]})},1387038:c=>{n.Sa("Gelu",c,void 0)},1387090:(c,m,w,S,P,V)=>{n.Sa("MatMulNBits",c,{k:m,n:w,accuracyLevel:S,bits:P,blockSize:V})},1387217:(c,m,w,S,P,V)=>{n.Sa("MultiHeadAttention",c,{numHeads:m,isUnidirectional:w,maskFilterValue:S,scale:P,doRotary:V})},1387376:(c,m)=>{n.Sa("SkipLayerNormalization",c,{epsilon:m})},1387457:c=>{n.Ab(c)},1387491:(c,m)=>n.Cb(c,m,n.fb.Db,n.fb.errors)};function Rt(c){this.name="ExitStatus",this.message=`Program terminated with exit(${c})`,this.status=c}function Gr(c){this.cb=c-24,this.rb=function(m){H[this.cb+4>>>2>>>0]=m},this.qb=function(m){H[this.cb+8>>>2>>>0]=m},this.kb=function(m,w){this.jb(),this.rb(m),this.qb(w)},this.jb=function(){H[this.cb+16>>>2>>>0]=0}}var br=0,Jo=0,no=typeof TextDecoder<"u"?new TextDecoder("utf8"):void 0,sr=(c,m,w)=>{m>>>=0;var S=m+w;for(w=m;c[w]&&!(w>=S);)++w;if(16<w-m&&c.buffer&&no)return no.decode(c.subarray(m,w));for(S="";m<w;){var P=c[m++];if(P&128){var V=c[m++]&63;if((P&224)==192)S+=String.fromCharCode((P&31)<<6|V);else{var j=c[m++]&63;P=(P&240)==224?(P&15)<<12|V<<6|j:(P&7)<<18|V<<12|j<<6|c[m++]&63,65536>P?S+=String.fromCharCode(P):(P-=65536,S+=String.fromCharCode(55296|P>>10,56320|P&1023))}}else S+=String.fromCharCode(P)}return S},vt=(c,m)=>(c>>>=0)?sr(W,c,m):"",ur=c=>{for(var m=0,w=0;w<c.length;++w){var S=c.charCodeAt(w);127>=S?m++:2047>=S?m+=2:55296<=S&&57343>=S?(m+=4,++w):m+=3}return m},Qr=(c,m,w,S)=>{if(w>>>=0,!(0<S))return 0;var P=w;S=w+S-1;for(var V=0;V<c.length;++V){var j=c.charCodeAt(V);if(55296<=j&&57343>=j){var Z=c.charCodeAt(++V);j=65536+((j&1023)<<10)|Z&1023}if(127>=j){if(w>=S)break;m[w++>>>0]=j}else{if(2047>=j){if(w+1>=S)break;m[w++>>>0]=192|j>>6}else{if(65535>=j){if(w+2>=S)break;m[w++>>>0]=224|j>>12}else{if(w+3>=S)break;m[w++>>>0]=240|j>>18,m[w++>>>0]=128|j>>12&63}m[w++>>>0]=128|j>>6&63}m[w++>>>0]=128|j&63}}return m[w>>>0]=0,w-P},Qo=c=>{if(c===null)return"null";var m=typeof c;return m==="object"||m==="array"||m==="function"?c.toString():""+c},oo,Kt=c=>{for(var m="";W[c>>>0];)m+=oo[W[c++>>>0]];return m},yr={},en={},In={},Xt;function ei(c,m,w={}){var S=m.name;if(!c)throw new Xt(`type "${S}" must have a positive integer typeid pointer`);if(en.hasOwnProperty(c)){if(w.tb)return;throw new Xt(`Cannot register type '${S}' twice`)}en[c]=m,delete In[c],yr.hasOwnProperty(c)&&(m=yr[c],delete yr[c],m.forEach(P=>P()))}function Zt(c,m,w={}){if(!("argPackAdvance"in m))throw new TypeError("registerType registeredInstance requires argPackAdvance");ei(c,m,w)}var io=(c,m,w)=>{switch(m){case 1:return w?S=>L[S>>>0>>>0]:S=>W[S>>>0>>>0];case 2:return w?S=>J[S>>>1>>>0]:S=>se[S>>>1>>>0];case 4:return w?S=>R[S>>>2>>>0]:S=>H[S>>>2>>>0];case 8:return w?S=>Je[S>>>3]:S=>Qe[S>>>3];default:throw new TypeError(`invalid integer width (${m}): ${c}`)}};function ao(){this.$a=[void 0],this.nb=[]}var tt=new ao;function An(c){c>>>=0,c>=tt.cb&&--tt.get(c).pb===0&&tt.jb(c)}var $t=c=>{if(!c)throw new Xt("Cannot use deleted val. handle = "+c);return tt.get(c).value},de=c=>{switch(c){case void 0:return 1;case null:return 2;case!0:return 3;case!1:return 4;default:return tt.kb({pb:1,value:c})}};function tn(c){return this.fromWireType(R[c>>>2>>>0])}var ti=(c,m)=>{switch(m){case 4:return function(w){return this.fromWireType(Be[w>>>2>>>0])};case 8:return function(w){return this.fromWireType(Re[w>>>3>>>0])};default:throw new TypeError(`invalid float width (${m}): ${c}`)}};function ts(c){return this.fromWireType(H[c>>>2>>>0])}var so=typeof TextDecoder<"u"?new TextDecoder("utf-16le"):void 0,rs=(c,m)=>{for(var w=c>>1,S=w+m/2;!(w>=S)&&se[w>>>0];)++w;if(w<<=1,32<w-c&&so)return so.decode(W.subarray(c>>>0,w>>>0));for(w="",S=0;!(S>=m/2);++S){var P=J[c+2*S>>>1>>>0];if(P==0)break;w+=String.fromCharCode(P)}return w},ri=(c,m,w)=>{if(w??=2147483647,2>w)return 0;w-=2;var S=m;w=w<2*c.length?w/2:c.length;for(var P=0;P<w;++P)J[m>>>1>>>0]=c.charCodeAt(P),m+=2;return J[m>>>1>>>0]=0,m-S},ni=c=>2*c.length,oi=(c,m)=>{for(var w=0,S="";!(w>=m/4);){var P=R[c+4*w>>>2>>>0];if(P==0)break;++w,65536<=P?(P-=65536,S+=String.fromCharCode(55296|P>>10,56320|P&1023)):S+=String.fromCharCode(P)}return S},ii=(c,m,w)=>{if(m>>>=0,w??=2147483647,4>w)return 0;var S=m;w=S+w-4;for(var P=0;P<c.length;++P){var V=c.charCodeAt(P);if(55296<=V&&57343>=V){var j=c.charCodeAt(++P);V=65536+((V&1023)<<10)|j&1023}if(R[m>>>2>>>0]=V,m+=4,m+4>w)break}return R[m>>>2>>>0]=0,m-S},uo=c=>{for(var m=0,w=0;w<c.length;++w){var S=c.charCodeAt(w);55296<=S&&57343>=S&&++w,m+=4}return m},On=(c,m)=>{var w=en[c];if(w===void 0)throw c=To(c),w=Kt(c),ht(c),new Xt(m+" has unknown type "+w);return w},lo=(c,m,w)=>{var S=[];return c=c.toWireType(S,w),S.length&&(H[m>>>2>>>0]=de(S)),c},rn=c=>{try{c()}catch(m){ft(m)}};function ai(){var c=he,m={};for(let[w,S]of Object.entries(c))m[w]=typeof S=="function"?function(){nn.push(w);try{return S.apply(null,arguments)}finally{O||(nn.pop(),Yt&&lr===1&&nn.length===0&&(lr=0,rn(Mn),typeof Fibers<"u"&&Fibers.Kb()))}}:S;return m}var lr=0,Yt=null,co=0,nn=[],fo={},po={},si=0,En=null,ui=[];function li(){return new Promise((c,m)=>{En={resolve:c,reject:m}})}function ho(){var c=Nt(65548),m=c+12;H[c>>>2>>>0]=m,H[c+4>>>2>>>0]=m+65536,m=nn[0];var w=fo[m];return w===void 0&&(w=si++,fo[m]=w,po[w]=m),R[c+8>>>2>>>0]=w,c}function Cn(c){if(!O){if(lr===0){var m=!1,w=!1;c((S=0)=>{if(!O&&(co=S,m=!0,w)){lr=2,rn(()=>vi(Yt)),typeof Browser<"u"&&Browser.lb.sb&&Browser.lb.resume(),S=!1;try{var P=(0,he[po[R[Yt+8>>>2>>>0]]])()}catch(Z){P=Z,S=!0}var V=!1;if(!Yt){var j=En;j&&(En=null,(S?j.reject:j.resolve)(P),V=!0)}if(S&&!V)throw P}}),w=!0,m||(lr=1,Yt=ho(),typeof Browser<"u"&&Browser.lb.sb&&Browser.lb.pause(),rn(()=>yi(Yt)))}else lr===2?(lr=0,rn(wi),ht(Yt),Yt=null,ui.forEach(S=>{if(!O)try{S();try{k=k=S=k,n.onExit?.(S),O=!0,a(S,new Rt(S))}catch(P){P instanceof Rt||P=="unwind"||a(1,P)}}catch(P){P instanceof Rt||P=="unwind"||a(1,P)}})):ft(`invalid state: ${lr}`);return co}}function zr(c){return Cn(m=>{c().then(m)})}var on=[],di={},Pn=c=>{var m=di[c];return m===void 0?Kt(c):m},mo=()=>typeof globalThis=="object"?globalThis:Function("return this")(),ci=c=>{var m=on.length;return on.push(c),m},go=(c,m)=>{for(var w=Array(c),S=0;S<c;++S)w[S]=On(H[m+4*S>>>2>>>0],"parameter "+S);return w},bo=(c,m)=>Object.defineProperty(m,"name",{value:c});function ns(c){var m=Function;if(!(m instanceof Function))throw new TypeError(`new_ called with constructor type ${typeof m} which is not a function`);var w=bo(m.name||"unknownFunctionName",function(){});return w.prototype=m.prototype,w=new w,c=m.apply(w,c),c instanceof Object?c:w}var Xe=c=>c%4===0&&(c%100!==0||c%400===0),kn=[0,31,60,91,121,152,182,213,244,274,305,335],Dn=[0,31,59,90,120,151,181,212,243,273,304,334],yo=c=>{var m=ur(c)+1,w=Nt(m);return w&&Qr(c,W,w,m),w},an=[],vo=(c,m)=>{an.length=0;for(var w;w=W[c++>>>0];){var S=w!=105;S&=w!=112,m+=S&&m%8?4:0,an.push(w==112?H[m>>>2>>>0]:w==106?Je[m>>>3]:w==105?R[m>>>2>>>0]:Re[m>>>3>>>0]),m+=S?8:4}return an},Bn={},wo=()=>{if(!Rn){var c={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:(typeof navigator=="object"&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",_:s||"./this.program"},m;for(m in Bn)Bn[m]===void 0?delete c[m]:c[m]=Bn[m];var w=[];for(m in c)w.push(`${m}=${c[m]}`);Rn=w}return Rn},Rn,fi=[null,[],[]],pi=[31,29,31,30,31,30,31,31,30,31,30,31],xo=[31,28,31,30,31,30,31,31,30,31,30,31];function hi(c){var m=Array(ur(c)+1);return Qr(c,m,0,m.length),m}function _o(c,m,w,S){function P(z,ue,Ee){for(z=typeof z=="number"?z.toString():z||"";z.length<ue;)z=Ee[0]+z;return z}function V(z,ue){return P(z,ue,"0")}function j(z,ue){function Ee(vr){return 0>vr?-1:0<vr?1:0}var St;return(St=Ee(z.getFullYear()-ue.getFullYear()))===0&&(St=Ee(z.getMonth()-ue.getMonth()))===0&&(St=Ee(z.getDate()-ue.getDate())),St}function Z(z){switch(z.getDay()){case 0:return new Date(z.getFullYear()-1,11,29);case 1:return z;case 2:return new Date(z.getFullYear(),0,3);case 3:return new Date(z.getFullYear(),0,2);case 4:return new Date(z.getFullYear(),0,1);case 5:return new Date(z.getFullYear()-1,11,31);case 6:return new Date(z.getFullYear()-1,11,30)}}function oe(z){var ue=z.ab;for(z=new Date(new Date(z.bb+1900,0,1).getTime());0<ue;){var Ee=z.getMonth(),St=(Xe(z.getFullYear())?pi:xo)[Ee];if(ue>St-z.getDate())ue-=St-z.getDate()+1,z.setDate(1),11>Ee?z.setMonth(Ee+1):(z.setMonth(0),z.setFullYear(z.getFullYear()+1));else{z.setDate(z.getDate()+ue);break}}return Ee=new Date(z.getFullYear()+1,0,4),ue=Z(new Date(z.getFullYear(),0,4)),Ee=Z(Ee),0>=j(ue,z)?0>=j(Ee,z)?z.getFullYear()+1:z.getFullYear():z.getFullYear()-1}c>>>=0,m>>>=0,w>>>=0,S>>>=0;var te=H[S+40>>>2>>>0];S={Gb:R[S>>>2>>>0],Fb:R[S+4>>>2>>>0],hb:R[S+8>>>2>>>0],mb:R[S+12>>>2>>>0],ib:R[S+16>>>2>>>0],bb:R[S+20>>>2>>>0],Wa:R[S+24>>>2>>>0],ab:R[S+28>>>2>>>0],Jb:R[S+32>>>2>>>0],Eb:R[S+36>>>2>>>0],Hb:te?vt(te):""},w=vt(w),te={"%c":"%a %b %d %H:%M:%S %Y","%D":"%m/%d/%y","%F":"%Y-%m-%d","%h":"%b","%r":"%I:%M:%S %p","%R":"%H:%M","%T":"%H:%M:%S","%x":"%m/%d/%y","%X":"%H:%M:%S","%Ec":"%c","%EC":"%C","%Ex":"%m/%d/%y","%EX":"%H:%M:%S","%Ey":"%y","%EY":"%Y","%Od":"%d","%Oe":"%e","%OH":"%H","%OI":"%I","%Om":"%m","%OM":"%M","%OS":"%S","%Ou":"%u","%OU":"%U","%OV":"%V","%Ow":"%w","%OW":"%W","%Oy":"%y"};for(var ye in te)w=w.replace(new RegExp(ye,"g"),te[ye]);var ae="Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "),Se="January February March April May June July August September October November December".split(" ");te={"%a":z=>ae[z.Wa].substring(0,3),"%A":z=>ae[z.Wa],"%b":z=>Se[z.ib].substring(0,3),"%B":z=>Se[z.ib],"%C":z=>V((z.bb+1900)/100|0,2),"%d":z=>V(z.mb,2),"%e":z=>P(z.mb,2," "),"%g":z=>oe(z).toString().substring(2),"%G":z=>oe(z),"%H":z=>V(z.hb,2),"%I":z=>(z=z.hb,z==0?z=12:12<z&&(z-=12),V(z,2)),"%j":z=>{for(var ue=0,Ee=0;Ee<=z.ib-1;ue+=(Xe(z.bb+1900)?pi:xo)[Ee++]);return V(z.mb+ue,3)},"%m":z=>V(z.ib+1,2),"%M":z=>V(z.Fb,2),"%n":()=>`
`,"%p":z=>0<=z.hb&&12>z.hb?"AM":"PM","%S":z=>V(z.Gb,2),"%t":()=>"	","%u":z=>z.Wa||7,"%U":z=>V(Math.floor((z.ab+7-z.Wa)/7),2),"%V":z=>{var ue=Math.floor((z.ab+7-(z.Wa+6)%7)/7);if(2>=(z.Wa+371-z.ab-2)%7&&ue++,ue)ue==53&&(Ee=(z.Wa+371-z.ab)%7,Ee==4||Ee==3&&Xe(z.bb)||(ue=1));else{ue=52;var Ee=(z.Wa+7-z.ab-1)%7;(Ee==4||Ee==5&&Xe(z.bb%400-1))&&ue++}return V(ue,2)},"%w":z=>z.Wa,"%W":z=>V(Math.floor((z.ab+7-(z.Wa+6)%7)/7),2),"%y":z=>(z.bb+1900).toString().substring(2),"%Y":z=>z.bb+1900,"%z":z=>{z=z.Eb;var ue=0<=z;return z=Math.abs(z)/60,(ue?"+":"-")+("0000"+(z/60*100+z%60)).slice(-4)},"%Z":z=>z.Hb,"%%":()=>"%"},w=w.replace(/%%/g,"\0\0");for(ye in te)w.includes(ye)&&(w=w.replace(new RegExp(ye,"g"),te[ye](S)));return w=w.replace(/\0\0/g,"%"),ye=hi(w),ye.length>m?0:(L.set(ye,c>>>0),ye.length-1)}for(var mi=Array(256),zn=0;256>zn;++zn)mi[zn]=String.fromCharCode(zn);oo=mi,Xt=n.BindingError=class extends Error{constructor(c){super(c),this.name="BindingError"}},n.InternalError=class extends Error{constructor(c){super(c),this.name="InternalError"}},Object.assign(ao.prototype,{get(c){return this.$a[c]},has(c){return this.$a[c]!==void 0},kb(c){var m=this.nb.pop()||this.$a.length;return this.$a[m]=c,m},jb(c){this.$a[c]=void 0,this.nb.push(c)}}),tt.$a.push({value:void 0},{value:null},{value:!0},{value:!1}),tt.cb=tt.$a.length,n.count_emval_handles=()=>{for(var c=0,m=tt.cb;m<tt.$a.length;++m)tt.$a[m]!==void 0&&++c;return c};var gi={ia:function(c,m,w){return zr(async()=>{await n.yb(c,m,w)})},a:function(c,m,w){throw c>>>=0,new Gr(c).kb(m>>>0,w>>>0),br=c,Jo++,br},w:function(){return 0},ca:function(){},P:function(){},R:function(){},J:function(){return 0},aa:function(){},X:function(){},$:function(){},D:function(){},Q:function(){},N:function(){},ba:function(){},O:function(){},G:function(c,m,w,S,P){m>>>=0,m=Kt(m);var V=m.indexOf("u")!=-1;V&&(P=(1n<<64n)-1n),Zt(c>>>0,{name:m,fromWireType:j=>j,toWireType:function(j,Z){if(typeof Z!="bigint"&&typeof Z!="number")throw new TypeError(`Cannot convert "${Qo(Z)}" to ${this.name}`);if(Z<S||Z>P)throw new TypeError(`Passing a number "${Qo(Z)}" from JS side to C/C++ side to an argument of type "${m}", which is outside the valid range [${S}, ${P}]!`);return Z},argPackAdvance:8,readValueFromPointer:io(m,w>>>0,!V),eb:null})},ga:function(c,m,w,S){m=Kt(m>>>0),Zt(c>>>0,{name:m,fromWireType:function(P){return!!P},toWireType:function(P,V){return V?w:S},argPackAdvance:8,readValueFromPointer:function(P){return this.fromWireType(W[P>>>0])},eb:null})},fa:function(c,m){m=Kt(m>>>0),Zt(c>>>0,{name:m,fromWireType:w=>{var S=$t(w);return An(w),S},toWireType:(w,S)=>de(S),argPackAdvance:8,readValueFromPointer:tn,eb:null})},F:function(c,m,w){m=Kt(m>>>0),Zt(c>>>0,{name:m,fromWireType:S=>S,toWireType:(S,P)=>P,argPackAdvance:8,readValueFromPointer:ti(m,w>>>0),eb:null})},t:function(c,m,w,S,P){if(c>>>=0,w>>>=0,m=Kt(m>>>0),P===-1&&(P=4294967295),P=Z=>Z,S===0){var V=32-8*w;P=Z=>Z<<V>>>V}var j=m.includes("unsigned")?function(Z,oe){return oe>>>0}:function(Z,oe){return oe};Zt(c,{name:m,fromWireType:P,toWireType:j,argPackAdvance:8,readValueFromPointer:io(m,w,S!==0),eb:null})},n:function(c,m,w){function S(V){return new P(L.buffer,H[V+4>>>2>>>0],H[V>>>2>>>0])}var P=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array,BigInt64Array,BigUint64Array][m];w=Kt(w>>>0),Zt(c>>>0,{name:w,fromWireType:S,argPackAdvance:8,readValueFromPointer:S},{tb:!0})},H:function(c,m){m=Kt(m>>>0);var w=m==="std::string";Zt(c>>>0,{name:m,fromWireType:function(S){var P=H[S>>>2>>>0],V=S+4;if(w)for(var j=V,Z=0;Z<=P;++Z){var oe=V+Z;if(Z==P||W[oe>>>0]==0){if(j=vt(j,oe-j),te===void 0)var te=j;else te+=String.fromCharCode(0),te+=j;j=oe+1}}else{for(te=Array(P),Z=0;Z<P;++Z)te[Z]=String.fromCharCode(W[V+Z>>>0]);te=te.join("")}return ht(S),te},toWireType:function(S,P){P instanceof ArrayBuffer&&(P=new Uint8Array(P));var V=typeof P=="string";if(!(V||P instanceof Uint8Array||P instanceof Uint8ClampedArray||P instanceof Int8Array))throw new Xt("Cannot pass non-string to std::string");var j=w&&V?ur(P):P.length,Z=Nt(4+j+1),oe=Z+4;if(H[Z>>>2>>>0]=j,w&&V)Qr(P,W,oe,j+1);else if(V)for(V=0;V<j;++V){var te=P.charCodeAt(V);if(255<te)throw ht(oe),new Xt("String has UTF-16 code units that do not fit in 8 bits");W[oe+V>>>0]=te}else for(V=0;V<j;++V)W[oe+V>>>0]=P[V];return S!==null&&S.push(ht,Z),Z},argPackAdvance:8,readValueFromPointer:ts,eb(S){ht(S)}})},y:function(c,m,w){if(m>>>=0,w>>>=0,w=Kt(w),m===2)var S=rs,P=ri,V=ni,j=()=>se,Z=1;else m===4&&(S=oi,P=ii,V=uo,j=()=>H,Z=2);Zt(c>>>0,{name:w,fromWireType:oe=>{for(var te=H[oe>>>2>>>0],ye=j(),ae,Se=oe+4,z=0;z<=te;++z){var ue=oe+4+z*m;(z==te||ye[ue>>>Z]==0)&&(Se=S(Se,ue-Se),ae===void 0?ae=Se:(ae+=String.fromCharCode(0),ae+=Se),Se=ue+m)}return ht(oe),ae},toWireType:(oe,te)=>{if(typeof te!="string")throw new Xt(`Cannot pass non-string to C++ string type ${w}`);var ye=V(te),ae=Nt(4+ye+m);return H[ae>>>2]=ye>>Z,P(te,ae+4,ye+m),oe!==null&&oe.push(ht,ae),ae},argPackAdvance:8,readValueFromPointer:tn,eb(oe){ht(oe)}})},ha:function(c,m){m=Kt(m>>>0),Zt(c>>>0,{ub:!0,name:m,argPackAdvance:0,fromWireType:()=>{},toWireType:()=>{}})},da:()=>1,s:function(c,m,w){return m>>>=0,w>>>=0,c=$t(c>>>0),m=On(m,"emval::as"),lo(m,w,c)},v:function(c){return c>>>=0,zr(()=>(c=$t(c),c.then(de)))},o:function(c,m,w,S){return w>>>=0,S>>>=0,c=on[c>>>0],m=$t(m>>>0),c(null,m,w,S)},k:function(c,m,w,S,P){return w>>>=0,S>>>=0,P>>>=0,c=on[c>>>0],m=$t(m>>>0),w=Pn(w),c(m,m[w],S,P)},b:An,z:function(c,m){return m>>>=0,c=$t(c>>>0),m=$t(m),c==m},m:function(c){return c>>>=0,c===0?de(mo()):(c=Pn(c),de(mo()[c]))},i:function(c,m,w){m=go(c,m>>>0);var S=m.shift();c--;var P=`return function (obj, func, destructorsRef, args) {
`,V=0,j=[];w===0&&j.push("obj");for(var Z=["retType"],oe=[S],te=0;te<c;++te)j.push("arg"+te),Z.push("argType"+te),oe.push(m[te]),P+=`  var arg${te} = argType${te}.readValueFromPointer(args${V?"+"+V:""});
`,V+=m[te].argPackAdvance;for(P+=`  var rv = ${w===1?"new func":"func.call"}(${j.join(", ")});
`,te=0;te<c;++te)m[te].deleteObject&&(P+=`  argType${te}.deleteObject(arg${te});
`);return S.ub||(Z.push("emval_returnValue"),oe.push(lo),P+=`  return emval_returnValue(retType, destructorsRef, rv);
`),Z.push(P+`};
`),c=ns(Z).apply(null,oe),w=`methodCaller<(${m.map(ye=>ye.name).join(", ")}) => ${S.name}>`,ci(bo(w,c))},r:function(c,m){return m>>>=0,c=$t(c>>>0),m=$t(m),de(c[m])},f:function(c){c>>>=0,4<c&&(tt.get(c).pb+=1)},u:function(){return de([])},l:function(c){c=$t(c>>>0);for(var m=Array(c.length),w=0;w<c.length;w++)m[w]=c[w];return de(m)},e:function(c){return de(Pn(c>>>0))},j:function(){return de({})},h:function(c){c>>>=0;for(var m=$t(c);m.length;){var w=m.pop();m.pop()(w)}An(c)},g:function(c,m,w){m>>>=0,w>>>=0,c=$t(c>>>0),m=$t(m),w=$t(w),c[m]=w},c:function(c,m){return m>>>=0,c=On(c>>>0,"_emval_take_value"),c=c.readValueFromPointer(m),de(c)},U:function(c,m){c=-9007199254740992>c||9007199254740992<c?NaN:Number(c),m>>>=0,c=new Date(1e3*c),R[m>>>2>>>0]=c.getUTCSeconds(),R[m+4>>>2>>>0]=c.getUTCMinutes(),R[m+8>>>2>>>0]=c.getUTCHours(),R[m+12>>>2>>>0]=c.getUTCDate(),R[m+16>>>2>>>0]=c.getUTCMonth(),R[m+20>>>2>>>0]=c.getUTCFullYear()-1900,R[m+24>>>2>>>0]=c.getUTCDay(),R[m+28>>>2>>>0]=(c.getTime()-Date.UTC(c.getUTCFullYear(),0,1,0,0,0,0))/864e5|0},V:function(c,m){c=-9007199254740992>c||9007199254740992<c?NaN:Number(c),m>>>=0,c=new Date(1e3*c),R[m>>>2>>>0]=c.getSeconds(),R[m+4>>>2>>>0]=c.getMinutes(),R[m+8>>>2>>>0]=c.getHours(),R[m+12>>>2>>>0]=c.getDate(),R[m+16>>>2>>>0]=c.getMonth(),R[m+20>>>2>>>0]=c.getFullYear()-1900,R[m+24>>>2>>>0]=c.getDay(),R[m+28>>>2>>>0]=(Xe(c.getFullYear())?kn:Dn)[c.getMonth()]+c.getDate()-1|0,R[m+36>>>2>>>0]=-(60*c.getTimezoneOffset());var w=new Date(c.getFullYear(),6,1).getTimezoneOffset(),S=new Date(c.getFullYear(),0,1).getTimezoneOffset();R[m+32>>>2>>>0]=(w!=S&&c.getTimezoneOffset()==Math.min(S,w))|0},W:function(c){c>>>=0;var m=new Date(R[c+20>>>2>>>0]+1900,R[c+16>>>2>>>0],R[c+12>>>2>>>0],R[c+8>>>2>>>0],R[c+4>>>2>>>0],R[c>>>2>>>0],0),w=R[c+32>>>2>>>0],S=m.getTimezoneOffset(),P=new Date(m.getFullYear(),6,1).getTimezoneOffset(),V=new Date(m.getFullYear(),0,1).getTimezoneOffset(),j=Math.min(V,P);return 0>w?R[c+32>>>2>>>0]=+(P!=V&&j==S):0<w!=(j==S)&&(P=Math.max(V,P),m.setTime(m.getTime()+6e4*((0<w?j:P)-S))),R[c+24>>>2>>>0]=m.getDay(),R[c+28>>>2>>>0]=(Xe(m.getFullYear())?kn:Dn)[m.getMonth()]+m.getDate()-1|0,R[c>>>2>>>0]=m.getSeconds(),R[c+4>>>2>>>0]=m.getMinutes(),R[c+8>>>2>>>0]=m.getHours(),R[c+12>>>2>>>0]=m.getDate(),R[c+16>>>2>>>0]=m.getMonth(),R[c+20>>>2>>>0]=m.getYear(),c=m.getTime(),isNaN(c)?(R[bi()>>>2>>>0]=61,c=-1):c/=1e3,BigInt(c)},S:function(){return-52},T:function(){},L:function(c,m,w){function S(oe){return(oe=oe.toTimeString().match(/\(([A-Za-z ]+)\)$/))?oe[1]:"GMT"}w>>>=0;var P=new Date().getFullYear(),V=new Date(P,0,1),j=new Date(P,6,1);P=V.getTimezoneOffset();var Z=j.getTimezoneOffset();H[c>>>0>>>2>>>0]=60*Math.max(P,Z),R[m>>>0>>>2>>>0]=+(P!=Z),c=S(V),m=S(j),c=yo(c),m=yo(m),Z<P?(H[w>>>2>>>0]=c,H[w+4>>>2>>>0]=m):(H[w>>>2>>>0]=m,H[w+4>>>2>>>0]=c)},A:()=>{ft("")},d:function(c,m,w){return c>>>=0,m=vo(m>>>0,w>>>0),pt[c].apply(null,m)},I:function(c,m,w){return c>>>=0,m=vo(m>>>0,w>>>0),pt[c].apply(null,m)},E:()=>Date.now(),M:function(){return 4294901760},q:()=>performance.now(),K:function(c){c>>>=0;var m=W.length;if(4294901760<c)return!1;for(var w=1;4>=w;w*=2){var S=m*(1+.2/w);S=Math.min(S,c+100663296);var P=Math;S=Math.max(c,S);e:{P=(P.min.call(P,4294901760,S+(65536-S%65536)%65536)-A.buffer.byteLength+65535)/65536;try{A.grow(P),q();var V=1;break e}catch{}V=void 0}if(V)return!0}return!1},Z:function(c,m){c>>>=0,m>>>=0;var w=0;return wo().forEach((S,P)=>{var V=m+w;for(P=H[c+4*P>>>2>>>0]=V,V=0;V<S.length;++V)L[P++>>>0>>>0]=S.charCodeAt(V);L[P>>>0>>>0]=0,w+=S.length+1}),0},_:function(c,m){c>>>=0,m>>>=0;var w=wo();H[c>>>2>>>0]=w.length;var S=0;return w.forEach(P=>S+=P.length+1),H[m>>>2>>>0]=S,0},x:()=>52,C:function(){return 52},Y:function(){return 70},B:function(c,m,w,S){m>>>=0,w>>>=0,S>>>=0;for(var P=0,V=0;V<w;V++){var j=H[m>>>2>>>0],Z=H[m+4>>>2>>>0];m+=8;for(var oe=0;oe<Z;oe++){var te=W[j+oe>>>0],ye=fi[c];te===0||te===10?((c===1?T:x)(sr(ye,0)),ye.length=0):ye.push(te)}P+=Z}return H[S>>>2>>>0]=P,0},ea:_o,p:function(c,m,w,S){return _o(c>>>0,m>>>0,w>>>0,S>>>0)}},he=function(){function c(w){return he=w.exports,he=ai(),he=os(),A=he.ja,q(),Ce.unshift(he.ka),Te--,Te==0&&(Le!==null&&(clearInterval(Le),Le=null),Ge&&(w=Ge,Ge=null,w())),he}var m={a:gi};if(Te++,n.instantiateWasm)try{return n.instantiateWasm(m,c)}catch(w){x(`Module.instantiateWasm callback failed with error: ${w}`),o(w)}return yt(m,function(w){c(w.instance)}).catch(o),{}}();n._OrtInit=(c,m)=>(n._OrtInit=he.la)(c,m),n._OrtGetLastError=(c,m)=>(n._OrtGetLastError=he.ma)(c,m),n._OrtCreateSessionOptions=(c,m,w,S,P,V,j,Z,oe,te)=>(n._OrtCreateSessionOptions=he.na)(c,m,w,S,P,V,j,Z,oe,te),n._OrtAppendExecutionProvider=(c,m)=>(n._OrtAppendExecutionProvider=he.oa)(c,m),n._OrtAddFreeDimensionOverride=(c,m,w)=>(n._OrtAddFreeDimensionOverride=he.pa)(c,m,w),n._OrtAddSessionConfigEntry=(c,m,w)=>(n._OrtAddSessionConfigEntry=he.qa)(c,m,w),n._OrtReleaseSessionOptions=c=>(n._OrtReleaseSessionOptions=he.ra)(c),n._OrtCreateSession=(c,m,w)=>(n._OrtCreateSession=he.sa)(c,m,w),n._OrtReleaseSession=c=>(n._OrtReleaseSession=he.ta)(c),n._OrtGetInputOutputCount=(c,m,w)=>(n._OrtGetInputOutputCount=he.ua)(c,m,w),n._OrtGetInputName=(c,m)=>(n._OrtGetInputName=he.va)(c,m),n._OrtGetOutputName=(c,m)=>(n._OrtGetOutputName=he.wa)(c,m),n._OrtFree=c=>(n._OrtFree=he.xa)(c),n._OrtCreateTensor=(c,m,w,S,P,V)=>(n._OrtCreateTensor=he.ya)(c,m,w,S,P,V),n._OrtGetTensorData=(c,m,w,S,P)=>(n._OrtGetTensorData=he.za)(c,m,w,S,P),n._OrtReleaseTensor=c=>(n._OrtReleaseTensor=he.Aa)(c),n._OrtCreateRunOptions=(c,m,w,S)=>(n._OrtCreateRunOptions=he.Ba)(c,m,w,S),n._OrtAddRunConfigEntry=(c,m,w)=>(n._OrtAddRunConfigEntry=he.Ca)(c,m,w),n._OrtReleaseRunOptions=c=>(n._OrtReleaseRunOptions=he.Da)(c),n._OrtCreateBinding=c=>(n._OrtCreateBinding=he.Ea)(c),n._OrtBindInput=(c,m,w)=>(n._OrtBindInput=he.Fa)(c,m,w),n._OrtBindOutput=(c,m,w,S)=>(n._OrtBindOutput=he.Ga)(c,m,w,S),n._OrtClearBoundOutputs=c=>(n._OrtClearBoundOutputs=he.Ha)(c),n._OrtReleaseBinding=c=>(n._OrtReleaseBinding=he.Ia)(c),n._OrtRunWithBinding=(c,m,w,S,P)=>(n._OrtRunWithBinding=he.Ja)(c,m,w,S,P),n._OrtRun=(c,m,w,S,P,V,j,Z)=>(n._OrtRun=he.Ka)(c,m,w,S,P,V,j,Z),n._OrtEndProfiling=c=>(n._OrtEndProfiling=he.La)(c),n._JsepOutput=(c,m,w)=>(n._JsepOutput=he.Ma)(c,m,w),n._JsepGetNodeName=c=>(n._JsepGetNodeName=he.Na)(c);var bi=()=>(bi=he.Oa)(),Nt=n._malloc=c=>(Nt=n._malloc=he.Pa)(c),ht=n._free=c=>(ht=n._free=he.Qa)(c),To=c=>(To=he.Ra)(c),sn=()=>(sn=he.Ta)(),$o=c=>($o=he.Ua)(c),So=c=>(So=he.Va)(c),yi=c=>(yi=he.Xa)(c),Mn=()=>(Mn=he.Ya)(),vi=c=>(vi=he.Za)(c),wi=()=>(wi=he._a)();n.___start_em_js=1387603,n.___stop_em_js=1387764;function os(){var c=he;c=Object.assign({},c);var m=S=>()=>S()>>>0,w=S=>P=>S(P)>>>0;return c.Oa=m(c.Oa),c.Pa=w(c.Pa),c.Ra=w(c.Ra),c.Ta=m(c.Ta),c.Va=w(c.Va),c}n.stackAlloc=So,n.stackSave=sn,n.stackRestore=$o,n.UTF8ToString=vt,n.stringToUTF8=(c,m,w)=>Qr(c,W,m,w),n.lengthBytesUTF8=ur;var Ln;Ge=function c(){Ln||xi(),Ln||(Ge=c)};function xi(){if(!(0<Te)){if(n.preRun)for(typeof n.preRun=="function"&&(n.preRun=[n.preRun]);n.preRun.length;){var c=n.preRun.shift();et.unshift(c)}for(;0<et.length;)et.shift()(n);if(!(0<Te||Ln||(Ln=!0,n.calledRun=!0,O))){for(;0<Ce.length;)Ce.shift()(n);for(t(n);0<Ae.length;)Ae.shift()(n)}}}return xi(),e.ready}})();typeof Vh=="object"&&typeof gu=="object"?gu.exports=Nh:typeof define=="function"&&define.amd&&define([],()=>Nh)});var Gh=it(()=>{});var Uh=it(()=>{});var Wh={};Ur(Wh,{cpus:()=>Bx});var Bx,Hh=B(()=>{Bx=void 0});var Kh=it((jh,bu)=>{"use strict";var qh=(()=>{var r=typeof document<"u"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename<"u"&&(r=r||__filename),function(e={}){function n(){return Re.buffer!=Te.buffer&&$e(),Te}function t(){return Re.buffer!=Te.buffer&&$e(),Le}function o(){return Re.buffer!=Te.buffer&&$e(),Ge}function i(){return Re.buffer!=Te.buffer&&$e(),ft}function s(){return Re.buffer!=Te.buffer&&$e(),Y}function a(){return Re.buffer!=Te.buffer&&$e(),pe}var u=e,l,d;u.ready=new Promise((f,y)=>{l=f,d=y}),u.jsepInit=(f,y,_,E,M,U,K,we)=>{u.Qb=f,u.wb=y,u.yb=_,u.jb=E,u.xb=M,u.Ea=U,u.zb=K,u.Ab=we,y=(ge,me,ve)=>(...Ve)=>{let qe=ht,N=me?.();Ve=ge(...Ve);let _e=me?.();return N!==_e&&(ge=_e,ve(N),me=ve=null),ht!=qe?wi():Ve},_=ge=>async(...me)=>{try{if(u.bb)throw Error("Session already started");let ve=u.bb={Fb:me[0],errors:[]},Ve=await ge(...me);if(u.bb!==ve)throw Error("Session mismatch");f.flush();let qe=ve.errors;if(0<qe.length){let N=await Promise.all(qe);if(N=N.filter(_e=>_e),0<N.length)throw Error(N.join(`
`))}return Ve}finally{u.bb=null}},u._OrtRun=_(y(u._OrtRun,()=>u._OrtRun,ge=>u._OrtRun=ge)),u._OrtRunWithBinding=_(y(u._OrtRunWithBinding,()=>u._OrtRunWithBinding,ge=>u._OrtRunWithBinding=ge)),u._OrtBindInput=y(u._OrtBindInput,()=>u._OrtBindInput,ge=>u._OrtBindInput=ge),u.jsepRegisterBuffer=(ge,me,ve,Ve)=>f.registerBuffer(ge,me,ve,Ve),u.jsepUnregisterBuffers=ge=>{f.unregisterBuffers(ge)},u.jsepGetBuffer=ge=>f.getBuffer(ge),u.jsepCreateDownloader=(ge,me,ve)=>f.createDownloader(ge,me,ve)};var p=Object.assign({},u),h="./this.program",g=(f,y)=>{throw y},b=typeof window=="object",v=typeof importScripts=="function",$=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",T=u.ENVIRONMENT_IS_PTHREAD||!1,x="";function A(f){return u.locateFile?u.locateFile(f,x):x+f}var O,k,L;if($){var W=(_a(),wr(xa)),J=(mu(),wr(hu));x=v?J.dirname(x)+"/":__dirname+"/",O=(y,_)=>(y=y.startsWith("file://")?new URL(y):J.normalize(y),W.readFileSync(y,_?void 0:"utf8")),L=y=>(y=O(y,!0),y.buffer||(y=new Uint8Array(y)),y),k=(y,_,E,M=!0)=>{y=y.startsWith("file://")?new URL(y):J.normalize(y),W.readFile(y,M?void 0:"utf8",(U,K)=>{U?E(U):_(M?K.buffer:K)})},!u.thisProgram&&1<process.argv.length&&(h=process.argv[1].replace(/\\/g,"/")),process.argv.slice(2),g=(y,_)=>{throw process.exitCode=y,_},u.inspect=()=>"[Emscripten Module object]";let f;try{f=Gh()}catch(y){throw console.error('The "worker_threads" module is not supported in this node.js build - perhaps a newer version is needed?'),y}global.Worker=f.Worker}else(b||v)&&(v?x=self.location.href:typeof document<"u"&&document.currentScript&&(x=document.currentScript.src),typeof r<"u"&&r&&(x=r),x.indexOf("blob:")!==0?x=x.substr(0,x.replace(/[?#].*/,"").lastIndexOf("/")+1):x="",$||(O=f=>{var y=new XMLHttpRequest;return y.open("GET",f,!1),y.send(null),y.responseText},v&&(L=f=>{var y=new XMLHttpRequest;return y.open("GET",f,!1),y.responseType="arraybuffer",y.send(null),new Uint8Array(y.response)}),k=(f,y,_)=>{var E=new XMLHttpRequest;E.open("GET",f,!0),E.responseType="arraybuffer",E.onload=()=>{E.status==200||E.status==0&&E.response?y(E.response):_()},E.onerror=_,E.send(null)}));$&&typeof performance>"u"&&(global.performance=Uh().performance);var se=console.log.bind(console),R=console.error.bind(console);$&&(se=(...f)=>W.writeSync(1,f.join(" ")+`
`),R=(...f)=>W.writeSync(2,f.join(" ")+`
`));var H=u.print||se,Be=u.printErr||R;Object.assign(u,p),p=null,u.thisProgram&&(h=u.thisProgram),u.quit&&(g=u.quit);var Je;u.wasmBinary&&(Je=u.wasmBinary);var Qe=u.noExitRuntime||!0;typeof WebAssembly!="object"&&sr("no native wasm support detected");var Re,q,et,Ce=!1,Ae,Te,Le,Ge,ft,Y,pe;function $e(){var f=Re.buffer;u.HEAP8=Te=new Int8Array(f),u.HEAP16=new Int16Array(f),u.HEAP32=Ge=new Int32Array(f),u.HEAPU8=Le=new Uint8Array(f),u.HEAPU16=new Uint16Array(f),u.HEAPU32=ft=new Uint32Array(f),u.HEAPF32=Y=new Float32Array(f),u.HEAPF64=pe=new Float64Array(f)}var Pt=u.INITIAL_MEMORY||16777216;if(5242880<=Pt||sr("INITIAL_MEMORY should be larger than STACK_SIZE, was "+Pt+"! (STACK_SIZE=5242880)"),T)Re=u.wasmMemory;else if(u.wasmMemory)Re=u.wasmMemory;else if(Re=new WebAssembly.Memory({initial:Pt/65536,maximum:65536,shared:!0}),!(Re.buffer instanceof SharedArrayBuffer))throw Be("requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag"),$&&Be("(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and/or recent version)"),Error("bad memory");$e(),Pt=Re.buffer.byteLength;var Tt=[],jt=[],Fr=[],yt=0;function pt(){return Qe||0<yt}var Rt=0,Gr=null,br=null;function Jo(){Rt++,u.monitorRunDependencies&&u.monitorRunDependencies(Rt)}function no(){if(Rt--,u.monitorRunDependencies&&u.monitorRunDependencies(Rt),Rt==0&&(Gr!==null&&(clearInterval(Gr),Gr=null),br)){var f=br;br=null,f()}}function sr(f){throw u.onAbort&&u.onAbort(f),f="Aborted("+f+")",Be(f),Ce=!0,Ae=1,f=new WebAssembly.RuntimeError(f+". Build with -sASSERTIONS for more info."),d(f),f}function vt(f){return f.startsWith("data:application/octet-stream;base64,")}var ur;ur="ort-wasm-simd-threaded.wasm",vt(ur)||(ur=A(ur));function Qr(f){if(f==ur&&Je)return new Uint8Array(Je);if(L)return L(f);throw"both async and sync fetching of the wasm failed"}function Qo(f){if(!Je&&(b||v)){if(typeof fetch=="function"&&!f.startsWith("file://"))return fetch(f,{credentials:"same-origin"}).then(y=>{if(!y.ok)throw"failed to load wasm binary file at '"+f+"'";return y.arrayBuffer()}).catch(()=>Qr(f));if(k)return new Promise((y,_)=>{k(f,E=>y(new Uint8Array(E)),_)})}return Promise.resolve().then(()=>Qr(f))}function oo(f,y,_){return Qo(f).then(E=>WebAssembly.instantiate(E,y)).then(E=>E).then(_,E=>{Be("failed to asynchronously prepare wasm: "+E),sr(E)})}function Kt(f,y){var _=ur;return Je||typeof WebAssembly.instantiateStreaming!="function"||vt(_)||_.startsWith("file://")||$||typeof fetch!="function"?oo(_,f,y):fetch(_,{credentials:"same-origin"}).then(E=>WebAssembly.instantiateStreaming(E,f).then(y,function(M){return Be("wasm streaming compile failed: "+M),Be("falling back to ArrayBuffer instantiation"),oo(_,f,y)}))}var yr,en={912252:f=>{u.Ea("Abs",f,void 0)},912303:f=>{u.Ea("Neg",f,void 0)},912354:f=>{u.Ea("Floor",f,void 0)},912407:f=>{u.Ea("Ceil",f,void 0)},912459:f=>{u.Ea("Reciprocal",f,void 0)},912517:f=>{u.Ea("Sqrt",f,void 0)},912569:f=>{u.Ea("Exp",f,void 0)},912620:f=>{u.Ea("Erf",f,void 0)},912671:f=>{u.Ea("Sigmoid",f,void 0)},912726:f=>{u.Ea("Log",f,void 0)},912777:f=>{u.Ea("Sin",f,void 0)},912828:f=>{u.Ea("Cos",f,void 0)},912879:f=>{u.Ea("Tan",f,void 0)},912930:f=>{u.Ea("Asin",f,void 0)},912982:f=>{u.Ea("Acos",f,void 0)},913034:f=>{u.Ea("Atan",f,void 0)},913086:f=>{u.Ea("Sinh",f,void 0)},913138:f=>{u.Ea("Cosh",f,void 0)},913190:f=>{u.Ea("Asinh",f,void 0)},913243:f=>{u.Ea("Acosh",f,void 0)},913296:f=>{u.Ea("Atanh",f,void 0)},913349:f=>{u.Ea("Tanh",f,void 0)},913401:f=>{u.Ea("Not",f,void 0)},913452:(f,y,_)=>{u.Ea("ClipV10",f,{min:y,max:_})},913524:f=>{u.Ea("Clip",f,void 0)},913576:(f,y)=>{u.Ea("Elu",f,{alpha:y})},913634:f=>{u.Ea("Relu",f,void 0)},913686:(f,y)=>{u.Ea("LeakyRelu",f,{alpha:y})},913750:(f,y)=>{u.Ea("ThresholdedRelu",f,{alpha:y})},913820:(f,y)=>{u.Ea("Cast",f,{to:y})},913878:f=>{u.Ea("Add",f,void 0)},913929:f=>{u.Ea("Sub",f,void 0)},913980:f=>{u.Ea("Mul",f,void 0)},914031:f=>{u.Ea("Div",f,void 0)},914082:f=>{u.Ea("Pow",f,void 0)},914133:f=>{u.Ea("Equal",f,void 0)},914186:f=>{u.Ea("Greater",f,void 0)},914241:f=>{u.Ea("GreaterOrEqual",f,void 0)},914303:f=>{u.Ea("Less",f,void 0)},914355:f=>{u.Ea("LessOrEqual",f,void 0)},914414:(f,y,_,E,M)=>{u.Ea("ReduceMean",f,{keepDims:!!y,noopWithEmptyAxes:!!_,axes:E?Array.from(o().subarray(M>>>0,M+E>>>0)):[]})},914578:(f,y,_,E,M)=>{u.Ea("ReduceMax",f,{keepDims:!!y,noopWithEmptyAxes:!!_,axes:E?Array.from(o().subarray(M>>>0,M+E>>>0)):[]})},914741:(f,y,_,E,M)=>{u.Ea("ReduceMin",f,{keepDims:!!y,noopWithEmptyAxes:!!_,axes:E?Array.from(o().subarray(M>>>0,M+E>>>0)):[]})},914904:(f,y,_,E,M)=>{u.Ea("ReduceProd",f,{keepDims:!!y,noopWithEmptyAxes:!!_,axes:E?Array.from(o().subarray(M>>>0,M+E>>>0)):[]})},915068:(f,y,_,E,M)=>{u.Ea("ReduceSum",f,{keepDims:!!y,noopWithEmptyAxes:!!_,axes:E?Array.from(o().subarray(M>>>0,M+E>>>0)):[]})},915231:(f,y,_,E,M)=>{u.Ea("ReduceL1",f,{keepDims:!!y,noopWithEmptyAxes:!!_,axes:E?Array.from(o().subarray(M>>>0,M+E>>>0)):[]})},915393:(f,y,_,E,M)=>{u.Ea("ReduceL2",f,{keepDims:!!y,noopWithEmptyAxes:!!_,axes:E?Array.from(o().subarray(M>>>0,M+E>>>0)):[]})},915555:(f,y,_,E,M)=>{u.Ea("ReduceLogSum",f,{keepDims:!!y,noopWithEmptyAxes:!!_,axes:E?Array.from(o().subarray(M>>>0,M+E>>>0)):[]})},915721:(f,y,_,E,M)=>{u.Ea("ReduceSumSquare",f,{keepDims:!!y,noopWithEmptyAxes:!!_,axes:E?Array.from(o().subarray(M>>>0,M+E>>>0)):[]})},915890:(f,y,_,E,M)=>{u.Ea("ReduceLogSumExp",f,{keepDims:!!y,noopWithEmptyAxes:!!_,axes:E?Array.from(o().subarray(M>>>0,M+E>>>0)):[]})},916059:f=>{u.Ea("Where",f,void 0)},916112:(f,y,_)=>{u.Ea("Transpose",f,{perm:y?Array.from(o().subarray(_>>>0,_+y>>>0)):[]})},916225:(f,y,_,E,M,U,K,we,ge,me,ve,Ve,qe,N,_e)=>{u.Ea("ConvTranspose",f,{format:ge?"NHWC":"NCHW",autoPad:y,dilations:[_],group:E,kernel_shape:[M],pads:[U,K],strides:[we],wIsConst:()=>!!n()[me>>>0],outputPadding:ve?Array.from(o().subarray(Ve>>>0,Ve+ve>>>0)):[],outputShape:qe?Array.from(o().subarray(N>>>0,N+qe>>>0)):[],activation:tt(_e)})},916639:(f,y,_,E,M,U,K,we,ge,me,ve,Ve,qe,N)=>{u.Ea("ConvTranspose",f,{format:we?"NHWC":"NCHW",autoPad:y,dilations:Array.from(o().subarray(_>>>0,_+2>>>0)),group:E,kernelShape:Array.from(o().subarray(M>>>0,M+2>>>0)),pads:Array.from(o().subarray(U>>>0,U+4>>>0)),strides:Array.from(o().subarray(K>>>0,K+2>>>0)),wIsConst:()=>!!n()[ge>>>0],outputPadding:0<me?Array.from(o().subarray(ve>>>0,ve+me>>>0)):[],outputShape:0<Ve?Array.from(o().subarray(qe>>>0,qe+Ve>>>0)):[],activation:tt(N)})},917196:(f,y,_,E,M,U,K,we,ge,me,ve,Ve,qe,N,_e)=>{u.Ea("ConvTranspose",f,{format:ge?"NHWC":"NCHW",autoPad:y,dilations:[_],group:E,kernel_shape:[M],pads:[U,K],strides:[we],wIsConst:()=>!!n()[me>>>0],outputPadding:ve?Array.from(o().subarray(Ve>>>0,Ve+ve>>>0)):[],outputShape:qe?Array.from(o().subarray(N>>>0,N+qe>>>0)):[],activation:tt(_e)})},917610:(f,y,_,E,M,U,K,we,ge,me,ve,Ve,qe,N)=>{u.Ea("ConvTranspose",f,{format:we?"NHWC":"NCHW",autoPad:y,dilations:Array.from(o().subarray(_>>>0,_+2>>>0)),group:E,kernelShape:Array.from(o().subarray(M>>>0,M+2>>>0)),pads:Array.from(o().subarray(U>>>0,U+4>>>0)),strides:Array.from(o().subarray(K>>>0,K+2>>>0)),wIsConst:()=>!!n()[ge>>>0],outputPadding:0<me?Array.from(o().subarray(ve>>>0,ve+me>>>0)):[],outputShape:0<Ve?Array.from(o().subarray(qe>>>0,qe+Ve>>>0)):[],activation:tt(N)})},918167:(f,y)=>{u.Ea("GlobalAveragePool",f,{format:y?"NHWC":"NCHW"})},918258:(f,y,_,E,M,U,K,we,ge,me,ve,Ve,qe,N,_e,Ue)=>{u.Ea("AveragePool",f,{format:Ue?"NHWC":"NCHW",auto_pad:y,ceil_mode:_,count_include_pad:E,storage_order:M,dilations:[U,K],kernel_shape:[we,ge],pads:[me,ve,Ve,qe],strides:[N,_e]})},918542:(f,y)=>{u.Ea("GlobalAveragePool",f,{format:y?"NHWC":"NCHW"})},918633:(f,y,_,E,M,U,K,we,ge,me,ve,Ve,qe,N,_e,Ue)=>{u.Ea("AveragePool",f,{format:Ue?"NHWC":"NCHW",auto_pad:y,ceil_mode:_,count_include_pad:E,storage_order:M,dilations:[U,K],kernel_shape:[we,ge],pads:[me,ve,Ve,qe],strides:[N,_e]})},918917:(f,y)=>{u.Ea("GlobalMaxPool",f,{format:y?"NHWC":"NCHW"})},919004:(f,y,_,E,M,U,K,we,ge,me,ve,Ve,qe,N,_e,Ue)=>{u.Ea("MaxPool",f,{format:Ue?"NHWC":"NCHW",auto_pad:y,ceil_mode:_,count_include_pad:E,storage_order:M,dilations:[U,K],kernel_shape:[we,ge],pads:[me,ve,Ve,qe],strides:[N,_e]})},919284:(f,y)=>{u.Ea("GlobalMaxPool",f,{format:y?"NHWC":"NCHW"})},919371:(f,y,_,E,M,U,K,we,ge,me,ve,Ve,qe,N,_e,Ue)=>{u.Ea("MaxPool",f,{format:Ue?"NHWC":"NCHW",auto_pad:y,ceil_mode:_,count_include_pad:E,storage_order:M,dilations:[U,K],kernel_shape:[we,ge],pads:[me,ve,Ve,qe],strides:[N,_e]})},919651:(f,y,_,E,M)=>{u.Ea("Gemm",f,{alpha:y,beta:_,transA:E,transB:M})},919755:f=>{u.Ea("MatMul",f,void 0)},919809:(f,y,_,E)=>{u.Ea("ArgMax",f,{keepDims:!!y,selectLastIndex:!!_,axis:E})},919917:(f,y,_,E)=>{u.Ea("ArgMin",f,{keepDims:!!y,selectLastIndex:!!_,axis:E})},920025:(f,y)=>{u.Ea("Softmax",f,{axis:y})},920088:(f,y)=>{u.Ea("Concat",f,{axis:y})},920148:(f,y,_,E,M)=>{u.Ea("Split",f,{axis:y,numOutputs:_,splitSizes:E?Array.from(o().subarray(M>>>0,M+E>>>0)):[]})},920293:f=>{u.Ea("Expand",f,void 0)},920347:(f,y)=>{u.Ea("Gather",f,{axis:Number(y)})},920418:(f,y)=>{u.Ea("GatherElements",f,{axis:Number(y)})},920497:(f,y,_,E,M,U,K,we,ge,me,ve)=>{u.Ea("Resize",f,{antialias:y,axes:_?Array.from(o().subarray(E>>>0,E+_>>>0)):[],coordinateTransformMode:tt(M),cubicCoeffA:U,excludeOutside:K,extrapolationValue:we,keepAspectRatioPolicy:tt(ge),mode:tt(me),nearestMode:tt(ve)})},920848:(f,y,_,E,M,U,K)=>{u.Ea("Slice",f,{starts:y?Array.from(o().subarray(_>>>0,_+y>>>0)):[],ends:E?Array.from(o().subarray(M>>>0,M+E>>>0)):[],axes:U?Array.from(o().subarray(K>>>0,K+U>>>0)):[]})},921079:f=>{u.Ea("Tile",f,void 0)},921131:(f,y,_)=>{u.Ea("LayerNormalization",f,{axis:Number(y),epsilon:Number(_)})},921238:(f,y,_)=>{u.Ea("InstanceNormalization",f,{epsilon:y,format:_?"NHWC":"NCHW"})},921352:(f,y,_)=>{u.Ea("InstanceNormalization",f,{epsilon:y,format:_?"NHWC":"NCHW"})},921466:f=>{u.Ea("Range",f,void 0)},921519:(f,y)=>{u.Ea("Einsum",f,{equation:tt(y)})},921600:(f,y,_,E,M)=>{u.Ea("Pad",f,{mode:y,value:_,pads:E?Array.from(o().subarray(M>>>0,M+E>>>0)):[]})},921732:f=>{u.Ea("Gelu",f,void 0)},921784:f=>{u.Ea("BiasAdd",f,void 0)},921839:f=>{u.Ea("BiasSplitGelu",f,void 0)},921900:(f,y)=>{u.Ea("SkipLayerNormalization",f,{epsilon:y})},921981:(f,y,_,E,M,U,K,we,ge,me,ve,Ve,qe)=>{u.Ea("Conv",f,{format:ge?"NHWC":"NCHW",auto_pad:y,dilations:[_],group:E,kernel_shape:[M],pads:U?Array.from(o().subarray(K>>>0,K+U>>>0)):[],strides:[we],w_is_const:()=>!!n()[me>>>0],activation:tt(ve),activation_params:Ve?Array.from(s().subarray(qe>>>0,qe+Ve>>>0)):[]})},922362:(f,y,_,E,M,U,K,we,ge,me,ve,Ve,qe,N,_e,Ue)=>{u.Ea("Conv",f,{format:Ve?"NHWC":"NCHW",auto_pad:y,dilations:[_,E],group:M,kernel_shape:[U,K],pads:we?Array.from(o().subarray(ge>>>0,ge+we>>>0)):[],strides:[me,ve],w_is_const:()=>!!n()[qe>>>0],activation:tt(N),activation_params:_e?Array.from(s().subarray(Ue>>>0,Ue+_e>>>0)):[]})},922764:f=>{u.zb(f)},922798:(f,y)=>u.Ab(f,y,u.bb.Fb,u.bb.errors),922910:f=>u.wb(f),922943:f=>u.yb(f),922975:(f,y,_)=>{u.jb(f,y,_,!0)},923014:(f,y,_)=>{u.jb(f,y,_)}};function In(f){this.name="ExitStatus",this.message=`Program terminated with exit(${f})`,this.status=f}function Xt(f){f.terminate(),f.onmessage=()=>{}}function ei(f){(f=de.Qa[f])||sr(),de.Eb(f)}function Zt(f){var y=de.tb();if(!y)return 6;de.Ya.push(y),de.Qa[f.Xa]=y,y.Xa=f.Xa;var _={cmd:"run",start_routine:f.Gb,arg:f.rb,pthread_ptr:f.Xa};return $&&y.unref(),y.postMessage(_,f.Mb),0}var io=typeof TextDecoder<"u"?new TextDecoder("utf8"):void 0,ao=(f,y,_)=>{y>>>=0;var E=y+_;for(_=y;f[_]&&!(_>=E);)++_;if(16<_-y&&f.buffer&&io)return io.decode(f.buffer instanceof SharedArrayBuffer?f.slice(y,_):f.subarray(y,_));for(E="";y<_;){var M=f[y++];if(M&128){var U=f[y++]&63;if((M&224)==192)E+=String.fromCharCode((M&31)<<6|U);else{var K=f[y++]&63;M=(M&240)==224?(M&15)<<12|U<<6|K:(M&7)<<18|U<<12|K<<6|f[y++]&63,65536>M?E+=String.fromCharCode(M):(M-=65536,E+=String.fromCharCode(55296|M>>10,56320|M&1023))}}else E+=String.fromCharCode(M)}return E},tt=(f,y)=>(f>>>=0)?ao(t(),f,y):"";function An(f){if(T)return Xe(1,1,f);Ae=f,pt()||(de.Hb(),u.onExit&&u.onExit(f),Ce=!0),g(f,new In(f))}var $t=f=>{if(Ae=f,T)throw ti(f),"unwind";An(f)},de={ab:[],Ya:[],mb:[],Qa:{},gb:function(){T?de.vb():de.ub()},ub:function(){Tt.unshift(()=>{Jo(),de.Bb(()=>no())})},vb:function(){de.receiveObjectTransfer=de.Db,de.threadInitTLS=de.lb,de.setExitStatus=de.kb,Qe=!1},kb:function(f){Ae=f},Sb:["$terminateWorker"],Hb:function(){for(var f of de.Ya)Xt(f);for(f of de.ab)Xt(f);de.ab=[],de.Ya=[],de.Qa=[]},Eb:function(f){var y=f.Xa;delete de.Qa[y],de.ab.push(f),de.Ya.splice(de.Ya.indexOf(f),1),f.Xa=0,oe(y)},Db:function(){},lb:function(){de.mb.forEach(f=>f())},Cb:f=>new Promise(y=>{f.onmessage=U=>{U=U.data;var K=U.cmd;if(U.targetThread&&U.targetThread!=S()){var we=de.Qa[U.Rb];we?we.postMessage(U,U.transferList):Be('Internal error! Worker sent a message "'+K+'" to target pthread '+U.targetThread+", but that thread no longer exists!")}else K==="checkMailbox"?Cn():K==="spawnThread"?Zt(U):K==="cleanupThread"?ei(U.thread):K==="killThread"?(U=U.thread,K=de.Qa[U],delete de.Qa[U],Xt(K),oe(U),de.Ya.splice(de.Ya.indexOf(K),1),K.Xa=0):K==="cancelThread"?de.Qa[U.thread].postMessage({cmd:"cancel"}):K==="loaded"?(f.loaded=!0,y(f)):K==="alert"?alert("Thread "+U.threadId+": "+U.text):U.target==="setimmediate"?f.postMessage(U):K==="callHandler"?u[U.handler](...U.args):K&&Be("worker sent an unknown command "+K)},f.onerror=U=>{throw Be("worker sent an error! "+U.filename+":"+U.lineno+": "+U.message),U},$&&(f.on("message",function(U){f.onmessage({data:U})}),f.on("error",function(U){f.onerror(U)}));var _=[],E=["onExit","onAbort","print","printErr"],M;for(M of E)u.hasOwnProperty(M)&&_.push(M);f.postMessage({cmd:"load",handlers:_,urlOrBlob:u.mainScriptUrlOrBlob||r,wasmMemory:Re,wasmModule:et})}),Bb:function(f){f()},qb:function(){var f=A("ort-wasm-simd-threaded.worker.js");f=new Worker(f),de.ab.push(f)},tb:function(){return de.ab.length==0&&(de.qb(),de.Cb(de.ab[0])),de.ab.pop()}};u.PThread=de;var tn=f=>{for(;0<f.length;)f.shift()(u)};u.establishStackSpace=function(){var f=S(),y=o()[f+52>>2>>>0];f=o()[f+56>>2>>>0],Se(y,y-f),ue(y)};function ti(f){if(T)return Xe(2,0,f);$t(f)}u.invokeEntryPoint=function(f,y){f=St.apply(null,[f,y]),pt()?de.kb(f):te(f)};function ts(f){this.fb=f-24,this.pb=function(y){i()[this.fb+4>>2>>>0]=y},this.ob=function(y){i()[this.fb+8>>2>>>0]=y},this.gb=function(y,_){this.nb(),this.pb(y),this.ob(_)},this.nb=function(){i()[this.fb+16>>2>>>0]=0}}var so=0,rs=0;function ri(f,y,_,E){return T?Xe(3,1,f,y,_,E):ni(f,y,_,E)}function ni(f,y,_,E){if(f>>>=0,y>>>=0,_>>>=0,E>>>=0,typeof SharedArrayBuffer>"u")return Be("Current environment does not support SharedArrayBuffer, pthreads are not available!"),6;var M=[];return T&&M.length===0?ri(f,y,_,E):(f={Gb:_,Xa:f,rb:E,Mb:M},T?(f.Ob="spawnThread",postMessage(f,M),0):Zt(f))}function oi(f,y,_){return T?Xe(4,1,f,y,_):0}function ii(f,y){if(T)return Xe(5,1,f,y)}var uo=f=>{for(var y=0,_=0;_<f.length;++_){var E=f.charCodeAt(_);127>=E?y++:2047>=E?y+=2:55296<=E&&57343>=E?(y+=4,++_):y+=3}return y},On=(f,y,_,E)=>{if(_>>>=0,!(0<E))return 0;var M=_;E=_+E-1;for(var U=0;U<f.length;++U){var K=f.charCodeAt(U);if(55296<=K&&57343>=K){var we=f.charCodeAt(++U);K=65536+((K&1023)<<10)|we&1023}if(127>=K){if(_>=E)break;y[_++>>>0]=K}else{if(2047>=K){if(_+1>=E)break;y[_++>>>0]=192|K>>6}else{if(65535>=K){if(_+2>=E)break;y[_++>>>0]=224|K>>12}else{if(_+3>=E)break;y[_++>>>0]=240|K>>18,y[_++>>>0]=128|K>>12&63}y[_++>>>0]=128|K>>6&63}y[_++>>>0]=128|K&63}}return y[_>>>0]=0,_-M},lo=(f,y,_)=>On(f,t(),y,_);function rn(f,y){if(T)return Xe(6,1,f,y)}function ai(f,y,_){if(T)return Xe(7,1,f,y,_)}function lr(f,y,_){return T?Xe(8,1,f,y,_):0}function Yt(f,y){if(T)return Xe(9,1,f,y)}function co(f,y,_){if(T)return Xe(10,1,f,y,_)}function nn(f,y,_,E){if(T)return Xe(11,1,f,y,_,E)}function fo(f,y,_,E){if(T)return Xe(12,1,f,y,_,E)}function po(f,y,_,E){if(T)return Xe(13,1,f,y,_,E)}function si(f){if(T)return Xe(14,1,f)}function En(f,y){if(T)return Xe(15,1,f,y)}function ui(f,y,_){if(T)return Xe(16,1,f,y,_)}var li=f=>{if(!Ce)try{if(f(),!pt())try{T?te(Ae):$t(Ae)}catch(y){y instanceof In||y=="unwind"||g(1,y)}}catch(y){y instanceof In||y=="unwind"||g(1,y)}};function ho(f){f>>>=0,typeof Atomics.Nb=="function"&&(Atomics.Nb(o(),f>>2,f).value.then(Cn),f+=128,Atomics.store(o(),f>>2,1))}u.__emscripten_thread_mailbox_await=ho;function Cn(){var f=S();f&&(ho(f),li(()=>ye()))}u.checkMailbox=Cn;var zr=f=>f%4===0&&(f%100!==0||f%400===0),on=[0,31,60,91,121,152,182,213,244,274,305,335],di=[0,31,59,90,120,151,181,212,243,273,304,334];function Pn(f,y,_,E,M,U,K,we){return T?Xe(17,1,f,y,_,E,M,U,K,we):-52}function mo(f,y,_,E,M,U,K){if(T)return Xe(18,1,f,y,_,E,M,U,K)}var ci=f=>{var y=uo(f)+1,_=P(y);return _&&lo(f,_,y),_},go=[],bo=(f,y)=>{go.length=0;var _;for(y>>=2;_=t()[f++>>>0];)y+=_!=105&y,go.push(_==105?o()[y>>>0]:a()[y++>>>1]),++y;return go},ns=f=>{var y=z();return f=f(),ue(y),f};function Xe(f,y){var _=arguments.length-2,E=arguments;return ns(()=>{for(var M=Ee(8*_),U=M>>3,K=0;K<_;K++){var we=E[2+K];a()[U+K>>>0]=we}return Z(f,_,M,y)})}var kn=[],Dn={},yo=()=>{if(!an){var f={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:(typeof navigator=="object"&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",_:h||"./this.program"},y;for(y in Dn)Dn[y]===void 0?delete f[y]:f[y]=Dn[y];var _=[];for(y in f)_.push(`${y}=${f[y]}`);an=_}return an},an;function vo(f,y){if(T)return Xe(19,1,f,y);f>>>=0,y>>>=0;var _=0;return yo().forEach(function(E,M){var U=y+_;for(M=i()[f+4*M>>2>>>0]=U,U=0;U<E.length;++U)n()[M++>>0>>>0]=E.charCodeAt(U);n()[M>>0>>>0]=0,_+=E.length+1}),0}function Bn(f,y){if(T)return Xe(20,1,f,y);f>>>=0,y>>>=0;var _=yo();i()[f>>2>>>0]=_.length;var E=0;return _.forEach(function(M){E+=M.length+1}),i()[y>>2>>>0]=E,0}function wo(f){return T?Xe(21,1,f):52}function Rn(f,y,_,E){return T?Xe(22,1,f,y,_,E):52}function fi(f,y,_,E,M){return T?Xe(23,1,f,y,_,E,M):70}var pi=[null,[],[]];function xo(f,y,_,E){if(T)return Xe(24,1,f,y,_,E);y>>>=0,_>>>=0,E>>>=0;for(var M=0,U=0;U<_;U++){var K=i()[y>>2>>>0],we=i()[y+4>>2>>>0];y+=8;for(var ge=0;ge<we;ge++){var me=t()[K+ge>>>0],ve=pi[f];me===0||me===10?((f===1?H:Be)(ao(ve,0)),ve.length=0):ve.push(me)}M+=we}return i()[E>>2>>>0]=M,0}var hi=[31,29,31,30,31,30,31,31,30,31,30,31],_o=[31,28,31,30,31,30,31,31,30,31,30,31];function mi(f){var y=Array(uo(f)+1);return On(f,y,0,y.length),y}var zn=(f,y)=>{n().set(f,y>>>0)};function gi(f,y,_,E){function M(N,_e,Ue){for(N=typeof N=="number"?N.toString():N||"";N.length<_e;)N=Ue[0]+N;return N}function U(N,_e){return M(N,_e,"0")}function K(N,_e){function Ue(nl){return 0>nl?-1:0<nl?1:0}var un;return(un=Ue(N.getFullYear()-_e.getFullYear()))===0&&(un=Ue(N.getMonth()-_e.getMonth()))===0&&(un=Ue(N.getDate()-_e.getDate())),un}function we(N){switch(N.getDay()){case 0:return new Date(N.getFullYear()-1,11,29);case 1:return N;case 2:return new Date(N.getFullYear(),0,3);case 3:return new Date(N.getFullYear(),0,2);case 4:return new Date(N.getFullYear(),0,1);case 5:return new Date(N.getFullYear()-1,11,31);case 6:return new Date(N.getFullYear()-1,11,30)}}function ge(N){var _e=N.Za;for(N=new Date(new Date(N.$a+1900,0,1).getTime());0<_e;){var Ue=N.getMonth(),un=(zr(N.getFullYear())?hi:_o)[Ue];if(_e>un-N.getDate())_e-=un-N.getDate()+1,N.setDate(1),11>Ue?N.setMonth(Ue+1):(N.setMonth(0),N.setFullYear(N.getFullYear()+1));else{N.setDate(N.getDate()+_e);break}}return Ue=new Date(N.getFullYear()+1,0,4),_e=we(new Date(N.getFullYear(),0,4)),Ue=we(Ue),0>=K(_e,N)?0>=K(Ue,N)?N.getFullYear()+1:N.getFullYear():N.getFullYear()-1}f>>>=0,y>>>=0,_>>>=0,E>>>=0;var me=o()[E+40>>2>>>0];E={Kb:o()[E>>2>>>0],Jb:o()[E+4>>2>>>0],cb:o()[E+8>>2>>>0],ib:o()[E+12>>2>>>0],eb:o()[E+16>>2>>>0],$a:o()[E+20>>2>>>0],Wa:o()[E+24>>2>>>0],Za:o()[E+28>>2>>>0],Tb:o()[E+32>>2>>>0],Ib:o()[E+36>>2>>>0],Lb:me?tt(me):""},_=tt(_),me={"%c":"%a %b %d %H:%M:%S %Y","%D":"%m/%d/%y","%F":"%Y-%m-%d","%h":"%b","%r":"%I:%M:%S %p","%R":"%H:%M","%T":"%H:%M:%S","%x":"%m/%d/%y","%X":"%H:%M:%S","%Ec":"%c","%EC":"%C","%Ex":"%m/%d/%y","%EX":"%H:%M:%S","%Ey":"%y","%EY":"%Y","%Od":"%d","%Oe":"%e","%OH":"%H","%OI":"%I","%Om":"%m","%OM":"%M","%OS":"%S","%Ou":"%u","%OU":"%U","%OV":"%V","%Ow":"%w","%OW":"%W","%Oy":"%y"};for(var ve in me)_=_.replace(new RegExp(ve,"g"),me[ve]);var Ve="Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "),qe="January February March April May June July August September October November December".split(" ");me={"%a":N=>Ve[N.Wa].substring(0,3),"%A":N=>Ve[N.Wa],"%b":N=>qe[N.eb].substring(0,3),"%B":N=>qe[N.eb],"%C":N=>U((N.$a+1900)/100|0,2),"%d":N=>U(N.ib,2),"%e":N=>M(N.ib,2," "),"%g":N=>ge(N).toString().substring(2),"%G":N=>ge(N),"%H":N=>U(N.cb,2),"%I":N=>(N=N.cb,N==0?N=12:12<N&&(N-=12),U(N,2)),"%j":N=>{for(var _e=0,Ue=0;Ue<=N.eb-1;_e+=(zr(N.$a+1900)?hi:_o)[Ue++]);return U(N.ib+_e,3)},"%m":N=>U(N.eb+1,2),"%M":N=>U(N.Jb,2),"%n":()=>`
`,"%p":N=>0<=N.cb&&12>N.cb?"AM":"PM","%S":N=>U(N.Kb,2),"%t":()=>"	","%u":N=>N.Wa||7,"%U":N=>U(Math.floor((N.Za+7-N.Wa)/7),2),"%V":N=>{var _e=Math.floor((N.Za+7-(N.Wa+6)%7)/7);if(2>=(N.Wa+371-N.Za-2)%7&&_e++,_e)_e==53&&(Ue=(N.Wa+371-N.Za)%7,Ue==4||Ue==3&&zr(N.$a)||(_e=1));else{_e=52;var Ue=(N.Wa+7-N.Za-1)%7;(Ue==4||Ue==5&&zr(N.$a%400-1))&&_e++}return U(_e,2)},"%w":N=>N.Wa,"%W":N=>U(Math.floor((N.Za+7-(N.Wa+6)%7)/7),2),"%y":N=>(N.$a+1900).toString().substring(2),"%Y":N=>N.$a+1900,"%z":N=>{N=N.Ib;var _e=0<=N;return N=Math.abs(N)/60,(_e?"+":"-")+("0000"+(N/60*100+N%60)).slice(-4)},"%Z":N=>N.Lb,"%%":()=>"%"},_=_.replace(/%%/g,"\0\0");for(ve in me)_.includes(ve)&&(_=_.replace(new RegExp(ve,"g"),me[ve](E)));return _=_.replace(/\0\0/g,"%"),ve=mi(_),ve.length>y?0:(zn(ve,f),ve.length-1)}function he(f){try{f()}catch(y){sr(y)}}function bi(f){var y={},_;for(_ in f)(function(E){var M=f[E];y[E]=typeof M=="function"?function(){sn.push(E);try{return M.apply(null,arguments)}finally{Ce||(sn.pop()===E||sr(),ht&&Nt===1&&sn.length===0&&(Nt=0,yt+=1,he(Qu),typeof Fibers<"u"&&Fibers.Ub()))}}:M})(_);return y}var Nt=0,ht=null,To=0,sn=[],$o={},So={},yi=0,Mn=null,vi=[];function wi(){return new Promise((f,y)=>{Mn={resolve:f,reject:y}})}function os(){var f=P(65548),y=f+12;i()[f>>2>>>0]=y,i()[f+4>>2>>>0]=y+65536,y=sn[0];var _=$o[y];return _===void 0&&(_=yi++,$o[y]=_,So[_]=y),y=_,o()[f+8>>2>>>0]=y,f}function Ln(){var f=o()[ht+8>>2>>>0];return f=q[So[f]],--yt,f()}function xi(f){if(!Ce){if(Nt===0){var y=!1,_=!1;f((E=0)=>{if(!Ce&&(To=E,y=!0,_)){Nt=2,he(()=>el(ht)),typeof Browser<"u"&&Browser.hb.sb&&Browser.hb.resume(),E=!1;try{var M=Ln()}catch(we){M=we,E=!0}var U=!1;if(!ht){var K=Mn;K&&(Mn=null,(E?K.reject:K.resolve)(M),U=!0)}if(E&&!U)throw M}}),_=!0,y||(Nt=1,ht=os(),typeof Browser<"u"&&Browser.hb.sb&&Browser.hb.pause(),he(()=>vr(ht)))}else Nt===2?(Nt=0,he(tl),V(ht),ht=null,vi.forEach(E=>li(E))):sr(`invalid state: ${Nt}`);return To}}function c(f){return xi(y=>{f().then(y)})}de.gb();var m=[null,An,ti,ri,oi,ii,rn,ai,lr,Yt,co,nn,fo,po,si,En,ui,Pn,mo,vo,Bn,wo,Rn,fi,xo],w={r:function(f,y,_){return c(async()=>{await u.xb(f,y,_)})},b:function(f,y,_){throw f>>>=0,new ts(f).gb(y>>>0,_>>>0),so=f,rs++,so},O:function(f){j(f>>>0,!v,1,!b,131072,!1),de.lb()},l:function(f){f>>>=0,T?postMessage({cmd:"cleanupThread",thread:f}):ei(f)},I:ni,i:oi,U:ii,E:rn,G:ai,V:lr,S:Yt,K:co,R:nn,p:fo,F:po,C:si,T:En,D:ui,q:()=>!0,A:function(f,y){f>>>=0,f==y>>>0?setTimeout(()=>Cn()):T?postMessage({targetThread:f,cmd:"checkMailbox"}):(f=de.Qa[f])&&f.postMessage({cmd:"checkMailbox"})},M:function(){return-1},N:ho,X:function(f){$&&de.Qa[f>>>0].ref()},u:function(f,y,_){f=y+2097152>>>0<4194305-!!f?(f>>>0)+4294967296*y:NaN,_>>>=0,f=new Date(1e3*f),o()[_>>2>>>0]=f.getUTCSeconds(),o()[_+4>>2>>>0]=f.getUTCMinutes(),o()[_+8>>2>>>0]=f.getUTCHours(),o()[_+12>>2>>>0]=f.getUTCDate(),o()[_+16>>2>>>0]=f.getUTCMonth(),o()[_+20>>2>>>0]=f.getUTCFullYear()-1900,o()[_+24>>2>>>0]=f.getUTCDay(),f=(f.getTime()-Date.UTC(f.getUTCFullYear(),0,1,0,0,0,0))/864e5|0,o()[_+28>>2>>>0]=f},v:function(f,y,_){f=y+2097152>>>0<4194305-!!f?(f>>>0)+4294967296*y:NaN,_>>>=0,f=new Date(1e3*f),o()[_>>2>>>0]=f.getSeconds(),o()[_+4>>2>>>0]=f.getMinutes(),o()[_+8>>2>>>0]=f.getHours(),o()[_+12>>2>>>0]=f.getDate(),o()[_+16>>2>>>0]=f.getMonth(),o()[_+20>>2>>>0]=f.getFullYear()-1900,o()[_+24>>2>>>0]=f.getDay(),y=(zr(f.getFullYear())?on:di)[f.getMonth()]+f.getDate()-1|0,o()[_+28>>2>>>0]=y,o()[_+36>>2>>>0]=-(60*f.getTimezoneOffset()),y=new Date(f.getFullYear(),6,1).getTimezoneOffset();var E=new Date(f.getFullYear(),0,1).getTimezoneOffset();f=(y!=E&&f.getTimezoneOffset()==Math.min(E,y))|0,o()[_+32>>2>>>0]=f},w:function(f){f>>>=0;var y=new Date(o()[f+20>>2>>>0]+1900,o()[f+16>>2>>>0],o()[f+12>>2>>>0],o()[f+8>>2>>>0],o()[f+4>>2>>>0],o()[f>>2>>>0],0),_=o()[f+32>>2>>>0],E=y.getTimezoneOffset(),M=new Date(y.getFullYear(),6,1).getTimezoneOffset(),U=new Date(y.getFullYear(),0,1).getTimezoneOffset(),K=Math.min(U,M);return 0>_?o()[f+32>>2>>>0]=+(M!=U&&K==E):0<_!=(K==E)&&(M=Math.max(U,M),y.setTime(y.getTime()+6e4*((0<_?K:M)-E))),o()[f+24>>2>>>0]=y.getDay(),_=(zr(y.getFullYear())?on:di)[y.getMonth()]+y.getDate()-1|0,o()[f+28>>2>>>0]=_,o()[f>>2>>>0]=y.getSeconds(),o()[f+4>>2>>>0]=y.getMinutes(),o()[f+8>>2>>>0]=y.getHours(),o()[f+12>>2>>>0]=y.getDate(),o()[f+16>>2>>>0]=y.getMonth(),o()[f+20>>2>>>0]=y.getYear(),f=y.getTime()/1e3,ae((yr=f,1<=+Math.abs(yr)?0<yr?+Math.floor(yr/4294967296)>>>0:~~+Math.ceil((yr-+(~~yr>>>0))/4294967296)>>>0:0)),f>>>0},s:Pn,t:mo,z:function(f,y,_){function E(me){return(me=me.toTimeString().match(/\(([A-Za-z ]+)\)$/))?me[1]:"GMT"}f>>>=0,y>>>=0,_>>>=0;var M=new Date().getFullYear(),U=new Date(M,0,1),K=new Date(M,6,1);M=U.getTimezoneOffset();var we=K.getTimezoneOffset(),ge=Math.max(M,we);i()[f>>2>>>0]=60*ge,o()[y>>2>>>0]=+(M!=we),f=E(U),y=E(K),f=ci(f),y=ci(y),we<M?(i()[_>>2>>>0]=f,i()[_+4>>2>>>0]=y):(i()[_>>2>>>0]=y,i()[_+4>>2>>>0]=f)},d:()=>{sr("")},c:function(f,y,_){return f>>>=0,y=bo(y>>>0,_>>>0),en[f].apply(null,y)},k:function(f,y,_){return f>>>=0,y=bo(y>>>0,_>>>0),en[f].apply(null,y)},m:function(){},j:function(){return Date.now()},W:()=>{throw yt+=1,"unwind"},B:function(){return 4294901760},f:()=>performance.timeOrigin+performance.now(),g:function(){return $?(Hh(),wr(Wh)).cpus().length:navigator.hardwareConcurrency},L:function(f,y,_,E){for(de.Pb=y>>>0,kn.length=_,y=E>>>0>>3,E=0;E<_;E++)kn[E]=a()[y+E>>>0];return(0>f?en[-f-1]:m[f]).apply(null,kn)},y:function(f){f>>>=0;var y=t().length;if(f<=y||4294901760<f)return!1;for(var _=1;4>=_;_*=2){var E=y*(1+.2/_);E=Math.min(E,f+100663296);var M=Math;E=Math.max(f,E);e:{M=M.min.call(M,4294901760,E+(65536-E%65536)%65536)-Re.buffer.byteLength+65535>>>16;try{Re.grow(M),$e();var U=1;break e}catch{}U=void 0}if(U)return!0}return!1},P:vo,Q:Bn,H:$t,h:wo,o:Rn,x:fi,n:xo,a:Re||u.wasmMemory,J:gi,e:function(f,y,_,E){return gi(f>>>0,y>>>0,_>>>0,E>>>0)}};(function(){function f(_,E){return _=_.exports,_=bi(_),q=_=Qy(_),de.mb.push(q.Da),jt.unshift(q.Y),et=E,no(),_}var y={a:w};if(Jo(),u.instantiateWasm)try{return u.instantiateWasm(y,f)}catch(_){Be("Module.instantiateWasm callback failed with error: "+_),d(_)}return Kt(y,function(_){f(_.instance,_.module)}).catch(d),{}})(),u._OrtInit=(f,y)=>(u._OrtInit=q.Z)(f,y),u._OrtGetLastError=(f,y)=>(u._OrtGetLastError=q._)(f,y),u._OrtCreateSessionOptions=(f,y,_,E,M,U,K,we,ge,me)=>(u._OrtCreateSessionOptions=q.$)(f,y,_,E,M,U,K,we,ge,me),u._OrtAppendExecutionProvider=(f,y)=>(u._OrtAppendExecutionProvider=q.aa)(f,y),u._OrtAddFreeDimensionOverride=(f,y,_)=>(u._OrtAddFreeDimensionOverride=q.ba)(f,y,_),u._OrtAddSessionConfigEntry=(f,y,_)=>(u._OrtAddSessionConfigEntry=q.ca)(f,y,_),u._OrtReleaseSessionOptions=f=>(u._OrtReleaseSessionOptions=q.da)(f),u._OrtCreateSession=(f,y,_)=>(u._OrtCreateSession=q.ea)(f,y,_),u._OrtReleaseSession=f=>(u._OrtReleaseSession=q.fa)(f),u._OrtGetInputOutputCount=(f,y,_)=>(u._OrtGetInputOutputCount=q.ga)(f,y,_),u._OrtGetInputName=(f,y)=>(u._OrtGetInputName=q.ha)(f,y),u._OrtGetOutputName=(f,y)=>(u._OrtGetOutputName=q.ia)(f,y),u._OrtFree=f=>(u._OrtFree=q.ja)(f),u._OrtCreateTensor=(f,y,_,E,M,U)=>(u._OrtCreateTensor=q.ka)(f,y,_,E,M,U),u._OrtGetTensorData=(f,y,_,E,M)=>(u._OrtGetTensorData=q.la)(f,y,_,E,M),u._OrtReleaseTensor=f=>(u._OrtReleaseTensor=q.ma)(f),u._OrtCreateRunOptions=(f,y,_,E)=>(u._OrtCreateRunOptions=q.na)(f,y,_,E),u._OrtAddRunConfigEntry=(f,y,_)=>(u._OrtAddRunConfigEntry=q.oa)(f,y,_),u._OrtReleaseRunOptions=f=>(u._OrtReleaseRunOptions=q.pa)(f),u._OrtCreateBinding=f=>(u._OrtCreateBinding=q.qa)(f),u._OrtBindInput=(f,y,_)=>(u._OrtBindInput=q.ra)(f,y,_),u._OrtBindOutput=(f,y,_,E)=>(u._OrtBindOutput=q.sa)(f,y,_,E),u._OrtClearBoundOutputs=f=>(u._OrtClearBoundOutputs=q.ta)(f),u._OrtReleaseBinding=f=>(u._OrtReleaseBinding=q.ua)(f),u._OrtRunWithBinding=(f,y,_,E,M)=>(u._OrtRunWithBinding=q.va)(f,y,_,E,M),u._OrtRun=(f,y,_,E,M,U,K,we)=>(u._OrtRun=q.wa)(f,y,_,E,M,U,K,we),u._OrtEndProfiling=f=>(u._OrtEndProfiling=q.xa)(f),u._JsepOutput=(f,y,_)=>(u._JsepOutput=q.ya)(f,y,_),u._JsepGetNodeName=f=>(u._JsepGetNodeName=q.za)(f);var S=u._pthread_self=()=>(S=u._pthread_self=q.Aa)(),P=u._malloc=f=>(P=u._malloc=q.Ba)(f),V=u._free=f=>(V=u._free=q.Ca)(f);u.__emscripten_tls_init=()=>(u.__emscripten_tls_init=q.Da)();var j=u.__emscripten_thread_init=(f,y,_,E,M,U)=>(j=u.__emscripten_thread_init=q.Fa)(f,y,_,E,M,U);u.__emscripten_thread_crashed=()=>(u.__emscripten_thread_crashed=q.Ga)();var Z=(f,y,_,E)=>(Z=q.Ha)(f,y,_,E),oe=f=>(oe=q.Ia)(f),te=u.__emscripten_thread_exit=f=>(te=u.__emscripten_thread_exit=q.Ja)(f),ye=u.__emscripten_check_mailbox=()=>(ye=u.__emscripten_check_mailbox=q.Ka)(),ae=f=>(ae=q.La)(f),Se=(f,y)=>(Se=q.Ma)(f,y),z=()=>(z=q.Na)(),ue=f=>(ue=q.Oa)(f),Ee=f=>(Ee=q.Pa)(f),St=u.dynCall_ii=(f,y)=>(St=u.dynCall_ii=q.Ra)(f,y),vr=f=>(vr=q.Sa)(f),Qu=()=>(Qu=q.Ta)(),el=f=>(el=q.Ua)(f),tl=()=>(tl=q.Va)();u.___start_em_js=923047,u.___stop_em_js=923208;function Qy(f){f=Object.assign({},f);var y=E=>()=>E()>>>0,_=E=>M=>E(M)>>>0;return f.__errno_location=y(f.__errno_location),f.pthread_self=y(f.pthread_self),f.malloc=_(f.malloc),f.stackSave=y(f.stackSave),f.stackAlloc=_(f.stackAlloc),f}u.keepRuntimeAlive=pt,u.wasmMemory=Re,u.stackAlloc=Ee,u.stackSave=z,u.stackRestore=ue,u.UTF8ToString=tt,u.stringToUTF8=lo,u.lengthBytesUTF8=uo,u.ExitStatus=In,u.PThread=de;var _i;br=function f(){_i||rl(),_i||(br=f)};function rl(){function f(){if(!_i&&(_i=!0,u.calledRun=!0,!Ce)&&(T||tn(jt),l(u),u.onRuntimeInitialized&&u.onRuntimeInitialized(),!T)){if(u.postRun)for(typeof u.postRun=="function"&&(u.postRun=[u.postRun]);u.postRun.length;){var y=u.postRun.shift();Fr.unshift(y)}tn(Fr)}}if(!(0<Rt))if(T)l(u),T||tn(jt),startWorker(u);else{if(u.preRun)for(typeof u.preRun=="function"&&(u.preRun=[u.preRun]);u.preRun.length;)Tt.unshift(u.preRun.shift());tn(Tt),0<Rt||(u.setStatus?(u.setStatus("Running..."),setTimeout(function(){setTimeout(function(){u.setStatus("")},1),f()},1)):f())}}if(u.preInit)for(typeof u.preInit=="function"&&(u.preInit=[u.preInit]);0<u.preInit.length;)u.preInit.pop()();return rl(),e.ready}})();typeof jh=="object"&&typeof bu=="object"?bu.exports=qh:typeof define=="function"&&define.amd&&define([],()=>qh)});var Yh=it((hP,Rx)=>{Rx.exports='"use strict";var Module={},ENVIRONMENT_IS_NODE=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string";if(ENVIRONMENT_IS_NODE){var nodeWorkerThreads=require("worker_threads"),parentPort=nodeWorkerThreads.parentPort;parentPort.on("message",e=>onmessage({data:e}));var fs=require("fs");Object.assign(global,{self:global,require,Module,location:{href:__filename},Worker:nodeWorkerThreads.Worker,importScripts:e=>(0,eval)(fs.readFileSync(e,"utf8")+"//# sourceURL="+e),postMessage:e=>parentPort.postMessage(e),performance:global.performance||{now:Date.now}})}var initializedJS=!1;function threadPrintErr(){var e=Array.prototype.slice.call(arguments).join(" ");if(ENVIRONMENT_IS_NODE){fs.writeSync(2,e+`\n`);return}console.error(e)}function threadAlert(){var e=Array.prototype.slice.call(arguments).join(" ");postMessage({cmd:"alert",text:e,threadId:Module._pthread_self()})}var err=threadPrintErr;self.alert=threadAlert,Module.instantiateWasm=(e,t)=>{var a=Module.wasmModule;Module.wasmModule=null;var r=new WebAssembly.Instance(a,e);return t(r)},self.onunhandledrejection=e=>{throw e.reason??e};function handleMessage(e){try{if(e.data.cmd==="load"){let a=[];self.onmessage=r=>a.push(r),self.startWorker=r=>{Module=r,postMessage({cmd:"loaded"});for(let s of a)handleMessage(s);self.onmessage=handleMessage},Module.wasmModule=e.data.wasmModule;for(const r of e.data.handlers)Module[r]=(...s)=>{postMessage({cmd:"callHandler",handler:r,args:s})};if(Module.wasmMemory=e.data.wasmMemory,Module.buffer=Module.wasmMemory.buffer,Module.ENVIRONMENT_IS_PTHREAD=!0,typeof e.data.urlOrBlob=="string")importScripts(e.data.urlOrBlob);else{var t=URL.createObjectURL(e.data.urlOrBlob);importScripts(t),URL.revokeObjectURL(t)}ortWasmThreaded(Module)}else if(e.data.cmd==="run"){Module.__emscripten_thread_init(e.data.pthread_ptr,0,0,1),Module.__emscripten_thread_mailbox_await(e.data.pthread_ptr),Module.establishStackSpace(),Module.PThread.receiveObjectTransfer(e.data),Module.PThread.threadInitTLS(),initializedJS||(initializedJS=!0);try{Module.invokeEntryPoint(e.data.start_routine,e.data.arg)}catch(a){if(a!="unwind")throw a}}else e.data.cmd==="cancel"?Module._pthread_self()&&Module.__emscripten_thread_exit(-1):e.data.target==="setimmediate"||(e.data.cmd==="checkMailbox"?initializedJS&&Module.checkMailbox():e.data.cmd&&(err("worker.js received unknown command "+e.data.cmd),err(e.data)))}catch(a){throw Module.__emscripten_thread_crashed&&Module.__emscripten_thread_crashed(),a}}self.onmessage=handleMessage;\n'});var Zh,zx,yu,vu,Ta,Xh,Mx,Lx,Nx,Jh,ct,Jn=B(()=>{"use strict";Zh=Fh();zx=Kh(),vu=!1,Ta=!1,Xh=!1,Mx=r=>{if(r===1)return!1;if(typeof SharedArrayBuffer>"u")return typeof self<"u"&&!self.crossOriginIsolated&&console.warn("env.wasm.numThreads is set to "+r+", but this will not work unless you enable crossOriginIsolated mode. See https://web.dev/cross-origin-isolation-guide/ for more info."),!1;typeof process<"u"&&process.versions&&process.versions.node&&console.warn("env.wasm.numThreads is set to "+r+", however, currently onnxruntime-web does not support multi-threads in Node.js. Please consider using onnxruntime-node for performance critical scenarios.");try{return typeof MessageChannel<"u"&&new MessageChannel().port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]))}catch{return!1}},Lx=()=>{try{return WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,30,1,28,0,65,0,253,15,253,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,253,186,1,26,11]))}catch{return!1}},Nx=(r,e)=>r?e?"ort-wasm-simd-threaded.wasm":"ort-wasm-simd.wasm":e?"ort-wasm-threaded.wasm":"ort-wasm.wasm",Jh=async r=>{if(vu)return Promise.resolve();if(Ta)throw new Error("multiple calls to 'initializeWebAssembly()' detected.");if(Xh)throw new Error("previous call to 'initializeWebAssembly()' failed.");Ta=!0;let e=r.initTimeout,n=r.numThreads,t=r.simd,o=Mx(n),i=t&&Lx(),s=r.wasmPaths,a=typeof s=="string"?s:void 0,u=Nx(i,o),l=typeof s=="object"?s[u]:void 0,d=!1,p=[];if(e>0&&p.push(new Promise(h=>{setTimeout(()=>{d=!0,h()},e)})),p.push(new Promise((h,g)=>{let b=o?zx:Zh,v={locateFile:($,T)=>{if(o&&$.endsWith(".worker.js")&&typeof Blob<"u")return URL.createObjectURL(new Blob([Yh()],{type:"text/javascript"}));if($.endsWith(".wasm")){if(l)return l;let x=a??T;return u==="ort-wasm-simd.wasm"?x+"ort-wasm-simd.jsep.wasm":u==="ort-wasm-simd-threaded.wasm"?x+"ort-wasm-simd-threaded.jsep.wasm":x+u}return T+$}};if(o)if(v.numThreads=n,typeof Blob>"u")v.mainScriptUrlOrBlob=(void 0)(__dirname,"ort-wasm-threaded.js");else{let $=`var ortWasmThreaded=${b.toString()};`;v.mainScriptUrlOrBlob=new Blob([$],{type:"text/javascript"})}b(v).then($=>{Ta=!1,vu=!0,yu=$,h()},$=>{Ta=!1,Xh=!0,g($)})})),await Promise.race(p),d)throw new Error(`WebAssembly backend initializing failed due to timeout: ${e}ms`)},ct=()=>{if(vu&&yu)return yu;throw new Error("WebAssembly is not initialized yet.")}});var dt,Uo,rt,$a=B(()=>{"use strict";Jn();dt=(r,e)=>{let n=ct(),t=n.lengthBytesUTF8(r)+1,o=n._malloc(t);return n.stringToUTF8(r,o,t),e.push(o),o},Uo=(r,e,n,t)=>{if(typeof r=="object"&&r!==null){if(n.has(r))throw new Error("Circular reference in options");n.add(r)}Object.entries(r).forEach(([o,i])=>{let s=e?e+o:o;if(typeof i=="object")Uo(i,s+".",n,t);else if(typeof i=="string"||typeof i=="number")t(s,i.toString());else if(typeof i=="boolean")t(s,i?"1":"0");else throw new Error(`Can't handle extra config type: ${typeof i}`)})},rt=r=>{let e=ct(),n=e.stackSave();try{let t=e.stackAlloc(8);e._OrtGetLastError(t,t+4);let o=e.HEAP32[t/4],i=e.HEAPU32[t/4+1],s=i?e.UTF8ToString(i):"";throw new Error(`${r} ERROR_CODE: ${o}, ERROR_MESSAGE: ${s}`)}finally{e.stackRestore(n)}}});var Qh,em=B(()=>{"use strict";Jn();$a();Qh=r=>{let e=ct(),n=0,t=[],o=r||{};try{if(r?.logSeverityLevel===void 0)o.logSeverityLevel=2;else if(typeof r.logSeverityLevel!="number"||!Number.isInteger(r.logSeverityLevel)||r.logSeverityLevel<0||r.logSeverityLevel>4)throw new Error(`log serverity level is not valid: ${r.logSeverityLevel}`);if(r?.logVerbosityLevel===void 0)o.logVerbosityLevel=0;else if(typeof r.logVerbosityLevel!="number"||!Number.isInteger(r.logVerbosityLevel))throw new Error(`log verbosity level is not valid: ${r.logVerbosityLevel}`);r?.terminate===void 0&&(o.terminate=!1);let i=0;return r?.tag!==void 0&&(i=dt(r.tag,t)),n=e._OrtCreateRunOptions(o.logSeverityLevel,o.logVerbosityLevel,!!o.terminate,i),n===0&&rt("Can't create run options."),r?.extra!==void 0&&Uo(r.extra,"",new WeakSet,(s,a)=>{let u=dt(s,t),l=dt(a,t);e._OrtAddRunConfigEntry(n,u,l)!==0&&rt(`Can't set a run config entry: ${s} - ${a}.`)}),[n,t]}catch(i){throw n!==0&&e._OrtReleaseRunOptions(n),t.forEach(s=>e._free(s)),i}}});var Vx,Fx,Gx,Ux,tm,rm=B(()=>{"use strict";Jn();$a();Vx=r=>{switch(r){case"disabled":return 0;case"basic":return 1;case"extended":return 2;case"all":return 99;default:throw new Error(`unsupported graph optimization level: ${r}`)}},Fx=r=>{switch(r){case"sequential":return 0;case"parallel":return 1;default:throw new Error(`unsupported execution mode: ${r}`)}},Gx=r=>{r.extra||(r.extra={}),r.extra.session||(r.extra.session={});let e=r.extra.session;e.use_ort_model_bytes_directly||(e.use_ort_model_bytes_directly="1"),r.executionProviders&&r.executionProviders.some(n=>(typeof n=="string"?n:n.name)==="webgpu")&&(r.enableMemPattern=!1)},Ux=(r,e,n)=>{for(let t of e){let o=typeof t=="string"?t:t.name;switch(o){case"webnn":if(o="WEBNN",typeof t!="string"){let s=t;if(s?.deviceType){let a=dt("deviceType",n),u=dt(s.deviceType,n);ct()._OrtAddSessionConfigEntry(r,a,u)!==0&&rt(`Can't set a session config entry: 'deviceType' - ${s.deviceType}.`)}if(s?.numThreads){let a=s.numThreads;(typeof a!="number"||!Number.isInteger(a)||a<0)&&(a=0);let u=dt("numThreads",n),l=dt(a.toString(),n);ct()._OrtAddSessionConfigEntry(r,u,l)!==0&&rt(`Can't set a session config entry: 'numThreads' - ${s.numThreads}.`)}if(s?.powerPreference){let a=dt("powerPreference",n),u=dt(s.powerPreference,n);ct()._OrtAddSessionConfigEntry(r,a,u)!==0&&rt(`Can't set a session config entry: 'powerPreference' - ${s.powerPreference}.`)}}break;case"webgpu":if(o="JS",typeof t!="string"){let s=t;if(s?.preferredLayout){if(s.preferredLayout!=="NCHW"&&s.preferredLayout!=="NHWC")throw new Error(`preferredLayout must be either 'NCHW' or 'NHWC': ${s.preferredLayout}`);let a=dt("preferredLayout",n),u=dt(s.preferredLayout,n);ct()._OrtAddSessionConfigEntry(r,a,u)!==0&&rt(`Can't set a session config entry: 'preferredLayout' - ${s.preferredLayout}.`)}}break;case"wasm":case"cpu":continue;default:throw new Error(`not supported execution provider: ${o}`)}let i=dt(o,n);ct()._OrtAppendExecutionProvider(r,i)!==0&&rt(`Can't append execution provider: ${o}.`)}},tm=r=>{let e=ct(),n=0,t=[],o=r||{};Gx(o);try{let i=Vx(o.graphOptimizationLevel??"all"),s=Fx(o.executionMode??"sequential"),a=typeof o.logId=="string"?dt(o.logId,t):0,u=o.logSeverityLevel??2;if(!Number.isInteger(u)||u<0||u>4)throw new Error(`log serverity level is not valid: ${u}`);let l=o.logVerbosityLevel??0;if(!Number.isInteger(l)||l<0||l>4)throw new Error(`log verbosity level is not valid: ${l}`);let d=typeof o.optimizedModelFilePath=="string"?dt(o.optimizedModelFilePath,t):0;if(n=e._OrtCreateSessionOptions(i,!!o.enableCpuMemArena,!!o.enableMemPattern,s,!!o.enableProfiling,0,a,u,l,d),n===0&&rt("Can't create session options."),o.executionProviders&&Ux(n,o.executionProviders,t),o.enableGraphCapture!==void 0){if(typeof o.enableGraphCapture!="boolean")throw new Error(`enableGraphCapture must be a boolean value: ${o.enableGraphCapture}`);let p=dt("enableGraphCapture",t),h=dt(o.enableGraphCapture.toString(),t);e._OrtAddSessionConfigEntry(n,p,h)!==0&&rt(`Can't set a session config entry: 'enableGraphCapture' - ${o.enableGraphCapture}.`)}if(o.freeDimensionOverrides)for(let[p,h]of Object.entries(o.freeDimensionOverrides)){if(typeof p!="string")throw new Error(`free dimension override name must be a string: ${p}`);if(typeof h!="number"||!Number.isInteger(h)||h<0)throw new Error(`free dimension override value must be a non-negative integer: ${h}`);let g=dt(p,t);e._OrtAddFreeDimensionOverride(n,g,h)!==0&&rt(`Can't set a free dimension override: ${p} - ${h}.`)}return o.extra!==void 0&&Uo(o.extra,"",new WeakSet,(p,h)=>{let g=dt(p,t),b=dt(h,t);e._OrtAddSessionConfigEntry(n,g,b)!==0&&rt(`Can't set a session config entry: ${p} - ${h}.`)}),[n,t]}catch(i){throw n!==0&&e._OrtReleaseSessionOptions(n),t.forEach(s=>e._free(s)),i}}});var wu,Xr,Wo,Sa,Ho,Ia,xu,Ie=B(()=>{"use strict";wu=r=>{switch(r){case"int8":return 3;case"uint8":return 2;case"bool":return 9;case"int16":return 5;case"uint16":return 4;case"int32":return 6;case"uint32":return 12;case"float16":return 10;case"float32":return 1;case"float64":return 11;case"string":return 8;case"int64":return 7;case"uint64":return 13;default:throw new Error(`unsupported data type: ${r}`)}},Xr=r=>{switch(r){case 3:return"int8";case 2:return"uint8";case 9:return"bool";case 5:return"int16";case 4:return"uint16";case 6:return"int32";case 12:return"uint32";case 10:return"float16";case 1:return"float32";case 11:return"float64";case 8:return"string";case 7:return"int64";case 13:return"uint64";default:throw new Error(`unsupported data type: ${r}`)}},Wo=r=>[void 0,4,1,1,2,2,4,8,void 0,1,2,8,4,8,void 0,void 0,void 0][r],Sa=r=>{switch(r){case"float16":return Uint16Array;case"float32":return Float32Array;case"uint8":return Uint8Array;case"int8":return Int8Array;case"uint16":return Uint16Array;case"int16":return Int16Array;case"int32":return Int32Array;case"bool":return Uint8Array;case"float64":return Float64Array;case"uint32":return Uint32Array;case"int64":return BigInt64Array;case"uint64":return BigUint64Array;default:throw new Error(`unsupported type: ${r}`)}},Ho=r=>{switch(r){case"verbose":return 0;case"info":return 1;case"warning":return 2;case"error":return 3;case"fatal":return 4;default:throw new Error(`unsupported logging level: ${r}`)}},Ia=r=>r==="float32"||r==="int32"||r==="int64"||r==="bool"||r==="float16"||r==="uint32",xu=r=>{switch(r){case"none":return 0;case"cpu":return 1;case"cpu-pinned":return 2;case"texture":return 3;case"gpu-buffer":return 4;default:throw new Error(`unsupported data location: ${r}`)}}});var qo,_u=B(()=>{"use strict";qo=async r=>{if(typeof r=="string")if(typeof process<"u"&&process.versions&&process.versions.node)try{return new Uint8Array(await(void 0)(r))}catch(e){if(e.code==="ERR_FS_FILE_TOO_LARGE"){let n=(void 0)(r),t=[];for await(let o of n)t.push(o);return new Uint8Array(Buffer.concat(t))}throw e}else{let e=await fetch(r);if(!e.ok)throw new Error(`failed to load external data file: ${r}`);let n=e.headers.get("Content-Length"),t=n?parseInt(n,10):0;if(t<1073741824)return new Uint8Array(await e.arrayBuffer());{if(!e.body)throw new Error(`failed to load external data file: ${r}, no response body.`);let o=e.body.getReader(),i;try{i=new ArrayBuffer(t)}catch(a){if(a instanceof RangeError){let u=Math.ceil(t/65536);i=new WebAssembly.Memory({initial:u,maximum:u}).buffer}else throw a}let s=0;for(;;){let{done:a,value:u}=await o.read();if(a)break;let l=u.byteLength;new Uint8Array(i,s,l).set(u),s+=l}return new Uint8Array(i,0,t)}}else return r instanceof Blob?new Uint8Array(await r.arrayBuffer()):r instanceof Uint8Array?r:new Uint8Array(r)}});var Wx,Hx,nm,om,im,qx,nt,Zr=B(()=>{"use strict";Ie();Wx=["V","I","W","E","F"],Hx=(r,e)=>{console.log(`[${Wx[r]},${new Date().toISOString()}]${e}`)},im=(r,e)=>{nm=r,om=e},qx=(r,e)=>{let n=Ho(r),t=Ho(nm);n>=t&&Hx(n,typeof e=="function"?e():e)},nt=(...r)=>{om&&qx(...r)}});var am,sm=B(()=>{"use strict";Ie();am=(r,e)=>new(Sa(e))(r)});var Aa=B(()=>{"use strict"});var Oa,jx,um,$u,Tu,dm,cm=B(()=>{"use strict";Zr();Aa();Oa=r=>Math.ceil(r/256)*256,jx=1,um=()=>jx++,$u=async(r,e,n,t)=>{let o=Oa(n),i=r.device.createBuffer({size:o,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ});try{let s=r.getCommandEncoder();r.endComputePass(),s.copyBufferToBuffer(e,0,i,0,o),r.flush(),await i.mapAsync(GPUMapMode.READ);let a=i.getMappedRange();if(t){let u=t();return u.set(new Uint8Array(a,0,n)),u}else return new Uint8Array(a.slice(0,n))}finally{i.destroy()}},Tu=class{constructor(e){this.backend=e;this.storageCache=new Map,this.freeBuffers=new Map,this.freeUniformBuffers=new Map,this.buffersForUploadingPending=[],this.buffersPending=[],this.externalBuffers=new Map,this.capturedPendingBuffers=new Map}upload(e,n){let t=n.buffer,o=n.byteOffset,i=n.byteLength,s=Oa(i),a=this.storageCache.get(e);if(!a)return;if(a.originalSize!==i)throw new Error(`inconsistent data size. gpu data size=${a.originalSize}, data size=${i}`);let u=this.backend.device.createBuffer({mappedAtCreation:!0,size:s,usage:GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC}),l=u.getMappedRange();new Uint8Array(l).set(new Uint8Array(t,o,i)),u.unmap();let d=this.backend.getCommandEncoder();this.backend.endComputePass(),d.copyBufferToBuffer(u,0,a.gpuData.buffer,0,s),nt("verbose",()=>`[WebGPU] GpuDataManager.upload(id=${e})`),this.buffersForUploadingPending.push(u)}memcpy(e,n){let t=this.storageCache.get(e);if(!t)throw new Error("source gpu data for memcpy does not exist");let o=this.storageCache.get(n);if(!o)throw new Error("destination gpu data for memcpy does not exist");if(t.originalSize!==o.originalSize)throw new Error("inconsistent source and destination gpu data size");let i=Oa(t.originalSize),s=this.backend.getCommandEncoder();this.backend.endComputePass(),s.copyBufferToBuffer(t.gpuData.buffer,0,o.gpuData.buffer,0,i)}registerExternalBuffer(e,n,t){let o;if(t){if(o=this.externalBuffers.get(t),o===void 0)throw new Error("previous buffer is not registered");if(e===t)return nt("verbose",()=>`[WebGPU] GpuDataManager.registerExternalBuffer(size=${n}) => id=${o}, buffer is the same, skip.`),o;if(this.backend.capturedCommandList.has(this.backend.currentSessionId))throw new Error(`Registering a different external buffer under graph capture mode is not supported yet.
             Please use the previous external buffer!`);this.externalBuffers.delete(t)}else o=um();return this.storageCache.set(o,{gpuData:{id:o,type:0,buffer:e},originalSize:n}),this.externalBuffers.set(e,o),nt("verbose",()=>`[WebGPU] GpuDataManager.registerExternalBuffer(size=${n}) => id=${o}, registered.`),o}unregisterExternalBuffer(e){let n=this.externalBuffers.get(e);n!==void 0&&(this.storageCache.delete(n),this.externalBuffers.delete(e),nt("verbose",()=>`[WebGPU] GpuDataManager.unregisterExternalBuffer() => id=${n}`))}create(e,n=GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST){let t=Oa(e),o,i=(n&GPUBufferUsage.STORAGE)===GPUBufferUsage.STORAGE,s=(n&GPUBufferUsage.UNIFORM)===GPUBufferUsage.UNIFORM;if(i||s){let u=i?this.freeBuffers:this.freeUniformBuffers,l=u.get(t);l||(l=[],u.set(t,l)),l.length>0?o=l.pop():o=this.backend.device.createBuffer({size:t,usage:n})}else o=this.backend.device.createBuffer({size:t,usage:n});let a={id:um(),type:0,buffer:o};return this.storageCache.set(a.id,{gpuData:a,originalSize:e}),nt("verbose",()=>`[WebGPU] GpuDataManager.create(size=${e}) => id=${a.id}`),a}get(e){return this.storageCache.get(e)?.gpuData}release(e){let n=this.storageCache.get(e);if(!n)throw new Error("releasing data does not exist");return nt("verbose",()=>`[WebGPU] GpuDataManager.release(id=${e}), gpuDataId=${n.gpuData.id}`),this.storageCache.delete(e),this.buffersPending.push(n.gpuData.buffer),n.originalSize}async download(e,n){let t=this.storageCache.get(e);t&&await $u(this.backend,t.gpuData.buffer,t.originalSize,n)}refreshPendingBuffers(){for(let e of this.buffersForUploadingPending)e.destroy();if(this.buffersForUploadingPending=[],this.buffersPending.length!==0)if(this.backend.sessionStatus==="default"){for(let e of this.buffersPending)(e.usage&GPUBufferUsage.STORAGE)===GPUBufferUsage.STORAGE?this.freeBuffers.get(e.size).push(e):(e.usage&GPUBufferUsage.UNIFORM)===GPUBufferUsage.UNIFORM?this.freeUniformBuffers.get(e.size).push(e):e.destroy();this.buffersPending=[]}else{let e=this.capturedPendingBuffers.get(this.backend.currentSessionId);e||(e=[],this.capturedPendingBuffers.set(this.backend.currentSessionId,e));for(let n of this.buffersPending)e.push(n);this.buffersPending=[]}}dispose(){this.freeBuffers.forEach(e=>{e.forEach(n=>{n.destroy()})}),this.freeUniformBuffers.forEach(e=>{e.forEach(n=>{n.destroy()})}),this.storageCache.forEach(e=>{e.gpuData.buffer.destroy()}),this.capturedPendingBuffers.forEach(e=>{e.forEach(n=>{n.destroy()})}),this.storageCache=new Map,this.freeBuffers=new Map,this.freeUniformBuffers=new Map,this.capturedPendingBuffers=new Map}onReleaseSession(e){let n=this.capturedPendingBuffers.get(e);n&&(n.forEach(t=>{t.destroy()}),this.capturedPendingBuffers.delete(e))}},dm=(...r)=>new Tu(...r)});var Su,ze,Ct=B(()=>{"use strict";Su=class{constructor(e){Object.assign(this,e)}get cacheKey(){return this.key||(this.key=Object.getOwnPropertyNames(this).sort().map(e=>`${this[e]}`).join(";")),this.key}},ze=r=>new Su(r)});var Iu,Ar,F,Tn,Ea,Ca,Pa,Me=B(()=>{"use strict";Iu=class{static calcMatMulShape(e,n){return e[1]!==n[0]?void 0:[e[0],n[1]]}},Ar=class{static calcShape(e,n,t=!1){let o=e.length,i=n.length;if(o===0)return n;if(i===0)return e;let s=Math.max(e.length,n.length),a=new Array(s);if(t){if(o<2||i<2)return;let u=Iu.calcMatMulShape([e[o-2],e[o-1]],[n[i-2],n[i-1]]);if(u===void 0)return;[a[s-2],a[s-1]]=u}for(let u=t?3:1;u<=s;u++){let l=o-u<0?1:e[o-u],d=i-u<0?1:n[i-u];if(l!==d&&l>1&&d>1)return;a[s-u]=Math.max(l,d)}return a}static isValidBroadcast(e,n){let t=e.length,o=n.length;if(t>o)return!1;for(let i=1;i<=t;i++)if(e[t-i]!==1&&e[t-i]!==n[o-i])return!1;return!0}},F=class r{static size(e){return r.getSizeFromDimensionRange(e,0,e.length)}static convertShape(e,n=4){let t=e.length;if(t===0)return[];let o=new Array(t),i=t-1;for(;i>=0;){if(e[i]%n===0){o[i]=e[i]/n;break}if(n%e[i]!==0)throw new Error("cannot convert shape");o[i]=1,n/=e[i],i--}for(i--;i>=0;i--)o[i]=e[i];return o}static sizeFromDimension(e,n){if(n<0||n>e.length)throw new Error(`invalid dimension of ${n} for sizeFromDimension as Tensor has ${e.length} dimensions.`);return r.getSizeFromDimensionRange(e,n,e.length)}static sizeToDimension(e,n){if(n<0||n>e.length)throw new Error(`invalid dimension of ${n} for sizeToDimension as Tensor has ${e.length} dimensions.`);return r.getSizeFromDimensionRange(e,0,n)}static getSizeFromDimensionRange(e,n,t){let o=1;for(let i=n;i<t;i++){if(e[i]<0)throw new Error("cannot get valid size from specified dimension range. Most likely the range contains negative values in them.");o*=e[i]}return o}static computeStrides(e){let n=e.length;if(n===0)return[];if(n===1)return[1];let t=new Array(n);t[n-1]=1,t[n-2]=e[n-1];for(let o=n-3;o>=0;--o)t[o]=t[o+1]*e[o+1];return t}static normalizeAxis(e,n){if(e<-n&&e>=n)throw new Error("unsupported axis for this operation.");return e<0?e+n:e}static normalizeAxes(e,n){return e.map(t=>this.normalizeAxis(t,n??e.length))}static sortBasedOnPerm(e,n){return n?n.map(t=>e[t]):e.slice().reverse()}static padShape(e,n){let t=e.length;return e.map((o,i)=>o+n[i]+n[i+t])}static areEqual(e,n){return e.length!==n.length?!1:e.every((t,o)=>t===n[o])}},Tn=class r{static adjustPoolAttributes(e,n,t,o,i,s){if(!e&&t.length!==n.length-2)throw new Error("length of specified kernel shapes should be 2 less than length of input dimensions");if(e)for(let a=0;a<n.length-2;a++)a>=t.length?t.push(n[a+2]):t[a]=n[a+2];for(let a=0;a<t.length;a++)if(a<o.length){if(o[a]<0)throw new Error("strides should be greater than or equal to 1")}else o.push(1);for(let a=0;a<t.length;a++)if(a<i.length){if(i[a]<0)throw new Error("dilations should be greater than or equal to 1")}else i.push(1);for(let a=0;a<t.length*2;a++)if(a<s.length){if(s[a]<0)throw new Error("pad should be greater than or equal to 1")}else s.push(0);for(let a=0;a<t.length;a++){if(t[a]<=0)throw new Error("kernel shapes need to be greater than 0");if(s[a]>=t[a]||s[a+t.length]>=t[a])throw new Error("pads should be smaller than kernel")}}static adjustPadsBasedOnAutoPad(e,n,t,o,i,s,a){if(a){if(i.length!==2*(e.length-2))throw new Error("length of pads should be twice the length of data dimensions");if(n.length!==e.length-2)throw new Error("length of strides should be the length of data dimensions");if(o.length!==e.length-2)throw new Error("length of kernel shapes should be the length of data dimensions");for(let u=0;u<e.length-2;u++)r.adjustPadAndReturnShape(e[u+(s?1:2)],n[u],t[u],o[u],i,u,u+e.length-2,a)}}static computePoolOutputShape(e,n,t,o,i,s,a){if(n.length<=0)throw new Error("input shape must be of size greater than 0");let u=[n[0],n[1]];return r.computeShapeHelper(e,n,u,t,o,i,s,a),u}static computeConvOutputShape(e,n,t,o,i,s,a){if(e.length<=0||n.length<=0)throw new Error("invalid input tensor dims or invalid filter tensor dims");let u=[e[0],n[0]];return r.computeShapeHelper(!1,e,u,t,o,i,s,a),u}static computeShapeHelper(e,n,t,o,i,s,a,u){if(e)for(let l=0;l<n.length-2;l++)t.push(1);else for(let l=0;l<n.length-2;l++)t.push(r.adjustPadAndReturnShape(n[l+2],o[l],i[l],s[l],a,l,l+n.length-2,u))}static adjustPadAndReturnShape(e,n,t,o,i,s,a,u){let l=t*(o-1)+1;if(u&&u!=="NOTSET")switch(u){case"VALID":return i[s]=0,i[a]=0,Math.floor((e-l)/n+1);case"SAME_LOWER":case"SAME_UPPER":if(t!==1)throw new Error("Dilation not supported for SAME_UPPER or SAME_LOWER");{let p=((e+n-1)/n-1)*n+o-e;return i[s]=Math.floor(u==="SAME_LOWER"?(p+1)/2:p/2),i[a]=p-i[s],Math.floor((e+p-o)/n+1)}default:throw new Error("Unsupported AutoPad type")}else return Math.floor((e+i[s]+i[a]-l)/n+1)}},Ea=class{static getShapeOfGemmResult(e,n,t,o,i){if(e.length!==2||t.length!==2)throw new Error("shape need to be of size 2");let s,a,u;n?(s=e[1],a=e[0]):(s=e[0],a=e[1]);let l=-1;if(o?(u=t[0],l=1):(u=t[1],l=0),t[l]!==a)throw new Error("dimension mismatch");if(s<=0||u<=0||a<=0)throw new Error("invalid shape specified");if(i&&!Ar.isValidBroadcast(i,[s,u]))throw new Error("gemm: invalid bias shape for broadcast");return[s,u,a]}},Ca=-34028234663852886e22,Pa=34028234663852886e22});var ka,Ou,ot,Ht,ne,xt,Bt,mr,qt,xe,Eu,G,Q,Da,Au,fm,Qn,De=B(()=>{"use strict";Ie();Me();ka=64,Ou=(r,e)=>{if(e===3)throw new Error("vec3 has same alignment as vec4, use vec4 instead");switch(r){case 10:return e>1?`vec${e}<f16>`:"f16";case 1:return e>1?`vec${e}<f32>`:"f32";case 6:return e>1?`vec${e}<i32>`:"i32";case 12:return e>1?`vec${e}<u32>`:"u32";case 7:if(e>1)throw new Error("currently not supported vecX of uint64 yet");return["vec2<u32>","i32"];case 13:if(e>1)throw new Error("currently not supported vecX of uint64 yet");return["vec2<u32>","u32"];case 9:if(e!==4)throw new Error("bool must be vec4");return["u32","vec4<bool>"];default:throw new Error(`Unknown data type: ${r}`)}},ot=(r,e=1)=>{let n=Ou(r,e);return typeof n=="string"?n:n[0]},Ht=(r,e=1)=>{let n=Ou(r,e);return typeof n=="string"?n:n[1]},ne=(...r)=>{let e=[];return r.forEach(n=>{n.length!==0&&e.push({type:12,data:n},{type:12,data:F.computeStrides(n)})}),e},xt=r=>r%4===0?4:r%2===0?2:1,Bt=(r="f32",e,n="0")=>!e||e===1?`${r}(${n})`:`vec${e}<${r}>(${n})`,mr=(r,e,n)=>r==="f32"?n:e===1?`f32(${n})`:`vec${e}f(${n})`,qt=(r,e)=>e===4?`(${r}.x + ${r}.y + ${r}.z + ${r}.w)`:e===2?`(${r}.x + ${r}.y)`:e===3?`(${r}.x + ${r}.y + ${r}.z)`:r,xe=(r,e,n,t)=>r.startsWith("uniforms.")&&n>4?typeof e=="string"?t==="f16"?`${r}[(${e}) / 8][(${e}) % 8 / 4][(${e}) % 8 % 4]`:`${r}[(${e}) / 4][(${e}) % 4]`:t==="f16"?`${r}[${Math.floor(e/8)}][${Math.floor(e%8/4)}][${e%8%4}]`:`${r}[${Math.floor(e/4)}][${e%4}]`:n>1?`${r}[${e}]`:r,Eu=(r,e,n,t,o)=>{let i=typeof n=="number",s=i?n:n.length,a=[...new Array(s).keys()],u=s<2?"u32":s<=4?`vec${s}<u32>`:`array<u32, ${s}>`,l=Ou(e,o),d=typeof l=="string"?l:l[1],p=typeof l=="string"?l:l[0],h={indices:u,value:d,storage:p,tensor:e},g=Y=>typeof Y=="string"?Y:`${Y}u`,b={offsetToIndices:!1,indicesToOffset:!1,broadcastedIndicesToOffset:!1,set:!1,setByIndices:!1,get:!1,getByIndices:!1},v=i?"uniforms.":"",$=`${v}${r}_shape`,T=`${v}${r}_strides`,x="";for(let Y=0;Y<s-1;Y++)x+=`
    let dim${Y} = current / ${xe(T,Y,s)};
    let rest${Y} = current % ${xe(T,Y,s)};
    indices[${Y}] = dim${Y};
    current = rest${Y};
    `;x+=`indices[${s-1}] = current;`;let A=s<2?"":`
  fn o2i_${r}(offset: u32) -> ${h.indices} {
    var indices: ${h.indices};
    var current = offset;
    ${x}
    return indices;
  }`,O=Y=>(b.offsetToIndices=!0,s<2?Y:`o2i_${r}(${Y})`),k=[];if(s>=2)for(let Y=s-1;Y>=0;Y--)k.push(`${xe(T,Y,s)} * (indices[${Y}])`);let L=s<2?"":`
  fn i2o_${r}(indices: ${h.indices}) -> u32 {
    return ${k.join("+")};
  }`,W=Y=>(b.indicesToOffset=!0,s<2?Y:`i2o_${r}(${Y})`),J=(...Y)=>s===0?"0u":`${h.indices}(${Y.map(g).join(",")})`,se=(Y,pe)=>s<2?`${Y}`:`${xe(Y,pe,s)}`,R=(Y,pe,$e)=>s<2?`${Y}=${$e};`:`${xe(Y,pe,s)}=${$e};`,H={},Be=(Y,pe)=>{b.broadcastedIndicesToOffset=!0;let $e=`${pe.name}broadcastedIndicesTo${r}Offset`;if($e in H)return`${$e}(${Y})`;let Pt=[];for(let Tt=s-1;Tt>=0;Tt--){let jt=pe.indicesGet("outputIndices",Tt+pe.rank-s);Pt.push(`${se(T,Tt)} * (${jt} % ${se($,Tt)})`)}return H[$e]=`fn ${$e}(outputIndices: ${pe.type.indices}) -> u32 {
             return ${Pt.length>0?Pt.join("+"):"0u"};
           }`,`${$e}(${Y})`},Je=(Y,pe)=>(()=>{if(h.storage===h.value)return`${r}[${Y}]=${pe};`;if(h.storage==="vec2<u32>"&&h.value==="i32")return`${r}[${Y}]=vec2<u32>(u32(${pe}), select(0u, 0xFFFFFFFFu, ${pe} < 0));`;if(h.storage==="vec2<u32>"&&h.value==="u32")return`${r}[${Y}]=vec2<u32>(u32(${pe}), 0u);`;if(h.storage==="u32"&&h.value==="vec4<bool>")return`${r}[${Y}]=dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(${pe}));`;throw new Error(`not supported combination of storage type ${h.storage} and value type ${h.value} yet`)})(),Qe=Y=>(()=>{if(h.storage===h.value)return`${r}[${Y}]`;if(h.storage==="vec2<u32>"&&h.value==="i32")return`i32(${r}[${Y}].x)`;if(h.storage==="vec2<u32>"&&h.value==="u32")return`u32(${r}[${Y}].x)`;if(h.storage==="u32"&&h.value==="vec4<bool>")return`vec4<bool>(bool(${r}[${Y}] & 0xFFu), bool(${r}[${Y}] & 0xFF00u), bool(${r}[${Y}] & 0xFF0000u), bool(${r}[${Y}] & 0xFF000000u))`;throw new Error(`not supported combination of storage type ${h.storage} and value type ${h.value} yet`)})(),Re=s<2?"":`
  fn get_${r}ByIndices(indices: ${h.indices}) -> ${d} {
    return ${Qe(`i2o_${r}(indices)`)};
  }`,q=s<2?"":(()=>{let Y=a.map($e=>`d${$e}: u32`).join(", "),pe=a.map($e=>`d${$e}`).join(", ");return`
  fn get_${r}(${Y}) -> ${d} {
    return get_${r}ByIndices(${J(pe)});
  }`})(),et=(...Y)=>{if(Y.length!==s)throw new Error(`indices length must be ${s}`);let pe=Y.map(g).join(",");return s===0?Qe("0u"):s===1?Qe(pe[0]):(b.get=!0,b.getByIndices=!0,b.indicesToOffset=!0,`get_${r}(${pe})`)},Ce=Y=>s<2?Qe(Y):(b.getByIndices=!0,b.indicesToOffset=!0,`get_${r}ByIndices(${Y})`),Ae=s<2?"":`
  fn set_${r}ByIndices(indices: ${h.indices}, value: ${d}) {
    ${Je(`i2o_${r}(indices)`,"value")}
  }`,Te=s<2?"":(()=>{let Y=a.map($e=>`d${$e}: u32`).join(", "),pe=a.map($e=>`d${$e}`).join(", ");return`
  fn set_${r}(${Y}, value: ${d}) {
    set_${r}ByIndices(${J(pe)}, value);
  }`})();return{impl:()=>{let Y=[],pe=!1;return b.offsetToIndices&&(Y.push(A),pe=!0),b.indicesToOffset&&(Y.push(L),pe=!0),b.broadcastedIndicesToOffset&&(Object.values(H).forEach($e=>Y.push($e)),pe=!0),b.set&&(Y.push(Te),pe=!0),b.setByIndices&&(Y.push(Ae),pe=!0),b.get&&(Y.push(q),pe=!0),b.getByIndices&&(Y.push(Re),pe=!0),!i&&pe&&Y.unshift(`const ${$} = ${h.indices}(${n.join(",")});`,`const ${T} = ${h.indices}(${F.computeStrides(n).join(",")});`),Y.join(`
`)},type:h,offsetToIndices:O,indicesToOffset:W,broadcastedIndicesToOffset:Be,indices:J,indicesGet:se,indicesSet:R,set:(...Y)=>{if(Y.length!==s+1)throw new Error(`indices length must be ${s}`);let pe=Y[s];if(typeof pe!="string")throw new Error("value must be string");let $e=Y.slice(0,s).map(g).join(",");return s===0?Je("0u",pe):s===1?Je($e[0],pe):(b.set=!0,b.setByIndices=!0,b.indicesToOffset=!0,`set_${r}(${$e}, ${pe})`)},setByOffset:Je,setByIndices:(Y,pe)=>s<2?Je(Y,pe):(b.setByIndices=!0,b.indicesToOffset=!0,`set_${r}ByIndices(${Y}, ${pe});`),get:et,getByOffset:Qe,getByIndices:Ce,usage:t,name:r,strides:T,shape:$,rank:s}},G=(r,e,n,t=1)=>Eu(r,e,n,"input",t),Q=(r,e,n,t=1)=>Eu(r,e,n,"output",t),Da=(r,e,n,t=1)=>Eu(r,e,n,"internal",t),Au=class{constructor(e){this.normalizedDispatchGroup=e;this.internalVariables=[];this.variables=[];this.uniforms=[];this.variableIndex=0}guardAgainstOutOfBoundsWorkgroupSizes(e){return`if (global_idx >= ${typeof e=="number"?`${e}u`:e}) { return; }`}mainStart(e=ka){let n=typeof e=="number"?e:e[0],t=typeof e=="number"?1:e[1],o=typeof e=="number"?1:e[2],i=this.normalizedDispatchGroup[1]===1&&this.normalizedDispatchGroup[2]===1,s=i?`@builtin(global_invocation_id) global_id : vec3<u32>,
    @builtin(workgroup_id) workgroup_id : vec3<u32>,
    @builtin(local_invocation_id) local_id : vec3<u32>`:`@builtin(local_invocation_id) local_id : vec3<u32>,
    @builtin(local_invocation_index) local_idx : u32,
    @builtin(workgroup_id) workgroup_id : vec3<u32>,
    @builtin(num_workgroups) num_workgroups : vec3<u32>`,a=i?"let global_idx = global_id.x; let local_idx = local_id.x;":`let global_idx = (workgroup_id.z * num_workgroups[0] * num_workgroups[1] +
          workgroup_id.y * num_workgroups[0] + workgroup_id.x) * ${n*t*o}u + local_idx;`;return`@compute @workgroup_size(${n}, ${t}, ${o})
  fn main(${s}) {
    ${a}
  `}appendVariableUniforms(e){e.rank!==0&&(e.shape.startsWith("uniforms.")&&this.uniforms.push({name:e.shape.replace("uniforms.",""),type:"u32",length:e.rank}),e.strides.startsWith("uniforms.")&&this.uniforms.push({name:e.strides.replace("uniforms.",""),type:"u32",length:e.rank}))}declareVariable(e,n){if(e.usage==="internal")throw new Error("cannot use internal variable with declareVariable(). use registerInternalVariables() instead.");this.variables.push(e),this.appendVariableUniforms(e);let t=e.usage==="input"?"read":"read_write",o=e.type.storage;return`@group(0) @binding(${n}) var<storage, ${t}> ${e.name}: array<${o}>;`}declareVariables(...e){return e.map(n=>this.declareVariable(n,this.variableIndex++)).join(`
`)}registerInternalVariable(e){if(e.usage!=="internal")throw new Error("cannot use input or output variable with registerInternalVariable(). use declareVariables() instead.");this.internalVariables.push(e),this.appendVariableUniforms(e)}registerInternalVariables(...e){return e.forEach(n=>this.registerInternalVariable(n)),this}registerUniform(e,n,t=1){return this.uniforms.push({name:e,type:n,length:t}),this}registerUniforms(e){return this.uniforms=this.uniforms.concat(e),this}uniformDeclaration(){if(this.uniforms.length===0)return"";let e=[];for(let{name:n,type:t,length:o}of this.uniforms)if(o&&o>4)t==="f16"?e.push(`@align(16) ${n}:array<mat2x4<${t}>, ${Math.ceil(o/8)}>`):e.push(`${n}:array<vec4<${t}>, ${Math.ceil(o/4)}>`);else{let i=o==null||o===1?t:`vec${o}<${t}>`;e.push(`${n}:${i}`)}return`
      struct Uniforms { ${e.join(", ")} };
      @group(0) @binding(${this.variableIndex}) var<uniform> uniforms: Uniforms;`}get additionalImplementations(){return this.uniformDeclaration()+this.variables.map(e=>e.impl()).join(`
`)+this.internalVariables.map(e=>e.impl()).join(`
`)}},fm=r=>new Au(r),Qn=(r,e)=>{let n=r.length,t=[];for(let o=0;o<n;o++){let i=n-1-o,s=r[i]||1;(e[e.length-1-o]||1)>1&&s===1&&t.unshift(i)}return t}});var Kx,pm,Yx,Xx,gr,hm,mm,eo=B(()=>{"use strict";Ie();Me();Ct();De();Kx=r=>{if(!r||r.length!==1)throw new Error("Transpose requires 1 input.")},pm=(r,e)=>e&&e.length!==r?[...new Array(r).keys()].reverse():e,Yx=(r,e)=>F.sortBasedOnPerm(r,pm(r.length,e)),Xx=(r,e,n,t)=>{let o=[];o.push(`fn perm(i: ${t.type.indices}) -> ${n.type.indices} {
    var a: ${n.type.indices};`);for(let i=0;i<e;++i)o.push(n.indicesSet("a",r[i],`i[${i}]`));return o.push("return a;}"),o.join(`
`)},gr=(r,e)=>{let n=r.dataType,t=r.dims.length,o=pm(t,e),i=Yx(r.dims,o),s=Q("output",n,i.length),a=G("a",n,t),u=l=>`
  ${l.registerUniform("output_size","u32").declareVariables(a,s)}

  ${Xx(o,t,a,s)}

  ${l.mainStart()}
    ${l.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

    let indices = ${s.offsetToIndices("global_idx")};
    let aIndices = perm(indices);

    ${s.setByOffset("global_idx",a.getByIndices("aIndices"))}
  }`;return{name:"Transpose",shaderCache:{hint:`${e}`,inputDependencies:["rank"]},getRunData:l=>{let d=F.size(i);return{outputs:[{dims:i,dataType:l[0].dataType}],dispatchGroup:{x:Math.ceil(d/64)},programUniforms:[{type:12,data:d},...ne(l[0].dims,i)]}},getShaderSource:u}},hm=(r,e)=>{Kx(r.inputs),r.compute(gr(r.inputs[0],e.perm))},mm=r=>ze({perm:r.perm})});var Zx,Jx,Qx,e2,t2,r2,n2,o2,i2,a2,Or,gm,bm,ym,vm,wm,xm,_m,Tm,$m,Sm,Im=B(()=>{"use strict";Ie();Me();De();Ba();eo();Zx={max:"select(bestValue, candidate, candidate > bestValue)",min:"select(bestValue, candidate, candidate < bestValue)",mean:"bestValue + candidate",sum:"bestValue + candidate",prod:"bestValue * candidate",sumSquare:"bestValue + candidate * candidate",logSumExp:"bestValue + exp(candidate)",l1:"bestValue + abs(candidate)",l2:"bestValue + candidate * candidate",logSum:"bestValue + candidate"},Jx={max:"select(bestValue, candidate, candidate > bestValue)",min:"select(bestValue, candidate, candidate < bestValue)",mean:"bestValue + candidate",sum:"bestValue + candidate",prod:"bestValue * candidate",sumSquare:"bestValue + candidate",logSumExp:"bestValue + candidate",l1:"bestValue + candidate",l2:"bestValue + candidate",logSum:"bestValue + candidate"},Qx={max:"_A[offset]",min:"_A[offset]",mean:"0",sum:"0",prod:"1",sumSquare:"0",logSumExp:"0",l1:"0",l2:"0",logSum:"0"},e2={max:"bestValue",min:"bestValue",sum:"bestValue",prod:"bestValue",sumSquare:"bestValue",logSumExp:"log(bestValue)",l1:"bestValue",l2:"sqrt(bestValue)",logSum:"log(bestValue)"},t2=(r,e)=>{let n=[];for(let t=e-r;t<e;++t)n.push(t);return n},r2=(r,e)=>{let n=[],t=r.length;for(let i=0;i<t;i++)e.indexOf(i)===-1&&n.push(r[i]);let o=e.map(i=>r[i]);return[n,o]},n2=(r,e)=>{let n=r.length+e.length,t=[],o=0;for(let i=0;i<n;i++)e.indexOf(i)===-1?t.push(r[o++]):t.push(1);return t},o2=(r,e)=>{for(let n=0;n<r.length;++n)if(r[r.length-n-1]!==e-1-n)return!1;return!0},i2=(r,e)=>{let n=[];if(!o2(r,e)){for(let t=0;t<e;++t)r.indexOf(t)===-1&&n.push(t);r.forEach(t=>n.push(t))}return n},a2=(r,e,n,t,o,i,s)=>{let a=n[0].dims,u=F.size(i),l=F.size(s),d=G("_A",n[0].dataType,a),p=Q("output",o,i),h=32,g=`
          var<workgroup> aBestValues : array<${p.type.storage}, ${h}>;
       `;return{name:r,shaderCache:e,getShaderSource:v=>`
        ${v.registerUniform("reduceSize","u32").declareVariables(d,p)}
        ${g}
        fn DIV_CEIL(a : u32, b : u32) -> u32 {
          return ((a - 1u) / b + 1u);
         }
         ${v.mainStart(h)}

          let outputIndex = global_idx / ${h};
          let offset = outputIndex * uniforms.reduceSize;

          var bestValue = ${p.type.storage}(${Qx[t]});
          let Length = uniforms.reduceSize;
          for (var k = local_idx; k < Length; k = k + ${h}) {
           let candidate = ${p.type.storage}(${d.getByOffset("offset + k")});
           bestValue = ${Zx[t]};
          }
          aBestValues[local_idx] = bestValue;
          workgroupBarrier();

         var reduceSize = min(Length, ${h}u);
         for (var currentSize = reduceSize / 2u; reduceSize > 1u;
             currentSize = reduceSize / 2u) {
           let interval = DIV_CEIL(reduceSize, 2u);
           if (local_idx < currentSize) {
            let candidate = aBestValues[local_idx + interval];
            bestValue = ${Jx[t]};
            aBestValues[local_idx] = bestValue;
           }
           reduceSize = interval;
           workgroupBarrier();
         }

         if (local_idx == 0u) {
          ${p.setByOffset("outputIndex",`${t==="mean"?`bestValue / ${p.type.storage}(uniforms.reduceSize)`:`${e2[t]}`}`)};
         }
        }`,getRunData:()=>({outputs:[{dims:i,dataType:o}],dispatchGroup:{x:u},programUniforms:[{type:12,data:l}]})}},Or=(r,e,n,t)=>{let o=r.inputs.length===1?n:Cu(r.inputs,n),i=o.axes;i.length===0&&!o.noopWithEmptyAxes&&(i=r.inputs[0].dims.map((g,b)=>b));let s=F.normalizeAxes(i,r.inputs[0].dims.length),a=s,u=r.inputs[0],l=i2(a,r.inputs[0].dims.length);l.length>0&&(u=r.compute(gr(r.inputs[0],l),{inputs:[0],outputs:[-1]})[0],a=t2(a.length,u.dims.length));let[d,p]=r2(u.dims,a),h=d;o.keepDims&&(h=n2(d,s)),r.compute(a2(e,{hint:o.cacheKey,inputDependencies:["type"]},[u],t,r.inputs[0].dataType,h,p),{inputs:[u]})},gm=(r,e)=>{Or(r,"ReduceMeanShared",e,"mean")},bm=(r,e)=>{Or(r,"ReduceL1Shared",e,"l1")},ym=(r,e)=>{Or(r,"ReduceL2Shared",e,"l2")},vm=(r,e)=>{Or(r,"ReduceLogSumExpShared",e,"logSumExp")},wm=(r,e)=>{Or(r,"ReduceMaxShared",e,"max")},xm=(r,e)=>{Or(r,"ReduceMinShared",e,"min")},_m=(r,e)=>{Or(r,"ReduceProdShared",e,"prod")},Tm=(r,e)=>{Or(r,"ReduceSumShared",e,"sum")},$m=(r,e)=>{Or(r,"ReduceSumSquareShared",e,"sumSquare")},Sm=(r,e)=>{Or(r,"ReduceLogSumShared",e,"logSum")}});var Er,s2,Ra,Cu,Cr,u2,l2,d2,c2,f2,p2,h2,m2,g2,b2,Pr,Am,Om,Em,Cm,Pm,km,Dm,Bm,Rm,zm,Ba=B(()=>{"use strict";Ie();Me();Ct();De();Im();Er=r=>{if(!r||r.length===0||r.length>2)throw new Error("Reduce op requires 1 or 2 inputs.");if(r.length===2&&r[1].dims.length!==1)throw new Error("Invalid axes input dims.")},s2=r=>["","",`var value = ${r.getByIndices("input_indices")};`,""],Ra=(r,e,n,t,o,i,s=!1,a=!1)=>{let u=[],l=n[0].dims,d=l.length,p=F.normalizeAxes(o,d),h=!a&&p.length===0;l.forEach(($,T)=>{h||p.indexOf(T)>=0?s&&u.push(1):u.push($)});let g=u.length,b=F.size(u);return{name:r,shaderCache:e,getShaderSource:$=>{let T=[],x=G("_A",n[0].dataType,d),A=Q("output",i,g),O=t(x,A,p),k=O[2];for(let L=0,W=0;L<d;L++)h||p.indexOf(L)>=0?(s&&W++,k=`for(var j${L}: u32 = 0; j${L} < ${l[L]}; j${L}++) {
                  ${O[2].includes("last_index")?`let last_index = j${L};`:""}
                  ${x.indicesSet("input_indices",L,`j${L}`)}
                  ${k}
                }`):(T.push(`${x.indicesSet("input_indices",L,A.indicesGet("output_indices",W))};`),W++);return`

        ${$.registerUniform("output_size","u32").declareVariables(x,A)}

        ${$.mainStart()}
          ${$.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
          var input_indices: ${x.type.indices};
          let output_indices = ${A.offsetToIndices("global_idx")};

          ${T.join(`
`)}
          ${O[0]}       // init ops for reduce max/min
          ${O[1]}
          ${k}
          ${O[3]}
          ${O.length===4?A.setByOffset("global_idx","value"):O.slice(4).join(`
`)}
        }`},getRunData:()=>({outputs:[{dims:u,dataType:i}],dispatchGroup:{x:Math.ceil(b/64)},programUniforms:[{type:12,data:b},...ne(l,u)]})}},Cu=(r,e)=>{let n=[];return r[1].dims[0]>0&&r[1].getBigInt64Array().forEach(t=>n.push(Number(t))),ze({axes:n,keepDims:e.keepDims,noopWithEmptyAxes:e.noopWithEmptyAxes})},Cr=(r,e,n,t)=>{let o=r.inputs,i=o.length===1?n:Cu(o,n);r.compute(Ra(e,{hint:i.cacheKey,inputDependencies:["rank"]},[o[0]],i.noopWithEmptyAxes&&i.axes.length===0?s2:t,i.axes,o[0].dataType,i.keepDims,i.noopWithEmptyAxes),{inputs:[0]})},u2=(r,e)=>{Er(r.inputs),Cr(r,"ReduceLogSum",e,(t,o)=>[`var value = ${o.type.storage}(0);`,"",`value += ${t.getByIndices("input_indices")};`,"value = log(value);"])},l2=(r,e)=>{Er(r.inputs),Cr(r,"ReduceL1",e,(t,o)=>[`var value = ${o.type.storage}(0);`,"",`value += abs(${t.getByIndices("input_indices")});`,""])},d2=(r,e)=>{Er(r.inputs),Cr(r,"ReduceL2",e,(t,o)=>[`var t = ${o.type.value}(0); var value = ${o.type.value}(0);`,"",`t = ${t.getByIndices("input_indices")}; value += (t * t);`,"value = sqrt(value);"])},c2=(r,e)=>{Er(r.inputs),Cr(r,"ReduceLogSumExp",e,(t,o)=>[`var value = ${o.type.storage}(0);`,"",`value += exp(${t.getByIndices("input_indices")});`,"value = log(value);"])},f2=(r,e)=>{Er(r.inputs),Cr(r,"ReduceMax",e,(t,o,i)=>{let s=[];for(let a=0;a<t.rank;a++)(i.indexOf(a)>=0||i.length===0)&&s.push(t.indicesSet("input_indices",a,0));return[`${s.join(`
`)}`,`var value = ${t.getByIndices("input_indices")};`,`value = max(value, ${t.getByIndices("input_indices")});`,""]})},p2=(r,e)=>{Er(r.inputs),Cr(r,"ReduceMean",e,(t,o,i)=>{let s=1;for(let a=0;a<t.rank;a++)(i.indexOf(a)>=0||i.length===0)&&(s*=r.inputs[0].dims[a]);return["var sum = f32(0);","",`sum += f32(${t.getByIndices("input_indices")});`,`let value = ${o.type.value}(sum / ${s});`]})},h2=(r,e)=>{Er(r.inputs),Cr(r,"ReduceMin",e,(t,o,i)=>{let s=[];for(let a=0;a<t.rank;a++)(i.indexOf(a)>=0||i.length===0)&&s.push(`input_indices[${a}] = 0;`);return[`${s.join(`
`)}`,`var value = ${t.getByIndices("input_indices")};`,`value = min(value, ${t.getByIndices("input_indices")});`,""]})},m2=(r,e)=>{Er(r.inputs),Cr(r,"ReduceProd",e,(t,o)=>[`var value = ${o.type.storage}(1);`,"",`value *= ${t.getByIndices("input_indices")};`,""])},g2=(r,e)=>{Er(r.inputs),Cr(r,"ReduceSum",e,(t,o)=>[`var value = ${o.type.storage}(0);`,"",`value += ${t.getByIndices("input_indices")};`,""])},b2=(r,e)=>{Er(r.inputs),Cr(r,"ReduceSumSquare",e,(t,o)=>[`var t = ${o.type.value}(0); var value = ${o.type.value}(0);`,"",`t = ${t.getByIndices("input_indices")}; value += t * t;`,""])},Pr=(r,e,n)=>{if(e.length===0)return n;let t=1,o=1;for(let i=0;i<e.length;i++)e.indexOf(i)===-1?t*=r[i]:o*=r[i];return o<32&&t>1024},Am=(r,e)=>{Pr(r.inputs[0].dims,e.axes,e.noopWithEmptyAxes)?p2(r,e):gm(r,e)},Om=(r,e)=>{Pr(r.inputs[0].dims,e.axes,e.noopWithEmptyAxes)?l2(r,e):bm(r,e)},Em=(r,e)=>{Pr(r.inputs[0].dims,e.axes,e.noopWithEmptyAxes)?d2(r,e):ym(r,e)},Cm=(r,e)=>{Pr(r.inputs[0].dims,e.axes,e.noopWithEmptyAxes)?c2(r,e):vm(r,e)},Pm=(r,e)=>{Pr(r.inputs[0].dims,e.axes,e.noopWithEmptyAxes)?f2(r,e):wm(r,e)},km=(r,e)=>{Pr(r.inputs[0].dims,e.axes,e.noopWithEmptyAxes)?h2(r,e):xm(r,e)},Dm=(r,e)=>{Pr(r.inputs[0].dims,e.axes,e.noopWithEmptyAxes)?m2(r,e):_m(r,e)},Bm=(r,e)=>{Pr(r.inputs[0].dims,e.axes,e.noopWithEmptyAxes)?g2(r,e):Tm(r,e)},Rm=(r,e)=>{Pr(r.inputs[0].dims,e.axes,e.noopWithEmptyAxes)?b2(r,e):$m(r,e)},zm=(r,e)=>{Pr(r.inputs[0].dims,e.axes,e.noopWithEmptyAxes)?u2(r,e):Sm(r,e)}});var Mm,Lm,Nm,Pu,Vm=B(()=>{"use strict";Ie();Ct();Ba();Mm=r=>{if(!r||r.length===0||r.length>2)throw new Error("ArgMinMaxOp op requires 1 or 2 inputs.");if(r[0].dataType!==1)throw new Error("Invalid input type.")},Lm=(r,e)=>{Mm(r.inputs);let n=(t,o,i)=>{let s=[];for(let a=0;a<t.rank;a++)(i.indexOf(a)>=0||i.length===0)&&s.push(`input_indices[${a}] = 0;`);return[`${s.join(`
`)}`,`var value = ${t.getByIndices("input_indices")};
var best_index : i32 = 0;`,`if (${t.getByIndices("input_indices")} ${e.selectLastIndex>0?"<=":"<"} value) {
         value = ${t.getByIndices("input_indices")};
         best_index = i32(last_index);
       }`,"",o.setByOffset("global_idx","best_index")]};r.compute(Ra("ArgMin",{hint:e.cacheKey,inputDependencies:["rank"]},[r.inputs[0]],n,[e.axis],7,e.keepDims),{inputs:[0]})},Nm=(r,e)=>{Mm(r.inputs);let n=(t,o,i)=>{let s=[];for(let a=0;a<t.rank;a++)(i.indexOf(a)>=0||i.length===0)&&s.push(`input_indices[${a}] = 0;`);return[`${s.join(`
`)}`,`var value = ${t.getByIndices("input_indices")};
var best_index : i32 = 0;`,`if (${t.getByIndices("input_indices")} ${e.selectLastIndex>0?">=":">"} value) {
         value = ${t.getByIndices("input_indices")};
         best_index = i32(last_index);
       }`,"",o.setByOffset("global_idx","best_index")]};r.compute(Ra("argMax",{hint:e.cacheKey,inputDependencies:["rank"]},[r.inputs[0]],n,[e.axis],7,e.keepDims),{inputs:[0]})},Pu=r=>ze(r)});var y2,v2,w2,x2,za,_2,Fm,ku=B(()=>{"use strict";Ie();Aa();De();y2=(r,e)=>{let n=r[0],t=r[1],o=r[2],i=r[3],s=r[4],a=r[5];if(s&&a)throw new Error("Attention cannot have both past and relative_position_bias");if(n.dims.length!==3)throw new Error('Input "input" must have 3 dimensions');let u=n.dims[0],l=n.dims[1],d=n.dims[2];if(o.dims.length!==1)throw new Error('Input "bias" is expected to have 1 dimensions');if(t.dims.length!==2)throw new Error('Input "weights" is expected to have 2 dimensions');if(t.dims[0]!==d)throw new Error("Input 1 dimension 0 should have same length as dimension 2 of input 0");if(o.dims[0]!==t.dims[1])throw new Error('Input "bias" dimension 0 should have same length as dimension 1 of input "weights"');let p=o.dims[0]/3,h=p,g=h;if(e.qkvHiddenSizes.length>0){if(e.qkvHiddenSizes.length!==3)throw new Error("qkv_hidden_sizes attribute should have 3 elements");for(let A of e.qkvHiddenSizes)if(A%e.numHeads!==0)throw new Error("qkv_hidden_sizes should be divisible by num_heads");p=e.qkvHiddenSizes[0],h=e.qkvHiddenSizes[1],g=e.qkvHiddenSizes[2]}let b=l;if(p!==h)throw new Error("qkv_hidden_sizes first element should be same as the second");if(o.dims[0]!==p+h+g)throw new Error('Input "bias" dimension 0 should have same length as sum of Q/K/V hidden sizes');let v=0;if(s){if(h!==g)throw new Error('Input "past" expect k_hidden_size == v_hidden_size');if(s.dims.length!==5)throw new Error('Input "past" must have 5 dimensions');if(s.dims[0]!==2)throw new Error('Input "past" first dimension must be 2');if(s.dims[1]!==u)throw new Error('Input "past" second dimension must be batch_size');if(s.dims[2]!==e.numHeads)throw new Error('Input "past" third dimension must be num_heads');if(s.dims[4]!==h/e.numHeads)throw new Error('Input "past" fifth dimension must be k_hidden_size / num_heads');e.pastPresentShareBuffer||(v=s.dims[3])}let $=b+v,T=-1,x=0;if(i)throw new Error("Mask not supported");if(s)throw new Error("past is not supported");if(a)throw new Error("relativePositionBias is not supported");return{batchSize:u,sequenceLength:l,pastSequenceLength:v,kvSequenceLength:b,totalSequenceLength:$,maxSequenceLength:T,inputHiddenSize:d,hiddenSize:p,vHiddenSize:g,headSize:Math.floor(p/e.numHeads),vHeadSize:Math.floor(g/e.numHeads),numHeads:e.numHeads,isUnidirectional:!1,pastPresentShareBuffer:!1,maskFilterValue:e.maskFilterValue,maskType:x,scale:e.scale,broadcastResPosBias:!1,passPastInKv:!1,qkvFormat:1}},v2=(r,e,n,t)=>{let o=xt(t),i=64,s=t/o;s<i?i=1:s/8<64&&(i=Math.ceil(s/8));let a=Math.ceil(t/o/i),u=[{type:e.dataType,data:1/t},{type:12,data:s},{type:12,data:a}],l=ot(e.dataType,o),d=p=>{let h=Q("x",e.dataType,e.dims,o),g="thread_max_vector";o===2?g="max(thread_max_vector.x, thread_max_vector.y)":o===4&&(g="max(max(thread_max_vector.x, thread_max_vector.y), max(thread_max_vector.z, thread_max_vector.w))");let b=Ht(e.dataType),v=[{name:"d_inv",type:b},{name:"d_comp",type:"u32"},{name:"elements_per_wg",type:"u32"}];return`
  var<workgroup> wgMax: array<f32, ${i}>;
  var<workgroup> wgSum: array<f32, ${i}>;
  ${p.registerUniforms(v).declareVariables(h)}
  ${p.mainStart([i,1,1])}
    let localOffset = local_idx * uniforms.elements_per_wg;
    let offset: u32 = workgroup_id.x * uniforms.d_comp + localOffset;

    var thread_max_vector = ${Bt("f32",o,"-3.402823e+38f")};
    for (var i: u32 = 0; i < uniforms.elements_per_wg && i + localOffset < uniforms.d_comp; i++) {
      thread_max_vector = max(${mr(b,o,"x[offset + i]")}, thread_max_vector);
    }
    wgMax[local_idx] = ${g};
    workgroupBarrier();

    var maxValue = -3.402823e+38f;
    for (var i = 0u; i < ${i}; i++) {
      maxValue = max(wgMax[i], maxValue);
    }

    var sumVector = ${Bt("f32",o,"0")};
    for (var i: u32 = 0; i < uniforms.elements_per_wg && i + localOffset < uniforms.d_comp; i++) {
      sumVector += exp(${mr(b,o,"x[offset + i]")} - maxValue);
    }
    wgSum[local_idx] = ${qt("sumVector",o)};
    workgroupBarrier();

    var sum: f32 = 0;
    for (var i = 0u; i < ${i}; i++) {
      sum += wgSum[i];
    }

    if (sum == 0) {
      for (var i: u32 = 0; i < uniforms.elements_per_wg && i + localOffset < uniforms.d_comp; i++) {
        x[offset + i] = ${Bt(b,o,"uniforms.d_inv")};
      }
    } else {
      for (var i: u32 = 0; i < uniforms.elements_per_wg && i + localOffset < uniforms.d_comp; i++) {
        let f32input = ${mr(b,o,"x[offset + i]")};
        x[offset + i] = ${h.type.value}(exp(f32input - maxValue) / sum);
      }
    }
  }`};r.compute({name:"AttentionProbsSoftmax",shaderCache:{hint:`${i};${l};${o}`},getShaderSource:d,getRunData:()=>({outputs:[],dispatchGroup:{x:n},programUniforms:u})},{inputs:[e],outputs:[]})},w2=(r,e,n,t,o,i)=>{let s=[o.batchSize,o.numHeads,o.sequenceLength,o.kvSequenceLength+o.pastSequenceLength],a=i.scale===0?1/Math.sqrt(o.headSize):i.scale,u=xt(o.headSize),l=o.headSize/u,d=12,p={x:Math.ceil(o.totalSequenceLength/d),y:Math.ceil(o.sequenceLength/d),z:o.batchSize*o.numHeads},h=[{type:12,data:o.sequenceLength},{type:12,data:l},{type:12,data:o.totalSequenceLength},{type:12,data:o.kvSequenceLength},{type:e.dataType,data:a}],g=[e,n],b=$=>{let T=G("q",e.dataType,e.dims,u),x=G("key",n.dataType,n.dims,u),A=Q("output",e.dataType,s),O=ot(e.dataType),k=[{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"kv_sequence_length",type:"u32"},{name:"alpha",type:O}];return`
  const beta: ${O} = 1.0;
  const TILE_SIZE = ${d}u;

  var<workgroup> tileQ: array<${T.type.storage}, ${d*d}>;
  var<workgroup> tileK: array<${T.type.storage}, ${d*d}>;
  ${$.registerUniforms(k).declareVariables(T,x,A)}
  ${$.mainStart([d,d,1])}
    // x holds the N and y holds the M
    let headIdx = workgroup_id.z;
    let m = workgroup_id.y * TILE_SIZE;
    let n = workgroup_id.x * TILE_SIZE;
    let lm = m + local_id.y;
    let ln = n + local_id.x;

    let qOffset = uniforms.M * uniforms.K * headIdx + m * uniforms.K;
    let kOffset = uniforms.kv_sequence_length * uniforms.K * headIdx + n * uniforms.K;

    var value = ${Bt(O,u)};
    for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {
      if (m + local_id.y < uniforms.M && w + local_id.x < uniforms.K) {
        tileQ[TILE_SIZE * local_id.y + local_id.x] = q[qOffset + local_id.y * uniforms.K + w + local_id.x];
      }
      if (n + local_id.y < uniforms.N && w + local_id.x < uniforms.K) {
        tileK[TILE_SIZE * local_id.y + local_id.x] = key[kOffset + local_id.y * uniforms.K + w + local_id.x];
      }
      workgroupBarrier();

      for (var k: u32 = 0u; k<TILE_SIZE && w+k < uniforms.K; k++) {
        value += tileQ[TILE_SIZE * local_id.y + k] * tileK[TILE_SIZE * local_id.x + k];
      }

      workgroupBarrier();
    }

    let headOffset = headIdx * uniforms.M * uniforms.N;
    if (lm < uniforms.M && ln < uniforms.N) {
      let outputIdx = headOffset + lm * uniforms.N + ln;
      output[outputIdx] = ${qt("value",u)} * uniforms.alpha;
    }
  }`},v=r.compute({name:"AttentionProbs",shaderCache:{hint:`${u}`,inputDependencies:["type","type"]},getRunData:()=>({outputs:[{dims:s,dataType:e.dataType,gpuDataType:0}],dispatchGroup:p,programUniforms:h}),getShaderSource:b},{inputs:g,outputs:[-1]})[0];return v2(r,v,o.batchSize*o.numHeads*o.sequenceLength,o.totalSequenceLength),v},x2=(r,e,n,t)=>{let o=[t.batchSize,t.sequenceLength,t.vHiddenSize],i=12,s={x:Math.ceil(t.vHeadSize/i),y:Math.ceil(t.sequenceLength/i),z:t.batchSize*t.numHeads},a=[{type:12,data:t.sequenceLength},{type:12,data:t.totalSequenceLength},{type:12,data:t.vHeadSize},{type:12,data:t.numHeads},{type:12,data:t.vHiddenSize}],u=l=>{let d=G("probs",e.dataType,e.dims),p=G("v",n.dataType,n.dims),h=Q("output",e.dataType,o),g=[{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"v_hidden_size",type:"u32"}];return`
  const TILE_SIZE = ${i}u;
  var<workgroup> tileQ: array<${d.type.value}, ${i*i}>;
  var<workgroup> tileK: array<${d.type.value}, ${i*i}>;
  ${l.registerUniforms(g).declareVariables(d,p,h)}
  ${l.mainStart([i,i,1])}
   let headIdx = workgroup_id.z;
   let m = workgroup_id.y * TILE_SIZE + local_id.y;
   let n = workgroup_id.x * TILE_SIZE + local_id.x;

   let offsetA = headIdx * (uniforms.M * uniforms.K) + m * uniforms.K;
   let offsetB = headIdx * (uniforms.N * uniforms.K) + n;

   var value = ${d.type.storage}(0);
   for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {
     if (m < uniforms.M && w + local_id.x < uniforms.K) {
       tileQ[TILE_SIZE * local_id.y + local_id.x] = probs[offsetA + w + local_id.x];
     }
     if (n < uniforms.N && w + local_id.y < uniforms.K) {
       tileK[TILE_SIZE * local_id.y + local_id.x] = v[offsetB + (w + local_id.y) * uniforms.N];
     }
     workgroupBarrier();
     for (var k: u32 = 0u; k<TILE_SIZE && w+k < uniforms.K; k++) {
       value += tileQ[TILE_SIZE * local_id.y + k] * tileK[TILE_SIZE * k + local_id.x];
     }
     workgroupBarrier();
   }

   // we need to transpose output from BNSH_v to BSND_v
   let batchIdx = workgroup_id.z / uniforms.num_heads;
   let currentBatchHeadNumber = workgroup_id.z % uniforms.num_heads;
   let headOffset = (batchIdx * uniforms.M * uniforms.num_heads + currentBatchHeadNumber) * uniforms.N;
   if (m < uniforms.M && n < uniforms.N) {
     let outputIdx = batchIdx * uniforms.M *uniforms.v_hidden_size + m * uniforms.v_hidden_size
       + currentBatchHeadNumber * uniforms.N + n;
     output[outputIdx] = value;
   }
  }`};return r.compute({name:"AttentionScore",shaderCache:{inputDependencies:["type","type"]},getRunData:()=>({outputs:[{dims:o,dataType:e.dataType,gpuDataType:0}],dispatchGroup:s,programUniforms:a}),getShaderSource:u},{inputs:[e,n],outputs:[0]})[0]},za=(r,e,n,t,o,i,s,a,u,l,d)=>{let p=w2(r,e,n,u,l,d);x2(r,p,t,l)},_2=(r,e)=>{let n=[e.batchSize,e.numHeads,e.sequenceLength,e.headSize],t=e.sequenceLength,o=e.inputHiddenSize,i=e.headSize,s=12,a={x:Math.ceil(e.headSize/s),y:Math.ceil(e.sequenceLength/s),z:e.batchSize*e.numHeads},u=[r.inputs[0],r.inputs[1],r.inputs[2]],l=[{type:12,data:t},{type:12,data:o},{type:12,data:i},{type:12,data:e.numHeads},{type:12,data:e.headSize},{type:12,data:e.hiddenSize},{type:12,data:e.hiddenSize+e.hiddenSize+e.vHiddenSize}],d=p=>{let h=Q("output_q",u[0].dataType,n),g=Q("output_k",u[0].dataType,n),b=Q("output_v",u[0].dataType,n),v=G("input",u[0].dataType,u[0].dims),$=G("weight",u[1].dataType,u[1].dims),T=G("bias",u[2].dataType,u[2].dims),x=v.type.storage,A=[{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"head_size",type:"u32"},{name:"hidden_size",type:"u32"},{name:"ldb",type:"u32"}];return`
  const TILE_SIZE = ${s}u;
  var<workgroup> tileInput: array<${x}, ${s*s}>;
  var<workgroup> tileWeightQ: array<${x}, ${s*s}>;
  var<workgroup> tileWeightK: array<${x}, ${s*s}>;
  var<workgroup> tileWeightV: array<${x}, ${s*s}>;
  ${p.registerUniforms(A).declareVariables(v,$,T,h,g,b)}
  ${p.mainStart([s,s,1])}
    let batchIndex = workgroup_id.z / uniforms.num_heads;
    let headNumber = workgroup_id.z % uniforms.num_heads;
    let m = workgroup_id.y * TILE_SIZE + local_id.y;
    let n = workgroup_id.x * TILE_SIZE + local_id.x;

    let inputOffset = batchIndex * (uniforms.M * uniforms.K) + m * uniforms.K;
    let biasOffsetQ = headNumber * uniforms.head_size;
    let biasOffsetK = uniforms.hidden_size + biasOffsetQ;
    let biasOffsetV = uniforms.hidden_size + biasOffsetK;

    var valueQ = ${x}(0);
    var valueK = ${x}(0);
    var valueV = ${x}(0);
    for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {
      if (m < uniforms.M && w + local_id.x < uniforms.K) {
        tileInput[TILE_SIZE * local_id.y + local_id.x] = input[inputOffset + w + local_id.x];
      }
      if (n < uniforms.N && w + local_id.y < uniforms.K) {
        let offset = n + (w + local_id.y) * uniforms.ldb;
        tileWeightQ[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetQ + offset];
        tileWeightK[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetK + offset];
        tileWeightV[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetV + offset];
      }
      workgroupBarrier();
      for (var k: u32 = 0u; k<TILE_SIZE && w+k < uniforms.K; k++) {
        let inputTileOffset = TILE_SIZE * local_id.y + k;
        let weightTileOffset = TILE_SIZE * k + local_id.x;
        valueQ += tileInput[inputTileOffset] * tileWeightQ[weightTileOffset];
        valueK += tileInput[inputTileOffset] * tileWeightK[weightTileOffset];
        valueV += tileInput[inputTileOffset] * tileWeightV[weightTileOffset];
      }

      workgroupBarrier();
    }

    let headOffset = (m * uniforms.N + n) % uniforms.head_size;
    valueQ += bias[headOffset + biasOffsetQ];
    valueK += bias[headOffset + biasOffsetK];
    valueV += bias[headOffset + biasOffsetV];

    let offset = workgroup_id.z * uniforms.M * uniforms.N;
    if (m < uniforms.M && n < uniforms.N) {
      let outputIdx = offset + m * uniforms.N + n;
      output_q[outputIdx] = valueQ;
      output_k[outputIdx] = valueK;
      output_v[outputIdx] = valueV;
    }
  }`};return r.compute({name:"AttentionPrepare",shaderCache:{inputDependencies:["type","type","type"]},getRunData:()=>({outputs:[{dims:n,dataType:r.inputs[0].dataType,gpuDataType:0},{dims:n,dataType:r.inputs[0].dataType,gpuDataType:0},{dims:n,dataType:r.inputs[0].dataType,gpuDataType:0}],dispatchGroup:a,programUniforms:l}),getShaderSource:d},{inputs:u,outputs:[-1,-1,-1]})},Fm=(r,e)=>{let n=y2(r.inputs,e),[t,o,i]=_2(r,n);return za(r,t,o,i,r.inputs[4],void 0,void 0,void 0,r.inputs[5],n,e)}});var T2,$2,S2,Gm,Um=B(()=>{"use strict";kt();Ie();Me();Ct();De();T2=(r,e)=>{if(!r||r.length!==5)throw new Error("BatchNormalization requires 5 inputs");let n=(t,o,i)=>{let s=o.length;if(s!==t.length)throw new Error(`${i}: num dimensions != ${s}`);o.forEach((a,u)=>{if(a!==t[u])throw new Error(`${i}: dim[${u}] do not match`)})};if(r[0].dims.length>1){let t=e.format==="NHWC"?e.spatial?r[0].dims.slice(-1):r[0].dims.slice(-1).concat(r[0].dims.slice(1,r[0].dims.length-1)):r[0].dims.slice(1,e.spatial?2:void 0);n(r[1].dims,t,"Invalid input scale"),n(r[2].dims,t,"Invalid input B"),n(r[3].dims,t,"Invalid input mean"),n(r[4].dims,t,"Invalid input var")}else n(r[1].dims,[1],"Invalid input scale"),n(r[2].dims,[1],"Invalid input B"),n(r[3].dims,[1],"Invalid input mean"),n(r[4].dims,[1],"Invalid input var")},$2=(r,e)=>{let{epsilon:n,spatial:t,format:o}=e,i=r[0].dims,s=t?xt(i[i.length-1]):1,a=o==="NHWC"&&i.length>1?s:1,u=F.size(i)/s,l=t,d=l?i.length:i,p=G("x",r[0].dataType,r[0].dims,s),h=G("scale",r[1].dataType,r[1].dims,a),g=G("bias",r[2].dataType,r[2].dims,a),b=G("inputMean",r[3].dataType,r[3].dims,a),v=G("inputVar",r[4].dataType,r[4].dims,a),$=Q("y",r[0].dataType,d,s),T=()=>{let A="";if(t)A=`let cOffset = ${i.length===1?"0u":o==="NHWC"?`outputIndices[${i.length-1}] / ${s}`:"outputIndices[1]"};`;else if(o==="NCHW")A=`
            ${$.indicesSet("outputIndices","0","0")}
            let cOffset = ${$.indicesToOffset("outputIndices")};`;else{A=`var cIndices = ${h.type.indices}(0);
                       cIndices[0] = outputIndices[${i.length-1}];`;for(let O=1;O<h.rank;O++)A+=`cIndices[${O}] = outputIndices[${O}];`;A+=`let cOffset = ${h.indicesToOffset("cIndices")};`}return A},x=A=>`
  const epsilon = ${n};
  ${A.registerUniform("outputSize","u32").declareVariables(p,h,g,b,v,$)}
  ${A.mainStart()}
  ${A.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
    var outputIndices = ${$.offsetToIndices(`global_idx * ${s}`)};
    ${T()}
    let scale = ${h.getByOffset("cOffset")};
    let bias = ${g.getByOffset("cOffset")};
    let inputMean = ${b.getByOffset("cOffset")};
    let inputVar = ${v.getByOffset("cOffset")};
    let x = ${p.getByOffset("global_idx")};
    let value = (x - inputMean) * inverseSqrt(inputVar + epsilon) * scale + bias;
    ${$.setByOffset("global_idx","value")}
  }`;return{name:"BatchNormalization",shaderCache:{hint:`${e.epsilon}_${e.format}_${t}_${s}`,inputDependencies:l?["rank","type","type","type","type"]:void 0},getShaderSource:x,getRunData:()=>({outputs:[{dims:r[0].dims,dataType:r[0].dataType}],dispatchGroup:{x:Math.ceil(u/64)},programUniforms:l?[{type:12,data:u},...ne(i)]:[{type:12,data:u}]})}},S2=r=>ze(r),Gm=(r,e)=>{let{inputs:n,outputCount:t}=r,o=S2({...e,outputCount:t});if(be.webgpu.validateInputContent&&T2(n,o),e.trainingMode)throw new Error("BatchNormalization trainingMode is not supported yet.");r.compute($2(n,o))}});var I2,A2,Wm,Hm=B(()=>{"use strict";Me();De();I2=r=>{if(r[0].dims.length!==3)throw new Error("input should have 3 dimensions");if(![320,640,1280].includes(r[0].dims[2]))throw new Error("number of channels should be 320, 640 or 1280");if(r[1].dims.length!==1)throw new Error("bias is expected to have 1 dimensions");if(r[0].dims[2]!==r[1].dims[0])throw new Error("last dimension of input and bias are not the same")},A2=r=>{let e=r[0].dims,n=r[0].dims[2],t=F.size(e)/4,o=r[0].dataType,i=G("input",o,e,4),s=G("bias",o,[n],4),a=G("residual",o,e,4),u=Q("output",o,e,4);return{name:"BiasAdd",getRunData:()=>({outputs:[{dims:e,dataType:r[0].dataType}],dispatchGroup:{x:Math.ceil(t/64)}}),getShaderSource:d=>`
  const channels = ${n}u / 4;
  ${d.declareVariables(i,s,a,u)}

  ${d.mainStart()}
    ${d.guardAgainstOutOfBoundsWorkgroupSizes(t)}
    let value = ${i.getByOffset("global_idx")}
      + ${s.getByOffset("global_idx % channels")} + ${a.getByOffset("global_idx")};
    ${u.setByOffset("global_idx","value")}
  }`}},Wm=r=>{I2(r.inputs),r.compute(A2(r.inputs))}});var O2,Ye,qm,jm,Km,Ym,Xm,Zm,Jm,Qm,eg,E2,tg,rg,ng,og,Ma,ig,La,ag,sg,ug,lg,dg,cg,fg,pg,hg,mg,gg,bg,yg,vg,wg,xg,_g,Tg,Du,Bu,$g,Sg,Ig,Na=B(()=>{"use strict";Ie();Me();Ct();De();O2=(r,e,n,t,o,i)=>{let s=Math.ceil(e/4),a="";typeof o=="string"?a=`${o}(a)`:a=o("a");let u=G("inputData",n,[s],4),l=Q("outputData",t,[s],4);return`
      ${r.registerUniform("vec_size","u32").declareVariables(u,l)}

  ${i??""}

  ${r.mainStart()}
    ${r.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}

    let a = ${u.getByOffset("global_idx")};
    ${l.setByOffset("global_idx",a)}
  }`},Ye=(r,e,n,t,o,i=r.dataType)=>({name:e,shaderCache:{hint:o,inputDependencies:["type"]},getShaderSource:s=>O2(s,F.size(r.dims),r.dataType,i,n,t),getRunData:s=>({outputs:[{dims:r.dims,dataType:i}],dispatchGroup:{x:Math.ceil(F.size(s[0].dims)/64/4)},programUniforms:[{type:12,data:Math.ceil(F.size(r.dims)/4)}]})}),qm=r=>{r.compute(Ye(r.inputs[0],"Abs","abs"))},jm=r=>{r.compute(Ye(r.inputs[0],"Acos","acos"))},Km=r=>{r.compute(Ye(r.inputs[0],"Acosh","acosh"))},Ym=r=>{r.compute(Ye(r.inputs[0],"Asin","asin"))},Xm=r=>{r.compute(Ye(r.inputs[0],"Asinh","asinh"))},Zm=r=>{r.compute(Ye(r.inputs[0],"Atan","atan"))},Jm=r=>{r.compute(Ye(r.inputs[0],"Atanh","atanh"))},Qm=r=>ze(r),eg=(r,e)=>{let n;switch(e.to){case 10:n="vec4<f16>";break;case 1:n="vec4<f32>";break;case 12:n="vec4<u32>";break;case 6:n="vec4<i32>";break;case 9:n="vec4<bool>";break;default:throw new RangeError(`not supported type (specified in attribute 'to' from 'Cast' operator): ${e.to}`)}r.compute(Ye(r.inputs[0],"Cast",n,void 0,e.cacheKey,e.to))},E2=r=>{let e=r.length>=2&&r[1].data!==0?r[1].getFloat32Array()[0]:Ca,n=r.length>=3&&r[2].data!==0?r[2].getFloat32Array()[0]:Pa;return ze({min:e,max:n})},tg=(r,e)=>{let n=r.inputs.length===1?e:E2(r.inputs),t=Ht(r.inputs[0].dataType);r.compute(Ye(r.inputs[0],"Clip",o=>`clamp(${o}, clip_min_, clip_max_)`,`
    const clip_min_: vec4<${t}> = vec4(${t}(${n.min}));
    const clip_max_: vec4<${t}> = vec4(${t}(${n.max}));
`,n.cacheKey),{inputs:[0]})},rg=r=>{r.compute(Ye(r.inputs[0],"Ceil","ceil"))},ng=r=>{r.compute(Ye(r.inputs[0],"Cos","cos"))},og=r=>{r.compute(Ye(r.inputs[0],"Cosh","cosh"))},Ma=r=>ze(r),ig=(r,e)=>{let n=Ht(r.inputs[0].dataType);r.compute(Ye(r.inputs[0],"Elu",t=>`elu_vf32(${t})`,`
  const elu_alpha_ = ${n}(${e.alpha});

  fn elu_f32(a: ${n}) -> ${n} {
  return select((exp(a) - 1.0) * elu_alpha_, a, a >= 0.0);
  }

  fn elu_vf32(v: vec4<${n}>) -> vec4<${n}> {
  return vec4(elu_f32(v.x), elu_f32(v.y), elu_f32(v.z), elu_f32(v.w));
  }`,e.cacheKey))},La=(r="f32")=>`
const r0: ${r} = 0.3275911;
const r1: ${r} = 0.254829592;
const r2: ${r} = -0.284496736;
const r3: ${r} = 1.421413741;
const r4: ${r} = -1.453152027;
const r5: ${r} = 1.061405429;

fn erf_vf32(v: vec4<${r}>) -> vec4<${r}> {
  let absv = abs(v);
  let x = 1.0 / (1.0 + r0 * absv);
  return sign(v) * (1.0 - ((((r5 * x + r4) * x + r3) * x + r2) * x + r1) * x * exp(-absv * absv));
}`,ag=r=>{let e=Ht(r.inputs[0].dataType);r.compute(Ye(r.inputs[0],"Erf",n=>`erf_vf32(${n})`,La(e)))},sg=r=>{r.compute(Ye(r.inputs[0],"Exp","exp"))},ug=r=>{r.compute(Ye(r.inputs[0],"Floor","floor"))},lg=r=>{let e=Ht(r.inputs[0].dataType);r.compute(Ye(r.inputs[0],"Gelu",n=>`0.5 * ${n} * (1.0 + erf_vf32(${n} * 0.7071067811865475))`,La(e)))},dg=(r,e)=>{let n=Ht(r.inputs[0].dataType);r.compute(Ye(r.inputs[0],"LeakyRelu",t=>`select(leaky_relu_alpha_ * ${t}, ${t}, ${t} >= vec4<${n}>(0.0))`,`const leaky_relu_alpha_ = ${n}(${e.alpha});`,e.cacheKey))},cg=r=>{r.compute(Ye(r.inputs[0],"Not",e=>`!${e}`))},fg=r=>{r.compute(Ye(r.inputs[0],"Neg",e=>`-${e}`))},pg=r=>{r.compute(Ye(r.inputs[0],"Reciprocal",e=>`1.0/${e}`))},hg=r=>{let e=Ht(r.inputs[0].dataType);r.compute(Ye(r.inputs[0],"Relu",n=>`select(vec4<${e}>(0.0), ${n}, ${n} > vec4<${e}>(0.0))`))},mg=r=>{r.compute(Ye(r.inputs[0],"Sigmoid",e=>`(1.0 / (1.0 + exp(-${e})))`))},gg=r=>ze(r),bg=(r,e)=>{let n=Ht(r.inputs[0].dataType);r.compute(Ye(r.inputs[0],"HardSigmoid",t=>`max(vec4<${n}>(0.0), min(vec4<${n}>(1.0), ${e.alpha} * ${t} + vec4<${n}>(${e.beta})))`,void 0,e.cacheKey))},yg=r=>{r.compute(Ye(r.inputs[0],"Sin","sin"))},vg=r=>{r.compute(Ye(r.inputs[0],"Sinh","sinh"))},wg=r=>{r.compute(Ye(r.inputs[0],"Sqrt","sqrt"))},xg=r=>{r.compute(Ye(r.inputs[0],"Tan","tan"))},_g=r=>`sign(${r}) * (1 - exp(-2 * abs(${r}))) / (1 + exp(-2 * abs(${r})))`,Tg=r=>{r.compute(Ye(r.inputs[0],"Tanh",_g))},Du=(r="f32")=>`
const fast_gelu_a: ${r} = 0.5;
const fast_gelu_b: ${r} = 0.7978845608028654;
const fast_gelu_c: ${r} = 0.035677408136300125;

fn tanh_v(v: vec4<${r}>) -> vec4<${r}> {
  return ${_g("v")};
}
`,Bu=r=>`(fast_gelu_a + fast_gelu_a * tanh_v(${r} * (fast_gelu_c * ${r} * ${r} + fast_gelu_b))) * ${r}`,$g=r=>{let e=Ht(r.inputs[0].dataType);r.compute(Ye(r.inputs[0],"FastGelu",Bu,Du(e),void 0,r.inputs[0].dataType))},Sg=(r,e)=>{let n=Ht(r.inputs[0].dataType);return r.compute(Ye(r.inputs[0],"ThresholdedRelu",t=>`select(vec4<${n}>(0.0), ${t}, ${t} > thresholded_relu_alpha_)`,`const thresholded_relu_alpha_ = vec4<${n}>(${e.alpha});`,e.cacheKey)),0},Ig=r=>{r.compute(Ye(r.inputs[0],"Log","log"))}});var C2,P2,Og,Eg=B(()=>{"use strict";Me();De();Na();C2=r=>{if(r[0].dims.length!==3)throw new Error("input should have 3 dimensions");if(![2560,5120,10240].includes(r[0].dims[2]))throw new Error("hidden state should be 2560, 5120 or 10240");if(r[1].dims.length!==1)throw new Error("bias is expected to have 1 dimensions");if(r[0].dims[2]!==r[1].dims[0])throw new Error("last dimension of input and bias are not the same")},P2=r=>{let e=r[0].dims.slice();e[2]=e[2]/2;let n=G("input",r[0].dataType,r[0].dims,4),t=G("bias",r[0].dataType,[r[0].dims[2]],4),o=Q("output",r[0].dataType,e,4),i=F.size(e)/4,s=ot(r[0].dataType);return{name:"BiasSplitGelu",getRunData:()=>({outputs:[{dims:e,dataType:r[0].dataType}],dispatchGroup:{x:Math.ceil(i/64)}}),getShaderSource:u=>`
  const M_SQRT2 = sqrt(2.0);
  const halfChannels = ${r[0].dims[2]/4/2}u;

  ${u.declareVariables(n,t,o)}

  ${La(s)}

  ${u.mainStart()}
    ${u.guardAgainstOutOfBoundsWorkgroupSizes(i)}
    let biasIdx = global_idx % halfChannels;
    let batchIndex = global_idx / halfChannels;
    let inputOffset = biasIdx + batchIndex * halfChannels * 2;
    let valueLeft = input[inputOffset] + bias[biasIdx];
    let valueRight = input[inputOffset + halfChannels] + bias[biasIdx + halfChannels];
    let geluRight = valueRight * 0.5 * (erf_vf32(valueRight / M_SQRT2) + 1);

    ${o.setByOffset("global_idx","valueLeft * geluRight")}
  }`}},Og=r=>{C2(r.inputs),r.compute(P2(r.inputs))}});var k2,D2,kr,Cg,Pg,kg,Dg,Bg,Rg,zg,Mg,Lg,Ng,Vg=B(()=>{"use strict";Ie();Me();De();k2=(r,e,n,t,o,i,s,a,u,l,d,p)=>{let h,g;typeof a=="string"?h=g=(x,A)=>`${a}((${x}),(${A}))`:typeof a=="function"?h=g=a:(h=a.scalar,g=a.vector);let b=Q("outputData",d,t.length,4),v=G("aData",u,e.length,4),$=G("bData",l,n.length,4),T;if(o)if(i){let x=F.size(e)===1,A=F.size(n)===1,O=e.length>0&&e[e.length-1]%4===0,k=n.length>0&&n[n.length-1]%4===0;x||A?T=b.setByOffset("global_idx",g(x?`${v.type.value}(${v.getByOffset("0")}.x)`:v.getByOffset("global_idx"),A?`${$.type.value}(${$.getByOffset("0")}.x)`:$.getByOffset("global_idx"))):T=`
            let outputIndices = ${b.offsetToIndices("global_idx * 4u")};
            let offsetA = ${v.broadcastedIndicesToOffset("outputIndices",b)};
            let offsetB = ${$.broadcastedIndicesToOffset("outputIndices",b)};
            ${b.setByOffset("global_idx",g(s||O?v.getByOffset("offsetA / 4u"):`${v.type.value}(${v.getByOffset("offsetA / 4u")}[offsetA % 4u])`,s||k?$.getByOffset("offsetB / 4u"):`${$.type.value}(${$.getByOffset("offsetB / 4u")}[offsetB % 4u])`))}
          `}else T=b.setByOffset("global_idx",g(v.getByOffset("global_idx"),$.getByOffset("global_idx")));else{if(!i)throw new Error("no necessary to use scalar implementation for element-wise binary op implementation.");let x=(A,O,k="")=>{let L=`aData[indexA${O}][componentA${O}]`,W=`bData[indexB${O}][componentB${O}]`;return`
            let outputIndices${O} = ${b.offsetToIndices(`global_idx * 4u + ${O}u`)};
            let offsetA${O} = ${v.broadcastedIndicesToOffset(`outputIndices${O}`,b)};
            let offsetB${O} = ${$.broadcastedIndicesToOffset(`outputIndices${O}`,b)};
            let indexA${O} = offsetA${O} / 4u;
            let indexB${O} = offsetB${O} / 4u;
            let componentA${O} = offsetA${O} % 4u;
            let componentB${O} = offsetB${O} % 4u;
            ${A}[${O}] = ${k}(${h(L,W)});
          `};d===9?T=`
            var data = vec4<u32>(0);
            ${x("data",0,"u32")}
            ${x("data",1,"u32")}
            ${x("data",2,"u32")}
            ${x("data",3,"u32")}
            outputData[global_idx] = dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(data));`:T=`
            ${x("outputData[global_idx]",0)}
            ${x("outputData[global_idx]",1)}
            ${x("outputData[global_idx]",2)}
            ${x("outputData[global_idx]",3)}
          `}return`
        ${r.registerUniform("vec_size","u32").declareVariables(v,$,b)}

        ${p??""}

        ${r.mainStart()}
        ${r.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}
        ${T}
      }`},D2=(r,e,n,t,o,i,s=n.dataType)=>{let a=!F.areEqual(n.dims,t.dims),u=n.dims,l=F.size(n.dims),d=!1,p=!1,h=[a];if(a){let g=Ar.calcShape(n.dims,t.dims,!1);if(!g)throw new Error("Can't perform binary op on the given tensors");u=g,l=F.size(u);let b=F.size(n.dims)===1,v=F.size(t.dims)===1,$=n.dims.length>0&&n.dims[n.dims.length-1]%4===0,T=t.dims.length>0&&t.dims[t.dims.length-1]%4===0;h.push(b),h.push(v),h.push($),h.push(T);let x=1;for(let A=1;A<u.length;A++){let O=n.dims[n.dims.length-A]??1,k=t.dims[t.dims.length-A]??1;if(O===k)x*=O;else break}x%4===0?(p=!0,d=!0):(b||v||$||T)&&(d=!0)}else d=!0;return h.push(d),{name:r,shaderCache:{hint:e+h.map(g=>g.toString()).join("_"),inputDependencies:["rank","rank"]},getShaderSource:g=>k2(g,n.dims,t.dims,u,d,a,p,o,n.dataType,t.dataType,s,i),getRunData:()=>({outputs:[{dims:u,dataType:s}],dispatchGroup:{x:Math.ceil(l/64/4)},programUniforms:[{type:12,data:Math.ceil(F.size(u)/4)},...ne(n.dims,t.dims,u)]})}},kr=(r,e,n,t,o,i)=>{r.compute(D2(e,o??"",r.inputs[0],r.inputs[1],n,t,i))},Cg=r=>{kr(r,"Add",(e,n)=>`${e}+${n}`)},Pg=r=>{kr(r,"Div",(e,n)=>`${e}/${n}`)},kg=r=>{kr(r,"Equal",{scalar:(e,n)=>`u32(${e}==${n})`,vector:(e,n)=>`vec4<u32>(${e}==${n})`},void 0,void 0,9)},Dg=r=>{kr(r,"Mul",(e,n)=>`${e}*${n}`)},Bg=r=>{let e=G("input",r.inputs[0].dataType,r.inputs[0].dims).type.value;kr(r,"Pow",{scalar:(t,o)=>`pow_custom(${t},${o})`,vector:(t,o)=>`pow_vector_custom(${t},${o})`},`
    fn pow_custom(a : ${e}, b : ${e}) -> ${e} {
      if (b == ${e}(0.0)) {
        return ${e}(1.0);
      } else if (a < ${e}(0.0) && f32(b) != floor(f32(b))) {
        return ${e}(pow(f32(a), f32(b))); // NaN
      }
      return select(sign(a), ${e}(1.0), round(f32(abs(b) % ${e}(2.0))) != 1.0) * ${e}(${e==="i32"?"round":""}(pow(f32(abs(a)), f32(b))));
    }
    fn pow_vector_custom(a : vec4<${e}>, b : vec4<${e}>) -> vec4<${e}> {
      // TODO: implement vectorized pow
      return vec4<${e}>(pow_custom(a.x, b.x), pow_custom(a.y, b.y), pow_custom(a.z, b.z), pow_custom(a.w, b.w));
    }
      `)},Rg=r=>{kr(r,"Sub",(e,n)=>`${e}-${n}`)},zg=r=>{kr(r,"Greater",{scalar:(e,n)=>`u32(${e}>${n})`,vector:(e,n)=>`vec4<u32>(${e}>${n})`},void 0,void 0,9)},Mg=r=>{kr(r,"Less",{scalar:(e,n)=>`u32(${e}<${n})`,vector:(e,n)=>`vec4<u32>(${e}<${n})`},void 0,void 0,9)},Lg=r=>{kr(r,"GreaterOrEqual",{scalar:(e,n)=>`u32(${e}>=${n})`,vector:(e,n)=>`vec4<u32>(${e}>=${n})`},void 0,void 0,9)},Ng=r=>{kr(r,"LessOrEqual",{scalar:(e,n)=>`u32(${e}<=${n})`,vector:(e,n)=>`vec4<u32>(${e}<=${n})`},void 0,void 0,9)}});var R2,z2,M2,L2,Fg,Gg,Ug=B(()=>{"use strict";Ie();Me();Ct();De();R2=r=>{if(!r||r.length<1)throw new Error("too few inputs");let e=r[0].dataType,n=r[0].dims.length;for(let t of r){if(t.dataType!==e)throw new Error("input tensors should be one type");if(t.dims.length!==n)throw new Error("input tensors should have the same shape")}},z2=(r,e)=>`
  fn calculateInputIndex(index: u32) -> u32 {
    let sizeInConcatAxis = array<u32, ${r}u>(${e});
    for (var i: u32 = 0u; i < ${r}; i += 1u ) {
      if (index < sizeInConcatAxis[i]) {
        return i;
      }
    }
    return ${r}u;
  }`,M2=(r,e)=>{let n=r.length,t=[];for(let o=0;o<n;++o){let i=e.setByOffset("global_idx",r[o].getByIndices("indices"));n===1?t.push(i):o===0?t.push(`if (inputIndex == ${o}u) { ${i} }`):o===n-1?t.push(`else { ${i} }`):t.push(`else if (inputIndex == ${o}) { ${i} }`)}return t.join(`
`)},L2=(r,e)=>{let n=0,t=0,o=new Array(r.length);for(let O=0;O<r.length;O++){let k=F.size(r[O].dims);o[O]=k,k>n&&(n=k,t=O)}let i=r[t].dims.slice();if(e>=i.length||e<-1*i.length)throw new Error("axis specified for concat doesn't match input dimensionality");let s=e<0?i.length+e:e,a=i.slice(0);for(let O=0;O<r.length;O++){if(O===t)continue;let k=r[O].dims.slice();for(let L=0;L<i.length;L++)if(L===s)a[s]+=k[L];else if(i[L]!==k[L])throw new Error("non concat dimensions must match")}let u=F.size(a),l=new Array(r.length),d=new Array(r.length),p=r[0].dataType,h=0,g=[],b=[],v=[{type:12,data:u}];for(let O=0;O<r.length;++O)h+=r[O].dims[s],l[O]=h,b.push(r[O].dims.length),d[O]=G(`input${O}`,p,b[O]),g.push("rank"),v.push({type:12,data:l[O]});for(let O=0;O<r.length;++O)v.push(...ne(r[O].dims));v.push(...ne(a));let $=Q("output",p,a.length),T=$.indicesGet("indices",s),x=Array.from(Array(l.length).keys()).map(O=>`uniforms.sizeInConcatAxis${O}`).join(","),A=O=>`

  ${(()=>{O.registerUniform("outputSize","u32");for(let k=0;k<r.length;k++)O.registerUniform(`sizeInConcatAxis${k}`,"u32");return O.declareVariables(...d,$)})()}

  ${z2(l.length,x)}

  ${O.mainStart()}
    ${O.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}

    var indices = ${$.offsetToIndices("global_idx")};

    let inputIndex = calculateInputIndex(${T});
    if (inputIndex != 0u) {
      let sizeInConcatAxis = array<u32, ${l.length}u>(${x});
      ${T} -= sizeInConcatAxis[inputIndex - 1u];
    }

    ${M2(d,$)}
  }`;return{name:"Concat",shaderCache:{hint:`${e}`,inputDependencies:g},getRunData:()=>({outputs:[{dims:a,dataType:r[0].dataType}],dispatchGroup:{x:Math.ceil(u/64)},programUniforms:v}),getShaderSource:A}},Fg=(r,e)=>{R2(r.inputs);for(let n=0;n<r.inputs.length;n++)F.size(r.inputs[n].dims)===0&&r.inputs.slice(n,1);r.compute(L2(r.inputs,e.axis))},Gg=r=>ze({axis:r.axis})});var Dr,Br,Rr,Va,Jr=B(()=>{"use strict";Ie();Me();Dr=(r,e,n="f32")=>{switch(r.activation){case"Relu":return`value = max(value, ${e}(0.0));`;case"Sigmoid":return`value = (${e}(1.0) / (${e}(1.0) + exp(-value)));`;case"Clip":return`value = clamp(value, ${e}(${n}(uniforms.clip_min)), ${e}(${n}(uniforms.clip_max)));`;case"HardSigmoid":return`value = max(${e}(0.0), min(${e}(1.0), ${n}(uniforms.alpha) * value + ${n}(uniforms.beta)));`;case"LeakyRelu":return`value = select(${n}(uniforms.alpha) * value, value, value >= ${e}(0.0));`;case"":return"";default:throw new Error(`Unsupported activation ${r.activation}`)}},Br=(r,e)=>{r.activation==="Clip"?e.push({type:1,data:r.clipMax},{type:1,data:r.clipMin}):r.activation==="HardSigmoid"?e.push({type:1,data:r.alpha},{type:1,data:r.beta}):r.activation==="LeakyRelu"&&e.push({type:1,data:r.alpha})},Rr=(r,e)=>{r.activation==="Clip"?e.push({name:"clip_max",type:"f32"},{name:"clip_min",type:"f32"}):r.activation==="HardSigmoid"?e.push({name:"alpha",type:"f32"},{name:"beta",type:"f32"}):r.activation==="LeakyRelu"&&e.push({name:"alpha",type:"f32"})},Va=r=>{let e=r?.activation||"";if(e==="HardSigmoid"){let[n,t]=r?.activation_params||[.2,.5];return{activation:e,alpha:n,beta:t}}else if(e==="Clip"){let[n,t]=r?.activation_params||[Ca,Pa];return{activation:e,clipMax:t,clipMin:n}}else if(e==="LeakyRelu"){let[n]=r?.activation_params||[.01];return{activation:e,alpha:n}}return{activation:e}}});var Ot,Fa,Ga=B(()=>{"use strict";Ot=(r,e)=>{switch(r){case 1:return e;case 2:return`vec2<${e}>`;case 3:return`vec3<${e}>`;case 4:return`vec4<${e}>`;default:throw new Error(`${r}-component is not supported.`)}},Fa=r=>`
      ${r?"value = value + getBiasByOutputCoords(coords);":""}
      `});var Ua,Ru=B(()=>{"use strict";Ua=r=>`
fn getIndexFromCoords4D(coords : vec4<i32>, shape : vec4<i32>) -> i32 {
  return dot(coords, vec4<i32>(
      shape.y * shape.z * shape.w, shape.z * shape.w, shape.w, 1));
}
fn getOutputIndexFromCoords(coords : vec4<i32>) -> i32 {
  return dot(coords, vec4<i32>(
    i32(${r}.x), i32(${r}.y), i32(${r}.z), 1));
}
`});var N2,V2,jo,Wg,F2,Ko,G2,Wa,Yo=B(()=>{"use strict";Ie();Me();De();Jr();Ga();N2=(r,e)=>r?`
        mm_Asub[inputRow][inputCol] = mm_readA(batch,
          kStart + inputRow,
          globalRowStart / innerElementSize + inputCol${e?", batchIndices":""});
        `:`
        mm_Asub[inputRow][inputCol] = mm_readA(batch,
          globalRow + innerRow,
          kStart / innerElementSize + inputCol${e?", batchIndices":""});
        `,V2=(r,e)=>r?`
        let ACached0 = mm_Asub[k * innerElementSize][localRow];
        let ACached1 = mm_Asub[k * innerElementSize + 1][localRow];
        let ACached2 = mm_Asub[k * innerElementSize + 2][localRow];
        ${e===3?"":"let ACached3 = mm_Asub[k * innerElementSize + 3][localRow];"}
        for (var i = 0; i < rowPerThread; i = i + 1) {
          acc[i] = BCached0 * ACached0[i] + acc[i];
          acc[i] = BCached1 * ACached1[i] + acc[i];
          acc[i] = BCached2 * ACached2[i] + acc[i];
          ${e===3?"":"acc[i] = BCached3 * ACached3[i] + acc[i];"}
        }`:`
        for (var i = 0; i < rowPerThread; i = i + 1) {
          let ACached = mm_Asub[tileRow + i][k];
          acc[i] = BCached0 * ACached.x + acc[i];
          acc[i] = BCached1 * ACached.y + acc[i];
          acc[i] = BCached2 * ACached.z + acc[i];
          ${e===3?"":"acc[i] = BCached3 * ACached.w + acc[i];"}
        }`,jo=(r,e,n="f32",t,o=!1,i=32,s=!1,a=32)=>{let u=e[1]*r[1],l=e[0]*r[0],d=o?u:i,p=o?i:u,h=d/e[0],g=i/e[1];if(!((o&&h===4&&r[1]===4||!o&&(h===3||h===4))&&d%e[0]===0&&i%e[1]===0&&r[0]===4))throw new Error(`If transposeA ${o} is true, innerElementSize ${h} and workPerThread[1] ${r[1]} must be 4.
      Otherwise, innerElementSize ${h} must be 3 or 4.
  tileAWidth ${d} must be divisible by workgroupSize[0]${e[0]}. tileInner ${i} must be divisible by workgroupSize[1] ${e[1]}. colPerThread ${r[0]} must be 4.`);return`
var<workgroup> mm_Asub: array<array<vec${h}<${n}>, ${d/h}>, ${p}>;
var<workgroup> mm_Bsub: array<array<vec4<${n}>, ${l/r[0]}>, ${i}>;

const rowPerThread = ${r[1]};
const colPerThread = ${r[0]};
const innerElementSize = ${h};
const tileInner = ${i};

@compute @workgroup_size(${e[0]}, ${e[1]}, ${e[2]})
fn main(@builtin(local_invocation_id) localId : vec3<u32>,
        @builtin(global_invocation_id) globalId : vec3<u32>,
        @builtin(workgroup_id) workgroupId : vec3<u32>) {
  let localRow = i32(localId.y);
  let tileRow = localRow * rowPerThread;
  let tileCol = i32(localId.x);

  let globalRow =i32(globalId.y) * rowPerThread;
  let globalCol = i32(globalId.x);
  let batch = ${s?"0":"i32(globalId.z)"};
  ${t?`let batchIndices = ${t.offsetToIndices("u32(batch)")};`:""}
  let globalRowStart = i32(workgroupId.y) * ${u};

  let num_tiles = ${s?`${Math.ceil(a/i)}`:"(uniforms.dim_inner - 1) / tileInner + 1"};
  var kStart = ${s?`i32(globalId.z) * ${a}`:"0"};

  var acc: array<vec4<${n}>, rowPerThread>;

  // Loop over shared dimension.
  let tileRowB = localRow * ${g};
  for (var t = 0; t < num_tiles; t = t + 1) {
      // Load one tile of A into local memory.
      for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
          let inputRow = tileRow + innerRow;
          let inputCol = tileCol;
          ${N2(o,t)}
      }

      // Load one tile of B into local memory.
      for (var innerRow = 0; innerRow < ${g}; innerRow = innerRow + 1) {
          let inputRow = tileRowB + innerRow;
          let inputCol = tileCol;
          mm_Bsub[inputRow][inputCol] = mm_readB(batch, kStart + inputRow, globalCol${t?", batchIndices":""});
      }
      kStart = kStart + tileInner;
      workgroupBarrier();

      // Compute acc values for a single thread.
      for (var k = 0; k < tileInner / innerElementSize; k = k + 1) {
          let BCached0 = mm_Bsub[k * innerElementSize][tileCol];
          let BCached1 = mm_Bsub[k * innerElementSize + 1][tileCol];
          let BCached2 = mm_Bsub[k * innerElementSize + 2][tileCol];
          ${h===3?"":"let BCached3 = mm_Bsub[k * innerElementSize + 3][tileCol];"}

          ${V2(o,h)}
      }

      workgroupBarrier();
  }

  for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
      mm_write(batch, globalRow + innerRow, globalCol, acc[innerRow]);
  }
}`},Wg=(r,e)=>r?`
            mm_Asub[inputRow][inputCol] = mm_readA(batch,
              kStart + inputRow,
              globalRowStart + inputCol${e?", batchIndices":""});
            `:`
            mm_Asub[inputRow][inputCol] = mm_readA(batch,
              globalRowStart + inputRow,
              kStart + inputCol${e?", batchIndices":""});
            `,F2=r=>r?"let ACached = mm_Asub[k][tileRow + innerRow];":"let ACached = mm_Asub[tileRow + innerRow][k];",Ko=(r,e,n="f32",t,o=!1,i=32,s=!1,a=32,u=!1)=>{let l=r[1]*e[1],d=r[0]*e[0],p=o?l:i,h=o?i:l;if(!(h%e[1]===0&&p%e[0]===0&&i%e[1]===0))throw new Error(`tileAHight ${h} must be divisible by workgroupSize[1]${e[1]}, tileAWidth ${p} must be divisible by workgroupSize[0]${e[0]}, tileInner ${i} must be divisible by workgroupSize[1]${e[1]}`);let g=h/e[1],b=p/e[0],v=i/e[1],$=u?`
    let localRow = i32(localId.y);
    let localCol = i32(localId.x);
    let globalRowStart = i32(workgroupId.y) * ${l};
    let globalColStart = i32(workgroupId.x) * ${d};

    // Loop over shared dimension.
    for (var t = 0; t < num_tiles; t = t + 1) {
      // Load one tile of A into local memory.
      for (var inputRow = localRow; inputRow < ${h}; inputRow = inputRow + ${e[1]}) {
        for (var inputCol = localCol; inputCol < ${p}; inputCol = inputCol + ${e[0]}) {
          ${Wg(o,t)}
        }
      }
      // Load one tile of B into local memory.
      for (var inputRow = localRow; inputRow < ${i}; inputRow = inputRow + ${e[1]}) {
            for (var inputCol = localCol; inputCol < ${d}; inputCol = inputCol + ${e[0]}) {
          mm_Bsub[inputRow][inputCol] = mm_readB(batch,
            kStart + inputRow,
            globalColStart + inputCol${t?", batchIndices":""});
        }
      }
      kStart = kStart + tileInner;
      workgroupBarrier();

      // Compute acc values for a single thread.
      var BCached : array<${n}, colPerThread>;
      for (var k = 0; k < tileInner; k = k + 1) {
        for (var inner = 0; inner < colPerThread; inner = inner + 1) {
          BCached[inner] = mm_Bsub[k][localCol + inner * ${e[0]}];
        }
        for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
          let ACached = ${o?`mm_Asub[k][localRow + innerRow * ${e[1]}];`:`mm_Asub[localRow + innerRow * ${e[1]}][k];`}
          for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
            acc[innerRow][innerCol] = acc[innerRow][innerCol] +
                ACached * BCached[innerCol];
          }
        }
      }
      workgroupBarrier();
    }
    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
      let gRow = globalRowStart + localRow + innerRow * ${e[1]};
      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
        let gCol = globalColStart + localCol + innerCol * ${e[0]};
        mm_write(batch, gRow, gCol, acc[innerRow][innerCol]);
      }
    }
    `:`
let tileRow = i32(localId.y) * rowPerThread;
let tileCol = i32(localId.x) * colPerThread;

let globalRow = i32(globalId.y) * rowPerThread;
let globalCol = i32(globalId.x) * colPerThread;
let globalRowStart = i32(workgroupId.y) * ${l};

let tileRowA = i32(localId.y) * ${g};
let tileColA = i32(localId.x) * ${b};
let tileRowB = i32(localId.y) * ${v};
// Loop over shared dimension.
for (var t = 0; t < num_tiles; t = t + 1) {
  // Load one tile of A into local memory.
  for (var innerRow = 0; innerRow < ${g}; innerRow = innerRow + 1) {
    for (var innerCol = 0; innerCol < ${b}; innerCol = innerCol + 1) {
      let inputRow = tileRowA + innerRow;
      let inputCol = tileColA + innerCol;
      ${Wg(o,t)}
    }
  }

  // Load one tile of B into local memory.
  for (var innerRow = 0; innerRow < ${v}; innerRow = innerRow + 1) {
    for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
      let inputRow = tileRowB + innerRow;
      let inputCol = tileCol + innerCol;
      mm_Bsub[inputRow][inputCol] = mm_readB(batch,
        kStart + inputRow,
        globalCol + innerCol${t?", batchIndices":""});
    }
  }
  kStart = kStart + tileInner;
  workgroupBarrier();

  // Compute acc values for a single thread.
  var BCached : array<${n}, colPerThread>;
  for (var k = 0; k < tileInner; k = k + 1) {
    for (var inner = 0; inner < colPerThread; inner = inner + 1) {
      BCached[inner] = mm_Bsub[k][tileCol + inner];
    }

    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
      ${F2(o)}
      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
        acc[innerRow][innerCol] = acc[innerRow][innerCol] + ACached * BCached[innerCol];
      }
    }
  }

  workgroupBarrier();
}

for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
  for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
    mm_write(batch, globalRow + innerRow, globalCol + innerCol,
        acc[innerRow][innerCol]);
  }
}
`;return`
  var<workgroup> mm_Asub : array<array<${n}, ${p}>, ${h}>;
  var<workgroup> mm_Bsub : array<array<${n}, ${d}>, ${i}>;
  const rowPerThread = ${r[1]};
  const colPerThread = ${r[0]};
  const tileInner = ${i};

@compute @workgroup_size(${e[0]}, ${e[1]}, ${e[2]})
fn main(@builtin(local_invocation_id) localId : vec3<u32>,
        @builtin(global_invocation_id) globalId : vec3<u32>,
        @builtin(workgroup_id) workgroupId : vec3<u32>) {
    let batch = ${s?"0":"i32(globalId.z)"};
    ${t?`let batchIndices = ${t.offsetToIndices("u32(batch)")};`:""}
    let num_tiles = ${s?`${Math.ceil(a/i)}`:"(uniforms.dim_inner - 1) / tileInner + 1"};
    var kStart = ${s?`i32(globalId.z) * ${a}`:"0"};

    var acc : array<array<${n}, colPerThread>, rowPerThread>;

    // Without this initialization strange values show up in acc.
    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
        acc[innerRow][innerCol] = 0.0;
      }
    }
    ${$}
  }
`},G2=(r,e,n,t,o,i=!1)=>{let[s,a,u]=o,[l,d,p,h]=t,g=Qn(s,u),b=Qn(a,u),v=ot(t[0].type.tensor),$=()=>{let A=d.rank,O=l.rank,k=`var aIndices: ${d.type.indices};`;for(let L=A-2-1,W=O-1;L>=0;L--,W--)k+=`
aIndices[${L}] = ${O>1?`batchIndices[${W}]`:"batchIndices"};`;return g.forEach(L=>{k+=`
aIndices[${L}] = 0;`}),k+=`
aIndices[${A-2}] = u32(row);
                   aIndices[${A-1}] = u32(colIn);`,k},T=()=>{let A=p.rank,O=l.rank,k=`var bIndices: ${p.type.indices};`;for(let L=A-2-1,W=O-1;L>=0;L--,W--)k+=`
bIndices[${L}] = ${O>1?`batchIndices[${W}]`:"batchIndices"};`;return b.forEach(L=>{k+=`
bIndices[${L}] = 0;`}),k+=`
bIndices[${A-2}] = u32(row);
                   bIndices[${A-1}] = u32(colIn);`,k};return`
    fn mm_readA(batch: i32, row: i32, colIn: i32, batchIndices: ${l.type.indices}) -> ${Ot(r,v)} {
      var value = ${Ot(r,v)}(0.0);
      let col = colIn * ${r};
      if(row < uniforms.dim_a_outer && col < uniforms.dim_inner)
      {
        ${$()}
        value = ${d.getByIndices("aIndices")};
      }
      return value;
    }

    fn mm_readB(batch: i32, row: i32, colIn: i32, batchIndices: ${l.type.indices}) -> ${Ot(r,v)} {
      var value = ${Ot(r,v)}(0.0);
      let col = colIn * ${r};
      if(row < uniforms.dim_inner && col < uniforms.dim_b_outer)
      {
        ${T()}
        value = ${p.getByIndices("bIndices")};
      }
      return value;
    }

    fn mm_write(batch: i32, row: i32, colIn: i32, valueIn: ${Ot(r,v)}) {
      let col = colIn * ${r};
      if (row < uniforms.dim_a_outer && col < uniforms.dim_b_outer) {
        var value = valueIn;
        let coords = vec3<i32>(batch, row, colIn);
        ${e?`value = value + ${i?"bias[colIn]":`${Ot(r,v)}(bias[row])`};`:""}
        ${n}
        ${h.setByIndices("vec3<u32>(coords)","value")}
      }
    }
    `},Wa=(r,e,n,t,o=!1)=>{let i=r[0].dims,s=r[1].dims,a=i.slice(0,-2),u=s.slice(0,-2),l=t?t.slice(0,-2):n.slice(0,-2),d=F.size(l),p=i[i.length-2],h=i[i.length-1],g=s[s.length-1],b=h%4===0&&g%4===0,v=p<=8?[4,1,1]:[4,4,1],$=[8,8,1],T=[Math.ceil(g/$[0]/v[0]),Math.ceil(p/$[1]/v[1]),Math.ceil(d/$[2]/v[2])],x=b?4:1,A=[...a,p,h/x],O=A.length,k=[...u,h,g/x],L=k.length,W=[d,p,g/x],J=[{type:6,data:p},{type:6,data:g},{type:6,data:h}];Br(e,J),J.push(...ne(l,A,k));let se=["rank","rank"],R=r.length>2;R&&(J.push(...ne(r[2].dims)),se.push("rank")),J.push(...ne(W));let H=Be=>{let Je=l.length,Qe=Da("batchDims",r[0].dataType,Je,1),Re=ot(r[0].dataType),q=G("a",r[0].dataType,O,x),et=G("b",r[1].dataType,L,x),Ce=Q("result",r[0].dataType,W.length,x),Ae=[q,et];if(R){let Y=o?x:1;Ae.push(G("bias",r[2].dataType,r[2].dims.length,Y))}let Te=[{name:"dim_a_outer",type:"i32"},{name:"dim_b_outer",type:"i32"},{name:"dim_inner",type:"i32"}];Rr(e,Te);let Le=ot(Ce.type.tensor),Ge=Dr(e,Ce.type.value,Le),ft=G2(x,R,Ge,[Qe,q,et,Ce],[a,u,l],o);return`
  ${Be.registerUniforms(Te).registerInternalVariables(Qe).declareVariables(...Ae,Ce)}
  ${ft}
  ${b?jo(v,$,Re,Qe):Ko(v,$,Re,Qe)}
                   `};return{name:"MatMul",shaderCache:{hint:`${v};${e.activation};${b};${o}`,inputDependencies:se},getRunData:()=>({outputs:[{dims:n,dataType:r[0].dataType}],dispatchGroup:{x:T[0],y:T[1],z:T[2]},programUniforms:J}),getShaderSource:H}}});var U2,Hg,qg=B(()=>{"use strict";Ie();Zr();De();Jr();Ga();Ru();Yo();U2=(r,e,n,t,o=!1,i,s=4,a=4,u=4,l="f32")=>{let d=R=>{switch(R){case 1:return"resData = x[xIndex];";case 3:return`resData = vec3<${l}>(x[xIndex], x[xIndex + 1], x[xIndex + 2]);`;case 4:return"resData = x[xIndex / 4];";default:throw new Error(`innerElementSize ${R} is not supported.`)}},p=R=>{switch(R){case 1:return"return w[row * i32(uniforms.w_shape[3]) + colIn];";case 4:return"return w[row * i32(uniforms.w_shape[3]) / 4 + colIn];";default:throw new Error(`innerElementSize ${R} is not supported.`)}},h=r?`
    let coord = vec4<i32>(batch, xRow, xCol, xCh);
    `:`
    let coord = vec4<i32>(batch, xCh, xRow, xCol);
    `,g=r?`
    let coords = vec4<i32>(
      batch,
      row / outWidth,
      row % outWidth,
      col);
    `:`
    let coords = vec4<i32>(
      batch,
      row,
      col / outWidth,
      col % outWidth);
    `,b=r?"i32(uniforms.x_shape[1])":"i32(uniforms.x_shape[2])",v=r?"i32(uniforms.x_shape[2])":"i32(uniforms.x_shape[3])",$=r?"row":"col",T=r?"col":"row",x=`
    let inChannels = i32(uniforms.w_shape[2]);
    let outWidth = ${r?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};
    let outRow = ${$} / outWidth;
    let outCol = ${$} % outWidth;

    let WRow = ${T} / (i32(uniforms.w_shape[1]) * inChannels);
    let WCol = ${T} / inChannels % i32(uniforms.w_shape[1]);
    let xRow = outRow * uniforms.stride[0] + uniforms.dilation[0] * WRow - uniforms.pad[0];
    let xCol = outCol * uniforms.stride[1] + uniforms.dilation[1] * WCol - uniforms.pad[1];
    let xCh = ${T} % inChannels;
    var resData = ${Ot(s,l)}(0.0);
    // The bounds checking is always needed since we use it to pad zero for
    // the 'same' padding type.
    if (xRow >= 0 && xRow < ${b} && xCol >= 0 && xCol < ${v}) {
      ${h}
      let xIndex = getIndexFromCoords4D(coord, vec4<i32>(uniforms.x_shape));
      ${d(s)}
    }
    return resData;`,A=r?e&&t?`
    let col = colIn * ${s};
    ${x}`:`
    let col = colIn * ${s};
    if (row < uniforms.dim_a_outer && col < uniforms.dim_inner) {
      ${x}
    }
    return ${Ot(s,l)}(0.0);`:t&&n?`
    let col = colIn * ${s};
    ${x}`:`
    let col = colIn * ${s};
    if (row < uniforms.dim_inner && col < uniforms.dim_b_outer) {
      ${x}
    }
    return ${Ot(s,l)}(0.0);`,O=`${p(a)}`,k=Ot(u,l),L=r?Ot(s,l):Ot(a,l),W=r?Ot(a,l):Ot(s,l),J=Dr(i,k,l);return`
    fn mm_readA(batch: i32, row : i32, colIn : i32) -> ${L} {
      ${r?A:O}
    }

    fn mm_readB(batch: i32, row : i32, colIn : i32) -> ${W} {
      ${r?O:A}
    }

    fn mm_write(batch: i32, row : i32, colIn : i32, valueIn : ${k}) {
      let col = colIn * ${u};
      if (row < uniforms.dim_a_outer && col < uniforms.dim_b_outer)
      {
      var value = valueIn;
      let outWidth = ${r?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};
      ${g}
      ${Fa(o)}
      ${J}
      setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);
      }
    }`},Hg=(r,e,n,t,o,i,s,a)=>{let u=e.format==="NHWC",l=u?r[0].dims[3]:r[0].dims[1],d=n[0],p=u?n[2]:n[3],h=u?n[1]:n[2],g=u?n[3]:n[1],b=u&&(l%4===0||l%3===0)&&g%4===0,v=u?g:p*h,$=u?p*h:g,T=[8,8,1],x=t<=8?[4,1,1]:[4,4,1],A=[Math.ceil(v/T[0]/x[0]),Math.ceil($/T[1]/x[1]),Math.ceil(d/T[2]/x[2])];nt("verbose",()=>`[conv2d_mm_webgpu] dispatch = ${A}`);let O=b?u&&l%4!==0?3:4:1,k=T[1]*x[1],L=T[0]*x[0],W=Math.max(T[0]*O,T[1]),J=t%k===0,se=o%L===0,R=i%W===0,H=b?[O,4,4]:[1,1,1],Be=[{type:6,data:t},{type:6,data:o},{type:6,data:i},{type:6,data:[e.pads[0],e.pads[1]]},{type:6,data:e.strides},{type:6,data:e.dilations}];Br(e,Be),Be.push(...ne(r[0].dims,r[1].dims));let Je=["rank","rank"];s&&(Be.push(...ne(r[2].dims)),Je.push("rank")),Be.push(...ne(n));let Qe=Re=>{let q=[{name:"dim_a_outer",type:"i32"},{name:"dim_b_outer",type:"i32"},{name:"dim_inner",type:"i32"},{name:"pad",type:"i32",length:2},{name:"stride",type:"i32",length:2},{name:"dilation",type:"i32",length:2}];Rr(e,q);let et=b?4:1,Ce=ot(r[0].dataType),Ae=`
      fn setOutputAtIndex(flatIndex : i32, value : ${b?`vec4<${Ce}>`:Ce}) {
        result[flatIndex] = ${b?`vec4<${Ce}>`:Ce}(value);
      }
      fn setOutputAtCoords(d0 : i32, d1 : i32, d2 : i32, d3 : i32, value : ${b?`vec4<${Ce}>`:Ce}) {
        let flatIndex = getOutputIndexFromCoords(vec4<i32>(d0, d1, d2, d3));
        setOutputAtIndex(flatIndex ${b?"/ 4":""}, value);
      }`,Te=G("x",r[0].dataType,r[0].dims.length,O===3?1:O),Le=G("w",r[1].dataType,r[1].dims.length,et),Ge=[Te,Le],ft=Q("result",r[0].dataType,n.length,et);if(s){let Y=G("bias",r[2].dataType,r[2].dims.length,et);Ge.push(Y),Ae+=`
        fn getBiasByOutputCoords(coords : vec4<i32>) -> ${b?`vec4<${Ce}>`:Ce} {
          return bias[coords.${u?"w":"y"}${b?"/ 4":""}];
        }`}return`
        ${Ua("uniforms.result_strides")}
        //struct Uniforms { xShape : vec4<i32>, wShape : vec4<i32>, outShape : vec4<i32>,
        //  outShapeStrides: vec3<i32>, filterDims : vec2<i32>, pad : vec2<i32>, stride : vec2<i32>,
        //  dilation : vec2<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32 };
        ${Re.registerUniforms(q).declareVariables(...Ge,ft)}
        ${Ae}
        ${U2(u,J,se,R,s,e,H[0],H[1],H[2],Ce)}
        ${b?jo(x,T,Ce,void 0,!u,W):Ko(x,T,Ce,void 0,!u,W,!1,void 0,a)}`};return{name:"Conv2DMatMul",shaderCache:{hint:`${e.cacheKey};${O};${b};${J};${se};${R};${k};${L};${W}`,inputDependencies:Je},getRunData:()=>({outputs:[{dims:n,dataType:r[0].dataType}],dispatchGroup:{x:A[0],y:A[1],z:A[2]},programUniforms:Be}),getShaderSource:Qe}}});var zu,jg=B(()=>{"use strict";Ie();Me();De();Lu();Jr();zu=(r,e,n)=>{let t=r.length>2,o=t?"value += b[output_channel];":"",i=r[0].dims,s=r[1].dims,a=s[0]/e.group,u=e.format==="NHWC",l=Mu(i,s,e.dilations,e.pads,e.strides,u),d=F.size(l),p=[{type:12,data:d},{type:12,data:e.dilations},{type:12,data:[e.strides[0],e.strides[1]]},{type:12,data:[e.pads[0],e.pads[1]]},{type:12,data:a}];Br(e,p),p.push(...ne(i,s,l));let h=["rank","rank"];t&&(p.push(...ne(r[2].dims)),h.push("rank")),p.push(...ne(l));let g=b=>{let v=Q("output",r[0].dataType,l.length),$=ot(v.type.tensor),T=Dr(e,v.type.value,$),x=G("x",r[0].dataType,i.length),A=G("w",r[1].dataType,s.length),O=[x,A];t&&O.push(G("b",r[2].dataType,r[2].dims));let k=[{name:"output_size",type:"u32"},{name:"dilations",type:"u32",length:e.dilations.length},{name:"strides",type:"u32",length:2},{name:"pads",type:"u32",length:2},{name:"output_channels_per_group",type:"u32"}];return Rr(e,k),`
  ${b.registerUniforms(k).declareVariables(...O,v)}

  ${b.mainStart()}
    ${b.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

    let outputIndices = ${v.offsetToIndices("global_idx")};
    let batch: u32 = outputIndices[0];
    let output_channel: u32 = outputIndices[${u?3:1}];
    let xRCCorner: vec2<u32> = vec2<u32>(outputIndices[${u?1:2}], outputIndices[${u?2:3}]) * uniforms.strides - uniforms.pads;
    let group_id: u32 = output_channel / uniforms.output_channels_per_group;

    var value: ${v.type.value} = ${v.type.value}(0);
    for (var wInChannel: u32 = 0u; wInChannel < uniforms.w_shape[1]; wInChannel++) {
      let input_channel = group_id * uniforms.w_shape[1] + wInChannel;
      for (var wHeight: u32 = 0u; wHeight < uniforms.w_shape[2]; wHeight++) {
        let xHeight = xRCCorner.x + wHeight * uniforms.dilations[0];

        if (xHeight < 0u || xHeight >= uniforms.x_shape[${u?1:2}]) {
          continue;
        }

        for (var wWidth: u32 = 0u; wWidth < uniforms.w_shape[3]; wWidth++) {
          let xWidth = xRCCorner.y + wWidth * uniforms.dilations[1];
          if (xWidth < 0u || xWidth >= uniforms.x_shape[${u?2:3}]) {
            continue;
          }

          let xVal = ${u?x.get("batch","xHeight","xWidth","input_channel"):x.get("batch","input_channel","xHeight","xWidth")};
          let wVal = ${A.get("output_channel","wInChannel","wHeight","wWidth")};
          value += xVal*wVal;
        }
      }
    }
    ${o}
    ${T}
    ${v.setByOffset("global_idx","value")}
  }`};return{name:"GroupedConv",shaderCache:{hint:e.cacheKey,inputDependencies:h},getRunData:()=>({outputs:[{dims:n?n(l):l,dataType:r[0].dataType}],dispatchGroup:{x:Math.ceil(d/64)},programUniforms:p}),getShaderSource:g}}});var Nu,W2,Kg,Vu=B(()=>{"use strict";Ie();Me();Yo();De();Jr();Nu=(r,e,n,t,o=!1)=>{let i=r[0].dims,s=r[1].dims,a=i[i.length-2],u=s[s.length-1],l=i[i.length-1],d=xt(u),p=xt(l),h=xt(a),g=F.size(n)/d/h,b=r.length>2,v=t?t.slice(0,-2):n.slice(0,-2),T=[F.size(v),a,u],x=[{type:12,data:g},{type:12,data:a},{type:12,data:u},{type:12,data:l}];Br(e,x),x.push(...ne(v,i,s)),b&&x.push(...ne(r[2].dims)),x.push(...ne(T));let A=O=>{let k=Da("batch_dims",r[0].dataType,v.length),L=G("a",r[0].dataType,i.length,p),W=G("b",r[1].dataType,s.length,d),J=Q("output",r[0].dataType,T.length,d),se=ot(J.type.tensor),R=Dr(e,J.type.value,se),H=[L,W],Be="";if(b){let Te=o?d:1;H.push(G("bias",r[2].dataType,r[2].dims.length,Te)),Be=`${o?`value += bias[col / ${Te}];`:`value += ${J.type.value}(bias[row + i]);`}`}let Je=i.slice(0,-2),Qe=s.slice(0,-2),Re=Qn(Je,v),q=Qn(Qe,v),et=[{name:"output_size",type:"u32"},{name:"M",type:"u32"},{name:"N",type:"u32"},{name:"K",type:"u32"}];Rr(e,et);let Ce=(Te,Le)=>{let Ge=Te.rank,ft=Te.name;if(Ge===2)return`var ${ft}_indices = ${Te.type.indices}(0u, 0u);`;let Y=k.rank,pe=`var ${ft}_indices: ${Te.type.indices};`;for(let $e=Ge-2-1,Pt=Y-1;$e>=0;$e--,Pt--)pe+=`
${ft}_indices[${$e}] = ${Y>1?`batch_indices[${Pt}]`:"batch_indices"};`;return Le.forEach($e=>{pe+=`
${ft}_indices[${$e}] = 0;`}),pe+=`${ft}_indices[${Ge-2}] = 0u;
                     ${ft}_indices[${Ge-1}] = 0u;`,pe},Ae=()=>{let Te=`var a_data: ${L.type.value};`;for(let Le=0;Le<p;Le++)Te+=`
              let b_data${Le} = b[(b_offset + (k + ${Le}) * uniforms.N + col) / ${d}];`;for(let Le=0;Le<h;Le++){Te+=`a_data = a[(a_offset + (row + ${Le}) * uniforms.K + k) / ${p}];`;for(let Ge=0;Ge<p;Ge++)Te+=`
            values[${Le}] = fma(${W.type.value}(a_data${p===1?"":`[${Ge}]`}), b_data${Ge}, values[${Le}]);
`}return Te};return`
  ${O.registerUniforms(et).registerInternalVariables(k).declareVariables(...H,J)}
  ${O.mainStart()}
    ${O.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    let col = (global_idx % (uniforms.N / ${d})) * ${d};
    var index1 = global_idx / (uniforms.N / ${d});
    let stride1 = uniforms.M / ${h};
    let row = (index1 % stride1) * ${h};
    let batch = index1 / stride1;

    ${n.length===2?"":`let batch_indices = ${k.offsetToIndices("batch")};`}
    ${Ce(L,Re)}
    let a_offset = ${L.indicesToOffset("a_indices")};
    ${Ce(W,q)}
    let b_offset = ${W.indicesToOffset("b_indices")};
    var values: array<${J.type.value}, ${h}>;
    for (var k: u32 = 0u; k < uniforms.K; k = k + ${p}) {
      ${Ae()}
    }
    for (var i = 0u; i < ${h}u; i++) {
      var value = values[i];
      ${Be}
      ${R}
      let cur_indices = ${J.type.indices}(batch, row + i, col);
      let offset = ${J.indicesToOffset("cur_indices")};
      ${J.setByOffset(`offset / ${d}`,"value")};
    }
  }
  `};return{name:"MatMulNaive",shaderCache:{hint:`${e.activation};${d};${p};${h};${o}`,inputDependencies:b?["rank","rank","rank"]:["rank","rank"]},getRunData:()=>({outputs:[{dims:n,dataType:r[0].dataType}],dispatchGroup:{x:Math.ceil(g/64)},programUniforms:x}),getShaderSource:A}},W2=r=>{if(!r||r.length!==2)throw new Error("MatMul requires 2 inputs.");if(r[0].dims[r[0].dims.length-1]!==r[1].dims[r[1].dims.length-2])throw new Error("shared dimension does not match.")},Kg=r=>{W2(r.inputs);let e=Ar.calcShape(r.inputs[0].dims,r.inputs[1].dims,!0);if(!e)throw new Error("Can't use matmul on the given tensors");let n=e[e.length-1],t=r.inputs[0].dims[r.inputs[0].dims.length-1];n<8&&t<8?r.compute(Nu(r.inputs,{activation:""},e)):r.compute(Wa(r.inputs,{activation:""},e))}});var Mu,Yg,H2,Xg,Fu,q2,j2,Gu,Lu=B(()=>{"use strict";Me();qg();Yo();jg();Jr();Vu();eo();Mu=(r,e,n,t,o,i)=>{let s=r[0],a=r.slice(i?1:2,i?3:4),u=a.length,l=e[0],p=e.slice(2).map((b,v)=>b+(b-1)*(n[v]-1)),g=a.map((b,v)=>b+t[v]+t[v+u]).map((b,v)=>Math.floor((b-p[v]+o[v])/o[v]));return g.splice(0,0,s),g.splice(i?3:1,0,l),g},Yg=[2,3,1,0],H2=(r,e)=>{if(!r||r.length!==2&&r.length!==3)throw new Error("Conv requires 2 or 3 inputs");if(r[0].dims.length!==4&&r[0].dims.length!==3)throw new Error("currently only support conv 1D and 2D");if(r[0].dims.length!==r[1].dims.length)throw new Error("filter does not have same dimension as input");let n=r[0].dims[e.format==="NHWC"?r[0].dims.length-1:1],t=r[1].dims[1]*e.group;if(n!==t)throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");if(r.length===3&&(r[2].dims.length!==1||r[1].dims[0]!==r[2].dims[0]))throw new Error("invalid bias");let o=r[0].dims.length-2;if(e.dilations.length!==o)throw new Error(`dilations should be ${o}D`);if(e.strides.length!==o)throw new Error(`strides should be ${o}D`);if(e.pads.length!==o*2)throw new Error(`pads should be ${o*2}D`);if(e.kernelShape.length!==0&&e.kernelShape.length!==r[1].dims.length-2)throw new Error("invalid kernel shape")},Xg=(r,e)=>{let n=r.kernelShape.slice();for(let i=2;i<e[1].dims.length;++i)n[i-2]===0&&(n[i-2]=e[1].dims[i]);let t=r.pads.slice();Tn.adjustPadsBasedOnAutoPad(e[0].dims,r.strides,r.dilations,n,t,r.format==="NHWC",r.autoPad);let o=Object.assign({},r);return Object.assign(o,{kernelShape:n,pads:t}),o},Fu=r=>{let e=Va(r),n=r.format,t=["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][r.auto_pad],o=r.dilations,i=r.group,s=r.kernel_shape,a=r.pads,u=r.strides,l=r.w_is_const();return{autoPad:t,format:n,dilations:o,group:i,kernelShape:s,pads:a,strides:u,wIsConst:l,...e,cacheKey:`${r.format};${e.activation};`}},q2=(r,e,n)=>{let t=Xg(n,e),o=n.format==="NHWC";if(n.group!==1){r.compute(zu(e,t));return}let i=e.length===3,s=e[0].dims[o?1:2],a=e[0].dims[o?2:3],u=e[0].dims[o?3:1],l=e[1].dims[2],d=e[1].dims[3],p=Mu(e[0].dims,e[1].dims,n.dilations,t.pads,n.strides,o),h=p[o?1:2],g=p[o?2:3],b=p[o?3:1],v=o&&l===s&&d===a&&n.pads[0]===0&&n.pads[1]===0;if(v||l===1&&d===1&&n.dilations[0]===1&&n.dilations[1]===1&&n.strides[0]===1&&n.strides[1]===1&&n.pads[0]===0&&n.pads[1]===0){let L=p[0],W,J,se,R=[];if(o){let Je=r.kernelCustomData.wT??r.compute(gr(e[1],Yg),{inputs:[1],outputs:[n.wIsConst?-2:-1]})[0];if(n.wIsConst&&!r.kernelCustomData.wT&&(r.kernelCustomData.wT=Je),v){let Qe=s*a*u;W=e[0].reshape([1,L,Qe]),J=Je.reshape([1,Qe,b]),se=[1,L,b]}else W=e[0].reshape([L,s*a,u]),J=Je.reshape([1,u,b]),se=[L,h*g,b];R.push(W),R.push(J)}else W=e[0].reshape([L,u,s*a]),J=e[1].reshape([1,b,u]),se=[L,b,h*g],R.push(J),R.push(W);i&&R.push(e[2]);let H=se[2],Be=R[0].dims[R[0].dims.length-1];H<8&&Be<8?r.compute(Nu(R,t,p,se,o),{inputs:R}):r.compute(Wa(R,t,p,se,o),{inputs:R});return}let $=!0,T=r.kernelCustomData.wT??r.compute(gr(e[1],Yg),{inputs:[1],outputs:[n.wIsConst?-2:-1]})[0];n.wIsConst&&!r.kernelCustomData.wT&&(r.kernelCustomData.wT=T);let x=[e[0],T];i&&x.push(e[2]);let A=o?h*g:b,O=o?b:h*g,k=l*d*u;r.compute(Hg(x,t,p,A,O,k,i,$),{inputs:x})},j2=(r,e)=>{let n=e.format==="NHWC",t=[r.inputs[0].reshape(n?[r.inputs[0].dims[0],1,r.inputs[0].dims[1],r.inputs[0].dims[2]]:[r.inputs[0].dims[0],r.inputs[0].dims[1],1,r.inputs[0].dims[2]]),r.inputs[1].reshape([r.inputs[1].dims[0],r.inputs[1].dims[1],1,r.inputs[1].dims[2]])];r.inputs.length===3&&t.push(r.inputs[2]);let o=[0,e.pads[0],0,e.pads[1]],i=[1].concat(e.strides),s=[1].concat(e.dilations),a=[1].concat(e.kernelShape),u=Xg({...e,pads:o,strides:i,dilations:s,kernelShape:a},t);r.compute(zu(t,u,l=>n?[l[0],l[2],l[3]]:[]))},Gu=(r,e)=>{H2(r.inputs,e),r.inputs[0].dims.length===3?j2(r,e):q2(r,r.inputs,e)}});var K2,Zg,Jg=B(()=>{"use strict";Ie();Zr();De();Jr();Ga();Ru();Yo();K2=(r,e=!1,n,t=4)=>{let o=Ot(t,"f32"),i=T=>{switch(T){case 1:return"return w[getIndexFromCoords4D(coord, vec4<i32>(uniforms.w_shape))];";case 4:return`
            let coord1 = vec4<i32>(coordX, coordY, col + 1, rowInner);
            let coord2 = vec4<i32>(coordX, coordY, col + 2, rowInner);
            let coord3 = vec4<i32>(coordX, coordY, col + 3, rowInner);
            let v0 = w[getIndexFromCoords4D(coord, vec4<i32>(uniforms.w_shape))];
            let v1 = w[getIndexFromCoords4D(coord1, vec4<i32>(uniforms.w_shape))];
            let v2 = w[getIndexFromCoords4D(coord2, vec4<i32>(uniforms.w_shape))];
            let v3 = w[getIndexFromCoords4D(coord3, vec4<i32>(uniforms.w_shape))];
            return vec4<f32>(v0, v1, v2, v3);
            `;default:throw new Error(`innerElementSize ${T} is not supported.`)}},s=r?`
      let coord = vec4<i32>(batch, iXR, iXC, xCh);
      `:`
      let coord = vec4<i32>(batch, xCh, iXR, iXC);
      `,a=r?`
    let coords = vec4<i32>(
      batch,
      row / outWidth,
      row % outWidth,
      col);
    `:`
    let coords = vec4<i32>(
      batch,
      row,
      col / outWidth,
      col % outWidth);
    `,u=r?"i32(uniforms.x_shape[1])":"i32(uniforms.x_shape[2])",l=r?"i32(uniforms.x_shape[2])":"i32(uniforms.x_shape[3])",d=r?"row":"col",p=r?"col":"row",h=`
      let inChannels = ${r?"i32(uniforms.x_shape[3])":"i32(uniforms.x_shape[1])"};
      let outWidth = ${r?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};
      let outRow = ${d} / outWidth;
      let outCol = ${d} % outWidth;

      let WRow = ${p} / (uniforms.filter_dims[1] * inChannels);
      let WCol = ${p} / inChannels % uniforms.filter_dims[1];
      let xR = f32(outRow - uniforms.pads[0] + uniforms.dilations[0] * WRow) / f32(uniforms.strides[0]);
      let xC = f32(outCol - uniforms.pads[1] + uniforms.dilations[1] * WCol) / f32(uniforms.strides[1]);
      if (xR < 0.0 || xR >= f32(${u}) || fract(xR) > 0.0) {
        return ${o}(0.0);
      }
      if (xC < 0.0 || xC >= f32(${l}) || fract(xC) > 0.0) {
        return ${o}(0.0);
      }
      let iXR = i32(xR);
      let iXC = i32(xC);
      let xCh = ${p} % inChannels;
      ${s}
      return x[getIndexFromCoords4D(coord, vec4<i32>(uniforms.x_shape))/${t}];`,g=r?`
      let col = colIn * ${t};
      if (row < uniforms.dim_a_outer && col < uniforms.dim_inner) {
        ${h}
      }
      return ${o}(0.0);`:`
      let col = colIn * ${t};
      if (row < uniforms.dim_inner && col < uniforms.dim_b_outer) {
        ${h}
      }
      return ${o}(0.0);`,b=`
      let col = colIn * ${t};
      let inChannels = ${r?"i32(uniforms.x_shape[3])":"i32(uniforms.x_shape[1])"};
      let coordX = uniforms.filter_dims[0] - 1 - row / (uniforms.filter_dims[1] * inChannels);
      let coordY = uniforms.filter_dims[1] - 1 - (row / inChannels) % uniforms.filter_dims[1];
      if (${r?"row < uniforms.dim_inner && col < uniforms.dim_b_outer":"row < uniforms.dim_inner && col < uniforms.dim_a_outer"}  && coordX >= 0 && coordY >= 0) {
        let rowInner = row % inChannels;
        let coord = vec4<i32>(coordX, coordY, col, rowInner);
        ${i(t)}
      }
      return ${o}(0.0);
      `,v=Dr(n,o);return`
  fn mm_readA(batch: i32, row : i32, colIn : i32) -> ${o} {
    ${r?g:b}
  }

  fn mm_readB(batch: i32, row : i32, colIn : i32) -> ${o} {
    ${r?b:g}
  }

  fn mm_write(batch: i32, row : i32, colIn : i32, valueInput : ${o}) {
    let col = colIn * ${t};
    if (row < uniforms.dim_a_outer && col < uniforms.dim_b_outer) {
      var value = valueInput;
      let outWidth = ${r?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};
      ${a}
      ${Fa(e)}
      ${v}
      result[getIndexFromCoords4D(coords, vec4<i32>(uniforms.result_shape))/${t}] = value;
    }
  }`},Zg=(r,e,n,t,o,i,s,a)=>{let u=e.format==="NHWC",l=u?r[0].dims[3]:r[0].dims[1],d=n[0],p=u?n[2]:n[3],h=u?n[1]:n[2],g=u?n[3]:n[1],b=u?l%4===0&&g%4===0:p%4===0&&g%4===0,v=u?g:p*h,$=u?p*h:g,T=b?[8,8,1]:[v<=4||$<=4?4:16,v>4&&$<=4?4:16,1],x=b?[4,4,1]:[v<=4?1:4,v>4&&$<=4?1:4,1],A=[Math.ceil(v/T[0]/x[0]),Math.ceil($/T[1]/x[1]),Math.ceil(d/T[2]/x[2])];nt("verbose",()=>`[conv_backprop_mm_webgpu] dispatch = ${A}`);let O=b?4:1,k=Math.max(T[0]*O,T[1]),L=b?4:1,W=[e.kernelShape[u?1:2],e.kernelShape[u?2:3]],J=[W[0]+(e.dilations[0]<=1?0:(W[0]-1)*(e.dilations[0]-1)),W[1]+(e.dilations[1]<=1?0:(W[1]-1)*(e.dilations[1]-1))],se=[J[0]-1-Math.floor((e.pads[0]+e.pads[2])/2),J[1]-1-Math.floor((e.pads[1]+e.pads[3])/2)],R=[{type:6,data:t},{type:6,data:o},{type:6,data:i},{type:6,data:e.strides},{type:6,data:e.dilations},{type:6,data:W},{type:6,data:se}];Br(e,R),R.push(...ne(r[0].dims,r[1].dims));let H=["rank","rank"];s&&(R.push(...ne(r[2].dims)),H.push("rank")),R.push(...ne(n));let Be=Je=>{let Qe=G("x",r[0].dataType,r[0].dims.length,L),Re=G("w",r[1].dataType,r[1].dims.length,1),q=Q("result",r[0].dataType,n.length,L),et=[Qe,Re],Ce="";if(s){let Te=G("bias",r[2].dataType,r[2].dims.length,L);et.push(Te),Ce+=`
          fn getBiasByOutputCoords(coords : vec4<i32>) -> ${b?"vec4<f32>":"f32"} {
            return bias[coords.${u?"w":"y"}${b?"/ 4":""}];
          }`}let Ae=[{name:"dim_a_outer",type:"i32"},{name:"dim_b_outer",type:"i32"},{name:"dim_inner",type:"i32"},{name:"strides",type:"i32",length:2},{name:"dilations",type:"i32",length:2},{name:"filter_dims",type:"i32",length:W.length},{name:"pads",type:"i32",length:se.length}];return Rr(e,Ae),`
        ${Ua("uniforms.result_strides")}
        ${Je.registerUniforms(Ae).declareVariables(...et,q)};
        ${Ce}
        ${K2(u,s,e,O)}
        ${b?jo(x,T,"f32",void 0,!u,k):Ko(x,T,"f32",void 0,!u,k,!1,void 0,a)}`};return{name:"Conv2DTransposeMatMul",shaderCache:{hint:`${e.cacheKey};${x};${T};${b}`,inputDependencies:H},getRunData:()=>({outputs:[{dims:n,dataType:r[0].dataType}],dispatchGroup:{x:A[0],y:A[1],z:A[2]},programUniforms:R}),getShaderSource:Be}}});var Y2,Uu,Qg=B(()=>{"use strict";Ie();Zr();Me();De();Y2=(r,e,n,t,o,i=!1,s,a,u=!1)=>{let l=u?1:2,d=u?2:3,p=u?3:1,h=i?2:1,g=`
  fn setOutputAtIndex(flatIndex : u32, value : ${i?`vec4<${s}>`:s}) {
    result[flatIndex] = ${i?`vec4<${s}>`:s}(value);
  }`;t&&(g+=`
    fn getBiasByOutputCoords(coords : vec4<u32>) -> ${i?`vec4<${s}>`:s} {
      return bias[coords.${u?"w":"y"}${i?"/ 4":""}];
    }`);let b=i?4:1,v=G("W",e[1].dataType,e[1].dims.length,b),$=G("Dy",e[0].dataType,e[0].dims.length,b),T=[$,v];t&&T.push(G("bias",e[2].dataType,[n[p]].length,b));let x=Q("result",e[0].dataType,n.length,b),A=`{
        let batch: u32 = ${o?"global_id.z":"workgroup_id.z"} / uniforms.result_shape[1];
        let r = ${o?"global_id.z":"workgroup_id.z"} % uniforms.result_shape[1];
        let c = ${o?"global_id.y":"workgroup_id.y"} * ${h};
        let d1: u32 = ${o?"global_id.x":"workgroup_id.x"} * 4;

        let dyCorner = vec2<i32>(i32(r), i32(c)) - vec2<i32>(uniforms.pads);

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        var dotProd: array<vec4<${s}>, ${h}>;
        for (var i = 0; i < ${h}; i++) {
          dotProd[i] = vec4<${s}>(0.0);
        }
        for (var wR: u32 = 0; wR < uniforms.filter_dims[0]; wR = wR + 1) {
          var dyR = (${s}(dyCorner.x) + ${s}(wR)) / ${s}(uniforms.strides.x);
          let wRPerm = uniforms.filter_dims[0] - 1 - wR;
          if (dyR < 0.0 || dyR >= ${s}(uniforms.Dy_shape[1]) ||
              fract(dyR) > 0.0 || wRPerm < 0) {
            continue;
          }
          let idyR: u32 = u32(dyR);

          for (var wC: u32 = 0; wC < uniforms.filter_dims[1]; wC = wC + 1) {
            let dyC = (${s}(dyCorner.y) + ${s}(wC)) / ${s}(uniforms.strides.y);
            let dyC2 = (${s}(dyCorner.y) + 1.0 + ${s}(wC)) / ${s}(uniforms.strides.y);
            let wCPerm = uniforms.filter_dims[1] - 1 - wC;
            if (wCPerm < 0) {
              continue;
            }
            var bDyCVal = true;
            var bDyCVal2 = true;
            if (dyC < 0.0 || dyC >= ${s}(uniforms.Dy_shape[2]) ||
                fract(dyC) > 0.0) {
              bDyCVal = false;
            }
            if (dyC2 < 0.0 || dyC2 >= ${s}(uniforms.Dy_shape[2]) ||
                fract(dyC2) > 0.0) {
              bDyCVal2 = false;
            }

            let idyC: u32 = u32(dyC);
            let idyC2: u32 = u32(dyC2);
            if (bDyCVal && bDyCVal2) {
              let d2Length = uniforms.Dy_shape[3];
              for (var d2 :u32 = 0; d2 < d2Length; d2 = d2 + 4) {
                let wValue0 = ${v.get("u32(wRPerm)","u32(wCPerm)","d1","d2")};
                let wValue1 = ${v.get("u32(wRPerm)","u32(wCPerm)","d1 + 1","d2")};
                let wValue2 = ${v.get("u32(wRPerm)","u32(wCPerm)","d1 + 2","d2")};
                let wValue3 = ${v.get("u32(wRPerm)","u32(wCPerm)","d1 + 3","d2")};

                var xValue = ${$.get("batch","idyR","idyC","d2")};
                let tmpval = vec4<${s}>(dot(xValue, wValue0),
                                      dot(xValue, wValue1),
                                      dot(xValue, wValue2),
                                      dot(xValue, wValue3));
                dotProd[0] = dotProd[0] + tmpval;

                xValue =  ${$.get("batch","idyR","idyC2","d2")};

                dotProd[1] = dotProd[1] + vec4<${s}>(dot(xValue, wValue0),
                                                    dot(xValue, wValue1),
                                                    dot(xValue, wValue2),
                                                    dot(xValue, wValue3));
              }
            } else if (bDyCVal) {
              let d2Length = uniforms.Dy_shape[${p}];
              for (var d2: u32 = 0; d2 < d2Length; d2 = d2 + 4) {
                let wValue0 = ${v.get("u32(wRPerm)","u32(wCPerm)","d1","d2")};
                let wValue1 = ${v.get("u32(wRPerm)","u32(wCPerm)","d1 + 1","d2")};
                let wValue2 = ${v.get("u32(wRPerm)","u32(wCPerm)","d1 + 2","d2")};
                let wValue3 = ${v.get("u32(wRPerm)","u32(wCPerm)","d1 + 3","d2")};

                var xValue = ${$.get("batch","idyR","idyC","d2")};
                let tmpval = vec4<${s}>(dot(xValue, wValue0),
                                      dot(xValue, wValue1),
                                      dot(xValue, wValue2),
                                      dot(xValue, wValue3));
                dotProd[0] = dotProd[0] + tmpval;
              }
            } else if (bDyCVal2) {
              let d2Length = uniforms.Dy_shape[3];
              for (var d2: u32 = 0; d2 < d2Length; d2 = d2 + 4) {
                let wValue0 = ${v.get("u32(wRPerm)","u32(wCPerm)","d1","d2")};
                let wValue1 = ${v.get("u32(wRPerm)","u32(wCPerm)","d1 + 1","d2")};
                let wValue2 = ${v.get("u32(wRPerm)","u32(wCPerm)","d1 + 2","d2")};
                let wValue3 = ${v.get("u32(wRPerm)","u32(wCPerm)","d1 + 3","d2")};

                var xValue = ${$.get("batch","idyR","idyC2","d2")};
                let tmpval = vec4<${s}>(dot(xValue, wValue0),
                                      dot(xValue, wValue1),
                                      dot(xValue, wValue2),
                                      dot(xValue, wValue3));
                dotProd[1] = dotProd[1] + tmpval;
              }
            }
          }
        }

        for (var i: u32 = 0; i < ${h}; i = i + 1) {
          let value = dotProd[i] + ${t?"bias[c+i]":`vec4<${s}>(0.0)`};
          ${x.set("batch","r","c + i","d1","value")};
        }
      }`,O=`
          let outputIndices = ${x.offsetToIndices("global_idx")};
          let batch = ${x.indicesGet("outputIndices",0)};
          let d1 = ${x.indicesGet("outputIndices",p)};
          let r = ${x.indicesGet("outputIndices",l)};
          let c = ${x.indicesGet("outputIndices",d)};
          let dyCorner = vec2<i32>(i32(r), i32(c)) - uniforms.pads;
          let dyRCorner = dyCorner.x;
          let dyCCorner = dyCorner.y;
          let groupId = d1 / uniforms.output_channels_per_group;
          let wOutChannel = d1 - groupId * uniforms.output_channels_per_group;
          // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
          // ? = to be determined. : = across all values in that axis.
          var dotProd = ${s}(0.0);
          for (var wR: u32 = 0; wR < uniforms.effective_filter_dims.x; wR = wR + 1) {
            if (wR % uniforms.dilations.x != 0) {
              continue;
            }
            let dyR = (${s}(dyRCorner) + ${s}(wR)) / ${s}(uniforms.strides[0]);
            let wRPerm = uniforms.filter_dims.x - 1 - wR / uniforms.dilations.x;
            if (dyR < 0.0 || dyR >= ${s}(uniforms.Dy_shape[${l}]) || fract(dyR) > 0.0 ||
                wRPerm < 0) {
              continue;
            }
            let idyR: u32 = u32(dyR);

            for (var wC: u32 = 0; wC < uniforms.effective_filter_dims.y; wC = wC + 1) {
              if (wC % uniforms.dilations.y != 0) {
                continue;
              }
              let dyC = (${s}(dyCCorner) + ${s}(wC)) / ${s}(uniforms.strides.y);
              let wCPerm = uniforms.filter_dims.y - 1 - wC / uniforms.dilations.y;
              if (dyC < 0.0 || dyC >= ${s}(uniforms.Dy_shape[${d}]) ||
                  fract(dyC) > 0.0 || wCPerm < 0) {
                continue;
              }
              let idyC: u32 = u32(dyC);
              var inputChannel = groupId * uniforms.input_channels_per_group;
              for (var d2: u32 = 0; d2 < uniforms.input_channels_per_group; d2 = d2 + 1) {
                let xValue = ${u?$.get("batch","idyR","idyC","inputChannel"):$.get("batch","inputChannel","idyR","idyC")};
                let wValue = ${v.get("inputChannel","wOutChannel","u32(wRPerm)","u32(wCPerm)")};
                dotProd = dotProd + xValue * wValue;
                inputChannel = inputChannel + 1;
              }
            }
          }
          let value = dotProd + ${t?"bias[d1]":`${s}(0.0)`};
          ${x.setByOffset("global_idx","value")};
        `;return`
  ${r.registerUniforms(a).declareVariables(...T,x)}
  ${g}

    ${r.mainStart()}
    ${r.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")};
  ${i?A:O}}`},Uu=(r,e,n)=>{let t=r.length>2,o=e.outputShape,i=F.size(o),s=[Math.ceil(i/64),1,1];nt("verbose",()=>`[conv2d_backprop_webgpu] dispatch = ${s}`);let a=e.format==="NHWC",u=["rank","rank"],l=[e.strides[0],e.strides[1]],d=[e.kernelShape[a?1:2],e.kernelShape[a?2:3]],p=[e.dilations[0],e.dilations[1]],h=[d[0]+(e.dilations[0]<=1?0:(e.kernelShape[a?1:2]-1)*(e.dilations[0]-1)),d[1]+(e.dilations[1]<=1?0:(e.kernelShape[a?2:3]-1)*(e.dilations[1]-1))],g=[h[0]-1-Math.floor((e.pads[0]+e.pads[2])/2),h[1]-1-Math.floor(e.pads[1]+e.pads[3])/2],b=!1,v=e.group,$=r[1].dims,T=$[0]/v,x=$[1],A=[{type:6,data:i},{type:12,data:l},{type:12,data:d},{type:12,data:p},{type:12,data:h},{type:6,data:g},{type:12,data:T},{type:12,data:x},...ne(r[0].dims,r[1].dims)];t&&(A.push(...ne(r[2].dims)),u.push("rank")),A.push(...ne(o));let O=s[1]===1&&s[2]===1,k=L=>{let W=[{name:"output_size",type:"u32"},{name:"strides",type:"u32",length:l.length},{name:"filter_dims",type:"u32",length:d.length},{name:"dilations",type:"u32",length:d.length},{name:"effective_filter_dims",type:"u32",length:h.length},{name:"pads",type:"i32",length:g.length},{name:"input_channels_per_group",type:"u32"},{name:"output_channels_per_group",type:"u32"}],J=ot(r[0].dataType);return`${Y2(L,r,o,t,O,b,J,W,a)}`};return{name:"ConvTranspose2D",shaderCache:{hint:`${e.cacheKey};`,inputDependencies:u},getRunData:()=>({dispatchGroup:{x:s[0],y:s[1],z:s[2]},outputs:[{dims:n?n(o):o,dataType:r[0].dataType}],programUniforms:A}),getShaderSource:k}}});var X2,Z2,J2,eb,tb,Q2,e1,t1,r1,rb,nb=B(()=>{"use strict";Jg();Qg();Jr();eo();X2=(r,e,n,t,o,i)=>(r-1)*e+n+(t-1)*o+1-i,Z2=(r,e,n,t,o)=>{let i=Math.floor(r/2);e==="SAME_UPPER"?(n[t]=i,n[o]=r-i):e==="SAME_LOWER"&&(n[t]=r-i,n[o]=i)},J2=(r,e,n,t,o,i,s,a,u,l)=>{let d=r.length-2,p=l.length===0;if(u.length===0)for(let b=0;b<d;++b)u.push(0);let h=r[0],g=e[a?3:1]*o;for(let b=0,v=r.length-d-(a?1:0);b<d;++b,++v){let $=r[v],T=p?$*s[b]:l[b],x=X2($,s[b],i[b],e[v],n[b],T);Z2(x,t,i,b,b+d),p&&l.push(s[b]*($-1)+u[b]+(e[v]-1)*n[b]+1-i[b]-i[b+d])}l.splice(0,0,h),l.splice(a?3:1,0,g)},eb=(r,e)=>{let n=r.kernelShape.slice();if(r.kernelShape.length===0||r.kernelShape.reduce((p,h)=>p*h,1)===0){n.length=0;for(let p=2;p<e[1].dims.length;++p)n.push(e[1].dims[p])}let t=r.format==="NHWC";n.splice(0,0,e[1].dims[0]),n.splice(t?3:1,0,e[1].dims[1]);let o=r.pads.slice(),i=r.outputShape.slice(),s=r.outputPadding.slice(),a=e[0].dims,u=r.dilations.slice();if(u.reduce((p,h)=>p+h,0)===0){let p=e[0].dims.length-2;u=new Array(p).fill(1)}let l=r.strides.slice();if(l.reduce((p,h)=>p+h,0)===0){let p=e[0].dims.length-2;l=new Array(p).fill(1)}J2(a,n,u,r.autoPad,r.group,o,l,t,s,i);let d=Object.assign({},r);return Object.assign(d,{kernelShape:n,pads:o,outputPadding:s,outputShape:i,dilations:u,strides:l}),d},tb=r=>{let e=Va(r),n=r.format,t=["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][typeof r.autoPad>"u"?0:r.autoPad],o=r.dilations,i=r.group,s=r.kernelShape,a=r.pads,u=r.strides,l=r.wIsConst(),d=r.outputPadding,p=r.outputShape;return{autoPad:t,format:n,dilations:o,group:i,kernelShape:s,outputPadding:d,outputShape:p,pads:a,strides:u,wIsConst:l,...e,cacheKey:`${r.format};${e.activation};`}},Q2=(r,e)=>{if(!r||r.length!==2&&r.length!==3)throw new Error("Conv requires 2 or 3 inputs");if(r[0].dims.length!==4&&r[0].dims.length!==3)throw new Error("currently only support 2-dimensional conv");if(r[0].dims.length!==r[1].dims.length)throw new Error("filter does not have same dimension as input");let n=r[0].dims[e.format==="NHWC"?r[0].dims.length-1:1],t=r[1].dims[0];if(n!==t)throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");let o=r[1].dims[1]*e.group;if(r.length===3&&(r[2].dims.length!==1||r[2].dims[0]!==o))throw new Error("invalid bias");let i=r[0].dims.length-2;if(e.dilations.reduce((d,p)=>d+p,0)>0&&e.dilations.length!==i)throw new Error(`dilations should be ${i}D`);if(e.strides.reduce((d,p)=>d+p,0)>0&&e.strides.length!==i)throw new Error(`strides should be ${i}D`);if(e.pads.reduce((d,p)=>d+p,0)>0&&e.pads.length!==i*2)throw new Error(`pads should be ${i*2}D`);if(e.outputPadding.length!==i&&e.outputPadding.length!==0)throw new Error(`output_padding should be ${i}D`);if(e.kernelShape.reduce((d,p)=>d+p,0)>0&&e.kernelShape.length!==0&&e.kernelShape.length!==r[1].dims.length-2)throw new Error("invalid kernel shape");if(e.outputShape.length!==0&&e.outputShape.length!==r[0].dims.length-2)throw new Error("invalid output shape")},e1=[2,3,1,0],t1=(r,e,n)=>{let t=eb(n,e),o=n.format==="NHWC",i=t.outputShape,s=i[o?3:1],a=e[0].dims[o?3:1];if(t.group!==1||s===1&&a===1){r.compute(Uu(e,t));return}let u=i[o?1:2],l=i[o?2:3],d=e[1].dims[2],p=e[1].dims[3],h=o?u*l:s,g=o?s:u*l,b=d*p*a,v=!0,$=r.kernelCustomData.wT??r.compute(gr(e[1],e1),{inputs:[1],outputs:[n.wIsConst?-2:-1]})[0];n.wIsConst&&!r.kernelCustomData.wT&&(r.kernelCustomData.wT=$);let T=[e[0],$],x=e.length===3;x&&(!o&&e[2].dims.length===1?T.push(e[2].reshape([e[2].dims[0],1,1])):T.push(e[2])),r.compute(Zg(T,t,i,h,g,b,x,v),{inputs:T})},r1=(r,e)=>{let n=e.format==="NHWC",t=[r.inputs[0].reshape(n?[r.inputs[0].dims[0],1,r.inputs[0].dims[1],r.inputs[0].dims[2]]:[r.inputs[0].dims[0],r.inputs[0].dims[1],1,r.inputs[0].dims[2]]),r.inputs[1].reshape([r.inputs[1].dims[0],r.inputs[1].dims[1],1,r.inputs[1].dims[2]])];t.length===3&&t.push(r.inputs[2]);let o=e.kernelShape;(o.length===0||o[0]===0)&&(o=[r.inputs[1].dims[2]]);let i=e.dilations;(i.length===0||i[0]===0)&&(i=[1]);let s=e.strides;(s.length===0||s[0]===0)&&(s=[1]);let a=e.pads;a.length===0&&(a=[0,0]),a=[0,a[0],0,a[1]],s=[1].concat(s),i=[1].concat(i),o=[1].concat(o);let u=eb({...e,pads:a,strides:s,dilations:i,kernelShape:o},t);r.compute(Uu(t,u,l=>n?[l[0],l[2],l[3]]:[l[0],l[1],l[3]]))},rb=(r,e)=>{Q2(r.inputs,e),r.inputs[0].dims.length===3?r1(r,e):t1(r,r.inputs,e)}});var n1,ob,ib,ab=B(()=>{"use strict";Ie();Me();Ct();De();n1=(r,e,n,t)=>{let o=F.size(e),i=e.length,s=G("input",r,i),a=Q("output",r,i),u=n.dataType===6?n.getInt32Array()[0]:Number(n.getBigInt64Array()[0]),l=F.normalizeAxis(u,i),d=p=>{let h=` i32(${s.indicesGet("inputIndices","uniforms.axis")}) `,g=xe("uniforms.input_shape","uniforms.axis",i),b=t.reverse?h+(t.exclusive?" + 1":""):"0",v=t.reverse?g:h+(t.exclusive?"":" + 1");return`
                ${p.registerUniform("outputSize","u32").registerUniform("axis","u32").declareVariables(s,a)}
                ${p.mainStart()}
                  ${p.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
                  var inputIndices = ${a.offsetToIndices("global_idx")};
                  var sum = ${a.type.value}(0);
                  let first : i32 = ${b};
                  let last : i32 = ${v};
                  for (var i : i32 = first; i < last; i++) {
                    ${s.indicesSet("inputIndices","uniforms.axis","u32(i)")};
                    sum = sum + ${s.getByIndices("inputIndices")};
                  }
                  ${a.setByOffset("global_idx","sum")};
                }`};return{name:"CumSum",shaderCache:{hint:t.cacheKey,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:e,dataType:r}],dispatchGroup:{x:Math.ceil(o/64)},programUniforms:[{type:12,data:o},{type:6,data:l},...ne(e,e)]}),getShaderSource:d}},ob=(r,e)=>{let n=r.inputs[0].dims,t=r.inputs[0].dataType,o=r.inputs[1];r.compute(n1(t,n,o,e),{inputs:[0]})},ib=r=>{let e=r.exclusive===1,n=r.reverse===1;return ze({exclusive:e,reverse:n})}});var Wu,Ha,sb,o1,i1,Hu,qu,ub,a1,lb,db,cb=B(()=>{"use strict";Ie();Me();Ct();De();Wu="[a-zA-Z]|\\.\\.\\.",Ha="("+Wu+")+",sb="^"+Ha+"$",o1="("+Ha+",)*"+Ha,i1="^"+o1+"$",Hu=class{constructor(e=-1){this.symbolToIndices=new Map,this.inputIndex=e}addSymbol(e,n){let t=this.symbolToIndices.get(e);t===void 0?t=[n]:t.push(n),this.symbolToIndices.set(e,t)}},qu=class{constructor(e,n){this.equation=n;this.hasEllipsis=!1,this.symbolToInfo=new Map,this.lhs=new Array,this.outputDims=[];let[t,o]=n.includes("->")?n.split("->",2):[n,""];if(!t.match(RegExp(i1)))throw new Error("Invalid LHS term");if(t.split(",").forEach((a,u)=>{let l=e[u].dims.slice();if(!a.match(RegExp(sb)))throw new Error("Invalid LHS term");let d=this.processTerm(a,!0,l,u);this.lhs.push(d)}),o==="")o+=[...this.symbolToInfo.entries()].filter(([a,u])=>u.count===1||a==="...").map(([a])=>a).join("");else if(!o.match(RegExp(Ha)))throw new Error("Invalid RHS");o.match(RegExp(Wu,"g"))?.forEach(a=>{if(a==="...")this.outputDims=this.outputDims.concat(this.ellipsisDims);else{let u=this.symbolToInfo.get(a);if(u===void 0)throw new Error("Invalid RHS symbol");this.outputDims.push(u.dimValue)}}),this.rhs=this.processTerm(o,!1,this.outputDims)}addSymbol(e,n,t){let o=this.symbolToInfo.get(e);if(o!==void 0){if(o.dimValue!==n&&o.count!==1)throw new Error("Dimension mismatch");o.count++,o.inputIndices.push(t)}else o={count:1,dimValue:n,inputIndices:[t]};this.symbolToInfo.set(e,o)}processTerm(e,n,t,o=-1){let i=t.length,s=!1,a=[],u=0;if(!e.match(RegExp(sb))&&!n&&e!=="")throw new Error("Invalid LHS term");let l=e.match(RegExp(Wu,"g")),d=new Hu(o);return l?.forEach((p,h)=>{if(p==="..."){if(s)throw new Error("Only one ellipsis is allowed per input term");s=!0;let g=i-l.length+1;if(g<0)throw new Error("Ellipsis out of bounds");if(a=t.slice(u,u+g),this.hasEllipsis){if(this.ellipsisDims.length!==a.length||this.ellipsisDims.toString()!==a.toString())throw new Error("Ellipsis dimensions mismatch")}else if(n)this.hasEllipsis=!0,this.ellipsisDims=a;else throw new Error("Ellipsis must be specified in the LHS");for(let b=0;b<a.length;b++){let v=String.fromCharCode("0".charCodeAt(0)+b);d.addSymbol(v,h+b),this.addSymbol(v,t[u++],o)}}else d.addSymbol(p,h+(this.hasEllipsis?this.ellipsisDims.length-1:0)),this.addSymbol(p,t[u++],o)}),d}},ub=r=>r+"_max",a1=(r,e,n,t)=>{let i=r.map(d=>d.length).map((d,p)=>G(`input${p}`,e,d)),s=F.size(t),a=Q("output",e,t.length),u=[...n.symbolToInfo.keys()].filter(d=>!n.rhs.symbolToIndices.has(d)),l=d=>{let p=[],h="var prod = 1.0;",g="var sum = 0.0;",b="sum += prod;",v=[],$=[],T=[],x=[],A=n.symbolToInfo.size===n.rhs.symbolToIndices.size;n.symbolToInfo.forEach((k,L)=>{if(n.rhs.symbolToIndices.has(L)){let W=n.rhs.symbolToIndices.get(L)?.[0];W!==void 0&&n.lhs.forEach((J,se)=>{if(k.inputIndices.includes(se)){let R=J.symbolToIndices.get(L);if(R===void 0)throw new Error("Invalid symbol error");R.forEach(H=>{p.push(`${i[se].indicesSet(`input${se}Indices`,H,a.indicesGet("outputIndices",W))}`)})}})}else n.lhs.forEach((W,J)=>{if(k.inputIndices.includes(J)){let se=W.symbolToIndices.get(L);if(se===void 0)throw new Error("Invalid symbol error");se.forEach(R=>{v.push(`${i[J].indicesSet(`input${J}Indices`,R,`${L}`)}`)}),x.push(`prod *= ${i[J].getByIndices(`input${J}Indices`)};`)}}),$.push(`for(var ${L}: u32 = 0; ${L} < uniforms.${ub(L)}; ${L}++) {`),T.push("}")});let O=A?[...p,`let sum = ${i.map((k,L)=>k.getByIndices(`input${L}Indices`)).join(" * ")};`]:[...p,g,...$,...v,h,...x,b,...T];return`
            ${d.registerUniforms(u.map(k=>({name:`${ub(k)}`,type:"u32"}))).registerUniform("outputSize","u32").declareVariables(...i,a)}

            ${d.mainStart()}
            ${d.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
            var outputIndices = ${a.offsetToIndices("global_idx")};
            ${i.map((k,L)=>`var input${L}Indices: ${i[L].type.indices};`).join(`
`)}
            ${O.join(`
`)};
            ${a.setByOffset("global_idx","sum")};
          }`};return{name:"Einsum",shaderCache:{hint:n.equation,inputDependencies:r.map(()=>"rank")},getRunData:()=>{let d=u.filter(h=>n.symbolToInfo.has(h)).map(h=>({type:12,data:n.symbolToInfo.get(h)?.dimValue||0}));d.push({type:12,data:s});let p=r.map((h,g)=>[...ne(h)]).reduce((h,g)=>h.concat(g),d);return p.push(...ne(t)),{outputs:[{dims:t,dataType:e}],dispatchGroup:{x:Math.ceil(s/64)},programUniforms:p}},getShaderSource:l}},lb=(r,e)=>{let n=new qu(r.inputs,e.equation),t=n.outputDims,o=r.inputs.map((i,s)=>i.dims);r.compute(a1(o,r.inputs[0].dataType,n,t))},db=r=>{let e=r.equation.replace(/\s+/g,"");return ze({equation:e})}});var s1,fb,u1,l1,pb,hb=B(()=>{"use strict";Ie();Me();De();s1=r=>{if(!r||r.length!==2)throw new Error("Expand requires 2 input.");let e=r[0].dims,n=Array.from(r[1].getBigInt64Array(),Number),t=n.length<e.length?0:n.length-e.length,o=e.length<n.length?0:e.length-n.length;for(;t<n.length&&o<e.length;++t,++o)if(n[t]!==e[o]&&n[t]!==1&&e[o]!==1)throw new Error("Expand requires shape to be broadcastable to input")},fb=(r,e)=>{let n=r.length-e.length,t=[];for(let o=0;o<n;++o)t.push(r[o]);for(let o=0;o<e.length;++o)t.push(e[o]===1?r[o+n]:e[o]);return t},u1=(r,e)=>r.length>e.length?fb(r,e):fb(e,r),l1=r=>{let e=r[0].dims,n=Array.from(r[1].getBigInt64Array(),Number),t=u1(e,n),o=r[0].dataType,i=o===9?4:1,s=Math.ceil(F.size(t)/i),a=l=>{let d=G("input",o,e.length,i),p=Q("output",o,t.length,i),h;if(o===9){let g=(b,v,$="")=>`
          let outputIndices${v} = ${p.offsetToIndices(`outputOffset + ${v}u`)};
          let offset${v} = ${d.broadcastedIndicesToOffset(`outputIndices${v}`,p)};
          let index${v} = offset${v} / 4u;
          let component${v} = offset${v} % 4u;
          ${b}[${v}] = ${$}(${d.getByOffset(`index${v}`)}[component${v}]);
        `;h=`
        let outputOffset = global_idx * ${i};
        var data = vec4<u32>(0);
        ${g("data",0,"u32")}
        ${g("data",1,"u32")}
        ${g("data",2,"u32")}
        ${g("data",3,"u32")}
        ${p.setByOffset("global_idx","data")}
      }`}else h=`
        let outputIndices = ${p.offsetToIndices("global_idx")};
        let inputOffset = ${d.broadcastedIndicesToOffset("outputIndices",p)};
        ${p.setByOffset("global_idx",d.getByOffset("inputOffset"))}
      }`;return`
    ${l.registerUniform("vec_size","u32").declareVariables(d,p)}
    ${l.mainStart()}
    ${l.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}
    ${h}`},u=[{type:12,data:s},...ne(e,t)];return{name:"Expand",shaderCache:{hint:`${t.length}`,inputDependencies:["rank"]},getShaderSource:a,getRunData:()=>({outputs:[{dims:t,dataType:r[0].dataType}],dispatchGroup:{x:Math.ceil(s/64)},programUniforms:u})}},pb=r=>{s1(r.inputs),r.compute(l1(r.inputs),{inputs:[0]})}});var d1,mb,gb=B(()=>{"use strict";Ie();Me();De();Na();d1=r=>{let e=r[0].dataType,n=F.size(r[0].dims),t=F.size(r[1].dims),o=t%4===0,i=s=>{let a=G("x",e,[1],4),u=G("bias",e,[1],4),l=Q("y",e,[1],4),d=[{name:"output_vec_size",type:"u32"},{name:"bias_size",type:"u32"}],p=g=>`
      let bias${g}_offset: u32 = (global_idx * 4 + ${g}) % uniforms.bias_size;
      let bias${g} = ${u.getByOffset(`bias${g}_offset / 4`)}[bias${g}_offset % 4];`,h=o?`
      let bias = ${u.getByOffset("global_idx % (uniforms.bias_size / 4)")};`:`${p(0)}${p(1)}${p(2)}${p(3)}
      let bias = ${a.type.value}(bias0, bias1, bias2, bias3);`;return`${s.registerUniforms(d).declareVariables(a,u,l)}

    ${Du(Ht(e))}

    ${s.mainStart(ka)}
      ${s.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_vec_size")}

      let x = ${a.getByOffset("global_idx")};
      ${h}
      let x_in = x + bias;
      ${l.setByOffset("global_idx",Bu("x_in"))}
    }`};return{name:"FastGeluWithBias",shaderCache:{hint:`${o}`,inputDependencies:["type","type"]},getShaderSource:i,getRunData:s=>({outputs:[{dims:s[0].dims,dataType:s[0].dataType}],programUniforms:[{type:12,data:Math.ceil(n/4)},{type:12,data:t}],dispatchGroup:{x:Math.ceil(n/ka/4)}})}},mb=r=>{r.inputs.length<2||F.size(r.inputs[1].dims)===0?$g(r):r.compute(d1(r.inputs))}});var c1,f1,bb,yb,vb=B(()=>{"use strict";Ie();Me();Ct();De();c1=r=>{if(!r||r.length!==2)throw new Error("Gather requires 2 inputs.")},f1=(r,e)=>{let n=r[0].dims,t=r[1].dims,o=n.length,i=F.normalizeAxis(e.axis,o),s=n.slice(0);s.splice(i,1,...t);let a=n[i],u=r[0].dataType===9?4:1,l=Math.ceil(F.size(s)/u),d=[{type:12,data:l},{type:6,data:a},{type:12,data:i},...ne(r[0].dims,r[1].dims,s)],p=h=>{let g=G("data",r[0].dataType,r[0].dims.length,u),b=G("inputIndices",r[1].dataType,r[1].dims.length),v=Q("output",r[0].dataType,s.length,u),$=x=>{let A=t.length,O=`var indicesIndices${x}  = ${b.type.indices}(0);`;for(let k=0;k<A;k++)O+=`${A>1?`indicesIndices${x}[${k}]`:`indicesIndices${x}`} = ${s.length>1?`outputIndices${x}[uniforms.axis + ${k}]`:`outputIndices${x}`};`;O+=`
          var idx${x} = ${b.getByIndices(`indicesIndices${x}`)};
          if (idx${x} < 0) {
            idx${x} = idx${x} + uniforms.axisDimLimit;
          }
          var dataIndices${x} = ${g.type.indices}(0);
        `;for(let k=0,L=0;k<o;k++)k===i?(O+=`${o>1?`dataIndices${x}[${k}]`:`dataIndices${x}`} = u32(idx${x});`,L+=A):(O+=`${o>1?`dataIndices${x}[${k}]`:`dataIndices${x}`} = ${s.length>1?`outputIndices${x}[${L}]`:`outputIndices${x}`};`,L++);return O},T;if(r[0].dataType===9){let x=(A,O,k="")=>`
          let outputIndices${O} = ${v.offsetToIndices(`outputOffset + ${O}u`)};
          ${$(O)};
          let offset${O} = ${g.indicesToOffset(`dataIndices${O}`)};
          let index${O} = offset${O} / 4u;
          let component${O} = offset${O} % 4u;
          ${A}[${O}] = ${k}(${g.getByOffset(`index${O}`)}[component${O}]);
        `;T=`
        let outputOffset = global_idx * ${u};
        var value = vec4<u32>(0);
        ${x("value",0,"u32")}
        ${x("value",1,"u32")}
        ${x("value",2,"u32")}
        ${x("value",3,"u32")}
        ${v.setByOffset("global_idx","value")}
      `}else T=`
      let outputIndices = ${v.offsetToIndices("global_idx")};
      ${$("")};
      let value = ${g.getByIndices("dataIndices")};
      ${v.setByOffset("global_idx","value")};
      `;return`
      ${h.registerUniform("outputSize","u32").registerUniform("axisDimLimit","i32").registerUniform("axis","u32").declareVariables(g,b,v)}
      ${h.mainStart()}
        ${h.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
        ${T}
      }`};return{name:"Gather",shaderCache:{hint:e.cacheKey,inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:s,dataType:r[0].dataType}],dispatchGroup:{x:Math.ceil(l/64)},programUniforms:d}),getShaderSource:p}},bb=r=>ze({axis:r.axis}),yb=(r,e)=>{let n=r.inputs;c1(n),r.compute(f1(r.inputs,e))}});var p1,h1,wb,xb,_b=B(()=>{"use strict";Ie();Me();Ct();De();p1=r=>{if(!r||r.length!==2)throw new Error("GatherElements requires 2 inputs.");if(r[0].dims.length<1)throw new Error("GatherElements requires that the data input be rank >= 1.");if(r[0].dims.length!==r[1].dims.length)throw new Error(`GatherElements requires that the data input and
                     indices input tensors be of same rank.`)},h1=(r,e)=>{let n=r[0].dims,t=r[0].dataType,o=n.length,i=r[1].dims,s=r[1].dataType,a=F.normalizeAxis(e.axis,o),u=n[a],l=i.slice(0),d=F.size(l),p=G("input",t,o),h=G("indicesInput",s,i.length),g=Q("output",t,l.length),b=[{type:12,data:d},{type:6,data:u},{type:12,data:a}];return b.push(...ne(n,i,l)),{name:"GatherElements",shaderCache:{inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:l,dataType:r[0].dataType}],dispatchGroup:{x:Math.ceil(d/64)},programUniforms:b}),getShaderSource:T=>`
      ${T.registerUniform("outputSize","u32").registerUniform("axisDimLimit","i32").registerUniform("axis","u32").declareVariables(p,h,g)}
      ${T.mainStart()}
      ${T.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}

      let outputIndices = ${g.offsetToIndices("global_idx")};

      var idx = ${h.getByOffset("global_idx")};
      if (idx < 0) {
        idx = idx + uniforms.axisDimLimit;
      }
      var inputIndices = ${p.type.indices}(outputIndices);
      ${p.indicesSet("inputIndices","uniforms.axis","u32(idx)")};
      let value = ${p.getByIndices("inputIndices")};

      ${g.setByOffset("global_idx","value")};
  }`}},wb=r=>ze({axis:r.axis}),xb=(r,e)=>{let n=r.inputs;p1(n),r.compute(h1(r.inputs,e))}});var m1,g1,Tb,$b,Sb=B(()=>{"use strict";Ie();Me();De();m1=r=>{if(!r)throw new Error("Input is missing");if(r.length<2||r.length>3)throw new Error("Invaid input number.");if(r.length===3&&r[2].dims.length>2)throw new Error("Invalid input shape of C");if(r[0].dataType!==r[1].dataType||r.length===3&&r[0].dataType!==r[2].dataType)throw new Error("Input types are mismatched")},g1=(r,e)=>{let n=r[0].dims.slice(),t=r[1].dims.slice(),[o,i,s]=Ea.getShapeOfGemmResult(n,e.transA,t,e.transB,r.length===3?r[2].dims:void 0),a=[o,i];if(!a)throw new Error("Can't use gemm on the given tensors");let u=F.size(a),l=[{type:12,data:u},{type:12,data:o},{type:12,data:i},{type:12,data:s},{type:1,data:e.alpha},{type:1,data:e.beta}],d=["type","type"];r.length===3&&(l.push(...ne(r[2].dims)),d.push("rank")),l.push(...ne(a));let p=h=>{let g="";e.transA&&e.transB?g="value += a[k * uniforms.M + m] * b[n * uniforms.K + k];":e.transA&&!e.transB?g="value += a[k * uniforms.M + m] * b[k * uniforms.N + n];":!e.transA&&e.transB?g="value += a[m * uniforms.K + k] * b[n * uniforms.K + k];":!e.transA&&!e.transB&&(g="value += a[m * uniforms.K + k] * b[k * uniforms.N + n];");let b=e.alpha===1?"":"value *= uniforms.alpha;",v=G("a",r[0].dataType,r[0].dims),$=G("b",r[1].dataType,r[1].dims),T=v.type.value,x=null,A=[v,$];r.length===3&&(x=G("c",r[2].dataType,r[2].dims.length),A.push(x));let O=Q("output",r[0].dataType,a.length);A.push(O);let k=[{name:"output_size",type:"u32"},{name:"M",type:"u32"},{name:"N",type:"u32"},{name:"K",type:"u32"},{name:"alpha",type:"f32"},{name:"beta",type:"f32"}];return`
  ${h.registerUniforms(k).declareVariables(...A)}

  ${h.mainStart()}
    ${h.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

    let m = global_idx / uniforms.N;
    let n = global_idx % uniforms.N;

    var value = ${T}(0);
    for (var k: u32 = 0u; k < uniforms.K; k++) {
      ${g}
    }

    ${b}
    ${(()=>x!=null?`let cOffset = ${x.broadcastedIndicesToOffset("vec2(m, n)",O)}; value += ${T}(uniforms.beta) * ${x.getByOffset("cOffset")};`:"")()}
    output[global_idx] = value;
  }`};return{name:"Gemm",shaderCache:{hint:`${e.cacheKey}`,inputDependencies:d},getRunData:()=>({outputs:[{dims:a,dataType:r[0].dataType}],dispatchGroup:{x:Math.ceil(u/64)},programUniforms:l}),getShaderSource:p}},Tb=r=>{let e=r.transA,n=r.transB,t=r.alpha,o=r.beta;return{transA:e,transB:n,alpha:t,beta:o,cacheKey:`${r.transA};${r.transB};${r.alpha===1}`}},$b=(r,e)=>{m1(r.inputs),r.compute(g1(r.inputs,e))}});var b1,y1,v1,Ib,Ab=B(()=>{"use strict";Ie();Me();De();b1=(r,e)=>{let n=r[0].dims,t=n,o=2,i=F.sizeToDimension(n,o),s=F.sizeFromDimension(n,o),a=xt(s),u=s/a,l=[n[0],n[1],u],d=["rank","type","type"],p=[{type:12,data:s},{type:12,data:u}];p.push(...ne(l,l));let h=g=>{let b=G("x",r[0].dataType,l.length,a),v=G("scale",r[1].dataType,r[1].dims),$=G("bias",r[2].dataType,r[2].dims),T=Q("output",r[0].dataType,l.length,a),x=[b,v,$,T],A=b.type.value,O=a===1?"f32":`vec${a}<f32>`,k=64,L=[{name:"normSize",type:"u32"},{name:"normPackedSize",type:"u32"}];return`
  var<workgroup> meanShared : f32;
  var<workgroup> squaredNormShared : f32;
  var<workgroup> workgroupShared : array<${O}, ${k}>;
  const workgroupSize = ${k}u;
  ${g.registerUniforms(L).declareVariables(...x)}
  ${g.mainStart(k)}
    let norm = global_idx / workgroupSize;
    let batch = norm / uniforms.x_shape[1];
    let channel = norm % uniforms.x_shape[1];
    let localIndex = local_id.x;

    // initialize workgroup memory
    var initial = ${O}(0);
    for (var h = localIndex; h < uniforms.normPackedSize; h += workgroupSize) {
      initial = initial + ${O}(${b.get("batch","channel","h")});
    }
    workgroupShared[localIndex] = initial;
    workgroupBarrier();

    // Calculate the mean of current channel data.
    for (var currSize = workgroupSize >> 1;  currSize > 0; currSize = currSize >> 1) {
      if (localIndex < currSize) {
        workgroupShared[localIndex] = workgroupShared[localIndex] + workgroupShared[localIndex + currSize];
      }
      workgroupBarrier();
    }
    if (localIndex == 0) {
      meanShared = ${qt("workgroupShared[0]",a)} / f32(uniforms.normSize);
    }
    workgroupBarrier();

    // reinitialize workgroup memory.
    initial = ${O}(0);
    for (var h = localIndex; h < uniforms.normPackedSize; h += workgroupSize) {
      let deviation =  ${O}(${b.get("batch","channel","h")}) - ${O}(meanShared);
      initial = initial + deviation * deviation;
    }
    workgroupShared[localIndex] = initial;
    workgroupBarrier();

    // Calculate the sum of square of deviation of current channel data.
    for (var currSize = workgroupSize >> 1;  currSize > 0; currSize = currSize >> 1) {
      if (localIndex < currSize) {
        workgroupShared[localIndex] = workgroupShared[localIndex] + workgroupShared[localIndex + currSize];
      }
      workgroupBarrier();
    }
    if (localIndex == 0) {
      squaredNormShared = ${qt("workgroupShared[0]",a)};
    }
    workgroupBarrier();

    let invStdDev = inverseSqrt(squaredNormShared / f32(uniforms.normSize) + f32(${e.epsilon}));
    let channelScale = invStdDev * f32(${v.getByOffset("channel")});
    let channelShift = f32(${$.getByOffset("channel")}) - meanShared * channelScale;
    for (var h = localIndex; h < uniforms.normPackedSize; h += workgroupSize) {
      let value = ${b.get("batch","channel","h")} * ${A}(${O}(channelScale)) + ${A}(${O}(channelShift));
      ${T.set("batch","channel","h","value")};
    }
  }`};return{name:"InstanceNormalization",shaderCache:{hint:`${e.epsilon};${a}`,inputDependencies:d},getRunData:()=>({outputs:[{dims:t,dataType:r[0].dataType}],dispatchGroup:{x:i},programUniforms:p}),getShaderSource:h}},y1=(r,e,n,t,o,i,s,a)=>{let u=xt(s),l=64,d=u===1?"vec2f":`mat2x${u}f`,p=u===1?"f32":`vec${u}f`,h=(L,W)=>`${d}(${L}, ${W})`,g=o*s/u,b=Math.ceil(i/l),v=["type"],$=[{type:12,data:b},{type:12,data:i},{type:12,data:Math.floor(s/u)},{type:12,data:Math.floor(i*s/u)}],T=L=>{let W=G("input",e.dataType,e.dims,u);return`
  ${L.declareVariables(W)}
  @group(0) @binding(1) var<storage, read_write> output : array<${d}>;
  struct Uniforms {wg_size:u32, H:u32, C:u32, image_size:u32};
  @group(0) @binding(2) var<uniform> uniforms: Uniforms;

  ${L.mainStart(l)}
    let currentImageNumber = global_idx / ${l} / uniforms.C;
    let currentChannelNumber = (global_idx / ${l}) % uniforms.C;
    let wgId = global_idx % ${l};
    let wgOffset = wgId * uniforms.wg_size;
    if (wgOffset >= uniforms.H) {
        return;
    }
    let wgMax = min(wgOffset + uniforms.wg_size, uniforms.H);

    let offset = currentImageNumber * uniforms.image_size + currentChannelNumber;
    var sum = ${Bt("f32",u)};
    var squaredSum = ${Bt("f32",u)};
    for (var i: u32 = wgOffset; i < wgMax; i++) {
        let value = ${p}(input[offset + i * uniforms.C]);
        sum += value;
        squaredSum += value * value;
    }
    output[global_idx] = ${h("sum","squaredSum")};
  }`},x=r.compute({name:"InstanceNormComputeMean",shaderCache:{hint:`${u}`,inputDependencies:v},getRunData:()=>({outputs:[{dims:[o,s,l,2],dataType:1}],dispatchGroup:{x:o*s/u},programUniforms:$}),getShaderSource:T},{inputs:[e],outputs:[-1]})[0],A=[{type:12,data:g},{type:12,data:i},{type:12,data:Math.floor(s/u)},{type:12,data:Math.floor(l*s/u)}],O=["type","type","type"],k=L=>{let W=G("scale",n.dataType,n.dims,u),J=G("bias",t.dataType,t.dims,u);return`
  @group(0) @binding(0) var<storage, read> input : array<${d}>;
  @group(0) @binding(1) var<storage, read> scale : array<${W.type.storage}>;
  @group(0) @binding(2) var<storage, read> bias : array<${J.type.storage}>;
  @group(0) @binding(3) var<storage, read_write> output : array<${d}>;
  struct Uniforms {units_of_work : u32, H: u32, C : u32, image_size : u32};
  @group(0) @binding(4) var<uniform> uniforms: Uniforms;

  ${L.mainStart()}
    ${L.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.units_of_work")}
    let currentImageNumber = global_idx / uniforms.C;
    let currentChannelNumber = global_idx % uniforms.C;

    let offset = currentImageNumber * uniforms.image_size;
    var sum = ${Bt("f32",u)};
    var squaredSum = ${Bt("f32",u)};
    for (var i: u32 = 0; i < ${l}; i++) {
        let value = input[offset + i + currentChannelNumber * ${l}];
        sum += value[0];
        squaredSum += value[1];
    }
    sum = sum / f32(uniforms.H);
    squaredSum = squaredSum / f32(uniforms.H);
    let invStdDev = inverseSqrt(squaredSum - sum * sum + f32(${a}));
    let channelScale = invStdDev * ${p}(scale[currentChannelNumber]);
    let channelShift = ${p}(bias[currentChannelNumber]) - sum * channelScale;

    output[global_idx] = ${h("channelScale","channelShift")};
  }`};return r.compute({name:"InstanceNormComputeChannelScaleShift",shaderCache:{hint:`${u};${a}`,inputDependencies:O},getRunData:()=>({outputs:[{dims:[o,s,2],dataType:1}],dispatchGroup:{x:Math.ceil(g/64)},programUniforms:A}),getShaderSource:k},{inputs:[x,n,t],outputs:[-1]})[0]},v1=(r,e,n)=>{let t=e[0].dims,o=t,i=t[0],s=t[t.length-1],a=F.sizeFromDimension(t,1)/s,u=xt(s),l=F.size(o)/u,d=[{type:12,data:a},{type:12,data:Math.floor(s/u)}],p=["type","type"],h=y1(r,e[0],e[1],e[2],i,a,s,n.epsilon),g=b=>{let v=ot(e[0].dataType),$=u===1?"vec2f":`mat2x${u}f`,T=u===1?v:`vec${u}<${v}>`,x=G("input",e[0].dataType,e[0].dims,u),A=Q("output",e[0].dataType,o,u);return`
  @group(0) @binding(0) var<storage, read> input : array<${x.type.storage}>;
  @group(0) @binding(1) var<storage, read> scaleInput : array<${$}>;
  @group(0) @binding(2) var<storage, read_write> output : array<${A.type.storage}>;
  struct Uniforms {H: u32, C : u32};
  @group(0) @binding(3) var<uniform> uniforms: Uniforms;

  ${b.mainStart()}
    let currentImageNumber = global_idx / (uniforms.C * uniforms.H);
    let currentChannelNumber = global_idx % uniforms.C;

    let scaleOffset = currentImageNumber * uniforms.C + currentChannelNumber;
    let scale = scaleInput[scaleOffset];
    output[global_idx] = fma(input[global_idx], ${T}(scale[0]), ${T}(scale[1]));
  }`};r.compute({name:"InstanceNormalizationNHWC",shaderCache:{hint:`${u}`,inputDependencies:p},getRunData:()=>({outputs:[{dims:o,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(l/64)},programUniforms:d}),getShaderSource:g},{inputs:[e[0],h]})},Ib=(r,e)=>{e.format==="NHWC"?v1(r,r.inputs,e):r.compute(b1(r.inputs,e))}});var w1,x1,Ob,Eb=B(()=>{"use strict";Ie();Me();De();w1=r=>{if(!r||r.length<2)throw new Error("layerNorm requires at least 2 inputs.")},x1=(r,e,n)=>{let t=r[0].dims,o=r[1],i=r[2],s=t,a=F.normalizeAxis(e.axis,t.length),u=F.sizeToDimension(t,a),l=F.sizeFromDimension(t,a),d=F.size(o.dims),p=i?F.size(i.dims):0;if(d!==l||i&&p!==l)throw new Error(`Size of X.shape()[axis:] == ${l}.
       Size of scale and bias (if provided) must match this.
       Got scale size of ${d} and bias size of ${p}`);let h=[];for(let O=0;O<t.length;++O)O<a?h.push(t[O]):h.push(1);let g=xt(l),b=["type","type"],v=[{type:12,data:u},{type:1,data:l},{type:12,data:Math.floor(l/g)},{type:1,data:e.epsilon}];i&&b.push("type");let $=n>1,T=n>2,x=O=>{let k=ot(r[0].dataType),L=[G("x",r[0].dataType,r[0].dims,g),G("scale",o.dataType,o.dims,g)];i&&L.push(G("bias",i.dataType,i.dims,g)),L.push(Q("output",r[0].dataType,s,g)),$&&L.push(Q("mean_data_output",1,h)),T&&L.push(Q("inv_std_output",1,h));let W=[{name:"norm_count",type:"u32"},{name:"norm_size",type:"f32"},{name:"norm_size_vectorized",type:"u32"},{name:"epsilon",type:"f32"}];return`
  ${O.registerUniforms(W).declareVariables(...L)}
  ${O.mainStart()}
    ${O.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.norm_count")}
    let offset = global_idx * uniforms.norm_size_vectorized;
    var meanVector = ${Bt("f32",g)};
    var meanSquareVector = ${Bt("f32",g)};

    for (var h: u32 = 0u; h < uniforms.norm_size_vectorized; h++) {
      let value = ${mr(k,g,"x[h + offset]")};
      meanVector += value;
      meanSquareVector += value * value;
    }
    let mean = ${qt("meanVector",g)} / uniforms.norm_size;
    let invStdDev =
        inverseSqrt(${qt("meanSquareVector",g)} / uniforms.norm_size - mean * mean + uniforms.epsilon);

    for (var j: u32 = 0; j < uniforms.norm_size_vectorized; j++) {
      let f32input = ${mr(k,g,"x[j + offset]")};
      let f32scale = ${mr(k,g,"scale[j]")};
      output[j + offset] = ${L[0].type.value}((f32input - mean) * invStdDev * f32scale
        ${i?`+ ${mr(k,g,"bias[j]")}`:""}
      );
    }

    ${$?"mean_data_output[global_idx] = mean":""};
    ${T?"inv_std_output[global_idx] = invStdDev":""};
  }`},A=[{dims:s,dataType:r[0].dataType}];return $&&A.push({dims:h,dataType:1}),T&&A.push({dims:h,dataType:1}),{name:"LayerNormalization",shaderCache:{hint:`${g};${n}`,inputDependencies:b},getRunData:()=>({outputs:A,dispatchGroup:{x:Math.ceil(u/64)},programUniforms:v}),getShaderSource:x}},Ob=(r,e)=>{w1(r.inputs),r.compute(x1(r.inputs,e,r.outputCount))}});var _1,T1,Cb,Pb,kb=B(()=>{"use strict";Ie();Me();Ct();De();_1=(r,e)=>{if(r.length<3||r.length>4)throw new Error("MatMulNBits requires 3 or 4 inputs");let n=r[0],t=n.dims.length;if(n.dims[t-1]!==e.k)throw new Error("The last dim of input shape does not match the k value");let o=Math.floor((e.k+e.blockSize-1)/e.blockSize),i=e.blockSize/8*e.bits,s=r[1];if(!F.areEqual(s.dims,[e.n,o,i]))throw new Error("The second inputs must be 3D tensor with shape N X nBlocksPerCol X blobSize");let u=r[2].dims;if(F.size(u)!==e.n*o)throw new Error("scales input size error.");if(r.length===4){let d=r[3].dims,p=e.bits>4?e.n*o:e.n*Math.floor((o+1)/2);if(F.size(d)!==p)throw new Error("zeroPoints input size error.")}},T1=(r,e)=>{let n=r[0],t=r[1],o=r[2],i=n.dims.length,s=n.dims.slice(0,i-1).concat(e.n),a=F.size(s),u=[{type:12,data:a},{type:12,data:e.k},{type:12,data:e.n},{type:12,data:e.accuracyLevel},{type:12,data:e.bits},{type:12,data:e.blockSize}];u.push(...ne(n.dims)),u.push(...ne(F.convertShape(t.dims))),u.push(...ne(o.dims)),r.length===4&&u.push(...ne(F.convertShape(r[3].dims))),u.push(...ne(s));let l=d=>{let p=G("a",r[0].dataType,r[0].dims.length),h=G("b",12,r[1].dims.length),g=G("scales",r[2].dataType,r[2].dims.length),b=[p,h,g],v=r.length===4?G("zero_points",12,r[3].dims.length):void 0;v&&b.push(v);let $=Q("output",r[0].dataType,s.length),T=[{name:"output_size",type:"u32"},{name:"k",type:"u32"},{name:"n",type:"u32"},{name:"accuracy_level",type:"u32"},{name:"bits",type:"u32"},{name:"block_size",type:"u32"}],x=Math.floor((e.k+e.blockSize-1)/e.blockSize),O=e.blockSize/8*e.bits/4,k=ot(r[0].dataType);return`
        fn ortUnpack8x4snorm(value: u32) -> array<${k}, 8>{
          var result = array<${k}, 8>();
          var offset: u32 = 0;
          let count: u32 = 4;
          for (var i: u32 = 0; i < 8u; i++) {
            result[i] = ${k}(extractBits(value, offset, count));
            offset += count;
          }
          return result;
        }
        ${d.registerUniforms(T).declareVariables(...b,$)}
        ${d.mainStart()}
          ${d.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
          var value: ${k} = 0.0;
          let output_indices = ${$.offsetToIndices("global_idx")};
          var a_indices: ${p.type.indices} = output_indices;
          var n = ${$.indicesGet("output_indices",i-1)};
          // Two zero points are packed into one byte because uniforms.bits <= 4.
          // zero_point_offset is either 0 or 4. It is bit offset within one byte.
          // TODO support zero_point_offset for bits > 4
          ${v?`
            var zero_point_index: u32 = n * ((${x} + 1) / 2) / 4;
            var zero_point_word: u32 = ${v.getByOffset("zero_point_index")};
            var zero_point_offset: u32 = 0;`:""}
          var scale_idex = n * ${x};
          var b_indices: ${h.type.indices};
          ${h.indicesSet("b_indices","0","n")};
          var block_offset: u32 = 0;
          for (var block: u32 = 0; block < ${x}; block++) {
            // The scale and zero points are computed per block.
            let scale = ${g.getByOffset("scale_idex")};
            // The default zero point is 8 for unsigned 4-bit quantization.
            let zero_point: ${k} = ${v?`${k}(extractBits(zero_point_word, zero_point_offset, 4))`:8};
            ${h.indicesSet("b_indices","1","block")};
            var word_offset: u32 = block_offset;
            for (var word: u32 = 0; word < ${O}; word++) {
              ${h.indicesSet("b_indices","2","word")};
              let b_value = ${h.getByIndices("b_indices")};
              let b_quantized_values: array<${k}, 8> = ortUnpack8x4snorm(b_value);
              // Number of B elements per 32-bit word is 32/bits = 32/4 = 8
              var offset: u32 = word_offset;
              for (var i: u32 = 0; i < 8; i++) {
                ${p.indicesSet("a_indices",i-1,"offset")};
                let a_value = ${p.getByIndices("a_indices")};
                let b_quantized_value = b_quantized_values[i];
                let b_dequantized_value = (b_quantized_value - zero_point) * scale;
                value += a_value * b_dequantized_value;
                offset++;
              }
              word_offset += 8;
            }
            scale_idex++;
            ${v?`
            if (zero_point_offset == 28) {
              zero_point_offset = 0;
              zero_point_index++;
              zero_point_word = ${v.getByOffset("zero_point_index")};
            } else {
              zero_point_offset += 4;
            }`:""}
            block_offset += uniforms.block_size;
          }
          ${$.setByOffset("global_idx","value")};
        }
        `};return{name:"MatMulNBits",shaderCache:{hint:`${e.cacheKey};${r.length}`,inputDependencies:Array(r.length).fill("rank")},getRunData:()=>({outputs:[{dims:s,dataType:r[0].dataType}],dispatchGroup:{x:Math.ceil(a/64)},programUniforms:u}),getShaderSource:l}},Cb=(r,e)=>{_1(r.inputs,e),r.compute(T1(r.inputs,e))},Pb=r=>ze(r)});var $1,Bb,Db,S1,ju,Rb,zb=B(()=>{"use strict";Ie();Me();Ct();Aa();ku();De();eo();$1=(r,e)=>{let n=r[0],t=r[1],o=r[2],i=r[3],s=r[4],a=r[5],u=r[6],l=r[7];if(n.dims.length!==3&&n.dims.length!==5)throw new Error("Input query is expected to have 3 or 5 dimensions");let d=!1,p=n.dims[0],h=n.dims[1],g=n.dims.length===3?d?n.dims[2]/3:n.dims[2]:e.numHeads*n.dims[4],b=h,v=0,$=0,T=Math.floor(g/e.numHeads);if(u&&l){if(u.dims.length!==4)throw new Error('Input "past_key" is expected to have 4 dimensions');if(l.dims.length!==4)throw new Error('Input "past_value" is expected to have 4 dimensions');v=u.dims[2],$=u.dims[2]}else if(u||l)throw new Error('Input "past_key" and "past_value" shall be both present or both absent');let x;if(t){if(n.dims.length!==3)throw new Error('Input "query" is expected to have 3 dimensions when key is given');if(t.dims.length<3||t.dims.length>5)throw new Error('Input "key" is expected to have 3, 4, or 5 dimensions');if(n.dims[0]!==t.dims[0])throw new Error('Input "query" and "key" shall have same dim 0 (batch size)');if(t.dims.length===3){if(t.dims[2]!==n.dims[2])throw new Error('Input "query" and "key" shall have same dim 2 (hidden_size)');x=2,b=t.dims[1]}else if(t.dims.length===5){if(t.dims[2]!==e.numHeads||t.dims[3]!==2||t.dims[4]!==T)throw new Error('Expect "key" shape (batch_size, kv_sequence_length, num_heads, 2, head_size) for packed kv');if(o)throw new Error('Expect "value" be none when "key" has packed kv format.');x=5,b=t.dims[1]}else{if(t.dims[1]!==e.numHeads||t.dims[3]!==T)throw new Error('Expect "key" shape (batch_size, num_heads, kv_sequence_length, head_size) for past_key');x=0,b=t.dims[2]}}else{if(n.dims.length!==3&&n.dims.length!==5)throw new Error('Input "query" is expected to have 3 or 5 dimensions when key is empty');if(n.dims.length===5&&(n.dims[2]!==e.numHeads||n.dims[3]!==3))throw new Error('Expect "query" shape (batch_size, kv_sequence_length, num_heads, 3, head_size) for packed kv');x=3}if(i){if(i.dims.length!==1)throw new Error('Input "bias" is expected to have 1 dimension');if(o&&n.dims.length===5&&n.dims[3]===2)throw new Error("bias is not allowed for packed kv.")}let A=0;if(s){A=8;let J=s.dims;throw J.length===1?J[0]===p?A=1:J[0]===3*p+2&&(A=3):J.length===2&&J[0]===p&&J[1]===b&&(A=5),A===8?new Error('Input "key_padding_mask" shape shall be (batch_size) or (batch_size, kv_sequence_length)'):new Error("Mask not supported")}let O=!1,k=g;if(o){if(o.dims.length!==3&&o.dims.length!==4)throw new Error('Input "value" is expected to have 3 or 4 dimensions');if(n.dims[0]!==o.dims[0])throw new Error('Input "query" and "value" shall have same dim 0 (batch_size)');if(o.dims.length===3){if(b!==o.dims[1])throw new Error('Input "key" and "value" shall have the same dim 1 (kv_sequence_length)');k=o.dims[2]}else{if(b!==o.dims[2])throw new Error('Input "past_key" and "past_value" shall have the same dim 2 (kv_sequence_length)');k=o.dims[1]*o.dims[3],O=!0}}let L=v+b,W=!1;if(s)throw new Error("Key padding mask is not supported");if(a)throw new Error("extraAddQk is not supported");if(u)throw new Error("pastKey is not supported");if(l)throw new Error("pastValue is not supported");return{batchSize:p,sequenceLength:h,pastSequenceLength:v,kvSequenceLength:b,totalSequenceLength:L,maxSequenceLength:$,inputHiddenSize:0,hiddenSize:g,vHiddenSize:k,headSize:T,vHeadSize:Math.floor(k/e.numHeads),numHeads:e.numHeads,isUnidirectional:!1,pastPresentShareBuffer:!1,maskFilterValue:e.maskFilterValue,maskType:A,scale:e.scale,broadcastResPosBias:W,passPastInKv:O,qkvFormat:x}},Bb=r=>ze({...r}),Db=ze({perm:[0,2,1,3]}),S1=(r,e,n,t,o,i,s)=>{let a=[t,o,i],u=F.size(a),l=[{type:12,data:u},{type:12,data:s},{type:12,data:i}],d=p=>{let h=Q("qkv_with_bias",e.dataType,a),g=G("qkv",e.dataType,a),b=G("bias",n.dataType,a),v=[{name:"output_size",type:"u32"},{name:"bias_offset",type:"u32"},{name:"hidden_size",type:"u32"}];return`
  ${p.registerUniforms(v).declareVariables(g,b,h)}
  ${p.mainStart()}
    ${p.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    let bias_offset_idx = (global_idx % uniforms.hidden_size) + uniforms.bias_offset;

    qkv_with_bias[global_idx] = qkv[global_idx] + bias[bias_offset_idx];
  }`};return r.compute({name:"MultiHeadAttentionAddBias",shaderCache:{inputDependencies:["type","type"]},getRunData:()=>({outputs:[{dims:a,dataType:e.dataType,gpuDataType:0}],dispatchGroup:{x:Math.ceil(u/64)},programUniforms:l}),getShaderSource:d},{inputs:[e,n],outputs:[-1]})[0]},ju=(r,e,n,t,o,i,s,a)=>{let u=i;if(s){if(t===1)throw new Error("AddBiasReshape is not implemented. Please export your model with packed QKV or KV");return u=S1(r,i,s,e,t,n*o,a),u=u.reshape([e,t,n,o]),r.compute(gr(u,Db.perm),{inputs:[u],outputs:[-1]})[0]}else return i.dims.length===3&&(u=i.reshape([e,t,n,o])),r.compute(gr(u,Db.perm),{inputs:[u],outputs:[-1]})[0]},Rb=(r,e)=>{let n=$1(r.inputs,e);if(r.inputs[0].dims.length===5)throw new Error("Packed QKV is not implemented");if(r.inputs[1]?.dims.length===5)throw new Error("Packed KV is not implemented");let t=r.inputs[1]&&r.inputs[2]&&r.inputs[1].dims.length===4&&r.inputs[2].dims.length===4,o=ju(r,n.batchSize,n.numHeads,n.sequenceLength,n.headSize,r.inputs[0],r.inputs[3],0);if(t)return za(r,o,r.inputs[1],r.inputs[2],r.inputs[4],void 0,void 0,void 0,r.inputs[5],n,e);let i=ju(r,n.batchSize,n.numHeads,n.kvSequenceLength,n.headSize,r.inputs[1],r.inputs[3],n.hiddenSize),s=ju(r,n.batchSize,n.numHeads,n.kvSequenceLength,n.vHeadSize,r.inputs[2],r.inputs[3],2*n.hiddenSize);za(r,o,i,s,r.inputs[4],void 0,r.inputs[6],r.inputs[7],r.inputs[5],n,e)}});var I1,A1,O1,E1,C1,P1,k1,D1,Mb,Lb=B(()=>{"use strict";Ie();Me();De();I1=r=>{if(!r||r.length<1)throw new Error("Too few inputs");if(r[0].dataType!==1&&r[0].dataType!==10)throw new Error("Input type must be float or float16.");if(r.length>=2){let e=r[0].dims.length*2===r[1].dims[0];if(r.length===4&&(e=r[3].dims[0]*2===r[1].dims[0]),!e)throw new Error("The pads should be a 1D tensor of shape [2 * input_rank] or [2 * num_axes].")}},A1=(r,e,n)=>{let t="";for(let o=e-1;o>=0;--o)t+=`
            k = i32(${r.indicesGet("indices",o)}) - ${xe("uniforms.pads",o,n)};
            if (k < 0) {
              break;
            }
            if (k >= i32(${xe("uniforms.x_shape",o,e)})) {
              break;
            }
            offset += k * i32(${xe("uniforms.x_strides",o,e)});
        `;return`
          value = ${r.type.value}(uniforms.constant_value);
          for (var i = 0; i < 1; i++) {
            var offset = 0;
            var k = 0;
            ${t}
            value = x[offset];
          }
      `},O1=(r,e,n)=>{let t="";for(let o=e-1;o>=0;--o)t+=`
                k = i32(${r.indicesGet("indices",o)}) - ${xe("uniforms.pads",o,n)};
                if (k < 0) {
                  k = -k;
                }
                {
                  let _2n_1 = 2 * (i32(${xe("uniforms.x_shape",o,e)}) - 1);
                  k = k % _2n_1;
                  if(k >= i32(${xe("uniforms.x_shape",o,e)})) {
                    k = _2n_1 - k;
                  }
                }
                offset += k * i32(${xe("uniforms.x_strides",o,e)});
            `;return`
              var offset = 0;
              var k = 0;
              ${t}
              value = x[offset];
          `},E1=(r,e,n)=>{let t="";for(let o=e-1;o>=0;--o)t+=`
                k = i32(${r.indicesGet("indices",o)}) - ${xe("uniforms.pads",o,n)};
                if (k < 0) {
                  k = 0;
                }
                if (k >= i32(${xe("uniforms.x_shape",o,e)})) {
                  k = i32(${xe("uniforms.x_shape",o,e)}) - 1;
                }
                offset += k * i32(${xe("uniforms.x_strides",o,e)});
            `;return`
              var offset = 0;
              var k = 0;
              ${t}
              value = x[offset];
          `},C1=(r,e,n)=>{let t="";for(let o=e-1;o>=0;--o)t+=`
                k = i32(${r.indicesGet("indices",o)}) - ${xe("uniforms.pads",o,n)};
                if (k < 0)  {
                  k += i32(${xe("uniforms.x_shape",o,e)}]);
                }
                if (k >= i32(${xe("uniforms.x_shape",o,e)})) {
                  k -= i32(${xe("uniforms.x_shape",o,e)});
                }
                offset += k * i32(${xe("uniforms.x_strides",o,e)});
            `;return`
              var offset = 0;
              var k = 0;
              ${t}
              value = x[offset];
          `},P1=(r,e,n)=>{switch(n.mode){case 0:return A1(r,e,n.pads.length);case 1:return O1(r,e,n.pads.length);case 2:return E1(r,e,n.pads.length);case 3:return C1(r,e,n.pads.length);default:throw new Error("Invalid mode")}},k1=(r,e)=>{let n=F.padShape(r[0].dims.slice(),e.pads),t=r[0].dims,o=F.size(n),i=[{type:12,data:o},{type:12,data:e.pads}];e.mode===0&&i.push({type:r[0].dataType,data:e.value}),i.push(...ne(r[0].dims,n));let s=["rank"],a=u=>{let l=Q("output",r[0].dataType,n.length),d=G("x",r[0].dataType,t.length),p=d.type.value,h=P1(l,t.length,e),g=[{name:"output_size",type:"u32"},{name:"pads",type:"i32",length:e.pads.length}];return e.mode===0&&g.push({name:"constant_value",type:p}),`
            ${u.registerUniforms(g).declareVariables(d,l)}
            ${u.mainStart()}
            ${u.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

            let indices = ${l.offsetToIndices("global_idx")};

            var value = ${p}(0);
            ${h}
            output[global_idx] = value;
        }`};return{name:"Pad",shaderCache:{hint:`${e.mode}`,inputDependencies:s},getRunData:()=>({outputs:[{dims:n,dataType:r[0].dataType}],dispatchGroup:{x:Math.ceil(F.size(n)/64)},programUniforms:i}),getShaderSource:a}},D1=(r,e)=>{if(r.length>1){let n=r[1].getBigInt64Array(),t=r.length>=3&&r[2].data?r[2].getFloat32Array()[0]:0,o=r[0].dims.length,i=new Int32Array(2*o).fill(0);if(r.length>=4){let a=r[3].getBigInt64Array();for(let u=0;u<a.length;u++)i[Number(a[u])]=Number(n[u]),i[Number(a[u])+o]=Number(n[u+a.length])}else n.forEach((a,u)=>i[Number(u)]=Number(a));let s=[];return i.forEach(a=>s.push(a)),{mode:e.mode,value:t,pads:s}}else return e},Mb=(r,e)=>{I1(r.inputs);let n=D1(r.inputs,e);r.compute(k1(r.inputs,n),{inputs:[0]})}});var qa,Nb,Vb,Fb,Gb,B1,R1,Ub,Wb,Hb,qb,jb,Kb,Yb,Xb,Zb,Jb,Qb,ey,ty=B(()=>{"use strict";kt();Ie();Me();De();qa=r=>{if(be.webgpu.validateInputContent&&(!r||r.length!==1))throw new Error("Pool ops requires 1 input.")},Nb=(r,e,n)=>{let t=e.format==="NHWC",o=r.dims.slice();t&&o.splice(1,0,o.pop());let i=Object.hasOwnProperty.call(e,"dilations"),s=e.kernelShape.slice(),a=e.strides.slice(),u=i?e.dilations.slice():[],l=e.pads.slice();Tn.adjustPoolAttributes(n,o,s,a,u,l);let d=Tn.computePoolOutputShape(n,o,a,u,s,l,e.autoPad),p=Object.assign({},e);i?Object.assign(p,{kernelShape:s,strides:a,pads:l,dilations:u,cacheKey:e.cacheKey}):Object.assign(p,{kernelShape:s,strides:a,pads:l,cacheKey:e.cacheKey});let h=d.slice();return h.push(h.splice(1,1)[0]),[p,t?h:d]},Vb=(r,e)=>{let n=e.format==="NHWC",t=F.size(r),o=F.size(e.kernelShape),i=[{type:12,data:t},{type:12,data:o}],s=[{name:"outputSize",type:"u32"},{name:"kernelSize",type:"u32"}];if(e.kernelShape.length<=2){let a=e.kernelShape[e.kernelShape.length-1],u=e.strides[e.strides.length-1],l=e.pads[e.pads.length/2-1],d=e.pads[e.pads.length-1],p=!!(l+d);i.push({type:12,data:a},{type:12,data:u},{type:12,data:l},{type:12,data:d}),s.push({name:"kw",type:"u32"},{name:"sw",type:"u32"},{name:"pwStart",type:"u32"},{name:"pwEnd",type:"u32"});let h=!1;if(e.kernelShape.length===2){let g=e.kernelShape[e.kernelShape.length-2],b=e.strides[e.strides.length-2],v=e.pads[e.pads.length/2-2],$=e.pads[e.pads.length-2];h=!!(v+$),i.push({type:12,data:g},{type:12,data:b},{type:12,data:v},{type:12,data:$}),s.push({name:"kh",type:"u32"},{name:"sh",type:"u32"},{name:"phStart",type:"u32"},{name:"phEnd",type:"u32"})}return[i,s,!0,p,h]}else{if(n)throw new Error("Pooling with kernelShape.length > 2 is not supported for NHWC format.");let a=F.computeStrides(e.kernelShape);i.push({type:12,data:a},{type:12,data:e.pads},{type:12,data:e.strides}),s.push({name:"kernelStrides",type:"u32",length:a.length},{name:"pads",type:"u32",length:e.pads.length},{name:"strides",type:"u32",length:e.strides.length});let u=e.pads.reduce((l,d)=>l+d);return[i,s,!!u,!1,!1]}},Fb=(r,e,n,t,o,i,s,a,u,l,d,p)=>{let h=o.format==="NHWC",g=e.type.value,b=Q("output",e.type.tensor,t);if(o.kernelShape.length<=2){let v="",$="",T="",x=n-(h?2:1);if(d?v=`
                for (var i: u32 = 0u; i < uniforms.kw; i++) {
                  xIndices[${x}] = indices[${x}] * uniforms.sw - uniforms.pwStart + i;
                  if (xIndices[${x}] < 0 || xIndices[${x}]
                      >= uniforms.x_shape[${x}]) {
                    pad++;
                    continue;
                  }
                  let x_val = x[${e.indicesToOffset("xIndices")}];
                  ${i}
                }`:v=`
                for (var i: u32 = 0u; i < uniforms.kw; i++) {
                  xIndices[${x}] = indices[${x}] * uniforms.sw - uniforms.pwStart + i;
                  let x_val = x[${e.indicesToOffset("xIndices")}];
                  ${i}
                }`,o.kernelShape.length===2){let O=n-(h?3:2);p?$=`
                for (var j: u32 = 0u; j < uniforms.kh; j++) {
                  xIndices[${O}] = indices[${O}] * uniforms.sh - uniforms.phStart + j;
                  if (xIndices[${O}] < 0 || xIndices[${O}] >= uniforms.x_shape[${O}]) {
                    pad += i32(uniforms.kw);
                    continue;
                  }
              `:$=`
                for (var j: u32 = 0u; j < uniforms.kh; j++) {
                  xIndices[${O}] = indices[${O}] * uniforms.sh - uniforms.phStart + j;
                `,T=`
              }
            `}return`
            ${r.registerUniforms(u).declareVariables(e,b)}

            ${r.mainStart()}
              ${r.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}

              let indices = ${b.offsetToIndices("global_idx")};
              var xIndices = ${b.offsetToIndices("global_idx")};

              var value = ${g}(${a});
              var pad = 0;
              ${$}
              ${v}
              ${T}
              ${s}

              output[global_idx] = value;
            }`}else{if(h)throw new Error("Pooling with kernelShape.length > 2 is not supported for NHWC format.");let v=o.kernelShape.length,$=o.pads.length,T="";return l?T=`
                if (xIndices[j] >= uniforms.x_shape[j]) {
                  pad++;
                  isPad = true;
                  break;
                }
              }
              if (!isPad) {
                let x_val = x[${e.indicesToOffset("xIndices")}];
                ${i}
              }`:T=`
              }
              let x_val = x[${e.indicesToOffset("xIndices")}];
              ${i}
            `,`
            ${r.registerUniforms(u).declareVariables(e,b)}

            ${r.mainStart()}
              ${r.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
              let indices = ${b.offsetToIndices("global_idx")};
              var xIndices = ${b.offsetToIndices("global_idx")};

              var offsets: array<u32, ${v}>;

              var value = ${g}(${a});
              var pad = 0;
              var isPad = false;

              for (var i: u32 = 0u; i < uniforms.kernelSize; i++) {
                var offset = i;
                for (var j = 0u; j < ${v-1}u; j++) {
                  offsets[j] = offset / ${xe("uniforms.kernelStrides","j",v)};
                  offset -= offsets[j] * ${xe("uniforms.kernelStrides","j",v)};
                }
                offsets[${v-1}] = offset;

                isPad = false;
                for (var j = ${n-v}u; j < ${n}u; j++) {
                  xIndices[j] = indices[j] * ${xe("uniforms.strides",`j - ${n-v}u`,v)}
                    + offsets[j - ${n-v}u] - ${xe("uniforms.pads","j - 2u",$)};
                  ${T}
              }
              ${s}

              output[global_idx] = value;
            }`}},Gb=r=>`${r.format};${r.ceilMode};${r.autoPad};${r.kernelShape.length}`,B1=r=>`${Gb(r)};${r.countIncludePad}`,R1=r=>`${Gb(r)};${r.storageOrder};${r.dilations}`,Ub=r=>({format:r.format,autoPad:["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][r.auto_pad],ceilMode:r.ceil_mode,kernelShape:r.kernel_shape,strides:r.strides,pads:r.pads}),Wb=(r,e,n,t)=>{let[o,i]=Nb(e,t,n),s=G("x",e.dataType,e.dims.length),a=s.type.value,u="value += x_val;",l="";o.countIncludePad?l+=`value /= ${a}(uniforms.kernelSize);`:l+=`value /= ${a}(i32(uniforms.kernelSize) - pad);`;let[d,p,h,g,b]=Vb(i,o);d.push(...ne(e.dims,i));let v=["rank"];return{name:r,shaderCache:{hint:`${t.cacheKey};${h};${g};${b}`,inputDependencies:v},getRunData:()=>({outputs:[{dims:i,dataType:e.dataType}],dispatchGroup:{x:Math.ceil(F.size(i)/64)},programUniforms:d}),getShaderSource:$=>Fb($,s,e.dims.length,i.length,o,u,l,0,p,h,g,b)}},Hb=r=>{let e=r.count_include_pad!==0,n=Ub(r);if(n.ceilMode!==0)throw new Error("using ceil() in shape computation is not yet supported for AveragePool");let t={countIncludePad:e,...n,cacheKey:""};return{...t,cacheKey:B1(t)}},qb=(r,e)=>{qa(r.inputs),r.compute(Wb("AveragePool",r.inputs[0],!1,e))},jb={autoPad:"",ceilMode:0,countIncludePad:!1,kernelShape:[],strides:[],pads:[],storageOrder:0,dilations:[]},Kb=r=>{let e=r.format;return{format:e,...jb,cacheKey:e}},Yb=(r,e)=>{qa(r.inputs),r.compute(Wb("GlobalAveragePool",r.inputs[0],!0,e))},Xb=(r,e,n,t)=>{let[o,i]=Nb(e,t,n),s=`
      value = max(x_val, value);
    `,a="",u=G("x",e.dataType,e.dims.length),l=["rank"],[d,p,h,g,b]=Vb(i,o);return d.push(...ne(e.dims,i)),{name:r,shaderCache:{hint:`${t.cacheKey};${h};${g};${b}`,inputDependencies:l},getRunData:()=>({outputs:[{dims:i,dataType:e.dataType}],dispatchGroup:{x:Math.ceil(F.size(i)/64)},programUniforms:d}),getShaderSource:v=>Fb(v,u,e.dims.length,i.length,o,s,a,-1e5,p,h,g,b)}},Zb=(r,e)=>{qa(r.inputs),r.compute(Xb("MaxPool",r.inputs[0],!1,e))},Jb=r=>{let e=r.storage_order,n=r.dilations,t=Ub(r);if(e!==0)throw new Error("column major storage order is not yet supported for MaxPool");if(t.ceilMode!==0)throw new Error("using ceil() in shape computation is not yet supported for MaxPool");let o={storageOrder:e,dilations:n,...t,cacheKey:""};return{...o,cacheKey:R1(o)}},Qb=r=>{let e=r.format;return{format:e,...jb,cacheKey:e}},ey=(r,e)=>{qa(r.inputs),r.compute(Xb("GlobalMaxPool",r.inputs[0],!0,e))}});var M1,L1,ry,ny=B(()=>{"use strict";kt();Ie();De();M1=(r,e,n)=>{let t=r===e,o=r<e&&n<0,i=r>e&&n>0;if(t||o||i)throw new Error("Range these inputs' contents are invalid.")},L1=(r,e,n,t)=>{let o=Math.abs(Math.ceil((e-r)/n)),i=[o],s=o,a=[{type:12,data:s},{type:t,data:r},{type:t,data:n},...ne(i)],u=l=>{let d=Q("output",t,i.length),p=d.type.value,h=[{name:"outputSize",type:"u32"},{name:"start",type:p},{name:"delta",type:p}];return`
        ${l.registerUniforms(h).declareVariables(d)}
        ${l.mainStart()}
        ${l.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
        output[global_idx] = uniforms.start + ${p}(global_idx) * uniforms.delta;
      }`};return{name:"Range",shaderCache:{hint:`${t}`},getShaderSource:u,getRunData:()=>({outputs:[{dims:i,dataType:t}],dispatchGroup:{x:Math.ceil(s/64)},programUniforms:a})}},ry=r=>{let e=0,n=0,t=0;r.inputs[0].dataType===6?(e=r.inputs[0].getInt32Array()[0],n=r.inputs[1].getInt32Array()[0],t=r.inputs[2].getInt32Array()[0]):r.inputs[0].dataType===1&&(e=r.inputs[0].getFloat32Array()[0],n=r.inputs[1].getFloat32Array()[0],t=r.inputs[2].getFloat32Array()[0]),be.webgpu.validateInputContent&&M1(e,n,t),r.compute(L1(e,n,t,r.inputs[0].dataType),{inputs:[]})}});var N1,V1,F1,G1,U1,W1,H1,q1,j1,K1,Y1,oy,X1,Z1,J1,Q1,e_,iy,ay,sy=B(()=>{"use strict";Ie();Me();Ct();De();N1=(r,e)=>{if(r.every(n=>n>0||(()=>{throw new Error("Resize requires scales input values to be positive")})),r.length>0){if(e.mode==="linear"){if(!(r.length===2||r.length===3||r.length===4&&r[0]===1&&r[1]===1||r.length===4&&r[0]===1&&r[3]===1||r.length===5&&r[0]===1&&r[1]===1))throw new Error(`For linear mode, Resize requires scales to be 2D, 3D, 4D with either two outermost or one innermost and
            one outermost scale values equal to 1, or 5D with two outermost scale values equal to 1`)}else if(e.mode==="cubic"&&!(r.length===2||r.length===4&&r[0]===1&&r[1]===1||r.length===4&&r[0]===1&&r[3]===1))throw new Error("Resize requires scales input size to be 2 or 4 for cubic mode")}},V1=(r,e,n)=>{e.every(o=>o>=0&&o<n||(()=>{throw new Error("Resize requires axes input values to be positive and less than rank")}));let t=new Array(n).fill(1);return e.forEach((o,i)=>t[o]=r[i]),t},F1=(r,e,n,t,o,i)=>{let[s,a,u]=n>10?[1,2,3]:[-1,r.length>1?1:-1,-1],l=r[0].dims.length;if(s>0&&r.length>s&&r[s].dims.length>0)r[s].getFloat32Array().forEach(d=>i.push(d));else if(e.coordinateTransformMode==="tf_crop_and_resize")throw new Error("Resize requires RoI input to be specified when coordinateTransformMode is tfCropAndResize");if(a>0&&r.length>a&&r[a].dims.length>0){if(r[a].getFloat32Array().forEach(d=>t.push(d)),t.length!==0&&t.length!==l&&n>=18&&t.length!==e.axes.length)throw new Error("Resize requires scales input size to be same as input rank or axes size for opset 18 and up");N1(t,e),e.axes.length>0&&V1(t,e.axes,l).forEach((d,p)=>t[p]=d)}if(u>0&&r.length>u&&(r[u].getBigInt64Array().forEach(d=>o.push(Number(d))),o.length!==l||n>=18&&o.length===e.axes.length))throw new Error("Resize requires sizes input size to be same as input rank or axes size for opset 18 and up");if(e.axes.length>0){if(t.length!==e.axes.length)throw new Error('Resize requires "scales" input size to be of axes rank when axes attributes is specified');if(o.length!==e.axes.length)throw new Error('Resize requires "sizes" input size to be of rank axes rank when axes attributes is specified')}if(typeof t<"u"&&typeof o<"u"&&t.length>0&&o.length>l)throw new Error("Resize requires only of scales or sizes to be specified")},G1=(r,e)=>`fn getOriginalCoordinateFromResizedCoordinate(xResized: u32, xScale: f32, lengthResized: u32,
     lengthOriginal: u32, roiStart: f32, roiEnd: f32) -> ${e} { `+(()=>{switch(r){case"asymmetric":return`return ${e}(xResized) / ${e}(xScale);`;case"pytorch_half_pixel":return`if (lengthResized > 1) {
                    return (${e}(xResized) + 0.5) / ${e}(xScale) - 0.5;
                  } else {
                    return 0.0;
                  }`;case"tf_half_pixel_for_nn":return`return (${e}(xResized) + 0.5) / ${e}(xScale);`;case"align_corners":return`if (lengthResized == 1) {
                    return 0.0;
                  } else {
                    // The whole part and the fractional part are calculated separately due to inaccuracy of floating
                    // point division. As an example, f32(21) / f32(7) may evaluate to 2.99... instead of 3, causing an
                    // offset-by-one error later in floor().
                    let whole = ${e}(xResized * (lengthOriginal - 1) / (lengthResized - 1));
                    let fract =
                        ${e}(xResized * (lengthOriginal - 1) % (lengthResized - 1)) / ${e}(lengthResized - 1);
                    return whole + fract;
                  }`;case"tf_crop_and_resize":return`if (lengthResized > 1) {
                    return ${e}(roiStart) * ${e}(lengthOriginal - 1) +
                        (${e}(xResized) * ${e}(roiEnd - roiStart) * ${e}(lengthOriginal - 1)) /
                        ${e}(lengthResized - 1);
                  } else {
                    return 0.5 * ${e}(roiStart + roiEnd) * ${e}(lengthOriginal - 1);
                  }`;case"half_pixel_symmetric":return`const outputWidth = ${e}xScale * ${e}(lengthResized);
                  const adjustment = ${e}(lengthResized) / outputWidth;
                  const center = ${e}(lengthOriginal) / 2;
                  const offset = center * (1 - adjustment);
                  return offset + ((${e}(xResized) + 0.5) / ${e}(xScale)) - 0.5;`;case"half_pixel":return`return ((${e}(xResized) + 0.5) / ${e}(xScale)) - 0.5;`;default:throw new Error(`Coordinate transform mode ${r} is not supported`)}})()+"}",U1=(r,e,n)=>`fn getNearestPixelFromOriginal(xOriginal: ${n}, isDownSample: bool) -> ${n} {`+(()=>{switch(r){case"round_prefer_ceil":return"if (fract(xOriginal) == 0.5) {             return ceil(xOriginal);           } else {             return round(xOriginal);           }";case"floor":return"return floor(xOriginal);";case"ceil":return"return ceil(xOriginal);";case"round_prefer_floor":return"if (fract(xOriginal) == 0.5) {                     return floor(xOriginal);                   } else {                     return round(xOriginal);                   }";case"simple":default:if(e<11)return"if (isDownSample)                     {                       return ceil(xOriginal);                     } else {                       return xOriginal;                     }";throw new Error(`Nearest mode ${r} is not supported`)}})()+"}",W1=(r,e,n)=>{let t=new Array(n).fill(0).concat(new Array(n).fill(1)),o=r.length===0?t:r.slice();return e.length>0?(e.forEach((i,s)=>{t[i]=o[s],t[s+n]=o[e.length+s]}),t):o},H1=(r,e,n,t)=>{let o=[];if(n.length>0)if(t.length>0){if(r.forEach(i=>o.push(i)),Math.max(...t)>r.length)throw new Error("axes is out of bound");t.forEach((i,s)=>o[i]=n[s])}else n.forEach(i=>o.push(i));else{if(e.length===0)throw new Error("Resize requires either scales or sizes.");o=r.map((i,s)=>Math.round(i*e[s]))}return o},q1=(r,e,n)=>{let t=(()=>{switch(n.keepAspectRatioPolicy){case"not_larger":return n.axes.length>0?Math.min(...n.axes.map(i=>e[i]),Number.MAX_VALUE):Math.min(...e,Number.MAX_VALUE);case"not_smaller":return n.axes.length>0?Math.max(...n.axes.map(i=>e[i]),Number.MIN_VALUE):Math.max(...e,Number.MIN_VALUE);default:throw new Error(`Keep aspect ratio policy ${n.keepAspectRatioPolicy} is not supported`)}})();e.fill(1,0,e.length);let o=r.slice();return n.axes.length>0?(n.axes.forEach(i=>e[i]=t),n.axes.forEach(i=>o[i]=Math.round(r[i]*e[i]))):(e.fill(t,0,e.length),o.forEach((i,s)=>o[s]=Math.round(i*e[s]))),o},j1=(r,e,n,t,o)=>`
    fn calculateOriginalIndicesFromOutputIndices(output_indices: ${r.type.indices}) -> array<${r.type.value}, ${n.length}> {
      var original_indices: array<${r.type.value}, ${n.length}>;
      for (var i:u32 = 0; i < ${n.length}; i++) {
        var output_index = ${r.indicesGet("output_indices","i")};
        var scale = ${xe("uniforms.scales","i",t)};
        var roi_low = ${xe("uniforms.roi","i",o)};
        var roi_hi = ${xe("uniforms.roi",`i + ${e.length}`,o)};
        if (scale == 1.0) {
          original_indices[i] = ${r.type.value}(output_index);
        } else {
          var input_shape_i = ${xe("uniforms.input_shape","i",e.length)};
          var output_shape_i = ${xe("uniforms.output_shape","i",n.length)};
          original_indices[i] = getOriginalCoordinateFromResizedCoordinate(output_index, scale, output_shape_i,
                                                                           input_shape_i, roi_low, roi_hi);
        }
      }
      return original_indices;
    }`,K1=(r,e,n,t,o,i,s)=>`
    fn calculateInputIndicesFromOutputIndices(output_indices: ${e.type.indices}) -> ${r.type.indices} {
      var input_indices: ${r.type.indices};
      for (var i:u32 = 0; i < ${t.length}; i++) {
        var output_index = ${e.indicesGet("output_indices","i")};
        var input_index: u32;
        var scale = ${xe("uniforms.scales","i",o)};
        if (scale == 1.0) {
          input_index = output_index;
        } else {
          var roi_low = ${xe("uniforms.roi","i",i)};
          var roi_hi = ${xe("uniforms.roi",`i + ${n.length}`,i)};
          var input_shape_i = ${xe("uniforms.input_shape","i",n.length)};
          var output_shape_i = ${xe("uniforms.output_shape","i",t.length)};
          var original_idx = getOriginalCoordinateFromResizedCoordinate(output_index, scale, output_shape_i,
                                                                        input_shape_i, roi_low, roi_hi);
          if (!${s} || (original_idx >= 0 && original_idx < ${e.type.value}(input_shape_i))) {
            if (original_idx < 0) {
              input_index = 0;
            } else if (original_idx > ${e.type.value}(input_shape_i - 1)) {
              input_index = input_shape_i - 1;
            } else {
              input_index = u32(getNearestPixelFromOriginal(original_idx, scale < 1));
            }
          } else {
            input_index = u32(original_idx);
          }
        }
        ${r.indicesSet("input_indices","i"," input_index")}
      }
      return input_indices;
    }`,Y1=(r,e)=>`
    fn checkInputIndices(input_indices: ${r.type.indices}) -> bool {
      for (var i:u32 = 0; i < ${e.length}; i++) {
        var input_index = ${r.indicesGet("input_indices","i")};
        if (input_index < 0 || input_index >= ${xe("uniforms.input_shape","i",e.length)}) {
          return false;
        }
      }
      return true;
    }`,oy=(r,e,n,t)=>r.rank>t?`
    ${r.indicesSet("input_indices",e,"channel")};
    ${r.indicesSet("input_indices",n,"batch")};
`:"",X1=(r,e,n,t,o)=>{let[s,a,u,l]=n.length===2?[-1,0,1,-1]:[0,2,3,1],d=r.type.value;return`
    fn getInputValue(batch: u32, channel: u32, row: u32, col: u32) -> ${d} {
      var input_indices: ${r.type.indices};
      ${r.indicesSet("input_indices",a,`max(0, min(row, ${n[a]} - 1))`)};
      ${r.indicesSet("input_indices",u,`max(0, min(col, ${n[u]} - 1))`)};
      ${oy(r,l,s,2)}
      return ${r.getByIndices("input_indices")};
    }

    fn bilinearInterpolation(output_indices: ${e.type.indices}) -> ${d} {
      var originalIndices = calculateOriginalIndicesFromOutputIndices(output_indices);
      var row:${d} = originalIndices[${a}];
      var col:${d} = originalIndices[${u}];
      ${t?`if (row < 0 || row > (${n[a]} - 1) || col < 0 || col > (${n[u]} - 1)) {
        return ${o};
      }`:""};
      row = max(0, min(row, ${n[a]} - 1));
      col = max(0, min(col, ${n[u]} - 1));
      var row1: u32 = u32(row);
      var col1: u32 = u32(col);
      var row2: u32 = u32(row + 1);
      var col2: u32 = u32(col + 1);
      var channel: u32 = ${n.length>2?`u32(originalIndices[${l}])`:"0"};
      var batch: u32 =  ${n.length>2?`u32(originalIndices[${s}])`:"0"};
      var x11: ${d} = getInputValue(batch, channel, row1, col1);
      var x12: ${d} = getInputValue(batch, channel, row1, col2);
      var x21: ${d} = getInputValue(batch, channel, row2, col1);
      var x22: ${d} = getInputValue(batch, channel, row2, col2);
      var dx1: ${d} = abs(row - ${d}(row1));
      var dx2: ${d} = abs(${d}(row2) - row);
      var dy1: ${d} = abs(col - ${d}(col1));
      var dy2: ${d} = abs(${d}(col2) - col);
      if (row1 == row2) {
        dx1 = 0.5;
        dx2 = 0.5;
      }
      if (col1 == col2) {
        dy1 = 0.5;
        dy2 = 0.5;
      }
      return (x11 * dx2 * dy2 + x12 * dx2 * dy1 + x21 * dx1 * dy2 + x22 * dx1 * dy1);
    }`},Z1=(r,e,n,t,o,i,s,a,u,l)=>{let d=n.length===2,p=!0,[h,g]=d?[0,1]:p?[2,3]:[1,2],b=r.type.value,v=$=>{let T=$===h?"row":"col";return`
      fn ${T}CubicInterpolation(input_indices: ${r.type.indices}, output_indices: ${e.type.indices}) -> ${b} {
        var output_index = ${e.indicesGet("output_indices",$)};
        var originalIdx: ${b} = getOriginalCoordinateFromResizedCoordinate(output_index, ${o[$]},
        ${t[$]}, ${n[$]}, ${i[$]}, ${i[$]} + ${n.length});
        var fractOriginalIdx: ${b} = originalIdx - floor(originalIdx);
        var coefs = getCubicInterpolationCoefs(fractOriginalIdx);

        if (${a} && (originalIdx < 0 || originalIdx > (${n[$]} - 1))) {
          return ${u};
        }
        var data: array<${b}, 4> = array<${b}, 4>(0.0, 0.0, 0.0, 0.0);
        for (var i: i32 = -1; i < 3; i++) {
          var ${T}: ${b} = originalIdx + ${b}(i);
          if (${T} < 0 || ${T} >= ${n[$]}) {
            ${(()=>l?`coefs[i + 1] = 0.0;
                        continue;`:a?`return ${u};`:`${T} = max(0, min(${T}, ${n[$]} - 1));`)()};
          }
        var input_indices_copy: ${r.type.indices} = input_indices;
          ${r.indicesSet("input_indices_copy",$,`u32(${T})`)};
          data[i + 1] = ${$===h?r.getByIndices("input_indices_copy"):"rowCubicInterpolation(input_indices_copy, output_indices)"};
        }
        return cubicInterpolation1D(data, coefs);
      }`};return`
    ${v(h)};
    ${v(g)};
  fn getCubicInterpolationCoefs(s: ${b}) -> array<${b}, 4> {
    var absS = abs(s);
    var coeffs: array<${b}, 4> = array<${b}, 4>(0.0, 0.0, 0.0, 0.0);
    var oneMinusAbsS: ${b} = 1.0 - absS;
    var twoMinusAbsS: ${b} = 2.0 - absS;
    var onePlusAbsS: ${b} = 1.0 + absS;
    coeffs[0] = ((${s} * onePlusAbsS - 5 * ${s}) * onePlusAbsS + 8 * ${s}) * onePlusAbsS - 4 * ${s};
    coeffs[1] = ((${s} + 2) * absS - (${s} + 3)) * absS * absS + 1;
    coeffs[2] = ((${s} + 2) * oneMinusAbsS - (${s} + 3)) * oneMinusAbsS * oneMinusAbsS + 1;
    coeffs[3] = ((${s} * twoMinusAbsS - 5 * ${s}) * twoMinusAbsS + 8 * ${s}) * twoMinusAbsS - 4 * ${s};
    return coeffs;
  }

  fn cubicInterpolation1D(x: array<${b}, 4>, coefs: array<${b}, 4>) -> ${b} {
    var coefsSum: ${b} = coefs[0] + coefs[1] + coefs[2] + coefs[3];
    return (x[0] * coefs[0] + x[1] * coefs[1]+ x[2] * coefs[2]+ x[3] * coefs[3]) / coefsSum;
  }

  fn bicubicInterpolation(output_indices: ${e.type.indices}) -> ${b} {
    var input_indices: ${r.type.indices} = output_indices;
    return colCubicInterpolation(input_indices, output_indices);
  }
    `},J1=(r,e,n,t,o)=>{let[s,a,u,l,d]=n.length===3?[-1,0,1,2,-1]:[0,2,3,4,1],p=r.type.value;return`
    fn getInputValue(batch: u32, channel: u32, depth:u32, height: u32, width: u32) -> ${p} {
      var input_indices: ${r.type.indices};
      ${r.indicesSet("input_indices",a,`max(0, min(depth, ${n[a]} - 1))`)};
      ${r.indicesSet("input_indices",u,`max(0, min(height, ${n[u]} - 1))`)};
      ${r.indicesSet("input_indices",l,`max(0, min(width, ${n[l]} - 1))`)};
      ${oy(r,d,s,3)}
      return ${r.getByIndices("input_indices")};
    }

    fn trilinearInterpolation(output_indices: ${e.type.indices}) -> ${p} {
      var originalIndices = calculateOriginalIndicesFromOutputIndices(output_indices);
      var depth:${p} = originalIndices[${a}];
      var height:${p} = originalIndices[${u}];
      var width:${p} = originalIndices[${l}];
      ${t?`if (depth < 0 || depth > (${n[a]} - 1) || height < 0 || height > (${n[u]} - 1) || width < 0 || (width > ${n[l]} - 1)) {
      return ${o};
        }`:""};

    depth = max(0, min(depth, ${n[a]} - 1));
      height = max(0, min(height, ${n[u]} - 1));
      width = max(0, min(width, ${n[l]} - 1));
      var depth1: u32 = u32(depth);
      var height1: u32 = u32(height);
      var width1: u32 = u32(width);
      var depth2: u32 = u32(depth + 1);
      var height2: u32 = u32(height + 1);
      var width2: u32 = u32(width + 1);
      var channel: u32 = ${n.length>3?`u32(originalIndices[${d}])`:"0"};
      var batch: u32 =  ${n.length>3?`u32(originalIndices[${s}])`:"0"};

      var x111: ${p} = getInputValue(batch, channel, depth1, height1, width1);
      var x112: ${p} = getInputValue(batch, channel, depth1, height1, width2);
      var x121: ${p} = getInputValue(batch, channel, depth1, height2, width1);
      var x122: ${p} = getInputValue(batch, channel, depth1, height2, width2);
      var x211: ${p} = getInputValue(batch, channel, depth2, height1, width1);
      var x212: ${p} = getInputValue(batch, channel, depth2, height1, width2);
      var x221: ${p} = getInputValue(batch, channel, depth2, height2, width1);
      var x222: ${p} = getInputValue(batch, channel, depth2, height2, width2);
      var dx1: ${p} = abs(depth - ${p}(depth1));
      var dx2: ${p} = abs(${p}(depth2) - depth);
      var dy1: ${p} = abs(height - ${p}(height1));
      var dy2: ${p} = abs(${p}(height2) - height);
      var dz1: ${p} = abs(width - ${p}(width1));
      var dz2: ${p} = abs(${p}(width2) - width);
      if (depth1 == depth2) {
        dx1 = 0.5;
        dx2 = 0.5;
      }
      if (height1 == height2) {
        dy1 = 0.5;
        dy2 = 0.5;
      }
      if (width1 == width2) {
        dz1 = 0.5;
        dz2 = 0.5;
      }
      return (x111 * dx2 * dy2 * dz2 + x112 * dx2 * dy2 * dz1 + x121 * dx2 * dy1 *dz2 + x122 * dx2 * dy1 * dz1 +
              x211 * dx1 * dy2 * dz2 + x212 * dx1 * dy2 * dz1 + x221 * dx1 * dy1 *dz2 + x222 * dx1 * dy1 * dz1);
    }`},Q1=(r,e,n,t,o,i)=>{let s=r.dims,a=W1(i,e.axes,s.length),u=H1(s,t,o,e.axes),l=t.slice();t.length===0&&(l=s.map((x,A)=>x===0?1:u[A]/x),e.keepAspectRatioPolicy!=="stretch"&&(u=q1(s,l,e)));let d=Q("output",r.dataType,u.length),p=G("input",r.dataType,s.length),h=F.size(u),g=s.length===u.length&&s.every((x,A)=>x===u[A]),b=e.coordinateTransformMode==="tf_crop_and_resize",v=e.extrapolationValue,$=p.type.value,T=x=>`
      ${g?"":`
      ${G1(e.coordinateTransformMode,$)};
      ${(()=>{switch(e.mode){case"nearest":return`
              ${Y1(p,s)};
              ${U1(e.nearestMode,n,$)};
              ${K1(p,d,s,u,l.length,a.length,b)};
              `;case"linear":return`
              ${j1(d,s,u,l.length,a.length)};
              ${(()=>{if(s.length===2||s.length===4)return`${X1(p,d,s,b,v)}`;if(s.length===3||s.length===5)return`${J1(p,d,s,b,v)}`;throw Error("Linear mode only supports input dims 2, 3, 4 and 5 are supported in linear mode.")})()};
            `;case"cubic":return`
            ${(()=>{if(s.length===2||s.length===4)return`${Z1(p,d,s,u,l,a,e.cubicCoeffA,b,e.extrapolationValue,e.excludeOutside)}`;throw Error("Cubic mode only supports input dims 2 and 4 are supported in linear mode.")})()};
            `;default:throw Error("Invalid resize mode")}})()};
      `}
      ${x.registerUniform("output_size","u32").registerUniform("scales","f32",l.length).registerUniform("roi","f32",a.length).declareVariables(p,d)}
      ${x.mainStart()}
        ${x.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
        ${g?"output[global_idx] = input[global_idx];":`
        let output_indices = ${d.offsetToIndices("global_idx")};
        var input_indices: ${p.type.indices};
        ${(()=>{switch(e.mode){case"nearest":return`input_indices = calculateInputIndicesFromOutputIndices(output_indices);
                if (checkInputIndices(input_indices)) {
                  output[global_idx] = ${p.getByIndices("input_indices")};
                } else {
                  output[global_idx] = ${e.extrapolationValue};
                }`;case"linear":return`output[global_idx] = ${s.length===2||s.length===4?"bilinearInterpolation":"trilinearInterpolation"}(output_indices);`;case"cubic":return"output[global_idx] = bicubicInterpolation(output_indices);";default:throw Error(`Unsupported resize mode: ${e.mode}`)}})()};
`}
      }`;return{name:"Resize",shaderCache:{hint:`${e.cacheKey}|${n}|${l.length>0?l:""}|${o.length>0?o:""}|${a.length>0?a:""}|${g}|${s}`,inputDependencies:["rank"]},getShaderSource:T,getRunData:()=>({outputs:[{dims:u,dataType:r.dataType}],dispatchGroup:{x:Math.ceil(h/64)},programUniforms:[{type:12,data:h},{type:1,data:l},{type:1,data:a},...ne(s,u)]})}},e_=r=>{let e=r.customDataBuffer;return new Uint32Array(e,e.byteOffset,1)[0]},iy=(r,e)=>{let n=[],t=[],o=[],i=e_(r);if(e.antialias!==0)throw Error("Only default value (0) for Antialias attribute is supported");F1(r.inputs,e,i,n,t,o),r.compute(Q1(r.inputs[0],e,i,n,t,o),{inputs:[0]})},ay=r=>{let e=r.antialias,n=r.axes,t=r.coordinateTransformMode,o=r.cubicCoeffA,i=r.excludeOutside!==0,s=r.extrapolationValue,a=r.keepAspectRatioPolicy,u=r.mode,l=r.nearestMode===""?"simple":r.nearestMode;return ze({antialias:e,axes:n,coordinateTransformMode:t,cubicCoeffA:o,excludeOutside:i,extrapolationValue:s,keepAspectRatioPolicy:a,mode:u,nearestMode:l})}});var t_,r_,uy,ly=B(()=>{"use strict";Ie();Me();De();t_=r=>{if(!r||r.length<3)throw new Error("layerNorm requires at least 3 inputs.");let e=r[0],n=r[1],t=r[2];if(e.dataType!==n.dataType||e.dataType!==t.dataType)throw new Error("All inputs must have the same data type");if(e.dims.length!==3&&e.dims.length!==2)throw new Error("Input must be 2D or 3D");if(n.dims.length!==3&&n.dims.length!==2)throw new Error("Skip must be 2D or 3D");let o=e.dims[e.dims.length-1],i=e.dims[e.dims.length-2];if(n.dims[n.dims.length-1]!==o)throw new Error("Skip must have the same hidden size as input");if(n.dims[n.dims.length-2]!==i)throw new Error("Skip must have the same sequence length as input");if(t.dims.length!==1)throw new Error("Gamma must be 1D");if(t.dims[t.dims.length-1]!==o)throw new Error("Gamma must have the same hidden size as input");if(r.length>3){let s=r[3];if(s.dims.length!==1)throw new Error("Beta must be 1D");if(s.dims[s.dims.length-1]!==o)throw new Error("Beta must have the same hidden size as input")}if(r.length>4){let s=r[4];if(s.dims.length!==1)throw new Error("Bias must be 1D");if(s.dims[s.dims.length-1]!==o)throw new Error("Bias must have the same hidden size as input")}},r_=(r,e,n,t)=>{let o=r[0].dims,i=F.size(o),s=o,a=i,u=o.slice(-1)[0],l=t?o.slice(0,-1).concat(1):[],d=r.length>3,p=r.length>4,h=t&&n>1,g=t&&n>2,b=n>3,v=xt(u),$=[{type:12,data:a},{type:12,data:v},{type:12,data:u},{type:1,data:e.epsilon}],T=A=>{let O=[{name:"output_size",type:"u32"},{name:"components",type:"u32"},{name:"hidden_size",type:"u32"},{name:"epsilon",type:"f32"}],k=[G("x",r[0].dataType,r[0].dims,v),G("skip",r[1].dataType,r[1].dims,v),G("gamma",r[2].dataType,r[2].dims,v)];d&&k.push(G("beta",r[3].dataType,r[3].dims,v)),p&&k.push(G("bias",r[4].dataType,r[4].dims,v)),k.push(Q("output",r[0].dataType,s,v)),h&&k.push(Q("mean_output",1,l)),g&&k.push(Q("inv_std_output",1,l)),b&&k.push(Q("input_skip_bias_sum",r[0].dataType,s,v));let L=ot(r[0].dataType);return`

      ${A.registerUniforms(O).declareVariables(...k)}

      ${A.mainStart()}
        ${A.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size / uniforms.hidden_size")}
        let hidden_size_vectorized: u32 = uniforms.hidden_size / uniforms.components;
        let offset = global_idx * hidden_size_vectorized;
        var sum = ${Bt("f32",v)};
        var squareSum = ${Bt("f32",v)};
        for (var i: u32 = 0; i < hidden_size_vectorized; i++) {
          let skip_value = skip[offset + i];
          let bias_value = ${p?"bias[i]":"0.0"};
          let input_value = x[offset + i];
          let value = input_value + skip_value + bias_value;
          ${b?"input_skip_bias_sum[offset + i] = value;":""}
          output[offset + i] = value;
          let f32_value = ${mr(L,v,"value")};
          sum += f32_value;
          squareSum += f32_value * f32_value;
        }
        let mean = ${qt("sum",v)} / f32(uniforms.hidden_size);
        let inv_std_dev = inverseSqrt(${qt("squareSum",v)} / f32(uniforms.hidden_size) - mean * mean + uniforms.epsilon);
        ${h?"mean_output[global_idx] = mean;":""}
        ${g?"inv_std_output[global_idx] = inv_std_dev;":""}
        for (var i: u32 = 0; i < hidden_size_vectorized; i++) {
          output[offset + i] = (output[offset + i] - ${L}(mean)) * ${L}(inv_std_dev) * gamma[i] + ${d?"beta[i]":"0.0"};
        }
      }`},x=[{dims:s,dataType:r[0].dataType}];return n>1&&x.push({dims:l,dataType:1}),n>2&&x.push({dims:l,dataType:1}),n>3&&x.push({dims:o,dataType:r[0].dataType}),{name:"SkipLayerNormalization",shaderCache:{hint:`${v};${h};${g};${b}`,inputDependencies:r.map((A,O)=>"type")},getShaderSource:T,getRunData:()=>({outputs:x,dispatchGroup:{x:Math.ceil(a/u/64)},programUniforms:$})}},uy=(r,e)=>{t_(r.inputs);let t=[0];r.outputCount>1&&t.push(-3),r.outputCount>2&&t.push(-3),r.outputCount>3&&t.push(3),r.compute(r_(r.inputs,e,r.outputCount,!1),{outputs:t})}});var n_,ja,o_,dy,i_,a_,cy,fy,py=B(()=>{"use strict";Ie();Me();Ct();De();n_=(r,e)=>{if(!r||r.length<1)throw new Error("too few inputs");if(e.axes.length!==0){if(e.axes.length!==e.starts.length||e.axes.length!==e.ends.length)throw new Error("axes, starts and ends must have the same length")}else if(e.starts.length!==e.ends.length)throw new Error("starts and ends must have the same length");r.slice(1).forEach((n,t)=>{if(r[t+1].dataType!==6&&r[t+1].dataType!==7)throw new Error(`Input ${t} must be an array of int32 or int64`)})},ja=(r,e)=>{let n=[];if(r.length>e)if(r[e].dataType===7)r[e].getBigInt64Array().forEach(t=>n.push(Number(t)));else if(r[e].dataType===6)r[e].getInt32Array().forEach(t=>n.push(Number(t)));else throw new Error(`Input ${e} must be an array of int32 or int64`);return n},o_=(r,e)=>{if(r.length>1){let n=ja(r,1),t=ja(r,2),o=ja(r,3);return o.length===0&&(o=[...Array(r[0].dims.length).keys()]),ze({starts:n,ends:t,axes:o})}else return e},dy=(r,e,n,t,o)=>{let i=r;return r<0&&(i+=n[t[e]]),o[e]<0?Math.max(0,Math.min(i,n[t[e]]-1)):Math.max(0,Math.min(i,n[t[e]]))},i_=(r,e,n)=>`fn calculateInputIndices(output_indices: ${e.type.indices}) -> ${r.type.indices} {
          var input_indices: ${r.type.indices};
          var carry = 0u;
          for (var i = ${n.length}; i >= 0; i--) {
            let input_shape_i = ${xe("uniforms.input_shape","i",n.length)};
            let steps_i = ${xe("uniforms.steps","i",n.length)};
            let signs_i = ${xe("uniforms.signs","i",n.length)};
            let starts_i = ${xe("uniforms.starts","i",n.length)};
            var output_index = ${e.indicesGet("output_indices","i")};
            var input_index = output_index * steps_i + starts_i + carry;
            carry = input_index / input_shape_i;
            input_index = input_index % input_shape_i;
            if (signs_i < 0) {
              input_index = input_shape_i - input_index - 1u + starts_i;
            }
            ${r.indicesSet("input_indices","i","input_index")};
          }
          return input_indices;
      }`,a_=(r,e)=>{let n=r[0].dims,t=F.size(n),o=e.axes.length>0?F.normalizeAxes(e.axes,n.length):[...Array(n.length).keys()],i=ja(r,4);i.forEach(T=>T!==0||(()=>{throw new Error("step cannot be 0")})),i.length===0&&(i=Array(o.length).fill(1));let s=e.starts.map((T,x)=>dy(T,x,n,o,i)),a=e.ends.map((T,x)=>dy(T,x,n,o,i));if(o.length!==s.length||o.length!==a.length)throw new Error("start, ends and axes should have the same number of elements");if(o.length!==n.length)for(let T=0;T<n.length;++T)o.includes(T)||(s.splice(T,0,0),a.splice(T,0,n[T]),i.splice(T,0,1));let u=i.map(T=>Math.sign(T));i.forEach((T,x,A)=>{if(T<0){let O=(a[x]-s[x])/T,k=s[x],L=k+O*i[x];s[x]=L,a[x]=k,A[x]=-T}});let l=n.slice(0);o.forEach((T,x)=>{l[T]=Math.ceil((a[T]-s[T])/i[T])});let d={dims:l,dataType:r[0].dataType},p=Q("output",r[0].dataType,l.length),h=G("input",r[0].dataType,r[0].dims.length),g=F.size(l),b=[{name:"outputSize",type:"u32"},{name:"starts",type:"u32",length:s.length},{name:"signs",type:"i32",length:u.length},{name:"steps",type:"u32",length:i.length}],v=[{type:12,data:g},{type:12,data:s},{type:6,data:u},{type:12,data:i},...ne(r[0].dims,l)],$=T=>`
      ${T.registerUniforms(b).declareVariables(h,p)}
        ${i_(h,p,n)}
        ${T.mainStart()}
          ${T.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
          let output_indices = ${p.offsetToIndices("global_idx")};
          let input_indices = calculateInputIndices(output_indices);
          ${p.setByOffset("global_idx",h.getByIndices("input_indices"))}
      }`;return{name:"Slice",shaderCache:{hint:`${u.length}_${s.length}_${i.length}`,inputDependencies:["rank"]},getShaderSource:$,getRunData:()=>({outputs:[d],dispatchGroup:{x:Math.ceil(t/64)},programUniforms:v})}},cy=(r,e)=>{n_(r.inputs,e);let n=o_(r.inputs,e);r.compute(a_(r.inputs,n),{inputs:[0]})},fy=r=>{let e=r.starts,n=r.ends,t=r.axes;return ze({starts:e,ends:n,axes:t})}});var s_,u_,hy,my,gy=B(()=>{"use strict";Ie();Me();Ct();De();s_=r=>{if(!r||r.length!==1)throw new Error("Softmax op requires 1 input.")},u_=(r,e)=>{let n=r.dims,t=F.size(n),o=64,i=e.axis;if(i<0&&(i=n.length+i),i<n.length-1)throw new Error("softmax only supports last axis for now.");let s=n[i],a=t/s,u=xt(s),l=s/u,d=($,T)=>T===4?`max(max(${$}.x, ${$}.y), max(${$}.z, ${$}.w))`:T===2?`max(${$}.x, ${$}.y)`:T===3?`max(max(${$}.x, ${$}.y), ${$}.z)`:$,p=G("x",r.dataType,r.dims,u),h=Q("result",r.dataType,r.dims,u),g=p.type.value,b=ot(r.dataType)==="f32"?`var threadMax = ${g}(-3.402823e+38f);`:`var threadMax = ${g}(-65504.0h);`,v=$=>`
      var<workgroup> rowMaxShared : ${g};
      var<workgroup> rowSumShared : ${g};
      var<workgroup> threadShared : array<${g}, ${o}>;

      fn getValue(row: i32, col: i32, row_stride: i32) -> ${g} {
        let index = row * row_stride + col;
        return x[index];
      }

      fn setValue(row: i32, col: i32, row_stride: i32, value: ${g}) {
        let index = row * row_stride + col;
        result[index] = value;
      }
      ${$.registerUniform("packedCols","i32").declareVariables(p,h)}
      ${$.mainStart()}
        let gindex = i32(global_idx);
        let lindex = i32(local_idx);
        const wg = ${o};
        let row = gindex / wg;
        let cols = uniforms.packedCols;
        let row_stride : i32 = uniforms.packedCols;

        // find the rows max
        ${b}
        for (var col = lindex; col < cols; col += wg) {
          let value = getValue(row, col, row_stride);
          threadMax = max(threadMax, value);
        }
        if (lindex < cols) {
          threadShared[lindex] = threadMax;
        }
        workgroupBarrier();

        var reduceSize = min(cols, wg);
        for (var currSize = reduceSize >> 1;  currSize > 0; currSize = reduceSize >> 1) {
          reduceSize = currSize + (reduceSize & 1);
          if (lindex < currSize) {
            threadShared[lindex] = max(threadShared[lindex], threadShared[lindex + reduceSize]);
          }
          workgroupBarrier();
        }
        if (lindex == 0) {
          rowMaxShared = ${g}(${d("threadShared[0]",u)});
        }
        workgroupBarrier();

        // find the rows sum
        var threadSum = ${g}(0.0);
        for (var col = lindex; col < cols; col += wg) {
          let subExp = exp(getValue(row, col, row_stride) - rowMaxShared);
          threadSum += subExp;
        }
        threadShared[lindex] = threadSum;
        workgroupBarrier();

        for (var currSize = wg >> 1;  currSize > 0; currSize = currSize >> 1) {
          if (lindex < currSize) {
            threadShared[lindex] = threadShared[lindex] + threadShared[lindex + currSize];
          }
          workgroupBarrier();
        }
        if (lindex == 0) {
          rowSumShared = ${g}(${qt("threadShared[0]",u)});
        }
        workgroupBarrier();

        // calculate final value for each element in the row
        for (var col = lindex; col < cols; col += wg) {
          let value = exp(getValue(row, col, row_stride) - rowMaxShared) / rowSumShared;
          setValue(row, col, row_stride, value);
        }
      }`;return{name:"Softmax",shaderCache:{hint:`${u}`,inputDependencies:["type"]},getRunData:()=>({outputs:[{dims:n,dataType:r.dataType}],dispatchGroup:{x:a},programUniforms:[{type:12,data:l}]}),getShaderSource:v}},hy=(r,e)=>{s_(r.inputs),r.compute(u_(r.inputs[0],e))},my=r=>ze({axis:r.axis})});var l_,d_,c_,f_,p_,by,yy,vy=B(()=>{"use strict";Ie();Me();Ct();De();l_=r=>{if(!r||r.length<1)throw new Error("too few inputs")},d_=(r,e)=>{let n=[],t=e.numOutputs;return r[1].dims[0]>0&&(r[1].getBigInt64Array().forEach(o=>n.push(Number(o))),t=n.length),ze({numOutputs:t,axis:e.axis,splitSizes:n})},c_=r=>`
fn calculateOutputIndex(index: u32) -> u32 {
    for (var i: u32 = 0u; i < ${r}u; i += 1u ) {
    if (index < ${xe("uniforms.size_in_split_axis","i",r)}) {
        return i;
    }
    }
    return ${r}u;
}`,f_=r=>{let e=r.length,n=[];for(let t=0;t<e;++t){let o=r[t].setByIndices("indices","input[global_idx]");e===1?n.push(o):t===0?n.push(`if (output_number == ${t}u) { ${o} }`):t===e-1?n.push(`else { ${o} }`):n.push(`else if (output_number == ${t}) { ${o} }`)}return`
      fn writeBufferData(output_number: u32, indices: ${r[0].type.indices}, global_idx: u32) {
        ${n.join(`
`)}
      }`},p_=(r,e)=>{let n=r[0].dims,t=F.size(n),o=r[0].dataType,i=F.normalizeAxis(e.axis,n.length),s=new Array(e.numOutputs),a=G("input",o,n),u=new Array(e.numOutputs),l=[],d=[],p=0,h=[{type:12,data:t}];for(let b=0;b<e.numOutputs;b++){p+=e.splitSizes[b],u[b]=p;let v=n.slice();v[e.axis]=e.splitSizes[b],d.push(v),s[b]=Q(`output${b}`,o,v),l.push({dims:d[b],dataType:r[0].dataType})}h.push({type:12,data:u},...ne(n,...d));let g=b=>`
  ${b.registerUniform("input_size","u32").registerUniform("size_in_split_axis","u32",u.length).declareVariables(a,...s)}
  ${c_(u.length)}
  ${f_(s)}

  ${b.mainStart()}
    ${b.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.input_size")}

    var indices = ${a.offsetToIndices("global_idx")};
    var index = ${a.indicesGet("indices",i)};
    let output_number = calculateOutputIndex(index);
    if (output_number != 0) {
      index -= ${xe("uniforms.size_in_split_axis","output_number - 1u",u.length)};
      ${a.indicesSet("indices",i,"index")};
    }
    writeBufferData(output_number, indices, global_idx);
  }`;return{name:"Split",shaderCache:{hint:`${e.cacheKey};${n}`,inputDependencies:["rank"]},getShaderSource:g,getRunData:()=>({outputs:l,dispatchGroup:{x:Math.ceil(t/64)},programUniforms:h})}},by=(r,e)=>{l_(r.inputs);let n=r.inputs.length===1?e:d_(r.inputs,e);r.compute(p_(r.inputs,n),{inputs:[0]})},yy=r=>{let e=r.axis,n=r.splitSizes,t=r.numOutputs<0?n.length:r.numOutputs;if(t!==n.length)throw new Error("numOutputs and splitSizes lengh must be equal");return ze({axis:e,numOutputs:t,splitSizes:n})}});var wy,h_,m_,g_,xy,_y=B(()=>{"use strict";Ie();Me();De();wy=r=>Array.from(r.getBigInt64Array(),Number),h_=r=>{if(!r||r.length!==2)throw new Error("Tile requires 2 inputs.");if(r[0].dataType!==1&&r[0].dataType!==6&&r[0].dataType!==12)throw new Error("Tile only support float, int32, and uint32 data types");if(r[1].dataType!==7)throw new Error("Tile `repeats` input should be of int64 data type");if(r[1].dims.length!==1)throw new Error("Tile `repeats` input should be 1-D");if(wy(r[1]).length!==r[0].dims.length)throw new Error("Tile `repeats` input should have same number of elements as rank of input data tensor")},m_=(r,e)=>{let n=[];for(let t=0;t<r.length;++t)n.push(r[t]*e[t]);return n},g_=r=>{let e=r[0].dims,n=wy(r[1]),t=m_(e,n),o=F.size(t),i=r[0].dataType,s=G("input",i,e.length),a=Q("output",i,t.length),u=l=>`
      const inputShape = ${s.indices(...e)};
      ${l.registerUniform("output_size","u32").declareVariables(s,a)}
      ${l.mainStart()}
      ${l.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
      let output_indices = ${a.offsetToIndices("global_idx")};
      var input_indices: ${s.type.indices};
      for (var i = 0; i < ${e.length}; i++) {
        let input_dim_i = ${s.indicesGet("uniforms.input_shape","i")};
        let input_dim_value = ${a.indicesGet("output_indices","i")}  % input_dim_i;

        ${s.indicesSet("input_indices","i","input_dim_value")}
      }
      ${a.setByOffset("global_idx",s.getByIndices("input_indices"))}
    }`;return{name:"Tile",shaderCache:{hint:`${n}`,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:t,dataType:r[0].dataType}],dispatchGroup:{x:Math.ceil(o/64)},programUniforms:[{type:12,data:o},...ne(r[0].dims,t)]}),getShaderSource:u}},xy=r=>{h_(r.inputs),r.compute(g_(r.inputs),{inputs:[0]})}});var b_,y_,Ty,$y=B(()=>{"use strict";Ie();Me();De();b_=(r,e,n,t,o)=>{let i=Q("output_data",o,n.length,4),s=G("a_data",e[1].dataType,e[1].dims.length,4),a=G("b_data",e[2].dataType,e[2].dims.length,4),u=G("c_data",e[0].dataType,e[0].dims.length,4),l,d=(p,h,g)=>`select(${h}, ${p}, ${g})`;if(!t)l=i.setByOffset("global_idx",d(s.getByOffset("global_idx"),a.getByOffset("global_idx"),u.getByOffset("global_idx")));else{let p=(h,g,b="")=>{let v=`a_data[index_a${g}][component_a${g}]`,$=`b_data[index_b${g}][component_b${g}]`,T=`bool(c_data[index_c${g}] & ${4278190080>>>(3-g)*8}u)`;return`
            let output_indices${g} = ${i.offsetToIndices(`global_idx * 4u + ${g}u`)};
            let offset_a${g} = ${s.broadcastedIndicesToOffset(`output_indices${g}`,i)};
            let offset_b${g} = ${a.broadcastedIndicesToOffset(`output_indices${g}`,i)};
            let offset_c${g} = ${u.broadcastedIndicesToOffset(`output_indices${g}`,i)};
            let index_a${g} = offset_a${g} / 4u;
            let index_b${g} = offset_b${g} / 4u;
            let index_c${g} = offset_c${g} / 4u;
            let component_a${g} = offset_a${g} % 4u;
            let component_b${g} = offset_b${g} % 4u;
            ${h}[${g}] = ${b}(${d(v,$,T)});
          `};o===9?l=`
            var data = vec4<u32>(0);
            ${p("data",0,"u32")}
            ${p("data",1,"u32")}
            ${p("data",2,"u32")}
            ${p("data",3,"u32")}
            output_data[global_idx] = dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(data));`:l=`
            ${p("output_data[global_idx]",0)}
            ${p("output_data[global_idx]",1)}
            ${p("output_data[global_idx]",2)}
            ${p("output_data[global_idx]",3)}
          `}return`
        ${r.registerUniform("vec_size","u32").declareVariables(u,s,a,i)}
        ${r.mainStart()}
        ${r.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}
        ${l}
      }`},y_=r=>{let e=r[1].dims,n=r[2].dims,t=r[0].dims,o=r[1].dataType,i=!(F.areEqual(e,n)&&F.areEqual(n,t)),s=e,a=F.size(e);if(i){let l=Ar.calcShape(Ar.calcShape(e,n,!1),t,!1);if(!l)throw new Error("Can't perform where op on the given tensors");s=l,a=F.size(s)}let u=Math.ceil(a/4);return{name:"Where",shaderCache:{inputDependencies:["rank","rank","rank"]},getShaderSource:l=>b_(l,r,s,i,o),getRunData:()=>({outputs:[{dims:s,dataType:o}],dispatchGroup:{x:Math.ceil(a/64/4)},programUniforms:[{type:12,data:u},...ne(t,e,n,s)]})}},Ty=r=>{r.compute(y_(r.inputs))}});var Sy,Iy=B(()=>{"use strict";Vm();ku();Um();Hm();Eg();Vg();Ug();Lu();nb();ab();cb();hb();gb();vb();_b();Sb();Ab();Eb();Vu();kb();zb();Lb();ty();ny();Ba();sy();ly();py();gy();vy();_y();eo();Na();$y();Sy=new Map([["Abs",[qm]],["Acos",[jm]],["Acosh",[Km]],["Add",[Cg]],["ArgMax",[Nm,Pu]],["ArgMin",[Lm,Pu]],["Asin",[Ym]],["Asinh",[Xm]],["Atan",[Zm]],["Atanh",[Jm]],["Attention",[Fm]],["AveragePool",[qb,Hb]],["BatchNormalization",[Gm]],["BiasAdd",[Wm]],["BiasSplitGelu",[Og]],["Cast",[eg,Qm]],["Ceil",[rg]],["Clip",[tg]],["Concat",[Fg,Gg]],["Conv",[Gu,Fu]],["ConvTranspose",[rb,tb]],["Cos",[ng]],["Cosh",[og]],["CumSum",[ob,ib]],["Div",[Pg]],["Einsum",[lb,db]],["Elu",[ig,Ma]],["Equal",[kg]],["Erf",[ag]],["Exp",[sg]],["Expand",[pb]],["FastGelu",[mb]],["Floor",[ug]],["FusedConv",[Gu,Fu]],["Gather",[yb,bb]],["GatherElements",[xb,wb]],["Gelu",[lg]],["Gemm",[$b,Tb]],["GlobalAveragePool",[Yb,Kb]],["GlobalMaxPool",[ey,Qb]],["Greater",[zg]],["GreaterOrEqual",[Lg]],["HardSigmoid",[bg,gg]],["InstanceNormalization",[Ib]],["LayerNormalization",[Ob]],["LeakyRelu",[dg,Ma]],["Less",[Mg]],["LessOrEqual",[Ng]],["Log",[Ig]],["MatMul",[Kg]],["MatMulNBits",[Cb,Pb]],["MaxPool",[Zb,Jb]],["Mul",[Dg]],["MultiHeadAttention",[Rb,Bb]],["Neg",[fg]],["Not",[cg]],["Pad",[Mb]],["Pow",[Bg]],["Range",[ry]],["Reciprocal",[pg]],["ReduceMin",[km]],["ReduceMean",[Am]],["ReduceMax",[Pm]],["ReduceSum",[Bm]],["ReduceProd",[Dm]],["ReduceL1",[Om]],["ReduceL2",[Em]],["ReduceLogSum",[zm]],["ReduceLogSumExp",[Cm]],["ReduceSumSquare",[Rm]],["Relu",[hg]],["Resize",[iy,ay]],["Sigmoid",[mg]],["Sin",[yg]],["Sinh",[vg]],["Slice",[cy,fy]],["SkipLayerNormalization",[uy]],["Split",[by,yy]],["Sqrt",[wg]],["Softmax",[hy,my]],["Sub",[Rg]],["Tan",[xg]],["Tanh",[Tg]],["ThresholdedRelu",[Sg,Ma]],["Tile",[xy]],["Transpose",[hm,mm]],["Where",[Ty]]])});var Ka,Ay=B(()=>{"use strict";kt();Zr();De();Ka=class{constructor(e){this.backend=e;this.repo=new Map,this.attributesBound=!1}getArtifact(e){return this.repo.get(e)}setArtifact(e,n){this.repo.set(e,n)}run(e,n,t,o,i){Vt(e.programInfo.name);let s=this.backend.device,a=this.backend.getComputePassEncoder();this.backend.writeTimestamp(this.backend.pendingDispatchNumber*2);let u=[];for(let d of n)u.push({binding:u.length,resource:{buffer:d.buffer}});for(let d of t)u.push({binding:u.length,resource:{buffer:d.buffer}});i&&u.push({binding:u.length,resource:i});let l=s.createBindGroup({layout:e.computePipeline.getBindGroupLayout(0),entries:u,label:e.programInfo.name});if(this.backend.sessionStatus==="capturing"){let d={kernelId:this.backend.currentKernelId,computePipeline:e.computePipeline,bindGroup:l,dispatchGroup:o};this.backend.capturedCommandList.get(this.backend.currentSessionId).push(d)}a.setPipeline(e.computePipeline),a.setBindGroup(0,l),a.dispatchWorkgroups(...o),this.backend.writeTimestamp(this.backend.pendingDispatchNumber*2+1),this.backend.pendingDispatchNumber++,(this.backend.pendingDispatchNumber>=this.backend.maxDispatchNumber||this.backend.queryType==="at-passes")&&this.backend.endComputePass(),this.backend.pendingDispatchNumber>=this.backend.maxDispatchNumber&&this.backend.flush(),Ft(e.programInfo.name)}dispose(){}build(e,n){Vt(e.name);let t=this.backend.device,o=[];t.features.has("shader-f16")&&o.push("enable f16;");let i=fm(n),s=e.getShaderSource(i),a=`${o.join(`
`)}
${i.additionalImplementations}
${s}`,u=t.createShaderModule({code:a,label:e.name});nt("verbose",()=>`[WebGPU] ${e.name} shader code: ${a}`);let l=t.createComputePipeline({compute:{module:u,entryPoint:"main"},layout:"auto",label:e.name});return Ft(e.name),{programInfo:e,computePipeline:l}}normalizeDispatchGroupSize(e){let n=typeof e=="number"?e:e.x,t=typeof e=="number"?1:e.y||1,o=typeof e=="number"?1:e.z||1,i=this.backend.device.limits.maxComputeWorkgroupsPerDimension;if(n<=i&&t<=i&&o<=i)return[n,t,o];let s=n*t*o,a=Math.ceil(Math.sqrt(s));if(a>i){if(a=Math.ceil(Math.cbrt(s)),a>i)throw new Error("Total dispatch size exceeds WebGPU maximum.");return[a,a,a]}else return[a,a,1]}}});var v_,w_,Ya,Oy=B(()=>{"use strict";kt();Ie();Zr();sm();cm();Iy();Ay();v_=(r,e)=>{if(e.length!==r.length)throw new Error(`inputDependencies length ${e.length} is not equal to inputTensors length ${r.length}.`);let n=[];for(let t=0;t<r.length;++t){let o=r[t].dataType;switch(e[t]){case"none":{n.push("");break}case"type":{n.push(`${o}`);break}case"rank":{let i=r[t].dims.length;n.push(`${o};${i}`);break}case"dims":{let i=r[t].dims.join(",");n.push(`${o};${i}`);break}default:throw new Error(`unsupported input dependency: ${e[t]}`)}}return n.join("|")},w_=(r,e,n)=>{let t=r.name;return r.shaderCache?.hint&&(t+="["+r.shaderCache.hint+"]"),t+=":"+n+`:${v_(e,r.shaderCache?.inputDependencies??new Array(e.length).fill("dims"))}`,t},Ya=class{constructor(){this.currentSessionId=null;this.currentKernelId=null;this.commandEncoder=null;this.computePassEncoder=null;this.maxDispatchNumber=16;this.pendingDispatchNumber=0;this.pendingKernels=[];this.pendingQueries=new Map;this.sessionStatus="default";this.capturedCommandList=new Map;this.capturedPendingKernels=new Map;this.sessionExternalDataMapping=new Map}get currentKernelCustomData(){if(this.currentKernelId===null)throw new Error("currentKernelCustomData(): currentKernelId is null. (should not happen)");let e=this.kernelCustomData.get(this.currentKernelId);return e||(e={},this.kernelCustomData.set(this.currentKernelId,e)),e}async initialize(e,n){this.env=e;let t=[],o={requiredLimits:{maxComputeWorkgroupStorageSize:n.limits.maxComputeWorkgroupStorageSize,maxComputeWorkgroupsPerDimension:n.limits.maxComputeWorkgroupsPerDimension,maxStorageBufferBindingSize:n.limits.maxStorageBufferBindingSize,maxBufferSize:n.limits.maxBufferSize,maxComputeInvocationsPerWorkgroup:n.limits.maxComputeInvocationsPerWorkgroup,maxComputeWorkgroupSizeX:n.limits.maxComputeWorkgroupSizeX,maxComputeWorkgroupSizeY:n.limits.maxComputeWorkgroupSizeY,maxComputeWorkgroupSizeZ:n.limits.maxComputeWorkgroupSizeZ},requiredFeatures:t};n.features.has("chromium-experimental-timestamp-query-inside-passes")?t.push("chromium-experimental-timestamp-query-inside-passes"):n.features.has("timestamp-query")&&t.push("timestamp-query"),n.features.has("shader-f16")&&t.push("shader-f16"),this.device=await n.requestDevice(o),this.gpuDataManager=dm(this),this.programManager=new Ka(this),this.kernels=new Map,this.kernelPersistentData=new Map,this.kernelCustomData=new Map,im(e.logLevel,!!e.debug),this.device.onuncapturederror=i=>{i.error instanceof GPUValidationError&&console.error(`An uncaught WebGPU validation error was raised: ${i.error.message}`)},Object.defineProperty(this.env.webgpu,"device",{value:this.device}),this.setQueryType()}dispose(){typeof this.querySet<"u"&&this.querySet.destroy(),this.gpuDataManager.dispose()}getCommandEncoder(){return this.commandEncoder||(this.commandEncoder=this.device.createCommandEncoder()),this.commandEncoder}getComputePassEncoder(){if(!this.computePassEncoder){let e=this.getCommandEncoder(),n={};this.queryType==="at-passes"&&(n.timestampWrites={querySet:this.querySet,beginningOfPassWriteIndex:this.pendingDispatchNumber*2,endOfPassWriteIndex:this.pendingDispatchNumber*2+1}),this.computePassEncoder=e.beginComputePass(n)}return this.computePassEncoder}endComputePass(){this.computePassEncoder&&(this.computePassEncoder.end(),this.computePassEncoder=null)}flush(){if(!this.commandEncoder)return;Vt(),this.endComputePass();let e;this.queryType!=="none"&&(this.commandEncoder.resolveQuerySet(this.querySet,0,this.pendingDispatchNumber*2,this.queryResolveBuffer,0),e=this.device.createBuffer({size:this.pendingDispatchNumber*2*8,usage:GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST}),this.pendingQueries.set(e,this.pendingKernels),this.pendingKernels=[],this.commandEncoder.copyBufferToBuffer(this.queryResolveBuffer,0,e,0,this.pendingDispatchNumber*2*8)),this.device.queue.submit([this.commandEncoder.finish()]),this.gpuDataManager.refreshPendingBuffers(),this.commandEncoder=null,this.pendingDispatchNumber=0,this.queryType!=="none"&&e.mapAsync(GPUMapMode.READ).then(()=>{let n=new BigUint64Array(e.getMappedRange()),t=this.pendingQueries.get(e);for(let o=0;o<n.length/2;o++){let i=t[o],s=i.kernelId,a=this.kernels.get(s),u=a.kernelType,l=a.kernelName,d=i.programName,p=i.inputTensorViews,h=i.outputTensorViews,g=n[o*2],b=n[o*2+1];typeof this.queryTimeBase>"u"&&(this.queryTimeBase=g);let v=Number(g-this.queryTimeBase),$=Number(b-this.queryTimeBase);if(!Number.isSafeInteger(v)||!Number.isSafeInteger($))throw new RangeError("incorrect timestamp range");if(this.env.webgpu.profiling?.ondata)this.env.webgpu.profiling.ondata({version:1,inputsMetadata:p.map(T=>({dims:T.dims,dataType:Xr(T.dataType)})),outputsMetadata:h.map(T=>({dims:T.dims,dataType:Xr(T.dataType)})),kernelId:s,kernelType:u,kernelName:l,programName:d,startTime:v,endTime:$});else{let T="";p.forEach((A,O)=>{T+=`input[${O}]: [${A.dims}] | ${Xr(A.dataType)}, `});let x="";h.forEach((A,O)=>{x+=`output[${O}]: [${A.dims}] | ${Xr(A.dataType)}, `}),console.log(`[profiling] kernel "${s}|${u}|${l}|${d}" ${T}${x}execution time: ${$-v} ns`)}Ao("GPU",`${d}::${g}::${b}`)}e.unmap(),this.pendingQueries.delete(e)}),Ft()}run(e,n,t,o,i){Vt(e.name);let s=[];for(let x=0;x<n.length;++x){let A=this.gpuDataManager.get(n[x].data);A?s[x]=A:s[x]=this.gpuDataManager.create(4)}let{outputs:a,dispatchGroup:u,programUniforms:l}=e.getRunData(n),d=t.length===0?a.map((x,A)=>A):t;if(d.length!==a.length)throw new Error(`Output size ${d.length} must be equal to ${a.length}.`);let p=[],h=[];for(let x=0;x<a.length;++x){if(!Number.isInteger(d[x])||d[x]<-3||d[x]>=a.length)throw new Error(`Invalid output index: ${d[x]}`);if(d[x]===-3)continue;let A=d[x]===-1,O=d[x]===-2,k=A||O?i(a[x].dataType,a[x].dims):o(d[x],a[x].dataType,a[x].dims),L=this.gpuDataManager.get(k.data);if(!L)throw new Error(`no GPU data for output: ${k.data}`);if(A&&this.temporaryData.push(L),O){let W=this.kernelPersistentData.get(this.currentKernelId);W||(W=[],this.kernelPersistentData.set(this.currentKernelId,W)),W.push(L)}p.push(k),h.push(L)}let g;if(l){let x=0,A=[];l.forEach(W=>{let J=typeof W.data=="number"?[W.data]:W.data;if(J.length===0)return;let se=W.type===10?2:4,R,H;W.type===10?(H=J.length>4?16:J.length>2?8:J.length*se,R=J.length>4?16:se*J.length):(H=J.length<=2?J.length*se:16,R=16),x=Math.ceil(x/H)*H,A.push(x);let Be=W.type===10?8:4;x+=J.length>4?Math.ceil(J.length/Be)*R:J.length*se});let O=16;x=Math.ceil(x/O)*O;let k=new ArrayBuffer(x);l.forEach((W,J)=>{let se=A[J],R=typeof W.data=="number"?[W.data]:W.data;if(W.type===6)new Int32Array(k,se,R.length).set(R);else if(W.type===12)new Uint32Array(k,se,R.length).set(R);else if(W.type===10)new Uint16Array(k,se,R.length).set(R);else if(W.type===1)new Float32Array(k,se,R.length).set(R);else throw new Error(`Unsupported uniform type: ${Xr(W.type)}`)});let L=this.gpuDataManager.create(x,GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM);this.device.queue.writeBuffer(L.buffer,0,k,0,x),this.gpuDataManager.release(L.id),g={offset:0,size:x,buffer:L.buffer}}let b=this.programManager.normalizeDispatchGroupSize(u),v=b[1]===1&&b[2]===1,$=w_(e,n,v),T=this.programManager.getArtifact($);if(T||(T=this.programManager.build(e,b),this.programManager.setArtifact($,T),nt("info",()=>`[artifact] key: ${$}, programName: ${e.name}`)),nt("info",()=>`[ProgramManager] run "${e.name}" (key=${$}) with ${b[0]}x${b[1]}x${b[2]}`),this.queryType!=="none"||this.sessionStatus==="capturing"){let x={kernelId:this.currentKernelId,programName:T.programInfo.name,inputTensorViews:n,outputTensorViews:p};this.pendingKernels.push(x),this.sessionStatus==="capturing"&&this.capturedPendingKernels.get(this.currentSessionId).push(x)}return this.programManager.run(T,s,h,b,g),Ft(e.name),p}upload(e,n){this.gpuDataManager.upload(e,n)}memcpy(e,n){this.gpuDataManager.memcpy(e,n)}async download(e,n){await this.gpuDataManager.download(e,n)}alloc(e){return this.gpuDataManager.create(e).id}free(e){return this.gpuDataManager.release(e)}createKernel(e,n,t,o){let i=Sy.get(e);if(!i)throw new Error(`kernel not implemented: ${e}`);let s={kernelType:e,kernelName:o,kernelEntry:i[0],attributes:[i[1],t]};this.kernels.set(n,s)}releaseKernel(e){let n=this.kernelPersistentData.get(e);if(n){for(let t of n)this.gpuDataManager.release(t.id);this.kernelPersistentData.delete(e)}this.kernelCustomData.delete(e),this.kernels.delete(e)}computeKernel(e,n,t){let o=this.kernels.get(e);if(!o)throw new Error(`kernel not created: ${e}`);let i=o.kernelType,s=o.kernelName,a=o.kernelEntry,u=o.attributes;if(this.currentKernelId!==null)throw new Error(`kernel "[${i}] ${s}" is not allowed to be called recursively`);this.currentKernelId=e,u[0]&&(u[1]=u[0](u[1]),u[0]=void 0),nt("info",()=>`[WebGPU] Start to run kernel "[${i}] ${s}"...`);let l=this.env.debug;this.temporaryData=[];try{return l&&this.device.pushErrorScope("validation"),a(n,u[1]),0}catch(d){return t.push(Promise.resolve(`[WebGPU] Kernel "[${i}] ${s}" failed. ${d}`)),1}finally{l&&t.push(this.device.popErrorScope().then(d=>d?`GPU validation error for kernel "[${i}] ${s}": ${d.message}`:null));for(let d of this.temporaryData)this.gpuDataManager.release(d.id);this.temporaryData=[],this.currentKernelId=null}}registerBuffer(e,n,t,o){let i=this.sessionExternalDataMapping.get(e);i||(i=new Map,this.sessionExternalDataMapping.set(e,i));let s=i.get(n),a=this.gpuDataManager.registerExternalBuffer(t,o,s?.[1]);return i.set(n,[a,t]),a}unregisterBuffers(e){let n=this.sessionExternalDataMapping.get(e);n&&(n.forEach(t=>this.gpuDataManager.unregisterExternalBuffer(t[1])),this.sessionExternalDataMapping.delete(e))}getBuffer(e){let n=this.gpuDataManager.get(e);if(!n)throw new Error(`no GPU data for buffer: ${e}`);return n.buffer}createDownloader(e,n,t){return async()=>{let o=await $u(this,e,n);return am(o.buffer,t)}}writeTimestamp(e){this.queryType==="inside-passes"&&this.computePassEncoder.writeTimestamp(this.querySet,e)}setQueryType(){this.queryType="none",(this.env.webgpu.profiling?.mode==="default"||this.env.wasm.trace)&&(this.device.features.has("chromium-experimental-timestamp-query-inside-passes")?this.queryType="inside-passes":this.device.features.has("timestamp-query")&&(this.queryType="at-passes"),this.queryType!=="none"&&typeof this.querySet>"u"&&(this.querySet=this.device.createQuerySet({type:"timestamp",count:this.maxDispatchNumber*2}),this.queryResolveBuffer=this.device.createBuffer({size:this.maxDispatchNumber*2*8,usage:GPUBufferUsage.COPY_SRC|GPUBufferUsage.QUERY_RESOLVE})))}captureBegin(){nt("info","captureBegin"),this.capturedCommandList.get(this.currentSessionId)||this.capturedCommandList.set(this.currentSessionId,[]),this.capturedPendingKernels.get(this.currentSessionId)||this.capturedPendingKernels.set(this.currentSessionId,[]),this.flush(),this.sessionStatus="capturing"}captureEnd(){nt("info","captureEnd"),this.flush(),this.sessionStatus="default"}replay(){nt("info","replay"),this.sessionStatus="replaying";let e=this.capturedCommandList.get(this.currentSessionId),n=this.capturedPendingKernels.get(this.currentSessionId),t=e.length;this.pendingKernels=[];for(let o=0;o<t;o++){let i=this.getComputePassEncoder(),s=e[o];this.writeTimestamp(this.pendingDispatchNumber*2),i.setPipeline(s.computePipeline),i.setBindGroup(0,s.bindGroup),i.dispatchWorkgroups(...s.dispatchGroup),this.writeTimestamp(this.pendingDispatchNumber*2+1),this.pendingDispatchNumber++,this.queryType!=="none"&&this.pendingKernels.push(n[o]),(this.pendingDispatchNumber>=this.maxDispatchNumber||this.queryType==="at-passes")&&this.endComputePass(),this.pendingDispatchNumber>=this.maxDispatchNumber&&this.flush()}this.flush(),this.sessionStatus="default"}onReleaseSession(e){this.unregisterBuffers(e),this.capturedCommandList.has(e)&&this.capturedCommandList.delete(e),this.capturedPendingKernels.has(e)&&this.capturedPendingKernels.delete(e),this.gpuDataManager.onReleaseSession(e)}onRunStart(e){this.currentSessionId=e,this.setQueryType()}}});var Ey={};Ur(Ey,{init:()=>x_});var Xo,Ku,x_,Cy=B(()=>{"use strict";Ie();Oy();Zr();Me();Xo=class r{constructor(e,n,t,o){this.module=e;this.dataType=n;this.data=t;this.dims=o}getFloat32Array(){if(this.dataType!==1)throw new Error("Invalid data type");let e=F.size(this.dims);return e===0?new Float32Array:new Float32Array(this.module.HEAP8.buffer,this.data,e)}getBigInt64Array(){if(this.dataType!==7)throw new Error("Invalid data type");let e=F.size(this.dims);return e===0?new BigInt64Array:new BigInt64Array(this.module.HEAP8.buffer,this.data,e)}getInt32Array(){if(this.dataType!==6)throw new Error("Invalid data type");let e=F.size(this.dims);return e===0?new Int32Array:new Int32Array(this.module.HEAP8.buffer,this.data,e)}reshape(e){if(F.size(e)!==F.size(this.dims))throw new Error("Invalid new shape");return new r(this.module,this.dataType,this.data,e)}},Ku=class{constructor(e,n,t){this.module=e;this.backend=n;this.customDataOffset=0;this.customDataSize=0;let o=e.HEAPU32,i=t>>>2;this.opKernelContext=o[i++];let s=o[i++];this.outputCount=o[i++],this.customDataOffset=o[i++],this.customDataSize=o[i++];let a=[];for(let u=0;u<s;u++){let l=o[i++],d=o[i++],p=o[i++],h=[];for(let g=0;g<p;g++)h.push(o[i++]);a.push(new Xo(e,l,d,h))}this.inputs=a}get kernelCustomData(){return this.backend.currentKernelCustomData}get customDataBuffer(){return this.module.HEAPU8.subarray(this.customDataOffset,this.customDataOffset+this.customDataSize)}compute(e,n){let t=n?.inputs?.map(a=>typeof a=="number"?this.inputs[a]:a)??this.inputs,o=n?.outputs??[],i=(a,u,l)=>new Xo(this.module,u,this.output(a,l),l),s=(a,u)=>{let l=Wo(a);if(!l)throw new Error(`Unsupported data type: ${a}`);let d=l*F.size(u);return new Xo(this.module,a,this.backend.gpuDataManager.create(d).id,u)};return this.backend.run(e,t,o,i,s)}output(e,n){let t=this.module.stackSave();try{let o=this.module.stackAlloc((1+n.length)*4),i=o>>2;this.module.HEAPU32[i++]=n.length;for(let s=0;s<n.length;s++)this.module.HEAPU32[i++]=n[s];return this.module._JsepOutput(this.opKernelContext,e,o)}catch(o){throw new Error(`Failed to generate kernel's output[${e}] with dims [${n}]. If you are running with pre-allocated output, please make sure the output type/dims are correct. Error: ${o}`)}finally{this.module.stackRestore(t)}}},x_=async(r,e,n)=>{let t=r.jsepInit;if(!t)throw new Error("Failed to initialize JSEP. The WebAssembly module is not built with JSEP support.");let o=new Ya;await o.initialize(e,n),t(o,i=>o.alloc(i),i=>o.free(i),(i,s,a,u=!1)=>{if(u)nt("verbose",()=>`[WebGPU] jsepCopyGpuToGpu: src=${i}, dst=${s}, size=${a}`),o.memcpy(i,s);else{nt("verbose",()=>`[WebGPU] jsepCopyCpuToGpu: dataOffset=${i}, gpuDataId=${s}, size=${a}`);let l=r.HEAPU8.subarray(i>>>0,(i>>>0)+a);o.upload(s,l)}},async(i,s,a)=>{nt("verbose",()=>`[WebGPU] jsepCopyGpuToCpu: gpuDataId=${i}, dataOffset=${s}, size=${a}`),await o.download(i,()=>r.HEAPU8.subarray(s>>>0,(s>>>0)+a))},(i,s,a)=>o.createKernel(i,s,a,r.UTF8ToString(r._JsepGetNodeName(s))),i=>o.releaseKernel(i),(i,s,a,u)=>{nt("verbose",()=>`[WebGPU] jsepRun: sessionHandle=${a}, kernel=${i}, contextDataOffset=${s}`);let l=new Ku(r,o,s);return o.computeKernel(i,l,u)},()=>o.captureBegin(),()=>o.captureEnd(),()=>o.replay())}});var __,ky,Dy,$n,T_,Yu,By,Ry,Py,zy,My,Ly,Ny=B(()=>{"use strict";em();rm();Ie();Jn();$a();_u();__=(r,e)=>{ct()._OrtInit(r,e)!==0&&rt("Can't initialize onnxruntime.")},ky=async r=>{__(r.wasm.numThreads,Ho(r.logLevel))},Dy=async(r,e)=>{if(e==="webgpu"||e==="webnn"){if(typeof navigator>"u"||!navigator.gpu)throw new Error("WebGPU is not supported in current environment");let n=await navigator.gpu.requestAdapter();if(!n)throw new Error('Failed to get GPU adapter. You may need to enable flag "--enable-unsafe-webgpu" if you are using Chrome.');if(!r.wasm.simd)throw new Error("Not supported for WebGPU=ON and SIMD=OFF. Please set `env.wasm.simd` to true when using `webgpu` EP");let t=(Cy(),wr(Ey)).init;await t(ct(),r,n)}},$n=new Map,T_=r=>{let e=ct(),n=e.stackSave();try{let t=e.stackAlloc(8);return e._OrtGetInputOutputCount(r,t,t+4)!==0&&rt("Can't get session input/output count."),[e.HEAP32[t/4],e.HEAP32[t/4+1]]}finally{e.stackRestore(n)}},Yu=r=>{let e=ct(),n=e._malloc(r.byteLength);if(n===0)throw new Error(`Can't create a session. failed to allocate a buffer of size ${r.byteLength}.`);return e.HEAPU8.set(r,n),[n,r.byteLength]},By=async(r,e)=>{let n,t,o=ct();Array.isArray(r)?[n,t]=r:r.buffer===o.HEAPU8.buffer?[n,t]=[r.byteOffset,r.byteLength]:[n,t]=Yu(r);let i=0,s=0,a=0,u=[],l=[],d=[];try{if([s,u]=tm(e),e?.externalData&&o.mountExternalData){let x=[];for(let A of e.externalData){let O=typeof A=="string"?A:A.path;x.push(qo(typeof A=="string"?A:A.data).then(k=>{o.mountExternalData(O,k)}))}await Promise.all(x)}i=await o._OrtCreateSession(n,t,s),i===0&&rt("Can't create a session.");let[p,h]=T_(i),g=!!e?.enableGraphCapture,b=[],v=[],$=[];for(let x=0;x<p;x++){let A=o._OrtGetInputName(i,x);A===0&&rt("Can't get an input name."),l.push(A),b.push(o.UTF8ToString(A))}for(let x=0;x<h;x++){let A=o._OrtGetOutputName(i,x);A===0&&rt("Can't get an output name."),d.push(A);let O=o.UTF8ToString(A);v.push(O);{if(g&&e?.preferredOutputLocation===void 0){$.push("gpu-buffer");continue}let k=typeof e?.preferredOutputLocation=="string"?e.preferredOutputLocation:e?.preferredOutputLocation?.[O]??"cpu";if(k!=="cpu"&&k!=="cpu-pinned"&&k!=="gpu-buffer")throw new Error(`Not supported preferred output location: ${k}.`);if(g&&k!=="gpu-buffer")throw new Error(`Not supported preferred output location: ${k}. Only 'gpu-buffer' location is supported when enableGraphCapture is true.`);$.push(k)}}let T=null;return $.some(x=>x==="gpu-buffer")&&(a=o._OrtCreateBinding(i),a===0&&rt("Can't create IO binding."),T={handle:a,outputPreferredLocations:$,outputPreferredLocationsEncoded:$.map(x=>xu(x))}),$n.set(i,[i,l,d,T,g,!1]),[i,b,v]}catch(p){throw l.forEach(h=>o._OrtFree(h)),d.forEach(h=>o._OrtFree(h)),a!==0&&o._OrtReleaseBinding(a),i!==0&&o._OrtReleaseSession(i),p}finally{o._free(n),s!==0&&o._OrtReleaseSessionOptions(s),u.forEach(p=>o._free(p)),o.unmountExternalData?.()}},Ry=r=>{let e=ct(),n=$n.get(r);if(!n)throw new Error(`cannot release session. invalid session id: ${r}`);let[t,o,i,s,a]=n;s&&(a&&e._OrtClearBoundOutputs(s.handle),e._OrtReleaseBinding(s.handle)),e.jsepOnReleaseSession?.(r),o.forEach(u=>e._OrtFree(u)),i.forEach(u=>e._OrtFree(u)),e._OrtReleaseSession(t),$n.delete(r)},Py=(r,e,n,t,o,i=!1)=>{if(!r){e.push(0);return}let s=ct(),a=r[0],u=r[1],l=r[3],d,p;if(a==="string"&&l==="gpu-buffer")throw new Error("String tensor is not supported on GPU.");if(i&&l!=="gpu-buffer")throw new Error(`External buffer must be provided for input/output index ${o} when enableGraphCapture is true.`);if(l==="gpu-buffer"){let b=r[2].gpuBuffer,v=Wo(wu(a));p=u.reduce(($,T)=>$*T,1)*v,d=s.jsepRegisterBuffer(t,o,b,p)}else{let b=r[2];if(Array.isArray(b)){p=4*b.length,d=s._malloc(p),n.push(d);let v=d/4;for(let $=0;$<b.length;$++){if(typeof b[$]!="string")throw new TypeError(`tensor data at index ${$} is not a string`);s.HEAPU32[v++]=dt(b[$],n)}}else p=b.byteLength,d=s._malloc(p),n.push(d),s.HEAPU8.set(new Uint8Array(b.buffer,b.byteOffset,p),d)}let h=s.stackSave(),g=s.stackAlloc(4*u.length);try{let b=g/4;u.forEach($=>s.HEAP32[b++]=$);let v=s._OrtCreateTensor(wu(a),d,p,g,u.length,xu(l));v===0&&rt(`Can't create tensor for input/output. session=${t}, index=${o}.`),e.push(v)}finally{s.stackRestore(h)}},zy=async(r,e,n,t,o,i)=>{let s=ct(),a=$n.get(r);if(!a)throw new Error(`cannot run inference. invalid session id: ${r}`);let u=a[0],l=a[1],d=a[2],p=a[3],h=a[4],g=a[5],b=e.length,v=t.length,$=0,T=[],x=[],A=[],O=[],k=s.stackSave(),L=s.stackAlloc(b*4),W=s.stackAlloc(b*4),J=s.stackAlloc(v*4),se=s.stackAlloc(v*4);try{[$,T]=Qh(i);for(let q=0;q<b;q++)Py(n[q],x,O,r,e[q],h);for(let q=0;q<v;q++)Py(o[q],A,O,r,b+t[q],h);let R=L/4,H=W/4,Be=J/4,Je=se/4;for(let q=0;q<b;q++)s.HEAPU32[R++]=x[q],s.HEAPU32[H++]=l[e[q]];for(let q=0;q<v;q++)s.HEAPU32[Be++]=A[q],s.HEAPU32[Je++]=d[t[q]];if(p&&!g){let{handle:q,outputPreferredLocations:et,outputPreferredLocationsEncoded:Ce}=p;if(l.length!==b)throw new Error(`input count from feeds (${b}) is expected to be always equal to model's input count (${l.length}).`);for(let Ae=0;Ae<b;Ae++){let Te=e[Ae];await s._OrtBindInput(q,l[Te],x[Ae])!==0&&rt(`Can't bind input[${Ae}] for session=${r}.`)}for(let Ae=0;Ae<v;Ae++){let Te=t[Ae];o[Ae]?.[3]?s._OrtBindOutput(q,d[Te],A[Ae],0)!==0&&rt(`Can't bind pre-allocated output[${Ae}] for session=${r}.`):s._OrtBindOutput(q,d[Te],0,Ce[Te])!==0&&rt(`Can't bind output[${Ae}] to ${et[Ae]} for session=${r}.`)}$n.set(r,[u,l,d,p,h,!0])}s.jsepOnRunStart?.(u);let Qe;p?Qe=await s._OrtRunWithBinding(u,p.handle,v,J,$):Qe=await s._OrtRun(u,W,L,b,se,v,J,$),Qe!==0&&rt("failed to call OrtRun().");let Re=[];for(let q=0;q<v;q++){let et=s.HEAPU32[J/4+q];if(et===A[q]){Re.push(o[q]);continue}let Ce=s.stackSave(),Ae=s.stackAlloc(4*4),Te=!1,Le,Ge=0;try{s._OrtGetTensorData(et,Ae,Ae+4,Ae+8,Ae+12)!==0&&rt(`Can't access output tensor data on index ${q}.`);let Y=Ae/4,pe=s.HEAPU32[Y++];Ge=s.HEAPU32[Y++];let $e=s.HEAPU32[Y++],Pt=s.HEAPU32[Y++],Tt=[];for(let yt=0;yt<Pt;yt++)Tt.push(s.HEAPU32[$e/4+yt]);s._OrtFree($e);let jt=Tt.reduce((yt,pt)=>yt*pt,1);Le=Xr(pe);let Fr=p?.outputPreferredLocations[t[q]];if(Le==="string"){if(Fr==="gpu-buffer")throw new Error("String tensor is not supported on GPU.");let yt=[],pt=Ge/4;for(let Rt=0;Rt<jt;Rt++){let Gr=s.HEAPU32[pt++],br=Rt===jt-1?void 0:s.HEAPU32[pt]-Gr;yt.push(s.UTF8ToString(Gr,br))}Re.push([Le,Tt,yt,"cpu"])}else if(Fr==="gpu-buffer"&&jt>0){let yt=s.jsepGetBuffer(Ge),pt=Wo(pe);if(pt===void 0||!Ia(Le))throw new Error(`Unsupported data type: ${Le}`);Te=!0,Re.push([Le,Tt,{gpuBuffer:yt,download:s.jsepCreateDownloader(yt,jt*pt,Le),dispose:()=>{s._OrtReleaseTensor(et)}},"gpu-buffer"])}else{let yt=Sa(Le),pt=new yt(jt);new Uint8Array(pt.buffer,pt.byteOffset,pt.byteLength).set(s.HEAPU8.subarray(Ge,Ge+pt.byteLength)),Re.push([Le,Tt,pt,"cpu"])}}finally{s.stackRestore(Ce),Le==="string"&&Ge&&s._free(Ge),Te||s._OrtReleaseTensor(et)}}return p&&!h&&(s._OrtClearBoundOutputs(p.handle),$n.set(r,[u,l,d,p,h,!1])),Re}finally{s.stackRestore(k),x.forEach(R=>s._OrtReleaseTensor(R)),A.forEach(R=>s._OrtReleaseTensor(R)),O.forEach(R=>s._free(R)),$!==0&&s._OrtReleaseRunOptions($),T.forEach(R=>s._free(R))}},My=r=>{let e=ct(),n=$n.get(r);if(!n)throw new Error("invalid session id");let t=n[0],o=e._OrtEndProfiling(t);o===0&&rt("Can't get an profile file name."),e._OrtFree(o)},Ly=r=>{let e=[];for(let n of r){let t=n[2];!Array.isArray(t)&&"buffer"in t&&e.push(t.buffer)}return e}});var Vy=it((AM,S_)=>{S_.exports='/*!\n * ONNX Runtime Web v1.18.0\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n"use strict";(()=>{var qn=Object.defineProperty;var rl=Object.getOwnPropertyDescriptor;var nl=Object.getOwnPropertyNames;var ol=Object.prototype.hasOwnProperty;var Y=(e,t)=>()=>(e&&(t=e(e=0)),t);var kr=(e,t)=>()=>(t||e((t={exports:{}}).exports,t),t.exports),pn=(e,t)=>{for(var r in t)qn(e,r,{get:t[r],enumerable:!0})},al=(e,t,r,o)=>{if(t&&typeof t=="object"||typeof t=="function")for(let n of nl(t))!ol.call(e,n)&&n!==r&&qn(e,n,{get:()=>t[n],enumerable:!(o=rl(t,n))||o.enumerable});return e};var Nt=e=>al(qn({},"__esModule",{value:!0}),e);var mn={};pn(mn,{createReadStream:()=>Uo,readFile:()=>il,readFileSync:()=>sl});var il,sl,Uo,fn=Y(()=>{il=void 0,sl=void 0,Uo=void 0});var Kn={};pn(Kn,{join:()=>ul});var ul,Yn=Y(()=>{ul=void 0});var No=kr((Wo,Zn)=>{"use strict";var Vo=(()=>{var e=typeof document<"u"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename<"u"&&(e=e||__filename),function(t={}){var r=t,o,n;r.ready=new Promise((i,d)=>{o=i,n=d}),r.mountExternalData=(i,d)=>{(r.gb||(r.gb=new Map)).set(i,d)},r.unmountExternalData=()=>{delete r.gb},r.jsepInit=(i,d,f,w,A,D,G,F,Q,K,se)=>{r.Ib=i,r.vb=d,r.zb=f,r.ob=w,r.yb=A,r.Sa=D,r.Ab=G,r.Cb=F,r.wb=Q,r.xb=K,r.Bb=se,d=(X,fe,P)=>(...ee)=>{let ye=it,Ye=fe?.();ee=X(...ee);let gt=fe?.();return Ye!==gt&&(X=gt,P(Ye),fe=P=null),it!=ye?Qr():ee},f=X=>async(...fe)=>{try{if(r.fb)throw Error("Session already started");let P=r.fb={Db:fe[0],errors:[]},ee=await X(...fe);if(r.fb!==P)throw Error("Session mismatch");i.flush();let ye=P.errors;if(0<ye.length){let Ye=await Promise.all(ye);if(Ye=Ye.filter(gt=>gt),0<Ye.length)throw Error(Ye.join(`\n`))}return ee}finally{r.fb=null}},r._OrtCreateSession=d(r._OrtCreateSession,()=>r._OrtCreateSession,X=>r._OrtCreateSession=X),r._OrtRun=f(d(r._OrtRun,()=>r._OrtRun,X=>r._OrtRun=X)),r._OrtRunWithBinding=f(d(r._OrtRunWithBinding,()=>r._OrtRunWithBinding,X=>r._OrtRunWithBinding=X)),r._OrtBindInput=d(r._OrtBindInput,()=>r._OrtBindInput,X=>r._OrtBindInput=X),r.jsepRegisterBuffer=(X,fe,P,ee)=>i.registerBuffer(X,fe,P,ee),r.jsepGetBuffer=X=>i.getBuffer(X),r.jsepCreateDownloader=(X,fe,P)=>i.createDownloader(X,fe,P),r.jsepOnReleaseSession=X=>{i.onReleaseSession(X)},r.jsepOnRunStart=X=>i.onRunStart(X)};var s=Object.assign({},r),l="./this.program",c=(i,d)=>{throw d},a=typeof window=="object",m=typeof importScripts=="function",g=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",h="",v,_,b;if(g){var S=(fn(),Nt(mn)),I=(Yn(),Nt(Kn));h=m?I.dirname(h)+"/":__dirname+"/",v=(i,d)=>(i=re(i)?new URL(i):I.normalize(i),S.readFileSync(i,d?void 0:"utf8")),b=i=>(i=v(i,!0),i.buffer||(i=new Uint8Array(i)),i),_=(i,d,f,w=!0)=>{i=re(i)?new URL(i):I.normalize(i),S.readFile(i,w?void 0:"utf8",(A,D)=>{A?f(A):d(w?D.buffer:D)})},!r.thisProgram&&1<process.argv.length&&(l=process.argv[1].replace(/\\\\/g,"/")),process.argv.slice(2),c=(i,d)=>{throw process.exitCode=i,d},r.inspect=()=>"[Emscripten Module object]"}else(a||m)&&(m?h=self.location.href:typeof document<"u"&&document.currentScript&&(h=document.currentScript.src),e&&(h=e),h.indexOf("blob:")!==0?h=h.substr(0,h.replace(/[?#].*/,"").lastIndexOf("/")+1):h="",v=i=>{var d=new XMLHttpRequest;return d.open("GET",i,!1),d.send(null),d.responseText},m&&(b=i=>{var d=new XMLHttpRequest;return d.open("GET",i,!1),d.responseType="arraybuffer",d.send(null),new Uint8Array(d.response)}),_=(i,d,f)=>{var w=new XMLHttpRequest;w.open("GET",i,!0),w.responseType="arraybuffer",w.onload=()=>{w.status==200||w.status==0&&w.response?d(w.response):f()},w.onerror=f,w.send(null)});var x=console.log.bind(console),$=console.error.bind(console);Object.assign(r,s),s=null,typeof WebAssembly!="object"&&Ne("no native wasm support detected");var E,T=!1,B,M,W,q,ie,O,J,$e,ke,Re,_e;function N(){var i=E.buffer;r.HEAP8=M=new Int8Array(i),r.HEAP16=q=new Int16Array(i),r.HEAPU8=W=new Uint8Array(i),r.HEAPU16=ie=new Uint16Array(i),r.HEAP32=O=new Int32Array(i),r.HEAPU32=J=new Uint32Array(i),r.HEAPF32=$e=new Float32Array(i),r.HEAPF64=_e=new Float64Array(i),r.HEAP64=ke=new BigInt64Array(i),r.HEAPU64=Re=new BigUint64Array(i)}var Be=[],be=[],ge=[],pe=0,Ce=null,Ae=null;function Ne(i){throw i="Aborted("+i+")",$(i),T=!0,B=1,i=new WebAssembly.RuntimeError(i+". Build with -sASSERTIONS for more info."),n(i),i}var L=i=>i.startsWith("data:application/octet-stream;base64,"),re=i=>i.startsWith("file://"),me;if(me="ort-wasm-simd.wasm",!L(me)){var Xe=me;me=r.locateFile?r.locateFile(Xe,h):h+Xe}function qe(i){if(b)return b(i);throw"both async and sync fetching of the wasm failed"}function ot(i){if(a||m){if(typeof fetch=="function"&&!re(i))return fetch(i,{credentials:"same-origin"}).then(d=>{if(!d.ok)throw"failed to load wasm binary file at \'"+i+"\'";return d.arrayBuffer()}).catch(()=>qe(i));if(_)return new Promise((d,f)=>{_(i,w=>d(new Uint8Array(w)),f)})}return Promise.resolve().then(()=>qe(i))}function At(i,d,f){return ot(i).then(w=>WebAssembly.instantiate(w,d)).then(w=>w).then(f,w=>{$(`failed to asynchronously prepare wasm: ${w}`),Ne(w)})}function Le(i,d){var f=me;return typeof WebAssembly.instantiateStreaming!="function"||L(f)||re(f)||g||typeof fetch!="function"?At(f,i,d):fetch(f,{credentials:"same-origin"}).then(w=>WebAssembly.instantiateStreaming(w,i).then(d,function(A){return $(`wasm streaming compile failed: ${A}`),$("falling back to ArrayBuffer instantiation"),At(f,i,d)}))}var Ge={1374704:(i,d,f,w)=>{if(typeof r>"u"||!r.gb)return 1;if(i=Fe(i>>>0),i.startsWith("./")&&(i=i.substring(2)),i=r.gb.get(i),!i)return 2;if(d>>>=0,f>>>=0,d+f>i.byteLength)return 3;try{return W.set(i.subarray(d,d+f),w>>>0>>>0),0}catch{return 4}},1375205:(i,d,f)=>{f=Fe(f);let w=new Uint8Array(d);w.set(W.subarray(i>>>0,i+d>>>0)),typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string"?(fn(),Nt(mn)).writeFileSync(f,w):(i=new File([w],f,{type:"application/octet-stream"}),i=URL.createObjectURL(i),window.open(i,"_blank"))},1375713:()=>{r.wb()},1375744:()=>{r.xb()},1375773:()=>{r.Bb()},1375798:i=>r.vb(i),1375831:i=>r.zb(i),1375863:(i,d,f)=>{r.ob(i,d,f,!0)},1375902:(i,d,f)=>{r.ob(i,d,f)},1375935:i=>{r.Sa("Abs",i,void 0)},1375986:i=>{r.Sa("Neg",i,void 0)},1376037:i=>{r.Sa("Floor",i,void 0)},1376090:i=>{r.Sa("Ceil",i,void 0)},1376142:i=>{r.Sa("Reciprocal",i,void 0)},1376200:i=>{r.Sa("Sqrt",i,void 0)},1376252:i=>{r.Sa("Exp",i,void 0)},1376303:i=>{r.Sa("Erf",i,void 0)},1376354:i=>{r.Sa("Sigmoid",i,void 0)},1376409:(i,d,f)=>{r.Sa("HardSigmoid",i,{alpha:d,beta:f})},1376488:i=>{r.Sa("Log",i,void 0)},1376539:i=>{r.Sa("Sin",i,void 0)},1376590:i=>{r.Sa("Cos",i,void 0)},1376641:i=>{r.Sa("Tan",i,void 0)},1376692:i=>{r.Sa("Asin",i,void 0)},1376744:i=>{r.Sa("Acos",i,void 0)},1376796:i=>{r.Sa("Atan",i,void 0)},1376848:i=>{r.Sa("Sinh",i,void 0)},1376900:i=>{r.Sa("Cosh",i,void 0)},1376952:i=>{r.Sa("Asinh",i,void 0)},1377005:i=>{r.Sa("Acosh",i,void 0)},1377058:i=>{r.Sa("Atanh",i,void 0)},1377111:i=>{r.Sa("Tanh",i,void 0)},1377163:i=>{r.Sa("Not",i,void 0)},1377214:(i,d,f)=>{r.Sa("Clip",i,{min:d,max:f})},1377283:i=>{r.Sa("Clip",i,void 0)},1377335:(i,d)=>{r.Sa("Elu",i,{alpha:d})},1377393:i=>{r.Sa("Relu",i,void 0)},1377445:(i,d)=>{r.Sa("LeakyRelu",i,{alpha:d})},1377509:(i,d)=>{r.Sa("ThresholdedRelu",i,{alpha:d})},1377579:(i,d)=>{r.Sa("Cast",i,{to:d})},1377637:i=>{r.Sa("Add",i,void 0)},1377688:i=>{r.Sa("Sub",i,void 0)},1377739:i=>{r.Sa("Mul",i,void 0)},1377790:i=>{r.Sa("Div",i,void 0)},1377841:i=>{r.Sa("Pow",i,void 0)},1377892:i=>{r.Sa("Equal",i,void 0)},1377945:i=>{r.Sa("Greater",i,void 0)},1378e3:i=>{r.Sa("GreaterOrEqual",i,void 0)},1378062:i=>{r.Sa("Less",i,void 0)},1378114:i=>{r.Sa("LessOrEqual",i,void 0)},1378173:(i,d,f,w,A)=>{r.Sa("ReduceMean",i,{keepDims:!!d,noopWithEmptyAxes:!!f,axes:w?Array.from(O.subarray(w>>>0,A>>>0)):[]})},1378332:(i,d,f,w,A)=>{r.Sa("ReduceMax",i,{keepDims:!!d,noopWithEmptyAxes:!!f,axes:w?Array.from(O.subarray(w>>>0,A>>>0)):[]})},1378490:(i,d,f,w,A)=>{r.Sa("ReduceMin",i,{keepDims:!!d,noopWithEmptyAxes:!!f,axes:w?Array.from(O.subarray(w>>>0,A>>>0)):[]})},1378648:(i,d,f,w,A)=>{r.Sa("ReduceProd",i,{keepDims:!!d,noopWithEmptyAxes:!!f,axes:w?Array.from(O.subarray(w>>>0,A>>>0)):[]})},1378807:(i,d,f,w,A)=>{r.Sa("ReduceSum",i,{keepDims:!!d,noopWithEmptyAxes:!!f,axes:w?Array.from(O.subarray(w>>>0,A>>>0)):[]})},1378965:(i,d,f,w,A)=>{r.Sa("ReduceL1",i,{keepDims:!!d,noopWithEmptyAxes:!!f,axes:w?Array.from(O.subarray(w>>>0,A>>>0)):[]})},1379122:(i,d,f,w,A)=>{r.Sa("ReduceL2",i,{keepDims:!!d,noopWithEmptyAxes:!!f,axes:w?Array.from(O.subarray(w>>>0,A>>>0)):[]})},1379279:(i,d,f,w,A)=>{r.Sa("ReduceLogSum",i,{keepDims:!!d,noopWithEmptyAxes:!!f,axes:w?Array.from(O.subarray(w>>>0,A>>>0)):[]})},1379440:(i,d,f,w,A)=>{r.Sa("ReduceSumSquare",i,{keepDims:!!d,noopWithEmptyAxes:!!f,axes:w?Array.from(O.subarray(w>>>0,A>>>0)):[]})},1379604:(i,d,f,w,A)=>{r.Sa("ReduceLogSumExp",i,{keepDims:!!d,noopWithEmptyAxes:!!f,axes:w?Array.from(O.subarray(w>>>0,A>>>0)):[]})},1379768:i=>{r.Sa("Where",i,void 0)},1379821:(i,d,f)=>{r.Sa("Transpose",i,{perm:d?Array.from(O.subarray(d>>>0,f>>>0)):[]})},1379929:(i,d,f,w,A,D,G,F,Q,K,se,X,fe,P,ee)=>{r.Sa("ConvTranspose",i,{format:Q?"NHWC":"NCHW",autoPad:d,dilations:[f],group:w,kernel_shape:[A],pads:[D,G],strides:[F],wIsConst:()=>!!M[K>>>0],outputPadding:se?Array.from(O.subarray(se>>>0,X>>>0)):[],outputShape:fe?Array.from(O.subarray(fe>>>0,P>>>0)):[],activation:Fe(ee)})},1380331:(i,d,f,w,A,D,G,F,Q,K,se,X,fe,P)=>{r.Sa("ConvTranspose",i,{format:F?"NHWC":"NCHW",autoPad:d,dilations:Array.from(O.subarray(f>>>0,(f>>>0)+2>>>0)),group:w,kernelShape:Array.from(O.subarray(A>>>0,(A>>>0)+2>>>0)),pads:Array.from(O.subarray(D>>>0,(D>>>0)+4>>>0)),strides:Array.from(O.subarray(G>>>0,(G>>>0)+2>>>0)),wIsConst:()=>!!M[Q>>>0],outputPadding:K?Array.from(O.subarray(K>>>0,se>>>0)):[],outputShape:X?Array.from(O.subarray(X>>>0,fe>>>0)):[],activation:Fe(P)})},1380896:(i,d,f,w,A,D,G,F,Q,K,se,X,fe,P,ee)=>{r.Sa("ConvTranspose",i,{format:Q?"NHWC":"NCHW",autoPad:d,dilations:[f],group:w,kernel_shape:[A],pads:[D,G],strides:[F],wIsConst:()=>!!M[K>>>0],outputPadding:se?Array.from(O.subarray(se>>>0,X>>>0)):[],outputShape:fe?Array.from(O.subarray(fe>>>0,P>>>0)):[],activation:Fe(ee)})},1381298:(i,d,f,w,A,D,G,F,Q,K,se,X,fe,P)=>{r.Sa("ConvTranspose",i,{format:F?"NHWC":"NCHW",autoPad:d,dilations:Array.from(O.subarray(f>>>0,(f>>>0)+2>>>0)),group:w,kernelShape:Array.from(O.subarray(A>>>0,(A>>>0)+2>>>0)),pads:Array.from(O.subarray(D>>>0,(D>>>0)+4>>>0)),strides:Array.from(O.subarray(G>>>0,(G>>>0)+2>>>0)),wIsConst:()=>!!M[Q>>>0],outputPadding:K?Array.from(O.subarray(K>>>0,se>>>0)):[],outputShape:X?Array.from(O.subarray(X>>>0,fe>>>0)):[],activation:Fe(P)})},1381863:(i,d)=>{r.Sa("GlobalAveragePool",i,{format:d?"NHWC":"NCHW"})},1381954:(i,d,f,w,A,D,G,F,Q,K,se,X,fe,P,ee,ye)=>{r.Sa("AveragePool",i,{format:ye?"NHWC":"NCHW",auto_pad:d,ceil_mode:f,count_include_pad:w,storage_order:A,dilations:[D,G],kernel_shape:[F,Q],pads:[K,se,X,fe],strides:[P,ee]})},1382238:(i,d)=>{r.Sa("GlobalAveragePool",i,{format:d?"NHWC":"NCHW"})},1382329:(i,d,f,w,A,D,G,F,Q,K,se,X,fe,P,ee,ye)=>{r.Sa("AveragePool",i,{format:ye?"NHWC":"NCHW",auto_pad:d,ceil_mode:f,count_include_pad:w,storage_order:A,dilations:[D,G],kernel_shape:[F,Q],pads:[K,se,X,fe],strides:[P,ee]})},1382613:(i,d)=>{r.Sa("GlobalMaxPool",i,{format:d?"NHWC":"NCHW"})},1382700:(i,d,f,w,A,D,G,F,Q,K,se,X,fe,P,ee,ye)=>{r.Sa("MaxPool",i,{format:ye?"NHWC":"NCHW",auto_pad:d,ceil_mode:f,count_include_pad:w,storage_order:A,dilations:[D,G],kernel_shape:[F,Q],pads:[K,se,X,fe],strides:[P,ee]})},1382980:(i,d)=>{r.Sa("GlobalMaxPool",i,{format:d?"NHWC":"NCHW"})},1383067:(i,d,f,w,A,D,G,F,Q,K,se,X,fe,P,ee,ye)=>{r.Sa("MaxPool",i,{format:ye?"NHWC":"NCHW",auto_pad:d,ceil_mode:f,count_include_pad:w,storage_order:A,dilations:[D,G],kernel_shape:[F,Q],pads:[K,se,X,fe],strides:[P,ee]})},1383347:(i,d,f,w,A)=>{r.Sa("Gemm",i,{alpha:d,beta:f,transA:w,transB:A})},1383451:i=>{r.Sa("MatMul",i,void 0)},1383505:(i,d,f,w)=>{r.Sa("ArgMax",i,{keepDims:!!d,selectLastIndex:!!f,axis:w})},1383613:(i,d,f,w)=>{r.Sa("ArgMin",i,{keepDims:!!d,selectLastIndex:!!f,axis:w})},1383721:(i,d)=>{r.Sa("Softmax",i,{axis:d})},1383784:(i,d)=>{r.Sa("Concat",i,{axis:d})},1383844:(i,d,f,w,A)=>{r.Sa("Split",i,{axis:d,numOutputs:f,splitSizes:w?Array.from(O.subarray(w>>>0,A>>>0)):[]})},1383984:i=>{r.Sa("Expand",i,void 0)},1384038:(i,d)=>{r.Sa("Gather",i,{axis:Number(d)})},1384109:(i,d)=>{r.Sa("GatherElements",i,{axis:Number(d)})},1384188:(i,d,f,w,A,D,G,F,Q,K,se)=>{r.Sa("Resize",i,{antialias:d,axes:f?Array.from(O.subarray(f>>>0,w>>>0)):[],coordinateTransformMode:Fe(A),cubicCoeffA:D,excludeOutside:G,extrapolationValue:F,keepAspectRatioPolicy:Fe(Q),mode:Fe(K),nearestMode:Fe(se)})},1384534:(i,d,f,w,A,D,G)=>{r.Sa("Slice",i,{starts:d?Array.from(O.subarray(d>>>0,f>>>0)):[],ends:w?Array.from(O.subarray(w>>>0,A>>>0)):[],axes:D?Array.from(O.subarray(D>>>0,G>>>0)):[]})},1384750:i=>{r.Sa("Tile",i,void 0)},1384802:(i,d,f)=>{r.Sa("LayerNormalization",i,{axis:Number(d),epsilon:Number(f)})},1384909:(i,d,f)=>{r.Sa("InstanceNormalization",i,{epsilon:d,format:f?"NHWC":"NCHW"})},1385023:(i,d,f)=>{r.Sa("InstanceNormalization",i,{epsilon:d,format:f?"NHWC":"NCHW"})},1385137:i=>{r.Sa("Range",i,void 0)},1385190:(i,d)=>{r.Sa("Einsum",i,{equation:Fe(d)})},1385271:(i,d,f,w,A)=>{r.Sa("Pad",i,{mode:d,value:f,pads:w?Array.from(O.subarray(w>>>0,A>>>0)):[]})},1385398:(i,d,f,w,A,D)=>{r.Sa("BatchNormalization",i,{epsilon:d,momentum:f,spatial:!!A,trainingMode:!!w,format:D?"NHWC":"NCHW"})},1385567:(i,d,f,w,A,D)=>{r.Sa("BatchNormalization",i,{epsilon:d,momentum:f,spatial:!!A,trainingMode:!!w,format:D?"NHWC":"NCHW"})},1385736:(i,d,f)=>{r.Sa("CumSum",i,{exclusive:Number(d),reverse:Number(f)})},1385833:(i,d,f,w,A,D,G,F,Q)=>{r.Sa("Attention",i,{numHeads:d,isUnidirectional:f,maskFilterValue:w,scale:A,doRotary:D,qkvHiddenSizes:G?Array.from(O.subarray(Number(F)>>>0,Number(F)+G>>>0)):[],pastPresentShareBuffer:!!Q})},1386105:i=>{r.Sa("BiasAdd",i,void 0)},1386160:i=>{r.Sa("BiasSplitGelu",i,void 0)},1386221:i=>{r.Sa("FastGelu",i,void 0)},1386277:(i,d,f,w,A,D,G,F,Q,K,se,X,fe)=>{r.Sa("Conv",i,{format:Q?"NHWC":"NCHW",auto_pad:d,dilations:[f],group:w,kernel_shape:[A],pads:D?Array.from(O.subarray(D>>>0,G>>>0)):[],strides:[F],w_is_const:()=>!!M[K>>>0],activation:Fe(se),activation_params:X?Array.from($e.subarray(X>>>0,fe>>>0)):[]})},1386647:(i,d,f,w,A,D,G,F,Q,K,se,X,fe,P,ee,ye)=>{r.Sa("Conv",i,{format:X?"NHWC":"NCHW",auto_pad:d,dilations:[f,w],group:A,kernel_shape:[D,G],pads:F?Array.from(O.subarray(F>>>0,Q>>>0)):[],strides:[K,se],w_is_const:()=>!!M[fe>>>0],activation:Fe(P),activation_params:ee?Array.from($e.subarray(ee>>>0,ye>>>0)):[]})},1387038:i=>{r.Sa("Gelu",i,void 0)},1387090:(i,d,f,w,A,D)=>{r.Sa("MatMulNBits",i,{k:d,n:f,accuracyLevel:w,bits:A,blockSize:D})},1387217:(i,d,f,w,A,D)=>{r.Sa("MultiHeadAttention",i,{numHeads:d,isUnidirectional:f,maskFilterValue:w,scale:A,doRotary:D})},1387376:(i,d)=>{r.Sa("SkipLayerNormalization",i,{epsilon:d})},1387457:i=>{r.Ab(i)},1387491:(i,d)=>r.Cb(i,d,r.fb.Db,r.fb.errors)};function et(i){this.name="ExitStatus",this.message=`Program terminated with exit(${i})`,this.status=i}function Tt(i){this.cb=i-24,this.rb=function(d){J[this.cb+4>>>2>>>0]=d},this.qb=function(d){J[this.cb+8>>>2>>>0]=d},this.kb=function(d,f){this.jb(),this.rb(d),this.qb(f)},this.jb=function(){J[this.cb+16>>>2>>>0]=0}}var ft=0,Wr=0,dr=typeof TextDecoder<"u"?new TextDecoder("utf8"):void 0,lt=(i,d,f)=>{d>>>=0;var w=d+f;for(f=d;i[f]&&!(f>=w);)++f;if(16<f-d&&i.buffer&&dr)return dr.decode(i.subarray(d,f));for(w="";d<f;){var A=i[d++];if(A&128){var D=i[d++]&63;if((A&224)==192)w+=String.fromCharCode((A&31)<<6|D);else{var G=i[d++]&63;A=(A&240)==224?(A&15)<<12|D<<6|G:(A&7)<<18|D<<12|G<<6|i[d++]&63,65536>A?w+=String.fromCharCode(A):(A-=65536,w+=String.fromCharCode(55296|A>>10,56320|A&1023))}}else w+=String.fromCharCode(A)}return w},Fe=(i,d)=>(i>>>=0)?lt(W,i,d):"",dt=i=>{for(var d=0,f=0;f<i.length;++f){var w=i.charCodeAt(f);127>=w?d++:2047>=w?d+=2:55296<=w&&57343>=w?(d+=4,++f):d+=3}return d},kt=(i,d,f,w)=>{if(f>>>=0,!(0<w))return 0;var A=f;w=f+w-1;for(var D=0;D<i.length;++D){var G=i.charCodeAt(D);if(55296<=G&&57343>=G){var F=i.charCodeAt(++D);G=65536+((G&1023)<<10)|F&1023}if(127>=G){if(f>=w)break;d[f++>>>0]=G}else{if(2047>=G){if(f+1>=w)break;d[f++>>>0]=192|G>>6}else{if(65535>=G){if(f+2>=w)break;d[f++>>>0]=224|G>>12}else{if(f+3>=w)break;d[f++>>>0]=240|G>>18,d[f++>>>0]=128|G>>12&63}d[f++>>>0]=128|G>>6&63}d[f++>>>0]=128|G&63}}return d[f>>>0]=0,f-A},Nr=i=>{if(i===null)return"null";var d=typeof i;return d==="object"||d==="array"||d==="function"?i.toString():""+i},cr,at=i=>{for(var d="";W[i>>>0];)d+=cr[W[i++>>>0]];return d},ht={},Rt={},qt={},st;function Gr(i,d,f={}){var w=d.name;if(!i)throw new st(`type "${w}" must have a positive integer typeid pointer`);if(Rt.hasOwnProperty(i)){if(f.tb)return;throw new st(`Cannot register type \'${w}\' twice`)}Rt[i]=d,delete qt[i],ht.hasOwnProperty(i)&&(d=ht[i],delete ht[i],d.forEach(A=>A()))}function ut(i,d,f={}){if(!("argPackAdvance"in d))throw new TypeError("registerType registeredInstance requires argPackAdvance");Gr(i,d,f)}var pr=(i,d,f)=>{switch(d){case 1:return f?w=>M[w>>>0>>>0]:w=>W[w>>>0>>>0];case 2:return f?w=>q[w>>>1>>>0]:w=>ie[w>>>1>>>0];case 4:return f?w=>O[w>>>2>>>0]:w=>J[w>>>2>>>0];case 8:return f?w=>ke[w>>>3]:w=>Re[w>>>3];default:throw new TypeError(`invalid integer width (${d}): ${i}`)}};function mr(){this.$a=[void 0],this.nb=[]}var De=new mr;function Kt(i){i>>>=0,i>=De.cb&&--De.get(i).pb===0&&De.jb(i)}var Ke=i=>{if(!i)throw new st("Cannot use deleted val. handle = "+i);return De.get(i).value},te=i=>{switch(i){case void 0:return 1;case null:return 2;case!0:return 3;case!1:return 4;default:return De.kb({pb:1,value:i})}};function Bt(i){return this.fromWireType(O[i>>>2>>>0])}var Hr=(i,d)=>{switch(d){case 4:return function(f){return this.fromWireType($e[f>>>2>>>0])};case 8:return function(f){return this.fromWireType(_e[f>>>3>>>0])};default:throw new TypeError(`invalid float width (${d}): ${i}`)}};function Hn(i){return this.fromWireType(J[i>>>2>>>0])}var fr=typeof TextDecoder<"u"?new TextDecoder("utf-16le"):void 0,Ln=(i,d)=>{for(var f=i>>1,w=f+d/2;!(f>=w)&&ie[f>>>0];)++f;if(f<<=1,32<f-i&&fr)return fr.decode(W.subarray(i>>>0,f>>>0));for(f="",w=0;!(w>=d/2);++w){var A=q[i+2*w>>>1>>>0];if(A==0)break;f+=String.fromCharCode(A)}return f},Lr=(i,d,f)=>{if(f??=2147483647,2>f)return 0;f-=2;var w=d;f=f<2*i.length?f/2:i.length;for(var A=0;A<f;++A)q[d>>>1>>>0]=i.charCodeAt(A),d+=2;return q[d>>>1>>>0]=0,d-w},Fr=i=>2*i.length,jr=(i,d)=>{for(var f=0,w="";!(f>=d/4);){var A=O[i+4*f>>>2>>>0];if(A==0)break;++f,65536<=A?(A-=65536,w+=String.fromCharCode(55296|A>>10,56320|A&1023)):w+=String.fromCharCode(A)}return w},qr=(i,d,f)=>{if(d>>>=0,f??=2147483647,4>f)return 0;var w=d;f=w+f-4;for(var A=0;A<i.length;++A){var D=i.charCodeAt(A);if(55296<=D&&57343>=D){var G=i.charCodeAt(++A);D=65536+((D&1023)<<10)|G&1023}if(O[d>>>2>>>0]=D,d+=4,d+4>f)break}return O[d>>>2>>>0]=0,d-w},hr=i=>{for(var d=0,f=0;f<i.length;++f){var w=i.charCodeAt(f);55296<=w&&57343>=w&&++f,d+=4}return d},Yt=(i,d)=>{var f=Rt[i];if(f===void 0)throw i=Er(i),f=at(i),He(i),new st(d+" has unknown type "+f);return f},gr=(i,d,f)=>{var w=[];return i=i.toWireType(w,f),w.length&&(J[d>>>2>>>0]=te(w)),i},Dt=i=>{try{i()}catch(d){Ne(d)}};function Kr(){var i=ne,d={};for(let[f,w]of Object.entries(i))d[f]=typeof w=="function"?function(){Mt.push(f);try{return w.apply(null,arguments)}finally{T||(Mt.pop(),it&&ct===1&&Mt.length===0&&(ct=0,Dt(or),typeof Fibers<"u"&&Fibers.Kb()))}}:w;return d}var ct=0,it=null,yr=0,Mt=[],br={},wr={},Yr=0,Zt=null,Zr=[];function Qr(){return new Promise((i,d)=>{Zt={resolve:i,reject:d}})}function vr(){var i=tt(65548),d=i+12;J[i>>>2>>>0]=d,J[i+4>>>2>>>0]=d+65536,d=Mt[0];var f=br[d];return f===void 0&&(f=Yr++,br[d]=f,wr[f]=d),O[i+8>>>2>>>0]=f,i}function Qt(i){if(!T){if(ct===0){var d=!1,f=!1;i((w=0)=>{if(!T&&(yr=w,d=!0,f)){ct=2,Dt(()=>un(it)),typeof Browser<"u"&&Browser.lb.sb&&Browser.lb.resume(),w=!1;try{var A=(0,ne[wr[O[it+8>>>2>>>0]]])()}catch(F){A=F,w=!0}var D=!1;if(!it){var G=Zt;G&&(Zt=null,(w?G.reject:G.resolve)(A),D=!0)}if(w&&!D)throw A}}),f=!0,d||(ct=1,it=vr(),typeof Browser<"u"&&Browser.lb.sb&&Browser.lb.pause(),Dt(()=>sn(it)))}else ct===2?(ct=0,Dt(ln),He(it),it=null,Zr.forEach(w=>{if(!T)try{w();try{B=B=w=B,r.onExit?.(w),T=!0,c(w,new et(w))}catch(A){A instanceof et||A=="unwind"||c(1,A)}}catch(A){A instanceof et||A=="unwind"||c(1,A)}})):Ne(`invalid state: ${ct}`);return yr}}function It(i){return Qt(d=>{i().then(d)})}var zt=[],Xr={},Xt=i=>{var d=Xr[i];return d===void 0?at(i):d},$r=()=>typeof globalThis=="object"?globalThis:Function("return this")(),Jr=i=>{var d=zt.length;return zt.push(i),d},_r=(i,d)=>{for(var f=Array(i),w=0;w<i;++w)f[w]=Yt(J[d+4*w>>>2>>>0],"parameter "+w);return f},Sr=(i,d)=>Object.defineProperty(d,"name",{value:i});function Fn(i){var d=Function;if(!(d instanceof Function))throw new TypeError(`new_ called with constructor type ${typeof d} which is not a function`);var f=Sr(d.name||"unknownFunctionName",function(){});return f.prototype=d.prototype,f=new f,i=d.apply(f,i),i instanceof Object?i:f}var Oe=i=>i%4===0&&(i%100!==0||i%400===0),Jt=[0,31,60,91,121,152,182,213,244,274,305,335],er=[0,31,59,90,120,151,181,212,243,273,304,334],xr=i=>{var d=dt(i)+1,f=tt(d);return f&&kt(i,W,f,d),f},Ut=[],Cr=(i,d)=>{Ut.length=0;for(var f;f=W[i++>>>0];){var w=f!=105;w&=f!=112,d+=w&&d%8?4:0,Ut.push(f==112?J[d>>>2>>>0]:f==106?ke[d>>>3]:f==105?O[d>>>2>>>0]:_e[d>>>3>>>0]),d+=w?8:4}return Ut},tr={},Ir=()=>{if(!rr){var i={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:(typeof navigator=="object"&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",_:l||"./this.program"},d;for(d in tr)tr[d]===void 0?delete i[d]:i[d]=tr[d];var f=[];for(d in i)f.push(`${d}=${i[d]}`);rr=f}return rr},rr,en=[null,[],[]],tn=[31,29,31,30,31,30,31,31,30,31,30,31],Ar=[31,28,31,30,31,30,31,31,30,31,30,31];function rn(i){var d=Array(dt(i)+1);return kt(i,d,0,d.length),d}function Tr(i,d,f,w){function A(P,ee,ye){for(P=typeof P=="number"?P.toString():P||"";P.length<ee;)P=ye[0]+P;return P}function D(P,ee){return A(P,ee,"0")}function G(P,ee){function ye(gt){return 0>gt?-1:0<gt?1:0}var Ye;return(Ye=ye(P.getFullYear()-ee.getFullYear()))===0&&(Ye=ye(P.getMonth()-ee.getMonth()))===0&&(Ye=ye(P.getDate()-ee.getDate())),Ye}function F(P){switch(P.getDay()){case 0:return new Date(P.getFullYear()-1,11,29);case 1:return P;case 2:return new Date(P.getFullYear(),0,3);case 3:return new Date(P.getFullYear(),0,2);case 4:return new Date(P.getFullYear(),0,1);case 5:return new Date(P.getFullYear()-1,11,31);case 6:return new Date(P.getFullYear()-1,11,30)}}function Q(P){var ee=P.ab;for(P=new Date(new Date(P.bb+1900,0,1).getTime());0<ee;){var ye=P.getMonth(),Ye=(Oe(P.getFullYear())?tn:Ar)[ye];if(ee>Ye-P.getDate())ee-=Ye-P.getDate()+1,P.setDate(1),11>ye?P.setMonth(ye+1):(P.setMonth(0),P.setFullYear(P.getFullYear()+1));else{P.setDate(P.getDate()+ee);break}}return ye=new Date(P.getFullYear()+1,0,4),ee=F(new Date(P.getFullYear(),0,4)),ye=F(ye),0>=G(ee,P)?0>=G(ye,P)?P.getFullYear()+1:P.getFullYear():P.getFullYear()-1}i>>>=0,d>>>=0,f>>>=0,w>>>=0;var K=J[w+40>>>2>>>0];w={Gb:O[w>>>2>>>0],Fb:O[w+4>>>2>>>0],hb:O[w+8>>>2>>>0],mb:O[w+12>>>2>>>0],ib:O[w+16>>>2>>>0],bb:O[w+20>>>2>>>0],Wa:O[w+24>>>2>>>0],ab:O[w+28>>>2>>>0],Jb:O[w+32>>>2>>>0],Eb:O[w+36>>>2>>>0],Hb:K?Fe(K):""},f=Fe(f),K={"%c":"%a %b %d %H:%M:%S %Y","%D":"%m/%d/%y","%F":"%Y-%m-%d","%h":"%b","%r":"%I:%M:%S %p","%R":"%H:%M","%T":"%H:%M:%S","%x":"%m/%d/%y","%X":"%H:%M:%S","%Ec":"%c","%EC":"%C","%Ex":"%m/%d/%y","%EX":"%H:%M:%S","%Ey":"%y","%EY":"%Y","%Od":"%d","%Oe":"%e","%OH":"%H","%OI":"%I","%Om":"%m","%OM":"%M","%OS":"%S","%Ou":"%u","%OU":"%U","%OV":"%V","%Ow":"%w","%OW":"%W","%Oy":"%y"};for(var se in K)f=f.replace(new RegExp(se,"g"),K[se]);var X="Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "),fe="January February March April May June July August September October November December".split(" ");K={"%a":P=>X[P.Wa].substring(0,3),"%A":P=>X[P.Wa],"%b":P=>fe[P.ib].substring(0,3),"%B":P=>fe[P.ib],"%C":P=>D((P.bb+1900)/100|0,2),"%d":P=>D(P.mb,2),"%e":P=>A(P.mb,2," "),"%g":P=>Q(P).toString().substring(2),"%G":P=>Q(P),"%H":P=>D(P.hb,2),"%I":P=>(P=P.hb,P==0?P=12:12<P&&(P-=12),D(P,2)),"%j":P=>{for(var ee=0,ye=0;ye<=P.ib-1;ee+=(Oe(P.bb+1900)?tn:Ar)[ye++]);return D(P.mb+ee,3)},"%m":P=>D(P.ib+1,2),"%M":P=>D(P.Fb,2),"%n":()=>`\n`,"%p":P=>0<=P.hb&&12>P.hb?"AM":"PM","%S":P=>D(P.Gb,2),"%t":()=>"	","%u":P=>P.Wa||7,"%U":P=>D(Math.floor((P.ab+7-P.Wa)/7),2),"%V":P=>{var ee=Math.floor((P.ab+7-(P.Wa+6)%7)/7);if(2>=(P.Wa+371-P.ab-2)%7&&ee++,ee)ee==53&&(ye=(P.Wa+371-P.ab)%7,ye==4||ye==3&&Oe(P.bb)||(ee=1));else{ee=52;var ye=(P.Wa+7-P.ab-1)%7;(ye==4||ye==5&&Oe(P.bb%400-1))&&ee++}return D(ee,2)},"%w":P=>P.Wa,"%W":P=>D(Math.floor((P.ab+7-(P.Wa+6)%7)/7),2),"%y":P=>(P.bb+1900).toString().substring(2),"%Y":P=>P.bb+1900,"%z":P=>{P=P.Eb;var ee=0<=P;return P=Math.abs(P)/60,(ee?"+":"-")+("0000"+(P/60*100+P%60)).slice(-4)},"%Z":P=>P.Hb,"%%":()=>"%"},f=f.replace(/%%/g,"\\0\\0");for(se in K)f.includes(se)&&(f=f.replace(new RegExp(se,"g"),K[se](w)));return f=f.replace(/\\0\\0/g,"%"),se=rn(f),se.length>d?0:(M.set(se,i>>>0),se.length-1)}for(var nn=Array(256),nr=0;256>nr;++nr)nn[nr]=String.fromCharCode(nr);cr=nn,st=r.BindingError=class extends Error{constructor(i){super(i),this.name="BindingError"}},r.InternalError=class extends Error{constructor(i){super(i),this.name="InternalError"}},Object.assign(mr.prototype,{get(i){return this.$a[i]},has(i){return this.$a[i]!==void 0},kb(i){var d=this.nb.pop()||this.$a.length;return this.$a[d]=i,d},jb(i){this.$a[i]=void 0,this.nb.push(i)}}),De.$a.push({value:void 0},{value:null},{value:!0},{value:!1}),De.cb=De.$a.length,r.count_emval_handles=()=>{for(var i=0,d=De.cb;d<De.$a.length;++d)De.$a[d]!==void 0&&++i;return i};var on={ia:function(i,d,f){return It(async()=>{await r.yb(i,d,f)})},a:function(i,d,f){throw i>>>=0,new Tt(i).kb(d>>>0,f>>>0),ft=i,Wr++,ft},w:function(){return 0},ca:function(){},P:function(){},R:function(){},J:function(){return 0},aa:function(){},X:function(){},$:function(){},D:function(){},Q:function(){},N:function(){},ba:function(){},O:function(){},G:function(i,d,f,w,A){d>>>=0,d=at(d);var D=d.indexOf("u")!=-1;D&&(A=(1n<<64n)-1n),ut(i>>>0,{name:d,fromWireType:G=>G,toWireType:function(G,F){if(typeof F!="bigint"&&typeof F!="number")throw new TypeError(`Cannot convert "${Nr(F)}" to ${this.name}`);if(F<w||F>A)throw new TypeError(`Passing a number "${Nr(F)}" from JS side to C/C++ side to an argument of type "${d}", which is outside the valid range [${w}, ${A}]!`);return F},argPackAdvance:8,readValueFromPointer:pr(d,f>>>0,!D),eb:null})},ga:function(i,d,f,w){d=at(d>>>0),ut(i>>>0,{name:d,fromWireType:function(A){return!!A},toWireType:function(A,D){return D?f:w},argPackAdvance:8,readValueFromPointer:function(A){return this.fromWireType(W[A>>>0])},eb:null})},fa:function(i,d){d=at(d>>>0),ut(i>>>0,{name:d,fromWireType:f=>{var w=Ke(f);return Kt(f),w},toWireType:(f,w)=>te(w),argPackAdvance:8,readValueFromPointer:Bt,eb:null})},F:function(i,d,f){d=at(d>>>0),ut(i>>>0,{name:d,fromWireType:w=>w,toWireType:(w,A)=>A,argPackAdvance:8,readValueFromPointer:Hr(d,f>>>0),eb:null})},t:function(i,d,f,w,A){if(i>>>=0,f>>>=0,d=at(d>>>0),A===-1&&(A=4294967295),A=F=>F,w===0){var D=32-8*f;A=F=>F<<D>>>D}var G=d.includes("unsigned")?function(F,Q){return Q>>>0}:function(F,Q){return Q};ut(i,{name:d,fromWireType:A,toWireType:G,argPackAdvance:8,readValueFromPointer:pr(d,f,w!==0),eb:null})},n:function(i,d,f){function w(D){return new A(M.buffer,J[D+4>>>2>>>0],J[D>>>2>>>0])}var A=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array,BigInt64Array,BigUint64Array][d];f=at(f>>>0),ut(i>>>0,{name:f,fromWireType:w,argPackAdvance:8,readValueFromPointer:w},{tb:!0})},H:function(i,d){d=at(d>>>0);var f=d==="std::string";ut(i>>>0,{name:d,fromWireType:function(w){var A=J[w>>>2>>>0],D=w+4;if(f)for(var G=D,F=0;F<=A;++F){var Q=D+F;if(F==A||W[Q>>>0]==0){if(G=Fe(G,Q-G),K===void 0)var K=G;else K+=String.fromCharCode(0),K+=G;G=Q+1}}else{for(K=Array(A),F=0;F<A;++F)K[F]=String.fromCharCode(W[D+F>>>0]);K=K.join("")}return He(w),K},toWireType:function(w,A){A instanceof ArrayBuffer&&(A=new Uint8Array(A));var D=typeof A=="string";if(!(D||A instanceof Uint8Array||A instanceof Uint8ClampedArray||A instanceof Int8Array))throw new st("Cannot pass non-string to std::string");var G=f&&D?dt(A):A.length,F=tt(4+G+1),Q=F+4;if(J[F>>>2>>>0]=G,f&&D)kt(A,W,Q,G+1);else if(D)for(D=0;D<G;++D){var K=A.charCodeAt(D);if(255<K)throw He(Q),new st("String has UTF-16 code units that do not fit in 8 bits");W[Q+D>>>0]=K}else for(D=0;D<G;++D)W[Q+D>>>0]=A[D];return w!==null&&w.push(He,F),F},argPackAdvance:8,readValueFromPointer:Hn,eb(w){He(w)}})},y:function(i,d,f){if(d>>>=0,f>>>=0,f=at(f),d===2)var w=Ln,A=Lr,D=Fr,G=()=>ie,F=1;else d===4&&(w=jr,A=qr,D=hr,G=()=>J,F=2);ut(i>>>0,{name:f,fromWireType:Q=>{for(var K=J[Q>>>2>>>0],se=G(),X,fe=Q+4,P=0;P<=K;++P){var ee=Q+4+P*d;(P==K||se[ee>>>F]==0)&&(fe=w(fe,ee-fe),X===void 0?X=fe:(X+=String.fromCharCode(0),X+=fe),fe=ee+d)}return He(Q),X},toWireType:(Q,K)=>{if(typeof K!="string")throw new st(`Cannot pass non-string to C++ string type ${f}`);var se=D(K),X=tt(4+se+d);return J[X>>>2]=se>>F,A(K,X+4,se+d),Q!==null&&Q.push(He,X),X},argPackAdvance:8,readValueFromPointer:Bt,eb(Q){He(Q)}})},ha:function(i,d){d=at(d>>>0),ut(i>>>0,{ub:!0,name:d,argPackAdvance:0,fromWireType:()=>{},toWireType:()=>{}})},da:()=>1,s:function(i,d,f){return d>>>=0,f>>>=0,i=Ke(i>>>0),d=Yt(d,"emval::as"),gr(d,f,i)},v:function(i){return i>>>=0,It(()=>(i=Ke(i),i.then(te)))},o:function(i,d,f,w){return f>>>=0,w>>>=0,i=zt[i>>>0],d=Ke(d>>>0),i(null,d,f,w)},k:function(i,d,f,w,A){return f>>>=0,w>>>=0,A>>>=0,i=zt[i>>>0],d=Ke(d>>>0),f=Xt(f),i(d,d[f],w,A)},b:Kt,z:function(i,d){return d>>>=0,i=Ke(i>>>0),d=Ke(d),i==d},m:function(i){return i>>>=0,i===0?te($r()):(i=Xt(i),te($r()[i]))},i:function(i,d,f){d=_r(i,d>>>0);var w=d.shift();i--;var A=`return function (obj, func, destructorsRef, args) {\n`,D=0,G=[];f===0&&G.push("obj");for(var F=["retType"],Q=[w],K=0;K<i;++K)G.push("arg"+K),F.push("argType"+K),Q.push(d[K]),A+=`  var arg${K} = argType${K}.readValueFromPointer(args${D?"+"+D:""});\n`,D+=d[K].argPackAdvance;for(A+=`  var rv = ${f===1?"new func":"func.call"}(${G.join(", ")});\n`,K=0;K<i;++K)d[K].deleteObject&&(A+=`  argType${K}.deleteObject(arg${K});\n`);return w.ub||(F.push("emval_returnValue"),Q.push(gr),A+=`  return emval_returnValue(retType, destructorsRef, rv);\n`),F.push(A+`};\n`),i=Fn(F).apply(null,Q),f=`methodCaller<(${d.map(se=>se.name).join(", ")}) => ${w.name}>`,Jr(Sr(f,i))},r:function(i,d){return d>>>=0,i=Ke(i>>>0),d=Ke(d),te(i[d])},f:function(i){i>>>=0,4<i&&(De.get(i).pb+=1)},u:function(){return te([])},l:function(i){i=Ke(i>>>0);for(var d=Array(i.length),f=0;f<i.length;f++)d[f]=i[f];return te(d)},e:function(i){return te(Xt(i>>>0))},j:function(){return te({})},h:function(i){i>>>=0;for(var d=Ke(i);d.length;){var f=d.pop();d.pop()(f)}Kt(i)},g:function(i,d,f){d>>>=0,f>>>=0,i=Ke(i>>>0),d=Ke(d),f=Ke(f),i[d]=f},c:function(i,d){return d>>>=0,i=Yt(i>>>0,"_emval_take_value"),i=i.readValueFromPointer(d),te(i)},U:function(i,d){i=-9007199254740992>i||9007199254740992<i?NaN:Number(i),d>>>=0,i=new Date(1e3*i),O[d>>>2>>>0]=i.getUTCSeconds(),O[d+4>>>2>>>0]=i.getUTCMinutes(),O[d+8>>>2>>>0]=i.getUTCHours(),O[d+12>>>2>>>0]=i.getUTCDate(),O[d+16>>>2>>>0]=i.getUTCMonth(),O[d+20>>>2>>>0]=i.getUTCFullYear()-1900,O[d+24>>>2>>>0]=i.getUTCDay(),O[d+28>>>2>>>0]=(i.getTime()-Date.UTC(i.getUTCFullYear(),0,1,0,0,0,0))/864e5|0},V:function(i,d){i=-9007199254740992>i||9007199254740992<i?NaN:Number(i),d>>>=0,i=new Date(1e3*i),O[d>>>2>>>0]=i.getSeconds(),O[d+4>>>2>>>0]=i.getMinutes(),O[d+8>>>2>>>0]=i.getHours(),O[d+12>>>2>>>0]=i.getDate(),O[d+16>>>2>>>0]=i.getMonth(),O[d+20>>>2>>>0]=i.getFullYear()-1900,O[d+24>>>2>>>0]=i.getDay(),O[d+28>>>2>>>0]=(Oe(i.getFullYear())?Jt:er)[i.getMonth()]+i.getDate()-1|0,O[d+36>>>2>>>0]=-(60*i.getTimezoneOffset());var f=new Date(i.getFullYear(),6,1).getTimezoneOffset(),w=new Date(i.getFullYear(),0,1).getTimezoneOffset();O[d+32>>>2>>>0]=(f!=w&&i.getTimezoneOffset()==Math.min(w,f))|0},W:function(i){i>>>=0;var d=new Date(O[i+20>>>2>>>0]+1900,O[i+16>>>2>>>0],O[i+12>>>2>>>0],O[i+8>>>2>>>0],O[i+4>>>2>>>0],O[i>>>2>>>0],0),f=O[i+32>>>2>>>0],w=d.getTimezoneOffset(),A=new Date(d.getFullYear(),6,1).getTimezoneOffset(),D=new Date(d.getFullYear(),0,1).getTimezoneOffset(),G=Math.min(D,A);return 0>f?O[i+32>>>2>>>0]=+(A!=D&&G==w):0<f!=(G==w)&&(A=Math.max(D,A),d.setTime(d.getTime()+6e4*((0<f?G:A)-w))),O[i+24>>>2>>>0]=d.getDay(),O[i+28>>>2>>>0]=(Oe(d.getFullYear())?Jt:er)[d.getMonth()]+d.getDate()-1|0,O[i>>>2>>>0]=d.getSeconds(),O[i+4>>>2>>>0]=d.getMinutes(),O[i+8>>>2>>>0]=d.getHours(),O[i+12>>>2>>>0]=d.getDate(),O[i+16>>>2>>>0]=d.getMonth(),O[i+20>>>2>>>0]=d.getYear(),i=d.getTime(),isNaN(i)?(O[an()>>>2>>>0]=61,i=-1):i/=1e3,BigInt(i)},S:function(){return-52},T:function(){},L:function(i,d,f){function w(Q){return(Q=Q.toTimeString().match(/\\(([A-Za-z ]+)\\)$/))?Q[1]:"GMT"}f>>>=0;var A=new Date().getFullYear(),D=new Date(A,0,1),G=new Date(A,6,1);A=D.getTimezoneOffset();var F=G.getTimezoneOffset();J[i>>>0>>>2>>>0]=60*Math.max(A,F),O[d>>>0>>>2>>>0]=+(A!=F),i=w(D),d=w(G),i=xr(i),d=xr(d),F<A?(J[f>>>2>>>0]=i,J[f+4>>>2>>>0]=d):(J[f>>>2>>>0]=d,J[f+4>>>2>>>0]=i)},A:()=>{Ne("")},d:function(i,d,f){return i>>>=0,d=Cr(d>>>0,f>>>0),Ge[i].apply(null,d)},I:function(i,d,f){return i>>>=0,d=Cr(d>>>0,f>>>0),Ge[i].apply(null,d)},E:()=>Date.now(),M:function(){return 4294901760},q:()=>performance.now(),K:function(i){i>>>=0;var d=W.length;if(4294901760<i)return!1;for(var f=1;4>=f;f*=2){var w=d*(1+.2/f);w=Math.min(w,i+100663296);var A=Math;w=Math.max(i,w);e:{A=(A.min.call(A,4294901760,w+(65536-w%65536)%65536)-E.buffer.byteLength+65535)/65536;try{E.grow(A),N();var D=1;break e}catch{}D=void 0}if(D)return!0}return!1},Z:function(i,d){i>>>=0,d>>>=0;var f=0;return Ir().forEach((w,A)=>{var D=d+f;for(A=J[i+4*A>>>2>>>0]=D,D=0;D<w.length;++D)M[A++>>>0>>>0]=w.charCodeAt(D);M[A>>>0>>>0]=0,f+=w.length+1}),0},_:function(i,d){i>>>=0,d>>>=0;var f=Ir();J[i>>>2>>>0]=f.length;var w=0;return f.forEach(A=>w+=A.length+1),J[d>>>2>>>0]=w,0},x:()=>52,C:function(){return 52},Y:function(){return 70},B:function(i,d,f,w){d>>>=0,f>>>=0,w>>>=0;for(var A=0,D=0;D<f;D++){var G=J[d>>>2>>>0],F=J[d+4>>>2>>>0];d+=8;for(var Q=0;Q<F;Q++){var K=W[G+Q>>>0],se=en[i];K===0||K===10?((i===1?x:$)(lt(se,0)),se.length=0):se.push(K)}A+=F}return J[w>>>2>>>0]=A,0},ea:Tr,p:function(i,d,f,w){return Tr(i>>>0,d>>>0,f>>>0,w>>>0)}},ne=function(){function i(f){return ne=f.exports,ne=Kr(),ne=jn(),E=ne.ja,N(),be.unshift(ne.ka),pe--,pe==0&&(Ce!==null&&(clearInterval(Ce),Ce=null),Ae&&(f=Ae,Ae=null,f())),ne}var d={a:on};if(pe++,r.instantiateWasm)try{return r.instantiateWasm(d,i)}catch(f){$(`Module.instantiateWasm callback failed with error: ${f}`),n(f)}return Le(d,function(f){i(f.instance)}).catch(n),{}}();r._OrtInit=(i,d)=>(r._OrtInit=ne.la)(i,d),r._OrtGetLastError=(i,d)=>(r._OrtGetLastError=ne.ma)(i,d),r._OrtCreateSessionOptions=(i,d,f,w,A,D,G,F,Q,K)=>(r._OrtCreateSessionOptions=ne.na)(i,d,f,w,A,D,G,F,Q,K),r._OrtAppendExecutionProvider=(i,d)=>(r._OrtAppendExecutionProvider=ne.oa)(i,d),r._OrtAddFreeDimensionOverride=(i,d,f)=>(r._OrtAddFreeDimensionOverride=ne.pa)(i,d,f),r._OrtAddSessionConfigEntry=(i,d,f)=>(r._OrtAddSessionConfigEntry=ne.qa)(i,d,f),r._OrtReleaseSessionOptions=i=>(r._OrtReleaseSessionOptions=ne.ra)(i),r._OrtCreateSession=(i,d,f)=>(r._OrtCreateSession=ne.sa)(i,d,f),r._OrtReleaseSession=i=>(r._OrtReleaseSession=ne.ta)(i),r._OrtGetInputOutputCount=(i,d,f)=>(r._OrtGetInputOutputCount=ne.ua)(i,d,f),r._OrtGetInputName=(i,d)=>(r._OrtGetInputName=ne.va)(i,d),r._OrtGetOutputName=(i,d)=>(r._OrtGetOutputName=ne.wa)(i,d),r._OrtFree=i=>(r._OrtFree=ne.xa)(i),r._OrtCreateTensor=(i,d,f,w,A,D)=>(r._OrtCreateTensor=ne.ya)(i,d,f,w,A,D),r._OrtGetTensorData=(i,d,f,w,A)=>(r._OrtGetTensorData=ne.za)(i,d,f,w,A),r._OrtReleaseTensor=i=>(r._OrtReleaseTensor=ne.Aa)(i),r._OrtCreateRunOptions=(i,d,f,w)=>(r._OrtCreateRunOptions=ne.Ba)(i,d,f,w),r._OrtAddRunConfigEntry=(i,d,f)=>(r._OrtAddRunConfigEntry=ne.Ca)(i,d,f),r._OrtReleaseRunOptions=i=>(r._OrtReleaseRunOptions=ne.Da)(i),r._OrtCreateBinding=i=>(r._OrtCreateBinding=ne.Ea)(i),r._OrtBindInput=(i,d,f)=>(r._OrtBindInput=ne.Fa)(i,d,f),r._OrtBindOutput=(i,d,f,w)=>(r._OrtBindOutput=ne.Ga)(i,d,f,w),r._OrtClearBoundOutputs=i=>(r._OrtClearBoundOutputs=ne.Ha)(i),r._OrtReleaseBinding=i=>(r._OrtReleaseBinding=ne.Ia)(i),r._OrtRunWithBinding=(i,d,f,w,A)=>(r._OrtRunWithBinding=ne.Ja)(i,d,f,w,A),r._OrtRun=(i,d,f,w,A,D,G,F)=>(r._OrtRun=ne.Ka)(i,d,f,w,A,D,G,F),r._OrtEndProfiling=i=>(r._OrtEndProfiling=ne.La)(i),r._JsepOutput=(i,d,f)=>(r._JsepOutput=ne.Ma)(i,d,f),r._JsepGetNodeName=i=>(r._JsepGetNodeName=ne.Na)(i);var an=()=>(an=ne.Oa)(),tt=r._malloc=i=>(tt=r._malloc=ne.Pa)(i),He=r._free=i=>(He=r._free=ne.Qa)(i),Er=i=>(Er=ne.Ra)(i),Vt=()=>(Vt=ne.Ta)(),Pr=i=>(Pr=ne.Ua)(i),Or=i=>(Or=ne.Va)(i),sn=i=>(sn=ne.Xa)(i),or=()=>(or=ne.Ya)(),un=i=>(un=ne.Za)(i),ln=()=>(ln=ne._a)();r.___start_em_js=1387603,r.___stop_em_js=1387764;function jn(){var i=ne;i=Object.assign({},i);var d=w=>()=>w()>>>0,f=w=>A=>w(A)>>>0;return i.Oa=d(i.Oa),i.Pa=f(i.Pa),i.Ra=f(i.Ra),i.Ta=d(i.Ta),i.Va=f(i.Va),i}r.stackAlloc=Or,r.stackSave=Vt,r.stackRestore=Pr,r.UTF8ToString=Fe,r.stringToUTF8=(i,d,f)=>kt(i,W,d,f),r.lengthBytesUTF8=dt;var ar;Ae=function i(){ar||dn(),ar||(Ae=i)};function dn(){if(!(0<pe)){if(r.preRun)for(typeof r.preRun=="function"&&(r.preRun=[r.preRun]);r.preRun.length;){var i=r.preRun.shift();Be.unshift(i)}for(;0<Be.length;)Be.shift()(r);if(!(0<pe||ar||(ar=!0,r.calledRun=!0,T))){for(;0<be.length;)be.shift()(r);for(o(r);0<ge.length;)ge.shift()(r)}}}return dn(),t.ready}})();typeof Wo=="object"&&typeof Zn=="object"?Zn.exports=Vo:typeof define=="function"&&define.amd&&define([],()=>Vo)});var Go=kr(()=>{});var Ho=kr(()=>{});var Lo={};pn(Lo,{cpus:()=>ll});var ll,Fo=Y(()=>{ll=void 0});var Ko=kr((qo,Qn)=>{"use strict";var jo=(()=>{var e=typeof document<"u"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename<"u"&&(e=e||__filename),function(t={}){function r(){return _e.buffer!=pe.buffer&&me(),pe}function o(){return _e.buffer!=pe.buffer&&me(),Ce}function n(){return _e.buffer!=pe.buffer&&me(),Ae}function s(){return _e.buffer!=pe.buffer&&me(),Ne}function l(){return _e.buffer!=pe.buffer&&me(),L}function c(){return _e.buffer!=pe.buffer&&me(),re}var a=t,m,g;a.ready=new Promise((u,p)=>{m=u,g=p}),a.jsepInit=(u,p,y,C,k,V,H,le)=>{a.Qb=u,a.wb=p,a.yb=y,a.jb=C,a.xb=k,a.Ea=V,a.zb=H,a.Ab=le,p=(ae,oe,ue)=>(...Ie)=>{let Ee=He,R=oe?.();Ie=ae(...Ie);let ce=oe?.();return R!==ce&&(ae=ce,ue(R),oe=ue=null),He!=Ee?ln():Ie},y=ae=>async(...oe)=>{try{if(a.bb)throw Error("Session already started");let ue=a.bb={Fb:oe[0],errors:[]},Ie=await ae(...oe);if(a.bb!==ue)throw Error("Session mismatch");u.flush();let Ee=ue.errors;if(0<Ee.length){let R=await Promise.all(Ee);if(R=R.filter(ce=>ce),0<R.length)throw Error(R.join(`\n`))}return Ie}finally{a.bb=null}},a._OrtRun=y(p(a._OrtRun,()=>a._OrtRun,ae=>a._OrtRun=ae)),a._OrtRunWithBinding=y(p(a._OrtRunWithBinding,()=>a._OrtRunWithBinding,ae=>a._OrtRunWithBinding=ae)),a._OrtBindInput=p(a._OrtBindInput,()=>a._OrtBindInput,ae=>a._OrtBindInput=ae),a.jsepRegisterBuffer=(ae,oe,ue,Ie)=>u.registerBuffer(ae,oe,ue,Ie),a.jsepUnregisterBuffers=ae=>{u.unregisterBuffers(ae)},a.jsepGetBuffer=ae=>u.getBuffer(ae),a.jsepCreateDownloader=(ae,oe,ue)=>u.createDownloader(ae,oe,ue)};var h=Object.assign({},a),v="./this.program",_=(u,p)=>{throw p},b=typeof window=="object",S=typeof importScripts=="function",I=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",x=a.ENVIRONMENT_IS_PTHREAD||!1,$="";function E(u){return a.locateFile?a.locateFile(u,$):$+u}var T,B,M;if(I){var W=(fn(),Nt(mn)),q=(Yn(),Nt(Kn));$=S?q.dirname($)+"/":__dirname+"/",T=(p,y)=>(p=p.startsWith("file://")?new URL(p):q.normalize(p),W.readFileSync(p,y?void 0:"utf8")),M=p=>(p=T(p,!0),p.buffer||(p=new Uint8Array(p)),p),B=(p,y,C,k=!0)=>{p=p.startsWith("file://")?new URL(p):q.normalize(p),W.readFile(p,k?void 0:"utf8",(V,H)=>{V?C(V):y(k?H.buffer:H)})},!a.thisProgram&&1<process.argv.length&&(v=process.argv[1].replace(/\\\\/g,"/")),process.argv.slice(2),_=(p,y)=>{throw process.exitCode=p,y},a.inspect=()=>"[Emscripten Module object]";let u;try{u=Go()}catch(p){throw console.error(\'The "worker_threads" module is not supported in this node.js build - perhaps a newer version is needed?\'),p}global.Worker=u.Worker}else(b||S)&&(S?$=self.location.href:typeof document<"u"&&document.currentScript&&($=document.currentScript.src),typeof e<"u"&&e&&($=e),$.indexOf("blob:")!==0?$=$.substr(0,$.replace(/[?#].*/,"").lastIndexOf("/")+1):$="",I||(T=u=>{var p=new XMLHttpRequest;return p.open("GET",u,!1),p.send(null),p.responseText},S&&(M=u=>{var p=new XMLHttpRequest;return p.open("GET",u,!1),p.responseType="arraybuffer",p.send(null),new Uint8Array(p.response)}),B=(u,p,y)=>{var C=new XMLHttpRequest;C.open("GET",u,!0),C.responseType="arraybuffer",C.onload=()=>{C.status==200||C.status==0&&C.response?p(C.response):y()},C.onerror=y,C.send(null)}));I&&typeof performance>"u"&&(global.performance=Ho().performance);var ie=console.log.bind(console),O=console.error.bind(console);I&&(ie=(...u)=>W.writeSync(1,u.join(" ")+`\n`),O=(...u)=>W.writeSync(2,u.join(" ")+`\n`));var J=a.print||ie,$e=a.printErr||O;Object.assign(a,h),h=null,a.thisProgram&&(v=a.thisProgram),a.quit&&(_=a.quit);var ke;a.wasmBinary&&(ke=a.wasmBinary);var Re=a.noExitRuntime||!0;typeof WebAssembly!="object"&&lt("no native wasm support detected");var _e,N,Be,be=!1,ge,pe,Ce,Ae,Ne,L,re;function me(){var u=_e.buffer;a.HEAP8=pe=new Int8Array(u),a.HEAP16=new Int16Array(u),a.HEAP32=Ae=new Int32Array(u),a.HEAPU8=Ce=new Uint8Array(u),a.HEAPU16=new Uint16Array(u),a.HEAPU32=Ne=new Uint32Array(u),a.HEAPF32=L=new Float32Array(u),a.HEAPF64=re=new Float64Array(u)}var Xe=a.INITIAL_MEMORY||16777216;if(5242880<=Xe||lt("INITIAL_MEMORY should be larger than STACK_SIZE, was "+Xe+"! (STACK_SIZE=5242880)"),x)_e=a.wasmMemory;else if(a.wasmMemory)_e=a.wasmMemory;else if(_e=new WebAssembly.Memory({initial:Xe/65536,maximum:65536,shared:!0}),!(_e.buffer instanceof SharedArrayBuffer))throw $e("requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag"),I&&$e("(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and/or recent version)"),Error("bad memory");me(),Xe=_e.buffer.byteLength;var qe=[],ot=[],At=[],Le=0;function Ge(){return Re||0<Le}var et=0,Tt=null,ft=null;function Wr(){et++,a.monitorRunDependencies&&a.monitorRunDependencies(et)}function dr(){if(et--,a.monitorRunDependencies&&a.monitorRunDependencies(et),et==0&&(Tt!==null&&(clearInterval(Tt),Tt=null),ft)){var u=ft;ft=null,u()}}function lt(u){throw a.onAbort&&a.onAbort(u),u="Aborted("+u+")",$e(u),be=!0,ge=1,u=new WebAssembly.RuntimeError(u+". Build with -sASSERTIONS for more info."),g(u),u}function Fe(u){return u.startsWith("data:application/octet-stream;base64,")}var dt;dt="ort-wasm-simd-threaded.wasm",Fe(dt)||(dt=E(dt));function kt(u){if(u==dt&&ke)return new Uint8Array(ke);if(M)return M(u);throw"both async and sync fetching of the wasm failed"}function Nr(u){if(!ke&&(b||S)){if(typeof fetch=="function"&&!u.startsWith("file://"))return fetch(u,{credentials:"same-origin"}).then(p=>{if(!p.ok)throw"failed to load wasm binary file at \'"+u+"\'";return p.arrayBuffer()}).catch(()=>kt(u));if(B)return new Promise((p,y)=>{B(u,C=>p(new Uint8Array(C)),y)})}return Promise.resolve().then(()=>kt(u))}function cr(u,p,y){return Nr(u).then(C=>WebAssembly.instantiate(C,p)).then(C=>C).then(y,C=>{$e("failed to asynchronously prepare wasm: "+C),lt(C)})}function at(u,p){var y=dt;return ke||typeof WebAssembly.instantiateStreaming!="function"||Fe(y)||y.startsWith("file://")||I||typeof fetch!="function"?cr(y,u,p):fetch(y,{credentials:"same-origin"}).then(C=>WebAssembly.instantiateStreaming(C,u).then(p,function(k){return $e("wasm streaming compile failed: "+k),$e("falling back to ArrayBuffer instantiation"),cr(y,u,p)}))}var ht,Rt={912252:u=>{a.Ea("Abs",u,void 0)},912303:u=>{a.Ea("Neg",u,void 0)},912354:u=>{a.Ea("Floor",u,void 0)},912407:u=>{a.Ea("Ceil",u,void 0)},912459:u=>{a.Ea("Reciprocal",u,void 0)},912517:u=>{a.Ea("Sqrt",u,void 0)},912569:u=>{a.Ea("Exp",u,void 0)},912620:u=>{a.Ea("Erf",u,void 0)},912671:u=>{a.Ea("Sigmoid",u,void 0)},912726:u=>{a.Ea("Log",u,void 0)},912777:u=>{a.Ea("Sin",u,void 0)},912828:u=>{a.Ea("Cos",u,void 0)},912879:u=>{a.Ea("Tan",u,void 0)},912930:u=>{a.Ea("Asin",u,void 0)},912982:u=>{a.Ea("Acos",u,void 0)},913034:u=>{a.Ea("Atan",u,void 0)},913086:u=>{a.Ea("Sinh",u,void 0)},913138:u=>{a.Ea("Cosh",u,void 0)},913190:u=>{a.Ea("Asinh",u,void 0)},913243:u=>{a.Ea("Acosh",u,void 0)},913296:u=>{a.Ea("Atanh",u,void 0)},913349:u=>{a.Ea("Tanh",u,void 0)},913401:u=>{a.Ea("Not",u,void 0)},913452:(u,p,y)=>{a.Ea("ClipV10",u,{min:p,max:y})},913524:u=>{a.Ea("Clip",u,void 0)},913576:(u,p)=>{a.Ea("Elu",u,{alpha:p})},913634:u=>{a.Ea("Relu",u,void 0)},913686:(u,p)=>{a.Ea("LeakyRelu",u,{alpha:p})},913750:(u,p)=>{a.Ea("ThresholdedRelu",u,{alpha:p})},913820:(u,p)=>{a.Ea("Cast",u,{to:p})},913878:u=>{a.Ea("Add",u,void 0)},913929:u=>{a.Ea("Sub",u,void 0)},913980:u=>{a.Ea("Mul",u,void 0)},914031:u=>{a.Ea("Div",u,void 0)},914082:u=>{a.Ea("Pow",u,void 0)},914133:u=>{a.Ea("Equal",u,void 0)},914186:u=>{a.Ea("Greater",u,void 0)},914241:u=>{a.Ea("GreaterOrEqual",u,void 0)},914303:u=>{a.Ea("Less",u,void 0)},914355:u=>{a.Ea("LessOrEqual",u,void 0)},914414:(u,p,y,C,k)=>{a.Ea("ReduceMean",u,{keepDims:!!p,noopWithEmptyAxes:!!y,axes:C?Array.from(n().subarray(k>>>0,k+C>>>0)):[]})},914578:(u,p,y,C,k)=>{a.Ea("ReduceMax",u,{keepDims:!!p,noopWithEmptyAxes:!!y,axes:C?Array.from(n().subarray(k>>>0,k+C>>>0)):[]})},914741:(u,p,y,C,k)=>{a.Ea("ReduceMin",u,{keepDims:!!p,noopWithEmptyAxes:!!y,axes:C?Array.from(n().subarray(k>>>0,k+C>>>0)):[]})},914904:(u,p,y,C,k)=>{a.Ea("ReduceProd",u,{keepDims:!!p,noopWithEmptyAxes:!!y,axes:C?Array.from(n().subarray(k>>>0,k+C>>>0)):[]})},915068:(u,p,y,C,k)=>{a.Ea("ReduceSum",u,{keepDims:!!p,noopWithEmptyAxes:!!y,axes:C?Array.from(n().subarray(k>>>0,k+C>>>0)):[]})},915231:(u,p,y,C,k)=>{a.Ea("ReduceL1",u,{keepDims:!!p,noopWithEmptyAxes:!!y,axes:C?Array.from(n().subarray(k>>>0,k+C>>>0)):[]})},915393:(u,p,y,C,k)=>{a.Ea("ReduceL2",u,{keepDims:!!p,noopWithEmptyAxes:!!y,axes:C?Array.from(n().subarray(k>>>0,k+C>>>0)):[]})},915555:(u,p,y,C,k)=>{a.Ea("ReduceLogSum",u,{keepDims:!!p,noopWithEmptyAxes:!!y,axes:C?Array.from(n().subarray(k>>>0,k+C>>>0)):[]})},915721:(u,p,y,C,k)=>{a.Ea("ReduceSumSquare",u,{keepDims:!!p,noopWithEmptyAxes:!!y,axes:C?Array.from(n().subarray(k>>>0,k+C>>>0)):[]})},915890:(u,p,y,C,k)=>{a.Ea("ReduceLogSumExp",u,{keepDims:!!p,noopWithEmptyAxes:!!y,axes:C?Array.from(n().subarray(k>>>0,k+C>>>0)):[]})},916059:u=>{a.Ea("Where",u,void 0)},916112:(u,p,y)=>{a.Ea("Transpose",u,{perm:p?Array.from(n().subarray(y>>>0,y+p>>>0)):[]})},916225:(u,p,y,C,k,V,H,le,ae,oe,ue,Ie,Ee,R,ce)=>{a.Ea("ConvTranspose",u,{format:ae?"NHWC":"NCHW",autoPad:p,dilations:[y],group:C,kernel_shape:[k],pads:[V,H],strides:[le],wIsConst:()=>!!r()[oe>>>0],outputPadding:ue?Array.from(n().subarray(Ie>>>0,Ie+ue>>>0)):[],outputShape:Ee?Array.from(n().subarray(R>>>0,R+Ee>>>0)):[],activation:De(ce)})},916639:(u,p,y,C,k,V,H,le,ae,oe,ue,Ie,Ee,R)=>{a.Ea("ConvTranspose",u,{format:le?"NHWC":"NCHW",autoPad:p,dilations:Array.from(n().subarray(y>>>0,y+2>>>0)),group:C,kernelShape:Array.from(n().subarray(k>>>0,k+2>>>0)),pads:Array.from(n().subarray(V>>>0,V+4>>>0)),strides:Array.from(n().subarray(H>>>0,H+2>>>0)),wIsConst:()=>!!r()[ae>>>0],outputPadding:0<oe?Array.from(n().subarray(ue>>>0,ue+oe>>>0)):[],outputShape:0<Ie?Array.from(n().subarray(Ee>>>0,Ee+Ie>>>0)):[],activation:De(R)})},917196:(u,p,y,C,k,V,H,le,ae,oe,ue,Ie,Ee,R,ce)=>{a.Ea("ConvTranspose",u,{format:ae?"NHWC":"NCHW",autoPad:p,dilations:[y],group:C,kernel_shape:[k],pads:[V,H],strides:[le],wIsConst:()=>!!r()[oe>>>0],outputPadding:ue?Array.from(n().subarray(Ie>>>0,Ie+ue>>>0)):[],outputShape:Ee?Array.from(n().subarray(R>>>0,R+Ee>>>0)):[],activation:De(ce)})},917610:(u,p,y,C,k,V,H,le,ae,oe,ue,Ie,Ee,R)=>{a.Ea("ConvTranspose",u,{format:le?"NHWC":"NCHW",autoPad:p,dilations:Array.from(n().subarray(y>>>0,y+2>>>0)),group:C,kernelShape:Array.from(n().subarray(k>>>0,k+2>>>0)),pads:Array.from(n().subarray(V>>>0,V+4>>>0)),strides:Array.from(n().subarray(H>>>0,H+2>>>0)),wIsConst:()=>!!r()[ae>>>0],outputPadding:0<oe?Array.from(n().subarray(ue>>>0,ue+oe>>>0)):[],outputShape:0<Ie?Array.from(n().subarray(Ee>>>0,Ee+Ie>>>0)):[],activation:De(R)})},918167:(u,p)=>{a.Ea("GlobalAveragePool",u,{format:p?"NHWC":"NCHW"})},918258:(u,p,y,C,k,V,H,le,ae,oe,ue,Ie,Ee,R,ce,Te)=>{a.Ea("AveragePool",u,{format:Te?"NHWC":"NCHW",auto_pad:p,ceil_mode:y,count_include_pad:C,storage_order:k,dilations:[V,H],kernel_shape:[le,ae],pads:[oe,ue,Ie,Ee],strides:[R,ce]})},918542:(u,p)=>{a.Ea("GlobalAveragePool",u,{format:p?"NHWC":"NCHW"})},918633:(u,p,y,C,k,V,H,le,ae,oe,ue,Ie,Ee,R,ce,Te)=>{a.Ea("AveragePool",u,{format:Te?"NHWC":"NCHW",auto_pad:p,ceil_mode:y,count_include_pad:C,storage_order:k,dilations:[V,H],kernel_shape:[le,ae],pads:[oe,ue,Ie,Ee],strides:[R,ce]})},918917:(u,p)=>{a.Ea("GlobalMaxPool",u,{format:p?"NHWC":"NCHW"})},919004:(u,p,y,C,k,V,H,le,ae,oe,ue,Ie,Ee,R,ce,Te)=>{a.Ea("MaxPool",u,{format:Te?"NHWC":"NCHW",auto_pad:p,ceil_mode:y,count_include_pad:C,storage_order:k,dilations:[V,H],kernel_shape:[le,ae],pads:[oe,ue,Ie,Ee],strides:[R,ce]})},919284:(u,p)=>{a.Ea("GlobalMaxPool",u,{format:p?"NHWC":"NCHW"})},919371:(u,p,y,C,k,V,H,le,ae,oe,ue,Ie,Ee,R,ce,Te)=>{a.Ea("MaxPool",u,{format:Te?"NHWC":"NCHW",auto_pad:p,ceil_mode:y,count_include_pad:C,storage_order:k,dilations:[V,H],kernel_shape:[le,ae],pads:[oe,ue,Ie,Ee],strides:[R,ce]})},919651:(u,p,y,C,k)=>{a.Ea("Gemm",u,{alpha:p,beta:y,transA:C,transB:k})},919755:u=>{a.Ea("MatMul",u,void 0)},919809:(u,p,y,C)=>{a.Ea("ArgMax",u,{keepDims:!!p,selectLastIndex:!!y,axis:C})},919917:(u,p,y,C)=>{a.Ea("ArgMin",u,{keepDims:!!p,selectLastIndex:!!y,axis:C})},920025:(u,p)=>{a.Ea("Softmax",u,{axis:p})},920088:(u,p)=>{a.Ea("Concat",u,{axis:p})},920148:(u,p,y,C,k)=>{a.Ea("Split",u,{axis:p,numOutputs:y,splitSizes:C?Array.from(n().subarray(k>>>0,k+C>>>0)):[]})},920293:u=>{a.Ea("Expand",u,void 0)},920347:(u,p)=>{a.Ea("Gather",u,{axis:Number(p)})},920418:(u,p)=>{a.Ea("GatherElements",u,{axis:Number(p)})},920497:(u,p,y,C,k,V,H,le,ae,oe,ue)=>{a.Ea("Resize",u,{antialias:p,axes:y?Array.from(n().subarray(C>>>0,C+y>>>0)):[],coordinateTransformMode:De(k),cubicCoeffA:V,excludeOutside:H,extrapolationValue:le,keepAspectRatioPolicy:De(ae),mode:De(oe),nearestMode:De(ue)})},920848:(u,p,y,C,k,V,H)=>{a.Ea("Slice",u,{starts:p?Array.from(n().subarray(y>>>0,y+p>>>0)):[],ends:C?Array.from(n().subarray(k>>>0,k+C>>>0)):[],axes:V?Array.from(n().subarray(H>>>0,H+V>>>0)):[]})},921079:u=>{a.Ea("Tile",u,void 0)},921131:(u,p,y)=>{a.Ea("LayerNormalization",u,{axis:Number(p),epsilon:Number(y)})},921238:(u,p,y)=>{a.Ea("InstanceNormalization",u,{epsilon:p,format:y?"NHWC":"NCHW"})},921352:(u,p,y)=>{a.Ea("InstanceNormalization",u,{epsilon:p,format:y?"NHWC":"NCHW"})},921466:u=>{a.Ea("Range",u,void 0)},921519:(u,p)=>{a.Ea("Einsum",u,{equation:De(p)})},921600:(u,p,y,C,k)=>{a.Ea("Pad",u,{mode:p,value:y,pads:C?Array.from(n().subarray(k>>>0,k+C>>>0)):[]})},921732:u=>{a.Ea("Gelu",u,void 0)},921784:u=>{a.Ea("BiasAdd",u,void 0)},921839:u=>{a.Ea("BiasSplitGelu",u,void 0)},921900:(u,p)=>{a.Ea("SkipLayerNormalization",u,{epsilon:p})},921981:(u,p,y,C,k,V,H,le,ae,oe,ue,Ie,Ee)=>{a.Ea("Conv",u,{format:ae?"NHWC":"NCHW",auto_pad:p,dilations:[y],group:C,kernel_shape:[k],pads:V?Array.from(n().subarray(H>>>0,H+V>>>0)):[],strides:[le],w_is_const:()=>!!r()[oe>>>0],activation:De(ue),activation_params:Ie?Array.from(l().subarray(Ee>>>0,Ee+Ie>>>0)):[]})},922362:(u,p,y,C,k,V,H,le,ae,oe,ue,Ie,Ee,R,ce,Te)=>{a.Ea("Conv",u,{format:Ie?"NHWC":"NCHW",auto_pad:p,dilations:[y,C],group:k,kernel_shape:[V,H],pads:le?Array.from(n().subarray(ae>>>0,ae+le>>>0)):[],strides:[oe,ue],w_is_const:()=>!!r()[Ee>>>0],activation:De(R),activation_params:ce?Array.from(l().subarray(Te>>>0,Te+ce>>>0)):[]})},922764:u=>{a.zb(u)},922798:(u,p)=>a.Ab(u,p,a.bb.Fb,a.bb.errors),922910:u=>a.wb(u),922943:u=>a.yb(u),922975:(u,p,y)=>{a.jb(u,p,y,!0)},923014:(u,p,y)=>{a.jb(u,p,y)}};function qt(u){this.name="ExitStatus",this.message=`Program terminated with exit(${u})`,this.status=u}function st(u){u.terminate(),u.onmessage=()=>{}}function Gr(u){(u=te.Qa[u])||lt(),te.Eb(u)}function ut(u){var p=te.tb();if(!p)return 6;te.Ya.push(p),te.Qa[u.Xa]=p,p.Xa=u.Xa;var y={cmd:"run",start_routine:u.Gb,arg:u.rb,pthread_ptr:u.Xa};return I&&p.unref(),p.postMessage(y,u.Mb),0}var pr=typeof TextDecoder<"u"?new TextDecoder("utf8"):void 0,mr=(u,p,y)=>{p>>>=0;var C=p+y;for(y=p;u[y]&&!(y>=C);)++y;if(16<y-p&&u.buffer&&pr)return pr.decode(u.buffer instanceof SharedArrayBuffer?u.slice(p,y):u.subarray(p,y));for(C="";p<y;){var k=u[p++];if(k&128){var V=u[p++]&63;if((k&224)==192)C+=String.fromCharCode((k&31)<<6|V);else{var H=u[p++]&63;k=(k&240)==224?(k&15)<<12|V<<6|H:(k&7)<<18|V<<12|H<<6|u[p++]&63,65536>k?C+=String.fromCharCode(k):(k-=65536,C+=String.fromCharCode(55296|k>>10,56320|k&1023))}}else C+=String.fromCharCode(k)}return C},De=(u,p)=>(u>>>=0)?mr(o(),u,p):"";function Kt(u){if(x)return Oe(1,1,u);ge=u,Ge()||(te.Hb(),a.onExit&&a.onExit(u),be=!0),_(u,new qt(u))}var Ke=u=>{if(ge=u,x)throw Hr(u),"unwind";Kt(u)},te={ab:[],Ya:[],mb:[],Qa:{},gb:function(){x?te.vb():te.ub()},ub:function(){qe.unshift(()=>{Wr(),te.Bb(()=>dr())})},vb:function(){te.receiveObjectTransfer=te.Db,te.threadInitTLS=te.lb,te.setExitStatus=te.kb,Re=!1},kb:function(u){ge=u},Sb:["$terminateWorker"],Hb:function(){for(var u of te.Ya)st(u);for(u of te.ab)st(u);te.ab=[],te.Ya=[],te.Qa=[]},Eb:function(u){var p=u.Xa;delete te.Qa[p],te.ab.push(u),te.Ya.splice(te.Ya.indexOf(u),1),u.Xa=0,Q(p)},Db:function(){},lb:function(){te.mb.forEach(u=>u())},Cb:u=>new Promise(p=>{u.onmessage=V=>{V=V.data;var H=V.cmd;if(V.targetThread&&V.targetThread!=w()){var le=te.Qa[V.Rb];le?le.postMessage(V,V.transferList):$e(\'Internal error! Worker sent a message "\'+H+\'" to target pthread \'+V.targetThread+", but that thread no longer exists!")}else H==="checkMailbox"?Qt():H==="spawnThread"?ut(V):H==="cleanupThread"?Gr(V.thread):H==="killThread"?(V=V.thread,H=te.Qa[V],delete te.Qa[V],st(H),Q(V),te.Ya.splice(te.Ya.indexOf(H),1),H.Xa=0):H==="cancelThread"?te.Qa[V.thread].postMessage({cmd:"cancel"}):H==="loaded"?(u.loaded=!0,p(u)):H==="alert"?alert("Thread "+V.threadId+": "+V.text):V.target==="setimmediate"?u.postMessage(V):H==="callHandler"?a[V.handler](...V.args):H&&$e("worker sent an unknown command "+H)},u.onerror=V=>{throw $e("worker sent an error! "+V.filename+":"+V.lineno+": "+V.message),V},I&&(u.on("message",function(V){u.onmessage({data:V})}),u.on("error",function(V){u.onerror(V)}));var y=[],C=["onExit","onAbort","print","printErr"],k;for(k of C)a.hasOwnProperty(k)&&y.push(k);u.postMessage({cmd:"load",handlers:y,urlOrBlob:a.mainScriptUrlOrBlob||e,wasmMemory:_e,wasmModule:Be})}),Bb:function(u){u()},qb:function(){var u=E("ort-wasm-simd-threaded.worker.js");u=new Worker(u),te.ab.push(u)},tb:function(){return te.ab.length==0&&(te.qb(),te.Cb(te.ab[0])),te.ab.pop()}};a.PThread=te;var Bt=u=>{for(;0<u.length;)u.shift()(a)};a.establishStackSpace=function(){var u=w(),p=n()[u+52>>2>>>0];u=n()[u+56>>2>>>0],fe(p,p-u),ee(p)};function Hr(u){if(x)return Oe(2,0,u);Ke(u)}a.invokeEntryPoint=function(u,p){u=Ye.apply(null,[u,p]),Ge()?te.kb(u):K(u)};function Hn(u){this.fb=u-24,this.pb=function(p){s()[this.fb+4>>2>>>0]=p},this.ob=function(p){s()[this.fb+8>>2>>>0]=p},this.gb=function(p,y){this.nb(),this.pb(p),this.ob(y)},this.nb=function(){s()[this.fb+16>>2>>>0]=0}}var fr=0,Ln=0;function Lr(u,p,y,C){return x?Oe(3,1,u,p,y,C):Fr(u,p,y,C)}function Fr(u,p,y,C){if(u>>>=0,p>>>=0,y>>>=0,C>>>=0,typeof SharedArrayBuffer>"u")return $e("Current environment does not support SharedArrayBuffer, pthreads are not available!"),6;var k=[];return x&&k.length===0?Lr(u,p,y,C):(u={Gb:y,Xa:u,rb:C,Mb:k},x?(u.Ob="spawnThread",postMessage(u,k),0):ut(u))}function jr(u,p,y){return x?Oe(4,1,u,p,y):0}function qr(u,p){if(x)return Oe(5,1,u,p)}var hr=u=>{for(var p=0,y=0;y<u.length;++y){var C=u.charCodeAt(y);127>=C?p++:2047>=C?p+=2:55296<=C&&57343>=C?(p+=4,++y):p+=3}return p},Yt=(u,p,y,C)=>{if(y>>>=0,!(0<C))return 0;var k=y;C=y+C-1;for(var V=0;V<u.length;++V){var H=u.charCodeAt(V);if(55296<=H&&57343>=H){var le=u.charCodeAt(++V);H=65536+((H&1023)<<10)|le&1023}if(127>=H){if(y>=C)break;p[y++>>>0]=H}else{if(2047>=H){if(y+1>=C)break;p[y++>>>0]=192|H>>6}else{if(65535>=H){if(y+2>=C)break;p[y++>>>0]=224|H>>12}else{if(y+3>=C)break;p[y++>>>0]=240|H>>18,p[y++>>>0]=128|H>>12&63}p[y++>>>0]=128|H>>6&63}p[y++>>>0]=128|H&63}}return p[y>>>0]=0,y-k},gr=(u,p,y)=>Yt(u,o(),p,y);function Dt(u,p){if(x)return Oe(6,1,u,p)}function Kr(u,p,y){if(x)return Oe(7,1,u,p,y)}function ct(u,p,y){return x?Oe(8,1,u,p,y):0}function it(u,p){if(x)return Oe(9,1,u,p)}function yr(u,p,y){if(x)return Oe(10,1,u,p,y)}function Mt(u,p,y,C){if(x)return Oe(11,1,u,p,y,C)}function br(u,p,y,C){if(x)return Oe(12,1,u,p,y,C)}function wr(u,p,y,C){if(x)return Oe(13,1,u,p,y,C)}function Yr(u){if(x)return Oe(14,1,u)}function Zt(u,p){if(x)return Oe(15,1,u,p)}function Zr(u,p,y){if(x)return Oe(16,1,u,p,y)}var Qr=u=>{if(!be)try{if(u(),!Ge())try{x?K(ge):Ke(ge)}catch(p){p instanceof qt||p=="unwind"||_(1,p)}}catch(p){p instanceof qt||p=="unwind"||_(1,p)}};function vr(u){u>>>=0,typeof Atomics.Nb=="function"&&(Atomics.Nb(n(),u>>2,u).value.then(Qt),u+=128,Atomics.store(n(),u>>2,1))}a.__emscripten_thread_mailbox_await=vr;function Qt(){var u=w();u&&(vr(u),Qr(()=>se()))}a.checkMailbox=Qt;var It=u=>u%4===0&&(u%100!==0||u%400===0),zt=[0,31,60,91,121,152,182,213,244,274,305,335],Xr=[0,31,59,90,120,151,181,212,243,273,304,334];function Xt(u,p,y,C,k,V,H,le){return x?Oe(17,1,u,p,y,C,k,V,H,le):-52}function $r(u,p,y,C,k,V,H){if(x)return Oe(18,1,u,p,y,C,k,V,H)}var Jr=u=>{var p=hr(u)+1,y=A(p);return y&&gr(u,y,p),y},_r=[],Sr=(u,p)=>{_r.length=0;var y;for(p>>=2;y=o()[u++>>>0];)p+=y!=105&p,_r.push(y==105?n()[p>>>0]:c()[p++>>>1]),++p;return _r},Fn=u=>{var p=P();return u=u(),ee(p),u};function Oe(u,p){var y=arguments.length-2,C=arguments;return Fn(()=>{for(var k=ye(8*y),V=k>>3,H=0;H<y;H++){var le=C[2+H];c()[V+H>>>0]=le}return F(u,y,k,p)})}var Jt=[],er={},xr=()=>{if(!Ut){var u={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:(typeof navigator=="object"&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",_:v||"./this.program"},p;for(p in er)er[p]===void 0?delete u[p]:u[p]=er[p];var y=[];for(p in u)y.push(`${p}=${u[p]}`);Ut=y}return Ut},Ut;function Cr(u,p){if(x)return Oe(19,1,u,p);u>>>=0,p>>>=0;var y=0;return xr().forEach(function(C,k){var V=p+y;for(k=s()[u+4*k>>2>>>0]=V,V=0;V<C.length;++V)r()[k++>>0>>>0]=C.charCodeAt(V);r()[k>>0>>>0]=0,y+=C.length+1}),0}function tr(u,p){if(x)return Oe(20,1,u,p);u>>>=0,p>>>=0;var y=xr();s()[u>>2>>>0]=y.length;var C=0;return y.forEach(function(k){C+=k.length+1}),s()[p>>2>>>0]=C,0}function Ir(u){return x?Oe(21,1,u):52}function rr(u,p,y,C){return x?Oe(22,1,u,p,y,C):52}function en(u,p,y,C,k){return x?Oe(23,1,u,p,y,C,k):70}var tn=[null,[],[]];function Ar(u,p,y,C){if(x)return Oe(24,1,u,p,y,C);p>>>=0,y>>>=0,C>>>=0;for(var k=0,V=0;V<y;V++){var H=s()[p>>2>>>0],le=s()[p+4>>2>>>0];p+=8;for(var ae=0;ae<le;ae++){var oe=o()[H+ae>>>0],ue=tn[u];oe===0||oe===10?((u===1?J:$e)(mr(ue,0)),ue.length=0):ue.push(oe)}k+=le}return s()[C>>2>>>0]=k,0}var rn=[31,29,31,30,31,30,31,31,30,31,30,31],Tr=[31,28,31,30,31,30,31,31,30,31,30,31];function nn(u){var p=Array(hr(u)+1);return Yt(u,p,0,p.length),p}var nr=(u,p)=>{r().set(u,p>>>0)};function on(u,p,y,C){function k(R,ce,Te){for(R=typeof R=="number"?R.toString():R||"";R.length<ce;)R=Te[0]+R;return R}function V(R,ce){return k(R,ce,"0")}function H(R,ce){function Te(zo){return 0>zo?-1:0<zo?1:0}var Wt;return(Wt=Te(R.getFullYear()-ce.getFullYear()))===0&&(Wt=Te(R.getMonth()-ce.getMonth()))===0&&(Wt=Te(R.getDate()-ce.getDate())),Wt}function le(R){switch(R.getDay()){case 0:return new Date(R.getFullYear()-1,11,29);case 1:return R;case 2:return new Date(R.getFullYear(),0,3);case 3:return new Date(R.getFullYear(),0,2);case 4:return new Date(R.getFullYear(),0,1);case 5:return new Date(R.getFullYear()-1,11,31);case 6:return new Date(R.getFullYear()-1,11,30)}}function ae(R){var ce=R.Za;for(R=new Date(new Date(R.$a+1900,0,1).getTime());0<ce;){var Te=R.getMonth(),Wt=(It(R.getFullYear())?rn:Tr)[Te];if(ce>Wt-R.getDate())ce-=Wt-R.getDate()+1,R.setDate(1),11>Te?R.setMonth(Te+1):(R.setMonth(0),R.setFullYear(R.getFullYear()+1));else{R.setDate(R.getDate()+ce);break}}return Te=new Date(R.getFullYear()+1,0,4),ce=le(new Date(R.getFullYear(),0,4)),Te=le(Te),0>=H(ce,R)?0>=H(Te,R)?R.getFullYear()+1:R.getFullYear():R.getFullYear()-1}u>>>=0,p>>>=0,y>>>=0,C>>>=0;var oe=n()[C+40>>2>>>0];C={Kb:n()[C>>2>>>0],Jb:n()[C+4>>2>>>0],cb:n()[C+8>>2>>>0],ib:n()[C+12>>2>>>0],eb:n()[C+16>>2>>>0],$a:n()[C+20>>2>>>0],Wa:n()[C+24>>2>>>0],Za:n()[C+28>>2>>>0],Tb:n()[C+32>>2>>>0],Ib:n()[C+36>>2>>>0],Lb:oe?De(oe):""},y=De(y),oe={"%c":"%a %b %d %H:%M:%S %Y","%D":"%m/%d/%y","%F":"%Y-%m-%d","%h":"%b","%r":"%I:%M:%S %p","%R":"%H:%M","%T":"%H:%M:%S","%x":"%m/%d/%y","%X":"%H:%M:%S","%Ec":"%c","%EC":"%C","%Ex":"%m/%d/%y","%EX":"%H:%M:%S","%Ey":"%y","%EY":"%Y","%Od":"%d","%Oe":"%e","%OH":"%H","%OI":"%I","%Om":"%m","%OM":"%M","%OS":"%S","%Ou":"%u","%OU":"%U","%OV":"%V","%Ow":"%w","%OW":"%W","%Oy":"%y"};for(var ue in oe)y=y.replace(new RegExp(ue,"g"),oe[ue]);var Ie="Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "),Ee="January February March April May June July August September October November December".split(" ");oe={"%a":R=>Ie[R.Wa].substring(0,3),"%A":R=>Ie[R.Wa],"%b":R=>Ee[R.eb].substring(0,3),"%B":R=>Ee[R.eb],"%C":R=>V((R.$a+1900)/100|0,2),"%d":R=>V(R.ib,2),"%e":R=>k(R.ib,2," "),"%g":R=>ae(R).toString().substring(2),"%G":R=>ae(R),"%H":R=>V(R.cb,2),"%I":R=>(R=R.cb,R==0?R=12:12<R&&(R-=12),V(R,2)),"%j":R=>{for(var ce=0,Te=0;Te<=R.eb-1;ce+=(It(R.$a+1900)?rn:Tr)[Te++]);return V(R.ib+ce,3)},"%m":R=>V(R.eb+1,2),"%M":R=>V(R.Jb,2),"%n":()=>`\n`,"%p":R=>0<=R.cb&&12>R.cb?"AM":"PM","%S":R=>V(R.Kb,2),"%t":()=>"	","%u":R=>R.Wa||7,"%U":R=>V(Math.floor((R.Za+7-R.Wa)/7),2),"%V":R=>{var ce=Math.floor((R.Za+7-(R.Wa+6)%7)/7);if(2>=(R.Wa+371-R.Za-2)%7&&ce++,ce)ce==53&&(Te=(R.Wa+371-R.Za)%7,Te==4||Te==3&&It(R.$a)||(ce=1));else{ce=52;var Te=(R.Wa+7-R.Za-1)%7;(Te==4||Te==5&&It(R.$a%400-1))&&ce++}return V(ce,2)},"%w":R=>R.Wa,"%W":R=>V(Math.floor((R.Za+7-(R.Wa+6)%7)/7),2),"%y":R=>(R.$a+1900).toString().substring(2),"%Y":R=>R.$a+1900,"%z":R=>{R=R.Ib;var ce=0<=R;return R=Math.abs(R)/60,(ce?"+":"-")+("0000"+(R/60*100+R%60)).slice(-4)},"%Z":R=>R.Lb,"%%":()=>"%"},y=y.replace(/%%/g,"\\0\\0");for(ue in oe)y.includes(ue)&&(y=y.replace(new RegExp(ue,"g"),oe[ue](C)));return y=y.replace(/\\0\\0/g,"%"),ue=nn(y),ue.length>p?0:(nr(ue,u),ue.length-1)}function ne(u){try{u()}catch(p){lt(p)}}function an(u){var p={},y;for(y in u)(function(C){var k=u[C];p[C]=typeof k=="function"?function(){Vt.push(C);try{return k.apply(null,arguments)}finally{be||(Vt.pop()===C||lt(),He&&tt===1&&Vt.length===0&&(tt=0,Le+=1,ne(Ro),typeof Fibers<"u"&&Fibers.Ub()))}}:k})(y);return p}var tt=0,He=null,Er=0,Vt=[],Pr={},Or={},sn=0,or=null,un=[];function ln(){return new Promise((u,p)=>{or={resolve:u,reject:p}})}function jn(){var u=A(65548),p=u+12;s()[u>>2>>>0]=p,s()[u+4>>2>>>0]=p+65536,p=Vt[0];var y=Pr[p];return y===void 0&&(y=sn++,Pr[p]=y,Or[y]=p),p=y,n()[u+8>>2>>>0]=p,u}function ar(){var u=n()[He+8>>2>>>0];return u=N[Or[u]],--Le,u()}function dn(u){if(!be){if(tt===0){var p=!1,y=!1;u((C=0)=>{if(!be&&(Er=C,p=!0,y)){tt=2,ne(()=>Bo(He)),typeof Browser<"u"&&Browser.hb.sb&&Browser.hb.resume(),C=!1;try{var k=ar()}catch(le){k=le,C=!0}var V=!1;if(!He){var H=or;H&&(or=null,(C?H.reject:H.resolve)(k),V=!0)}if(C&&!V)throw k}}),y=!0,p||(tt=1,He=jn(),typeof Browser<"u"&&Browser.hb.sb&&Browser.hb.pause(),ne(()=>gt(He)))}else tt===2?(tt=0,ne(Do),D(He),He=null,un.forEach(C=>Qr(C))):lt(`invalid state: ${tt}`);return Er}}function i(u){return dn(p=>{u().then(p)})}te.gb();var d=[null,Kt,Hr,Lr,jr,qr,Dt,Kr,ct,it,yr,Mt,br,wr,Yr,Zt,Zr,Xt,$r,Cr,tr,Ir,rr,en,Ar],f={r:function(u,p,y){return i(async()=>{await a.xb(u,p,y)})},b:function(u,p,y){throw u>>>=0,new Hn(u).gb(p>>>0,y>>>0),fr=u,Ln++,fr},O:function(u){G(u>>>0,!S,1,!b,131072,!1),te.lb()},l:function(u){u>>>=0,x?postMessage({cmd:"cleanupThread",thread:u}):Gr(u)},I:Fr,i:jr,U:qr,E:Dt,G:Kr,V:ct,S:it,K:yr,R:Mt,p:br,F:wr,C:Yr,T:Zt,D:Zr,q:()=>!0,A:function(u,p){u>>>=0,u==p>>>0?setTimeout(()=>Qt()):x?postMessage({targetThread:u,cmd:"checkMailbox"}):(u=te.Qa[u])&&u.postMessage({cmd:"checkMailbox"})},M:function(){return-1},N:vr,X:function(u){I&&te.Qa[u>>>0].ref()},u:function(u,p,y){u=p+2097152>>>0<4194305-!!u?(u>>>0)+4294967296*p:NaN,y>>>=0,u=new Date(1e3*u),n()[y>>2>>>0]=u.getUTCSeconds(),n()[y+4>>2>>>0]=u.getUTCMinutes(),n()[y+8>>2>>>0]=u.getUTCHours(),n()[y+12>>2>>>0]=u.getUTCDate(),n()[y+16>>2>>>0]=u.getUTCMonth(),n()[y+20>>2>>>0]=u.getUTCFullYear()-1900,n()[y+24>>2>>>0]=u.getUTCDay(),u=(u.getTime()-Date.UTC(u.getUTCFullYear(),0,1,0,0,0,0))/864e5|0,n()[y+28>>2>>>0]=u},v:function(u,p,y){u=p+2097152>>>0<4194305-!!u?(u>>>0)+4294967296*p:NaN,y>>>=0,u=new Date(1e3*u),n()[y>>2>>>0]=u.getSeconds(),n()[y+4>>2>>>0]=u.getMinutes(),n()[y+8>>2>>>0]=u.getHours(),n()[y+12>>2>>>0]=u.getDate(),n()[y+16>>2>>>0]=u.getMonth(),n()[y+20>>2>>>0]=u.getFullYear()-1900,n()[y+24>>2>>>0]=u.getDay(),p=(It(u.getFullYear())?zt:Xr)[u.getMonth()]+u.getDate()-1|0,n()[y+28>>2>>>0]=p,n()[y+36>>2>>>0]=-(60*u.getTimezoneOffset()),p=new Date(u.getFullYear(),6,1).getTimezoneOffset();var C=new Date(u.getFullYear(),0,1).getTimezoneOffset();u=(p!=C&&u.getTimezoneOffset()==Math.min(C,p))|0,n()[y+32>>2>>>0]=u},w:function(u){u>>>=0;var p=new Date(n()[u+20>>2>>>0]+1900,n()[u+16>>2>>>0],n()[u+12>>2>>>0],n()[u+8>>2>>>0],n()[u+4>>2>>>0],n()[u>>2>>>0],0),y=n()[u+32>>2>>>0],C=p.getTimezoneOffset(),k=new Date(p.getFullYear(),6,1).getTimezoneOffset(),V=new Date(p.getFullYear(),0,1).getTimezoneOffset(),H=Math.min(V,k);return 0>y?n()[u+32>>2>>>0]=+(k!=V&&H==C):0<y!=(H==C)&&(k=Math.max(V,k),p.setTime(p.getTime()+6e4*((0<y?H:k)-C))),n()[u+24>>2>>>0]=p.getDay(),y=(It(p.getFullYear())?zt:Xr)[p.getMonth()]+p.getDate()-1|0,n()[u+28>>2>>>0]=y,n()[u>>2>>>0]=p.getSeconds(),n()[u+4>>2>>>0]=p.getMinutes(),n()[u+8>>2>>>0]=p.getHours(),n()[u+12>>2>>>0]=p.getDate(),n()[u+16>>2>>>0]=p.getMonth(),n()[u+20>>2>>>0]=p.getYear(),u=p.getTime()/1e3,X((ht=u,1<=+Math.abs(ht)?0<ht?+Math.floor(ht/4294967296)>>>0:~~+Math.ceil((ht-+(~~ht>>>0))/4294967296)>>>0:0)),u>>>0},s:Xt,t:$r,z:function(u,p,y){function C(oe){return(oe=oe.toTimeString().match(/\\(([A-Za-z ]+)\\)$/))?oe[1]:"GMT"}u>>>=0,p>>>=0,y>>>=0;var k=new Date().getFullYear(),V=new Date(k,0,1),H=new Date(k,6,1);k=V.getTimezoneOffset();var le=H.getTimezoneOffset(),ae=Math.max(k,le);s()[u>>2>>>0]=60*ae,n()[p>>2>>>0]=+(k!=le),u=C(V),p=C(H),u=Jr(u),p=Jr(p),le<k?(s()[y>>2>>>0]=u,s()[y+4>>2>>>0]=p):(s()[y>>2>>>0]=p,s()[y+4>>2>>>0]=u)},d:()=>{lt("")},c:function(u,p,y){return u>>>=0,p=Sr(p>>>0,y>>>0),Rt[u].apply(null,p)},k:function(u,p,y){return u>>>=0,p=Sr(p>>>0,y>>>0),Rt[u].apply(null,p)},m:function(){},j:function(){return Date.now()},W:()=>{throw Le+=1,"unwind"},B:function(){return 4294901760},f:()=>performance.timeOrigin+performance.now(),g:function(){return I?(Fo(),Nt(Lo)).cpus().length:navigator.hardwareConcurrency},L:function(u,p,y,C){for(te.Pb=p>>>0,Jt.length=y,p=C>>>0>>3,C=0;C<y;C++)Jt[C]=c()[p+C>>>0];return(0>u?Rt[-u-1]:d[u]).apply(null,Jt)},y:function(u){u>>>=0;var p=o().length;if(u<=p||4294901760<u)return!1;for(var y=1;4>=y;y*=2){var C=p*(1+.2/y);C=Math.min(C,u+100663296);var k=Math;C=Math.max(u,C);e:{k=k.min.call(k,4294901760,C+(65536-C%65536)%65536)-_e.buffer.byteLength+65535>>>16;try{_e.grow(k),me();var V=1;break e}catch{}V=void 0}if(V)return!0}return!1},P:Cr,Q:tr,H:Ke,h:Ir,o:rr,x:en,n:Ar,a:_e||a.wasmMemory,J:on,e:function(u,p,y,C){return on(u>>>0,p>>>0,y>>>0,C>>>0)}};(function(){function u(y,C){return y=y.exports,y=an(y),N=y=tl(y),te.mb.push(N.Da),ot.unshift(N.Y),Be=C,dr(),y}var p={a:f};if(Wr(),a.instantiateWasm)try{return a.instantiateWasm(p,u)}catch(y){$e("Module.instantiateWasm callback failed with error: "+y),g(y)}return at(p,function(y){u(y.instance,y.module)}).catch(g),{}})(),a._OrtInit=(u,p)=>(a._OrtInit=N.Z)(u,p),a._OrtGetLastError=(u,p)=>(a._OrtGetLastError=N._)(u,p),a._OrtCreateSessionOptions=(u,p,y,C,k,V,H,le,ae,oe)=>(a._OrtCreateSessionOptions=N.$)(u,p,y,C,k,V,H,le,ae,oe),a._OrtAppendExecutionProvider=(u,p)=>(a._OrtAppendExecutionProvider=N.aa)(u,p),a._OrtAddFreeDimensionOverride=(u,p,y)=>(a._OrtAddFreeDimensionOverride=N.ba)(u,p,y),a._OrtAddSessionConfigEntry=(u,p,y)=>(a._OrtAddSessionConfigEntry=N.ca)(u,p,y),a._OrtReleaseSessionOptions=u=>(a._OrtReleaseSessionOptions=N.da)(u),a._OrtCreateSession=(u,p,y)=>(a._OrtCreateSession=N.ea)(u,p,y),a._OrtReleaseSession=u=>(a._OrtReleaseSession=N.fa)(u),a._OrtGetInputOutputCount=(u,p,y)=>(a._OrtGetInputOutputCount=N.ga)(u,p,y),a._OrtGetInputName=(u,p)=>(a._OrtGetInputName=N.ha)(u,p),a._OrtGetOutputName=(u,p)=>(a._OrtGetOutputName=N.ia)(u,p),a._OrtFree=u=>(a._OrtFree=N.ja)(u),a._OrtCreateTensor=(u,p,y,C,k,V)=>(a._OrtCreateTensor=N.ka)(u,p,y,C,k,V),a._OrtGetTensorData=(u,p,y,C,k)=>(a._OrtGetTensorData=N.la)(u,p,y,C,k),a._OrtReleaseTensor=u=>(a._OrtReleaseTensor=N.ma)(u),a._OrtCreateRunOptions=(u,p,y,C)=>(a._OrtCreateRunOptions=N.na)(u,p,y,C),a._OrtAddRunConfigEntry=(u,p,y)=>(a._OrtAddRunConfigEntry=N.oa)(u,p,y),a._OrtReleaseRunOptions=u=>(a._OrtReleaseRunOptions=N.pa)(u),a._OrtCreateBinding=u=>(a._OrtCreateBinding=N.qa)(u),a._OrtBindInput=(u,p,y)=>(a._OrtBindInput=N.ra)(u,p,y),a._OrtBindOutput=(u,p,y,C)=>(a._OrtBindOutput=N.sa)(u,p,y,C),a._OrtClearBoundOutputs=u=>(a._OrtClearBoundOutputs=N.ta)(u),a._OrtReleaseBinding=u=>(a._OrtReleaseBinding=N.ua)(u),a._OrtRunWithBinding=(u,p,y,C,k)=>(a._OrtRunWithBinding=N.va)(u,p,y,C,k),a._OrtRun=(u,p,y,C,k,V,H,le)=>(a._OrtRun=N.wa)(u,p,y,C,k,V,H,le),a._OrtEndProfiling=u=>(a._OrtEndProfiling=N.xa)(u),a._JsepOutput=(u,p,y)=>(a._JsepOutput=N.ya)(u,p,y),a._JsepGetNodeName=u=>(a._JsepGetNodeName=N.za)(u);var w=a._pthread_self=()=>(w=a._pthread_self=N.Aa)(),A=a._malloc=u=>(A=a._malloc=N.Ba)(u),D=a._free=u=>(D=a._free=N.Ca)(u);a.__emscripten_tls_init=()=>(a.__emscripten_tls_init=N.Da)();var G=a.__emscripten_thread_init=(u,p,y,C,k,V)=>(G=a.__emscripten_thread_init=N.Fa)(u,p,y,C,k,V);a.__emscripten_thread_crashed=()=>(a.__emscripten_thread_crashed=N.Ga)();var F=(u,p,y,C)=>(F=N.Ha)(u,p,y,C),Q=u=>(Q=N.Ia)(u),K=a.__emscripten_thread_exit=u=>(K=a.__emscripten_thread_exit=N.Ja)(u),se=a.__emscripten_check_mailbox=()=>(se=a.__emscripten_check_mailbox=N.Ka)(),X=u=>(X=N.La)(u),fe=(u,p)=>(fe=N.Ma)(u,p),P=()=>(P=N.Na)(),ee=u=>(ee=N.Oa)(u),ye=u=>(ye=N.Pa)(u),Ye=a.dynCall_ii=(u,p)=>(Ye=a.dynCall_ii=N.Ra)(u,p),gt=u=>(gt=N.Sa)(u),Ro=()=>(Ro=N.Ta)(),Bo=u=>(Bo=N.Ua)(u),Do=()=>(Do=N.Va)();a.___start_em_js=923047,a.___stop_em_js=923208;function tl(u){u=Object.assign({},u);var p=C=>()=>C()>>>0,y=C=>k=>C(k)>>>0;return u.__errno_location=p(u.__errno_location),u.pthread_self=p(u.pthread_self),u.malloc=y(u.malloc),u.stackSave=p(u.stackSave),u.stackAlloc=y(u.stackAlloc),u}a.keepRuntimeAlive=Ge,a.wasmMemory=_e,a.stackAlloc=ye,a.stackSave=P,a.stackRestore=ee,a.UTF8ToString=De,a.stringToUTF8=gr,a.lengthBytesUTF8=hr,a.ExitStatus=qt,a.PThread=te;var cn;ft=function u(){cn||Mo(),cn||(ft=u)};function Mo(){function u(){if(!cn&&(cn=!0,a.calledRun=!0,!be)&&(x||Bt(ot),m(a),a.onRuntimeInitialized&&a.onRuntimeInitialized(),!x)){if(a.postRun)for(typeof a.postRun=="function"&&(a.postRun=[a.postRun]);a.postRun.length;){var p=a.postRun.shift();At.unshift(p)}Bt(At)}}if(!(0<et))if(x)m(a),x||Bt(ot),startWorker(a);else{if(a.preRun)for(typeof a.preRun=="function"&&(a.preRun=[a.preRun]);a.preRun.length;)qe.unshift(a.preRun.shift());Bt(qe),0<et||(a.setStatus?(a.setStatus("Running..."),setTimeout(function(){setTimeout(function(){a.setStatus("")},1),u()},1)):u())}}if(a.preInit)for(typeof a.preInit=="function"&&(a.preInit=[a.preInit]);0<a.preInit.length;)a.preInit.pop()();return Mo(),t.ready}})();typeof qo=="object"&&typeof Qn=="object"?Qn.exports=jo:typeof define=="function"&&define.amd&&define([],()=>jo)});var Yo=kr((up,dl)=>{dl.exports=\'"use strict";var Module={},ENVIRONMENT_IS_NODE=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string";if(ENVIRONMENT_IS_NODE){var nodeWorkerThreads=require("worker_threads"),parentPort=nodeWorkerThreads.parentPort;parentPort.on("message",e=>onmessage({data:e}));var fs=require("fs");Object.assign(global,{self:global,require,Module,location:{href:__filename},Worker:nodeWorkerThreads.Worker,importScripts:e=>(0,eval)(fs.readFileSync(e,"utf8")+"//# sourceURL="+e),postMessage:e=>parentPort.postMessage(e),performance:global.performance||{now:Date.now}})}var initializedJS=!1;function threadPrintErr(){var e=Array.prototype.slice.call(arguments).join(" ");if(ENVIRONMENT_IS_NODE){fs.writeSync(2,e+`\\n`);return}console.error(e)}function threadAlert(){var e=Array.prototype.slice.call(arguments).join(" ");postMessage({cmd:"alert",text:e,threadId:Module._pthread_self()})}var err=threadPrintErr;self.alert=threadAlert,Module.instantiateWasm=(e,t)=>{var a=Module.wasmModule;Module.wasmModule=null;var r=new WebAssembly.Instance(a,e);return t(r)},self.onunhandledrejection=e=>{throw e.reason??e};function handleMessage(e){try{if(e.data.cmd==="load"){let a=[];self.onmessage=r=>a.push(r),self.startWorker=r=>{Module=r,postMessage({cmd:"loaded"});for(let s of a)handleMessage(s);self.onmessage=handleMessage},Module.wasmModule=e.data.wasmModule;for(const r of e.data.handlers)Module[r]=(...s)=>{postMessage({cmd:"callHandler",handler:r,args:s})};if(Module.wasmMemory=e.data.wasmMemory,Module.buffer=Module.wasmMemory.buffer,Module.ENVIRONMENT_IS_PTHREAD=!0,typeof e.data.urlOrBlob=="string")importScripts(e.data.urlOrBlob);else{var t=URL.createObjectURL(e.data.urlOrBlob);importScripts(t),URL.revokeObjectURL(t)}ortWasmThreaded(Module)}else if(e.data.cmd==="run"){Module.__emscripten_thread_init(e.data.pthread_ptr,0,0,1),Module.__emscripten_thread_mailbox_await(e.data.pthread_ptr),Module.establishStackSpace(),Module.PThread.receiveObjectTransfer(e.data),Module.PThread.threadInitTLS(),initializedJS||(initializedJS=!0);try{Module.invokeEntryPoint(e.data.start_routine,e.data.arg)}catch(a){if(a!="unwind")throw a}}else e.data.cmd==="cancel"?Module._pthread_self()&&Module.__emscripten_thread_exit(-1):e.data.target==="setimmediate"||(e.data.cmd==="checkMailbox"?initializedJS&&Module.checkMailbox():e.data.cmd&&(err("worker.js received unknown command "+e.data.cmd),err(e.data)))}catch(a){throw Module.__emscripten_thread_crashed&&Module.__emscripten_thread_crashed(),a}}self.onmessage=handleMessage;\\n\'});var eo,Et,Br,gn,Dr,ta,to,he=Y(()=>{"use strict";eo=e=>{switch(e){case"int8":return 3;case"uint8":return 2;case"bool":return 9;case"int16":return 5;case"uint16":return 4;case"int32":return 6;case"uint32":return 12;case"float16":return 10;case"float32":return 1;case"float64":return 11;case"string":return 8;case"int64":return 7;case"uint64":return 13;default:throw new Error(`unsupported data type: ${e}`)}},Et=e=>{switch(e){case 3:return"int8";case 2:return"uint8";case 9:return"bool";case 5:return"int16";case 4:return"uint16";case 6:return"int32";case 12:return"uint32";case 10:return"float16";case 1:return"float32";case 11:return"float64";case 8:return"string";case 7:return"int64";case 13:return"uint64";default:throw new Error(`unsupported data type: ${e}`)}},Br=e=>[void 0,4,1,1,2,2,4,8,void 0,1,2,8,4,8,void 0,void 0,void 0][e],gn=e=>{switch(e){case"float16":return Uint16Array;case"float32":return Float32Array;case"uint8":return Uint8Array;case"int8":return Int8Array;case"uint16":return Uint16Array;case"int16":return Int16Array;case"int32":return Int32Array;case"bool":return Uint8Array;case"float64":return Float64Array;case"uint32":return Uint32Array;case"int64":return BigInt64Array;case"uint64":return BigUint64Array;default:throw new Error(`unsupported type: ${e}`)}},Dr=e=>{switch(e){case"verbose":return 0;case"info":return 1;case"warning":return 2;case"error":return 3;case"fatal":return 4;default:throw new Error(`unsupported logging level: ${e}`)}},ta=e=>e==="float32"||e==="int32"||e==="int64"||e==="bool"||e==="float16"||e==="uint32",to=e=>{switch(e){case"none":return 0;case"cpu":return 1;case"cpu-pinned":return 2;case"texture":return 3;case"gpu-buffer":return 4;default:throw new Error(`unsupported data location: ${e}`)}}});var yn=Y(()=>{"use strict"});var na=Y(()=>{"use strict";yn()});var oa,aa=Y(()=>{"use strict";oa="1.18.0"});var ia,Gt,ro=Y(()=>{"use strict";aa();ia="warning",Gt={wasm:{},webgl:{},webgpu:{},versions:{common:oa},set logLevel(e){if(e!==void 0){if(typeof e!="string"||["verbose","info","warning","error","fatal"].indexOf(e)===-1)throw new Error(`Unsupported logging level: ${e}`);ia=e}},get logLevel(){return ia}};Object.defineProperty(Gt,"logLevel",{enumerable:!0})});var ir,sa=Y(()=>{"use strict";ro();ir=Gt});var ua=Y(()=>{"use strict"});var la=Y(()=>{"use strict";bn()});var ca=Y(()=>{"use strict"});var pa=Y(()=>{"use strict";bn()});var bn=Y(()=>{"use strict";ua();la();ca();pa()});var wn=Y(()=>{"use strict";bn()});var no,ma,Ht,Lt,oo=Y(()=>{"use strict";ro();no=(e,t)=>{Gt.wasm.trace&&console.timeStamp(`${e}::ORT::${t}`)},ma=(e,t)=>{let r=new Error().stack?.split(/\\r\\n|\\r|\\n/g)||[],o=!1;for(let n=0;n<r.length;n++){if(o&&!r[n].includes("TRACE_FUNC")){let s=`FUNC_${e}::${r[n].trim().split(" ")[1]}`;t&&(s+=`::${t}`),no("CPU",s);return}r[n].includes("TRACE_FUNC")&&(o=!0)}},Ht=e=>{Gt.wasm.trace&&ma("BEGIN",e)},Lt=e=>{Gt.wasm.trace&&ma("END",e)}});var fa=Y(()=>{"use strict";yn();wn();oo()});var ha=Y(()=>{"use strict";fa()});var ga=Y(()=>{"use strict"});var ya=Y(()=>{"use strict";yn();wn()});var ba=Y(()=>{"use strict";ya()});var sr=Y(()=>{"use strict";na();sa();ha();wn();oo();ga();ba()});var $l,_l,wa,va,$a,Sl,ze,Pt=Y(()=>{"use strict";he();$l=["V","I","W","E","F"],_l=(e,t)=>{console.log(`[${$l[e]},${new Date().toISOString()}]${t}`)},$a=(e,t)=>{wa=e,va=t},Sl=(e,t)=>{let r=Dr(e),o=Dr(wa);r>=o&&_l(r,typeof t=="function"?t():t)},ze=(...e)=>{va&&Sl(...e)}});var _a,Sa=Y(()=>{"use strict";he();_a=(e,t)=>new(gn(t))(e)});var vn=Y(()=>{"use strict"});var $n,xl,xa,io,ao,Ia,Aa=Y(()=>{"use strict";Pt();vn();$n=e=>Math.ceil(e/256)*256,xl=1,xa=()=>xl++,io=async(e,t,r,o)=>{let n=$n(r),s=e.device.createBuffer({size:n,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ});try{let l=e.getCommandEncoder();e.endComputePass(),l.copyBufferToBuffer(t,0,s,0,n),e.flush(),await s.mapAsync(GPUMapMode.READ);let c=s.getMappedRange();if(o){let a=o();return a.set(new Uint8Array(c,0,r)),a}else return new Uint8Array(c.slice(0,r))}finally{s.destroy()}},ao=class{constructor(t){this.backend=t;this.storageCache=new Map,this.freeBuffers=new Map,this.freeUniformBuffers=new Map,this.buffersForUploadingPending=[],this.buffersPending=[],this.externalBuffers=new Map,this.capturedPendingBuffers=new Map}upload(t,r){let o=r.buffer,n=r.byteOffset,s=r.byteLength,l=$n(s),c=this.storageCache.get(t);if(!c)return;if(c.originalSize!==s)throw new Error(`inconsistent data size. gpu data size=${c.originalSize}, data size=${s}`);let a=this.backend.device.createBuffer({mappedAtCreation:!0,size:l,usage:GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC}),m=a.getMappedRange();new Uint8Array(m).set(new Uint8Array(o,n,s)),a.unmap();let g=this.backend.getCommandEncoder();this.backend.endComputePass(),g.copyBufferToBuffer(a,0,c.gpuData.buffer,0,l),ze("verbose",()=>`[WebGPU] GpuDataManager.upload(id=${t})`),this.buffersForUploadingPending.push(a)}memcpy(t,r){let o=this.storageCache.get(t);if(!o)throw new Error("source gpu data for memcpy does not exist");let n=this.storageCache.get(r);if(!n)throw new Error("destination gpu data for memcpy does not exist");if(o.originalSize!==n.originalSize)throw new Error("inconsistent source and destination gpu data size");let s=$n(o.originalSize),l=this.backend.getCommandEncoder();this.backend.endComputePass(),l.copyBufferToBuffer(o.gpuData.buffer,0,n.gpuData.buffer,0,s)}registerExternalBuffer(t,r,o){let n;if(o){if(n=this.externalBuffers.get(o),n===void 0)throw new Error("previous buffer is not registered");if(t===o)return ze("verbose",()=>`[WebGPU] GpuDataManager.registerExternalBuffer(size=${r}) => id=${n}, buffer is the same, skip.`),n;if(this.backend.capturedCommandList.has(this.backend.currentSessionId))throw new Error(`Registering a different external buffer under graph capture mode is not supported yet.\n             Please use the previous external buffer!`);this.externalBuffers.delete(o)}else n=xa();return this.storageCache.set(n,{gpuData:{id:n,type:0,buffer:t},originalSize:r}),this.externalBuffers.set(t,n),ze("verbose",()=>`[WebGPU] GpuDataManager.registerExternalBuffer(size=${r}) => id=${n}, registered.`),n}unregisterExternalBuffer(t){let r=this.externalBuffers.get(t);r!==void 0&&(this.storageCache.delete(r),this.externalBuffers.delete(t),ze("verbose",()=>`[WebGPU] GpuDataManager.unregisterExternalBuffer() => id=${r}`))}create(t,r=GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST){let o=$n(t),n,s=(r&GPUBufferUsage.STORAGE)===GPUBufferUsage.STORAGE,l=(r&GPUBufferUsage.UNIFORM)===GPUBufferUsage.UNIFORM;if(s||l){let a=s?this.freeBuffers:this.freeUniformBuffers,m=a.get(o);m||(m=[],a.set(o,m)),m.length>0?n=m.pop():n=this.backend.device.createBuffer({size:o,usage:r})}else n=this.backend.device.createBuffer({size:o,usage:r});let c={id:xa(),type:0,buffer:n};return this.storageCache.set(c.id,{gpuData:c,originalSize:t}),ze("verbose",()=>`[WebGPU] GpuDataManager.create(size=${t}) => id=${c.id}`),c}get(t){return this.storageCache.get(t)?.gpuData}release(t){let r=this.storageCache.get(t);if(!r)throw new Error("releasing data does not exist");return ze("verbose",()=>`[WebGPU] GpuDataManager.release(id=${t}), gpuDataId=${r.gpuData.id}`),this.storageCache.delete(t),this.buffersPending.push(r.gpuData.buffer),r.originalSize}async download(t,r){let o=this.storageCache.get(t);o&&await io(this.backend,o.gpuData.buffer,o.originalSize,r)}refreshPendingBuffers(){for(let t of this.buffersForUploadingPending)t.destroy();if(this.buffersForUploadingPending=[],this.buffersPending.length!==0)if(this.backend.sessionStatus==="default"){for(let t of this.buffersPending)(t.usage&GPUBufferUsage.STORAGE)===GPUBufferUsage.STORAGE?this.freeBuffers.get(t.size).push(t):(t.usage&GPUBufferUsage.UNIFORM)===GPUBufferUsage.UNIFORM?this.freeUniformBuffers.get(t.size).push(t):t.destroy();this.buffersPending=[]}else{let t=this.capturedPendingBuffers.get(this.backend.currentSessionId);t||(t=[],this.capturedPendingBuffers.set(this.backend.currentSessionId,t));for(let r of this.buffersPending)t.push(r);this.buffersPending=[]}}dispose(){this.freeBuffers.forEach(t=>{t.forEach(r=>{r.destroy()})}),this.freeUniformBuffers.forEach(t=>{t.forEach(r=>{r.destroy()})}),this.storageCache.forEach(t=>{t.gpuData.buffer.destroy()}),this.capturedPendingBuffers.forEach(t=>{t.forEach(r=>{r.destroy()})}),this.storageCache=new Map,this.freeBuffers=new Map,this.freeUniformBuffers=new Map,this.capturedPendingBuffers=new Map}onReleaseSession(t){let r=this.capturedPendingBuffers.get(t);r&&(r.forEach(o=>{o.destroy()}),this.capturedPendingBuffers.delete(t))}},Ia=(...e)=>new ao(...e)});var so,Se,Qe=Y(()=>{"use strict";so=class{constructor(t){Object.assign(this,t)}get cacheKey(){return this.key||(this.key=Object.getOwnPropertyNames(this).sort().map(t=>`${this[t]}`).join(";")),this.key}},Se=e=>new so(e)});var uo,yt,z,Ft,_n,Sn,xn,xe=Y(()=>{"use strict";uo=class{static calcMatMulShape(t,r){return t[1]!==r[0]?void 0:[t[0],r[1]]}},yt=class{static calcShape(t,r,o=!1){let n=t.length,s=r.length;if(n===0)return r;if(s===0)return t;let l=Math.max(t.length,r.length),c=new Array(l);if(o){if(n<2||s<2)return;let a=uo.calcMatMulShape([t[n-2],t[n-1]],[r[s-2],r[s-1]]);if(a===void 0)return;[c[l-2],c[l-1]]=a}for(let a=o?3:1;a<=l;a++){let m=n-a<0?1:t[n-a],g=s-a<0?1:r[s-a];if(m!==g&&m>1&&g>1)return;c[l-a]=Math.max(m,g)}return c}static isValidBroadcast(t,r){let o=t.length,n=r.length;if(o>n)return!1;for(let s=1;s<=o;s++)if(t[o-s]!==1&&t[o-s]!==r[n-s])return!1;return!0}},z=class e{static size(t){return e.getSizeFromDimensionRange(t,0,t.length)}static convertShape(t,r=4){let o=t.length;if(o===0)return[];let n=new Array(o),s=o-1;for(;s>=0;){if(t[s]%r===0){n[s]=t[s]/r;break}if(r%t[s]!==0)throw new Error("cannot convert shape");n[s]=1,r/=t[s],s--}for(s--;s>=0;s--)n[s]=t[s];return n}static sizeFromDimension(t,r){if(r<0||r>t.length)throw new Error(`invalid dimension of ${r} for sizeFromDimension as Tensor has ${t.length} dimensions.`);return e.getSizeFromDimensionRange(t,r,t.length)}static sizeToDimension(t,r){if(r<0||r>t.length)throw new Error(`invalid dimension of ${r} for sizeToDimension as Tensor has ${t.length} dimensions.`);return e.getSizeFromDimensionRange(t,0,r)}static getSizeFromDimensionRange(t,r,o){let n=1;for(let s=r;s<o;s++){if(t[s]<0)throw new Error("cannot get valid size from specified dimension range. Most likely the range contains negative values in them.");n*=t[s]}return n}static computeStrides(t){let r=t.length;if(r===0)return[];if(r===1)return[1];let o=new Array(r);o[r-1]=1,o[r-2]=t[r-1];for(let n=r-3;n>=0;--n)o[n]=o[n+1]*t[n+1];return o}static normalizeAxis(t,r){if(t<-r&&t>=r)throw new Error("unsupported axis for this operation.");return t<0?t+r:t}static normalizeAxes(t,r){return t.map(o=>this.normalizeAxis(o,r??t.length))}static sortBasedOnPerm(t,r){return r?r.map(o=>t[o]):t.slice().reverse()}static padShape(t,r){let o=t.length;return t.map((n,s)=>n+r[s]+r[s+o])}static areEqual(t,r){return t.length!==r.length?!1:t.every((o,n)=>o===r[n])}},Ft=class e{static adjustPoolAttributes(t,r,o,n,s,l){if(!t&&o.length!==r.length-2)throw new Error("length of specified kernel shapes should be 2 less than length of input dimensions");if(t)for(let c=0;c<r.length-2;c++)c>=o.length?o.push(r[c+2]):o[c]=r[c+2];for(let c=0;c<o.length;c++)if(c<n.length){if(n[c]<0)throw new Error("strides should be greater than or equal to 1")}else n.push(1);for(let c=0;c<o.length;c++)if(c<s.length){if(s[c]<0)throw new Error("dilations should be greater than or equal to 1")}else s.push(1);for(let c=0;c<o.length*2;c++)if(c<l.length){if(l[c]<0)throw new Error("pad should be greater than or equal to 1")}else l.push(0);for(let c=0;c<o.length;c++){if(o[c]<=0)throw new Error("kernel shapes need to be greater than 0");if(l[c]>=o[c]||l[c+o.length]>=o[c])throw new Error("pads should be smaller than kernel")}}static adjustPadsBasedOnAutoPad(t,r,o,n,s,l,c){if(c){if(s.length!==2*(t.length-2))throw new Error("length of pads should be twice the length of data dimensions");if(r.length!==t.length-2)throw new Error("length of strides should be the length of data dimensions");if(n.length!==t.length-2)throw new Error("length of kernel shapes should be the length of data dimensions");for(let a=0;a<t.length-2;a++)e.adjustPadAndReturnShape(t[a+(l?1:2)],r[a],o[a],n[a],s,a,a+t.length-2,c)}}static computePoolOutputShape(t,r,o,n,s,l,c){if(r.length<=0)throw new Error("input shape must be of size greater than 0");let a=[r[0],r[1]];return e.computeShapeHelper(t,r,a,o,n,s,l,c),a}static computeConvOutputShape(t,r,o,n,s,l,c){if(t.length<=0||r.length<=0)throw new Error("invalid input tensor dims or invalid filter tensor dims");let a=[t[0],r[0]];return e.computeShapeHelper(!1,t,a,o,n,s,l,c),a}static computeShapeHelper(t,r,o,n,s,l,c,a){if(t)for(let m=0;m<r.length-2;m++)o.push(1);else for(let m=0;m<r.length-2;m++)o.push(e.adjustPadAndReturnShape(r[m+2],n[m],s[m],l[m],c,m,m+r.length-2,a))}static adjustPadAndReturnShape(t,r,o,n,s,l,c,a){let m=o*(n-1)+1;if(a&&a!=="NOTSET")switch(a){case"VALID":return s[l]=0,s[c]=0,Math.floor((t-m)/r+1);case"SAME_LOWER":case"SAME_UPPER":if(o!==1)throw new Error("Dilation not supported for SAME_UPPER or SAME_LOWER");{let h=((t+r-1)/r-1)*r+n-t;return s[l]=Math.floor(a==="SAME_LOWER"?(h+1)/2:h/2),s[c]=h-s[l],Math.floor((t+h-n)/r+1)}default:throw new Error("Unsupported AutoPad type")}else return Math.floor((t+s[l]+s[c]-m)/r+1)}},_n=class{static getShapeOfGemmResult(t,r,o,n,s){if(t.length!==2||o.length!==2)throw new Error("shape need to be of size 2");let l,c,a;r?(l=t[1],c=t[0]):(l=t[0],c=t[1]);let m=-1;if(n?(a=o[0],m=1):(a=o[1],m=0),o[m]!==c)throw new Error("dimension mismatch");if(l<=0||a<=0||c<=0)throw new Error("invalid shape specified");if(s&&!yt.isValidBroadcast(s,[l,a]))throw new Error("gemm: invalid bias shape for broadcast");return[l,a,c]}},Sn=-34028234663852886e22,xn=34028234663852886e22});var Cn,co,Ue,rt,Z,je,Je,pt,nt,de,po,U,j,In,lo,Ta,ur,ve=Y(()=>{"use strict";he();xe();Cn=64,co=(e,t)=>{if(t===3)throw new Error("vec3 has same alignment as vec4, use vec4 instead");switch(e){case 10:return t>1?`vec${t}<f16>`:"f16";case 1:return t>1?`vec${t}<f32>`:"f32";case 6:return t>1?`vec${t}<i32>`:"i32";case 12:return t>1?`vec${t}<u32>`:"u32";case 7:if(t>1)throw new Error("currently not supported vecX of uint64 yet");return["vec2<u32>","i32"];case 13:if(t>1)throw new Error("currently not supported vecX of uint64 yet");return["vec2<u32>","u32"];case 9:if(t!==4)throw new Error("bool must be vec4");return["u32","vec4<bool>"];default:throw new Error(`Unknown data type: ${e}`)}},Ue=(e,t=1)=>{let r=co(e,t);return typeof r=="string"?r:r[0]},rt=(e,t=1)=>{let r=co(e,t);return typeof r=="string"?r:r[1]},Z=(...e)=>{let t=[];return e.forEach(r=>{r.length!==0&&t.push({type:12,data:r},{type:12,data:z.computeStrides(r)})}),t},je=e=>e%4===0?4:e%2===0?2:1,Je=(e="f32",t,r="0")=>!t||t===1?`${e}(${r})`:`vec${t}<${e}>(${r})`,pt=(e,t,r)=>e==="f32"?r:t===1?`f32(${r})`:`vec${t}f(${r})`,nt=(e,t)=>t===4?`(${e}.x + ${e}.y + ${e}.z + ${e}.w)`:t===2?`(${e}.x + ${e}.y)`:t===3?`(${e}.x + ${e}.y + ${e}.z)`:e,de=(e,t,r,o)=>e.startsWith("uniforms.")&&r>4?typeof t=="string"?o==="f16"?`${e}[(${t}) / 8][(${t}) % 8 / 4][(${t}) % 8 % 4]`:`${e}[(${t}) / 4][(${t}) % 4]`:o==="f16"?`${e}[${Math.floor(t/8)}][${Math.floor(t%8/4)}][${t%8%4}]`:`${e}[${Math.floor(t/4)}][${t%4}]`:r>1?`${e}[${t}]`:e,po=(e,t,r,o,n)=>{let s=typeof r=="number",l=s?r:r.length,c=[...new Array(l).keys()],a=l<2?"u32":l<=4?`vec${l}<u32>`:`array<u32, ${l}>`,m=co(t,n),g=typeof m=="string"?m:m[1],h=typeof m=="string"?m:m[0],v={indices:a,value:g,storage:h,tensor:t},_=L=>typeof L=="string"?L:`${L}u`,b={offsetToIndices:!1,indicesToOffset:!1,broadcastedIndicesToOffset:!1,set:!1,setByIndices:!1,get:!1,getByIndices:!1},S=s?"uniforms.":"",I=`${S}${e}_shape`,x=`${S}${e}_strides`,$="";for(let L=0;L<l-1;L++)$+=`\n    let dim${L} = current / ${de(x,L,l)};\n    let rest${L} = current % ${de(x,L,l)};\n    indices[${L}] = dim${L};\n    current = rest${L};\n    `;$+=`indices[${l-1}] = current;`;let E=l<2?"":`\n  fn o2i_${e}(offset: u32) -> ${v.indices} {\n    var indices: ${v.indices};\n    var current = offset;\n    ${$}\n    return indices;\n  }`,T=L=>(b.offsetToIndices=!0,l<2?L:`o2i_${e}(${L})`),B=[];if(l>=2)for(let L=l-1;L>=0;L--)B.push(`${de(x,L,l)} * (indices[${L}])`);let M=l<2?"":`\n  fn i2o_${e}(indices: ${v.indices}) -> u32 {\n    return ${B.join("+")};\n  }`,W=L=>(b.indicesToOffset=!0,l<2?L:`i2o_${e}(${L})`),q=(...L)=>l===0?"0u":`${v.indices}(${L.map(_).join(",")})`,ie=(L,re)=>l<2?`${L}`:`${de(L,re,l)}`,O=(L,re,me)=>l<2?`${L}=${me};`:`${de(L,re,l)}=${me};`,J={},$e=(L,re)=>{b.broadcastedIndicesToOffset=!0;let me=`${re.name}broadcastedIndicesTo${e}Offset`;if(me in J)return`${me}(${L})`;let Xe=[];for(let qe=l-1;qe>=0;qe--){let ot=re.indicesGet("outputIndices",qe+re.rank-l);Xe.push(`${ie(x,qe)} * (${ot} % ${ie(I,qe)})`)}return J[me]=`fn ${me}(outputIndices: ${re.type.indices}) -> u32 {\n             return ${Xe.length>0?Xe.join("+"):"0u"};\n           }`,`${me}(${L})`},ke=(L,re)=>(()=>{if(v.storage===v.value)return`${e}[${L}]=${re};`;if(v.storage==="vec2<u32>"&&v.value==="i32")return`${e}[${L}]=vec2<u32>(u32(${re}), select(0u, 0xFFFFFFFFu, ${re} < 0));`;if(v.storage==="vec2<u32>"&&v.value==="u32")return`${e}[${L}]=vec2<u32>(u32(${re}), 0u);`;if(v.storage==="u32"&&v.value==="vec4<bool>")return`${e}[${L}]=dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(${re}));`;throw new Error(`not supported combination of storage type ${v.storage} and value type ${v.value} yet`)})(),Re=L=>(()=>{if(v.storage===v.value)return`${e}[${L}]`;if(v.storage==="vec2<u32>"&&v.value==="i32")return`i32(${e}[${L}].x)`;if(v.storage==="vec2<u32>"&&v.value==="u32")return`u32(${e}[${L}].x)`;if(v.storage==="u32"&&v.value==="vec4<bool>")return`vec4<bool>(bool(${e}[${L}] & 0xFFu), bool(${e}[${L}] & 0xFF00u), bool(${e}[${L}] & 0xFF0000u), bool(${e}[${L}] & 0xFF000000u))`;throw new Error(`not supported combination of storage type ${v.storage} and value type ${v.value} yet`)})(),_e=l<2?"":`\n  fn get_${e}ByIndices(indices: ${v.indices}) -> ${g} {\n    return ${Re(`i2o_${e}(indices)`)};\n  }`,N=l<2?"":(()=>{let L=c.map(me=>`d${me}: u32`).join(", "),re=c.map(me=>`d${me}`).join(", ");return`\n  fn get_${e}(${L}) -> ${g} {\n    return get_${e}ByIndices(${q(re)});\n  }`})(),Be=(...L)=>{if(L.length!==l)throw new Error(`indices length must be ${l}`);let re=L.map(_).join(",");return l===0?Re("0u"):l===1?Re(re[0]):(b.get=!0,b.getByIndices=!0,b.indicesToOffset=!0,`get_${e}(${re})`)},be=L=>l<2?Re(L):(b.getByIndices=!0,b.indicesToOffset=!0,`get_${e}ByIndices(${L})`),ge=l<2?"":`\n  fn set_${e}ByIndices(indices: ${v.indices}, value: ${g}) {\n    ${ke(`i2o_${e}(indices)`,"value")}\n  }`,pe=l<2?"":(()=>{let L=c.map(me=>`d${me}: u32`).join(", "),re=c.map(me=>`d${me}`).join(", ");return`\n  fn set_${e}(${L}, value: ${g}) {\n    set_${e}ByIndices(${q(re)}, value);\n  }`})();return{impl:()=>{let L=[],re=!1;return b.offsetToIndices&&(L.push(E),re=!0),b.indicesToOffset&&(L.push(M),re=!0),b.broadcastedIndicesToOffset&&(Object.values(J).forEach(me=>L.push(me)),re=!0),b.set&&(L.push(pe),re=!0),b.setByIndices&&(L.push(ge),re=!0),b.get&&(L.push(N),re=!0),b.getByIndices&&(L.push(_e),re=!0),!s&&re&&L.unshift(`const ${I} = ${v.indices}(${r.join(",")});`,`const ${x} = ${v.indices}(${z.computeStrides(r).join(",")});`),L.join(`\n`)},type:v,offsetToIndices:T,indicesToOffset:W,broadcastedIndicesToOffset:$e,indices:q,indicesGet:ie,indicesSet:O,set:(...L)=>{if(L.length!==l+1)throw new Error(`indices length must be ${l}`);let re=L[l];if(typeof re!="string")throw new Error("value must be string");let me=L.slice(0,l).map(_).join(",");return l===0?ke("0u",re):l===1?ke(me[0],re):(b.set=!0,b.setByIndices=!0,b.indicesToOffset=!0,`set_${e}(${me}, ${re})`)},setByOffset:ke,setByIndices:(L,re)=>l<2?ke(L,re):(b.setByIndices=!0,b.indicesToOffset=!0,`set_${e}ByIndices(${L}, ${re});`),get:Be,getByOffset:Re,getByIndices:be,usage:o,name:e,strides:x,shape:I,rank:l}},U=(e,t,r,o=1)=>po(e,t,r,"input",o),j=(e,t,r,o=1)=>po(e,t,r,"output",o),In=(e,t,r,o=1)=>po(e,t,r,"internal",o),lo=class{constructor(t){this.normalizedDispatchGroup=t;this.internalVariables=[];this.variables=[];this.uniforms=[];this.variableIndex=0}guardAgainstOutOfBoundsWorkgroupSizes(t){return`if (global_idx >= ${typeof t=="number"?`${t}u`:t}) { return; }`}mainStart(t=Cn){let r=typeof t=="number"?t:t[0],o=typeof t=="number"?1:t[1],n=typeof t=="number"?1:t[2],s=this.normalizedDispatchGroup[1]===1&&this.normalizedDispatchGroup[2]===1,l=s?`@builtin(global_invocation_id) global_id : vec3<u32>,\n    @builtin(workgroup_id) workgroup_id : vec3<u32>,\n    @builtin(local_invocation_id) local_id : vec3<u32>`:`@builtin(local_invocation_id) local_id : vec3<u32>,\n    @builtin(local_invocation_index) local_idx : u32,\n    @builtin(workgroup_id) workgroup_id : vec3<u32>,\n    @builtin(num_workgroups) num_workgroups : vec3<u32>`,c=s?"let global_idx = global_id.x; let local_idx = local_id.x;":`let global_idx = (workgroup_id.z * num_workgroups[0] * num_workgroups[1] +\n          workgroup_id.y * num_workgroups[0] + workgroup_id.x) * ${r*o*n}u + local_idx;`;return`@compute @workgroup_size(${r}, ${o}, ${n})\n  fn main(${l}) {\n    ${c}\n  `}appendVariableUniforms(t){t.rank!==0&&(t.shape.startsWith("uniforms.")&&this.uniforms.push({name:t.shape.replace("uniforms.",""),type:"u32",length:t.rank}),t.strides.startsWith("uniforms.")&&this.uniforms.push({name:t.strides.replace("uniforms.",""),type:"u32",length:t.rank}))}declareVariable(t,r){if(t.usage==="internal")throw new Error("cannot use internal variable with declareVariable(). use registerInternalVariables() instead.");this.variables.push(t),this.appendVariableUniforms(t);let o=t.usage==="input"?"read":"read_write",n=t.type.storage;return`@group(0) @binding(${r}) var<storage, ${o}> ${t.name}: array<${n}>;`}declareVariables(...t){return t.map(r=>this.declareVariable(r,this.variableIndex++)).join(`\n`)}registerInternalVariable(t){if(t.usage!=="internal")throw new Error("cannot use input or output variable with registerInternalVariable(). use declareVariables() instead.");this.internalVariables.push(t),this.appendVariableUniforms(t)}registerInternalVariables(...t){return t.forEach(r=>this.registerInternalVariable(r)),this}registerUniform(t,r,o=1){return this.uniforms.push({name:t,type:r,length:o}),this}registerUniforms(t){return this.uniforms=this.uniforms.concat(t),this}uniformDeclaration(){if(this.uniforms.length===0)return"";let t=[];for(let{name:r,type:o,length:n}of this.uniforms)if(n&&n>4)o==="f16"?t.push(`@align(16) ${r}:array<mat2x4<${o}>, ${Math.ceil(n/8)}>`):t.push(`${r}:array<vec4<${o}>, ${Math.ceil(n/4)}>`);else{let s=n==null||n===1?o:`vec${n}<${o}>`;t.push(`${r}:${s}`)}return`\n      struct Uniforms { ${t.join(", ")} };\n      @group(0) @binding(${this.variableIndex}) var<uniform> uniforms: Uniforms;`}get additionalImplementations(){return this.uniformDeclaration()+this.variables.map(t=>t.impl()).join(`\n`)+this.internalVariables.map(t=>t.impl()).join(`\n`)}},Ta=e=>new lo(e),ur=(e,t)=>{let r=e.length,o=[];for(let n=0;n<r;n++){let s=r-1-n,l=e[s]||1;(t[t.length-1-n]||1)>1&&l===1&&o.unshift(s)}return o}});var Cl,Ea,Il,Al,mt,Pa,Oa,lr=Y(()=>{"use strict";he();xe();Qe();ve();Cl=e=>{if(!e||e.length!==1)throw new Error("Transpose requires 1 input.")},Ea=(e,t)=>t&&t.length!==e?[...new Array(e).keys()].reverse():t,Il=(e,t)=>z.sortBasedOnPerm(e,Ea(e.length,t)),Al=(e,t,r,o)=>{let n=[];n.push(`fn perm(i: ${o.type.indices}) -> ${r.type.indices} {\n    var a: ${r.type.indices};`);for(let s=0;s<t;++s)n.push(r.indicesSet("a",e[s],`i[${s}]`));return n.push("return a;}"),n.join(`\n`)},mt=(e,t)=>{let r=e.dataType,o=e.dims.length,n=Ea(o,t),s=Il(e.dims,n),l=j("output",r,s.length),c=U("a",r,o),a=m=>`\n  ${m.registerUniform("output_size","u32").declareVariables(c,l)}\n\n  ${Al(n,o,c,l)}\n\n  ${m.mainStart()}\n    ${m.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n\n    let indices = ${l.offsetToIndices("global_idx")};\n    let aIndices = perm(indices);\n\n    ${l.setByOffset("global_idx",c.getByIndices("aIndices"))}\n  }`;return{name:"Transpose",shaderCache:{hint:`${t}`,inputDependencies:["rank"]},getRunData:m=>{let g=z.size(s);return{outputs:[{dims:s,dataType:m[0].dataType}],dispatchGroup:{x:Math.ceil(g/64)},programUniforms:[{type:12,data:g},...Z(m[0].dims,s)]}},getShaderSource:a}},Pa=(e,t)=>{Cl(e.inputs),e.compute(mt(e.inputs[0],t.perm))},Oa=e=>Se({perm:e.perm})});var Tl,El,Pl,Ol,kl,Rl,Bl,Dl,Ml,zl,bt,ka,Ra,Ba,Da,Ma,za,Ua,Va,Wa,Na,Ga=Y(()=>{"use strict";he();xe();ve();An();lr();Tl={max:"select(bestValue, candidate, candidate > bestValue)",min:"select(bestValue, candidate, candidate < bestValue)",mean:"bestValue + candidate",sum:"bestValue + candidate",prod:"bestValue * candidate",sumSquare:"bestValue + candidate * candidate",logSumExp:"bestValue + exp(candidate)",l1:"bestValue + abs(candidate)",l2:"bestValue + candidate * candidate",logSum:"bestValue + candidate"},El={max:"select(bestValue, candidate, candidate > bestValue)",min:"select(bestValue, candidate, candidate < bestValue)",mean:"bestValue + candidate",sum:"bestValue + candidate",prod:"bestValue * candidate",sumSquare:"bestValue + candidate",logSumExp:"bestValue + candidate",l1:"bestValue + candidate",l2:"bestValue + candidate",logSum:"bestValue + candidate"},Pl={max:"_A[offset]",min:"_A[offset]",mean:"0",sum:"0",prod:"1",sumSquare:"0",logSumExp:"0",l1:"0",l2:"0",logSum:"0"},Ol={max:"bestValue",min:"bestValue",sum:"bestValue",prod:"bestValue",sumSquare:"bestValue",logSumExp:"log(bestValue)",l1:"bestValue",l2:"sqrt(bestValue)",logSum:"log(bestValue)"},kl=(e,t)=>{let r=[];for(let o=t-e;o<t;++o)r.push(o);return r},Rl=(e,t)=>{let r=[],o=e.length;for(let s=0;s<o;s++)t.indexOf(s)===-1&&r.push(e[s]);let n=t.map(s=>e[s]);return[r,n]},Bl=(e,t)=>{let r=e.length+t.length,o=[],n=0;for(let s=0;s<r;s++)t.indexOf(s)===-1?o.push(e[n++]):o.push(1);return o},Dl=(e,t)=>{for(let r=0;r<e.length;++r)if(e[e.length-r-1]!==t-1-r)return!1;return!0},Ml=(e,t)=>{let r=[];if(!Dl(e,t)){for(let o=0;o<t;++o)e.indexOf(o)===-1&&r.push(o);e.forEach(o=>r.push(o))}return r},zl=(e,t,r,o,n,s,l)=>{let c=r[0].dims,a=z.size(s),m=z.size(l),g=U("_A",r[0].dataType,c),h=j("output",n,s),v=32,_=`\n          var<workgroup> aBestValues : array<${h.type.storage}, ${v}>;\n       `;return{name:e,shaderCache:t,getShaderSource:S=>`\n        ${S.registerUniform("reduceSize","u32").declareVariables(g,h)}\n        ${_}\n        fn DIV_CEIL(a : u32, b : u32) -> u32 {\n          return ((a - 1u) / b + 1u);\n         }\n         ${S.mainStart(v)}\n\n          let outputIndex = global_idx / ${v};\n          let offset = outputIndex * uniforms.reduceSize;\n\n          var bestValue = ${h.type.storage}(${Pl[o]});\n          let Length = uniforms.reduceSize;\n          for (var k = local_idx; k < Length; k = k + ${v}) {\n           let candidate = ${h.type.storage}(${g.getByOffset("offset + k")});\n           bestValue = ${Tl[o]};\n          }\n          aBestValues[local_idx] = bestValue;\n          workgroupBarrier();\n\n         var reduceSize = min(Length, ${v}u);\n         for (var currentSize = reduceSize / 2u; reduceSize > 1u;\n             currentSize = reduceSize / 2u) {\n           let interval = DIV_CEIL(reduceSize, 2u);\n           if (local_idx < currentSize) {\n            let candidate = aBestValues[local_idx + interval];\n            bestValue = ${El[o]};\n            aBestValues[local_idx] = bestValue;\n           }\n           reduceSize = interval;\n           workgroupBarrier();\n         }\n\n         if (local_idx == 0u) {\n          ${h.setByOffset("outputIndex",`${o==="mean"?`bestValue / ${h.type.storage}(uniforms.reduceSize)`:`${Ol[o]}`}`)};\n         }\n        }`,getRunData:()=>({outputs:[{dims:s,dataType:n}],dispatchGroup:{x:a},programUniforms:[{type:12,data:m}]})}},bt=(e,t,r,o)=>{let n=e.inputs.length===1?r:mo(e.inputs,r),s=n.axes;s.length===0&&!n.noopWithEmptyAxes&&(s=e.inputs[0].dims.map((_,b)=>b));let l=z.normalizeAxes(s,e.inputs[0].dims.length),c=l,a=e.inputs[0],m=Ml(c,e.inputs[0].dims.length);m.length>0&&(a=e.compute(mt(e.inputs[0],m),{inputs:[0],outputs:[-1]})[0],c=kl(c.length,a.dims.length));let[g,h]=Rl(a.dims,c),v=g;n.keepDims&&(v=Bl(g,l)),e.compute(zl(t,{hint:n.cacheKey,inputDependencies:["type"]},[a],o,e.inputs[0].dataType,v,h),{inputs:[a]})},ka=(e,t)=>{bt(e,"ReduceMeanShared",t,"mean")},Ra=(e,t)=>{bt(e,"ReduceL1Shared",t,"l1")},Ba=(e,t)=>{bt(e,"ReduceL2Shared",t,"l2")},Da=(e,t)=>{bt(e,"ReduceLogSumExpShared",t,"logSumExp")},Ma=(e,t)=>{bt(e,"ReduceMaxShared",t,"max")},za=(e,t)=>{bt(e,"ReduceMinShared",t,"min")},Ua=(e,t)=>{bt(e,"ReduceProdShared",t,"prod")},Va=(e,t)=>{bt(e,"ReduceSumShared",t,"sum")},Wa=(e,t)=>{bt(e,"ReduceSumSquareShared",t,"sumSquare")},Na=(e,t)=>{bt(e,"ReduceLogSumShared",t,"logSum")}});var wt,Ul,Tn,mo,vt,Vl,Wl,Nl,Gl,Hl,Ll,Fl,jl,ql,Kl,$t,Ha,La,Fa,ja,qa,Ka,Ya,Za,Qa,Xa,An=Y(()=>{"use strict";he();xe();Qe();ve();Ga();wt=e=>{if(!e||e.length===0||e.length>2)throw new Error("Reduce op requires 1 or 2 inputs.");if(e.length===2&&e[1].dims.length!==1)throw new Error("Invalid axes input dims.")},Ul=e=>["","",`var value = ${e.getByIndices("input_indices")};`,""],Tn=(e,t,r,o,n,s,l=!1,c=!1)=>{let a=[],m=r[0].dims,g=m.length,h=z.normalizeAxes(n,g),v=!c&&h.length===0;m.forEach((I,x)=>{v||h.indexOf(x)>=0?l&&a.push(1):a.push(I)});let _=a.length,b=z.size(a);return{name:e,shaderCache:t,getShaderSource:I=>{let x=[],$=U("_A",r[0].dataType,g),E=j("output",s,_),T=o($,E,h),B=T[2];for(let M=0,W=0;M<g;M++)v||h.indexOf(M)>=0?(l&&W++,B=`for(var j${M}: u32 = 0; j${M} < ${m[M]}; j${M}++) {\n                  ${T[2].includes("last_index")?`let last_index = j${M};`:""}\n                  ${$.indicesSet("input_indices",M,`j${M}`)}\n                  ${B}\n                }`):(x.push(`${$.indicesSet("input_indices",M,E.indicesGet("output_indices",W))};`),W++);return`\n\n        ${I.registerUniform("output_size","u32").declareVariables($,E)}\n\n        ${I.mainStart()}\n          ${I.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n          var input_indices: ${$.type.indices};\n          let output_indices = ${E.offsetToIndices("global_idx")};\n\n          ${x.join(`\n`)}\n          ${T[0]}       // init ops for reduce max/min\n          ${T[1]}\n          ${B}\n          ${T[3]}\n          ${T.length===4?E.setByOffset("global_idx","value"):T.slice(4).join(`\n`)}\n        }`},getRunData:()=>({outputs:[{dims:a,dataType:s}],dispatchGroup:{x:Math.ceil(b/64)},programUniforms:[{type:12,data:b},...Z(m,a)]})}},mo=(e,t)=>{let r=[];return e[1].dims[0]>0&&e[1].getBigInt64Array().forEach(o=>r.push(Number(o))),Se({axes:r,keepDims:t.keepDims,noopWithEmptyAxes:t.noopWithEmptyAxes})},vt=(e,t,r,o)=>{let n=e.inputs,s=n.length===1?r:mo(n,r);e.compute(Tn(t,{hint:s.cacheKey,inputDependencies:["rank"]},[n[0]],s.noopWithEmptyAxes&&s.axes.length===0?Ul:o,s.axes,n[0].dataType,s.keepDims,s.noopWithEmptyAxes),{inputs:[0]})},Vl=(e,t)=>{wt(e.inputs),vt(e,"ReduceLogSum",t,(o,n)=>[`var value = ${n.type.storage}(0);`,"",`value += ${o.getByIndices("input_indices")};`,"value = log(value);"])},Wl=(e,t)=>{wt(e.inputs),vt(e,"ReduceL1",t,(o,n)=>[`var value = ${n.type.storage}(0);`,"",`value += abs(${o.getByIndices("input_indices")});`,""])},Nl=(e,t)=>{wt(e.inputs),vt(e,"ReduceL2",t,(o,n)=>[`var t = ${n.type.value}(0); var value = ${n.type.value}(0);`,"",`t = ${o.getByIndices("input_indices")}; value += (t * t);`,"value = sqrt(value);"])},Gl=(e,t)=>{wt(e.inputs),vt(e,"ReduceLogSumExp",t,(o,n)=>[`var value = ${n.type.storage}(0);`,"",`value += exp(${o.getByIndices("input_indices")});`,"value = log(value);"])},Hl=(e,t)=>{wt(e.inputs),vt(e,"ReduceMax",t,(o,n,s)=>{let l=[];for(let c=0;c<o.rank;c++)(s.indexOf(c)>=0||s.length===0)&&l.push(o.indicesSet("input_indices",c,0));return[`${l.join(`\n`)}`,`var value = ${o.getByIndices("input_indices")};`,`value = max(value, ${o.getByIndices("input_indices")});`,""]})},Ll=(e,t)=>{wt(e.inputs),vt(e,"ReduceMean",t,(o,n,s)=>{let l=1;for(let c=0;c<o.rank;c++)(s.indexOf(c)>=0||s.length===0)&&(l*=e.inputs[0].dims[c]);return["var sum = f32(0);","",`sum += f32(${o.getByIndices("input_indices")});`,`let value = ${n.type.value}(sum / ${l});`]})},Fl=(e,t)=>{wt(e.inputs),vt(e,"ReduceMin",t,(o,n,s)=>{let l=[];for(let c=0;c<o.rank;c++)(s.indexOf(c)>=0||s.length===0)&&l.push(`input_indices[${c}] = 0;`);return[`${l.join(`\n`)}`,`var value = ${o.getByIndices("input_indices")};`,`value = min(value, ${o.getByIndices("input_indices")});`,""]})},jl=(e,t)=>{wt(e.inputs),vt(e,"ReduceProd",t,(o,n)=>[`var value = ${n.type.storage}(1);`,"",`value *= ${o.getByIndices("input_indices")};`,""])},ql=(e,t)=>{wt(e.inputs),vt(e,"ReduceSum",t,(o,n)=>[`var value = ${n.type.storage}(0);`,"",`value += ${o.getByIndices("input_indices")};`,""])},Kl=(e,t)=>{wt(e.inputs),vt(e,"ReduceSumSquare",t,(o,n)=>[`var t = ${n.type.value}(0); var value = ${n.type.value}(0);`,"",`t = ${o.getByIndices("input_indices")}; value += t * t;`,""])},$t=(e,t,r)=>{if(t.length===0)return r;let o=1,n=1;for(let s=0;s<t.length;s++)t.indexOf(s)===-1?o*=e[s]:n*=e[s];return n<32&&o>1024},Ha=(e,t)=>{$t(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Ll(e,t):ka(e,t)},La=(e,t)=>{$t(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Wl(e,t):Ra(e,t)},Fa=(e,t)=>{$t(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Nl(e,t):Ba(e,t)},ja=(e,t)=>{$t(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Gl(e,t):Da(e,t)},qa=(e,t)=>{$t(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Hl(e,t):Ma(e,t)},Ka=(e,t)=>{$t(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Fl(e,t):za(e,t)},Ya=(e,t)=>{$t(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?jl(e,t):Ua(e,t)},Za=(e,t)=>{$t(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?ql(e,t):Va(e,t)},Qa=(e,t)=>{$t(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Kl(e,t):Wa(e,t)},Xa=(e,t)=>{$t(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Vl(e,t):Na(e,t)}});var Ja,ei,ti,fo,ri=Y(()=>{"use strict";he();Qe();An();Ja=e=>{if(!e||e.length===0||e.length>2)throw new Error("ArgMinMaxOp op requires 1 or 2 inputs.");if(e[0].dataType!==1)throw new Error("Invalid input type.")},ei=(e,t)=>{Ja(e.inputs);let r=(o,n,s)=>{let l=[];for(let c=0;c<o.rank;c++)(s.indexOf(c)>=0||s.length===0)&&l.push(`input_indices[${c}] = 0;`);return[`${l.join(`\n`)}`,`var value = ${o.getByIndices("input_indices")};\nvar best_index : i32 = 0;`,`if (${o.getByIndices("input_indices")} ${t.selectLastIndex>0?"<=":"<"} value) {\n         value = ${o.getByIndices("input_indices")};\n         best_index = i32(last_index);\n       }`,"",n.setByOffset("global_idx","best_index")]};e.compute(Tn("ArgMin",{hint:t.cacheKey,inputDependencies:["rank"]},[e.inputs[0]],r,[t.axis],7,t.keepDims),{inputs:[0]})},ti=(e,t)=>{Ja(e.inputs);let r=(o,n,s)=>{let l=[];for(let c=0;c<o.rank;c++)(s.indexOf(c)>=0||s.length===0)&&l.push(`input_indices[${c}] = 0;`);return[`${l.join(`\n`)}`,`var value = ${o.getByIndices("input_indices")};\nvar best_index : i32 = 0;`,`if (${o.getByIndices("input_indices")} ${t.selectLastIndex>0?">=":">"} value) {\n         value = ${o.getByIndices("input_indices")};\n         best_index = i32(last_index);\n       }`,"",n.setByOffset("global_idx","best_index")]};e.compute(Tn("argMax",{hint:t.cacheKey,inputDependencies:["rank"]},[e.inputs[0]],r,[t.axis],7,t.keepDims),{inputs:[0]})},fo=e=>Se(e)});var Yl,Zl,Ql,Xl,En,Jl,ni,ho=Y(()=>{"use strict";he();vn();ve();Yl=(e,t)=>{let r=e[0],o=e[1],n=e[2],s=e[3],l=e[4],c=e[5];if(l&&c)throw new Error("Attention cannot have both past and relative_position_bias");if(r.dims.length!==3)throw new Error(\'Input "input" must have 3 dimensions\');let a=r.dims[0],m=r.dims[1],g=r.dims[2];if(n.dims.length!==1)throw new Error(\'Input "bias" is expected to have 1 dimensions\');if(o.dims.length!==2)throw new Error(\'Input "weights" is expected to have 2 dimensions\');if(o.dims[0]!==g)throw new Error("Input 1 dimension 0 should have same length as dimension 2 of input 0");if(n.dims[0]!==o.dims[1])throw new Error(\'Input "bias" dimension 0 should have same length as dimension 1 of input "weights"\');let h=n.dims[0]/3,v=h,_=v;if(t.qkvHiddenSizes.length>0){if(t.qkvHiddenSizes.length!==3)throw new Error("qkv_hidden_sizes attribute should have 3 elements");for(let E of t.qkvHiddenSizes)if(E%t.numHeads!==0)throw new Error("qkv_hidden_sizes should be divisible by num_heads");h=t.qkvHiddenSizes[0],v=t.qkvHiddenSizes[1],_=t.qkvHiddenSizes[2]}let b=m;if(h!==v)throw new Error("qkv_hidden_sizes first element should be same as the second");if(n.dims[0]!==h+v+_)throw new Error(\'Input "bias" dimension 0 should have same length as sum of Q/K/V hidden sizes\');let S=0;if(l){if(v!==_)throw new Error(\'Input "past" expect k_hidden_size == v_hidden_size\');if(l.dims.length!==5)throw new Error(\'Input "past" must have 5 dimensions\');if(l.dims[0]!==2)throw new Error(\'Input "past" first dimension must be 2\');if(l.dims[1]!==a)throw new Error(\'Input "past" second dimension must be batch_size\');if(l.dims[2]!==t.numHeads)throw new Error(\'Input "past" third dimension must be num_heads\');if(l.dims[4]!==v/t.numHeads)throw new Error(\'Input "past" fifth dimension must be k_hidden_size / num_heads\');t.pastPresentShareBuffer||(S=l.dims[3])}let I=b+S,x=-1,$=0;if(s)throw new Error("Mask not supported");if(l)throw new Error("past is not supported");if(c)throw new Error("relativePositionBias is not supported");return{batchSize:a,sequenceLength:m,pastSequenceLength:S,kvSequenceLength:b,totalSequenceLength:I,maxSequenceLength:x,inputHiddenSize:g,hiddenSize:h,vHiddenSize:_,headSize:Math.floor(h/t.numHeads),vHeadSize:Math.floor(_/t.numHeads),numHeads:t.numHeads,isUnidirectional:!1,pastPresentShareBuffer:!1,maskFilterValue:t.maskFilterValue,maskType:$,scale:t.scale,broadcastResPosBias:!1,passPastInKv:!1,qkvFormat:1}},Zl=(e,t,r,o)=>{let n=je(o),s=64,l=o/n;l<s?s=1:l/8<64&&(s=Math.ceil(l/8));let c=Math.ceil(o/n/s),a=[{type:t.dataType,data:1/o},{type:12,data:l},{type:12,data:c}],m=Ue(t.dataType,n),g=h=>{let v=j("x",t.dataType,t.dims,n),_="thread_max_vector";n===2?_="max(thread_max_vector.x, thread_max_vector.y)":n===4&&(_="max(max(thread_max_vector.x, thread_max_vector.y), max(thread_max_vector.z, thread_max_vector.w))");let b=rt(t.dataType),S=[{name:"d_inv",type:b},{name:"d_comp",type:"u32"},{name:"elements_per_wg",type:"u32"}];return`\n  var<workgroup> wgMax: array<f32, ${s}>;\n  var<workgroup> wgSum: array<f32, ${s}>;\n  ${h.registerUniforms(S).declareVariables(v)}\n  ${h.mainStart([s,1,1])}\n    let localOffset = local_idx * uniforms.elements_per_wg;\n    let offset: u32 = workgroup_id.x * uniforms.d_comp + localOffset;\n\n    var thread_max_vector = ${Je("f32",n,"-3.402823e+38f")};\n    for (var i: u32 = 0; i < uniforms.elements_per_wg && i + localOffset < uniforms.d_comp; i++) {\n      thread_max_vector = max(${pt(b,n,"x[offset + i]")}, thread_max_vector);\n    }\n    wgMax[local_idx] = ${_};\n    workgroupBarrier();\n\n    var maxValue = -3.402823e+38f;\n    for (var i = 0u; i < ${s}; i++) {\n      maxValue = max(wgMax[i], maxValue);\n    }\n\n    var sumVector = ${Je("f32",n,"0")};\n    for (var i: u32 = 0; i < uniforms.elements_per_wg && i + localOffset < uniforms.d_comp; i++) {\n      sumVector += exp(${pt(b,n,"x[offset + i]")} - maxValue);\n    }\n    wgSum[local_idx] = ${nt("sumVector",n)};\n    workgroupBarrier();\n\n    var sum: f32 = 0;\n    for (var i = 0u; i < ${s}; i++) {\n      sum += wgSum[i];\n    }\n\n    if (sum == 0) {\n      for (var i: u32 = 0; i < uniforms.elements_per_wg && i + localOffset < uniforms.d_comp; i++) {\n        x[offset + i] = ${Je(b,n,"uniforms.d_inv")};\n      }\n    } else {\n      for (var i: u32 = 0; i < uniforms.elements_per_wg && i + localOffset < uniforms.d_comp; i++) {\n        let f32input = ${pt(b,n,"x[offset + i]")};\n        x[offset + i] = ${v.type.value}(exp(f32input - maxValue) / sum);\n      }\n    }\n  }`};e.compute({name:"AttentionProbsSoftmax",shaderCache:{hint:`${s};${m};${n}`},getShaderSource:g,getRunData:()=>({outputs:[],dispatchGroup:{x:r},programUniforms:a})},{inputs:[t],outputs:[]})},Ql=(e,t,r,o,n,s)=>{let l=[n.batchSize,n.numHeads,n.sequenceLength,n.kvSequenceLength+n.pastSequenceLength],c=s.scale===0?1/Math.sqrt(n.headSize):s.scale,a=je(n.headSize),m=n.headSize/a,g=12,h={x:Math.ceil(n.totalSequenceLength/g),y:Math.ceil(n.sequenceLength/g),z:n.batchSize*n.numHeads},v=[{type:12,data:n.sequenceLength},{type:12,data:m},{type:12,data:n.totalSequenceLength},{type:12,data:n.kvSequenceLength},{type:t.dataType,data:c}],_=[t,r],b=I=>{let x=U("q",t.dataType,t.dims,a),$=U("key",r.dataType,r.dims,a),E=j("output",t.dataType,l),T=Ue(t.dataType),B=[{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"kv_sequence_length",type:"u32"},{name:"alpha",type:T}];return`\n  const beta: ${T} = 1.0;\n  const TILE_SIZE = ${g}u;\n\n  var<workgroup> tileQ: array<${x.type.storage}, ${g*g}>;\n  var<workgroup> tileK: array<${x.type.storage}, ${g*g}>;\n  ${I.registerUniforms(B).declareVariables(x,$,E)}\n  ${I.mainStart([g,g,1])}\n    // x holds the N and y holds the M\n    let headIdx = workgroup_id.z;\n    let m = workgroup_id.y * TILE_SIZE;\n    let n = workgroup_id.x * TILE_SIZE;\n    let lm = m + local_id.y;\n    let ln = n + local_id.x;\n\n    let qOffset = uniforms.M * uniforms.K * headIdx + m * uniforms.K;\n    let kOffset = uniforms.kv_sequence_length * uniforms.K * headIdx + n * uniforms.K;\n\n    var value = ${Je(T,a)};\n    for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {\n      if (m + local_id.y < uniforms.M && w + local_id.x < uniforms.K) {\n        tileQ[TILE_SIZE * local_id.y + local_id.x] = q[qOffset + local_id.y * uniforms.K + w + local_id.x];\n      }\n      if (n + local_id.y < uniforms.N && w + local_id.x < uniforms.K) {\n        tileK[TILE_SIZE * local_id.y + local_id.x] = key[kOffset + local_id.y * uniforms.K + w + local_id.x];\n      }\n      workgroupBarrier();\n\n      for (var k: u32 = 0u; k<TILE_SIZE && w+k < uniforms.K; k++) {\n        value += tileQ[TILE_SIZE * local_id.y + k] * tileK[TILE_SIZE * local_id.x + k];\n      }\n\n      workgroupBarrier();\n    }\n\n    let headOffset = headIdx * uniforms.M * uniforms.N;\n    if (lm < uniforms.M && ln < uniforms.N) {\n      let outputIdx = headOffset + lm * uniforms.N + ln;\n      output[outputIdx] = ${nt("value",a)} * uniforms.alpha;\n    }\n  }`},S=e.compute({name:"AttentionProbs",shaderCache:{hint:`${a}`,inputDependencies:["type","type"]},getRunData:()=>({outputs:[{dims:l,dataType:t.dataType,gpuDataType:0}],dispatchGroup:h,programUniforms:v}),getShaderSource:b},{inputs:_,outputs:[-1]})[0];return Zl(e,S,n.batchSize*n.numHeads*n.sequenceLength,n.totalSequenceLength),S},Xl=(e,t,r,o)=>{let n=[o.batchSize,o.sequenceLength,o.vHiddenSize],s=12,l={x:Math.ceil(o.vHeadSize/s),y:Math.ceil(o.sequenceLength/s),z:o.batchSize*o.numHeads},c=[{type:12,data:o.sequenceLength},{type:12,data:o.totalSequenceLength},{type:12,data:o.vHeadSize},{type:12,data:o.numHeads},{type:12,data:o.vHiddenSize}],a=m=>{let g=U("probs",t.dataType,t.dims),h=U("v",r.dataType,r.dims),v=j("output",t.dataType,n),_=[{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"v_hidden_size",type:"u32"}];return`\n  const TILE_SIZE = ${s}u;\n  var<workgroup> tileQ: array<${g.type.value}, ${s*s}>;\n  var<workgroup> tileK: array<${g.type.value}, ${s*s}>;\n  ${m.registerUniforms(_).declareVariables(g,h,v)}\n  ${m.mainStart([s,s,1])}\n   let headIdx = workgroup_id.z;\n   let m = workgroup_id.y * TILE_SIZE + local_id.y;\n   let n = workgroup_id.x * TILE_SIZE + local_id.x;\n\n   let offsetA = headIdx * (uniforms.M * uniforms.K) + m * uniforms.K;\n   let offsetB = headIdx * (uniforms.N * uniforms.K) + n;\n\n   var value = ${g.type.storage}(0);\n   for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {\n     if (m < uniforms.M && w + local_id.x < uniforms.K) {\n       tileQ[TILE_SIZE * local_id.y + local_id.x] = probs[offsetA + w + local_id.x];\n     }\n     if (n < uniforms.N && w + local_id.y < uniforms.K) {\n       tileK[TILE_SIZE * local_id.y + local_id.x] = v[offsetB + (w + local_id.y) * uniforms.N];\n     }\n     workgroupBarrier();\n     for (var k: u32 = 0u; k<TILE_SIZE && w+k < uniforms.K; k++) {\n       value += tileQ[TILE_SIZE * local_id.y + k] * tileK[TILE_SIZE * k + local_id.x];\n     }\n     workgroupBarrier();\n   }\n\n   // we need to transpose output from BNSH_v to BSND_v\n   let batchIdx = workgroup_id.z / uniforms.num_heads;\n   let currentBatchHeadNumber = workgroup_id.z % uniforms.num_heads;\n   let headOffset = (batchIdx * uniforms.M * uniforms.num_heads + currentBatchHeadNumber) * uniforms.N;\n   if (m < uniforms.M && n < uniforms.N) {\n     let outputIdx = batchIdx * uniforms.M *uniforms.v_hidden_size + m * uniforms.v_hidden_size\n       + currentBatchHeadNumber * uniforms.N + n;\n     output[outputIdx] = value;\n   }\n  }`};return e.compute({name:"AttentionScore",shaderCache:{inputDependencies:["type","type"]},getRunData:()=>({outputs:[{dims:n,dataType:t.dataType,gpuDataType:0}],dispatchGroup:l,programUniforms:c}),getShaderSource:a},{inputs:[t,r],outputs:[0]})[0]},En=(e,t,r,o,n,s,l,c,a,m,g)=>{let h=Ql(e,t,r,a,m,g);Xl(e,h,o,m)},Jl=(e,t)=>{let r=[t.batchSize,t.numHeads,t.sequenceLength,t.headSize],o=t.sequenceLength,n=t.inputHiddenSize,s=t.headSize,l=12,c={x:Math.ceil(t.headSize/l),y:Math.ceil(t.sequenceLength/l),z:t.batchSize*t.numHeads},a=[e.inputs[0],e.inputs[1],e.inputs[2]],m=[{type:12,data:o},{type:12,data:n},{type:12,data:s},{type:12,data:t.numHeads},{type:12,data:t.headSize},{type:12,data:t.hiddenSize},{type:12,data:t.hiddenSize+t.hiddenSize+t.vHiddenSize}],g=h=>{let v=j("output_q",a[0].dataType,r),_=j("output_k",a[0].dataType,r),b=j("output_v",a[0].dataType,r),S=U("input",a[0].dataType,a[0].dims),I=U("weight",a[1].dataType,a[1].dims),x=U("bias",a[2].dataType,a[2].dims),$=S.type.storage,E=[{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"head_size",type:"u32"},{name:"hidden_size",type:"u32"},{name:"ldb",type:"u32"}];return`\n  const TILE_SIZE = ${l}u;\n  var<workgroup> tileInput: array<${$}, ${l*l}>;\n  var<workgroup> tileWeightQ: array<${$}, ${l*l}>;\n  var<workgroup> tileWeightK: array<${$}, ${l*l}>;\n  var<workgroup> tileWeightV: array<${$}, ${l*l}>;\n  ${h.registerUniforms(E).declareVariables(S,I,x,v,_,b)}\n  ${h.mainStart([l,l,1])}\n    let batchIndex = workgroup_id.z / uniforms.num_heads;\n    let headNumber = workgroup_id.z % uniforms.num_heads;\n    let m = workgroup_id.y * TILE_SIZE + local_id.y;\n    let n = workgroup_id.x * TILE_SIZE + local_id.x;\n\n    let inputOffset = batchIndex * (uniforms.M * uniforms.K) + m * uniforms.K;\n    let biasOffsetQ = headNumber * uniforms.head_size;\n    let biasOffsetK = uniforms.hidden_size + biasOffsetQ;\n    let biasOffsetV = uniforms.hidden_size + biasOffsetK;\n\n    var valueQ = ${$}(0);\n    var valueK = ${$}(0);\n    var valueV = ${$}(0);\n    for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {\n      if (m < uniforms.M && w + local_id.x < uniforms.K) {\n        tileInput[TILE_SIZE * local_id.y + local_id.x] = input[inputOffset + w + local_id.x];\n      }\n      if (n < uniforms.N && w + local_id.y < uniforms.K) {\n        let offset = n + (w + local_id.y) * uniforms.ldb;\n        tileWeightQ[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetQ + offset];\n        tileWeightK[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetK + offset];\n        tileWeightV[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetV + offset];\n      }\n      workgroupBarrier();\n      for (var k: u32 = 0u; k<TILE_SIZE && w+k < uniforms.K; k++) {\n        let inputTileOffset = TILE_SIZE * local_id.y + k;\n        let weightTileOffset = TILE_SIZE * k + local_id.x;\n        valueQ += tileInput[inputTileOffset] * tileWeightQ[weightTileOffset];\n        valueK += tileInput[inputTileOffset] * tileWeightK[weightTileOffset];\n        valueV += tileInput[inputTileOffset] * tileWeightV[weightTileOffset];\n      }\n\n      workgroupBarrier();\n    }\n\n    let headOffset = (m * uniforms.N + n) % uniforms.head_size;\n    valueQ += bias[headOffset + biasOffsetQ];\n    valueK += bias[headOffset + biasOffsetK];\n    valueV += bias[headOffset + biasOffsetV];\n\n    let offset = workgroup_id.z * uniforms.M * uniforms.N;\n    if (m < uniforms.M && n < uniforms.N) {\n      let outputIdx = offset + m * uniforms.N + n;\n      output_q[outputIdx] = valueQ;\n      output_k[outputIdx] = valueK;\n      output_v[outputIdx] = valueV;\n    }\n  }`};return e.compute({name:"AttentionPrepare",shaderCache:{inputDependencies:["type","type","type"]},getRunData:()=>({outputs:[{dims:r,dataType:e.inputs[0].dataType,gpuDataType:0},{dims:r,dataType:e.inputs[0].dataType,gpuDataType:0},{dims:r,dataType:e.inputs[0].dataType,gpuDataType:0}],dispatchGroup:c,programUniforms:m}),getShaderSource:g},{inputs:a,outputs:[-1,-1,-1]})},ni=(e,t)=>{let r=Yl(e.inputs,t),[o,n,s]=Jl(e,r);return En(e,o,n,s,e.inputs[4],void 0,void 0,void 0,e.inputs[5],r,t)}});var ed,td,rd,oi,ai=Y(()=>{"use strict";sr();he();xe();Qe();ve();ed=(e,t)=>{if(!e||e.length!==5)throw new Error("BatchNormalization requires 5 inputs");let r=(o,n,s)=>{let l=n.length;if(l!==o.length)throw new Error(`${s}: num dimensions != ${l}`);n.forEach((c,a)=>{if(c!==o[a])throw new Error(`${s}: dim[${a}] do not match`)})};if(e[0].dims.length>1){let o=t.format==="NHWC"?t.spatial?e[0].dims.slice(-1):e[0].dims.slice(-1).concat(e[0].dims.slice(1,e[0].dims.length-1)):e[0].dims.slice(1,t.spatial?2:void 0);r(e[1].dims,o,"Invalid input scale"),r(e[2].dims,o,"Invalid input B"),r(e[3].dims,o,"Invalid input mean"),r(e[4].dims,o,"Invalid input var")}else r(e[1].dims,[1],"Invalid input scale"),r(e[2].dims,[1],"Invalid input B"),r(e[3].dims,[1],"Invalid input mean"),r(e[4].dims,[1],"Invalid input var")},td=(e,t)=>{let{epsilon:r,spatial:o,format:n}=t,s=e[0].dims,l=o?je(s[s.length-1]):1,c=n==="NHWC"&&s.length>1?l:1,a=z.size(s)/l,m=o,g=m?s.length:s,h=U("x",e[0].dataType,e[0].dims,l),v=U("scale",e[1].dataType,e[1].dims,c),_=U("bias",e[2].dataType,e[2].dims,c),b=U("inputMean",e[3].dataType,e[3].dims,c),S=U("inputVar",e[4].dataType,e[4].dims,c),I=j("y",e[0].dataType,g,l),x=()=>{let E="";if(o)E=`let cOffset = ${s.length===1?"0u":n==="NHWC"?`outputIndices[${s.length-1}] / ${l}`:"outputIndices[1]"};`;else if(n==="NCHW")E=`\n            ${I.indicesSet("outputIndices","0","0")}\n            let cOffset = ${I.indicesToOffset("outputIndices")};`;else{E=`var cIndices = ${v.type.indices}(0);\n                       cIndices[0] = outputIndices[${s.length-1}];`;for(let T=1;T<v.rank;T++)E+=`cIndices[${T}] = outputIndices[${T}];`;E+=`let cOffset = ${v.indicesToOffset("cIndices")};`}return E},$=E=>`\n  const epsilon = ${r};\n  ${E.registerUniform("outputSize","u32").declareVariables(h,v,_,b,S,I)}\n  ${E.mainStart()}\n  ${E.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n    var outputIndices = ${I.offsetToIndices(`global_idx * ${l}`)};\n    ${x()}\n    let scale = ${v.getByOffset("cOffset")};\n    let bias = ${_.getByOffset("cOffset")};\n    let inputMean = ${b.getByOffset("cOffset")};\n    let inputVar = ${S.getByOffset("cOffset")};\n    let x = ${h.getByOffset("global_idx")};\n    let value = (x - inputMean) * inverseSqrt(inputVar + epsilon) * scale + bias;\n    ${I.setByOffset("global_idx","value")}\n  }`;return{name:"BatchNormalization",shaderCache:{hint:`${t.epsilon}_${t.format}_${o}_${l}`,inputDependencies:m?["rank","type","type","type","type"]:void 0},getShaderSource:$,getRunData:()=>({outputs:[{dims:e[0].dims,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(a/64)},programUniforms:m?[{type:12,data:a},...Z(s)]:[{type:12,data:a}]})}},rd=e=>Se(e),oi=(e,t)=>{let{inputs:r,outputCount:o}=e,n=rd({...t,outputCount:o});if(ir.webgpu.validateInputContent&&ed(r,n),t.trainingMode)throw new Error("BatchNormalization trainingMode is not supported yet.");e.compute(td(r,n))}});var nd,od,ii,si=Y(()=>{"use strict";xe();ve();nd=e=>{if(e[0].dims.length!==3)throw new Error("input should have 3 dimensions");if(![320,640,1280].includes(e[0].dims[2]))throw new Error("number of channels should be 320, 640 or 1280");if(e[1].dims.length!==1)throw new Error("bias is expected to have 1 dimensions");if(e[0].dims[2]!==e[1].dims[0])throw new Error("last dimension of input and bias are not the same")},od=e=>{let t=e[0].dims,r=e[0].dims[2],o=z.size(t)/4,n=e[0].dataType,s=U("input",n,t,4),l=U("bias",n,[r],4),c=U("residual",n,t,4),a=j("output",n,t,4);return{name:"BiasAdd",getRunData:()=>({outputs:[{dims:t,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(o/64)}}),getShaderSource:g=>`\n  const channels = ${r}u / 4;\n  ${g.declareVariables(s,l,c,a)}\n\n  ${g.mainStart()}\n    ${g.guardAgainstOutOfBoundsWorkgroupSizes(o)}\n    let value = ${s.getByOffset("global_idx")}\n      + ${l.getByOffset("global_idx % channels")} + ${c.getByOffset("global_idx")};\n    ${a.setByOffset("global_idx","value")}\n  }`}},ii=e=>{nd(e.inputs),e.compute(od(e.inputs))}});var ad,Pe,ui,li,di,ci,pi,mi,fi,hi,gi,id,yi,bi,wi,vi,Pn,$i,On,_i,Si,xi,Ci,Ii,Ai,Ti,Ei,Pi,Oi,ki,Ri,Bi,Di,Mi,zi,Ui,Vi,go,yo,Wi,Ni,Gi,kn=Y(()=>{"use strict";he();xe();Qe();ve();ad=(e,t,r,o,n,s)=>{let l=Math.ceil(t/4),c="";typeof n=="string"?c=`${n}(a)`:c=n("a");let a=U("inputData",r,[l],4),m=j("outputData",o,[l],4);return`\n      ${e.registerUniform("vec_size","u32").declareVariables(a,m)}\n\n  ${s??""}\n\n  ${e.mainStart()}\n    ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}\n\n    let a = ${a.getByOffset("global_idx")};\n    ${m.setByOffset("global_idx",c)}\n  }`},Pe=(e,t,r,o,n,s=e.dataType)=>({name:t,shaderCache:{hint:n,inputDependencies:["type"]},getShaderSource:l=>ad(l,z.size(e.dims),e.dataType,s,r,o),getRunData:l=>({outputs:[{dims:e.dims,dataType:s}],dispatchGroup:{x:Math.ceil(z.size(l[0].dims)/64/4)},programUniforms:[{type:12,data:Math.ceil(z.size(e.dims)/4)}]})}),ui=e=>{e.compute(Pe(e.inputs[0],"Abs","abs"))},li=e=>{e.compute(Pe(e.inputs[0],"Acos","acos"))},di=e=>{e.compute(Pe(e.inputs[0],"Acosh","acosh"))},ci=e=>{e.compute(Pe(e.inputs[0],"Asin","asin"))},pi=e=>{e.compute(Pe(e.inputs[0],"Asinh","asinh"))},mi=e=>{e.compute(Pe(e.inputs[0],"Atan","atan"))},fi=e=>{e.compute(Pe(e.inputs[0],"Atanh","atanh"))},hi=e=>Se(e),gi=(e,t)=>{let r;switch(t.to){case 10:r="vec4<f16>";break;case 1:r="vec4<f32>";break;case 12:r="vec4<u32>";break;case 6:r="vec4<i32>";break;case 9:r="vec4<bool>";break;default:throw new RangeError(`not supported type (specified in attribute \'to\' from \'Cast\' operator): ${t.to}`)}e.compute(Pe(e.inputs[0],"Cast",r,void 0,t.cacheKey,t.to))},id=e=>{let t=e.length>=2&&e[1].data!==0?e[1].getFloat32Array()[0]:Sn,r=e.length>=3&&e[2].data!==0?e[2].getFloat32Array()[0]:xn;return Se({min:t,max:r})},yi=(e,t)=>{let r=e.inputs.length===1?t:id(e.inputs),o=rt(e.inputs[0].dataType);e.compute(Pe(e.inputs[0],"Clip",n=>`clamp(${n}, clip_min_, clip_max_)`,`\n    const clip_min_: vec4<${o}> = vec4(${o}(${r.min}));\n    const clip_max_: vec4<${o}> = vec4(${o}(${r.max}));\n`,r.cacheKey),{inputs:[0]})},bi=e=>{e.compute(Pe(e.inputs[0],"Ceil","ceil"))},wi=e=>{e.compute(Pe(e.inputs[0],"Cos","cos"))},vi=e=>{e.compute(Pe(e.inputs[0],"Cosh","cosh"))},Pn=e=>Se(e),$i=(e,t)=>{let r=rt(e.inputs[0].dataType);e.compute(Pe(e.inputs[0],"Elu",o=>`elu_vf32(${o})`,`\n  const elu_alpha_ = ${r}(${t.alpha});\n\n  fn elu_f32(a: ${r}) -> ${r} {\n  return select((exp(a) - 1.0) * elu_alpha_, a, a >= 0.0);\n  }\n\n  fn elu_vf32(v: vec4<${r}>) -> vec4<${r}> {\n  return vec4(elu_f32(v.x), elu_f32(v.y), elu_f32(v.z), elu_f32(v.w));\n  }`,t.cacheKey))},On=(e="f32")=>`\nconst r0: ${e} = 0.3275911;\nconst r1: ${e} = 0.254829592;\nconst r2: ${e} = -0.284496736;\nconst r3: ${e} = 1.421413741;\nconst r4: ${e} = -1.453152027;\nconst r5: ${e} = 1.061405429;\n\nfn erf_vf32(v: vec4<${e}>) -> vec4<${e}> {\n  let absv = abs(v);\n  let x = 1.0 / (1.0 + r0 * absv);\n  return sign(v) * (1.0 - ((((r5 * x + r4) * x + r3) * x + r2) * x + r1) * x * exp(-absv * absv));\n}`,_i=e=>{let t=rt(e.inputs[0].dataType);e.compute(Pe(e.inputs[0],"Erf",r=>`erf_vf32(${r})`,On(t)))},Si=e=>{e.compute(Pe(e.inputs[0],"Exp","exp"))},xi=e=>{e.compute(Pe(e.inputs[0],"Floor","floor"))},Ci=e=>{let t=rt(e.inputs[0].dataType);e.compute(Pe(e.inputs[0],"Gelu",r=>`0.5 * ${r} * (1.0 + erf_vf32(${r} * 0.7071067811865475))`,On(t)))},Ii=(e,t)=>{let r=rt(e.inputs[0].dataType);e.compute(Pe(e.inputs[0],"LeakyRelu",o=>`select(leaky_relu_alpha_ * ${o}, ${o}, ${o} >= vec4<${r}>(0.0))`,`const leaky_relu_alpha_ = ${r}(${t.alpha});`,t.cacheKey))},Ai=e=>{e.compute(Pe(e.inputs[0],"Not",t=>`!${t}`))},Ti=e=>{e.compute(Pe(e.inputs[0],"Neg",t=>`-${t}`))},Ei=e=>{e.compute(Pe(e.inputs[0],"Reciprocal",t=>`1.0/${t}`))},Pi=e=>{let t=rt(e.inputs[0].dataType);e.compute(Pe(e.inputs[0],"Relu",r=>`select(vec4<${t}>(0.0), ${r}, ${r} > vec4<${t}>(0.0))`))},Oi=e=>{e.compute(Pe(e.inputs[0],"Sigmoid",t=>`(1.0 / (1.0 + exp(-${t})))`))},ki=e=>Se(e),Ri=(e,t)=>{let r=rt(e.inputs[0].dataType);e.compute(Pe(e.inputs[0],"HardSigmoid",o=>`max(vec4<${r}>(0.0), min(vec4<${r}>(1.0), ${t.alpha} * ${o} + vec4<${r}>(${t.beta})))`,void 0,t.cacheKey))},Bi=e=>{e.compute(Pe(e.inputs[0],"Sin","sin"))},Di=e=>{e.compute(Pe(e.inputs[0],"Sinh","sinh"))},Mi=e=>{e.compute(Pe(e.inputs[0],"Sqrt","sqrt"))},zi=e=>{e.compute(Pe(e.inputs[0],"Tan","tan"))},Ui=e=>`sign(${e}) * (1 - exp(-2 * abs(${e}))) / (1 + exp(-2 * abs(${e})))`,Vi=e=>{e.compute(Pe(e.inputs[0],"Tanh",Ui))},go=(e="f32")=>`\nconst fast_gelu_a: ${e} = 0.5;\nconst fast_gelu_b: ${e} = 0.7978845608028654;\nconst fast_gelu_c: ${e} = 0.035677408136300125;\n\nfn tanh_v(v: vec4<${e}>) -> vec4<${e}> {\n  return ${Ui("v")};\n}\n`,yo=e=>`(fast_gelu_a + fast_gelu_a * tanh_v(${e} * (fast_gelu_c * ${e} * ${e} + fast_gelu_b))) * ${e}`,Wi=e=>{let t=rt(e.inputs[0].dataType);e.compute(Pe(e.inputs[0],"FastGelu",yo,go(t),void 0,e.inputs[0].dataType))},Ni=(e,t)=>{let r=rt(e.inputs[0].dataType);return e.compute(Pe(e.inputs[0],"ThresholdedRelu",o=>`select(vec4<${r}>(0.0), ${o}, ${o} > thresholded_relu_alpha_)`,`const thresholded_relu_alpha_ = vec4<${r}>(${t.alpha});`,t.cacheKey)),0},Gi=e=>{e.compute(Pe(e.inputs[0],"Log","log"))}});var sd,ud,Li,Fi=Y(()=>{"use strict";xe();ve();kn();sd=e=>{if(e[0].dims.length!==3)throw new Error("input should have 3 dimensions");if(![2560,5120,10240].includes(e[0].dims[2]))throw new Error("hidden state should be 2560, 5120 or 10240");if(e[1].dims.length!==1)throw new Error("bias is expected to have 1 dimensions");if(e[0].dims[2]!==e[1].dims[0])throw new Error("last dimension of input and bias are not the same")},ud=e=>{let t=e[0].dims.slice();t[2]=t[2]/2;let r=U("input",e[0].dataType,e[0].dims,4),o=U("bias",e[0].dataType,[e[0].dims[2]],4),n=j("output",e[0].dataType,t,4),s=z.size(t)/4,l=Ue(e[0].dataType);return{name:"BiasSplitGelu",getRunData:()=>({outputs:[{dims:t,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(s/64)}}),getShaderSource:a=>`\n  const M_SQRT2 = sqrt(2.0);\n  const halfChannels = ${e[0].dims[2]/4/2}u;\n\n  ${a.declareVariables(r,o,n)}\n\n  ${On(l)}\n\n  ${a.mainStart()}\n    ${a.guardAgainstOutOfBoundsWorkgroupSizes(s)}\n    let biasIdx = global_idx % halfChannels;\n    let batchIndex = global_idx / halfChannels;\n    let inputOffset = biasIdx + batchIndex * halfChannels * 2;\n    let valueLeft = input[inputOffset] + bias[biasIdx];\n    let valueRight = input[inputOffset + halfChannels] + bias[biasIdx + halfChannels];\n    let geluRight = valueRight * 0.5 * (erf_vf32(valueRight / M_SQRT2) + 1);\n\n    ${n.setByOffset("global_idx","valueLeft * geluRight")}\n  }`}},Li=e=>{sd(e.inputs),e.compute(ud(e.inputs))}});var ld,dd,_t,ji,qi,Ki,Yi,Zi,Qi,Xi,Ji,es,ts,rs=Y(()=>{"use strict";he();xe();ve();ld=(e,t,r,o,n,s,l,c,a,m,g,h)=>{let v,_;typeof c=="string"?v=_=($,E)=>`${c}((${$}),(${E}))`:typeof c=="function"?v=_=c:(v=c.scalar,_=c.vector);let b=j("outputData",g,o.length,4),S=U("aData",a,t.length,4),I=U("bData",m,r.length,4),x;if(n)if(s){let $=z.size(t)===1,E=z.size(r)===1,T=t.length>0&&t[t.length-1]%4===0,B=r.length>0&&r[r.length-1]%4===0;$||E?x=b.setByOffset("global_idx",_($?`${S.type.value}(${S.getByOffset("0")}.x)`:S.getByOffset("global_idx"),E?`${I.type.value}(${I.getByOffset("0")}.x)`:I.getByOffset("global_idx"))):x=`\n            let outputIndices = ${b.offsetToIndices("global_idx * 4u")};\n            let offsetA = ${S.broadcastedIndicesToOffset("outputIndices",b)};\n            let offsetB = ${I.broadcastedIndicesToOffset("outputIndices",b)};\n            ${b.setByOffset("global_idx",_(l||T?S.getByOffset("offsetA / 4u"):`${S.type.value}(${S.getByOffset("offsetA / 4u")}[offsetA % 4u])`,l||B?I.getByOffset("offsetB / 4u"):`${I.type.value}(${I.getByOffset("offsetB / 4u")}[offsetB % 4u])`))}\n          `}else x=b.setByOffset("global_idx",_(S.getByOffset("global_idx"),I.getByOffset("global_idx")));else{if(!s)throw new Error("no necessary to use scalar implementation for element-wise binary op implementation.");let $=(E,T,B="")=>{let M=`aData[indexA${T}][componentA${T}]`,W=`bData[indexB${T}][componentB${T}]`;return`\n            let outputIndices${T} = ${b.offsetToIndices(`global_idx * 4u + ${T}u`)};\n            let offsetA${T} = ${S.broadcastedIndicesToOffset(`outputIndices${T}`,b)};\n            let offsetB${T} = ${I.broadcastedIndicesToOffset(`outputIndices${T}`,b)};\n            let indexA${T} = offsetA${T} / 4u;\n            let indexB${T} = offsetB${T} / 4u;\n            let componentA${T} = offsetA${T} % 4u;\n            let componentB${T} = offsetB${T} % 4u;\n            ${E}[${T}] = ${B}(${v(M,W)});\n          `};g===9?x=`\n            var data = vec4<u32>(0);\n            ${$("data",0,"u32")}\n            ${$("data",1,"u32")}\n            ${$("data",2,"u32")}\n            ${$("data",3,"u32")}\n            outputData[global_idx] = dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(data));`:x=`\n            ${$("outputData[global_idx]",0)}\n            ${$("outputData[global_idx]",1)}\n            ${$("outputData[global_idx]",2)}\n            ${$("outputData[global_idx]",3)}\n          `}return`\n        ${e.registerUniform("vec_size","u32").declareVariables(S,I,b)}\n\n        ${h??""}\n\n        ${e.mainStart()}\n        ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}\n        ${x}\n      }`},dd=(e,t,r,o,n,s,l=r.dataType)=>{let c=!z.areEqual(r.dims,o.dims),a=r.dims,m=z.size(r.dims),g=!1,h=!1,v=[c];if(c){let _=yt.calcShape(r.dims,o.dims,!1);if(!_)throw new Error("Can\'t perform binary op on the given tensors");a=_,m=z.size(a);let b=z.size(r.dims)===1,S=z.size(o.dims)===1,I=r.dims.length>0&&r.dims[r.dims.length-1]%4===0,x=o.dims.length>0&&o.dims[o.dims.length-1]%4===0;v.push(b),v.push(S),v.push(I),v.push(x);let $=1;for(let E=1;E<a.length;E++){let T=r.dims[r.dims.length-E]??1,B=o.dims[o.dims.length-E]??1;if(T===B)$*=T;else break}$%4===0?(h=!0,g=!0):(b||S||I||x)&&(g=!0)}else g=!0;return v.push(g),{name:e,shaderCache:{hint:t+v.map(_=>_.toString()).join("_"),inputDependencies:["rank","rank"]},getShaderSource:_=>ld(_,r.dims,o.dims,a,g,c,h,n,r.dataType,o.dataType,l,s),getRunData:()=>({outputs:[{dims:a,dataType:l}],dispatchGroup:{x:Math.ceil(m/64/4)},programUniforms:[{type:12,data:Math.ceil(z.size(a)/4)},...Z(r.dims,o.dims,a)]})}},_t=(e,t,r,o,n,s)=>{e.compute(dd(t,n??"",e.inputs[0],e.inputs[1],r,o,s))},ji=e=>{_t(e,"Add",(t,r)=>`${t}+${r}`)},qi=e=>{_t(e,"Div",(t,r)=>`${t}/${r}`)},Ki=e=>{_t(e,"Equal",{scalar:(t,r)=>`u32(${t}==${r})`,vector:(t,r)=>`vec4<u32>(${t}==${r})`},void 0,void 0,9)},Yi=e=>{_t(e,"Mul",(t,r)=>`${t}*${r}`)},Zi=e=>{let t=U("input",e.inputs[0].dataType,e.inputs[0].dims).type.value;_t(e,"Pow",{scalar:(o,n)=>`pow_custom(${o},${n})`,vector:(o,n)=>`pow_vector_custom(${o},${n})`},`\n    fn pow_custom(a : ${t}, b : ${t}) -> ${t} {\n      if (b == ${t}(0.0)) {\n        return ${t}(1.0);\n      } else if (a < ${t}(0.0) && f32(b) != floor(f32(b))) {\n        return ${t}(pow(f32(a), f32(b))); // NaN\n      }\n      return select(sign(a), ${t}(1.0), round(f32(abs(b) % ${t}(2.0))) != 1.0) * ${t}(${t==="i32"?"round":""}(pow(f32(abs(a)), f32(b))));\n    }\n    fn pow_vector_custom(a : vec4<${t}>, b : vec4<${t}>) -> vec4<${t}> {\n      // TODO: implement vectorized pow\n      return vec4<${t}>(pow_custom(a.x, b.x), pow_custom(a.y, b.y), pow_custom(a.z, b.z), pow_custom(a.w, b.w));\n    }\n      `)},Qi=e=>{_t(e,"Sub",(t,r)=>`${t}-${r}`)},Xi=e=>{_t(e,"Greater",{scalar:(t,r)=>`u32(${t}>${r})`,vector:(t,r)=>`vec4<u32>(${t}>${r})`},void 0,void 0,9)},Ji=e=>{_t(e,"Less",{scalar:(t,r)=>`u32(${t}<${r})`,vector:(t,r)=>`vec4<u32>(${t}<${r})`},void 0,void 0,9)},es=e=>{_t(e,"GreaterOrEqual",{scalar:(t,r)=>`u32(${t}>=${r})`,vector:(t,r)=>`vec4<u32>(${t}>=${r})`},void 0,void 0,9)},ts=e=>{_t(e,"LessOrEqual",{scalar:(t,r)=>`u32(${t}<=${r})`,vector:(t,r)=>`vec4<u32>(${t}<=${r})`},void 0,void 0,9)}});var pd,md,fd,hd,ns,os,as=Y(()=>{"use strict";he();xe();Qe();ve();pd=e=>{if(!e||e.length<1)throw new Error("too few inputs");let t=e[0].dataType,r=e[0].dims.length;for(let o of e){if(o.dataType!==t)throw new Error("input tensors should be one type");if(o.dims.length!==r)throw new Error("input tensors should have the same shape")}},md=(e,t)=>`\n  fn calculateInputIndex(index: u32) -> u32 {\n    let sizeInConcatAxis = array<u32, ${e}u>(${t});\n    for (var i: u32 = 0u; i < ${e}; i += 1u ) {\n      if (index < sizeInConcatAxis[i]) {\n        return i;\n      }\n    }\n    return ${e}u;\n  }`,fd=(e,t)=>{let r=e.length,o=[];for(let n=0;n<r;++n){let s=t.setByOffset("global_idx",e[n].getByIndices("indices"));r===1?o.push(s):n===0?o.push(`if (inputIndex == ${n}u) { ${s} }`):n===r-1?o.push(`else { ${s} }`):o.push(`else if (inputIndex == ${n}) { ${s} }`)}return o.join(`\n`)},hd=(e,t)=>{let r=0,o=0,n=new Array(e.length);for(let T=0;T<e.length;T++){let B=z.size(e[T].dims);n[T]=B,B>r&&(r=B,o=T)}let s=e[o].dims.slice();if(t>=s.length||t<-1*s.length)throw new Error("axis specified for concat doesn\'t match input dimensionality");let l=t<0?s.length+t:t,c=s.slice(0);for(let T=0;T<e.length;T++){if(T===o)continue;let B=e[T].dims.slice();for(let M=0;M<s.length;M++)if(M===l)c[l]+=B[M];else if(s[M]!==B[M])throw new Error("non concat dimensions must match")}let a=z.size(c),m=new Array(e.length),g=new Array(e.length),h=e[0].dataType,v=0,_=[],b=[],S=[{type:12,data:a}];for(let T=0;T<e.length;++T)v+=e[T].dims[l],m[T]=v,b.push(e[T].dims.length),g[T]=U(`input${T}`,h,b[T]),_.push("rank"),S.push({type:12,data:m[T]});for(let T=0;T<e.length;++T)S.push(...Z(e[T].dims));S.push(...Z(c));let I=j("output",h,c.length),x=I.indicesGet("indices",l),$=Array.from(Array(m.length).keys()).map(T=>`uniforms.sizeInConcatAxis${T}`).join(","),E=T=>`\n\n  ${(()=>{T.registerUniform("outputSize","u32");for(let B=0;B<e.length;B++)T.registerUniform(`sizeInConcatAxis${B}`,"u32");return T.declareVariables(...g,I)})()}\n\n  ${md(m.length,$)}\n\n  ${T.mainStart()}\n    ${T.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n\n    var indices = ${I.offsetToIndices("global_idx")};\n\n    let inputIndex = calculateInputIndex(${x});\n    if (inputIndex != 0u) {\n      let sizeInConcatAxis = array<u32, ${m.length}u>(${$});\n      ${x} -= sizeInConcatAxis[inputIndex - 1u];\n    }\n\n    ${fd(g,I)}\n  }`;return{name:"Concat",shaderCache:{hint:`${t}`,inputDependencies:_},getRunData:()=>({outputs:[{dims:c,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(a/64)},programUniforms:S}),getShaderSource:E}},ns=(e,t)=>{pd(e.inputs);for(let r=0;r<e.inputs.length;r++)z.size(e.inputs[r].dims)===0&&e.inputs.slice(r,1);e.compute(hd(e.inputs,t.axis))},os=e=>Se({axis:e.axis})});var St,xt,Ct,Rn,Ot=Y(()=>{"use strict";he();xe();St=(e,t,r="f32")=>{switch(e.activation){case"Relu":return`value = max(value, ${t}(0.0));`;case"Sigmoid":return`value = (${t}(1.0) / (${t}(1.0) + exp(-value)));`;case"Clip":return`value = clamp(value, ${t}(${r}(uniforms.clip_min)), ${t}(${r}(uniforms.clip_max)));`;case"HardSigmoid":return`value = max(${t}(0.0), min(${t}(1.0), ${r}(uniforms.alpha) * value + ${r}(uniforms.beta)));`;case"LeakyRelu":return`value = select(${r}(uniforms.alpha) * value, value, value >= ${t}(0.0));`;case"":return"";default:throw new Error(`Unsupported activation ${e.activation}`)}},xt=(e,t)=>{e.activation==="Clip"?t.push({type:1,data:e.clipMax},{type:1,data:e.clipMin}):e.activation==="HardSigmoid"?t.push({type:1,data:e.alpha},{type:1,data:e.beta}):e.activation==="LeakyRelu"&&t.push({type:1,data:e.alpha})},Ct=(e,t)=>{e.activation==="Clip"?t.push({name:"clip_max",type:"f32"},{name:"clip_min",type:"f32"}):e.activation==="HardSigmoid"?t.push({name:"alpha",type:"f32"},{name:"beta",type:"f32"}):e.activation==="LeakyRelu"&&t.push({name:"alpha",type:"f32"})},Rn=e=>{let t=e?.activation||"";if(t==="HardSigmoid"){let[r,o]=e?.activation_params||[.2,.5];return{activation:t,alpha:r,beta:o}}else if(t==="Clip"){let[r,o]=e?.activation_params||[Sn,xn];return{activation:t,clipMax:o,clipMin:r}}else if(t==="LeakyRelu"){let[r]=e?.activation_params||[.01];return{activation:t,alpha:r}}return{activation:t}}});var Ze,Bn,Dn=Y(()=>{"use strict";Ze=(e,t)=>{switch(e){case 1:return t;case 2:return`vec2<${t}>`;case 3:return`vec3<${t}>`;case 4:return`vec4<${t}>`;default:throw new Error(`${e}-component is not supported.`)}},Bn=e=>`\n      ${e?"value = value + getBiasByOutputCoords(coords);":""}\n      `});var Mn,bo=Y(()=>{"use strict";Mn=e=>`\nfn getIndexFromCoords4D(coords : vec4<i32>, shape : vec4<i32>) -> i32 {\n  return dot(coords, vec4<i32>(\n      shape.y * shape.z * shape.w, shape.z * shape.w, shape.w, 1));\n}\nfn getOutputIndexFromCoords(coords : vec4<i32>) -> i32 {\n  return dot(coords, vec4<i32>(\n    i32(${e}.x), i32(${e}.y), i32(${e}.z), 1));\n}\n`});var gd,yd,Mr,is,bd,zr,wd,zn,Ur=Y(()=>{"use strict";he();xe();ve();Ot();Dn();gd=(e,t)=>e?`\n        mm_Asub[inputRow][inputCol] = mm_readA(batch,\n          kStart + inputRow,\n          globalRowStart / innerElementSize + inputCol${t?", batchIndices":""});\n        `:`\n        mm_Asub[inputRow][inputCol] = mm_readA(batch,\n          globalRow + innerRow,\n          kStart / innerElementSize + inputCol${t?", batchIndices":""});\n        `,yd=(e,t)=>e?`\n        let ACached0 = mm_Asub[k * innerElementSize][localRow];\n        let ACached1 = mm_Asub[k * innerElementSize + 1][localRow];\n        let ACached2 = mm_Asub[k * innerElementSize + 2][localRow];\n        ${t===3?"":"let ACached3 = mm_Asub[k * innerElementSize + 3][localRow];"}\n        for (var i = 0; i < rowPerThread; i = i + 1) {\n          acc[i] = BCached0 * ACached0[i] + acc[i];\n          acc[i] = BCached1 * ACached1[i] + acc[i];\n          acc[i] = BCached2 * ACached2[i] + acc[i];\n          ${t===3?"":"acc[i] = BCached3 * ACached3[i] + acc[i];"}\n        }`:`\n        for (var i = 0; i < rowPerThread; i = i + 1) {\n          let ACached = mm_Asub[tileRow + i][k];\n          acc[i] = BCached0 * ACached.x + acc[i];\n          acc[i] = BCached1 * ACached.y + acc[i];\n          acc[i] = BCached2 * ACached.z + acc[i];\n          ${t===3?"":"acc[i] = BCached3 * ACached.w + acc[i];"}\n        }`,Mr=(e,t,r="f32",o,n=!1,s=32,l=!1,c=32)=>{let a=t[1]*e[1],m=t[0]*e[0],g=n?a:s,h=n?s:a,v=g/t[0],_=s/t[1];if(!((n&&v===4&&e[1]===4||!n&&(v===3||v===4))&&g%t[0]===0&&s%t[1]===0&&e[0]===4))throw new Error(`If transposeA ${n} is true, innerElementSize ${v} and workPerThread[1] ${e[1]} must be 4.\n      Otherwise, innerElementSize ${v} must be 3 or 4.\n  tileAWidth ${g} must be divisible by workgroupSize[0]${t[0]}. tileInner ${s} must be divisible by workgroupSize[1] ${t[1]}. colPerThread ${e[0]} must be 4.`);return`\nvar<workgroup> mm_Asub: array<array<vec${v}<${r}>, ${g/v}>, ${h}>;\nvar<workgroup> mm_Bsub: array<array<vec4<${r}>, ${m/e[0]}>, ${s}>;\n\nconst rowPerThread = ${e[1]};\nconst colPerThread = ${e[0]};\nconst innerElementSize = ${v};\nconst tileInner = ${s};\n\n@compute @workgroup_size(${t[0]}, ${t[1]}, ${t[2]})\nfn main(@builtin(local_invocation_id) localId : vec3<u32>,\n        @builtin(global_invocation_id) globalId : vec3<u32>,\n        @builtin(workgroup_id) workgroupId : vec3<u32>) {\n  let localRow = i32(localId.y);\n  let tileRow = localRow * rowPerThread;\n  let tileCol = i32(localId.x);\n\n  let globalRow =i32(globalId.y) * rowPerThread;\n  let globalCol = i32(globalId.x);\n  let batch = ${l?"0":"i32(globalId.z)"};\n  ${o?`let batchIndices = ${o.offsetToIndices("u32(batch)")};`:""}\n  let globalRowStart = i32(workgroupId.y) * ${a};\n\n  let num_tiles = ${l?`${Math.ceil(c/s)}`:"(uniforms.dim_inner - 1) / tileInner + 1"};\n  var kStart = ${l?`i32(globalId.z) * ${c}`:"0"};\n\n  var acc: array<vec4<${r}>, rowPerThread>;\n\n  // Loop over shared dimension.\n  let tileRowB = localRow * ${_};\n  for (var t = 0; t < num_tiles; t = t + 1) {\n      // Load one tile of A into local memory.\n      for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n          let inputRow = tileRow + innerRow;\n          let inputCol = tileCol;\n          ${gd(n,o)}\n      }\n\n      // Load one tile of B into local memory.\n      for (var innerRow = 0; innerRow < ${_}; innerRow = innerRow + 1) {\n          let inputRow = tileRowB + innerRow;\n          let inputCol = tileCol;\n          mm_Bsub[inputRow][inputCol] = mm_readB(batch, kStart + inputRow, globalCol${o?", batchIndices":""});\n      }\n      kStart = kStart + tileInner;\n      workgroupBarrier();\n\n      // Compute acc values for a single thread.\n      for (var k = 0; k < tileInner / innerElementSize; k = k + 1) {\n          let BCached0 = mm_Bsub[k * innerElementSize][tileCol];\n          let BCached1 = mm_Bsub[k * innerElementSize + 1][tileCol];\n          let BCached2 = mm_Bsub[k * innerElementSize + 2][tileCol];\n          ${v===3?"":"let BCached3 = mm_Bsub[k * innerElementSize + 3][tileCol];"}\n\n          ${yd(n,v)}\n      }\n\n      workgroupBarrier();\n  }\n\n  for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n      mm_write(batch, globalRow + innerRow, globalCol, acc[innerRow]);\n  }\n}`},is=(e,t)=>e?`\n            mm_Asub[inputRow][inputCol] = mm_readA(batch,\n              kStart + inputRow,\n              globalRowStart + inputCol${t?", batchIndices":""});\n            `:`\n            mm_Asub[inputRow][inputCol] = mm_readA(batch,\n              globalRowStart + inputRow,\n              kStart + inputCol${t?", batchIndices":""});\n            `,bd=e=>e?"let ACached = mm_Asub[k][tileRow + innerRow];":"let ACached = mm_Asub[tileRow + innerRow][k];",zr=(e,t,r="f32",o,n=!1,s=32,l=!1,c=32,a=!1)=>{let m=e[1]*t[1],g=e[0]*t[0],h=n?m:s,v=n?s:m;if(!(v%t[1]===0&&h%t[0]===0&&s%t[1]===0))throw new Error(`tileAHight ${v} must be divisible by workgroupSize[1]${t[1]}, tileAWidth ${h} must be divisible by workgroupSize[0]${t[0]}, tileInner ${s} must be divisible by workgroupSize[1]${t[1]}`);let _=v/t[1],b=h/t[0],S=s/t[1],I=a?`\n    let localRow = i32(localId.y);\n    let localCol = i32(localId.x);\n    let globalRowStart = i32(workgroupId.y) * ${m};\n    let globalColStart = i32(workgroupId.x) * ${g};\n\n    // Loop over shared dimension.\n    for (var t = 0; t < num_tiles; t = t + 1) {\n      // Load one tile of A into local memory.\n      for (var inputRow = localRow; inputRow < ${v}; inputRow = inputRow + ${t[1]}) {\n        for (var inputCol = localCol; inputCol < ${h}; inputCol = inputCol + ${t[0]}) {\n          ${is(n,o)}\n        }\n      }\n      // Load one tile of B into local memory.\n      for (var inputRow = localRow; inputRow < ${s}; inputRow = inputRow + ${t[1]}) {\n            for (var inputCol = localCol; inputCol < ${g}; inputCol = inputCol + ${t[0]}) {\n          mm_Bsub[inputRow][inputCol] = mm_readB(batch,\n            kStart + inputRow,\n            globalColStart + inputCol${o?", batchIndices":""});\n        }\n      }\n      kStart = kStart + tileInner;\n      workgroupBarrier();\n\n      // Compute acc values for a single thread.\n      var BCached : array<${r}, colPerThread>;\n      for (var k = 0; k < tileInner; k = k + 1) {\n        for (var inner = 0; inner < colPerThread; inner = inner + 1) {\n          BCached[inner] = mm_Bsub[k][localCol + inner * ${t[0]}];\n        }\n        for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n          let ACached = ${n?`mm_Asub[k][localRow + innerRow * ${t[1]}];`:`mm_Asub[localRow + innerRow * ${t[1]}][k];`}\n          for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n            acc[innerRow][innerCol] = acc[innerRow][innerCol] +\n                ACached * BCached[innerCol];\n          }\n        }\n      }\n      workgroupBarrier();\n    }\n    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n      let gRow = globalRowStart + localRow + innerRow * ${t[1]};\n      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n        let gCol = globalColStart + localCol + innerCol * ${t[0]};\n        mm_write(batch, gRow, gCol, acc[innerRow][innerCol]);\n      }\n    }\n    `:`\nlet tileRow = i32(localId.y) * rowPerThread;\nlet tileCol = i32(localId.x) * colPerThread;\n\nlet globalRow = i32(globalId.y) * rowPerThread;\nlet globalCol = i32(globalId.x) * colPerThread;\nlet globalRowStart = i32(workgroupId.y) * ${m};\n\nlet tileRowA = i32(localId.y) * ${_};\nlet tileColA = i32(localId.x) * ${b};\nlet tileRowB = i32(localId.y) * ${S};\n// Loop over shared dimension.\nfor (var t = 0; t < num_tiles; t = t + 1) {\n  // Load one tile of A into local memory.\n  for (var innerRow = 0; innerRow < ${_}; innerRow = innerRow + 1) {\n    for (var innerCol = 0; innerCol < ${b}; innerCol = innerCol + 1) {\n      let inputRow = tileRowA + innerRow;\n      let inputCol = tileColA + innerCol;\n      ${is(n,o)}\n    }\n  }\n\n  // Load one tile of B into local memory.\n  for (var innerRow = 0; innerRow < ${S}; innerRow = innerRow + 1) {\n    for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n      let inputRow = tileRowB + innerRow;\n      let inputCol = tileCol + innerCol;\n      mm_Bsub[inputRow][inputCol] = mm_readB(batch,\n        kStart + inputRow,\n        globalCol + innerCol${o?", batchIndices":""});\n    }\n  }\n  kStart = kStart + tileInner;\n  workgroupBarrier();\n\n  // Compute acc values for a single thread.\n  var BCached : array<${r}, colPerThread>;\n  for (var k = 0; k < tileInner; k = k + 1) {\n    for (var inner = 0; inner < colPerThread; inner = inner + 1) {\n      BCached[inner] = mm_Bsub[k][tileCol + inner];\n    }\n\n    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n      ${bd(n)}\n      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n        acc[innerRow][innerCol] = acc[innerRow][innerCol] + ACached * BCached[innerCol];\n      }\n    }\n  }\n\n  workgroupBarrier();\n}\n\nfor (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n  for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n    mm_write(batch, globalRow + innerRow, globalCol + innerCol,\n        acc[innerRow][innerCol]);\n  }\n}\n`;return`\n  var<workgroup> mm_Asub : array<array<${r}, ${h}>, ${v}>;\n  var<workgroup> mm_Bsub : array<array<${r}, ${g}>, ${s}>;\n  const rowPerThread = ${e[1]};\n  const colPerThread = ${e[0]};\n  const tileInner = ${s};\n\n@compute @workgroup_size(${t[0]}, ${t[1]}, ${t[2]})\nfn main(@builtin(local_invocation_id) localId : vec3<u32>,\n        @builtin(global_invocation_id) globalId : vec3<u32>,\n        @builtin(workgroup_id) workgroupId : vec3<u32>) {\n    let batch = ${l?"0":"i32(globalId.z)"};\n    ${o?`let batchIndices = ${o.offsetToIndices("u32(batch)")};`:""}\n    let num_tiles = ${l?`${Math.ceil(c/s)}`:"(uniforms.dim_inner - 1) / tileInner + 1"};\n    var kStart = ${l?`i32(globalId.z) * ${c}`:"0"};\n\n    var acc : array<array<${r}, colPerThread>, rowPerThread>;\n\n    // Without this initialization strange values show up in acc.\n    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n        acc[innerRow][innerCol] = 0.0;\n      }\n    }\n    ${I}\n  }\n`},wd=(e,t,r,o,n,s=!1)=>{let[l,c,a]=n,[m,g,h,v]=o,_=ur(l,a),b=ur(c,a),S=Ue(o[0].type.tensor),I=()=>{let E=g.rank,T=m.rank,B=`var aIndices: ${g.type.indices};`;for(let M=E-2-1,W=T-1;M>=0;M--,W--)B+=`\naIndices[${M}] = ${T>1?`batchIndices[${W}]`:"batchIndices"};`;return _.forEach(M=>{B+=`\naIndices[${M}] = 0;`}),B+=`\naIndices[${E-2}] = u32(row);\n                   aIndices[${E-1}] = u32(colIn);`,B},x=()=>{let E=h.rank,T=m.rank,B=`var bIndices: ${h.type.indices};`;for(let M=E-2-1,W=T-1;M>=0;M--,W--)B+=`\nbIndices[${M}] = ${T>1?`batchIndices[${W}]`:"batchIndices"};`;return b.forEach(M=>{B+=`\nbIndices[${M}] = 0;`}),B+=`\nbIndices[${E-2}] = u32(row);\n                   bIndices[${E-1}] = u32(colIn);`,B};return`\n    fn mm_readA(batch: i32, row: i32, colIn: i32, batchIndices: ${m.type.indices}) -> ${Ze(e,S)} {\n      var value = ${Ze(e,S)}(0.0);\n      let col = colIn * ${e};\n      if(row < uniforms.dim_a_outer && col < uniforms.dim_inner)\n      {\n        ${I()}\n        value = ${g.getByIndices("aIndices")};\n      }\n      return value;\n    }\n\n    fn mm_readB(batch: i32, row: i32, colIn: i32, batchIndices: ${m.type.indices}) -> ${Ze(e,S)} {\n      var value = ${Ze(e,S)}(0.0);\n      let col = colIn * ${e};\n      if(row < uniforms.dim_inner && col < uniforms.dim_b_outer)\n      {\n        ${x()}\n        value = ${h.getByIndices("bIndices")};\n      }\n      return value;\n    }\n\n    fn mm_write(batch: i32, row: i32, colIn: i32, valueIn: ${Ze(e,S)}) {\n      let col = colIn * ${e};\n      if (row < uniforms.dim_a_outer && col < uniforms.dim_b_outer) {\n        var value = valueIn;\n        let coords = vec3<i32>(batch, row, colIn);\n        ${t?`value = value + ${s?"bias[colIn]":`${Ze(e,S)}(bias[row])`};`:""}\n        ${r}\n        ${v.setByIndices("vec3<u32>(coords)","value")}\n      }\n    }\n    `},zn=(e,t,r,o,n=!1)=>{let s=e[0].dims,l=e[1].dims,c=s.slice(0,-2),a=l.slice(0,-2),m=o?o.slice(0,-2):r.slice(0,-2),g=z.size(m),h=s[s.length-2],v=s[s.length-1],_=l[l.length-1],b=v%4===0&&_%4===0,S=h<=8?[4,1,1]:[4,4,1],I=[8,8,1],x=[Math.ceil(_/I[0]/S[0]),Math.ceil(h/I[1]/S[1]),Math.ceil(g/I[2]/S[2])],$=b?4:1,E=[...c,h,v/$],T=E.length,B=[...a,v,_/$],M=B.length,W=[g,h,_/$],q=[{type:6,data:h},{type:6,data:_},{type:6,data:v}];xt(t,q),q.push(...Z(m,E,B));let ie=["rank","rank"],O=e.length>2;O&&(q.push(...Z(e[2].dims)),ie.push("rank")),q.push(...Z(W));let J=$e=>{let ke=m.length,Re=In("batchDims",e[0].dataType,ke,1),_e=Ue(e[0].dataType),N=U("a",e[0].dataType,T,$),Be=U("b",e[1].dataType,M,$),be=j("result",e[0].dataType,W.length,$),ge=[N,Be];if(O){let L=n?$:1;ge.push(U("bias",e[2].dataType,e[2].dims.length,L))}let pe=[{name:"dim_a_outer",type:"i32"},{name:"dim_b_outer",type:"i32"},{name:"dim_inner",type:"i32"}];Ct(t,pe);let Ce=Ue(be.type.tensor),Ae=St(t,be.type.value,Ce),Ne=wd($,O,Ae,[Re,N,Be,be],[c,a,m],n);return`\n  ${$e.registerUniforms(pe).registerInternalVariables(Re).declareVariables(...ge,be)}\n  ${Ne}\n  ${b?Mr(S,I,_e,Re):zr(S,I,_e,Re)}\n                   `};return{name:"MatMul",shaderCache:{hint:`${S};${t.activation};${b};${n}`,inputDependencies:ie},getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:x[0],y:x[1],z:x[2]},programUniforms:q}),getShaderSource:J}}});var vd,ss,us=Y(()=>{"use strict";he();Pt();ve();Ot();Dn();bo();Ur();vd=(e,t,r,o,n=!1,s,l=4,c=4,a=4,m="f32")=>{let g=O=>{switch(O){case 1:return"resData = x[xIndex];";case 3:return`resData = vec3<${m}>(x[xIndex], x[xIndex + 1], x[xIndex + 2]);`;case 4:return"resData = x[xIndex / 4];";default:throw new Error(`innerElementSize ${O} is not supported.`)}},h=O=>{switch(O){case 1:return"return w[row * i32(uniforms.w_shape[3]) + colIn];";case 4:return"return w[row * i32(uniforms.w_shape[3]) / 4 + colIn];";default:throw new Error(`innerElementSize ${O} is not supported.`)}},v=e?`\n    let coord = vec4<i32>(batch, xRow, xCol, xCh);\n    `:`\n    let coord = vec4<i32>(batch, xCh, xRow, xCol);\n    `,_=e?`\n    let coords = vec4<i32>(\n      batch,\n      row / outWidth,\n      row % outWidth,\n      col);\n    `:`\n    let coords = vec4<i32>(\n      batch,\n      row,\n      col / outWidth,\n      col % outWidth);\n    `,b=e?"i32(uniforms.x_shape[1])":"i32(uniforms.x_shape[2])",S=e?"i32(uniforms.x_shape[2])":"i32(uniforms.x_shape[3])",I=e?"row":"col",x=e?"col":"row",$=`\n    let inChannels = i32(uniforms.w_shape[2]);\n    let outWidth = ${e?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};\n    let outRow = ${I} / outWidth;\n    let outCol = ${I} % outWidth;\n\n    let WRow = ${x} / (i32(uniforms.w_shape[1]) * inChannels);\n    let WCol = ${x} / inChannels % i32(uniforms.w_shape[1]);\n    let xRow = outRow * uniforms.stride[0] + uniforms.dilation[0] * WRow - uniforms.pad[0];\n    let xCol = outCol * uniforms.stride[1] + uniforms.dilation[1] * WCol - uniforms.pad[1];\n    let xCh = ${x} % inChannels;\n    var resData = ${Ze(l,m)}(0.0);\n    // The bounds checking is always needed since we use it to pad zero for\n    // the \'same\' padding type.\n    if (xRow >= 0 && xRow < ${b} && xCol >= 0 && xCol < ${S}) {\n      ${v}\n      let xIndex = getIndexFromCoords4D(coord, vec4<i32>(uniforms.x_shape));\n      ${g(l)}\n    }\n    return resData;`,E=e?t&&o?`\n    let col = colIn * ${l};\n    ${$}`:`\n    let col = colIn * ${l};\n    if (row < uniforms.dim_a_outer && col < uniforms.dim_inner) {\n      ${$}\n    }\n    return ${Ze(l,m)}(0.0);`:o&&r?`\n    let col = colIn * ${l};\n    ${$}`:`\n    let col = colIn * ${l};\n    if (row < uniforms.dim_inner && col < uniforms.dim_b_outer) {\n      ${$}\n    }\n    return ${Ze(l,m)}(0.0);`,T=`${h(c)}`,B=Ze(a,m),M=e?Ze(l,m):Ze(c,m),W=e?Ze(c,m):Ze(l,m),q=St(s,B,m);return`\n    fn mm_readA(batch: i32, row : i32, colIn : i32) -> ${M} {\n      ${e?E:T}\n    }\n\n    fn mm_readB(batch: i32, row : i32, colIn : i32) -> ${W} {\n      ${e?T:E}\n    }\n\n    fn mm_write(batch: i32, row : i32, colIn : i32, valueIn : ${B}) {\n      let col = colIn * ${a};\n      if (row < uniforms.dim_a_outer && col < uniforms.dim_b_outer)\n      {\n      var value = valueIn;\n      let outWidth = ${e?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};\n      ${_}\n      ${Bn(n)}\n      ${q}\n      setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);\n      }\n    }`},ss=(e,t,r,o,n,s,l,c)=>{let a=t.format==="NHWC",m=a?e[0].dims[3]:e[0].dims[1],g=r[0],h=a?r[2]:r[3],v=a?r[1]:r[2],_=a?r[3]:r[1],b=a&&(m%4===0||m%3===0)&&_%4===0,S=a?_:h*v,I=a?h*v:_,x=[8,8,1],$=o<=8?[4,1,1]:[4,4,1],E=[Math.ceil(S/x[0]/$[0]),Math.ceil(I/x[1]/$[1]),Math.ceil(g/x[2]/$[2])];ze("verbose",()=>`[conv2d_mm_webgpu] dispatch = ${E}`);let T=b?a&&m%4!==0?3:4:1,B=x[1]*$[1],M=x[0]*$[0],W=Math.max(x[0]*T,x[1]),q=o%B===0,ie=n%M===0,O=s%W===0,J=b?[T,4,4]:[1,1,1],$e=[{type:6,data:o},{type:6,data:n},{type:6,data:s},{type:6,data:[t.pads[0],t.pads[1]]},{type:6,data:t.strides},{type:6,data:t.dilations}];xt(t,$e),$e.push(...Z(e[0].dims,e[1].dims));let ke=["rank","rank"];l&&($e.push(...Z(e[2].dims)),ke.push("rank")),$e.push(...Z(r));let Re=_e=>{let N=[{name:"dim_a_outer",type:"i32"},{name:"dim_b_outer",type:"i32"},{name:"dim_inner",type:"i32"},{name:"pad",type:"i32",length:2},{name:"stride",type:"i32",length:2},{name:"dilation",type:"i32",length:2}];Ct(t,N);let Be=b?4:1,be=Ue(e[0].dataType),ge=`\n      fn setOutputAtIndex(flatIndex : i32, value : ${b?`vec4<${be}>`:be}) {\n        result[flatIndex] = ${b?`vec4<${be}>`:be}(value);\n      }\n      fn setOutputAtCoords(d0 : i32, d1 : i32, d2 : i32, d3 : i32, value : ${b?`vec4<${be}>`:be}) {\n        let flatIndex = getOutputIndexFromCoords(vec4<i32>(d0, d1, d2, d3));\n        setOutputAtIndex(flatIndex ${b?"/ 4":""}, value);\n      }`,pe=U("x",e[0].dataType,e[0].dims.length,T===3?1:T),Ce=U("w",e[1].dataType,e[1].dims.length,Be),Ae=[pe,Ce],Ne=j("result",e[0].dataType,r.length,Be);if(l){let L=U("bias",e[2].dataType,e[2].dims.length,Be);Ae.push(L),ge+=`\n        fn getBiasByOutputCoords(coords : vec4<i32>) -> ${b?`vec4<${be}>`:be} {\n          return bias[coords.${a?"w":"y"}${b?"/ 4":""}];\n        }`}return`\n        ${Mn("uniforms.result_strides")}\n        //struct Uniforms { xShape : vec4<i32>, wShape : vec4<i32>, outShape : vec4<i32>,\n        //  outShapeStrides: vec3<i32>, filterDims : vec2<i32>, pad : vec2<i32>, stride : vec2<i32>,\n        //  dilation : vec2<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32 };\n        ${_e.registerUniforms(N).declareVariables(...Ae,Ne)}\n        ${ge}\n        ${vd(a,q,ie,O,l,t,J[0],J[1],J[2],be)}\n        ${b?Mr($,x,be,void 0,!a,W):zr($,x,be,void 0,!a,W,!1,void 0,c)}`};return{name:"Conv2DMatMul",shaderCache:{hint:`${t.cacheKey};${T};${b};${q};${ie};${O};${B};${M};${W}`,inputDependencies:ke},getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:E[0],y:E[1],z:E[2]},programUniforms:$e}),getShaderSource:Re}}});var wo,ls=Y(()=>{"use strict";he();xe();ve();$o();Ot();wo=(e,t,r)=>{let o=e.length>2,n=o?"value += b[output_channel];":"",s=e[0].dims,l=e[1].dims,c=l[0]/t.group,a=t.format==="NHWC",m=vo(s,l,t.dilations,t.pads,t.strides,a),g=z.size(m),h=[{type:12,data:g},{type:12,data:t.dilations},{type:12,data:[t.strides[0],t.strides[1]]},{type:12,data:[t.pads[0],t.pads[1]]},{type:12,data:c}];xt(t,h),h.push(...Z(s,l,m));let v=["rank","rank"];o&&(h.push(...Z(e[2].dims)),v.push("rank")),h.push(...Z(m));let _=b=>{let S=j("output",e[0].dataType,m.length),I=Ue(S.type.tensor),x=St(t,S.type.value,I),$=U("x",e[0].dataType,s.length),E=U("w",e[1].dataType,l.length),T=[$,E];o&&T.push(U("b",e[2].dataType,e[2].dims));let B=[{name:"output_size",type:"u32"},{name:"dilations",type:"u32",length:t.dilations.length},{name:"strides",type:"u32",length:2},{name:"pads",type:"u32",length:2},{name:"output_channels_per_group",type:"u32"}];return Ct(t,B),`\n  ${b.registerUniforms(B).declareVariables(...T,S)}\n\n  ${b.mainStart()}\n    ${b.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n\n    let outputIndices = ${S.offsetToIndices("global_idx")};\n    let batch: u32 = outputIndices[0];\n    let output_channel: u32 = outputIndices[${a?3:1}];\n    let xRCCorner: vec2<u32> = vec2<u32>(outputIndices[${a?1:2}], outputIndices[${a?2:3}]) * uniforms.strides - uniforms.pads;\n    let group_id: u32 = output_channel / uniforms.output_channels_per_group;\n\n    var value: ${S.type.value} = ${S.type.value}(0);\n    for (var wInChannel: u32 = 0u; wInChannel < uniforms.w_shape[1]; wInChannel++) {\n      let input_channel = group_id * uniforms.w_shape[1] + wInChannel;\n      for (var wHeight: u32 = 0u; wHeight < uniforms.w_shape[2]; wHeight++) {\n        let xHeight = xRCCorner.x + wHeight * uniforms.dilations[0];\n\n        if (xHeight < 0u || xHeight >= uniforms.x_shape[${a?1:2}]) {\n          continue;\n        }\n\n        for (var wWidth: u32 = 0u; wWidth < uniforms.w_shape[3]; wWidth++) {\n          let xWidth = xRCCorner.y + wWidth * uniforms.dilations[1];\n          if (xWidth < 0u || xWidth >= uniforms.x_shape[${a?2:3}]) {\n            continue;\n          }\n\n          let xVal = ${a?$.get("batch","xHeight","xWidth","input_channel"):$.get("batch","input_channel","xHeight","xWidth")};\n          let wVal = ${E.get("output_channel","wInChannel","wHeight","wWidth")};\n          value += xVal*wVal;\n        }\n      }\n    }\n    ${n}\n    ${x}\n    ${S.setByOffset("global_idx","value")}\n  }`};return{name:"GroupedConv",shaderCache:{hint:t.cacheKey,inputDependencies:v},getRunData:()=>({outputs:[{dims:r?r(m):m,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(g/64)},programUniforms:h}),getShaderSource:_}}});var _o,$d,ds,So=Y(()=>{"use strict";he();xe();Ur();ve();Ot();_o=(e,t,r,o,n=!1)=>{let s=e[0].dims,l=e[1].dims,c=s[s.length-2],a=l[l.length-1],m=s[s.length-1],g=je(a),h=je(m),v=je(c),_=z.size(r)/g/v,b=e.length>2,S=o?o.slice(0,-2):r.slice(0,-2),x=[z.size(S),c,a],$=[{type:12,data:_},{type:12,data:c},{type:12,data:a},{type:12,data:m}];xt(t,$),$.push(...Z(S,s,l)),b&&$.push(...Z(e[2].dims)),$.push(...Z(x));let E=T=>{let B=In("batch_dims",e[0].dataType,S.length),M=U("a",e[0].dataType,s.length,h),W=U("b",e[1].dataType,l.length,g),q=j("output",e[0].dataType,x.length,g),ie=Ue(q.type.tensor),O=St(t,q.type.value,ie),J=[M,W],$e="";if(b){let pe=n?g:1;J.push(U("bias",e[2].dataType,e[2].dims.length,pe)),$e=`${n?`value += bias[col / ${pe}];`:`value += ${q.type.value}(bias[row + i]);`}`}let ke=s.slice(0,-2),Re=l.slice(0,-2),_e=ur(ke,S),N=ur(Re,S),Be=[{name:"output_size",type:"u32"},{name:"M",type:"u32"},{name:"N",type:"u32"},{name:"K",type:"u32"}];Ct(t,Be);let be=(pe,Ce)=>{let Ae=pe.rank,Ne=pe.name;if(Ae===2)return`var ${Ne}_indices = ${pe.type.indices}(0u, 0u);`;let L=B.rank,re=`var ${Ne}_indices: ${pe.type.indices};`;for(let me=Ae-2-1,Xe=L-1;me>=0;me--,Xe--)re+=`\n${Ne}_indices[${me}] = ${L>1?`batch_indices[${Xe}]`:"batch_indices"};`;return Ce.forEach(me=>{re+=`\n${Ne}_indices[${me}] = 0;`}),re+=`${Ne}_indices[${Ae-2}] = 0u;\n                     ${Ne}_indices[${Ae-1}] = 0u;`,re},ge=()=>{let pe=`var a_data: ${M.type.value};`;for(let Ce=0;Ce<h;Ce++)pe+=`\n              let b_data${Ce} = b[(b_offset + (k + ${Ce}) * uniforms.N + col) / ${g}];`;for(let Ce=0;Ce<v;Ce++){pe+=`a_data = a[(a_offset + (row + ${Ce}) * uniforms.K + k) / ${h}];`;for(let Ae=0;Ae<h;Ae++)pe+=`\n            values[${Ce}] = fma(${W.type.value}(a_data${h===1?"":`[${Ae}]`}), b_data${Ae}, values[${Ce}]);\n`}return pe};return`\n  ${T.registerUniforms(Be).registerInternalVariables(B).declareVariables(...J,q)}\n  ${T.mainStart()}\n    ${T.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n    let col = (global_idx % (uniforms.N / ${g})) * ${g};\n    var index1 = global_idx / (uniforms.N / ${g});\n    let stride1 = uniforms.M / ${v};\n    let row = (index1 % stride1) * ${v};\n    let batch = index1 / stride1;\n\n    ${r.length===2?"":`let batch_indices = ${B.offsetToIndices("batch")};`}\n    ${be(M,_e)}\n    let a_offset = ${M.indicesToOffset("a_indices")};\n    ${be(W,N)}\n    let b_offset = ${W.indicesToOffset("b_indices")};\n    var values: array<${q.type.value}, ${v}>;\n    for (var k: u32 = 0u; k < uniforms.K; k = k + ${h}) {\n      ${ge()}\n    }\n    for (var i = 0u; i < ${v}u; i++) {\n      var value = values[i];\n      ${$e}\n      ${O}\n      let cur_indices = ${q.type.indices}(batch, row + i, col);\n      let offset = ${q.indicesToOffset("cur_indices")};\n      ${q.setByOffset(`offset / ${g}`,"value")};\n    }\n  }\n  `};return{name:"MatMulNaive",shaderCache:{hint:`${t.activation};${g};${h};${v};${n}`,inputDependencies:b?["rank","rank","rank"]:["rank","rank"]},getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(_/64)},programUniforms:$}),getShaderSource:E}},$d=e=>{if(!e||e.length!==2)throw new Error("MatMul requires 2 inputs.");if(e[0].dims[e[0].dims.length-1]!==e[1].dims[e[1].dims.length-2])throw new Error("shared dimension does not match.")},ds=e=>{$d(e.inputs);let t=yt.calcShape(e.inputs[0].dims,e.inputs[1].dims,!0);if(!t)throw new Error("Can\'t use matmul on the given tensors");let r=t[t.length-1],o=e.inputs[0].dims[e.inputs[0].dims.length-1];r<8&&o<8?e.compute(_o(e.inputs,{activation:""},t)):e.compute(zn(e.inputs,{activation:""},t))}});var vo,cs,_d,ps,xo,Sd,xd,Co,$o=Y(()=>{"use strict";xe();us();Ur();ls();Ot();So();lr();vo=(e,t,r,o,n,s)=>{let l=e[0],c=e.slice(s?1:2,s?3:4),a=c.length,m=t[0],h=t.slice(2).map((b,S)=>b+(b-1)*(r[S]-1)),_=c.map((b,S)=>b+o[S]+o[S+a]).map((b,S)=>Math.floor((b-h[S]+n[S])/n[S]));return _.splice(0,0,l),_.splice(s?3:1,0,m),_},cs=[2,3,1,0],_d=(e,t)=>{if(!e||e.length!==2&&e.length!==3)throw new Error("Conv requires 2 or 3 inputs");if(e[0].dims.length!==4&&e[0].dims.length!==3)throw new Error("currently only support conv 1D and 2D");if(e[0].dims.length!==e[1].dims.length)throw new Error("filter does not have same dimension as input");let r=e[0].dims[t.format==="NHWC"?e[0].dims.length-1:1],o=e[1].dims[1]*t.group;if(r!==o)throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");if(e.length===3&&(e[2].dims.length!==1||e[1].dims[0]!==e[2].dims[0]))throw new Error("invalid bias");let n=e[0].dims.length-2;if(t.dilations.length!==n)throw new Error(`dilations should be ${n}D`);if(t.strides.length!==n)throw new Error(`strides should be ${n}D`);if(t.pads.length!==n*2)throw new Error(`pads should be ${n*2}D`);if(t.kernelShape.length!==0&&t.kernelShape.length!==e[1].dims.length-2)throw new Error("invalid kernel shape")},ps=(e,t)=>{let r=e.kernelShape.slice();for(let s=2;s<t[1].dims.length;++s)r[s-2]===0&&(r[s-2]=t[1].dims[s]);let o=e.pads.slice();Ft.adjustPadsBasedOnAutoPad(t[0].dims,e.strides,e.dilations,r,o,e.format==="NHWC",e.autoPad);let n=Object.assign({},e);return Object.assign(n,{kernelShape:r,pads:o}),n},xo=e=>{let t=Rn(e),r=e.format,o=["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][e.auto_pad],n=e.dilations,s=e.group,l=e.kernel_shape,c=e.pads,a=e.strides,m=e.w_is_const();return{autoPad:o,format:r,dilations:n,group:s,kernelShape:l,pads:c,strides:a,wIsConst:m,...t,cacheKey:`${e.format};${t.activation};`}},Sd=(e,t,r)=>{let o=ps(r,t),n=r.format==="NHWC";if(r.group!==1){e.compute(wo(t,o));return}let s=t.length===3,l=t[0].dims[n?1:2],c=t[0].dims[n?2:3],a=t[0].dims[n?3:1],m=t[1].dims[2],g=t[1].dims[3],h=vo(t[0].dims,t[1].dims,r.dilations,o.pads,r.strides,n),v=h[n?1:2],_=h[n?2:3],b=h[n?3:1],S=n&&m===l&&g===c&&r.pads[0]===0&&r.pads[1]===0;if(S||m===1&&g===1&&r.dilations[0]===1&&r.dilations[1]===1&&r.strides[0]===1&&r.strides[1]===1&&r.pads[0]===0&&r.pads[1]===0){let M=h[0],W,q,ie,O=[];if(n){let ke=e.kernelCustomData.wT??e.compute(mt(t[1],cs),{inputs:[1],outputs:[r.wIsConst?-2:-1]})[0];if(r.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=ke),S){let Re=l*c*a;W=t[0].reshape([1,M,Re]),q=ke.reshape([1,Re,b]),ie=[1,M,b]}else W=t[0].reshape([M,l*c,a]),q=ke.reshape([1,a,b]),ie=[M,v*_,b];O.push(W),O.push(q)}else W=t[0].reshape([M,a,l*c]),q=t[1].reshape([1,b,a]),ie=[M,b,v*_],O.push(q),O.push(W);s&&O.push(t[2]);let J=ie[2],$e=O[0].dims[O[0].dims.length-1];J<8&&$e<8?e.compute(_o(O,o,h,ie,n),{inputs:O}):e.compute(zn(O,o,h,ie,n),{inputs:O});return}let I=!0,x=e.kernelCustomData.wT??e.compute(mt(t[1],cs),{inputs:[1],outputs:[r.wIsConst?-2:-1]})[0];r.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=x);let $=[t[0],x];s&&$.push(t[2]);let E=n?v*_:b,T=n?b:v*_,B=m*g*a;e.compute(ss($,o,h,E,T,B,s,I),{inputs:$})},xd=(e,t)=>{let r=t.format==="NHWC",o=[e.inputs[0].reshape(r?[e.inputs[0].dims[0],1,e.inputs[0].dims[1],e.inputs[0].dims[2]]:[e.inputs[0].dims[0],e.inputs[0].dims[1],1,e.inputs[0].dims[2]]),e.inputs[1].reshape([e.inputs[1].dims[0],e.inputs[1].dims[1],1,e.inputs[1].dims[2]])];e.inputs.length===3&&o.push(e.inputs[2]);let n=[0,t.pads[0],0,t.pads[1]],s=[1].concat(t.strides),l=[1].concat(t.dilations),c=[1].concat(t.kernelShape),a=ps({...t,pads:n,strides:s,dilations:l,kernelShape:c},o);e.compute(wo(o,a,m=>r?[m[0],m[2],m[3]]:[]))},Co=(e,t)=>{_d(e.inputs,t),e.inputs[0].dims.length===3?xd(e,t):Sd(e,e.inputs,t)}});var Cd,ms,fs=Y(()=>{"use strict";he();Pt();ve();Ot();Dn();bo();Ur();Cd=(e,t=!1,r,o=4)=>{let n=Ze(o,"f32"),s=x=>{switch(x){case 1:return"return w[getIndexFromCoords4D(coord, vec4<i32>(uniforms.w_shape))];";case 4:return`\n            let coord1 = vec4<i32>(coordX, coordY, col + 1, rowInner);\n            let coord2 = vec4<i32>(coordX, coordY, col + 2, rowInner);\n            let coord3 = vec4<i32>(coordX, coordY, col + 3, rowInner);\n            let v0 = w[getIndexFromCoords4D(coord, vec4<i32>(uniforms.w_shape))];\n            let v1 = w[getIndexFromCoords4D(coord1, vec4<i32>(uniforms.w_shape))];\n            let v2 = w[getIndexFromCoords4D(coord2, vec4<i32>(uniforms.w_shape))];\n            let v3 = w[getIndexFromCoords4D(coord3, vec4<i32>(uniforms.w_shape))];\n            return vec4<f32>(v0, v1, v2, v3);\n            `;default:throw new Error(`innerElementSize ${x} is not supported.`)}},l=e?`\n      let coord = vec4<i32>(batch, iXR, iXC, xCh);\n      `:`\n      let coord = vec4<i32>(batch, xCh, iXR, iXC);\n      `,c=e?`\n    let coords = vec4<i32>(\n      batch,\n      row / outWidth,\n      row % outWidth,\n      col);\n    `:`\n    let coords = vec4<i32>(\n      batch,\n      row,\n      col / outWidth,\n      col % outWidth);\n    `,a=e?"i32(uniforms.x_shape[1])":"i32(uniforms.x_shape[2])",m=e?"i32(uniforms.x_shape[2])":"i32(uniforms.x_shape[3])",g=e?"row":"col",h=e?"col":"row",v=`\n      let inChannels = ${e?"i32(uniforms.x_shape[3])":"i32(uniforms.x_shape[1])"};\n      let outWidth = ${e?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};\n      let outRow = ${g} / outWidth;\n      let outCol = ${g} % outWidth;\n\n      let WRow = ${h} / (uniforms.filter_dims[1] * inChannels);\n      let WCol = ${h} / inChannels % uniforms.filter_dims[1];\n      let xR = f32(outRow - uniforms.pads[0] + uniforms.dilations[0] * WRow) / f32(uniforms.strides[0]);\n      let xC = f32(outCol - uniforms.pads[1] + uniforms.dilations[1] * WCol) / f32(uniforms.strides[1]);\n      if (xR < 0.0 || xR >= f32(${a}) || fract(xR) > 0.0) {\n        return ${n}(0.0);\n      }\n      if (xC < 0.0 || xC >= f32(${m}) || fract(xC) > 0.0) {\n        return ${n}(0.0);\n      }\n      let iXR = i32(xR);\n      let iXC = i32(xC);\n      let xCh = ${h} % inChannels;\n      ${l}\n      return x[getIndexFromCoords4D(coord, vec4<i32>(uniforms.x_shape))/${o}];`,_=e?`\n      let col = colIn * ${o};\n      if (row < uniforms.dim_a_outer && col < uniforms.dim_inner) {\n        ${v}\n      }\n      return ${n}(0.0);`:`\n      let col = colIn * ${o};\n      if (row < uniforms.dim_inner && col < uniforms.dim_b_outer) {\n        ${v}\n      }\n      return ${n}(0.0);`,b=`\n      let col = colIn * ${o};\n      let inChannels = ${e?"i32(uniforms.x_shape[3])":"i32(uniforms.x_shape[1])"};\n      let coordX = uniforms.filter_dims[0] - 1 - row / (uniforms.filter_dims[1] * inChannels);\n      let coordY = uniforms.filter_dims[1] - 1 - (row / inChannels) % uniforms.filter_dims[1];\n      if (${e?"row < uniforms.dim_inner && col < uniforms.dim_b_outer":"row < uniforms.dim_inner && col < uniforms.dim_a_outer"}  && coordX >= 0 && coordY >= 0) {\n        let rowInner = row % inChannels;\n        let coord = vec4<i32>(coordX, coordY, col, rowInner);\n        ${s(o)}\n      }\n      return ${n}(0.0);\n      `,S=St(r,n);return`\n  fn mm_readA(batch: i32, row : i32, colIn : i32) -> ${n} {\n    ${e?_:b}\n  }\n\n  fn mm_readB(batch: i32, row : i32, colIn : i32) -> ${n} {\n    ${e?b:_}\n  }\n\n  fn mm_write(batch: i32, row : i32, colIn : i32, valueInput : ${n}) {\n    let col = colIn * ${o};\n    if (row < uniforms.dim_a_outer && col < uniforms.dim_b_outer) {\n      var value = valueInput;\n      let outWidth = ${e?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};\n      ${c}\n      ${Bn(t)}\n      ${S}\n      result[getIndexFromCoords4D(coords, vec4<i32>(uniforms.result_shape))/${o}] = value;\n    }\n  }`},ms=(e,t,r,o,n,s,l,c)=>{let a=t.format==="NHWC",m=a?e[0].dims[3]:e[0].dims[1],g=r[0],h=a?r[2]:r[3],v=a?r[1]:r[2],_=a?r[3]:r[1],b=a?m%4===0&&_%4===0:h%4===0&&_%4===0,S=a?_:h*v,I=a?h*v:_,x=b?[8,8,1]:[S<=4||I<=4?4:16,S>4&&I<=4?4:16,1],$=b?[4,4,1]:[S<=4?1:4,S>4&&I<=4?1:4,1],E=[Math.ceil(S/x[0]/$[0]),Math.ceil(I/x[1]/$[1]),Math.ceil(g/x[2]/$[2])];ze("verbose",()=>`[conv_backprop_mm_webgpu] dispatch = ${E}`);let T=b?4:1,B=Math.max(x[0]*T,x[1]),M=b?4:1,W=[t.kernelShape[a?1:2],t.kernelShape[a?2:3]],q=[W[0]+(t.dilations[0]<=1?0:(W[0]-1)*(t.dilations[0]-1)),W[1]+(t.dilations[1]<=1?0:(W[1]-1)*(t.dilations[1]-1))],ie=[q[0]-1-Math.floor((t.pads[0]+t.pads[2])/2),q[1]-1-Math.floor((t.pads[1]+t.pads[3])/2)],O=[{type:6,data:o},{type:6,data:n},{type:6,data:s},{type:6,data:t.strides},{type:6,data:t.dilations},{type:6,data:W},{type:6,data:ie}];xt(t,O),O.push(...Z(e[0].dims,e[1].dims));let J=["rank","rank"];l&&(O.push(...Z(e[2].dims)),J.push("rank")),O.push(...Z(r));let $e=ke=>{let Re=U("x",e[0].dataType,e[0].dims.length,M),_e=U("w",e[1].dataType,e[1].dims.length,1),N=j("result",e[0].dataType,r.length,M),Be=[Re,_e],be="";if(l){let pe=U("bias",e[2].dataType,e[2].dims.length,M);Be.push(pe),be+=`\n          fn getBiasByOutputCoords(coords : vec4<i32>) -> ${b?"vec4<f32>":"f32"} {\n            return bias[coords.${a?"w":"y"}${b?"/ 4":""}];\n          }`}let ge=[{name:"dim_a_outer",type:"i32"},{name:"dim_b_outer",type:"i32"},{name:"dim_inner",type:"i32"},{name:"strides",type:"i32",length:2},{name:"dilations",type:"i32",length:2},{name:"filter_dims",type:"i32",length:W.length},{name:"pads",type:"i32",length:ie.length}];return Ct(t,ge),`\n        ${Mn("uniforms.result_strides")}\n        ${ke.registerUniforms(ge).declareVariables(...Be,N)};\n        ${be}\n        ${Cd(a,l,t,T)}\n        ${b?Mr($,x,"f32",void 0,!a,B):zr($,x,"f32",void 0,!a,B,!1,void 0,c)}`};return{name:"Conv2DTransposeMatMul",shaderCache:{hint:`${t.cacheKey};${$};${x};${b}`,inputDependencies:J},getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:E[0],y:E[1],z:E[2]},programUniforms:O}),getShaderSource:$e}}});var Id,Io,hs=Y(()=>{"use strict";he();Pt();xe();ve();Id=(e,t,r,o,n,s=!1,l,c,a=!1)=>{let m=a?1:2,g=a?2:3,h=a?3:1,v=s?2:1,_=`\n  fn setOutputAtIndex(flatIndex : u32, value : ${s?`vec4<${l}>`:l}) {\n    result[flatIndex] = ${s?`vec4<${l}>`:l}(value);\n  }`;o&&(_+=`\n    fn getBiasByOutputCoords(coords : vec4<u32>) -> ${s?`vec4<${l}>`:l} {\n      return bias[coords.${a?"w":"y"}${s?"/ 4":""}];\n    }`);let b=s?4:1,S=U("W",t[1].dataType,t[1].dims.length,b),I=U("Dy",t[0].dataType,t[0].dims.length,b),x=[I,S];o&&x.push(U("bias",t[2].dataType,[r[h]].length,b));let $=j("result",t[0].dataType,r.length,b),E=`{\n        let batch: u32 = ${n?"global_id.z":"workgroup_id.z"} / uniforms.result_shape[1];\n        let r = ${n?"global_id.z":"workgroup_id.z"} % uniforms.result_shape[1];\n        let c = ${n?"global_id.y":"workgroup_id.y"} * ${v};\n        let d1: u32 = ${n?"global_id.x":"workgroup_id.x"} * 4;\n\n        let dyCorner = vec2<i32>(i32(r), i32(c)) - vec2<i32>(uniforms.pads);\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        var dotProd: array<vec4<${l}>, ${v}>;\n        for (var i = 0; i < ${v}; i++) {\n          dotProd[i] = vec4<${l}>(0.0);\n        }\n        for (var wR: u32 = 0; wR < uniforms.filter_dims[0]; wR = wR + 1) {\n          var dyR = (${l}(dyCorner.x) + ${l}(wR)) / ${l}(uniforms.strides.x);\n          let wRPerm = uniforms.filter_dims[0] - 1 - wR;\n          if (dyR < 0.0 || dyR >= ${l}(uniforms.Dy_shape[1]) ||\n              fract(dyR) > 0.0 || wRPerm < 0) {\n            continue;\n          }\n          let idyR: u32 = u32(dyR);\n\n          for (var wC: u32 = 0; wC < uniforms.filter_dims[1]; wC = wC + 1) {\n            let dyC = (${l}(dyCorner.y) + ${l}(wC)) / ${l}(uniforms.strides.y);\n            let dyC2 = (${l}(dyCorner.y) + 1.0 + ${l}(wC)) / ${l}(uniforms.strides.y);\n            let wCPerm = uniforms.filter_dims[1] - 1 - wC;\n            if (wCPerm < 0) {\n              continue;\n            }\n            var bDyCVal = true;\n            var bDyCVal2 = true;\n            if (dyC < 0.0 || dyC >= ${l}(uniforms.Dy_shape[2]) ||\n                fract(dyC) > 0.0) {\n              bDyCVal = false;\n            }\n            if (dyC2 < 0.0 || dyC2 >= ${l}(uniforms.Dy_shape[2]) ||\n                fract(dyC2) > 0.0) {\n              bDyCVal2 = false;\n            }\n\n            let idyC: u32 = u32(dyC);\n            let idyC2: u32 = u32(dyC2);\n            if (bDyCVal && bDyCVal2) {\n              let d2Length = uniforms.Dy_shape[3];\n              for (var d2 :u32 = 0; d2 < d2Length; d2 = d2 + 4) {\n                let wValue0 = ${S.get("u32(wRPerm)","u32(wCPerm)","d1","d2")};\n                let wValue1 = ${S.get("u32(wRPerm)","u32(wCPerm)","d1 + 1","d2")};\n                let wValue2 = ${S.get("u32(wRPerm)","u32(wCPerm)","d1 + 2","d2")};\n                let wValue3 = ${S.get("u32(wRPerm)","u32(wCPerm)","d1 + 3","d2")};\n\n                var xValue = ${I.get("batch","idyR","idyC","d2")};\n                let tmpval = vec4<${l}>(dot(xValue, wValue0),\n                                      dot(xValue, wValue1),\n                                      dot(xValue, wValue2),\n                                      dot(xValue, wValue3));\n                dotProd[0] = dotProd[0] + tmpval;\n\n                xValue =  ${I.get("batch","idyR","idyC2","d2")};\n\n                dotProd[1] = dotProd[1] + vec4<${l}>(dot(xValue, wValue0),\n                                                    dot(xValue, wValue1),\n                                                    dot(xValue, wValue2),\n                                                    dot(xValue, wValue3));\n              }\n            } else if (bDyCVal) {\n              let d2Length = uniforms.Dy_shape[${h}];\n              for (var d2: u32 = 0; d2 < d2Length; d2 = d2 + 4) {\n                let wValue0 = ${S.get("u32(wRPerm)","u32(wCPerm)","d1","d2")};\n                let wValue1 = ${S.get("u32(wRPerm)","u32(wCPerm)","d1 + 1","d2")};\n                let wValue2 = ${S.get("u32(wRPerm)","u32(wCPerm)","d1 + 2","d2")};\n                let wValue3 = ${S.get("u32(wRPerm)","u32(wCPerm)","d1 + 3","d2")};\n\n                var xValue = ${I.get("batch","idyR","idyC","d2")};\n                let tmpval = vec4<${l}>(dot(xValue, wValue0),\n                                      dot(xValue, wValue1),\n                                      dot(xValue, wValue2),\n                                      dot(xValue, wValue3));\n                dotProd[0] = dotProd[0] + tmpval;\n              }\n            } else if (bDyCVal2) {\n              let d2Length = uniforms.Dy_shape[3];\n              for (var d2: u32 = 0; d2 < d2Length; d2 = d2 + 4) {\n                let wValue0 = ${S.get("u32(wRPerm)","u32(wCPerm)","d1","d2")};\n                let wValue1 = ${S.get("u32(wRPerm)","u32(wCPerm)","d1 + 1","d2")};\n                let wValue2 = ${S.get("u32(wRPerm)","u32(wCPerm)","d1 + 2","d2")};\n                let wValue3 = ${S.get("u32(wRPerm)","u32(wCPerm)","d1 + 3","d2")};\n\n                var xValue = ${I.get("batch","idyR","idyC2","d2")};\n                let tmpval = vec4<${l}>(dot(xValue, wValue0),\n                                      dot(xValue, wValue1),\n                                      dot(xValue, wValue2),\n                                      dot(xValue, wValue3));\n                dotProd[1] = dotProd[1] + tmpval;\n              }\n            }\n          }\n        }\n\n        for (var i: u32 = 0; i < ${v}; i = i + 1) {\n          let value = dotProd[i] + ${o?"bias[c+i]":`vec4<${l}>(0.0)`};\n          ${$.set("batch","r","c + i","d1","value")};\n        }\n      }`,T=`\n          let outputIndices = ${$.offsetToIndices("global_idx")};\n          let batch = ${$.indicesGet("outputIndices",0)};\n          let d1 = ${$.indicesGet("outputIndices",h)};\n          let r = ${$.indicesGet("outputIndices",m)};\n          let c = ${$.indicesGet("outputIndices",g)};\n          let dyCorner = vec2<i32>(i32(r), i32(c)) - uniforms.pads;\n          let dyRCorner = dyCorner.x;\n          let dyCCorner = dyCorner.y;\n          let groupId = d1 / uniforms.output_channels_per_group;\n          let wOutChannel = d1 - groupId * uniforms.output_channels_per_group;\n          // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n          // ? = to be determined. : = across all values in that axis.\n          var dotProd = ${l}(0.0);\n          for (var wR: u32 = 0; wR < uniforms.effective_filter_dims.x; wR = wR + 1) {\n            if (wR % uniforms.dilations.x != 0) {\n              continue;\n            }\n            let dyR = (${l}(dyRCorner) + ${l}(wR)) / ${l}(uniforms.strides[0]);\n            let wRPerm = uniforms.filter_dims.x - 1 - wR / uniforms.dilations.x;\n            if (dyR < 0.0 || dyR >= ${l}(uniforms.Dy_shape[${m}]) || fract(dyR) > 0.0 ||\n                wRPerm < 0) {\n              continue;\n            }\n            let idyR: u32 = u32(dyR);\n\n            for (var wC: u32 = 0; wC < uniforms.effective_filter_dims.y; wC = wC + 1) {\n              if (wC % uniforms.dilations.y != 0) {\n                continue;\n              }\n              let dyC = (${l}(dyCCorner) + ${l}(wC)) / ${l}(uniforms.strides.y);\n              let wCPerm = uniforms.filter_dims.y - 1 - wC / uniforms.dilations.y;\n              if (dyC < 0.0 || dyC >= ${l}(uniforms.Dy_shape[${g}]) ||\n                  fract(dyC) > 0.0 || wCPerm < 0) {\n                continue;\n              }\n              let idyC: u32 = u32(dyC);\n              var inputChannel = groupId * uniforms.input_channels_per_group;\n              for (var d2: u32 = 0; d2 < uniforms.input_channels_per_group; d2 = d2 + 1) {\n                let xValue = ${a?I.get("batch","idyR","idyC","inputChannel"):I.get("batch","inputChannel","idyR","idyC")};\n                let wValue = ${S.get("inputChannel","wOutChannel","u32(wRPerm)","u32(wCPerm)")};\n                dotProd = dotProd + xValue * wValue;\n                inputChannel = inputChannel + 1;\n              }\n            }\n          }\n          let value = dotProd + ${o?"bias[d1]":`${l}(0.0)`};\n          ${$.setByOffset("global_idx","value")};\n        `;return`\n  ${e.registerUniforms(c).declareVariables(...x,$)}\n  ${_}\n\n    ${e.mainStart()}\n    ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")};\n  ${s?E:T}}`},Io=(e,t,r)=>{let o=e.length>2,n=t.outputShape,s=z.size(n),l=[Math.ceil(s/64),1,1];ze("verbose",()=>`[conv2d_backprop_webgpu] dispatch = ${l}`);let c=t.format==="NHWC",a=["rank","rank"],m=[t.strides[0],t.strides[1]],g=[t.kernelShape[c?1:2],t.kernelShape[c?2:3]],h=[t.dilations[0],t.dilations[1]],v=[g[0]+(t.dilations[0]<=1?0:(t.kernelShape[c?1:2]-1)*(t.dilations[0]-1)),g[1]+(t.dilations[1]<=1?0:(t.kernelShape[c?2:3]-1)*(t.dilations[1]-1))],_=[v[0]-1-Math.floor((t.pads[0]+t.pads[2])/2),v[1]-1-Math.floor(t.pads[1]+t.pads[3])/2],b=!1,S=t.group,I=e[1].dims,x=I[0]/S,$=I[1],E=[{type:6,data:s},{type:12,data:m},{type:12,data:g},{type:12,data:h},{type:12,data:v},{type:6,data:_},{type:12,data:x},{type:12,data:$},...Z(e[0].dims,e[1].dims)];o&&(E.push(...Z(e[2].dims)),a.push("rank")),E.push(...Z(n));let T=l[1]===1&&l[2]===1,B=M=>{let W=[{name:"output_size",type:"u32"},{name:"strides",type:"u32",length:m.length},{name:"filter_dims",type:"u32",length:g.length},{name:"dilations",type:"u32",length:g.length},{name:"effective_filter_dims",type:"u32",length:v.length},{name:"pads",type:"i32",length:_.length},{name:"input_channels_per_group",type:"u32"},{name:"output_channels_per_group",type:"u32"}],q=Ue(e[0].dataType);return`${Id(M,e,n,o,T,b,q,W,c)}`};return{name:"ConvTranspose2D",shaderCache:{hint:`${t.cacheKey};`,inputDependencies:a},getRunData:()=>({dispatchGroup:{x:l[0],y:l[1],z:l[2]},outputs:[{dims:r?r(n):n,dataType:e[0].dataType}],programUniforms:E}),getShaderSource:B}}});var Ad,Td,Ed,gs,ys,Pd,Od,kd,Rd,bs,ws=Y(()=>{"use strict";fs();hs();Ot();lr();Ad=(e,t,r,o,n,s)=>(e-1)*t+r+(o-1)*n+1-s,Td=(e,t,r,o,n)=>{let s=Math.floor(e/2);t==="SAME_UPPER"?(r[o]=s,r[n]=e-s):t==="SAME_LOWER"&&(r[o]=e-s,r[n]=s)},Ed=(e,t,r,o,n,s,l,c,a,m)=>{let g=e.length-2,h=m.length===0;if(a.length===0)for(let b=0;b<g;++b)a.push(0);let v=e[0],_=t[c?3:1]*n;for(let b=0,S=e.length-g-(c?1:0);b<g;++b,++S){let I=e[S],x=h?I*l[b]:m[b],$=Ad(I,l[b],s[b],t[S],r[b],x);Td($,o,s,b,b+g),h&&m.push(l[b]*(I-1)+a[b]+(t[S]-1)*r[b]+1-s[b]-s[b+g])}m.splice(0,0,v),m.splice(c?3:1,0,_)},gs=(e,t)=>{let r=e.kernelShape.slice();if(e.kernelShape.length===0||e.kernelShape.reduce((h,v)=>h*v,1)===0){r.length=0;for(let h=2;h<t[1].dims.length;++h)r.push(t[1].dims[h])}let o=e.format==="NHWC";r.splice(0,0,t[1].dims[0]),r.splice(o?3:1,0,t[1].dims[1]);let n=e.pads.slice(),s=e.outputShape.slice(),l=e.outputPadding.slice(),c=t[0].dims,a=e.dilations.slice();if(a.reduce((h,v)=>h+v,0)===0){let h=t[0].dims.length-2;a=new Array(h).fill(1)}let m=e.strides.slice();if(m.reduce((h,v)=>h+v,0)===0){let h=t[0].dims.length-2;m=new Array(h).fill(1)}Ed(c,r,a,e.autoPad,e.group,n,m,o,l,s);let g=Object.assign({},e);return Object.assign(g,{kernelShape:r,pads:n,outputPadding:l,outputShape:s,dilations:a,strides:m}),g},ys=e=>{let t=Rn(e),r=e.format,o=["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][typeof e.autoPad>"u"?0:e.autoPad],n=e.dilations,s=e.group,l=e.kernelShape,c=e.pads,a=e.strides,m=e.wIsConst(),g=e.outputPadding,h=e.outputShape;return{autoPad:o,format:r,dilations:n,group:s,kernelShape:l,outputPadding:g,outputShape:h,pads:c,strides:a,wIsConst:m,...t,cacheKey:`${e.format};${t.activation};`}},Pd=(e,t)=>{if(!e||e.length!==2&&e.length!==3)throw new Error("Conv requires 2 or 3 inputs");if(e[0].dims.length!==4&&e[0].dims.length!==3)throw new Error("currently only support 2-dimensional conv");if(e[0].dims.length!==e[1].dims.length)throw new Error("filter does not have same dimension as input");let r=e[0].dims[t.format==="NHWC"?e[0].dims.length-1:1],o=e[1].dims[0];if(r!==o)throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");let n=e[1].dims[1]*t.group;if(e.length===3&&(e[2].dims.length!==1||e[2].dims[0]!==n))throw new Error("invalid bias");let s=e[0].dims.length-2;if(t.dilations.reduce((g,h)=>g+h,0)>0&&t.dilations.length!==s)throw new Error(`dilations should be ${s}D`);if(t.strides.reduce((g,h)=>g+h,0)>0&&t.strides.length!==s)throw new Error(`strides should be ${s}D`);if(t.pads.reduce((g,h)=>g+h,0)>0&&t.pads.length!==s*2)throw new Error(`pads should be ${s*2}D`);if(t.outputPadding.length!==s&&t.outputPadding.length!==0)throw new Error(`output_padding should be ${s}D`);if(t.kernelShape.reduce((g,h)=>g+h,0)>0&&t.kernelShape.length!==0&&t.kernelShape.length!==e[1].dims.length-2)throw new Error("invalid kernel shape");if(t.outputShape.length!==0&&t.outputShape.length!==e[0].dims.length-2)throw new Error("invalid output shape")},Od=[2,3,1,0],kd=(e,t,r)=>{let o=gs(r,t),n=r.format==="NHWC",s=o.outputShape,l=s[n?3:1],c=t[0].dims[n?3:1];if(o.group!==1||l===1&&c===1){e.compute(Io(t,o));return}let a=s[n?1:2],m=s[n?2:3],g=t[1].dims[2],h=t[1].dims[3],v=n?a*m:l,_=n?l:a*m,b=g*h*c,S=!0,I=e.kernelCustomData.wT??e.compute(mt(t[1],Od),{inputs:[1],outputs:[r.wIsConst?-2:-1]})[0];r.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=I);let x=[t[0],I],$=t.length===3;$&&(!n&&t[2].dims.length===1?x.push(t[2].reshape([t[2].dims[0],1,1])):x.push(t[2])),e.compute(ms(x,o,s,v,_,b,$,S),{inputs:x})},Rd=(e,t)=>{let r=t.format==="NHWC",o=[e.inputs[0].reshape(r?[e.inputs[0].dims[0],1,e.inputs[0].dims[1],e.inputs[0].dims[2]]:[e.inputs[0].dims[0],e.inputs[0].dims[1],1,e.inputs[0].dims[2]]),e.inputs[1].reshape([e.inputs[1].dims[0],e.inputs[1].dims[1],1,e.inputs[1].dims[2]])];o.length===3&&o.push(e.inputs[2]);let n=t.kernelShape;(n.length===0||n[0]===0)&&(n=[e.inputs[1].dims[2]]);let s=t.dilations;(s.length===0||s[0]===0)&&(s=[1]);let l=t.strides;(l.length===0||l[0]===0)&&(l=[1]);let c=t.pads;c.length===0&&(c=[0,0]),c=[0,c[0],0,c[1]],l=[1].concat(l),s=[1].concat(s),n=[1].concat(n);let a=gs({...t,pads:c,strides:l,dilations:s,kernelShape:n},o);e.compute(Io(o,a,m=>r?[m[0],m[2],m[3]]:[m[0],m[1],m[3]]))},bs=(e,t)=>{Pd(e.inputs,t),e.inputs[0].dims.length===3?Rd(e,t):kd(e,e.inputs,t)}});var Bd,vs,$s,_s=Y(()=>{"use strict";he();xe();Qe();ve();Bd=(e,t,r,o)=>{let n=z.size(t),s=t.length,l=U("input",e,s),c=j("output",e,s),a=r.dataType===6?r.getInt32Array()[0]:Number(r.getBigInt64Array()[0]),m=z.normalizeAxis(a,s),g=h=>{let v=` i32(${l.indicesGet("inputIndices","uniforms.axis")}) `,_=de("uniforms.input_shape","uniforms.axis",s),b=o.reverse?v+(o.exclusive?" + 1":""):"0",S=o.reverse?_:v+(o.exclusive?"":" + 1");return`\n                ${h.registerUniform("outputSize","u32").registerUniform("axis","u32").declareVariables(l,c)}\n                ${h.mainStart()}\n                  ${h.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n                  var inputIndices = ${c.offsetToIndices("global_idx")};\n                  var sum = ${c.type.value}(0);\n                  let first : i32 = ${b};\n                  let last : i32 = ${S};\n                  for (var i : i32 = first; i < last; i++) {\n                    ${l.indicesSet("inputIndices","uniforms.axis","u32(i)")};\n                    sum = sum + ${l.getByIndices("inputIndices")};\n                  }\n                  ${c.setByOffset("global_idx","sum")};\n                }`};return{name:"CumSum",shaderCache:{hint:o.cacheKey,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:t,dataType:e}],dispatchGroup:{x:Math.ceil(n/64)},programUniforms:[{type:12,data:n},{type:6,data:m},...Z(t,t)]}),getShaderSource:g}},vs=(e,t)=>{let r=e.inputs[0].dims,o=e.inputs[0].dataType,n=e.inputs[1];e.compute(Bd(o,r,n,t),{inputs:[0]})},$s=e=>{let t=e.exclusive===1,r=e.reverse===1;return Se({exclusive:t,reverse:r})}});var Ao,Un,Ss,Dd,Md,To,Eo,xs,zd,Cs,Is,As=Y(()=>{"use strict";he();xe();Qe();ve();Ao="[a-zA-Z]|\\\\.\\\\.\\\\.",Un="("+Ao+")+",Ss="^"+Un+"$",Dd="("+Un+",)*"+Un,Md="^"+Dd+"$",To=class{constructor(t=-1){this.symbolToIndices=new Map,this.inputIndex=t}addSymbol(t,r){let o=this.symbolToIndices.get(t);o===void 0?o=[r]:o.push(r),this.symbolToIndices.set(t,o)}},Eo=class{constructor(t,r){this.equation=r;this.hasEllipsis=!1,this.symbolToInfo=new Map,this.lhs=new Array,this.outputDims=[];let[o,n]=r.includes("->")?r.split("->",2):[r,""];if(!o.match(RegExp(Md)))throw new Error("Invalid LHS term");if(o.split(",").forEach((c,a)=>{let m=t[a].dims.slice();if(!c.match(RegExp(Ss)))throw new Error("Invalid LHS term");let g=this.processTerm(c,!0,m,a);this.lhs.push(g)}),n==="")n+=[...this.symbolToInfo.entries()].filter(([c,a])=>a.count===1||c==="...").map(([c])=>c).join("");else if(!n.match(RegExp(Un)))throw new Error("Invalid RHS");n.match(RegExp(Ao,"g"))?.forEach(c=>{if(c==="...")this.outputDims=this.outputDims.concat(this.ellipsisDims);else{let a=this.symbolToInfo.get(c);if(a===void 0)throw new Error("Invalid RHS symbol");this.outputDims.push(a.dimValue)}}),this.rhs=this.processTerm(n,!1,this.outputDims)}addSymbol(t,r,o){let n=this.symbolToInfo.get(t);if(n!==void 0){if(n.dimValue!==r&&n.count!==1)throw new Error("Dimension mismatch");n.count++,n.inputIndices.push(o)}else n={count:1,dimValue:r,inputIndices:[o]};this.symbolToInfo.set(t,n)}processTerm(t,r,o,n=-1){let s=o.length,l=!1,c=[],a=0;if(!t.match(RegExp(Ss))&&!r&&t!=="")throw new Error("Invalid LHS term");let m=t.match(RegExp(Ao,"g")),g=new To(n);return m?.forEach((h,v)=>{if(h==="..."){if(l)throw new Error("Only one ellipsis is allowed per input term");l=!0;let _=s-m.length+1;if(_<0)throw new Error("Ellipsis out of bounds");if(c=o.slice(a,a+_),this.hasEllipsis){if(this.ellipsisDims.length!==c.length||this.ellipsisDims.toString()!==c.toString())throw new Error("Ellipsis dimensions mismatch")}else if(r)this.hasEllipsis=!0,this.ellipsisDims=c;else throw new Error("Ellipsis must be specified in the LHS");for(let b=0;b<c.length;b++){let S=String.fromCharCode("0".charCodeAt(0)+b);g.addSymbol(S,v+b),this.addSymbol(S,o[a++],n)}}else g.addSymbol(h,v+(this.hasEllipsis?this.ellipsisDims.length-1:0)),this.addSymbol(h,o[a++],n)}),g}},xs=e=>e+"_max",zd=(e,t,r,o)=>{let s=e.map(g=>g.length).map((g,h)=>U(`input${h}`,t,g)),l=z.size(o),c=j("output",t,o.length),a=[...r.symbolToInfo.keys()].filter(g=>!r.rhs.symbolToIndices.has(g)),m=g=>{let h=[],v="var prod = 1.0;",_="var sum = 0.0;",b="sum += prod;",S=[],I=[],x=[],$=[],E=r.symbolToInfo.size===r.rhs.symbolToIndices.size;r.symbolToInfo.forEach((B,M)=>{if(r.rhs.symbolToIndices.has(M)){let W=r.rhs.symbolToIndices.get(M)?.[0];W!==void 0&&r.lhs.forEach((q,ie)=>{if(B.inputIndices.includes(ie)){let O=q.symbolToIndices.get(M);if(O===void 0)throw new Error("Invalid symbol error");O.forEach(J=>{h.push(`${s[ie].indicesSet(`input${ie}Indices`,J,c.indicesGet("outputIndices",W))}`)})}})}else r.lhs.forEach((W,q)=>{if(B.inputIndices.includes(q)){let ie=W.symbolToIndices.get(M);if(ie===void 0)throw new Error("Invalid symbol error");ie.forEach(O=>{S.push(`${s[q].indicesSet(`input${q}Indices`,O,`${M}`)}`)}),$.push(`prod *= ${s[q].getByIndices(`input${q}Indices`)};`)}}),I.push(`for(var ${M}: u32 = 0; ${M} < uniforms.${xs(M)}; ${M}++) {`),x.push("}")});let T=E?[...h,`let sum = ${s.map((B,M)=>B.getByIndices(`input${M}Indices`)).join(" * ")};`]:[...h,_,...I,...S,v,...$,b,...x];return`\n            ${g.registerUniforms(a.map(B=>({name:`${xs(B)}`,type:"u32"}))).registerUniform("outputSize","u32").declareVariables(...s,c)}\n\n            ${g.mainStart()}\n            ${g.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n            var outputIndices = ${c.offsetToIndices("global_idx")};\n            ${s.map((B,M)=>`var input${M}Indices: ${s[M].type.indices};`).join(`\n`)}\n            ${T.join(`\n`)};\n            ${c.setByOffset("global_idx","sum")};\n          }`};return{name:"Einsum",shaderCache:{hint:r.equation,inputDependencies:e.map(()=>"rank")},getRunData:()=>{let g=a.filter(v=>r.symbolToInfo.has(v)).map(v=>({type:12,data:r.symbolToInfo.get(v)?.dimValue||0}));g.push({type:12,data:l});let h=e.map((v,_)=>[...Z(v)]).reduce((v,_)=>v.concat(_),g);return h.push(...Z(o)),{outputs:[{dims:o,dataType:t}],dispatchGroup:{x:Math.ceil(l/64)},programUniforms:h}},getShaderSource:m}},Cs=(e,t)=>{let r=new Eo(e.inputs,t.equation),o=r.outputDims,n=e.inputs.map((s,l)=>s.dims);e.compute(zd(n,e.inputs[0].dataType,r,o))},Is=e=>{let t=e.equation.replace(/\\s+/g,"");return Se({equation:t})}});var Ud,Ts,Vd,Wd,Es,Ps=Y(()=>{"use strict";he();xe();ve();Ud=e=>{if(!e||e.length!==2)throw new Error("Expand requires 2 input.");let t=e[0].dims,r=Array.from(e[1].getBigInt64Array(),Number),o=r.length<t.length?0:r.length-t.length,n=t.length<r.length?0:t.length-r.length;for(;o<r.length&&n<t.length;++o,++n)if(r[o]!==t[n]&&r[o]!==1&&t[n]!==1)throw new Error("Expand requires shape to be broadcastable to input")},Ts=(e,t)=>{let r=e.length-t.length,o=[];for(let n=0;n<r;++n)o.push(e[n]);for(let n=0;n<t.length;++n)o.push(t[n]===1?e[n+r]:t[n]);return o},Vd=(e,t)=>e.length>t.length?Ts(e,t):Ts(t,e),Wd=e=>{let t=e[0].dims,r=Array.from(e[1].getBigInt64Array(),Number),o=Vd(t,r),n=e[0].dataType,s=n===9?4:1,l=Math.ceil(z.size(o)/s),c=m=>{let g=U("input",n,t.length,s),h=j("output",n,o.length,s),v;if(n===9){let _=(b,S,I="")=>`\n          let outputIndices${S} = ${h.offsetToIndices(`outputOffset + ${S}u`)};\n          let offset${S} = ${g.broadcastedIndicesToOffset(`outputIndices${S}`,h)};\n          let index${S} = offset${S} / 4u;\n          let component${S} = offset${S} % 4u;\n          ${b}[${S}] = ${I}(${g.getByOffset(`index${S}`)}[component${S}]);\n        `;v=`\n        let outputOffset = global_idx * ${s};\n        var data = vec4<u32>(0);\n        ${_("data",0,"u32")}\n        ${_("data",1,"u32")}\n        ${_("data",2,"u32")}\n        ${_("data",3,"u32")}\n        ${h.setByOffset("global_idx","data")}\n      }`}else v=`\n        let outputIndices = ${h.offsetToIndices("global_idx")};\n        let inputOffset = ${g.broadcastedIndicesToOffset("outputIndices",h)};\n        ${h.setByOffset("global_idx",g.getByOffset("inputOffset"))}\n      }`;return`\n    ${m.registerUniform("vec_size","u32").declareVariables(g,h)}\n    ${m.mainStart()}\n    ${m.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}\n    ${v}`},a=[{type:12,data:l},...Z(t,o)];return{name:"Expand",shaderCache:{hint:`${o.length}`,inputDependencies:["rank"]},getShaderSource:c,getRunData:()=>({outputs:[{dims:o,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(l/64)},programUniforms:a})}},Es=e=>{Ud(e.inputs),e.compute(Wd(e.inputs),{inputs:[0]})}});var Nd,Os,ks=Y(()=>{"use strict";he();xe();ve();kn();Nd=e=>{let t=e[0].dataType,r=z.size(e[0].dims),o=z.size(e[1].dims),n=o%4===0,s=l=>{let c=U("x",t,[1],4),a=U("bias",t,[1],4),m=j("y",t,[1],4),g=[{name:"output_vec_size",type:"u32"},{name:"bias_size",type:"u32"}],h=_=>`\n      let bias${_}_offset: u32 = (global_idx * 4 + ${_}) % uniforms.bias_size;\n      let bias${_} = ${a.getByOffset(`bias${_}_offset / 4`)}[bias${_}_offset % 4];`,v=n?`\n      let bias = ${a.getByOffset("global_idx % (uniforms.bias_size / 4)")};`:`${h(0)}${h(1)}${h(2)}${h(3)}\n      let bias = ${c.type.value}(bias0, bias1, bias2, bias3);`;return`${l.registerUniforms(g).declareVariables(c,a,m)}\n\n    ${go(rt(t))}\n\n    ${l.mainStart(Cn)}\n      ${l.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_vec_size")}\n\n      let x = ${c.getByOffset("global_idx")};\n      ${v}\n      let x_in = x + bias;\n      ${m.setByOffset("global_idx",yo("x_in"))}\n    }`};return{name:"FastGeluWithBias",shaderCache:{hint:`${n}`,inputDependencies:["type","type"]},getShaderSource:s,getRunData:l=>({outputs:[{dims:l[0].dims,dataType:l[0].dataType}],programUniforms:[{type:12,data:Math.ceil(r/4)},{type:12,data:o}],dispatchGroup:{x:Math.ceil(r/Cn/4)}})}},Os=e=>{e.inputs.length<2||z.size(e.inputs[1].dims)===0?Wi(e):e.compute(Nd(e.inputs))}});var Gd,Hd,Rs,Bs,Ds=Y(()=>{"use strict";he();xe();Qe();ve();Gd=e=>{if(!e||e.length!==2)throw new Error("Gather requires 2 inputs.")},Hd=(e,t)=>{let r=e[0].dims,o=e[1].dims,n=r.length,s=z.normalizeAxis(t.axis,n),l=r.slice(0);l.splice(s,1,...o);let c=r[s],a=e[0].dataType===9?4:1,m=Math.ceil(z.size(l)/a),g=[{type:12,data:m},{type:6,data:c},{type:12,data:s},...Z(e[0].dims,e[1].dims,l)],h=v=>{let _=U("data",e[0].dataType,e[0].dims.length,a),b=U("inputIndices",e[1].dataType,e[1].dims.length),S=j("output",e[0].dataType,l.length,a),I=$=>{let E=o.length,T=`var indicesIndices${$}  = ${b.type.indices}(0);`;for(let B=0;B<E;B++)T+=`${E>1?`indicesIndices${$}[${B}]`:`indicesIndices${$}`} = ${l.length>1?`outputIndices${$}[uniforms.axis + ${B}]`:`outputIndices${$}`};`;T+=`\n          var idx${$} = ${b.getByIndices(`indicesIndices${$}`)};\n          if (idx${$} < 0) {\n            idx${$} = idx${$} + uniforms.axisDimLimit;\n          }\n          var dataIndices${$} = ${_.type.indices}(0);\n        `;for(let B=0,M=0;B<n;B++)B===s?(T+=`${n>1?`dataIndices${$}[${B}]`:`dataIndices${$}`} = u32(idx${$});`,M+=E):(T+=`${n>1?`dataIndices${$}[${B}]`:`dataIndices${$}`} = ${l.length>1?`outputIndices${$}[${M}]`:`outputIndices${$}`};`,M++);return T},x;if(e[0].dataType===9){let $=(E,T,B="")=>`\n          let outputIndices${T} = ${S.offsetToIndices(`outputOffset + ${T}u`)};\n          ${I(T)};\n          let offset${T} = ${_.indicesToOffset(`dataIndices${T}`)};\n          let index${T} = offset${T} / 4u;\n          let component${T} = offset${T} % 4u;\n          ${E}[${T}] = ${B}(${_.getByOffset(`index${T}`)}[component${T}]);\n        `;x=`\n        let outputOffset = global_idx * ${a};\n        var value = vec4<u32>(0);\n        ${$("value",0,"u32")}\n        ${$("value",1,"u32")}\n        ${$("value",2,"u32")}\n        ${$("value",3,"u32")}\n        ${S.setByOffset("global_idx","value")}\n      `}else x=`\n      let outputIndices = ${S.offsetToIndices("global_idx")};\n      ${I("")};\n      let value = ${_.getByIndices("dataIndices")};\n      ${S.setByOffset("global_idx","value")};\n      `;return`\n      ${v.registerUniform("outputSize","u32").registerUniform("axisDimLimit","i32").registerUniform("axis","u32").declareVariables(_,b,S)}\n      ${v.mainStart()}\n        ${v.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n        ${x}\n      }`};return{name:"Gather",shaderCache:{hint:t.cacheKey,inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:l,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(m/64)},programUniforms:g}),getShaderSource:h}},Rs=e=>Se({axis:e.axis}),Bs=(e,t)=>{let r=e.inputs;Gd(r),e.compute(Hd(e.inputs,t))}});var Ld,Fd,Ms,zs,Us=Y(()=>{"use strict";he();xe();Qe();ve();Ld=e=>{if(!e||e.length!==2)throw new Error("GatherElements requires 2 inputs.");if(e[0].dims.length<1)throw new Error("GatherElements requires that the data input be rank >= 1.");if(e[0].dims.length!==e[1].dims.length)throw new Error(`GatherElements requires that the data input and\n                     indices input tensors be of same rank.`)},Fd=(e,t)=>{let r=e[0].dims,o=e[0].dataType,n=r.length,s=e[1].dims,l=e[1].dataType,c=z.normalizeAxis(t.axis,n),a=r[c],m=s.slice(0),g=z.size(m),h=U("input",o,n),v=U("indicesInput",l,s.length),_=j("output",o,m.length),b=[{type:12,data:g},{type:6,data:a},{type:12,data:c}];return b.push(...Z(r,s,m)),{name:"GatherElements",shaderCache:{inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:m,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(g/64)},programUniforms:b}),getShaderSource:x=>`\n      ${x.registerUniform("outputSize","u32").registerUniform("axisDimLimit","i32").registerUniform("axis","u32").declareVariables(h,v,_)}\n      ${x.mainStart()}\n      ${x.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n\n      let outputIndices = ${_.offsetToIndices("global_idx")};\n\n      var idx = ${v.getByOffset("global_idx")};\n      if (idx < 0) {\n        idx = idx + uniforms.axisDimLimit;\n      }\n      var inputIndices = ${h.type.indices}(outputIndices);\n      ${h.indicesSet("inputIndices","uniforms.axis","u32(idx)")};\n      let value = ${h.getByIndices("inputIndices")};\n\n      ${_.setByOffset("global_idx","value")};\n  }`}},Ms=e=>Se({axis:e.axis}),zs=(e,t)=>{let r=e.inputs;Ld(r),e.compute(Fd(e.inputs,t))}});var jd,qd,Vs,Ws,Ns=Y(()=>{"use strict";he();xe();ve();jd=e=>{if(!e)throw new Error("Input is missing");if(e.length<2||e.length>3)throw new Error("Invaid input number.");if(e.length===3&&e[2].dims.length>2)throw new Error("Invalid input shape of C");if(e[0].dataType!==e[1].dataType||e.length===3&&e[0].dataType!==e[2].dataType)throw new Error("Input types are mismatched")},qd=(e,t)=>{let r=e[0].dims.slice(),o=e[1].dims.slice(),[n,s,l]=_n.getShapeOfGemmResult(r,t.transA,o,t.transB,e.length===3?e[2].dims:void 0),c=[n,s];if(!c)throw new Error("Can\'t use gemm on the given tensors");let a=z.size(c),m=[{type:12,data:a},{type:12,data:n},{type:12,data:s},{type:12,data:l},{type:1,data:t.alpha},{type:1,data:t.beta}],g=["type","type"];e.length===3&&(m.push(...Z(e[2].dims)),g.push("rank")),m.push(...Z(c));let h=v=>{let _="";t.transA&&t.transB?_="value += a[k * uniforms.M + m] * b[n * uniforms.K + k];":t.transA&&!t.transB?_="value += a[k * uniforms.M + m] * b[k * uniforms.N + n];":!t.transA&&t.transB?_="value += a[m * uniforms.K + k] * b[n * uniforms.K + k];":!t.transA&&!t.transB&&(_="value += a[m * uniforms.K + k] * b[k * uniforms.N + n];");let b=t.alpha===1?"":"value *= uniforms.alpha;",S=U("a",e[0].dataType,e[0].dims),I=U("b",e[1].dataType,e[1].dims),x=S.type.value,$=null,E=[S,I];e.length===3&&($=U("c",e[2].dataType,e[2].dims.length),E.push($));let T=j("output",e[0].dataType,c.length);E.push(T);let B=[{name:"output_size",type:"u32"},{name:"M",type:"u32"},{name:"N",type:"u32"},{name:"K",type:"u32"},{name:"alpha",type:"f32"},{name:"beta",type:"f32"}];return`\n  ${v.registerUniforms(B).declareVariables(...E)}\n\n  ${v.mainStart()}\n    ${v.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n\n    let m = global_idx / uniforms.N;\n    let n = global_idx % uniforms.N;\n\n    var value = ${x}(0);\n    for (var k: u32 = 0u; k < uniforms.K; k++) {\n      ${_}\n    }\n\n    ${b}\n    ${(()=>$!=null?`let cOffset = ${$.broadcastedIndicesToOffset("vec2(m, n)",T)}; value += ${x}(uniforms.beta) * ${$.getByOffset("cOffset")};`:"")()}\n    output[global_idx] = value;\n  }`};return{name:"Gemm",shaderCache:{hint:`${t.cacheKey}`,inputDependencies:g},getRunData:()=>({outputs:[{dims:c,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(a/64)},programUniforms:m}),getShaderSource:h}},Vs=e=>{let t=e.transA,r=e.transB,o=e.alpha,n=e.beta;return{transA:t,transB:r,alpha:o,beta:n,cacheKey:`${e.transA};${e.transB};${e.alpha===1}`}},Ws=(e,t)=>{jd(e.inputs),e.compute(qd(e.inputs,t))}});var Kd,Yd,Zd,Gs,Hs=Y(()=>{"use strict";he();xe();ve();Kd=(e,t)=>{let r=e[0].dims,o=r,n=2,s=z.sizeToDimension(r,n),l=z.sizeFromDimension(r,n),c=je(l),a=l/c,m=[r[0],r[1],a],g=["rank","type","type"],h=[{type:12,data:l},{type:12,data:a}];h.push(...Z(m,m));let v=_=>{let b=U("x",e[0].dataType,m.length,c),S=U("scale",e[1].dataType,e[1].dims),I=U("bias",e[2].dataType,e[2].dims),x=j("output",e[0].dataType,m.length,c),$=[b,S,I,x],E=b.type.value,T=c===1?"f32":`vec${c}<f32>`,B=64,M=[{name:"normSize",type:"u32"},{name:"normPackedSize",type:"u32"}];return`\n  var<workgroup> meanShared : f32;\n  var<workgroup> squaredNormShared : f32;\n  var<workgroup> workgroupShared : array<${T}, ${B}>;\n  const workgroupSize = ${B}u;\n  ${_.registerUniforms(M).declareVariables(...$)}\n  ${_.mainStart(B)}\n    let norm = global_idx / workgroupSize;\n    let batch = norm / uniforms.x_shape[1];\n    let channel = norm % uniforms.x_shape[1];\n    let localIndex = local_id.x;\n\n    // initialize workgroup memory\n    var initial = ${T}(0);\n    for (var h = localIndex; h < uniforms.normPackedSize; h += workgroupSize) {\n      initial = initial + ${T}(${b.get("batch","channel","h")});\n    }\n    workgroupShared[localIndex] = initial;\n    workgroupBarrier();\n\n    // Calculate the mean of current channel data.\n    for (var currSize = workgroupSize >> 1;  currSize > 0; currSize = currSize >> 1) {\n      if (localIndex < currSize) {\n        workgroupShared[localIndex] = workgroupShared[localIndex] + workgroupShared[localIndex + currSize];\n      }\n      workgroupBarrier();\n    }\n    if (localIndex == 0) {\n      meanShared = ${nt("workgroupShared[0]",c)} / f32(uniforms.normSize);\n    }\n    workgroupBarrier();\n\n    // reinitialize workgroup memory.\n    initial = ${T}(0);\n    for (var h = localIndex; h < uniforms.normPackedSize; h += workgroupSize) {\n      let deviation =  ${T}(${b.get("batch","channel","h")}) - ${T}(meanShared);\n      initial = initial + deviation * deviation;\n    }\n    workgroupShared[localIndex] = initial;\n    workgroupBarrier();\n\n    // Calculate the sum of square of deviation of current channel data.\n    for (var currSize = workgroupSize >> 1;  currSize > 0; currSize = currSize >> 1) {\n      if (localIndex < currSize) {\n        workgroupShared[localIndex] = workgroupShared[localIndex] + workgroupShared[localIndex + currSize];\n      }\n      workgroupBarrier();\n    }\n    if (localIndex == 0) {\n      squaredNormShared = ${nt("workgroupShared[0]",c)};\n    }\n    workgroupBarrier();\n\n    let invStdDev = inverseSqrt(squaredNormShared / f32(uniforms.normSize) + f32(${t.epsilon}));\n    let channelScale = invStdDev * f32(${S.getByOffset("channel")});\n    let channelShift = f32(${I.getByOffset("channel")}) - meanShared * channelScale;\n    for (var h = localIndex; h < uniforms.normPackedSize; h += workgroupSize) {\n      let value = ${b.get("batch","channel","h")} * ${E}(${T}(channelScale)) + ${E}(${T}(channelShift));\n      ${x.set("batch","channel","h","value")};\n    }\n  }`};return{name:"InstanceNormalization",shaderCache:{hint:`${t.epsilon};${c}`,inputDependencies:g},getRunData:()=>({outputs:[{dims:o,dataType:e[0].dataType}],dispatchGroup:{x:s},programUniforms:h}),getShaderSource:v}},Yd=(e,t,r,o,n,s,l,c)=>{let a=je(l),m=64,g=a===1?"vec2f":`mat2x${a}f`,h=a===1?"f32":`vec${a}f`,v=(M,W)=>`${g}(${M}, ${W})`,_=n*l/a,b=Math.ceil(s/m),S=["type"],I=[{type:12,data:b},{type:12,data:s},{type:12,data:Math.floor(l/a)},{type:12,data:Math.floor(s*l/a)}],x=M=>{let W=U("input",t.dataType,t.dims,a);return`\n  ${M.declareVariables(W)}\n  @group(0) @binding(1) var<storage, read_write> output : array<${g}>;\n  struct Uniforms {wg_size:u32, H:u32, C:u32, image_size:u32};\n  @group(0) @binding(2) var<uniform> uniforms: Uniforms;\n\n  ${M.mainStart(m)}\n    let currentImageNumber = global_idx / ${m} / uniforms.C;\n    let currentChannelNumber = (global_idx / ${m}) % uniforms.C;\n    let wgId = global_idx % ${m};\n    let wgOffset = wgId * uniforms.wg_size;\n    if (wgOffset >= uniforms.H) {\n        return;\n    }\n    let wgMax = min(wgOffset + uniforms.wg_size, uniforms.H);\n\n    let offset = currentImageNumber * uniforms.image_size + currentChannelNumber;\n    var sum = ${Je("f32",a)};\n    var squaredSum = ${Je("f32",a)};\n    for (var i: u32 = wgOffset; i < wgMax; i++) {\n        let value = ${h}(input[offset + i * uniforms.C]);\n        sum += value;\n        squaredSum += value * value;\n    }\n    output[global_idx] = ${v("sum","squaredSum")};\n  }`},$=e.compute({name:"InstanceNormComputeMean",shaderCache:{hint:`${a}`,inputDependencies:S},getRunData:()=>({outputs:[{dims:[n,l,m,2],dataType:1}],dispatchGroup:{x:n*l/a},programUniforms:I}),getShaderSource:x},{inputs:[t],outputs:[-1]})[0],E=[{type:12,data:_},{type:12,data:s},{type:12,data:Math.floor(l/a)},{type:12,data:Math.floor(m*l/a)}],T=["type","type","type"],B=M=>{let W=U("scale",r.dataType,r.dims,a),q=U("bias",o.dataType,o.dims,a);return`\n  @group(0) @binding(0) var<storage, read> input : array<${g}>;\n  @group(0) @binding(1) var<storage, read> scale : array<${W.type.storage}>;\n  @group(0) @binding(2) var<storage, read> bias : array<${q.type.storage}>;\n  @group(0) @binding(3) var<storage, read_write> output : array<${g}>;\n  struct Uniforms {units_of_work : u32, H: u32, C : u32, image_size : u32};\n  @group(0) @binding(4) var<uniform> uniforms: Uniforms;\n\n  ${M.mainStart()}\n    ${M.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.units_of_work")}\n    let currentImageNumber = global_idx / uniforms.C;\n    let currentChannelNumber = global_idx % uniforms.C;\n\n    let offset = currentImageNumber * uniforms.image_size;\n    var sum = ${Je("f32",a)};\n    var squaredSum = ${Je("f32",a)};\n    for (var i: u32 = 0; i < ${m}; i++) {\n        let value = input[offset + i + currentChannelNumber * ${m}];\n        sum += value[0];\n        squaredSum += value[1];\n    }\n    sum = sum / f32(uniforms.H);\n    squaredSum = squaredSum / f32(uniforms.H);\n    let invStdDev = inverseSqrt(squaredSum - sum * sum + f32(${c}));\n    let channelScale = invStdDev * ${h}(scale[currentChannelNumber]);\n    let channelShift = ${h}(bias[currentChannelNumber]) - sum * channelScale;\n\n    output[global_idx] = ${v("channelScale","channelShift")};\n  }`};return e.compute({name:"InstanceNormComputeChannelScaleShift",shaderCache:{hint:`${a};${c}`,inputDependencies:T},getRunData:()=>({outputs:[{dims:[n,l,2],dataType:1}],dispatchGroup:{x:Math.ceil(_/64)},programUniforms:E}),getShaderSource:B},{inputs:[$,r,o],outputs:[-1]})[0]},Zd=(e,t,r)=>{let o=t[0].dims,n=o,s=o[0],l=o[o.length-1],c=z.sizeFromDimension(o,1)/l,a=je(l),m=z.size(n)/a,g=[{type:12,data:c},{type:12,data:Math.floor(l/a)}],h=["type","type"],v=Yd(e,t[0],t[1],t[2],s,c,l,r.epsilon),_=b=>{let S=Ue(t[0].dataType),I=a===1?"vec2f":`mat2x${a}f`,x=a===1?S:`vec${a}<${S}>`,$=U("input",t[0].dataType,t[0].dims,a),E=j("output",t[0].dataType,n,a);return`\n  @group(0) @binding(0) var<storage, read> input : array<${$.type.storage}>;\n  @group(0) @binding(1) var<storage, read> scaleInput : array<${I}>;\n  @group(0) @binding(2) var<storage, read_write> output : array<${E.type.storage}>;\n  struct Uniforms {H: u32, C : u32};\n  @group(0) @binding(3) var<uniform> uniforms: Uniforms;\n\n  ${b.mainStart()}\n    let currentImageNumber = global_idx / (uniforms.C * uniforms.H);\n    let currentChannelNumber = global_idx % uniforms.C;\n\n    let scaleOffset = currentImageNumber * uniforms.C + currentChannelNumber;\n    let scale = scaleInput[scaleOffset];\n    output[global_idx] = fma(input[global_idx], ${x}(scale[0]), ${x}(scale[1]));\n  }`};e.compute({name:"InstanceNormalizationNHWC",shaderCache:{hint:`${a}`,inputDependencies:h},getRunData:()=>({outputs:[{dims:n,dataType:t[0].dataType}],dispatchGroup:{x:Math.ceil(m/64)},programUniforms:g}),getShaderSource:_},{inputs:[t[0],v]})},Gs=(e,t)=>{t.format==="NHWC"?Zd(e,e.inputs,t):e.compute(Kd(e.inputs,t))}});var Qd,Xd,Ls,Fs=Y(()=>{"use strict";he();xe();ve();Qd=e=>{if(!e||e.length<2)throw new Error("layerNorm requires at least 2 inputs.")},Xd=(e,t,r)=>{let o=e[0].dims,n=e[1],s=e[2],l=o,c=z.normalizeAxis(t.axis,o.length),a=z.sizeToDimension(o,c),m=z.sizeFromDimension(o,c),g=z.size(n.dims),h=s?z.size(s.dims):0;if(g!==m||s&&h!==m)throw new Error(`Size of X.shape()[axis:] == ${m}.\n       Size of scale and bias (if provided) must match this.\n       Got scale size of ${g} and bias size of ${h}`);let v=[];for(let T=0;T<o.length;++T)T<c?v.push(o[T]):v.push(1);let _=je(m),b=["type","type"],S=[{type:12,data:a},{type:1,data:m},{type:12,data:Math.floor(m/_)},{type:1,data:t.epsilon}];s&&b.push("type");let I=r>1,x=r>2,$=T=>{let B=Ue(e[0].dataType),M=[U("x",e[0].dataType,e[0].dims,_),U("scale",n.dataType,n.dims,_)];s&&M.push(U("bias",s.dataType,s.dims,_)),M.push(j("output",e[0].dataType,l,_)),I&&M.push(j("mean_data_output",1,v)),x&&M.push(j("inv_std_output",1,v));let W=[{name:"norm_count",type:"u32"},{name:"norm_size",type:"f32"},{name:"norm_size_vectorized",type:"u32"},{name:"epsilon",type:"f32"}];return`\n  ${T.registerUniforms(W).declareVariables(...M)}\n  ${T.mainStart()}\n    ${T.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.norm_count")}\n    let offset = global_idx * uniforms.norm_size_vectorized;\n    var meanVector = ${Je("f32",_)};\n    var meanSquareVector = ${Je("f32",_)};\n\n    for (var h: u32 = 0u; h < uniforms.norm_size_vectorized; h++) {\n      let value = ${pt(B,_,"x[h + offset]")};\n      meanVector += value;\n      meanSquareVector += value * value;\n    }\n    let mean = ${nt("meanVector",_)} / uniforms.norm_size;\n    let invStdDev =\n        inverseSqrt(${nt("meanSquareVector",_)} / uniforms.norm_size - mean * mean + uniforms.epsilon);\n\n    for (var j: u32 = 0; j < uniforms.norm_size_vectorized; j++) {\n      let f32input = ${pt(B,_,"x[j + offset]")};\n      let f32scale = ${pt(B,_,"scale[j]")};\n      output[j + offset] = ${M[0].type.value}((f32input - mean) * invStdDev * f32scale\n        ${s?`+ ${pt(B,_,"bias[j]")}`:""}\n      );\n    }\n\n    ${I?"mean_data_output[global_idx] = mean":""};\n    ${x?"inv_std_output[global_idx] = invStdDev":""};\n  }`},E=[{dims:l,dataType:e[0].dataType}];return I&&E.push({dims:v,dataType:1}),x&&E.push({dims:v,dataType:1}),{name:"LayerNormalization",shaderCache:{hint:`${_};${r}`,inputDependencies:b},getRunData:()=>({outputs:E,dispatchGroup:{x:Math.ceil(a/64)},programUniforms:S}),getShaderSource:$}},Ls=(e,t)=>{Qd(e.inputs),e.compute(Xd(e.inputs,t,e.outputCount))}});var Jd,ec,js,qs,Ks=Y(()=>{"use strict";he();xe();Qe();ve();Jd=(e,t)=>{if(e.length<3||e.length>4)throw new Error("MatMulNBits requires 3 or 4 inputs");let r=e[0],o=r.dims.length;if(r.dims[o-1]!==t.k)throw new Error("The last dim of input shape does not match the k value");let n=Math.floor((t.k+t.blockSize-1)/t.blockSize),s=t.blockSize/8*t.bits,l=e[1];if(!z.areEqual(l.dims,[t.n,n,s]))throw new Error("The second inputs must be 3D tensor with shape N X nBlocksPerCol X blobSize");let a=e[2].dims;if(z.size(a)!==t.n*n)throw new Error("scales input size error.");if(e.length===4){let g=e[3].dims,h=t.bits>4?t.n*n:t.n*Math.floor((n+1)/2);if(z.size(g)!==h)throw new Error("zeroPoints input size error.")}},ec=(e,t)=>{let r=e[0],o=e[1],n=e[2],s=r.dims.length,l=r.dims.slice(0,s-1).concat(t.n),c=z.size(l),a=[{type:12,data:c},{type:12,data:t.k},{type:12,data:t.n},{type:12,data:t.accuracyLevel},{type:12,data:t.bits},{type:12,data:t.blockSize}];a.push(...Z(r.dims)),a.push(...Z(z.convertShape(o.dims))),a.push(...Z(n.dims)),e.length===4&&a.push(...Z(z.convertShape(e[3].dims))),a.push(...Z(l));let m=g=>{let h=U("a",e[0].dataType,e[0].dims.length),v=U("b",12,e[1].dims.length),_=U("scales",e[2].dataType,e[2].dims.length),b=[h,v,_],S=e.length===4?U("zero_points",12,e[3].dims.length):void 0;S&&b.push(S);let I=j("output",e[0].dataType,l.length),x=[{name:"output_size",type:"u32"},{name:"k",type:"u32"},{name:"n",type:"u32"},{name:"accuracy_level",type:"u32"},{name:"bits",type:"u32"},{name:"block_size",type:"u32"}],$=Math.floor((t.k+t.blockSize-1)/t.blockSize),T=t.blockSize/8*t.bits/4,B=Ue(e[0].dataType);return`\n        fn ortUnpack8x4snorm(value: u32) -> array<${B}, 8>{\n          var result = array<${B}, 8>();\n          var offset: u32 = 0;\n          let count: u32 = 4;\n          for (var i: u32 = 0; i < 8u; i++) {\n            result[i] = ${B}(extractBits(value, offset, count));\n            offset += count;\n          }\n          return result;\n        }\n        ${g.registerUniforms(x).declareVariables(...b,I)}\n        ${g.mainStart()}\n          ${g.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n          var value: ${B} = 0.0;\n          let output_indices = ${I.offsetToIndices("global_idx")};\n          var a_indices: ${h.type.indices} = output_indices;\n          var n = ${I.indicesGet("output_indices",s-1)};\n          // Two zero points are packed into one byte because uniforms.bits <= 4.\n          // zero_point_offset is either 0 or 4. It is bit offset within one byte.\n          // TODO support zero_point_offset for bits > 4\n          ${S?`\n            var zero_point_index: u32 = n * ((${$} + 1) / 2) / 4;\n            var zero_point_word: u32 = ${S.getByOffset("zero_point_index")};\n            var zero_point_offset: u32 = 0;`:""}\n          var scale_idex = n * ${$};\n          var b_indices: ${v.type.indices};\n          ${v.indicesSet("b_indices","0","n")};\n          var block_offset: u32 = 0;\n          for (var block: u32 = 0; block < ${$}; block++) {\n            // The scale and zero points are computed per block.\n            let scale = ${_.getByOffset("scale_idex")};\n            // The default zero point is 8 for unsigned 4-bit quantization.\n            let zero_point: ${B} = ${S?`${B}(extractBits(zero_point_word, zero_point_offset, 4))`:8};\n            ${v.indicesSet("b_indices","1","block")};\n            var word_offset: u32 = block_offset;\n            for (var word: u32 = 0; word < ${T}; word++) {\n              ${v.indicesSet("b_indices","2","word")};\n              let b_value = ${v.getByIndices("b_indices")};\n              let b_quantized_values: array<${B}, 8> = ortUnpack8x4snorm(b_value);\n              // Number of B elements per 32-bit word is 32/bits = 32/4 = 8\n              var offset: u32 = word_offset;\n              for (var i: u32 = 0; i < 8; i++) {\n                ${h.indicesSet("a_indices",s-1,"offset")};\n                let a_value = ${h.getByIndices("a_indices")};\n                let b_quantized_value = b_quantized_values[i];\n                let b_dequantized_value = (b_quantized_value - zero_point) * scale;\n                value += a_value * b_dequantized_value;\n                offset++;\n              }\n              word_offset += 8;\n            }\n            scale_idex++;\n            ${S?`\n            if (zero_point_offset == 28) {\n              zero_point_offset = 0;\n              zero_point_index++;\n              zero_point_word = ${S.getByOffset("zero_point_index")};\n            } else {\n              zero_point_offset += 4;\n            }`:""}\n            block_offset += uniforms.block_size;\n          }\n          ${I.setByOffset("global_idx","value")};\n        }\n        `};return{name:"MatMulNBits",shaderCache:{hint:`${t.cacheKey};${e.length}`,inputDependencies:Array(e.length).fill("rank")},getRunData:()=>({outputs:[{dims:l,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(c/64)},programUniforms:a}),getShaderSource:m}},js=(e,t)=>{Jd(e.inputs,t),e.compute(ec(e.inputs,t))},qs=e=>Se(e)});var tc,Zs,Ys,rc,Po,Qs,Xs=Y(()=>{"use strict";he();xe();Qe();vn();ho();ve();lr();tc=(e,t)=>{let r=e[0],o=e[1],n=e[2],s=e[3],l=e[4],c=e[5],a=e[6],m=e[7];if(r.dims.length!==3&&r.dims.length!==5)throw new Error("Input query is expected to have 3 or 5 dimensions");let g=!1,h=r.dims[0],v=r.dims[1],_=r.dims.length===3?g?r.dims[2]/3:r.dims[2]:t.numHeads*r.dims[4],b=v,S=0,I=0,x=Math.floor(_/t.numHeads);if(a&&m){if(a.dims.length!==4)throw new Error(\'Input "past_key" is expected to have 4 dimensions\');if(m.dims.length!==4)throw new Error(\'Input "past_value" is expected to have 4 dimensions\');S=a.dims[2],I=a.dims[2]}else if(a||m)throw new Error(\'Input "past_key" and "past_value" shall be both present or both absent\');let $;if(o){if(r.dims.length!==3)throw new Error(\'Input "query" is expected to have 3 dimensions when key is given\');if(o.dims.length<3||o.dims.length>5)throw new Error(\'Input "key" is expected to have 3, 4, or 5 dimensions\');if(r.dims[0]!==o.dims[0])throw new Error(\'Input "query" and "key" shall have same dim 0 (batch size)\');if(o.dims.length===3){if(o.dims[2]!==r.dims[2])throw new Error(\'Input "query" and "key" shall have same dim 2 (hidden_size)\');$=2,b=o.dims[1]}else if(o.dims.length===5){if(o.dims[2]!==t.numHeads||o.dims[3]!==2||o.dims[4]!==x)throw new Error(\'Expect "key" shape (batch_size, kv_sequence_length, num_heads, 2, head_size) for packed kv\');if(n)throw new Error(\'Expect "value" be none when "key" has packed kv format.\');$=5,b=o.dims[1]}else{if(o.dims[1]!==t.numHeads||o.dims[3]!==x)throw new Error(\'Expect "key" shape (batch_size, num_heads, kv_sequence_length, head_size) for past_key\');$=0,b=o.dims[2]}}else{if(r.dims.length!==3&&r.dims.length!==5)throw new Error(\'Input "query" is expected to have 3 or 5 dimensions when key is empty\');if(r.dims.length===5&&(r.dims[2]!==t.numHeads||r.dims[3]!==3))throw new Error(\'Expect "query" shape (batch_size, kv_sequence_length, num_heads, 3, head_size) for packed kv\');$=3}if(s){if(s.dims.length!==1)throw new Error(\'Input "bias" is expected to have 1 dimension\');if(n&&r.dims.length===5&&r.dims[3]===2)throw new Error("bias is not allowed for packed kv.")}let E=0;if(l){E=8;let q=l.dims;throw q.length===1?q[0]===h?E=1:q[0]===3*h+2&&(E=3):q.length===2&&q[0]===h&&q[1]===b&&(E=5),E===8?new Error(\'Input "key_padding_mask" shape shall be (batch_size) or (batch_size, kv_sequence_length)\'):new Error("Mask not supported")}let T=!1,B=_;if(n){if(n.dims.length!==3&&n.dims.length!==4)throw new Error(\'Input "value" is expected to have 3 or 4 dimensions\');if(r.dims[0]!==n.dims[0])throw new Error(\'Input "query" and "value" shall have same dim 0 (batch_size)\');if(n.dims.length===3){if(b!==n.dims[1])throw new Error(\'Input "key" and "value" shall have the same dim 1 (kv_sequence_length)\');B=n.dims[2]}else{if(b!==n.dims[2])throw new Error(\'Input "past_key" and "past_value" shall have the same dim 2 (kv_sequence_length)\');B=n.dims[1]*n.dims[3],T=!0}}let M=S+b,W=!1;if(l)throw new Error("Key padding mask is not supported");if(c)throw new Error("extraAddQk is not supported");if(a)throw new Error("pastKey is not supported");if(m)throw new Error("pastValue is not supported");return{batchSize:h,sequenceLength:v,pastSequenceLength:S,kvSequenceLength:b,totalSequenceLength:M,maxSequenceLength:I,inputHiddenSize:0,hiddenSize:_,vHiddenSize:B,headSize:x,vHeadSize:Math.floor(B/t.numHeads),numHeads:t.numHeads,isUnidirectional:!1,pastPresentShareBuffer:!1,maskFilterValue:t.maskFilterValue,maskType:E,scale:t.scale,broadcastResPosBias:W,passPastInKv:T,qkvFormat:$}},Zs=e=>Se({...e}),Ys=Se({perm:[0,2,1,3]}),rc=(e,t,r,o,n,s,l)=>{let c=[o,n,s],a=z.size(c),m=[{type:12,data:a},{type:12,data:l},{type:12,data:s}],g=h=>{let v=j("qkv_with_bias",t.dataType,c),_=U("qkv",t.dataType,c),b=U("bias",r.dataType,c),S=[{name:"output_size",type:"u32"},{name:"bias_offset",type:"u32"},{name:"hidden_size",type:"u32"}];return`\n  ${h.registerUniforms(S).declareVariables(_,b,v)}\n  ${h.mainStart()}\n    ${h.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n    let bias_offset_idx = (global_idx % uniforms.hidden_size) + uniforms.bias_offset;\n\n    qkv_with_bias[global_idx] = qkv[global_idx] + bias[bias_offset_idx];\n  }`};return e.compute({name:"MultiHeadAttentionAddBias",shaderCache:{inputDependencies:["type","type"]},getRunData:()=>({outputs:[{dims:c,dataType:t.dataType,gpuDataType:0}],dispatchGroup:{x:Math.ceil(a/64)},programUniforms:m}),getShaderSource:g},{inputs:[t,r],outputs:[-1]})[0]},Po=(e,t,r,o,n,s,l,c)=>{let a=s;if(l){if(o===1)throw new Error("AddBiasReshape is not implemented. Please export your model with packed QKV or KV");return a=rc(e,s,l,t,o,r*n,c),a=a.reshape([t,o,r,n]),e.compute(mt(a,Ys.perm),{inputs:[a],outputs:[-1]})[0]}else return s.dims.length===3&&(a=s.reshape([t,o,r,n])),e.compute(mt(a,Ys.perm),{inputs:[a],outputs:[-1]})[0]},Qs=(e,t)=>{let r=tc(e.inputs,t);if(e.inputs[0].dims.length===5)throw new Error("Packed QKV is not implemented");if(e.inputs[1]?.dims.length===5)throw new Error("Packed KV is not implemented");let o=e.inputs[1]&&e.inputs[2]&&e.inputs[1].dims.length===4&&e.inputs[2].dims.length===4,n=Po(e,r.batchSize,r.numHeads,r.sequenceLength,r.headSize,e.inputs[0],e.inputs[3],0);if(o)return En(e,n,e.inputs[1],e.inputs[2],e.inputs[4],void 0,void 0,void 0,e.inputs[5],r,t);let s=Po(e,r.batchSize,r.numHeads,r.kvSequenceLength,r.headSize,e.inputs[1],e.inputs[3],r.hiddenSize),l=Po(e,r.batchSize,r.numHeads,r.kvSequenceLength,r.vHeadSize,e.inputs[2],e.inputs[3],2*r.hiddenSize);En(e,n,s,l,e.inputs[4],void 0,e.inputs[6],e.inputs[7],e.inputs[5],r,t)}});var nc,oc,ac,ic,sc,uc,lc,dc,Js,eu=Y(()=>{"use strict";he();xe();ve();nc=e=>{if(!e||e.length<1)throw new Error("Too few inputs");if(e[0].dataType!==1&&e[0].dataType!==10)throw new Error("Input type must be float or float16.");if(e.length>=2){let t=e[0].dims.length*2===e[1].dims[0];if(e.length===4&&(t=e[3].dims[0]*2===e[1].dims[0]),!t)throw new Error("The pads should be a 1D tensor of shape [2 * input_rank] or [2 * num_axes].")}},oc=(e,t,r)=>{let o="";for(let n=t-1;n>=0;--n)o+=`\n            k = i32(${e.indicesGet("indices",n)}) - ${de("uniforms.pads",n,r)};\n            if (k < 0) {\n              break;\n            }\n            if (k >= i32(${de("uniforms.x_shape",n,t)})) {\n              break;\n            }\n            offset += k * i32(${de("uniforms.x_strides",n,t)});\n        `;return`\n          value = ${e.type.value}(uniforms.constant_value);\n          for (var i = 0; i < 1; i++) {\n            var offset = 0;\n            var k = 0;\n            ${o}\n            value = x[offset];\n          }\n      `},ac=(e,t,r)=>{let o="";for(let n=t-1;n>=0;--n)o+=`\n                k = i32(${e.indicesGet("indices",n)}) - ${de("uniforms.pads",n,r)};\n                if (k < 0) {\n                  k = -k;\n                }\n                {\n                  let _2n_1 = 2 * (i32(${de("uniforms.x_shape",n,t)}) - 1);\n                  k = k % _2n_1;\n                  if(k >= i32(${de("uniforms.x_shape",n,t)})) {\n                    k = _2n_1 - k;\n                  }\n                }\n                offset += k * i32(${de("uniforms.x_strides",n,t)});\n            `;return`\n              var offset = 0;\n              var k = 0;\n              ${o}\n              value = x[offset];\n          `},ic=(e,t,r)=>{let o="";for(let n=t-1;n>=0;--n)o+=`\n                k = i32(${e.indicesGet("indices",n)}) - ${de("uniforms.pads",n,r)};\n                if (k < 0) {\n                  k = 0;\n                }\n                if (k >= i32(${de("uniforms.x_shape",n,t)})) {\n                  k = i32(${de("uniforms.x_shape",n,t)}) - 1;\n                }\n                offset += k * i32(${de("uniforms.x_strides",n,t)});\n            `;return`\n              var offset = 0;\n              var k = 0;\n              ${o}\n              value = x[offset];\n          `},sc=(e,t,r)=>{let o="";for(let n=t-1;n>=0;--n)o+=`\n                k = i32(${e.indicesGet("indices",n)}) - ${de("uniforms.pads",n,r)};\n                if (k < 0)  {\n                  k += i32(${de("uniforms.x_shape",n,t)}]);\n                }\n                if (k >= i32(${de("uniforms.x_shape",n,t)})) {\n                  k -= i32(${de("uniforms.x_shape",n,t)});\n                }\n                offset += k * i32(${de("uniforms.x_strides",n,t)});\n            `;return`\n              var offset = 0;\n              var k = 0;\n              ${o}\n              value = x[offset];\n          `},uc=(e,t,r)=>{switch(r.mode){case 0:return oc(e,t,r.pads.length);case 1:return ac(e,t,r.pads.length);case 2:return ic(e,t,r.pads.length);case 3:return sc(e,t,r.pads.length);default:throw new Error("Invalid mode")}},lc=(e,t)=>{let r=z.padShape(e[0].dims.slice(),t.pads),o=e[0].dims,n=z.size(r),s=[{type:12,data:n},{type:12,data:t.pads}];t.mode===0&&s.push({type:e[0].dataType,data:t.value}),s.push(...Z(e[0].dims,r));let l=["rank"],c=a=>{let m=j("output",e[0].dataType,r.length),g=U("x",e[0].dataType,o.length),h=g.type.value,v=uc(m,o.length,t),_=[{name:"output_size",type:"u32"},{name:"pads",type:"i32",length:t.pads.length}];return t.mode===0&&_.push({name:"constant_value",type:h}),`\n            ${a.registerUniforms(_).declareVariables(g,m)}\n            ${a.mainStart()}\n            ${a.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n\n            let indices = ${m.offsetToIndices("global_idx")};\n\n            var value = ${h}(0);\n            ${v}\n            output[global_idx] = value;\n        }`};return{name:"Pad",shaderCache:{hint:`${t.mode}`,inputDependencies:l},getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(z.size(r)/64)},programUniforms:s}),getShaderSource:c}},dc=(e,t)=>{if(e.length>1){let r=e[1].getBigInt64Array(),o=e.length>=3&&e[2].data?e[2].getFloat32Array()[0]:0,n=e[0].dims.length,s=new Int32Array(2*n).fill(0);if(e.length>=4){let c=e[3].getBigInt64Array();for(let a=0;a<c.length;a++)s[Number(c[a])]=Number(r[a]),s[Number(c[a])+n]=Number(r[a+c.length])}else r.forEach((c,a)=>s[Number(a)]=Number(c));let l=[];return s.forEach(c=>l.push(c)),{mode:t.mode,value:o,pads:l}}else return t},Js=(e,t)=>{nc(e.inputs);let r=dc(e.inputs,t);e.compute(lc(e.inputs,r),{inputs:[0]})}});var Vn,tu,ru,nu,ou,cc,pc,au,iu,su,uu,lu,du,cu,pu,mu,fu,hu,gu,yu=Y(()=>{"use strict";sr();he();xe();ve();Vn=e=>{if(ir.webgpu.validateInputContent&&(!e||e.length!==1))throw new Error("Pool ops requires 1 input.")},tu=(e,t,r)=>{let o=t.format==="NHWC",n=e.dims.slice();o&&n.splice(1,0,n.pop());let s=Object.hasOwnProperty.call(t,"dilations"),l=t.kernelShape.slice(),c=t.strides.slice(),a=s?t.dilations.slice():[],m=t.pads.slice();Ft.adjustPoolAttributes(r,n,l,c,a,m);let g=Ft.computePoolOutputShape(r,n,c,a,l,m,t.autoPad),h=Object.assign({},t);s?Object.assign(h,{kernelShape:l,strides:c,pads:m,dilations:a,cacheKey:t.cacheKey}):Object.assign(h,{kernelShape:l,strides:c,pads:m,cacheKey:t.cacheKey});let v=g.slice();return v.push(v.splice(1,1)[0]),[h,o?v:g]},ru=(e,t)=>{let r=t.format==="NHWC",o=z.size(e),n=z.size(t.kernelShape),s=[{type:12,data:o},{type:12,data:n}],l=[{name:"outputSize",type:"u32"},{name:"kernelSize",type:"u32"}];if(t.kernelShape.length<=2){let c=t.kernelShape[t.kernelShape.length-1],a=t.strides[t.strides.length-1],m=t.pads[t.pads.length/2-1],g=t.pads[t.pads.length-1],h=!!(m+g);s.push({type:12,data:c},{type:12,data:a},{type:12,data:m},{type:12,data:g}),l.push({name:"kw",type:"u32"},{name:"sw",type:"u32"},{name:"pwStart",type:"u32"},{name:"pwEnd",type:"u32"});let v=!1;if(t.kernelShape.length===2){let _=t.kernelShape[t.kernelShape.length-2],b=t.strides[t.strides.length-2],S=t.pads[t.pads.length/2-2],I=t.pads[t.pads.length-2];v=!!(S+I),s.push({type:12,data:_},{type:12,data:b},{type:12,data:S},{type:12,data:I}),l.push({name:"kh",type:"u32"},{name:"sh",type:"u32"},{name:"phStart",type:"u32"},{name:"phEnd",type:"u32"})}return[s,l,!0,h,v]}else{if(r)throw new Error("Pooling with kernelShape.length > 2 is not supported for NHWC format.");let c=z.computeStrides(t.kernelShape);s.push({type:12,data:c},{type:12,data:t.pads},{type:12,data:t.strides}),l.push({name:"kernelStrides",type:"u32",length:c.length},{name:"pads",type:"u32",length:t.pads.length},{name:"strides",type:"u32",length:t.strides.length});let a=t.pads.reduce((m,g)=>m+g);return[s,l,!!a,!1,!1]}},nu=(e,t,r,o,n,s,l,c,a,m,g,h)=>{let v=n.format==="NHWC",_=t.type.value,b=j("output",t.type.tensor,o);if(n.kernelShape.length<=2){let S="",I="",x="",$=r-(v?2:1);if(g?S=`\n                for (var i: u32 = 0u; i < uniforms.kw; i++) {\n                  xIndices[${$}] = indices[${$}] * uniforms.sw - uniforms.pwStart + i;\n                  if (xIndices[${$}] < 0 || xIndices[${$}]\n                      >= uniforms.x_shape[${$}]) {\n                    pad++;\n                    continue;\n                  }\n                  let x_val = x[${t.indicesToOffset("xIndices")}];\n                  ${s}\n                }`:S=`\n                for (var i: u32 = 0u; i < uniforms.kw; i++) {\n                  xIndices[${$}] = indices[${$}] * uniforms.sw - uniforms.pwStart + i;\n                  let x_val = x[${t.indicesToOffset("xIndices")}];\n                  ${s}\n                }`,n.kernelShape.length===2){let T=r-(v?3:2);h?I=`\n                for (var j: u32 = 0u; j < uniforms.kh; j++) {\n                  xIndices[${T}] = indices[${T}] * uniforms.sh - uniforms.phStart + j;\n                  if (xIndices[${T}] < 0 || xIndices[${T}] >= uniforms.x_shape[${T}]) {\n                    pad += i32(uniforms.kw);\n                    continue;\n                  }\n              `:I=`\n                for (var j: u32 = 0u; j < uniforms.kh; j++) {\n                  xIndices[${T}] = indices[${T}] * uniforms.sh - uniforms.phStart + j;\n                `,x=`\n              }\n            `}return`\n            ${e.registerUniforms(a).declareVariables(t,b)}\n\n            ${e.mainStart()}\n              ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n\n              let indices = ${b.offsetToIndices("global_idx")};\n              var xIndices = ${b.offsetToIndices("global_idx")};\n\n              var value = ${_}(${c});\n              var pad = 0;\n              ${I}\n              ${S}\n              ${x}\n              ${l}\n\n              output[global_idx] = value;\n            }`}else{if(v)throw new Error("Pooling with kernelShape.length > 2 is not supported for NHWC format.");let S=n.kernelShape.length,I=n.pads.length,x="";return m?x=`\n                if (xIndices[j] >= uniforms.x_shape[j]) {\n                  pad++;\n                  isPad = true;\n                  break;\n                }\n              }\n              if (!isPad) {\n                let x_val = x[${t.indicesToOffset("xIndices")}];\n                ${s}\n              }`:x=`\n              }\n              let x_val = x[${t.indicesToOffset("xIndices")}];\n              ${s}\n            `,`\n            ${e.registerUniforms(a).declareVariables(t,b)}\n\n            ${e.mainStart()}\n              ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n              let indices = ${b.offsetToIndices("global_idx")};\n              var xIndices = ${b.offsetToIndices("global_idx")};\n\n              var offsets: array<u32, ${S}>;\n\n              var value = ${_}(${c});\n              var pad = 0;\n              var isPad = false;\n\n              for (var i: u32 = 0u; i < uniforms.kernelSize; i++) {\n                var offset = i;\n                for (var j = 0u; j < ${S-1}u; j++) {\n                  offsets[j] = offset / ${de("uniforms.kernelStrides","j",S)};\n                  offset -= offsets[j] * ${de("uniforms.kernelStrides","j",S)};\n                }\n                offsets[${S-1}] = offset;\n\n                isPad = false;\n                for (var j = ${r-S}u; j < ${r}u; j++) {\n                  xIndices[j] = indices[j] * ${de("uniforms.strides",`j - ${r-S}u`,S)}\n                    + offsets[j - ${r-S}u] - ${de("uniforms.pads","j - 2u",I)};\n                  ${x}\n              }\n              ${l}\n\n              output[global_idx] = value;\n            }`}},ou=e=>`${e.format};${e.ceilMode};${e.autoPad};${e.kernelShape.length}`,cc=e=>`${ou(e)};${e.countIncludePad}`,pc=e=>`${ou(e)};${e.storageOrder};${e.dilations}`,au=e=>({format:e.format,autoPad:["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][e.auto_pad],ceilMode:e.ceil_mode,kernelShape:e.kernel_shape,strides:e.strides,pads:e.pads}),iu=(e,t,r,o)=>{let[n,s]=tu(t,o,r),l=U("x",t.dataType,t.dims.length),c=l.type.value,a="value += x_val;",m="";n.countIncludePad?m+=`value /= ${c}(uniforms.kernelSize);`:m+=`value /= ${c}(i32(uniforms.kernelSize) - pad);`;let[g,h,v,_,b]=ru(s,n);g.push(...Z(t.dims,s));let S=["rank"];return{name:e,shaderCache:{hint:`${o.cacheKey};${v};${_};${b}`,inputDependencies:S},getRunData:()=>({outputs:[{dims:s,dataType:t.dataType}],dispatchGroup:{x:Math.ceil(z.size(s)/64)},programUniforms:g}),getShaderSource:I=>nu(I,l,t.dims.length,s.length,n,a,m,0,h,v,_,b)}},su=e=>{let t=e.count_include_pad!==0,r=au(e);if(r.ceilMode!==0)throw new Error("using ceil() in shape computation is not yet supported for AveragePool");let o={countIncludePad:t,...r,cacheKey:""};return{...o,cacheKey:cc(o)}},uu=(e,t)=>{Vn(e.inputs),e.compute(iu("AveragePool",e.inputs[0],!1,t))},lu={autoPad:"",ceilMode:0,countIncludePad:!1,kernelShape:[],strides:[],pads:[],storageOrder:0,dilations:[]},du=e=>{let t=e.format;return{format:t,...lu,cacheKey:t}},cu=(e,t)=>{Vn(e.inputs),e.compute(iu("GlobalAveragePool",e.inputs[0],!0,t))},pu=(e,t,r,o)=>{let[n,s]=tu(t,o,r),l=`\n      value = max(x_val, value);\n    `,c="",a=U("x",t.dataType,t.dims.length),m=["rank"],[g,h,v,_,b]=ru(s,n);return g.push(...Z(t.dims,s)),{name:e,shaderCache:{hint:`${o.cacheKey};${v};${_};${b}`,inputDependencies:m},getRunData:()=>({outputs:[{dims:s,dataType:t.dataType}],dispatchGroup:{x:Math.ceil(z.size(s)/64)},programUniforms:g}),getShaderSource:S=>nu(S,a,t.dims.length,s.length,n,l,c,-1e5,h,v,_,b)}},mu=(e,t)=>{Vn(e.inputs),e.compute(pu("MaxPool",e.inputs[0],!1,t))},fu=e=>{let t=e.storage_order,r=e.dilations,o=au(e);if(t!==0)throw new Error("column major storage order is not yet supported for MaxPool");if(o.ceilMode!==0)throw new Error("using ceil() in shape computation is not yet supported for MaxPool");let n={storageOrder:t,dilations:r,...o,cacheKey:""};return{...n,cacheKey:pc(n)}},hu=e=>{let t=e.format;return{format:t,...lu,cacheKey:t}},gu=(e,t)=>{Vn(e.inputs),e.compute(pu("GlobalMaxPool",e.inputs[0],!0,t))}});var fc,hc,bu,wu=Y(()=>{"use strict";sr();he();ve();fc=(e,t,r)=>{let o=e===t,n=e<t&&r<0,s=e>t&&r>0;if(o||n||s)throw new Error("Range these inputs\' contents are invalid.")},hc=(e,t,r,o)=>{let n=Math.abs(Math.ceil((t-e)/r)),s=[n],l=n,c=[{type:12,data:l},{type:o,data:e},{type:o,data:r},...Z(s)],a=m=>{let g=j("output",o,s.length),h=g.type.value,v=[{name:"outputSize",type:"u32"},{name:"start",type:h},{name:"delta",type:h}];return`\n        ${m.registerUniforms(v).declareVariables(g)}\n        ${m.mainStart()}\n        ${m.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n        output[global_idx] = uniforms.start + ${h}(global_idx) * uniforms.delta;\n      }`};return{name:"Range",shaderCache:{hint:`${o}`},getShaderSource:a,getRunData:()=>({outputs:[{dims:s,dataType:o}],dispatchGroup:{x:Math.ceil(l/64)},programUniforms:c})}},bu=e=>{let t=0,r=0,o=0;e.inputs[0].dataType===6?(t=e.inputs[0].getInt32Array()[0],r=e.inputs[1].getInt32Array()[0],o=e.inputs[2].getInt32Array()[0]):e.inputs[0].dataType===1&&(t=e.inputs[0].getFloat32Array()[0],r=e.inputs[1].getFloat32Array()[0],o=e.inputs[2].getFloat32Array()[0]),ir.webgpu.validateInputContent&&fc(t,r,o),e.compute(hc(t,r,o,e.inputs[0].dataType),{inputs:[]})}});var gc,yc,bc,wc,vc,$c,_c,Sc,xc,Cc,Ic,vu,Ac,Tc,Ec,Pc,Oc,$u,_u,Su=Y(()=>{"use strict";he();xe();Qe();ve();gc=(e,t)=>{if(e.every(r=>r>0||(()=>{throw new Error("Resize requires scales input values to be positive")})),e.length>0){if(t.mode==="linear"){if(!(e.length===2||e.length===3||e.length===4&&e[0]===1&&e[1]===1||e.length===4&&e[0]===1&&e[3]===1||e.length===5&&e[0]===1&&e[1]===1))throw new Error(`For linear mode, Resize requires scales to be 2D, 3D, 4D with either two outermost or one innermost and\n            one outermost scale values equal to 1, or 5D with two outermost scale values equal to 1`)}else if(t.mode==="cubic"&&!(e.length===2||e.length===4&&e[0]===1&&e[1]===1||e.length===4&&e[0]===1&&e[3]===1))throw new Error("Resize requires scales input size to be 2 or 4 for cubic mode")}},yc=(e,t,r)=>{t.every(n=>n>=0&&n<r||(()=>{throw new Error("Resize requires axes input values to be positive and less than rank")}));let o=new Array(r).fill(1);return t.forEach((n,s)=>o[n]=e[s]),o},bc=(e,t,r,o,n,s)=>{let[l,c,a]=r>10?[1,2,3]:[-1,e.length>1?1:-1,-1],m=e[0].dims.length;if(l>0&&e.length>l&&e[l].dims.length>0)e[l].getFloat32Array().forEach(g=>s.push(g));else if(t.coordinateTransformMode==="tf_crop_and_resize")throw new Error("Resize requires RoI input to be specified when coordinateTransformMode is tfCropAndResize");if(c>0&&e.length>c&&e[c].dims.length>0){if(e[c].getFloat32Array().forEach(g=>o.push(g)),o.length!==0&&o.length!==m&&r>=18&&o.length!==t.axes.length)throw new Error("Resize requires scales input size to be same as input rank or axes size for opset 18 and up");gc(o,t),t.axes.length>0&&yc(o,t.axes,m).forEach((g,h)=>o[h]=g)}if(a>0&&e.length>a&&(e[a].getBigInt64Array().forEach(g=>n.push(Number(g))),n.length!==m||r>=18&&n.length===t.axes.length))throw new Error("Resize requires sizes input size to be same as input rank or axes size for opset 18 and up");if(t.axes.length>0){if(o.length!==t.axes.length)throw new Error(\'Resize requires "scales" input size to be of axes rank when axes attributes is specified\');if(n.length!==t.axes.length)throw new Error(\'Resize requires "sizes" input size to be of rank axes rank when axes attributes is specified\')}if(typeof o<"u"&&typeof n<"u"&&o.length>0&&n.length>m)throw new Error("Resize requires only of scales or sizes to be specified")},wc=(e,t)=>`fn getOriginalCoordinateFromResizedCoordinate(xResized: u32, xScale: f32, lengthResized: u32,\n     lengthOriginal: u32, roiStart: f32, roiEnd: f32) -> ${t} { `+(()=>{switch(e){case"asymmetric":return`return ${t}(xResized) / ${t}(xScale);`;case"pytorch_half_pixel":return`if (lengthResized > 1) {\n                    return (${t}(xResized) + 0.5) / ${t}(xScale) - 0.5;\n                  } else {\n                    return 0.0;\n                  }`;case"tf_half_pixel_for_nn":return`return (${t}(xResized) + 0.5) / ${t}(xScale);`;case"align_corners":return`if (lengthResized == 1) {\n                    return 0.0;\n                  } else {\n                    // The whole part and the fractional part are calculated separately due to inaccuracy of floating\n                    // point division. As an example, f32(21) / f32(7) may evaluate to 2.99... instead of 3, causing an\n                    // offset-by-one error later in floor().\n                    let whole = ${t}(xResized * (lengthOriginal - 1) / (lengthResized - 1));\n                    let fract =\n                        ${t}(xResized * (lengthOriginal - 1) % (lengthResized - 1)) / ${t}(lengthResized - 1);\n                    return whole + fract;\n                  }`;case"tf_crop_and_resize":return`if (lengthResized > 1) {\n                    return ${t}(roiStart) * ${t}(lengthOriginal - 1) +\n                        (${t}(xResized) * ${t}(roiEnd - roiStart) * ${t}(lengthOriginal - 1)) /\n                        ${t}(lengthResized - 1);\n                  } else {\n                    return 0.5 * ${t}(roiStart + roiEnd) * ${t}(lengthOriginal - 1);\n                  }`;case"half_pixel_symmetric":return`const outputWidth = ${t}xScale * ${t}(lengthResized);\n                  const adjustment = ${t}(lengthResized) / outputWidth;\n                  const center = ${t}(lengthOriginal) / 2;\n                  const offset = center * (1 - adjustment);\n                  return offset + ((${t}(xResized) + 0.5) / ${t}(xScale)) - 0.5;`;case"half_pixel":return`return ((${t}(xResized) + 0.5) / ${t}(xScale)) - 0.5;`;default:throw new Error(`Coordinate transform mode ${e} is not supported`)}})()+"}",vc=(e,t,r)=>`fn getNearestPixelFromOriginal(xOriginal: ${r}, isDownSample: bool) -> ${r} {`+(()=>{switch(e){case"round_prefer_ceil":return"if (fract(xOriginal) == 0.5) {             return ceil(xOriginal);           } else {             return round(xOriginal);           }";case"floor":return"return floor(xOriginal);";case"ceil":return"return ceil(xOriginal);";case"round_prefer_floor":return"if (fract(xOriginal) == 0.5) {                     return floor(xOriginal);                   } else {                     return round(xOriginal);                   }";case"simple":default:if(t<11)return"if (isDownSample)                     {                       return ceil(xOriginal);                     } else {                       return xOriginal;                     }";throw new Error(`Nearest mode ${e} is not supported`)}})()+"}",$c=(e,t,r)=>{let o=new Array(r).fill(0).concat(new Array(r).fill(1)),n=e.length===0?o:e.slice();return t.length>0?(t.forEach((s,l)=>{o[s]=n[l],o[l+r]=n[t.length+l]}),o):n},_c=(e,t,r,o)=>{let n=[];if(r.length>0)if(o.length>0){if(e.forEach(s=>n.push(s)),Math.max(...o)>e.length)throw new Error("axes is out of bound");o.forEach((s,l)=>n[s]=r[l])}else r.forEach(s=>n.push(s));else{if(t.length===0)throw new Error("Resize requires either scales or sizes.");n=e.map((s,l)=>Math.round(s*t[l]))}return n},Sc=(e,t,r)=>{let o=(()=>{switch(r.keepAspectRatioPolicy){case"not_larger":return r.axes.length>0?Math.min(...r.axes.map(s=>t[s]),Number.MAX_VALUE):Math.min(...t,Number.MAX_VALUE);case"not_smaller":return r.axes.length>0?Math.max(...r.axes.map(s=>t[s]),Number.MIN_VALUE):Math.max(...t,Number.MIN_VALUE);default:throw new Error(`Keep aspect ratio policy ${r.keepAspectRatioPolicy} is not supported`)}})();t.fill(1,0,t.length);let n=e.slice();return r.axes.length>0?(r.axes.forEach(s=>t[s]=o),r.axes.forEach(s=>n[s]=Math.round(e[s]*t[s]))):(t.fill(o,0,t.length),n.forEach((s,l)=>n[l]=Math.round(s*t[l]))),n},xc=(e,t,r,o,n)=>`\n    fn calculateOriginalIndicesFromOutputIndices(output_indices: ${e.type.indices}) -> array<${e.type.value}, ${r.length}> {\n      var original_indices: array<${e.type.value}, ${r.length}>;\n      for (var i:u32 = 0; i < ${r.length}; i++) {\n        var output_index = ${e.indicesGet("output_indices","i")};\n        var scale = ${de("uniforms.scales","i",o)};\n        var roi_low = ${de("uniforms.roi","i",n)};\n        var roi_hi = ${de("uniforms.roi",`i + ${t.length}`,n)};\n        if (scale == 1.0) {\n          original_indices[i] = ${e.type.value}(output_index);\n        } else {\n          var input_shape_i = ${de("uniforms.input_shape","i",t.length)};\n          var output_shape_i = ${de("uniforms.output_shape","i",r.length)};\n          original_indices[i] = getOriginalCoordinateFromResizedCoordinate(output_index, scale, output_shape_i,\n                                                                           input_shape_i, roi_low, roi_hi);\n        }\n      }\n      return original_indices;\n    }`,Cc=(e,t,r,o,n,s,l)=>`\n    fn calculateInputIndicesFromOutputIndices(output_indices: ${t.type.indices}) -> ${e.type.indices} {\n      var input_indices: ${e.type.indices};\n      for (var i:u32 = 0; i < ${o.length}; i++) {\n        var output_index = ${t.indicesGet("output_indices","i")};\n        var input_index: u32;\n        var scale = ${de("uniforms.scales","i",n)};\n        if (scale == 1.0) {\n          input_index = output_index;\n        } else {\n          var roi_low = ${de("uniforms.roi","i",s)};\n          var roi_hi = ${de("uniforms.roi",`i + ${r.length}`,s)};\n          var input_shape_i = ${de("uniforms.input_shape","i",r.length)};\n          var output_shape_i = ${de("uniforms.output_shape","i",o.length)};\n          var original_idx = getOriginalCoordinateFromResizedCoordinate(output_index, scale, output_shape_i,\n                                                                        input_shape_i, roi_low, roi_hi);\n          if (!${l} || (original_idx >= 0 && original_idx < ${t.type.value}(input_shape_i))) {\n            if (original_idx < 0) {\n              input_index = 0;\n            } else if (original_idx > ${t.type.value}(input_shape_i - 1)) {\n              input_index = input_shape_i - 1;\n            } else {\n              input_index = u32(getNearestPixelFromOriginal(original_idx, scale < 1));\n            }\n          } else {\n            input_index = u32(original_idx);\n          }\n        }\n        ${e.indicesSet("input_indices","i"," input_index")}\n      }\n      return input_indices;\n    }`,Ic=(e,t)=>`\n    fn checkInputIndices(input_indices: ${e.type.indices}) -> bool {\n      for (var i:u32 = 0; i < ${t.length}; i++) {\n        var input_index = ${e.indicesGet("input_indices","i")};\n        if (input_index < 0 || input_index >= ${de("uniforms.input_shape","i",t.length)}) {\n          return false;\n        }\n      }\n      return true;\n    }`,vu=(e,t,r,o)=>e.rank>o?`\n    ${e.indicesSet("input_indices",t,"channel")};\n    ${e.indicesSet("input_indices",r,"batch")};\n`:"",Ac=(e,t,r,o,n)=>{let[l,c,a,m]=r.length===2?[-1,0,1,-1]:[0,2,3,1],g=e.type.value;return`\n    fn getInputValue(batch: u32, channel: u32, row: u32, col: u32) -> ${g} {\n      var input_indices: ${e.type.indices};\n      ${e.indicesSet("input_indices",c,`max(0, min(row, ${r[c]} - 1))`)};\n      ${e.indicesSet("input_indices",a,`max(0, min(col, ${r[a]} - 1))`)};\n      ${vu(e,m,l,2)}\n      return ${e.getByIndices("input_indices")};\n    }\n\n    fn bilinearInterpolation(output_indices: ${t.type.indices}) -> ${g} {\n      var originalIndices = calculateOriginalIndicesFromOutputIndices(output_indices);\n      var row:${g} = originalIndices[${c}];\n      var col:${g} = originalIndices[${a}];\n      ${o?`if (row < 0 || row > (${r[c]} - 1) || col < 0 || col > (${r[a]} - 1)) {\n        return ${n};\n      }`:""};\n      row = max(0, min(row, ${r[c]} - 1));\n      col = max(0, min(col, ${r[a]} - 1));\n      var row1: u32 = u32(row);\n      var col1: u32 = u32(col);\n      var row2: u32 = u32(row + 1);\n      var col2: u32 = u32(col + 1);\n      var channel: u32 = ${r.length>2?`u32(originalIndices[${m}])`:"0"};\n      var batch: u32 =  ${r.length>2?`u32(originalIndices[${l}])`:"0"};\n      var x11: ${g} = getInputValue(batch, channel, row1, col1);\n      var x12: ${g} = getInputValue(batch, channel, row1, col2);\n      var x21: ${g} = getInputValue(batch, channel, row2, col1);\n      var x22: ${g} = getInputValue(batch, channel, row2, col2);\n      var dx1: ${g} = abs(row - ${g}(row1));\n      var dx2: ${g} = abs(${g}(row2) - row);\n      var dy1: ${g} = abs(col - ${g}(col1));\n      var dy2: ${g} = abs(${g}(col2) - col);\n      if (row1 == row2) {\n        dx1 = 0.5;\n        dx2 = 0.5;\n      }\n      if (col1 == col2) {\n        dy1 = 0.5;\n        dy2 = 0.5;\n      }\n      return (x11 * dx2 * dy2 + x12 * dx2 * dy1 + x21 * dx1 * dy2 + x22 * dx1 * dy1);\n    }`},Tc=(e,t,r,o,n,s,l,c,a,m)=>{let g=r.length===2,h=!0,[v,_]=g?[0,1]:h?[2,3]:[1,2],b=e.type.value,S=I=>{let x=I===v?"row":"col";return`\n      fn ${x}CubicInterpolation(input_indices: ${e.type.indices}, output_indices: ${t.type.indices}) -> ${b} {\n        var output_index = ${t.indicesGet("output_indices",I)};\n        var originalIdx: ${b} = getOriginalCoordinateFromResizedCoordinate(output_index, ${n[I]},\n        ${o[I]}, ${r[I]}, ${s[I]}, ${s[I]} + ${r.length});\n        var fractOriginalIdx: ${b} = originalIdx - floor(originalIdx);\n        var coefs = getCubicInterpolationCoefs(fractOriginalIdx);\n\n        if (${c} && (originalIdx < 0 || originalIdx > (${r[I]} - 1))) {\n          return ${a};\n        }\n        var data: array<${b}, 4> = array<${b}, 4>(0.0, 0.0, 0.0, 0.0);\n        for (var i: i32 = -1; i < 3; i++) {\n          var ${x}: ${b} = originalIdx + ${b}(i);\n          if (${x} < 0 || ${x} >= ${r[I]}) {\n            ${(()=>m?`coefs[i + 1] = 0.0;\n                        continue;`:c?`return ${a};`:`${x} = max(0, min(${x}, ${r[I]} - 1));`)()};\n          }\n        var input_indices_copy: ${e.type.indices} = input_indices;\n          ${e.indicesSet("input_indices_copy",I,`u32(${x})`)};\n          data[i + 1] = ${I===v?e.getByIndices("input_indices_copy"):"rowCubicInterpolation(input_indices_copy, output_indices)"};\n        }\n        return cubicInterpolation1D(data, coefs);\n      }`};return`\n    ${S(v)};\n    ${S(_)};\n  fn getCubicInterpolationCoefs(s: ${b}) -> array<${b}, 4> {\n    var absS = abs(s);\n    var coeffs: array<${b}, 4> = array<${b}, 4>(0.0, 0.0, 0.0, 0.0);\n    var oneMinusAbsS: ${b} = 1.0 - absS;\n    var twoMinusAbsS: ${b} = 2.0 - absS;\n    var onePlusAbsS: ${b} = 1.0 + absS;\n    coeffs[0] = ((${l} * onePlusAbsS - 5 * ${l}) * onePlusAbsS + 8 * ${l}) * onePlusAbsS - 4 * ${l};\n    coeffs[1] = ((${l} + 2) * absS - (${l} + 3)) * absS * absS + 1;\n    coeffs[2] = ((${l} + 2) * oneMinusAbsS - (${l} + 3)) * oneMinusAbsS * oneMinusAbsS + 1;\n    coeffs[3] = ((${l} * twoMinusAbsS - 5 * ${l}) * twoMinusAbsS + 8 * ${l}) * twoMinusAbsS - 4 * ${l};\n    return coeffs;\n  }\n\n  fn cubicInterpolation1D(x: array<${b}, 4>, coefs: array<${b}, 4>) -> ${b} {\n    var coefsSum: ${b} = coefs[0] + coefs[1] + coefs[2] + coefs[3];\n    return (x[0] * coefs[0] + x[1] * coefs[1]+ x[2] * coefs[2]+ x[3] * coefs[3]) / coefsSum;\n  }\n\n  fn bicubicInterpolation(output_indices: ${t.type.indices}) -> ${b} {\n    var input_indices: ${e.type.indices} = output_indices;\n    return colCubicInterpolation(input_indices, output_indices);\n  }\n    `},Ec=(e,t,r,o,n)=>{let[l,c,a,m,g]=r.length===3?[-1,0,1,2,-1]:[0,2,3,4,1],h=e.type.value;return`\n    fn getInputValue(batch: u32, channel: u32, depth:u32, height: u32, width: u32) -> ${h} {\n      var input_indices: ${e.type.indices};\n      ${e.indicesSet("input_indices",c,`max(0, min(depth, ${r[c]} - 1))`)};\n      ${e.indicesSet("input_indices",a,`max(0, min(height, ${r[a]} - 1))`)};\n      ${e.indicesSet("input_indices",m,`max(0, min(width, ${r[m]} - 1))`)};\n      ${vu(e,g,l,3)}\n      return ${e.getByIndices("input_indices")};\n    }\n\n    fn trilinearInterpolation(output_indices: ${t.type.indices}) -> ${h} {\n      var originalIndices = calculateOriginalIndicesFromOutputIndices(output_indices);\n      var depth:${h} = originalIndices[${c}];\n      var height:${h} = originalIndices[${a}];\n      var width:${h} = originalIndices[${m}];\n      ${o?`if (depth < 0 || depth > (${r[c]} - 1) || height < 0 || height > (${r[a]} - 1) || width < 0 || (width > ${r[m]} - 1)) {\n      return ${n};\n        }`:""};\n\n    depth = max(0, min(depth, ${r[c]} - 1));\n      height = max(0, min(height, ${r[a]} - 1));\n      width = max(0, min(width, ${r[m]} - 1));\n      var depth1: u32 = u32(depth);\n      var height1: u32 = u32(height);\n      var width1: u32 = u32(width);\n      var depth2: u32 = u32(depth + 1);\n      var height2: u32 = u32(height + 1);\n      var width2: u32 = u32(width + 1);\n      var channel: u32 = ${r.length>3?`u32(originalIndices[${g}])`:"0"};\n      var batch: u32 =  ${r.length>3?`u32(originalIndices[${l}])`:"0"};\n\n      var x111: ${h} = getInputValue(batch, channel, depth1, height1, width1);\n      var x112: ${h} = getInputValue(batch, channel, depth1, height1, width2);\n      var x121: ${h} = getInputValue(batch, channel, depth1, height2, width1);\n      var x122: ${h} = getInputValue(batch, channel, depth1, height2, width2);\n      var x211: ${h} = getInputValue(batch, channel, depth2, height1, width1);\n      var x212: ${h} = getInputValue(batch, channel, depth2, height1, width2);\n      var x221: ${h} = getInputValue(batch, channel, depth2, height2, width1);\n      var x222: ${h} = getInputValue(batch, channel, depth2, height2, width2);\n      var dx1: ${h} = abs(depth - ${h}(depth1));\n      var dx2: ${h} = abs(${h}(depth2) - depth);\n      var dy1: ${h} = abs(height - ${h}(height1));\n      var dy2: ${h} = abs(${h}(height2) - height);\n      var dz1: ${h} = abs(width - ${h}(width1));\n      var dz2: ${h} = abs(${h}(width2) - width);\n      if (depth1 == depth2) {\n        dx1 = 0.5;\n        dx2 = 0.5;\n      }\n      if (height1 == height2) {\n        dy1 = 0.5;\n        dy2 = 0.5;\n      }\n      if (width1 == width2) {\n        dz1 = 0.5;\n        dz2 = 0.5;\n      }\n      return (x111 * dx2 * dy2 * dz2 + x112 * dx2 * dy2 * dz1 + x121 * dx2 * dy1 *dz2 + x122 * dx2 * dy1 * dz1 +\n              x211 * dx1 * dy2 * dz2 + x212 * dx1 * dy2 * dz1 + x221 * dx1 * dy1 *dz2 + x222 * dx1 * dy1 * dz1);\n    }`},Pc=(e,t,r,o,n,s)=>{let l=e.dims,c=$c(s,t.axes,l.length),a=_c(l,o,n,t.axes),m=o.slice();o.length===0&&(m=l.map(($,E)=>$===0?1:a[E]/$),t.keepAspectRatioPolicy!=="stretch"&&(a=Sc(l,m,t)));let g=j("output",e.dataType,a.length),h=U("input",e.dataType,l.length),v=z.size(a),_=l.length===a.length&&l.every(($,E)=>$===a[E]),b=t.coordinateTransformMode==="tf_crop_and_resize",S=t.extrapolationValue,I=h.type.value,x=$=>`\n      ${_?"":`\n      ${wc(t.coordinateTransformMode,I)};\n      ${(()=>{switch(t.mode){case"nearest":return`\n              ${Ic(h,l)};\n              ${vc(t.nearestMode,r,I)};\n              ${Cc(h,g,l,a,m.length,c.length,b)};\n              `;case"linear":return`\n              ${xc(g,l,a,m.length,c.length)};\n              ${(()=>{if(l.length===2||l.length===4)return`${Ac(h,g,l,b,S)}`;if(l.length===3||l.length===5)return`${Ec(h,g,l,b,S)}`;throw Error("Linear mode only supports input dims 2, 3, 4 and 5 are supported in linear mode.")})()};\n            `;case"cubic":return`\n            ${(()=>{if(l.length===2||l.length===4)return`${Tc(h,g,l,a,m,c,t.cubicCoeffA,b,t.extrapolationValue,t.excludeOutside)}`;throw Error("Cubic mode only supports input dims 2 and 4 are supported in linear mode.")})()};\n            `;default:throw Error("Invalid resize mode")}})()};\n      `}\n      ${$.registerUniform("output_size","u32").registerUniform("scales","f32",m.length).registerUniform("roi","f32",c.length).declareVariables(h,g)}\n      ${$.mainStart()}\n        ${$.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n        ${_?"output[global_idx] = input[global_idx];":`\n        let output_indices = ${g.offsetToIndices("global_idx")};\n        var input_indices: ${h.type.indices};\n        ${(()=>{switch(t.mode){case"nearest":return`input_indices = calculateInputIndicesFromOutputIndices(output_indices);\n                if (checkInputIndices(input_indices)) {\n                  output[global_idx] = ${h.getByIndices("input_indices")};\n                } else {\n                  output[global_idx] = ${t.extrapolationValue};\n                }`;case"linear":return`output[global_idx] = ${l.length===2||l.length===4?"bilinearInterpolation":"trilinearInterpolation"}(output_indices);`;case"cubic":return"output[global_idx] = bicubicInterpolation(output_indices);";default:throw Error(`Unsupported resize mode: ${t.mode}`)}})()};\n`}\n      }`;return{name:"Resize",shaderCache:{hint:`${t.cacheKey}|${r}|${m.length>0?m:""}|${n.length>0?n:""}|${c.length>0?c:""}|${_}|${l}`,inputDependencies:["rank"]},getShaderSource:x,getRunData:()=>({outputs:[{dims:a,dataType:e.dataType}],dispatchGroup:{x:Math.ceil(v/64)},programUniforms:[{type:12,data:v},{type:1,data:m},{type:1,data:c},...Z(l,a)]})}},Oc=e=>{let t=e.customDataBuffer;return new Uint32Array(t,t.byteOffset,1)[0]},$u=(e,t)=>{let r=[],o=[],n=[],s=Oc(e);if(t.antialias!==0)throw Error("Only default value (0) for Antialias attribute is supported");bc(e.inputs,t,s,r,o,n),e.compute(Pc(e.inputs[0],t,s,r,o,n),{inputs:[0]})},_u=e=>{let t=e.antialias,r=e.axes,o=e.coordinateTransformMode,n=e.cubicCoeffA,s=e.excludeOutside!==0,l=e.extrapolationValue,c=e.keepAspectRatioPolicy,a=e.mode,m=e.nearestMode===""?"simple":e.nearestMode;return Se({antialias:t,axes:r,coordinateTransformMode:o,cubicCoeffA:n,excludeOutside:s,extrapolationValue:l,keepAspectRatioPolicy:c,mode:a,nearestMode:m})}});var kc,Rc,xu,Cu=Y(()=>{"use strict";he();xe();ve();kc=e=>{if(!e||e.length<3)throw new Error("layerNorm requires at least 3 inputs.");let t=e[0],r=e[1],o=e[2];if(t.dataType!==r.dataType||t.dataType!==o.dataType)throw new Error("All inputs must have the same data type");if(t.dims.length!==3&&t.dims.length!==2)throw new Error("Input must be 2D or 3D");if(r.dims.length!==3&&r.dims.length!==2)throw new Error("Skip must be 2D or 3D");let n=t.dims[t.dims.length-1],s=t.dims[t.dims.length-2];if(r.dims[r.dims.length-1]!==n)throw new Error("Skip must have the same hidden size as input");if(r.dims[r.dims.length-2]!==s)throw new Error("Skip must have the same sequence length as input");if(o.dims.length!==1)throw new Error("Gamma must be 1D");if(o.dims[o.dims.length-1]!==n)throw new Error("Gamma must have the same hidden size as input");if(e.length>3){let l=e[3];if(l.dims.length!==1)throw new Error("Beta must be 1D");if(l.dims[l.dims.length-1]!==n)throw new Error("Beta must have the same hidden size as input")}if(e.length>4){let l=e[4];if(l.dims.length!==1)throw new Error("Bias must be 1D");if(l.dims[l.dims.length-1]!==n)throw new Error("Bias must have the same hidden size as input")}},Rc=(e,t,r,o)=>{let n=e[0].dims,s=z.size(n),l=n,c=s,a=n.slice(-1)[0],m=o?n.slice(0,-1).concat(1):[],g=e.length>3,h=e.length>4,v=o&&r>1,_=o&&r>2,b=r>3,S=je(a),I=[{type:12,data:c},{type:12,data:S},{type:12,data:a},{type:1,data:t.epsilon}],x=E=>{let T=[{name:"output_size",type:"u32"},{name:"components",type:"u32"},{name:"hidden_size",type:"u32"},{name:"epsilon",type:"f32"}],B=[U("x",e[0].dataType,e[0].dims,S),U("skip",e[1].dataType,e[1].dims,S),U("gamma",e[2].dataType,e[2].dims,S)];g&&B.push(U("beta",e[3].dataType,e[3].dims,S)),h&&B.push(U("bias",e[4].dataType,e[4].dims,S)),B.push(j("output",e[0].dataType,l,S)),v&&B.push(j("mean_output",1,m)),_&&B.push(j("inv_std_output",1,m)),b&&B.push(j("input_skip_bias_sum",e[0].dataType,l,S));let M=Ue(e[0].dataType);return`\n\n      ${E.registerUniforms(T).declareVariables(...B)}\n\n      ${E.mainStart()}\n        ${E.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size / uniforms.hidden_size")}\n        let hidden_size_vectorized: u32 = uniforms.hidden_size / uniforms.components;\n        let offset = global_idx * hidden_size_vectorized;\n        var sum = ${Je("f32",S)};\n        var squareSum = ${Je("f32",S)};\n        for (var i: u32 = 0; i < hidden_size_vectorized; i++) {\n          let skip_value = skip[offset + i];\n          let bias_value = ${h?"bias[i]":"0.0"};\n          let input_value = x[offset + i];\n          let value = input_value + skip_value + bias_value;\n          ${b?"input_skip_bias_sum[offset + i] = value;":""}\n          output[offset + i] = value;\n          let f32_value = ${pt(M,S,"value")};\n          sum += f32_value;\n          squareSum += f32_value * f32_value;\n        }\n        let mean = ${nt("sum",S)} / f32(uniforms.hidden_size);\n        let inv_std_dev = inverseSqrt(${nt("squareSum",S)} / f32(uniforms.hidden_size) - mean * mean + uniforms.epsilon);\n        ${v?"mean_output[global_idx] = mean;":""}\n        ${_?"inv_std_output[global_idx] = inv_std_dev;":""}\n        for (var i: u32 = 0; i < hidden_size_vectorized; i++) {\n          output[offset + i] = (output[offset + i] - ${M}(mean)) * ${M}(inv_std_dev) * gamma[i] + ${g?"beta[i]":"0.0"};\n        }\n      }`},$=[{dims:l,dataType:e[0].dataType}];return r>1&&$.push({dims:m,dataType:1}),r>2&&$.push({dims:m,dataType:1}),r>3&&$.push({dims:n,dataType:e[0].dataType}),{name:"SkipLayerNormalization",shaderCache:{hint:`${S};${v};${_};${b}`,inputDependencies:e.map((E,T)=>"type")},getShaderSource:x,getRunData:()=>({outputs:$,dispatchGroup:{x:Math.ceil(c/a/64)},programUniforms:I})}},xu=(e,t)=>{kc(e.inputs);let o=[0];e.outputCount>1&&o.push(-3),e.outputCount>2&&o.push(-3),e.outputCount>3&&o.push(3),e.compute(Rc(e.inputs,t,e.outputCount,!1),{outputs:o})}});var Bc,Wn,Dc,Iu,Mc,zc,Au,Tu,Eu=Y(()=>{"use strict";he();xe();Qe();ve();Bc=(e,t)=>{if(!e||e.length<1)throw new Error("too few inputs");if(t.axes.length!==0){if(t.axes.length!==t.starts.length||t.axes.length!==t.ends.length)throw new Error("axes, starts and ends must have the same length")}else if(t.starts.length!==t.ends.length)throw new Error("starts and ends must have the same length");e.slice(1).forEach((r,o)=>{if(e[o+1].dataType!==6&&e[o+1].dataType!==7)throw new Error(`Input ${o} must be an array of int32 or int64`)})},Wn=(e,t)=>{let r=[];if(e.length>t)if(e[t].dataType===7)e[t].getBigInt64Array().forEach(o=>r.push(Number(o)));else if(e[t].dataType===6)e[t].getInt32Array().forEach(o=>r.push(Number(o)));else throw new Error(`Input ${t} must be an array of int32 or int64`);return r},Dc=(e,t)=>{if(e.length>1){let r=Wn(e,1),o=Wn(e,2),n=Wn(e,3);return n.length===0&&(n=[...Array(e[0].dims.length).keys()]),Se({starts:r,ends:o,axes:n})}else return t},Iu=(e,t,r,o,n)=>{let s=e;return e<0&&(s+=r[o[t]]),n[t]<0?Math.max(0,Math.min(s,r[o[t]]-1)):Math.max(0,Math.min(s,r[o[t]]))},Mc=(e,t,r)=>`fn calculateInputIndices(output_indices: ${t.type.indices}) -> ${e.type.indices} {\n          var input_indices: ${e.type.indices};\n          var carry = 0u;\n          for (var i = ${r.length}; i >= 0; i--) {\n            let input_shape_i = ${de("uniforms.input_shape","i",r.length)};\n            let steps_i = ${de("uniforms.steps","i",r.length)};\n            let signs_i = ${de("uniforms.signs","i",r.length)};\n            let starts_i = ${de("uniforms.starts","i",r.length)};\n            var output_index = ${t.indicesGet("output_indices","i")};\n            var input_index = output_index * steps_i + starts_i + carry;\n            carry = input_index / input_shape_i;\n            input_index = input_index % input_shape_i;\n            if (signs_i < 0) {\n              input_index = input_shape_i - input_index - 1u + starts_i;\n            }\n            ${e.indicesSet("input_indices","i","input_index")};\n          }\n          return input_indices;\n      }`,zc=(e,t)=>{let r=e[0].dims,o=z.size(r),n=t.axes.length>0?z.normalizeAxes(t.axes,r.length):[...Array(r.length).keys()],s=Wn(e,4);s.forEach(x=>x!==0||(()=>{throw new Error("step cannot be 0")})),s.length===0&&(s=Array(n.length).fill(1));let l=t.starts.map((x,$)=>Iu(x,$,r,n,s)),c=t.ends.map((x,$)=>Iu(x,$,r,n,s));if(n.length!==l.length||n.length!==c.length)throw new Error("start, ends and axes should have the same number of elements");if(n.length!==r.length)for(let x=0;x<r.length;++x)n.includes(x)||(l.splice(x,0,0),c.splice(x,0,r[x]),s.splice(x,0,1));let a=s.map(x=>Math.sign(x));s.forEach((x,$,E)=>{if(x<0){let T=(c[$]-l[$])/x,B=l[$],M=B+T*s[$];l[$]=M,c[$]=B,E[$]=-x}});let m=r.slice(0);n.forEach((x,$)=>{m[x]=Math.ceil((c[x]-l[x])/s[x])});let g={dims:m,dataType:e[0].dataType},h=j("output",e[0].dataType,m.length),v=U("input",e[0].dataType,e[0].dims.length),_=z.size(m),b=[{name:"outputSize",type:"u32"},{name:"starts",type:"u32",length:l.length},{name:"signs",type:"i32",length:a.length},{name:"steps",type:"u32",length:s.length}],S=[{type:12,data:_},{type:12,data:l},{type:6,data:a},{type:12,data:s},...Z(e[0].dims,m)],I=x=>`\n      ${x.registerUniforms(b).declareVariables(v,h)}\n        ${Mc(v,h,r)}\n        ${x.mainStart()}\n          ${x.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n          let output_indices = ${h.offsetToIndices("global_idx")};\n          let input_indices = calculateInputIndices(output_indices);\n          ${h.setByOffset("global_idx",v.getByIndices("input_indices"))}\n      }`;return{name:"Slice",shaderCache:{hint:`${a.length}_${l.length}_${s.length}`,inputDependencies:["rank"]},getShaderSource:I,getRunData:()=>({outputs:[g],dispatchGroup:{x:Math.ceil(o/64)},programUniforms:S})}},Au=(e,t)=>{Bc(e.inputs,t);let r=Dc(e.inputs,t);e.compute(zc(e.inputs,r),{inputs:[0]})},Tu=e=>{let t=e.starts,r=e.ends,o=e.axes;return Se({starts:t,ends:r,axes:o})}});var Uc,Vc,Pu,Ou,ku=Y(()=>{"use strict";he();xe();Qe();ve();Uc=e=>{if(!e||e.length!==1)throw new Error("Softmax op requires 1 input.")},Vc=(e,t)=>{let r=e.dims,o=z.size(r),n=64,s=t.axis;if(s<0&&(s=r.length+s),s<r.length-1)throw new Error("softmax only supports last axis for now.");let l=r[s],c=o/l,a=je(l),m=l/a,g=(I,x)=>x===4?`max(max(${I}.x, ${I}.y), max(${I}.z, ${I}.w))`:x===2?`max(${I}.x, ${I}.y)`:x===3?`max(max(${I}.x, ${I}.y), ${I}.z)`:I,h=U("x",e.dataType,e.dims,a),v=j("result",e.dataType,e.dims,a),_=h.type.value,b=Ue(e.dataType)==="f32"?`var threadMax = ${_}(-3.402823e+38f);`:`var threadMax = ${_}(-65504.0h);`,S=I=>`\n      var<workgroup> rowMaxShared : ${_};\n      var<workgroup> rowSumShared : ${_};\n      var<workgroup> threadShared : array<${_}, ${n}>;\n\n      fn getValue(row: i32, col: i32, row_stride: i32) -> ${_} {\n        let index = row * row_stride + col;\n        return x[index];\n      }\n\n      fn setValue(row: i32, col: i32, row_stride: i32, value: ${_}) {\n        let index = row * row_stride + col;\n        result[index] = value;\n      }\n      ${I.registerUniform("packedCols","i32").declareVariables(h,v)}\n      ${I.mainStart()}\n        let gindex = i32(global_idx);\n        let lindex = i32(local_idx);\n        const wg = ${n};\n        let row = gindex / wg;\n        let cols = uniforms.packedCols;\n        let row_stride : i32 = uniforms.packedCols;\n\n        // find the rows max\n        ${b}\n        for (var col = lindex; col < cols; col += wg) {\n          let value = getValue(row, col, row_stride);\n          threadMax = max(threadMax, value);\n        }\n        if (lindex < cols) {\n          threadShared[lindex] = threadMax;\n        }\n        workgroupBarrier();\n\n        var reduceSize = min(cols, wg);\n        for (var currSize = reduceSize >> 1;  currSize > 0; currSize = reduceSize >> 1) {\n          reduceSize = currSize + (reduceSize & 1);\n          if (lindex < currSize) {\n            threadShared[lindex] = max(threadShared[lindex], threadShared[lindex + reduceSize]);\n          }\n          workgroupBarrier();\n        }\n        if (lindex == 0) {\n          rowMaxShared = ${_}(${g("threadShared[0]",a)});\n        }\n        workgroupBarrier();\n\n        // find the rows sum\n        var threadSum = ${_}(0.0);\n        for (var col = lindex; col < cols; col += wg) {\n          let subExp = exp(getValue(row, col, row_stride) - rowMaxShared);\n          threadSum += subExp;\n        }\n        threadShared[lindex] = threadSum;\n        workgroupBarrier();\n\n        for (var currSize = wg >> 1;  currSize > 0; currSize = currSize >> 1) {\n          if (lindex < currSize) {\n            threadShared[lindex] = threadShared[lindex] + threadShared[lindex + currSize];\n          }\n          workgroupBarrier();\n        }\n        if (lindex == 0) {\n          rowSumShared = ${_}(${nt("threadShared[0]",a)});\n        }\n        workgroupBarrier();\n\n        // calculate final value for each element in the row\n        for (var col = lindex; col < cols; col += wg) {\n          let value = exp(getValue(row, col, row_stride) - rowMaxShared) / rowSumShared;\n          setValue(row, col, row_stride, value);\n        }\n      }`;return{name:"Softmax",shaderCache:{hint:`${a}`,inputDependencies:["type"]},getRunData:()=>({outputs:[{dims:r,dataType:e.dataType}],dispatchGroup:{x:c},programUniforms:[{type:12,data:m}]}),getShaderSource:S}},Pu=(e,t)=>{Uc(e.inputs),e.compute(Vc(e.inputs[0],t))},Ou=e=>Se({axis:e.axis})});var Wc,Nc,Gc,Hc,Lc,Ru,Bu,Du=Y(()=>{"use strict";he();xe();Qe();ve();Wc=e=>{if(!e||e.length<1)throw new Error("too few inputs")},Nc=(e,t)=>{let r=[],o=t.numOutputs;return e[1].dims[0]>0&&(e[1].getBigInt64Array().forEach(n=>r.push(Number(n))),o=r.length),Se({numOutputs:o,axis:t.axis,splitSizes:r})},Gc=e=>`\nfn calculateOutputIndex(index: u32) -> u32 {\n    for (var i: u32 = 0u; i < ${e}u; i += 1u ) {\n    if (index < ${de("uniforms.size_in_split_axis","i",e)}) {\n        return i;\n    }\n    }\n    return ${e}u;\n}`,Hc=e=>{let t=e.length,r=[];for(let o=0;o<t;++o){let n=e[o].setByIndices("indices","input[global_idx]");t===1?r.push(n):o===0?r.push(`if (output_number == ${o}u) { ${n} }`):o===t-1?r.push(`else { ${n} }`):r.push(`else if (output_number == ${o}) { ${n} }`)}return`\n      fn writeBufferData(output_number: u32, indices: ${e[0].type.indices}, global_idx: u32) {\n        ${r.join(`\n`)}\n      }`},Lc=(e,t)=>{let r=e[0].dims,o=z.size(r),n=e[0].dataType,s=z.normalizeAxis(t.axis,r.length),l=new Array(t.numOutputs),c=U("input",n,r),a=new Array(t.numOutputs),m=[],g=[],h=0,v=[{type:12,data:o}];for(let b=0;b<t.numOutputs;b++){h+=t.splitSizes[b],a[b]=h;let S=r.slice();S[t.axis]=t.splitSizes[b],g.push(S),l[b]=j(`output${b}`,n,S),m.push({dims:g[b],dataType:e[0].dataType})}v.push({type:12,data:a},...Z(r,...g));let _=b=>`\n  ${b.registerUniform("input_size","u32").registerUniform("size_in_split_axis","u32",a.length).declareVariables(c,...l)}\n  ${Gc(a.length)}\n  ${Hc(l)}\n\n  ${b.mainStart()}\n    ${b.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.input_size")}\n\n    var indices = ${c.offsetToIndices("global_idx")};\n    var index = ${c.indicesGet("indices",s)};\n    let output_number = calculateOutputIndex(index);\n    if (output_number != 0) {\n      index -= ${de("uniforms.size_in_split_axis","output_number - 1u",a.length)};\n      ${c.indicesSet("indices",s,"index")};\n    }\n    writeBufferData(output_number, indices, global_idx);\n  }`;return{name:"Split",shaderCache:{hint:`${t.cacheKey};${r}`,inputDependencies:["rank"]},getShaderSource:_,getRunData:()=>({outputs:m,dispatchGroup:{x:Math.ceil(o/64)},programUniforms:v})}},Ru=(e,t)=>{Wc(e.inputs);let r=e.inputs.length===1?t:Nc(e.inputs,t);e.compute(Lc(e.inputs,r),{inputs:[0]})},Bu=e=>{let t=e.axis,r=e.splitSizes,o=e.numOutputs<0?r.length:e.numOutputs;if(o!==r.length)throw new Error("numOutputs and splitSizes lengh must be equal");return Se({axis:t,numOutputs:o,splitSizes:r})}});var Mu,Fc,jc,qc,zu,Uu=Y(()=>{"use strict";he();xe();ve();Mu=e=>Array.from(e.getBigInt64Array(),Number),Fc=e=>{if(!e||e.length!==2)throw new Error("Tile requires 2 inputs.");if(e[0].dataType!==1&&e[0].dataType!==6&&e[0].dataType!==12)throw new Error("Tile only support float, int32, and uint32 data types");if(e[1].dataType!==7)throw new Error("Tile `repeats` input should be of int64 data type");if(e[1].dims.length!==1)throw new Error("Tile `repeats` input should be 1-D");if(Mu(e[1]).length!==e[0].dims.length)throw new Error("Tile `repeats` input should have same number of elements as rank of input data tensor")},jc=(e,t)=>{let r=[];for(let o=0;o<e.length;++o)r.push(e[o]*t[o]);return r},qc=e=>{let t=e[0].dims,r=Mu(e[1]),o=jc(t,r),n=z.size(o),s=e[0].dataType,l=U("input",s,t.length),c=j("output",s,o.length),a=m=>`\n      const inputShape = ${l.indices(...t)};\n      ${m.registerUniform("output_size","u32").declareVariables(l,c)}\n      ${m.mainStart()}\n      ${m.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n      let output_indices = ${c.offsetToIndices("global_idx")};\n      var input_indices: ${l.type.indices};\n      for (var i = 0; i < ${t.length}; i++) {\n        let input_dim_i = ${l.indicesGet("uniforms.input_shape","i")};\n        let input_dim_value = ${c.indicesGet("output_indices","i")}  % input_dim_i;\n\n        ${l.indicesSet("input_indices","i","input_dim_value")}\n      }\n      ${c.setByOffset("global_idx",l.getByIndices("input_indices"))}\n    }`;return{name:"Tile",shaderCache:{hint:`${r}`,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:o,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(n/64)},programUniforms:[{type:12,data:n},...Z(e[0].dims,o)]}),getShaderSource:a}},zu=e=>{Fc(e.inputs),e.compute(qc(e.inputs),{inputs:[0]})}});var Kc,Yc,Vu,Wu=Y(()=>{"use strict";he();xe();ve();Kc=(e,t,r,o,n)=>{let s=j("output_data",n,r.length,4),l=U("a_data",t[1].dataType,t[1].dims.length,4),c=U("b_data",t[2].dataType,t[2].dims.length,4),a=U("c_data",t[0].dataType,t[0].dims.length,4),m,g=(h,v,_)=>`select(${v}, ${h}, ${_})`;if(!o)m=s.setByOffset("global_idx",g(l.getByOffset("global_idx"),c.getByOffset("global_idx"),a.getByOffset("global_idx")));else{let h=(v,_,b="")=>{let S=`a_data[index_a${_}][component_a${_}]`,I=`b_data[index_b${_}][component_b${_}]`,x=`bool(c_data[index_c${_}] & ${4278190080>>>(3-_)*8}u)`;return`\n            let output_indices${_} = ${s.offsetToIndices(`global_idx * 4u + ${_}u`)};\n            let offset_a${_} = ${l.broadcastedIndicesToOffset(`output_indices${_}`,s)};\n            let offset_b${_} = ${c.broadcastedIndicesToOffset(`output_indices${_}`,s)};\n            let offset_c${_} = ${a.broadcastedIndicesToOffset(`output_indices${_}`,s)};\n            let index_a${_} = offset_a${_} / 4u;\n            let index_b${_} = offset_b${_} / 4u;\n            let index_c${_} = offset_c${_} / 4u;\n            let component_a${_} = offset_a${_} % 4u;\n            let component_b${_} = offset_b${_} % 4u;\n            ${v}[${_}] = ${b}(${g(S,I,x)});\n          `};n===9?m=`\n            var data = vec4<u32>(0);\n            ${h("data",0,"u32")}\n            ${h("data",1,"u32")}\n            ${h("data",2,"u32")}\n            ${h("data",3,"u32")}\n            output_data[global_idx] = dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(data));`:m=`\n            ${h("output_data[global_idx]",0)}\n            ${h("output_data[global_idx]",1)}\n            ${h("output_data[global_idx]",2)}\n            ${h("output_data[global_idx]",3)}\n          `}return`\n        ${e.registerUniform("vec_size","u32").declareVariables(a,l,c,s)}\n        ${e.mainStart()}\n        ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}\n        ${m}\n      }`},Yc=e=>{let t=e[1].dims,r=e[2].dims,o=e[0].dims,n=e[1].dataType,s=!(z.areEqual(t,r)&&z.areEqual(r,o)),l=t,c=z.size(t);if(s){let m=yt.calcShape(yt.calcShape(t,r,!1),o,!1);if(!m)throw new Error("Can\'t perform where op on the given tensors");l=m,c=z.size(l)}let a=Math.ceil(c/4);return{name:"Where",shaderCache:{inputDependencies:["rank","rank","rank"]},getShaderSource:m=>Kc(m,e,l,s,n),getRunData:()=>({outputs:[{dims:l,dataType:n}],dispatchGroup:{x:Math.ceil(c/64/4)},programUniforms:[{type:12,data:a},...Z(o,t,r,l)]})}},Vu=e=>{e.compute(Yc(e.inputs))}});var Nu,Gu=Y(()=>{"use strict";ri();ho();ai();si();Fi();rs();as();$o();ws();_s();As();Ps();ks();Ds();Us();Ns();Hs();Fs();So();Ks();Xs();eu();yu();wu();An();Su();Cu();Eu();ku();Du();Uu();lr();kn();Wu();Nu=new Map([["Abs",[ui]],["Acos",[li]],["Acosh",[di]],["Add",[ji]],["ArgMax",[ti,fo]],["ArgMin",[ei,fo]],["Asin",[ci]],["Asinh",[pi]],["Atan",[mi]],["Atanh",[fi]],["Attention",[ni]],["AveragePool",[uu,su]],["BatchNormalization",[oi]],["BiasAdd",[ii]],["BiasSplitGelu",[Li]],["Cast",[gi,hi]],["Ceil",[bi]],["Clip",[yi]],["Concat",[ns,os]],["Conv",[Co,xo]],["ConvTranspose",[bs,ys]],["Cos",[wi]],["Cosh",[vi]],["CumSum",[vs,$s]],["Div",[qi]],["Einsum",[Cs,Is]],["Elu",[$i,Pn]],["Equal",[Ki]],["Erf",[_i]],["Exp",[Si]],["Expand",[Es]],["FastGelu",[Os]],["Floor",[xi]],["FusedConv",[Co,xo]],["Gather",[Bs,Rs]],["GatherElements",[zs,Ms]],["Gelu",[Ci]],["Gemm",[Ws,Vs]],["GlobalAveragePool",[cu,du]],["GlobalMaxPool",[gu,hu]],["Greater",[Xi]],["GreaterOrEqual",[es]],["HardSigmoid",[Ri,ki]],["InstanceNormalization",[Gs]],["LayerNormalization",[Ls]],["LeakyRelu",[Ii,Pn]],["Less",[Ji]],["LessOrEqual",[ts]],["Log",[Gi]],["MatMul",[ds]],["MatMulNBits",[js,qs]],["MaxPool",[mu,fu]],["Mul",[Yi]],["MultiHeadAttention",[Qs,Zs]],["Neg",[Ti]],["Not",[Ai]],["Pad",[Js]],["Pow",[Zi]],["Range",[bu]],["Reciprocal",[Ei]],["ReduceMin",[Ka]],["ReduceMean",[Ha]],["ReduceMax",[qa]],["ReduceSum",[Za]],["ReduceProd",[Ya]],["ReduceL1",[La]],["ReduceL2",[Fa]],["ReduceLogSum",[Xa]],["ReduceLogSumExp",[ja]],["ReduceSumSquare",[Qa]],["Relu",[Pi]],["Resize",[$u,_u]],["Sigmoid",[Oi]],["Sin",[Bi]],["Sinh",[Di]],["Slice",[Au,Tu]],["SkipLayerNormalization",[xu]],["Split",[Ru,Bu]],["Sqrt",[Mi]],["Softmax",[Pu,Ou]],["Sub",[Qi]],["Tan",[zi]],["Tanh",[Vi]],["ThresholdedRelu",[Ni,Pn]],["Tile",[zu]],["Transpose",[Pa,Oa]],["Where",[Vu]]])});var Nn,Hu=Y(()=>{"use strict";sr();Pt();ve();Nn=class{constructor(t){this.backend=t;this.repo=new Map,this.attributesBound=!1}getArtifact(t){return this.repo.get(t)}setArtifact(t,r){this.repo.set(t,r)}run(t,r,o,n,s){Ht(t.programInfo.name);let l=this.backend.device,c=this.backend.getComputePassEncoder();this.backend.writeTimestamp(this.backend.pendingDispatchNumber*2);let a=[];for(let g of r)a.push({binding:a.length,resource:{buffer:g.buffer}});for(let g of o)a.push({binding:a.length,resource:{buffer:g.buffer}});s&&a.push({binding:a.length,resource:s});let m=l.createBindGroup({layout:t.computePipeline.getBindGroupLayout(0),entries:a,label:t.programInfo.name});if(this.backend.sessionStatus==="capturing"){let g={kernelId:this.backend.currentKernelId,computePipeline:t.computePipeline,bindGroup:m,dispatchGroup:n};this.backend.capturedCommandList.get(this.backend.currentSessionId).push(g)}c.setPipeline(t.computePipeline),c.setBindGroup(0,m),c.dispatchWorkgroups(...n),this.backend.writeTimestamp(this.backend.pendingDispatchNumber*2+1),this.backend.pendingDispatchNumber++,(this.backend.pendingDispatchNumber>=this.backend.maxDispatchNumber||this.backend.queryType==="at-passes")&&this.backend.endComputePass(),this.backend.pendingDispatchNumber>=this.backend.maxDispatchNumber&&this.backend.flush(),Lt(t.programInfo.name)}dispose(){}build(t,r){Ht(t.name);let o=this.backend.device,n=[];o.features.has("shader-f16")&&n.push("enable f16;");let s=Ta(r),l=t.getShaderSource(s),c=`${n.join(`\n`)}\n${s.additionalImplementations}\n${l}`,a=o.createShaderModule({code:c,label:t.name});ze("verbose",()=>`[WebGPU] ${t.name} shader code: ${c}`);let m=o.createComputePipeline({compute:{module:a,entryPoint:"main"},layout:"auto",label:t.name});return Lt(t.name),{programInfo:t,computePipeline:m}}normalizeDispatchGroupSize(t){let r=typeof t=="number"?t:t.x,o=typeof t=="number"?1:t.y||1,n=typeof t=="number"?1:t.z||1,s=this.backend.device.limits.maxComputeWorkgroupsPerDimension;if(r<=s&&o<=s&&n<=s)return[r,o,n];let l=r*o*n,c=Math.ceil(Math.sqrt(l));if(c>s){if(c=Math.ceil(Math.cbrt(l)),c>s)throw new Error("Total dispatch size exceeds WebGPU maximum.");return[c,c,c]}else return[c,c,1]}}});var Zc,Qc,Gn,Lu=Y(()=>{"use strict";sr();he();Pt();Sa();Aa();Gu();Hu();Zc=(e,t)=>{if(t.length!==e.length)throw new Error(`inputDependencies length ${t.length} is not equal to inputTensors length ${e.length}.`);let r=[];for(let o=0;o<e.length;++o){let n=e[o].dataType;switch(t[o]){case"none":{r.push("");break}case"type":{r.push(`${n}`);break}case"rank":{let s=e[o].dims.length;r.push(`${n};${s}`);break}case"dims":{let s=e[o].dims.join(",");r.push(`${n};${s}`);break}default:throw new Error(`unsupported input dependency: ${t[o]}`)}}return r.join("|")},Qc=(e,t,r)=>{let o=e.name;return e.shaderCache?.hint&&(o+="["+e.shaderCache.hint+"]"),o+=":"+r+`:${Zc(t,e.shaderCache?.inputDependencies??new Array(t.length).fill("dims"))}`,o},Gn=class{constructor(){this.currentSessionId=null;this.currentKernelId=null;this.commandEncoder=null;this.computePassEncoder=null;this.maxDispatchNumber=16;this.pendingDispatchNumber=0;this.pendingKernels=[];this.pendingQueries=new Map;this.sessionStatus="default";this.capturedCommandList=new Map;this.capturedPendingKernels=new Map;this.sessionExternalDataMapping=new Map}get currentKernelCustomData(){if(this.currentKernelId===null)throw new Error("currentKernelCustomData(): currentKernelId is null. (should not happen)");let t=this.kernelCustomData.get(this.currentKernelId);return t||(t={},this.kernelCustomData.set(this.currentKernelId,t)),t}async initialize(t,r){this.env=t;let o=[],n={requiredLimits:{maxComputeWorkgroupStorageSize:r.limits.maxComputeWorkgroupStorageSize,maxComputeWorkgroupsPerDimension:r.limits.maxComputeWorkgroupsPerDimension,maxStorageBufferBindingSize:r.limits.maxStorageBufferBindingSize,maxBufferSize:r.limits.maxBufferSize,maxComputeInvocationsPerWorkgroup:r.limits.maxComputeInvocationsPerWorkgroup,maxComputeWorkgroupSizeX:r.limits.maxComputeWorkgroupSizeX,maxComputeWorkgroupSizeY:r.limits.maxComputeWorkgroupSizeY,maxComputeWorkgroupSizeZ:r.limits.maxComputeWorkgroupSizeZ},requiredFeatures:o};r.features.has("chromium-experimental-timestamp-query-inside-passes")?o.push("chromium-experimental-timestamp-query-inside-passes"):r.features.has("timestamp-query")&&o.push("timestamp-query"),r.features.has("shader-f16")&&o.push("shader-f16"),this.device=await r.requestDevice(n),this.gpuDataManager=Ia(this),this.programManager=new Nn(this),this.kernels=new Map,this.kernelPersistentData=new Map,this.kernelCustomData=new Map,$a(t.logLevel,!!t.debug),this.device.onuncapturederror=s=>{s.error instanceof GPUValidationError&&console.error(`An uncaught WebGPU validation error was raised: ${s.error.message}`)},Object.defineProperty(this.env.webgpu,"device",{value:this.device}),this.setQueryType()}dispose(){typeof this.querySet<"u"&&this.querySet.destroy(),this.gpuDataManager.dispose()}getCommandEncoder(){return this.commandEncoder||(this.commandEncoder=this.device.createCommandEncoder()),this.commandEncoder}getComputePassEncoder(){if(!this.computePassEncoder){let t=this.getCommandEncoder(),r={};this.queryType==="at-passes"&&(r.timestampWrites={querySet:this.querySet,beginningOfPassWriteIndex:this.pendingDispatchNumber*2,endOfPassWriteIndex:this.pendingDispatchNumber*2+1}),this.computePassEncoder=t.beginComputePass(r)}return this.computePassEncoder}endComputePass(){this.computePassEncoder&&(this.computePassEncoder.end(),this.computePassEncoder=null)}flush(){if(!this.commandEncoder)return;Ht(),this.endComputePass();let t;this.queryType!=="none"&&(this.commandEncoder.resolveQuerySet(this.querySet,0,this.pendingDispatchNumber*2,this.queryResolveBuffer,0),t=this.device.createBuffer({size:this.pendingDispatchNumber*2*8,usage:GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST}),this.pendingQueries.set(t,this.pendingKernels),this.pendingKernels=[],this.commandEncoder.copyBufferToBuffer(this.queryResolveBuffer,0,t,0,this.pendingDispatchNumber*2*8)),this.device.queue.submit([this.commandEncoder.finish()]),this.gpuDataManager.refreshPendingBuffers(),this.commandEncoder=null,this.pendingDispatchNumber=0,this.queryType!=="none"&&t.mapAsync(GPUMapMode.READ).then(()=>{let r=new BigUint64Array(t.getMappedRange()),o=this.pendingQueries.get(t);for(let n=0;n<r.length/2;n++){let s=o[n],l=s.kernelId,c=this.kernels.get(l),a=c.kernelType,m=c.kernelName,g=s.programName,h=s.inputTensorViews,v=s.outputTensorViews,_=r[n*2],b=r[n*2+1];typeof this.queryTimeBase>"u"&&(this.queryTimeBase=_);let S=Number(_-this.queryTimeBase),I=Number(b-this.queryTimeBase);if(!Number.isSafeInteger(S)||!Number.isSafeInteger(I))throw new RangeError("incorrect timestamp range");if(this.env.webgpu.profiling?.ondata)this.env.webgpu.profiling.ondata({version:1,inputsMetadata:h.map(x=>({dims:x.dims,dataType:Et(x.dataType)})),outputsMetadata:v.map(x=>({dims:x.dims,dataType:Et(x.dataType)})),kernelId:l,kernelType:a,kernelName:m,programName:g,startTime:S,endTime:I});else{let x="";h.forEach((E,T)=>{x+=`input[${T}]: [${E.dims}] | ${Et(E.dataType)}, `});let $="";v.forEach((E,T)=>{$+=`output[${T}]: [${E.dims}] | ${Et(E.dataType)}, `}),console.log(`[profiling] kernel "${l}|${a}|${m}|${g}" ${x}${$}execution time: ${I-S} ns`)}no("GPU",`${g}::${_}::${b}`)}t.unmap(),this.pendingQueries.delete(t)}),Lt()}run(t,r,o,n,s){Ht(t.name);let l=[];for(let $=0;$<r.length;++$){let E=this.gpuDataManager.get(r[$].data);E?l[$]=E:l[$]=this.gpuDataManager.create(4)}let{outputs:c,dispatchGroup:a,programUniforms:m}=t.getRunData(r),g=o.length===0?c.map(($,E)=>E):o;if(g.length!==c.length)throw new Error(`Output size ${g.length} must be equal to ${c.length}.`);let h=[],v=[];for(let $=0;$<c.length;++$){if(!Number.isInteger(g[$])||g[$]<-3||g[$]>=c.length)throw new Error(`Invalid output index: ${g[$]}`);if(g[$]===-3)continue;let E=g[$]===-1,T=g[$]===-2,B=E||T?s(c[$].dataType,c[$].dims):n(g[$],c[$].dataType,c[$].dims),M=this.gpuDataManager.get(B.data);if(!M)throw new Error(`no GPU data for output: ${B.data}`);if(E&&this.temporaryData.push(M),T){let W=this.kernelPersistentData.get(this.currentKernelId);W||(W=[],this.kernelPersistentData.set(this.currentKernelId,W)),W.push(M)}h.push(B),v.push(M)}let _;if(m){let $=0,E=[];m.forEach(W=>{let q=typeof W.data=="number"?[W.data]:W.data;if(q.length===0)return;let ie=W.type===10?2:4,O,J;W.type===10?(J=q.length>4?16:q.length>2?8:q.length*ie,O=q.length>4?16:ie*q.length):(J=q.length<=2?q.length*ie:16,O=16),$=Math.ceil($/J)*J,E.push($);let $e=W.type===10?8:4;$+=q.length>4?Math.ceil(q.length/$e)*O:q.length*ie});let T=16;$=Math.ceil($/T)*T;let B=new ArrayBuffer($);m.forEach((W,q)=>{let ie=E[q],O=typeof W.data=="number"?[W.data]:W.data;if(W.type===6)new Int32Array(B,ie,O.length).set(O);else if(W.type===12)new Uint32Array(B,ie,O.length).set(O);else if(W.type===10)new Uint16Array(B,ie,O.length).set(O);else if(W.type===1)new Float32Array(B,ie,O.length).set(O);else throw new Error(`Unsupported uniform type: ${Et(W.type)}`)});let M=this.gpuDataManager.create($,GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM);this.device.queue.writeBuffer(M.buffer,0,B,0,$),this.gpuDataManager.release(M.id),_={offset:0,size:$,buffer:M.buffer}}let b=this.programManager.normalizeDispatchGroupSize(a),S=b[1]===1&&b[2]===1,I=Qc(t,r,S),x=this.programManager.getArtifact(I);if(x||(x=this.programManager.build(t,b),this.programManager.setArtifact(I,x),ze("info",()=>`[artifact] key: ${I}, programName: ${t.name}`)),ze("info",()=>`[ProgramManager] run "${t.name}" (key=${I}) with ${b[0]}x${b[1]}x${b[2]}`),this.queryType!=="none"||this.sessionStatus==="capturing"){let $={kernelId:this.currentKernelId,programName:x.programInfo.name,inputTensorViews:r,outputTensorViews:h};this.pendingKernels.push($),this.sessionStatus==="capturing"&&this.capturedPendingKernels.get(this.currentSessionId).push($)}return this.programManager.run(x,l,v,b,_),Lt(t.name),h}upload(t,r){this.gpuDataManager.upload(t,r)}memcpy(t,r){this.gpuDataManager.memcpy(t,r)}async download(t,r){await this.gpuDataManager.download(t,r)}alloc(t){return this.gpuDataManager.create(t).id}free(t){return this.gpuDataManager.release(t)}createKernel(t,r,o,n){let s=Nu.get(t);if(!s)throw new Error(`kernel not implemented: ${t}`);let l={kernelType:t,kernelName:n,kernelEntry:s[0],attributes:[s[1],o]};this.kernels.set(r,l)}releaseKernel(t){let r=this.kernelPersistentData.get(t);if(r){for(let o of r)this.gpuDataManager.release(o.id);this.kernelPersistentData.delete(t)}this.kernelCustomData.delete(t),this.kernels.delete(t)}computeKernel(t,r,o){let n=this.kernels.get(t);if(!n)throw new Error(`kernel not created: ${t}`);let s=n.kernelType,l=n.kernelName,c=n.kernelEntry,a=n.attributes;if(this.currentKernelId!==null)throw new Error(`kernel "[${s}] ${l}" is not allowed to be called recursively`);this.currentKernelId=t,a[0]&&(a[1]=a[0](a[1]),a[0]=void 0),ze("info",()=>`[WebGPU] Start to run kernel "[${s}] ${l}"...`);let m=this.env.debug;this.temporaryData=[];try{return m&&this.device.pushErrorScope("validation"),c(r,a[1]),0}catch(g){return o.push(Promise.resolve(`[WebGPU] Kernel "[${s}] ${l}" failed. ${g}`)),1}finally{m&&o.push(this.device.popErrorScope().then(g=>g?`GPU validation error for kernel "[${s}] ${l}": ${g.message}`:null));for(let g of this.temporaryData)this.gpuDataManager.release(g.id);this.temporaryData=[],this.currentKernelId=null}}registerBuffer(t,r,o,n){let s=this.sessionExternalDataMapping.get(t);s||(s=new Map,this.sessionExternalDataMapping.set(t,s));let l=s.get(r),c=this.gpuDataManager.registerExternalBuffer(o,n,l?.[1]);return s.set(r,[c,o]),c}unregisterBuffers(t){let r=this.sessionExternalDataMapping.get(t);r&&(r.forEach(o=>this.gpuDataManager.unregisterExternalBuffer(o[1])),this.sessionExternalDataMapping.delete(t))}getBuffer(t){let r=this.gpuDataManager.get(t);if(!r)throw new Error(`no GPU data for buffer: ${t}`);return r.buffer}createDownloader(t,r,o){return async()=>{let n=await io(this,t,r);return _a(n.buffer,o)}}writeTimestamp(t){this.queryType==="inside-passes"&&this.computePassEncoder.writeTimestamp(this.querySet,t)}setQueryType(){this.queryType="none",(this.env.webgpu.profiling?.mode==="default"||this.env.wasm.trace)&&(this.device.features.has("chromium-experimental-timestamp-query-inside-passes")?this.queryType="inside-passes":this.device.features.has("timestamp-query")&&(this.queryType="at-passes"),this.queryType!=="none"&&typeof this.querySet>"u"&&(this.querySet=this.device.createQuerySet({type:"timestamp",count:this.maxDispatchNumber*2}),this.queryResolveBuffer=this.device.createBuffer({size:this.maxDispatchNumber*2*8,usage:GPUBufferUsage.COPY_SRC|GPUBufferUsage.QUERY_RESOLVE})))}captureBegin(){ze("info","captureBegin"),this.capturedCommandList.get(this.currentSessionId)||this.capturedCommandList.set(this.currentSessionId,[]),this.capturedPendingKernels.get(this.currentSessionId)||this.capturedPendingKernels.set(this.currentSessionId,[]),this.flush(),this.sessionStatus="capturing"}captureEnd(){ze("info","captureEnd"),this.flush(),this.sessionStatus="default"}replay(){ze("info","replay"),this.sessionStatus="replaying";let t=this.capturedCommandList.get(this.currentSessionId),r=this.capturedPendingKernels.get(this.currentSessionId),o=t.length;this.pendingKernels=[];for(let n=0;n<o;n++){let s=this.getComputePassEncoder(),l=t[n];this.writeTimestamp(this.pendingDispatchNumber*2),s.setPipeline(l.computePipeline),s.setBindGroup(0,l.bindGroup),s.dispatchWorkgroups(...l.dispatchGroup),this.writeTimestamp(this.pendingDispatchNumber*2+1),this.pendingDispatchNumber++,this.queryType!=="none"&&this.pendingKernels.push(r[n]),(this.pendingDispatchNumber>=this.maxDispatchNumber||this.queryType==="at-passes")&&this.endComputePass(),this.pendingDispatchNumber>=this.maxDispatchNumber&&this.flush()}this.flush(),this.sessionStatus="default"}onReleaseSession(t){this.unregisterBuffers(t),this.capturedCommandList.has(t)&&this.capturedCommandList.delete(t),this.capturedPendingKernels.has(t)&&this.capturedPendingKernels.delete(t),this.gpuDataManager.onReleaseSession(t)}onRunStart(t){this.currentSessionId=t,this.setQueryType()}}});var Fu={};pn(Fu,{init:()=>Xc});var Vr,Oo,Xc,ju=Y(()=>{"use strict";he();Lu();Pt();xe();Vr=class e{constructor(t,r,o,n){this.module=t;this.dataType=r;this.data=o;this.dims=n}getFloat32Array(){if(this.dataType!==1)throw new Error("Invalid data type");let t=z.size(this.dims);return t===0?new Float32Array:new Float32Array(this.module.HEAP8.buffer,this.data,t)}getBigInt64Array(){if(this.dataType!==7)throw new Error("Invalid data type");let t=z.size(this.dims);return t===0?new BigInt64Array:new BigInt64Array(this.module.HEAP8.buffer,this.data,t)}getInt32Array(){if(this.dataType!==6)throw new Error("Invalid data type");let t=z.size(this.dims);return t===0?new Int32Array:new Int32Array(this.module.HEAP8.buffer,this.data,t)}reshape(t){if(z.size(t)!==z.size(this.dims))throw new Error("Invalid new shape");return new e(this.module,this.dataType,this.data,t)}},Oo=class{constructor(t,r,o){this.module=t;this.backend=r;this.customDataOffset=0;this.customDataSize=0;let n=t.HEAPU32,s=o>>>2;this.opKernelContext=n[s++];let l=n[s++];this.outputCount=n[s++],this.customDataOffset=n[s++],this.customDataSize=n[s++];let c=[];for(let a=0;a<l;a++){let m=n[s++],g=n[s++],h=n[s++],v=[];for(let _=0;_<h;_++)v.push(n[s++]);c.push(new Vr(t,m,g,v))}this.inputs=c}get kernelCustomData(){return this.backend.currentKernelCustomData}get customDataBuffer(){return this.module.HEAPU8.subarray(this.customDataOffset,this.customDataOffset+this.customDataSize)}compute(t,r){let o=r?.inputs?.map(c=>typeof c=="number"?this.inputs[c]:c)??this.inputs,n=r?.outputs??[],s=(c,a,m)=>new Vr(this.module,a,this.output(c,m),m),l=(c,a)=>{let m=Br(c);if(!m)throw new Error(`Unsupported data type: ${c}`);let g=m*z.size(a);return new Vr(this.module,c,this.backend.gpuDataManager.create(g).id,a)};return this.backend.run(t,o,n,s,l)}output(t,r){let o=this.module.stackSave();try{let n=this.module.stackAlloc((1+r.length)*4),s=n>>2;this.module.HEAPU32[s++]=r.length;for(let l=0;l<r.length;l++)this.module.HEAPU32[s++]=r[l];return this.module._JsepOutput(this.opKernelContext,t,n)}catch(n){throw new Error(`Failed to generate kernel\'s output[${t}] with dims [${r}]. If you are running with pre-allocated output, please make sure the output type/dims are correct. Error: ${n}`)}finally{this.module.stackRestore(o)}}},Xc=async(e,t,r)=>{let o=e.jsepInit;if(!o)throw new Error("Failed to initialize JSEP. The WebAssembly module is not built with JSEP support.");let n=new Gn;await n.initialize(t,r),o(n,s=>n.alloc(s),s=>n.free(s),(s,l,c,a=!1)=>{if(a)ze("verbose",()=>`[WebGPU] jsepCopyGpuToGpu: src=${s}, dst=${l}, size=${c}`),n.memcpy(s,l);else{ze("verbose",()=>`[WebGPU] jsepCopyCpuToGpu: dataOffset=${s}, gpuDataId=${l}, size=${c}`);let m=e.HEAPU8.subarray(s>>>0,(s>>>0)+c);n.upload(l,m)}},async(s,l,c)=>{ze("verbose",()=>`[WebGPU] jsepCopyGpuToCpu: gpuDataId=${s}, dataOffset=${l}, size=${c}`),await n.download(s,()=>e.HEAPU8.subarray(l>>>0,(l>>>0)+c))},(s,l,c)=>n.createKernel(s,l,c,e.UTF8ToString(e._JsepGetNodeName(l))),s=>n.releaseKernel(s),(s,l,c,a)=>{ze("verbose",()=>`[WebGPU] jsepRun: sessionHandle=${c}, kernel=${s}, contextDataOffset=${l}`);let m=new Oo(e,n,l);return n.computeKernel(s,m,a)},()=>n.captureBegin(),()=>n.captureEnd(),()=>n.replay())}});var Qo;Qo=No();var cl=Ko(),Xn,Jn=!1,hn=!1,Zo=!1,pl=e=>{if(e===1)return!1;if(typeof SharedArrayBuffer>"u")return typeof self<"u"&&!self.crossOriginIsolated&&console.warn("env.wasm.numThreads is set to "+e+", but this will not work unless you enable crossOriginIsolated mode. See https://web.dev/cross-origin-isolation-guide/ for more info."),!1;typeof process<"u"&&process.versions&&process.versions.node&&console.warn("env.wasm.numThreads is set to "+e+", however, currently onnxruntime-web does not support multi-threads in Node.js. Please consider using onnxruntime-node for performance critical scenarios.");try{return typeof MessageChannel<"u"&&new MessageChannel().port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]))}catch{return!1}},ml=()=>{try{return WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,30,1,28,0,65,0,253,15,253,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,253,186,1,26,11]))}catch{return!1}},fl=(e,t)=>e?t?"ort-wasm-simd-threaded.wasm":"ort-wasm-simd.wasm":t?"ort-wasm-threaded.wasm":"ort-wasm.wasm",Xo=async e=>{if(Jn)return Promise.resolve();if(hn)throw new Error("multiple calls to \'initializeWebAssembly()\' detected.");if(Zo)throw new Error("previous call to \'initializeWebAssembly()\' failed.");hn=!0;let t=e.initTimeout,r=e.numThreads,o=e.simd,n=pl(r),s=o&&ml(),l=e.wasmPaths,c=typeof l=="string"?l:void 0,a=fl(s,n),m=typeof l=="object"?l[a]:void 0,g=!1,h=[];if(t>0&&h.push(new Promise(v=>{setTimeout(()=>{g=!0,v()},t)})),h.push(new Promise((v,_)=>{let b=n?cl:Qo,S={locateFile:(I,x)=>{if(n&&I.endsWith(".worker.js")&&typeof Blob<"u")return URL.createObjectURL(new Blob([Yo()],{type:"text/javascript"}));if(I.endsWith(".wasm")){if(m)return m;let $=c??x;return a==="ort-wasm-simd.wasm"?$+"ort-wasm-simd.jsep.wasm":a==="ort-wasm-simd-threaded.wasm"?$+"ort-wasm-simd-threaded.jsep.wasm":$+a}return x+I}};if(n)if(S.numThreads=r,typeof Blob>"u")S.mainScriptUrlOrBlob=(void 0)(__dirname,"ort-wasm-threaded.js");else{let I=`var ortWasmThreaded=${b.toString()};`;S.mainScriptUrlOrBlob=new Blob([I],{type:"text/javascript"})}b(S).then(I=>{hn=!1,Jn=!0,Xn=I,v()},I=>{hn=!1,Zo=!0,_(I)})})),await Promise.race(h),g)throw new Error(`WebAssembly backend initializing failed due to timeout: ${t}ms`)},We=()=>{if(Jn&&Xn)return Xn;throw new Error("WebAssembly is not initialized yet.")};var Ve=(e,t)=>{let r=We(),o=r.lengthBytesUTF8(e)+1,n=r._malloc(o);return r.stringToUTF8(e,n,o),t.push(n),n},Rr=(e,t,r,o)=>{if(typeof e=="object"&&e!==null){if(r.has(e))throw new Error("Circular reference in options");r.add(e)}Object.entries(e).forEach(([n,s])=>{let l=t?t+n:n;if(typeof s=="object")Rr(s,l+".",r,o);else if(typeof s=="string"||typeof s=="number")o(l,s.toString());else if(typeof s=="boolean")o(l,s?"1":"0");else throw new Error(`Can\'t handle extra config type: ${typeof s}`)})},Me=e=>{let t=We(),r=t.stackSave();try{let o=t.stackAlloc(8);t._OrtGetLastError(o,o+4);let n=t.HEAP32[o/4],s=t.HEAPU32[o/4+1],l=s?t.UTF8ToString(s):"";throw new Error(`${e} ERROR_CODE: ${n}, ERROR_MESSAGE: ${l}`)}finally{t.stackRestore(r)}};var Jo=e=>{let t=We(),r=0,o=[],n=e||{};try{if(e?.logSeverityLevel===void 0)n.logSeverityLevel=2;else if(typeof e.logSeverityLevel!="number"||!Number.isInteger(e.logSeverityLevel)||e.logSeverityLevel<0||e.logSeverityLevel>4)throw new Error(`log serverity level is not valid: ${e.logSeverityLevel}`);if(e?.logVerbosityLevel===void 0)n.logVerbosityLevel=0;else if(typeof e.logVerbosityLevel!="number"||!Number.isInteger(e.logVerbosityLevel))throw new Error(`log verbosity level is not valid: ${e.logVerbosityLevel}`);e?.terminate===void 0&&(n.terminate=!1);let s=0;return e?.tag!==void 0&&(s=Ve(e.tag,o)),r=t._OrtCreateRunOptions(n.logSeverityLevel,n.logVerbosityLevel,!!n.terminate,s),r===0&&Me("Can\'t create run options."),e?.extra!==void 0&&Rr(e.extra,"",new WeakSet,(l,c)=>{let a=Ve(l,o),m=Ve(c,o);t._OrtAddRunConfigEntry(r,a,m)!==0&&Me(`Can\'t set a run config entry: ${l} - ${c}.`)}),[r,o]}catch(s){throw r!==0&&t._OrtReleaseRunOptions(r),o.forEach(l=>t._free(l)),s}};var hl=e=>{switch(e){case"disabled":return 0;case"basic":return 1;case"extended":return 2;case"all":return 99;default:throw new Error(`unsupported graph optimization level: ${e}`)}},gl=e=>{switch(e){case"sequential":return 0;case"parallel":return 1;default:throw new Error(`unsupported execution mode: ${e}`)}},yl=e=>{e.extra||(e.extra={}),e.extra.session||(e.extra.session={});let t=e.extra.session;t.use_ort_model_bytes_directly||(t.use_ort_model_bytes_directly="1"),e.executionProviders&&e.executionProviders.some(r=>(typeof r=="string"?r:r.name)==="webgpu")&&(e.enableMemPattern=!1)},bl=(e,t,r)=>{for(let o of t){let n=typeof o=="string"?o:o.name;switch(n){case"webnn":if(n="WEBNN",typeof o!="string"){let l=o;if(l?.deviceType){let c=Ve("deviceType",r),a=Ve(l.deviceType,r);We()._OrtAddSessionConfigEntry(e,c,a)!==0&&Me(`Can\'t set a session config entry: \'deviceType\' - ${l.deviceType}.`)}if(l?.numThreads){let c=l.numThreads;(typeof c!="number"||!Number.isInteger(c)||c<0)&&(c=0);let a=Ve("numThreads",r),m=Ve(c.toString(),r);We()._OrtAddSessionConfigEntry(e,a,m)!==0&&Me(`Can\'t set a session config entry: \'numThreads\' - ${l.numThreads}.`)}if(l?.powerPreference){let c=Ve("powerPreference",r),a=Ve(l.powerPreference,r);We()._OrtAddSessionConfigEntry(e,c,a)!==0&&Me(`Can\'t set a session config entry: \'powerPreference\' - ${l.powerPreference}.`)}}break;case"webgpu":if(n="JS",typeof o!="string"){let l=o;if(l?.preferredLayout){if(l.preferredLayout!=="NCHW"&&l.preferredLayout!=="NHWC")throw new Error(`preferredLayout must be either \'NCHW\' or \'NHWC\': ${l.preferredLayout}`);let c=Ve("preferredLayout",r),a=Ve(l.preferredLayout,r);We()._OrtAddSessionConfigEntry(e,c,a)!==0&&Me(`Can\'t set a session config entry: \'preferredLayout\' - ${l.preferredLayout}.`)}}break;case"wasm":case"cpu":continue;default:throw new Error(`not supported execution provider: ${n}`)}let s=Ve(n,r);We()._OrtAppendExecutionProvider(e,s)!==0&&Me(`Can\'t append execution provider: ${n}.`)}},ea=e=>{let t=We(),r=0,o=[],n=e||{};yl(n);try{let s=hl(n.graphOptimizationLevel??"all"),l=gl(n.executionMode??"sequential"),c=typeof n.logId=="string"?Ve(n.logId,o):0,a=n.logSeverityLevel??2;if(!Number.isInteger(a)||a<0||a>4)throw new Error(`log serverity level is not valid: ${a}`);let m=n.logVerbosityLevel??0;if(!Number.isInteger(m)||m<0||m>4)throw new Error(`log verbosity level is not valid: ${m}`);let g=typeof n.optimizedModelFilePath=="string"?Ve(n.optimizedModelFilePath,o):0;if(r=t._OrtCreateSessionOptions(s,!!n.enableCpuMemArena,!!n.enableMemPattern,l,!!n.enableProfiling,0,c,a,m,g),r===0&&Me("Can\'t create session options."),n.executionProviders&&bl(r,n.executionProviders,o),n.enableGraphCapture!==void 0){if(typeof n.enableGraphCapture!="boolean")throw new Error(`enableGraphCapture must be a boolean value: ${n.enableGraphCapture}`);let h=Ve("enableGraphCapture",o),v=Ve(n.enableGraphCapture.toString(),o);t._OrtAddSessionConfigEntry(r,h,v)!==0&&Me(`Can\'t set a session config entry: \'enableGraphCapture\' - ${n.enableGraphCapture}.`)}if(n.freeDimensionOverrides)for(let[h,v]of Object.entries(n.freeDimensionOverrides)){if(typeof h!="string")throw new Error(`free dimension override name must be a string: ${h}`);if(typeof v!="number"||!Number.isInteger(v)||v<0)throw new Error(`free dimension override value must be a non-negative integer: ${v}`);let _=Ve(h,o);t._OrtAddFreeDimensionOverride(r,_,v)!==0&&Me(`Can\'t set a free dimension override: ${h} - ${v}.`)}return n.extra!==void 0&&Rr(n.extra,"",new WeakSet,(h,v)=>{let _=Ve(h,o),b=Ve(v,o);t._OrtAddSessionConfigEntry(r,_,b)!==0&&Me(`Can\'t set a session config entry: ${h} - ${v}.`)}),[r,o]}catch(s){throw r!==0&&t._OrtReleaseSessionOptions(r),o.forEach(l=>t._free(l)),s}};he();var ra=async e=>{if(typeof e=="string")if(typeof process<"u"&&process.versions&&process.versions.node)try{return new Uint8Array(await(void 0)(e))}catch(t){if(t.code==="ERR_FS_FILE_TOO_LARGE"){let r=(void 0)(e),o=[];for await(let n of r)o.push(n);return new Uint8Array(Buffer.concat(o))}throw t}else{let t=await fetch(e);if(!t.ok)throw new Error(`failed to load external data file: ${e}`);let r=t.headers.get("Content-Length"),o=r?parseInt(r,10):0;if(o<1073741824)return new Uint8Array(await t.arrayBuffer());{if(!t.body)throw new Error(`failed to load external data file: ${e}, no response body.`);let n=t.body.getReader(),s;try{s=new ArrayBuffer(o)}catch(c){if(c instanceof RangeError){let a=Math.ceil(o/65536);s=new WebAssembly.Memory({initial:a,maximum:a}).buffer}else throw c}let l=0;for(;;){let{done:c,value:a}=await n.read();if(c)break;let m=a.byteLength;new Uint8Array(s,l,m).set(a),l+=m}return new Uint8Array(s,0,o)}}else return e instanceof Blob?new Uint8Array(await e.arrayBuffer()):e instanceof Uint8Array?e:new Uint8Array(e)};var Jc=(e,t)=>{We()._OrtInit(e,t)!==0&&Me("Can\'t initialize onnxruntime.")},Ku=async e=>{Jc(e.wasm.numThreads,Dr(e.logLevel))},Yu=async(e,t)=>{if(t==="webgpu"||t==="webnn"){if(typeof navigator>"u"||!navigator.gpu)throw new Error("WebGPU is not supported in current environment");let r=await navigator.gpu.requestAdapter();if(!r)throw new Error(\'Failed to get GPU adapter. You may need to enable flag "--enable-unsafe-webgpu" if you are using Chrome.\');if(!e.wasm.simd)throw new Error("Not supported for WebGPU=ON and SIMD=OFF. Please set `env.wasm.simd` to true when using `webgpu` EP");let o=(ju(),Nt(Fu)).init;await o(We(),e,r)}},jt=new Map,ep=e=>{let t=We(),r=t.stackSave();try{let o=t.stackAlloc(8);return t._OrtGetInputOutputCount(e,o,o+4)!==0&&Me("Can\'t get session input/output count."),[t.HEAP32[o/4],t.HEAP32[o/4+1]]}finally{t.stackRestore(r)}},ko=e=>{let t=We(),r=t._malloc(e.byteLength);if(r===0)throw new Error(`Can\'t create a session. failed to allocate a buffer of size ${e.byteLength}.`);return t.HEAPU8.set(e,r),[r,e.byteLength]},Zu=async(e,t)=>{let r,o,n=We();Array.isArray(e)?[r,o]=e:e.buffer===n.HEAPU8.buffer?[r,o]=[e.byteOffset,e.byteLength]:[r,o]=ko(e);let s=0,l=0,c=0,a=[],m=[],g=[];try{if([l,a]=ea(t),t?.externalData&&n.mountExternalData){let $=[];for(let E of t.externalData){let T=typeof E=="string"?E:E.path;$.push(ra(typeof E=="string"?E:E.data).then(B=>{n.mountExternalData(T,B)}))}await Promise.all($)}s=await n._OrtCreateSession(r,o,l),s===0&&Me("Can\'t create a session.");let[h,v]=ep(s),_=!!t?.enableGraphCapture,b=[],S=[],I=[];for(let $=0;$<h;$++){let E=n._OrtGetInputName(s,$);E===0&&Me("Can\'t get an input name."),m.push(E),b.push(n.UTF8ToString(E))}for(let $=0;$<v;$++){let E=n._OrtGetOutputName(s,$);E===0&&Me("Can\'t get an output name."),g.push(E);let T=n.UTF8ToString(E);S.push(T);{if(_&&t?.preferredOutputLocation===void 0){I.push("gpu-buffer");continue}let B=typeof t?.preferredOutputLocation=="string"?t.preferredOutputLocation:t?.preferredOutputLocation?.[T]??"cpu";if(B!=="cpu"&&B!=="cpu-pinned"&&B!=="gpu-buffer")throw new Error(`Not supported preferred output location: ${B}.`);if(_&&B!=="gpu-buffer")throw new Error(`Not supported preferred output location: ${B}. Only \'gpu-buffer\' location is supported when enableGraphCapture is true.`);I.push(B)}}let x=null;return I.some($=>$==="gpu-buffer")&&(c=n._OrtCreateBinding(s),c===0&&Me("Can\'t create IO binding."),x={handle:c,outputPreferredLocations:I,outputPreferredLocationsEncoded:I.map($=>to($))}),jt.set(s,[s,m,g,x,_,!1]),[s,b,S]}catch(h){throw m.forEach(v=>n._OrtFree(v)),g.forEach(v=>n._OrtFree(v)),c!==0&&n._OrtReleaseBinding(c),s!==0&&n._OrtReleaseSession(s),h}finally{n._free(r),l!==0&&n._OrtReleaseSessionOptions(l),a.forEach(h=>n._free(h)),n.unmountExternalData?.()}},Qu=e=>{let t=We(),r=jt.get(e);if(!r)throw new Error(`cannot release session. invalid session id: ${e}`);let[o,n,s,l,c]=r;l&&(c&&t._OrtClearBoundOutputs(l.handle),t._OrtReleaseBinding(l.handle)),t.jsepOnReleaseSession?.(e),n.forEach(a=>t._OrtFree(a)),s.forEach(a=>t._OrtFree(a)),t._OrtReleaseSession(o),jt.delete(e)},qu=(e,t,r,o,n,s=!1)=>{if(!e){t.push(0);return}let l=We(),c=e[0],a=e[1],m=e[3],g,h;if(c==="string"&&m==="gpu-buffer")throw new Error("String tensor is not supported on GPU.");if(s&&m!=="gpu-buffer")throw new Error(`External buffer must be provided for input/output index ${n} when enableGraphCapture is true.`);if(m==="gpu-buffer"){let b=e[2].gpuBuffer,S=Br(eo(c));h=a.reduce((I,x)=>I*x,1)*S,g=l.jsepRegisterBuffer(o,n,b,h)}else{let b=e[2];if(Array.isArray(b)){h=4*b.length,g=l._malloc(h),r.push(g);let S=g/4;for(let I=0;I<b.length;I++){if(typeof b[I]!="string")throw new TypeError(`tensor data at index ${I} is not a string`);l.HEAPU32[S++]=Ve(b[I],r)}}else h=b.byteLength,g=l._malloc(h),r.push(g),l.HEAPU8.set(new Uint8Array(b.buffer,b.byteOffset,h),g)}let v=l.stackSave(),_=l.stackAlloc(4*a.length);try{let b=_/4;a.forEach(I=>l.HEAP32[b++]=I);let S=l._OrtCreateTensor(eo(c),g,h,_,a.length,to(m));S===0&&Me(`Can\'t create tensor for input/output. session=${o}, index=${n}.`),t.push(S)}finally{l.stackRestore(v)}},Xu=async(e,t,r,o,n,s)=>{let l=We(),c=jt.get(e);if(!c)throw new Error(`cannot run inference. invalid session id: ${e}`);let a=c[0],m=c[1],g=c[2],h=c[3],v=c[4],_=c[5],b=t.length,S=o.length,I=0,x=[],$=[],E=[],T=[],B=l.stackSave(),M=l.stackAlloc(b*4),W=l.stackAlloc(b*4),q=l.stackAlloc(S*4),ie=l.stackAlloc(S*4);try{[I,x]=Jo(s);for(let N=0;N<b;N++)qu(r[N],$,T,e,t[N],v);for(let N=0;N<S;N++)qu(n[N],E,T,e,b+o[N],v);let O=M/4,J=W/4,$e=q/4,ke=ie/4;for(let N=0;N<b;N++)l.HEAPU32[O++]=$[N],l.HEAPU32[J++]=m[t[N]];for(let N=0;N<S;N++)l.HEAPU32[$e++]=E[N],l.HEAPU32[ke++]=g[o[N]];if(h&&!_){let{handle:N,outputPreferredLocations:Be,outputPreferredLocationsEncoded:be}=h;if(m.length!==b)throw new Error(`input count from feeds (${b}) is expected to be always equal to model\'s input count (${m.length}).`);for(let ge=0;ge<b;ge++){let pe=t[ge];await l._OrtBindInput(N,m[pe],$[ge])!==0&&Me(`Can\'t bind input[${ge}] for session=${e}.`)}for(let ge=0;ge<S;ge++){let pe=o[ge];n[ge]?.[3]?l._OrtBindOutput(N,g[pe],E[ge],0)!==0&&Me(`Can\'t bind pre-allocated output[${ge}] for session=${e}.`):l._OrtBindOutput(N,g[pe],0,be[pe])!==0&&Me(`Can\'t bind output[${ge}] to ${Be[ge]} for session=${e}.`)}jt.set(e,[a,m,g,h,v,!0])}l.jsepOnRunStart?.(a);let Re;h?Re=await l._OrtRunWithBinding(a,h.handle,S,q,I):Re=await l._OrtRun(a,W,M,b,ie,S,q,I),Re!==0&&Me("failed to call OrtRun().");let _e=[];for(let N=0;N<S;N++){let Be=l.HEAPU32[q/4+N];if(Be===E[N]){_e.push(n[N]);continue}let be=l.stackSave(),ge=l.stackAlloc(4*4),pe=!1,Ce,Ae=0;try{l._OrtGetTensorData(Be,ge,ge+4,ge+8,ge+12)!==0&&Me(`Can\'t access output tensor data on index ${N}.`);let L=ge/4,re=l.HEAPU32[L++];Ae=l.HEAPU32[L++];let me=l.HEAPU32[L++],Xe=l.HEAPU32[L++],qe=[];for(let Le=0;Le<Xe;Le++)qe.push(l.HEAPU32[me/4+Le]);l._OrtFree(me);let ot=qe.reduce((Le,Ge)=>Le*Ge,1);Ce=Et(re);let At=h?.outputPreferredLocations[o[N]];if(Ce==="string"){if(At==="gpu-buffer")throw new Error("String tensor is not supported on GPU.");let Le=[],Ge=Ae/4;for(let et=0;et<ot;et++){let Tt=l.HEAPU32[Ge++],ft=et===ot-1?void 0:l.HEAPU32[Ge]-Tt;Le.push(l.UTF8ToString(Tt,ft))}_e.push([Ce,qe,Le,"cpu"])}else if(At==="gpu-buffer"&&ot>0){let Le=l.jsepGetBuffer(Ae),Ge=Br(re);if(Ge===void 0||!ta(Ce))throw new Error(`Unsupported data type: ${Ce}`);pe=!0,_e.push([Ce,qe,{gpuBuffer:Le,download:l.jsepCreateDownloader(Le,ot*Ge,Ce),dispose:()=>{l._OrtReleaseTensor(Be)}},"gpu-buffer"])}else{let Le=gn(Ce),Ge=new Le(ot);new Uint8Array(Ge.buffer,Ge.byteOffset,Ge.byteLength).set(l.HEAPU8.subarray(Ae,Ae+Ge.byteLength)),_e.push([Ce,qe,Ge,"cpu"])}}finally{l.stackRestore(be),Ce==="string"&&Ae&&l._free(Ae),pe||l._OrtReleaseTensor(Be)}}return h&&!v&&(l._OrtClearBoundOutputs(h.handle),jt.set(e,[a,m,g,h,v,!1])),_e}finally{l.stackRestore(B),$.forEach(O=>l._OrtReleaseTensor(O)),E.forEach(O=>l._OrtReleaseTensor(O)),T.forEach(O=>l._free(O)),I!==0&&l._OrtReleaseRunOptions(I),x.forEach(O=>l._free(O))}},Ju=e=>{let t=We(),r=jt.get(e);if(!r)throw new Error("invalid session id");let o=r[0],n=t._OrtEndProfiling(o);n===0&&Me("Can\'t get an profile file name."),t._OrtFree(n)},el=e=>{let t=[];for(let r of e){let o=r[2];!Array.isArray(o)&&"buffer"in o&&t.push(o.buffer)}return t};self.onmessage=e=>{let{type:t,in:r}=e.data;try{switch(t){case"init-wasm":Xo(r.wasm).then(()=>{Ku(r).then(()=>{postMessage({type:t})},o=>{postMessage({type:t,err:o})})},o=>{postMessage({type:t,err:o})});break;case"init-ep":{let{epName:o,env:n}=r;Yu(n,o).then(()=>{postMessage({type:t})},s=>{postMessage({type:t,err:s})});break}case"copy-from":{let{buffer:o}=r,n=ko(o);postMessage({type:t,out:n});break}case"create":{let{model:o,options:n}=r;Zu(o,n).then(s=>{postMessage({type:t,out:s})},s=>{postMessage({type:t,err:s})});break}case"release":Qu(r),postMessage({type:t});break;case"run":{let{sessionId:o,inputIndices:n,inputs:s,outputIndices:l,options:c}=r;Xu(o,n,s,l,new Array(l.length).fill(null),c).then(a=>{a.some(m=>m[3]!=="cpu")?postMessage({type:t,err:"Proxy does not support non-cpu tensor location."}):postMessage({type:t,out:a},el(a))},a=>{postMessage({type:t,err:a})});break}case"end-profiling":Ju(r),postMessage({type:t});break;default:}}catch(o){postMessage({type:t,err:o})}};})();\n/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n'});var Sn,ar,Zo,Za,Ja,Xu,Zu,to,ro,I_,Xa,Fy,Gy,Uy,Wy,Hy,qy,jy,Ju=B(()=>{"use strict";kt();Ny();Jn();Sn=()=>!!be.wasm.proxy&&typeof document<"u",Zo=!1,Za=!1,Ja=!1,Zu=new Map,to=(r,e)=>{let n=Zu.get(r);n?n.push(e):Zu.set(r,[e])},ro=()=>{if(Zo||!Za||Ja||!ar)throw new Error("worker not ready")},I_=r=>{switch(r.data.type){case"init-wasm":Zo=!1,r.data.err?(Ja=!0,Xu[1](r.data.err)):(Za=!0,Xu[0]());break;case"init-ep":case"copy-from":case"create":case"release":case"run":case"end-profiling":{let e=Zu.get(r.data.type);r.data.err?e.shift()[1](r.data.err):e.shift()[0](r.data.out);break}default:}},Xa=typeof document<"u"?document?.currentScript?.src:void 0,Fy=async()=>{if(!Za){if(Zo)throw new Error("multiple calls to 'initWasm()' detected.");if(Ja)throw new Error("previous call to 'initWasm()' failed.");if(Zo=!0,Sn())return be.wasm.wasmPaths===void 0&&Xa&&Xa.indexOf("blob:")!==0&&(be.wasm.wasmPaths=Xa.substr(0,+Xa.lastIndexOf("/")+1)),new Promise((r,e)=>{ar?.terminate();let n=URL.createObjectURL(new Blob([Vy()],{type:"text/javascript"}));ar=new Worker(n,{name:"ort-wasm-proxy-worker"}),ar.onerror=o=>e(o),ar.onmessage=I_,URL.revokeObjectURL(n),Xu=[r,e];let t={type:"init-wasm",in:be};ar.postMessage(t)});try{await Jh(be.wasm),await ky(be),Za=!0}catch(r){throw Ja=!0,r}finally{Zo=!1}}},Gy=async r=>{if(Sn())return ro(),new Promise((e,n)=>{to("init-ep",[e,n]);let t={type:"init-ep",in:{epName:r,env:be}};ar.postMessage(t)});await Dy(be,r)},Uy=async r=>Sn()?(ro(),new Promise((e,n)=>{to("copy-from",[e,n]);let t={type:"copy-from",in:{buffer:r}};ar.postMessage(t,[r.buffer])})):Yu(r),Wy=async(r,e)=>{if(Sn()){if(e?.preferredOutputLocation)throw new Error('session option "preferredOutputLocation" is not supported for proxy.');return ro(),new Promise((n,t)=>{to("create",[n,t]);let o={type:"create",in:{model:r,options:e}},i=[];r instanceof Uint8Array&&i.push(r.buffer),ar.postMessage(o,i)})}else return By(r,e)},Hy=async r=>{if(Sn())return ro(),new Promise((e,n)=>{to("release",[e,n]);let t={type:"release",in:r};ar.postMessage(t)});Ry(r)},qy=async(r,e,n,t,o,i)=>{if(Sn()){if(n.some(s=>s[3]!=="cpu"))throw new Error("input tensor on GPU is not supported for proxy.");if(o.some(s=>s))throw new Error("pre-allocated output tensor is not supported for proxy.");return ro(),new Promise((s,a)=>{to("run",[s,a]);let u=n,l={type:"run",in:{sessionId:r,inputIndices:e,inputs:u,outputIndices:t,options:i}};ar.postMessage(l,Ly(u))})}else return zy(r,e,n,t,o,i)},jy=async r=>{if(Sn())return ro(),new Promise((e,n)=>{to("end-profiling",[e,n]);let t={type:"end-profiling",in:r};ar.postMessage(t)});My(r)}});var Ky,A_,Qa,Yy=B(()=>{"use strict";kt();Ju();Ie();_u();Ky=(r,e)=>{switch(r.location){case"cpu":return[r.type,r.dims,r.data,"cpu"];case"gpu-buffer":return[r.type,r.dims,{gpuBuffer:r.gpuBuffer},"gpu-buffer"];default:throw new Error(`invalid data location: ${r.location} for ${e()}`)}},A_=r=>{switch(r[3]){case"cpu":return new _t(r[0],r[2],r[1]);case"gpu-buffer":{let e=r[0];if(!Ia(e))throw new Error(`not supported data type: ${e} for deserializing GPU tensor`);let{gpuBuffer:n,download:t,dispose:o}=r[2];return _t.fromGpuBuffer(n,{dataType:e,dims:r[1],download:t,dispose:o})}default:throw new Error(`invalid data location: ${r[3]}`)}},Qa=class{async fetchModelAndCopyToWasmMemory(e){return Uy(await qo(e))}async loadModel(e,n){Vt();let t;typeof e=="string"?typeof process<"u"&&process.versions&&process.versions.node?t=await qo(e):t=await this.fetchModelAndCopyToWasmMemory(e):t=e,[this.sessionId,this.inputNames,this.outputNames]=await Wy(t,n),Ft()}async dispose(){return Hy(this.sessionId)}async run(e,n,t){Vt();let o=[],i=[];Object.entries(e).forEach(h=>{let g=h[0],b=h[1],v=this.inputNames.indexOf(g);if(v===-1)throw new Error(`invalid input '${g}'`);o.push(b),i.push(v)});let s=[],a=[];Object.entries(n).forEach(h=>{let g=h[0],b=h[1],v=this.outputNames.indexOf(g);if(v===-1)throw new Error(`invalid output '${g}'`);s.push(b),a.push(v)});let u=o.map((h,g)=>Ky(h,()=>`input "${this.inputNames[i[g]]}"`)),l=s.map((h,g)=>h?Ky(h,()=>`output "${this.outputNames[a[g]]}"`):null),d=await qy(this.sessionId,i,u,a,l,t),p={};for(let h=0;h<d.length;h++)p[this.outputNames[a[h]]]=s[h]??A_(d[h]);return Ft(),p}startProfiling(){}endProfiling(){jy(this.sessionId)}}});var O_,es,Xy=B(()=>{"use strict";kt();Ju();Yy();O_=()=>{if((typeof be.wasm.initTimeout!="number"||be.wasm.initTimeout<0)&&(be.wasm.initTimeout=0),typeof be.wasm.simd!="boolean"&&(be.wasm.simd=!0),typeof be.wasm.proxy!="boolean"&&(be.wasm.proxy=!1),typeof be.wasm.trace!="boolean"&&(be.wasm.trace=!1),typeof be.wasm.numThreads!="number"||!Number.isInteger(be.wasm.numThreads)||be.wasm.numThreads<=0){(typeof self<"u"&&!self.crossOriginIsolated||typeof process<"u"&&process.versions&&process.versions.node)&&(be.wasm.numThreads=1);let r=typeof navigator>"u"?(void 0)().length:navigator.hardwareConcurrency;be.wasm.numThreads=Math.min(4,Math.ceil((r||1)/2))}},es=class{async init(e){O_(),await Fy(),await Gy(e)}async createInferenceSessionHandler(e,n){let t=new Qa;return await t.loadModel(e,n),Promise.resolve(t)}}});var Zy={};Ur(Zy,{wasmBackend:()=>E_});var E_,Jy=B(()=>{"use strict";Xy();E_=new es});var P_={};Ur(P_,{InferenceSession:()=>Il,TRACE:()=>Ao,TRACE_FUNC_BEGIN:()=>Vt,TRACE_FUNC_END:()=>Ft,Tensor:()=>_t,TrainingSession:()=>Cl,default:()=>C_,env:()=>be,registerBackend:()=>Mr});module.exports=wr(P_);kt();kt();kt();var kl="1.18.0";var C_=us;{let r=(Mh(),wr(zh)).onnxjsBackend;Mr("webgl",r,-10)}{let r=(Jy(),wr(Zy)).wasmBackend;Mr("webgpu",r,5),Mr("webnn",r,5),Mr("cpu",r,10),Mr("wasm",r,10)}Object.defineProperty(be.versions,"web",{value:kl,enumerable:!0});
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/*! Bundled license information:

long/index.js:
  (**
   * @license
   * Copyright 2009 The Closure Library Authors
   * Copyright 2020 Daniel Wirtz / The long.js Authors.
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *     http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *
   * SPDX-License-Identifier: Apache-2.0
   *)
*/
//# sourceMappingURL=ort.all.min.js.map
