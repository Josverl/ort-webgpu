var e,t,n={"?2ce3":
/*!**********************************!*\
  !*** onnxruntime-node (ignored) ***!
  \**********************************/()=>{},"?7a2c":
/*!********************!*\
  !*** fs (ignored) ***!
  \********************/()=>{},"?a42a":
/*!**********************!*\
  !*** path (ignored) ***!
  \**********************/()=>{},"?2b25":
/*!***********************!*\
  !*** sharp (ignored) ***!
  \***********************/()=>{},"?e65c":
/*!****************************!*\
  !*** stream/web (ignored) ***!
  \****************************/()=>{},"?569f":
/*!********************!*\
  !*** fs (ignored) ***!
  \********************/()=>{},"?3f59":
/*!**********************!*\
  !*** path (ignored) ***!
  \**********************/()=>{},"?154a":
/*!*********************!*\
  !*** url (ignored) ***!
  \*********************/()=>{},"../../../../../home/gs/onnxruntime/js/web/dist/esm/ort.webgpu.min.js":
/*!****************************************************************************!*\
  !*** ../../../../../home/gs/onnxruntime/js/web/dist/esm/ort.webgpu.min.js ***!
  \****************************************************************************/(e,t,n)=>{n.r(t),n.d(t,{InferenceSession:()=>I,TRACE:()=>S,TRACE_FUNC_BEGIN:()=>k,TRACE_FUNC_END:()=>E,Tensor:()=>T,TrainingSession:()=>O,default:()=>Su,env:()=>d,registerBackend:()=>a});
/*!
 * ONNX Runtime Web v1.18.0
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License.
 */
var r,i,a,s,o,l,u,d,c,h,p,f,m,g,_,y,w,v,b,$,x,C,T,S,M,k,E,A,I,P,O,z=Object.defineProperty,B=Object.getOwnPropertyDescriptor,R=Object.getOwnPropertyNames,F=Object.prototype.hasOwnProperty,j=(e,t)=>()=>(e&&(t=e(e=0)),t),D=(e,t)=>()=>(t||e((t={exports:{}}).exports,t),t.exports),L=(e,t)=>{for(var n in t)z(e,n,{get:t[n],enumerable:!0})},N=e=>((e,t,n,r)=>{if(t&&"object"==typeof t||"function"==typeof t)for(let i of R(t))!F.call(e,i)&&i!==n&&z(e,i,{get:()=>t[i],enumerable:!(r=B(t,i))||r.enumerable});return e})(z({},"__esModule",{value:!0}),e),W=j((()=>{r=new Map,i=[],a=(e,t,n)=>{if(!t||"function"!=typeof t.init||"function"!=typeof t.createInferenceSessionHandler)throw new TypeError("not a valid backend");{let a=r.get(e);if(void 0===a)r.set(e,{backend:t,priority:n});else{if(a.priority>n)return;if(a.priority===n&&a.backend!==t)throw new Error(`cannot register backend "${e}" using priority ${n}`)}if(n>=0){let t=i.indexOf(e);-1!==t&&i.splice(t,1);for(let t=0;t<i.length;t++)if(r.get(i[t]).priority<=n)return void i.splice(t,0,e);i.push(e)}}},s=async e=>{let t=0===e.length?i:e,n=[];for(let e of t){let t=r.get(e);if(t){if(t.initialized)return t.backend;if(t.aborted)continue;let r=!!t.initPromise;try{return r||(t.initPromise=t.backend.init(e)),await t.initPromise,t.initialized=!0,t.backend}catch(i){r||n.push({name:e,err:i}),t.aborted=!0}finally{delete t.initPromise}}}throw new Error(`no available backend found. ERR: ${n.map((e=>`[${e.name}] ${e.err}`)).join(", ")}`)}})),U=j((()=>{W()})),V=j((()=>{o="1.18.0"})),G=j((()=>{V(),l="warning",u={wasm:{},webgl:{},webgpu:{},versions:{common:o},set logLevel(e){if(void 0!==e){if("string"!=typeof e||-1===["verbose","info","warning","error","fatal"].indexOf(e))throw new Error(`Unsupported logging level: ${e}`);l=e}},get logLevel(){return l}},Object.defineProperty(u,"logLevel",{enumerable:!0})})),q=j((()=>{G(),d=u})),H=j((()=>{c=(e,t)=>{let n=typeof document<"u"?document.createElement("canvas"):new OffscreenCanvas(1,1);n.width=e.dims[3],n.height=e.dims[2];let r=n.getContext("2d");if(null!=r){let i,a;void 0!==t?.tensorLayout&&"NHWC"===t.tensorLayout?(i=e.dims[2],a=e.dims[3]):(i=e.dims[3],a=e.dims[2]);let s,o,l=void 0!==t?.format?t.format:"RGB",u=t?.norm;void 0===u||void 0===u.mean?s=[255,255,255,255]:"number"==typeof u.mean?s=[u.mean,u.mean,u.mean,u.mean]:(s=[u.mean[0],u.mean[1],u.mean[2],0],void 0!==u.mean[3]&&(s[3]=u.mean[3])),void 0===u||void 0===u.bias?o=[0,0,0,0]:"number"==typeof u.bias?o=[u.bias,u.bias,u.bias,u.bias]:(o=[u.bias[0],u.bias[1],u.bias[2],0],void 0!==u.bias[3]&&(o[3]=u.bias[3]));let d=a*i,c=0,h=d,p=2*d,f=-1;"RGBA"===l?(c=0,h=d,p=2*d,f=3*d):"RGB"===l?(c=0,h=d,p=2*d):"RBG"===l&&(c=0,p=d,h=2*d);for(let t=0;t<a;t++)for(let n=0;n<i;n++){let i=(e.data[c++]-o[0])*s[0],a=(e.data[h++]-o[1])*s[1],l=(e.data[p++]-o[2])*s[2],u=-1===f?255:(e.data[f++]-o[3])*s[3];r.fillStyle="rgba("+i+","+a+","+l+","+u+")",r.fillRect(n,t,1,1)}if("toDataURL"in n)return n.toDataURL();throw new Error("toDataURL is not supported")}throw new Error("Can not access image data")},h=(e,t)=>{let n,r=typeof document<"u"?document.createElement("canvas").getContext("2d"):new OffscreenCanvas(1,1).getContext("2d");if(null==r)throw new Error("Can not access image data");{let i,a,s;void 0!==t?.tensorLayout&&"NHWC"===t.tensorLayout?(i=e.dims[2],a=e.dims[1],s=e.dims[3]):(i=e.dims[3],a=e.dims[2],s=e.dims[1]);let o,l,u=void 0!==t&&void 0!==t.format?t.format:"RGB",d=t?.norm;void 0===d||void 0===d.mean?o=[255,255,255,255]:"number"==typeof d.mean?o=[d.mean,d.mean,d.mean,d.mean]:(o=[d.mean[0],d.mean[1],d.mean[2],255],void 0!==d.mean[3]&&(o[3]=d.mean[3])),void 0===d||void 0===d.bias?l=[0,0,0,0]:"number"==typeof d.bias?l=[d.bias,d.bias,d.bias,d.bias]:(l=[d.bias[0],d.bias[1],d.bias[2],0],void 0!==d.bias[3]&&(l[3]=d.bias[3]));let c=a*i;if(void 0!==t&&(void 0!==t.format&&4===s&&"RGBA"!==t.format||3===s&&"RGB"!==t.format&&"BGR"!==t.format))throw new Error("Tensor format doesn't match input tensor dims");let h=4,p=0,f=1,m=2,g=3,_=0,y=c,w=2*c,v=-1;"RGBA"===u?(_=0,y=c,w=2*c,v=3*c):"RGB"===u?(_=0,y=c,w=2*c):"RBG"===u&&(_=0,w=c,y=2*c),n=r.createImageData(i,a);for(let t=0;t<a*i;p+=h,f+=h,m+=h,g+=h,t++)n.data[p]=(e.data[_++]-l[0])*o[0],n.data[f]=(e.data[y++]-l[1])*o[1],n.data[m]=(e.data[w++]-l[2])*o[2],n.data[g]=-1===v?255:(e.data[v++]-l[3])*o[3]}return n}})),K=j((()=>{X(),p=(e,t)=>{if(void 0===e)throw new Error("Image buffer must be defined");if(void 0===t.height||void 0===t.width)throw new Error("Image height and width must be defined");if("NHWC"===t.tensorLayout)throw new Error("NHWC Tensor layout is not supported yet");let n,r,{height:i,width:a}=t,s=t.norm??{mean:255,bias:0};n="number"==typeof s.mean?[s.mean,s.mean,s.mean,s.mean]:[s.mean[0],s.mean[1],s.mean[2],s.mean[3]??255],r="number"==typeof s.bias?[s.bias,s.bias,s.bias,s.bias]:[s.bias[0],s.bias[1],s.bias[2],s.bias[3]??0];let o=void 0!==t.format?t.format:"RGBA",l=void 0!==t.tensorFormat&&void 0!==t.tensorFormat?t.tensorFormat:"RGB",u=i*a,d="RGBA"===l?new Float32Array(4*u):new Float32Array(3*u),c=4,h=0,p=1,f=2,m=3,g=0,_=u,y=2*u,w=-1;"RGB"===o&&(c=3,h=0,p=1,f=2,m=-1),"RGBA"===l?w=3*u:"RBG"===l?(g=0,y=u,_=2*u):"BGR"===l&&(y=0,_=u,g=2*u);for(let t=0;t<u;t++,h+=c,f+=c,p+=c,m+=c)d[g++]=(e[h]+r[0])/n[0],d[_++]=(e[p]+r[1])/n[1],d[y++]=(e[f]+r[2])/n[2],-1!==w&&-1!==m&&(d[w++]=(e[m]+r[3])/n[3]);return new C("float32",d,"RGBA"===l?[1,4,i,a]:[1,3,i,a])},f=async(e,t)=>{let n,r=typeof HTMLImageElement<"u"&&e instanceof HTMLImageElement,i=typeof ImageData<"u"&&e instanceof ImageData,a=typeof ImageBitmap<"u"&&e instanceof ImageBitmap,s="string"==typeof e,o=t??{},l=()=>{if(typeof document<"u")return document.createElement("canvas");if(typeof OffscreenCanvas<"u")return new OffscreenCanvas(1,1);throw new Error("Canvas is not supported")},u=e=>e instanceof HTMLCanvasElement||e instanceof OffscreenCanvas?e.getContext("2d"):null;if(r){let r=l();r.width=e.width,r.height=e.height;let i=u(r);if(null==i)throw new Error("Can not access image data");{let r=e.height,a=e.width;if(void 0!==t&&void 0!==t.resizedHeight&&void 0!==t.resizedWidth&&(r=t.resizedHeight,a=t.resizedWidth),void 0!==t){if(o=t,void 0!==t.tensorFormat)throw new Error("Image input config format must be RGBA for HTMLImageElement");o.tensorFormat="RGBA",o.height=r,o.width=a}else o.tensorFormat="RGBA",o.height=r,o.width=a;i.drawImage(e,0,0),n=i.getImageData(0,0,a,r).data}}else{if(!i){if(a){if(void 0===t)throw new Error("Please provide image config with format for Imagebitmap");let r=l();r.width=e.width,r.height=e.height;let i=u(r);if(null!=i){let t=e.height,r=e.width;return i.drawImage(e,0,0,r,t),n=i.getImageData(0,0,r,t).data,o.height=t,o.width=r,p(n,o)}throw new Error("Can not access image data")}if(s)return new Promise(((t,n)=>{let r=l(),i=u(r);if(!e||!i)return n();let a=new Image;a.crossOrigin="Anonymous",a.src=e,a.onload=()=>{r.width=a.width,r.height=a.height,i.drawImage(a,0,0,r.width,r.height);let e=i.getImageData(0,0,r.width,r.height);o.height=r.height,o.width=r.width,t(p(e.data,o))}}));throw new Error("Input data provided is not supported - aborted tensor creation")}{let r,i;if(void 0!==t&&void 0!==t.resizedWidth&&void 0!==t.resizedHeight?(r=t.resizedHeight,i=t.resizedWidth):(r=e.height,i=e.width),void 0!==t&&(o=t),o.format="RGBA",o.height=r,o.width=i,void 0!==t){let t=l();t.width=i,t.height=r;let a=u(t);if(null==a)throw new Error("Can not access image data");a.putImageData(e,0,0),n=a.getImageData(0,0,i,r).data}else n=e.data}}if(void 0!==n)return p(n,o);throw new Error("Input data provided is not supported - aborted tensor creation")},m=(e,t)=>{let{width:n,height:r,download:i,dispose:a}=t;return new C({location:"texture",type:"float32",texture:e,dims:[1,r,n,4],download:i,dispose:a})},g=(e,t)=>{let{dataType:n,dims:r,download:i,dispose:a}=t;return new C({location:"gpu-buffer",type:n??"float32",gpuBuffer:e,dims:r,download:i,dispose:a})},_=(e,t,n)=>new C({location:"cpu-pinned",type:e,data:t,dims:n??[t.length]})})),Y=j((()=>{y=new Map([["float32",Float32Array],["uint8",Uint8Array],["int8",Int8Array],["uint16",Uint16Array],["float16",Uint16Array],["int16",Int16Array],["int32",Int32Array],["bool",Uint8Array],["float64",Float64Array],["uint32",Uint32Array]]),w=new Map([[Float32Array,"float32"],[Uint8Array,"uint8"],[Int8Array,"int8"],[Uint16Array,"uint16"],[Int16Array,"int16"],[Int32Array,"int32"],[Float64Array,"float64"],[Uint32Array,"uint32"]]),v=!1,b=()=>{if(!v){v=!0;let e=typeof BigInt64Array<"u"&&"function"==typeof BigInt64Array.from,t=typeof BigUint64Array<"u"&&"function"==typeof BigUint64Array.from;e&&(y.set("int64",BigInt64Array),w.set(BigInt64Array,"int64")),t&&(y.set("uint64",BigUint64Array),w.set(BigUint64Array,"uint64"))}}})),Q=j((()=>{X(),$=e=>{let t=1;for(let n=0;n<e.length;n++){let r=e[n];if("number"!=typeof r||!Number.isSafeInteger(r))throw new TypeError(`dims[${n}] must be an integer, got: ${r}`);if(r<0)throw new RangeError(`dims[${n}] must be a non-negative integer, got: ${r}`);t*=r}return t},x=(e,t)=>{switch(e.location){case"cpu":return new C(e.type,e.data,t);case"cpu-pinned":return new C({location:"cpu-pinned",data:e.data,type:e.type,dims:t});case"texture":return new C({location:"texture",texture:e.texture,type:e.type,dims:t});case"gpu-buffer":return new C({location:"gpu-buffer",gpuBuffer:e.gpuBuffer,type:e.type,dims:t});default:throw new Error(`tensorReshape: tensor location ${e.location} is not supported`)}}})),X=j((()=>{H(),K(),Y(),Q(),C=class{constructor(e,t,n){let r,i;if(b(),"object"==typeof e&&"location"in e)switch(this.dataLocation=e.location,r=e.type,i=e.dims,e.location){case"cpu-pinned":{let t=y.get(r);if(!t)throw new TypeError(`unsupported type "${r}" to create tensor from pinned buffer`);if(!(e.data instanceof t))throw new TypeError(`buffer should be of type ${t.name}`);this.cpuData=e.data;break}case"texture":if("float32"!==r)throw new TypeError(`unsupported type "${r}" to create tensor from texture`);this.gpuTextureData=e.texture,this.downloader=e.download,this.disposer=e.dispose;break;case"gpu-buffer":if("float32"!==r&&"float16"!==r&&"int32"!==r&&"int64"!==r&&"uint32"!==r&&"bool"!==r)throw new TypeError(`unsupported type "${r}" to create tensor from gpu buffer`);this.gpuBufferData=e.gpuBuffer,this.downloader=e.download,this.disposer=e.dispose;break;default:throw new Error(`Tensor constructor: unsupported location '${this.dataLocation}'`)}else{let a,s;if("string"==typeof e)if(r=e,s=n,"string"===e){if(!Array.isArray(t))throw new TypeError("A string tensor's data must be a string array.");a=t}else{let n=y.get(e);if(void 0===n)throw new TypeError(`Unsupported tensor type: ${e}.`);if(Array.isArray(t)){if("float16"===e)throw new TypeError("Creating a float16 tensor from number array is not supported. Please use Uint16Array as data.");a="uint64"===e||"int64"===e?n.from(t,BigInt):n.from(t)}else{if(!(t instanceof n))throw new TypeError(`A ${r} tensor's data must be type of ${n}`);a=t}}else if(s=t,Array.isArray(e)){if(0===e.length)throw new TypeError("Tensor type cannot be inferred from an empty array.");let t=typeof e[0];if("string"===t)r="string",a=e;else{if("boolean"!==t)throw new TypeError(`Invalid element type of data array: ${t}.`);r="bool",a=Uint8Array.from(e)}}else{let t=w.get(e.constructor);if(void 0===t)throw new TypeError(`Unsupported type for tensor data: ${e.constructor}.`);r=t,a=e}if(void 0===s)s=[a.length];else if(!Array.isArray(s))throw new TypeError("A tensor's dims must be a number array");i=s,this.cpuData=a,this.dataLocation="cpu"}let a=$(i);if(this.cpuData&&a!==this.cpuData.length)throw new Error(`Tensor's size(${a}) does not match data length(${this.cpuData.length}).`);this.type=r,this.dims=i,this.size=a}static async fromImage(e,t){return f(e,t)}static fromTexture(e,t){return m(e,t)}static fromGpuBuffer(e,t){return g(e,t)}static fromPinnedBuffer(e,t,n){return _(e,t,n)}toDataURL(e){return c(this,e)}toImageData(e){return h(this,e)}get data(){if(this.ensureValid(),!this.cpuData)throw new Error("The data is not on CPU. Use `getData()` to download GPU data to CPU, or use `texture` or `gpuBuffer` property to access the GPU data directly.");return this.cpuData}get location(){return this.dataLocation}get texture(){if(this.ensureValid(),!this.gpuTextureData)throw new Error("The data is not stored as a WebGL texture.");return this.gpuTextureData}get gpuBuffer(){if(this.ensureValid(),!this.gpuBufferData)throw new Error("The data is not stored as a WebGPU buffer.");return this.gpuBufferData}async getData(e){switch(this.ensureValid(),this.dataLocation){case"cpu":case"cpu-pinned":return this.data;case"texture":case"gpu-buffer":if(!this.downloader)throw new Error("The current tensor is not created with a specified data downloader.");if(this.isDownloading)throw new Error("The current tensor is being downloaded.");try{this.isDownloading=!0;let t=await this.downloader();return this.downloader=void 0,this.dataLocation="cpu",this.cpuData=t,e&&this.disposer&&(this.disposer(),this.disposer=void 0),t}finally{this.isDownloading=!1}default:throw new Error(`cannot get data from location: ${this.dataLocation}`)}}dispose(){if(this.isDownloading)throw new Error("The current tensor is being downloaded.");this.disposer&&(this.disposer(),this.disposer=void 0),this.cpuData=void 0,this.gpuTextureData=void 0,this.gpuBufferData=void 0,this.downloader=void 0,this.isDownloading=void 0,this.dataLocation="none"}ensureValid(){if("none"===this.dataLocation)throw new Error("The tensor is disposed.")}reshape(e){if(this.ensureValid(),this.downloader||this.disposer)throw new Error("Cannot reshape a tensor that owns GPU resource.");return x(this,e)}}})),Z=j((()=>{X(),T=C})),J=j((()=>{G(),S=(e,t)=>{u.wasm.trace&&console.timeStamp(`${e}::ORT::${t}`)},M=(e,t)=>{let n=(new Error).stack?.split(/\r\n|\r|\n/g)||[],r=!1;for(let i=0;i<n.length;i++){if(r&&!n[i].includes("TRACE_FUNC")){let r=`FUNC_${e}::${n[i].trim().split(" ")[1]}`;return t&&(r+=`::${t}`),void S("CPU",r)}n[i].includes("TRACE_FUNC")&&(r=!0)}},k=e=>{u.wasm.trace&&M("BEGIN",e)},E=e=>{u.wasm.trace&&M("END",e)}})),ee=j((()=>{W(),Z(),J(),A=class e{constructor(e){this.handler=e}async run(e,t,n){k();let r={},i={};if("object"!=typeof e||null===e||e instanceof T||Array.isArray(e))throw new TypeError("'feeds' must be an object that use input names as keys and OnnxValue as corresponding values.");let a=!0;if("object"==typeof t){if(null===t)throw new TypeError("Unexpected argument[1]: cannot be null.");if(t instanceof T)throw new TypeError("'fetches' cannot be a Tensor");if(Array.isArray(t)){if(0===t.length)throw new TypeError("'fetches' cannot be an empty array.");a=!1;for(let e of t){if("string"!=typeof e)throw new TypeError("'fetches' must be a string array or an object.");if(-1===this.outputNames.indexOf(e))throw new RangeError(`'fetches' contains invalid output name: ${e}.`);r[e]=null}if("object"==typeof n&&null!==n)i=n;else if(typeof n<"u")throw new TypeError("'options' must be an object.")}else{let e=!1,s=Object.getOwnPropertyNames(t);for(let n of this.outputNames)if(-1!==s.indexOf(n)){let i=t[n];(null===i||i instanceof T)&&(e=!0,a=!1,r[n]=i)}if(e){if("object"==typeof n&&null!==n)i=n;else if(typeof n<"u")throw new TypeError("'options' must be an object.")}else i=t}}else if(typeof t<"u")throw new TypeError("Unexpected argument[1]: must be 'fetches' or 'options'.");for(let t of this.inputNames)if(typeof e[t]>"u")throw new Error(`input '${t}' is missing in 'feeds'.`);if(a)for(let e of this.outputNames)r[e]=null;let s=await this.handler.run(e,r,i),o={};for(let e in s)if(Object.hasOwnProperty.call(s,e)){let t=s[e];o[e]=t instanceof T?t:new T(t.type,t.data,t.dims)}return E(),o}async release(){return this.handler.dispose()}static async create(t,n,r,i){k();let a,o={};if("string"==typeof t){if(a=t,"object"==typeof n&&null!==n)o=n;else if(typeof n<"u")throw new TypeError("'options' must be an object.")}else if(t instanceof Uint8Array){if(a=t,"object"==typeof n&&null!==n)o=n;else if(typeof n<"u")throw new TypeError("'options' must be an object.")}else{if(!(t instanceof ArrayBuffer||typeof SharedArrayBuffer<"u"&&t instanceof SharedArrayBuffer))throw new TypeError("Unexpected argument[0]: must be 'path' or 'buffer'.");{let e=t,s=0,l=t.byteLength;if("object"==typeof n&&null!==n)o=n;else if("number"==typeof n){if(s=n,!Number.isSafeInteger(s))throw new RangeError("'byteOffset' must be an integer.");if(s<0||s>=e.byteLength)throw new RangeError(`'byteOffset' is out of range [0, ${e.byteLength}).`);if(l=t.byteLength-s,"number"==typeof r){if(l=r,!Number.isSafeInteger(l))throw new RangeError("'byteLength' must be an integer.");if(l<=0||s+l>e.byteLength)throw new RangeError(`'byteLength' is out of range (0, ${e.byteLength-s}].`);if("object"==typeof i&&null!==i)o=i;else if(typeof i<"u")throw new TypeError("'options' must be an object.")}else if(typeof r<"u")throw new TypeError("'byteLength' must be a number.")}else if(typeof n<"u")throw new TypeError("'options' must be an object.");a=new Uint8Array(e,s,l)}}let l=(o.executionProviders||[]).map((e=>"string"==typeof e?e:e.name)),u=await(await s(l)).createInferenceSessionHandler(a,o);return E(),new e(u)}startProfiling(){this.handler.startProfiling()}endProfiling(){this.handler.endProfiling()}get inputNames(){return this.handler.inputNames}get outputNames(){return this.handler.outputNames}}})),te=j((()=>{ee(),I=A})),ne=j((()=>{})),re=j((()=>{W(),Z(),"Training backend could not be resolved. Make sure you're using the correct configuration & WebAssembly files.",P=class e{constructor(e,t,n){this.handler=e,this.hasOptimizerModel=t,this.hasEvalModel=n}get trainingInputNames(){return this.handler.inputNames}get trainingOutputNames(){return this.handler.outputNames}get evalInputNames(){if(this.hasEvalModel)return this.handler.evalInputNames;throw new Error("This training session has no evalModel loaded.")}get evalOutputNames(){if(this.hasEvalModel)return this.handler.evalOutputNames;throw new Error("This training session has no evalModel loaded.")}static async create(t,n){let r=t.evalModel||"",i=t.optimizerModel||"",a=n||{},o=(a.executionProviders||[]).map((e=>"string"==typeof e?e:e.name)),l=await s(o);if(l.createTrainingSessionHandler){let n=await l.createTrainingSessionHandler(t.checkpointState,t.trainModel,r,i,a);return new e(n,!!t.optimizerModel,!!t.evalModel)}throw new Error("Training backend could not be resolved. Make sure you're using the correct configuration & WebAssembly files.")}typeNarrowingForRunStep(e,t,n,r,i){let a={},s={};if("object"!=typeof n||null===n||n instanceof T||Array.isArray(n))throw new TypeError("'feeds' must be an object that use input names as keys and OnnxValue as corresponding values.");let o=!0;if("object"==typeof r){if(null===r)throw new TypeError("Unexpected argument[1]: cannot be null.");if(r instanceof T)throw new TypeError("'fetches' cannot be a Tensor");if(Array.isArray(r)){if(0===r.length)throw new TypeError("'fetches' cannot be an empty array.");o=!1;for(let e of r){if("string"!=typeof e)throw new TypeError("'fetches' must be a string array or an object.");if(-1===t.indexOf(e))throw new RangeError(`'fetches' contains invalid output name: ${e}.`);a[e]=null}if("object"==typeof i&&null!==i)s=i;else if(typeof i<"u")throw new TypeError("'options' must be an object.")}else{let e=!1,n=Object.getOwnPropertyNames(r);for(let i of t)if(-1!==n.indexOf(i)){let t=r[i];(null===t||t instanceof T)&&(e=!0,o=!1,a[i]=t)}if(e){if("object"==typeof i&&null!==i)s=i;else if(typeof i<"u")throw new TypeError("'options' must be an object.")}else s=r}}else if(typeof r<"u")throw new TypeError("Unexpected argument[1]: must be 'fetches' or 'options'.");for(let t of e)if(typeof n[t]>"u")throw new Error(`input '${t}' is missing in 'feeds'.`);if(o)for(let e of t)a[e]=null;return[a,s]}convertHandlerReturnTypeToMapOfTensors(e){let t={};for(let n in e)if(Object.hasOwnProperty.call(e,n)){let r=e[n];t[n]=r instanceof T?r:new T(r.type,r.data,r.dims)}return t}async lazyResetGrad(){await this.handler.lazyResetGrad()}async runTrainStep(e,t,n){let[r,i]=this.typeNarrowingForRunStep(this.trainingInputNames,this.trainingOutputNames,e,t,n),a=await this.handler.runTrainStep(e,r,i);return this.convertHandlerReturnTypeToMapOfTensors(a)}async runOptimizerStep(e){if(!this.hasOptimizerModel)throw new Error("This TrainingSession has no OptimizerModel loaded.");await this.handler.runOptimizerStep(e||{})}async runEvalStep(e,t,n){if(this.hasEvalModel){let[r,i]=this.typeNarrowingForRunStep(this.evalInputNames,this.evalOutputNames,e,t,n),a=await this.handler.runEvalStep(e,r,i);return this.convertHandlerReturnTypeToMapOfTensors(a)}throw new Error("This TrainingSession has no EvalModel loaded.")}async getParametersSize(e=!0){return this.handler.getParametersSize(e)}async loadParametersBuffer(e,t=!0){let n=await this.getParametersSize(t);if(e.length!==4*n)throw new Error("Size of the buffer passed into loadParametersBuffer must match the number of parameters in the model. Please use getParametersSize method to check.");return this.handler.loadParametersBuffer(e,t)}async getContiguousParameters(e=!0){return this.handler.getContiguousParameters(e)}async release(){return this.handler.dispose()}}})),ie=j((()=>{re(),O=P})),ae={};L(ae,{InferenceSession:()=>I,TRACE:()=>S,TRACE_FUNC_BEGIN:()=>k,TRACE_FUNC_END:()=>E,Tensor:()=>T,TrainingSession:()=>O,env:()=>d,registerBackend:()=>a});var se=j((()=>{U(),q(),te(),Z(),J(),ne(),ie()})),oe={};L(oe,{createReadStream:()=>de,readFile:()=>le,readFileSync:()=>ue});var le,ue,de,ce=j((()=>{le=void 0,ue=void 0,de=void 0})),he={};L(he,{join:()=>pe});var pe,fe=j((()=>{pe=void 0})),me=D(((e,t)=>{var n,r=(n=typeof document<"u"&&document.currentScript?document.currentScript.src:void 0,typeof __filename<"u"&&(n=n||__filename),function(e={}){var t,r,i=e;i.ready=new Promise(((e,n)=>{t=e,r=n})),i.mountExternalData=(e,t)=>{(i.Nh||(i.Nh=new Map)).set(e,t)},i.unmountExternalData=()=>{delete i.Nh},i.jsepInit=(e,t,n,r,a,s,o,l,u,d,c)=>{i.ui=e,i.gi=t,i.ki=n,i.Th=r,i.ji=a,i.he=s,i.li=o,i.ni=l,i.hi=u,i.ii=d,i.mi=c,t=(e,t,n)=>(...r)=>{let i=Fe,a=t?.();r=e(...r);let s=t?.();return a!==s&&(e=s,n(a),t=n=null),Fe!=i?new Promise(((e,t)=>{Ue={resolve:e,reject:t}})):r},n=t=>async(...n)=>{try{if(i.Kh)throw Error("Session already started");let r=i.Kh={oi:n[0],errors:[]},a=await t(...n);if(i.Kh!==r)throw Error("Session mismatch");e.flush();let s=r.errors;if(0<s.length){let e=await Promise.all(s);if(e=e.filter((e=>e)),0<e.length)throw Error(e.join("\n"))}return a}finally{i.Kh=null}},i._OrtCreateSession=t(i._OrtCreateSession,(()=>i._OrtCreateSession),(e=>i._OrtCreateSession=e)),i._OrtRun=n(t(i._OrtRun,(()=>i._OrtRun),(e=>i._OrtRun=e))),i._OrtRunWithBinding=n(t(i._OrtRunWithBinding,(()=>i._OrtRunWithBinding),(e=>i._OrtRunWithBinding=e))),i._OrtBindInput=t(i._OrtBindInput,(()=>i._OrtBindInput),(e=>i._OrtBindInput=e)),i.jsepRegisterBuffer=(t,n,r,i)=>e.registerBuffer(t,n,r,i),i.jsepGetBuffer=t=>e.getBuffer(t),i.jsepCreateDownloader=(t,n,r)=>e.createDownloader(t,n,r),i.jsepOnReleaseSession=t=>{e.onReleaseSession(t)},i.jsepOnRunStart=t=>e.onRunStart(t)};var a,s,o,l=Object.assign({},i),u="./this.program",d=(e,t)=>{throw t},c="object"==typeof window,h="function"==typeof importScripts,p="object"==typeof process&&"object"==typeof process.versions&&"string"==typeof process.versions.node,f="";if(p){var m=(ce(),N(oe)),g=(fe(),N(he));f=h?g.dirname(f)+"/":__dirname+"/",a=(e,t)=>(e=U(e)?new URL(e):g.normalize(e),m.readFileSync(e,t?void 0:"utf8")),o=e=>((e=a(e,!0)).buffer||(e=new Uint8Array(e)),e),s=(e,t,n,r=!0)=>{e=U(e)?new URL(e):g.normalize(e),m.readFile(e,r?void 0:"utf8",((e,i)=>{e?n(e):t(r?i.buffer:i)}))},!i.thisProgram&&1<process.argv.length&&(u=process.argv[1].replace(/\\/g,"/")),process.argv.slice(2),d=(e,t)=>{throw process.exitCode=e,t},i.inspect=()=>"[Emscripten Module object]"}else(c||h)&&(h?f=self.location.href:typeof document<"u"&&document.currentScript&&(f=document.currentScript.src),n&&(f=n),f=0!==f.indexOf("blob:")?f.substr(0,f.replace(/[?#].*/,"").lastIndexOf("/")+1):"",a=e=>{var t=new XMLHttpRequest;return t.open("GET",e,!1),t.send(null),t.responseText},h&&(o=e=>{var t=new XMLHttpRequest;return t.open("GET",e,!1),t.responseType="arraybuffer",t.send(null),new Uint8Array(t.response)}),s=(e,t,n)=>{var r=new XMLHttpRequest;r.open("GET",e,!0),r.responseType="arraybuffer",r.onload=()=>{200==r.status||0==r.status&&r.response?t(r.response):n()},r.onerror=n,r.send(null)});var _=console.log.bind(console),y=console.error.bind(console);Object.assign(i,l),l=null,"object"!=typeof WebAssembly&&D("no native wasm support detected");var w,v,b,$,x,C,T,S,M,k,E,A,I=!1;function P(){var e=w.buffer;i.HEAP8=b=new Int8Array(e),i.HEAP16=x=new Int16Array(e),i.HEAPU8=$=new Uint8Array(e),i.HEAPU16=C=new Uint16Array(e),i.HEAP32=T=new Int32Array(e),i.HEAPU32=S=new Uint32Array(e),i.HEAPF32=M=new Float32Array(e),i.HEAPF64=A=new Float64Array(e),i.HEAP64=k=new BigInt64Array(e),i.HEAPU64=E=new BigUint64Array(e)}var O=[],z=[],B=[],R=0,F=null,j=null;function D(e){throw y(e="Aborted("+e+")"),I=!0,v=1,e=new WebAssembly.RuntimeError(e+". Build with -sASSERTIONS for more info."),r(e),e}var L,W=e=>e.startsWith("data:application/octet-stream;base64,"),U=e=>e.startsWith("file://");if(!W(L="ort-wasm-simd.wasm")){var V=L;L=i.locateFile?i.locateFile(V,f):f+V}function G(e){if(o)return o(e);throw"both async and sync fetching of the wasm failed"}function q(e,t,n){return function(e){if(c||h){if("function"==typeof fetch&&!U(e))return fetch(e,{credentials:"same-origin"}).then((t=>{if(!t.ok)throw"failed to load wasm binary file at '"+e+"'";return t.arrayBuffer()})).catch((()=>G(e)));if(s)return new Promise(((t,n)=>{s(e,(e=>t(new Uint8Array(e))),n)}))}return Promise.resolve().then((()=>G(e)))}(e).then((e=>WebAssembly.instantiate(e,t))).then((e=>e)).then(n,(e=>{y(`failed to asynchronously prepare wasm: ${e}`),D(e)}))}var H={1378768:(e,t,n,r)=>{if(typeof i>"u"||!i.Nh)return 1;if((e=ie(e>>>0)).startsWith("./")&&(e=e.substring(2)),!(e=i.Nh.get(e)))return 2;if((t>>>=0)+(n>>>=0)>e.byteLength)return 3;try{return $.set(e.subarray(t,t+n),r>>>0>>>0),0}catch{return 4}},1379269:(e,t,n)=>{n=ie(n);let r=new Uint8Array(t);r.set($.subarray(e>>>0,e+t>>>0)),"object"==typeof process&&"object"==typeof process.versions&&"string"==typeof process.versions.node?(ce(),N(oe)).writeFileSync(n,r):(e=new File([r],n,{type:"application/octet-stream"}),e=URL.createObjectURL(e),window.open(e,"_blank"))},1379777:()=>{i.hi()},1379808:()=>{i.ii()},1379837:()=>{i.mi()},1379862:e=>i.gi(e),1379895:e=>i.ki(e),1379927:(e,t,n)=>{i.Th(e,t,n,!0)},1379966:(e,t,n)=>{i.Th(e,t,n)},1379999:e=>{i.he("Abs",e,void 0)},1380050:e=>{i.he("Neg",e,void 0)},1380101:e=>{i.he("Floor",e,void 0)},1380154:e=>{i.he("Ceil",e,void 0)},1380206:e=>{i.he("Reciprocal",e,void 0)},1380264:e=>{i.he("Sqrt",e,void 0)},1380316:e=>{i.he("Exp",e,void 0)},1380367:e=>{i.he("Erf",e,void 0)},1380418:e=>{i.he("Sigmoid",e,void 0)},1380473:(e,t,n)=>{i.he("HardSigmoid",e,{alpha:t,beta:n})},1380552:e=>{i.he("Log",e,void 0)},1380603:e=>{i.he("Sin",e,void 0)},1380654:e=>{i.he("Cos",e,void 0)},1380705:e=>{i.he("Tan",e,void 0)},1380756:e=>{i.he("Asin",e,void 0)},1380808:e=>{i.he("Acos",e,void 0)},1380860:e=>{i.he("Atan",e,void 0)},1380912:e=>{i.he("Sinh",e,void 0)},1380964:e=>{i.he("Cosh",e,void 0)},1381016:e=>{i.he("Asinh",e,void 0)},1381069:e=>{i.he("Acosh",e,void 0)},1381122:e=>{i.he("Atanh",e,void 0)},1381175:e=>{i.he("Tanh",e,void 0)},1381227:e=>{i.he("Not",e,void 0)},1381278:(e,t,n)=>{i.he("Clip",e,{min:t,max:n})},1381347:e=>{i.he("Clip",e,void 0)},1381399:(e,t)=>{i.he("Elu",e,{alpha:t})},1381457:e=>{i.he("Relu",e,void 0)},1381509:(e,t)=>{i.he("LeakyRelu",e,{alpha:t})},1381573:(e,t)=>{i.he("ThresholdedRelu",e,{alpha:t})},1381643:(e,t)=>{i.he("Cast",e,{to:t})},1381701:e=>{i.he("Add",e,void 0)},1381752:e=>{i.he("Sub",e,void 0)},1381803:e=>{i.he("Mul",e,void 0)},1381854:e=>{i.he("Div",e,void 0)},1381905:e=>{i.he("Pow",e,void 0)},1381956:e=>{i.he("Equal",e,void 0)},1382009:e=>{i.he("Greater",e,void 0)},1382064:e=>{i.he("GreaterOrEqual",e,void 0)},1382126:e=>{i.he("Less",e,void 0)},1382178:e=>{i.he("LessOrEqual",e,void 0)},1382237:(e,t,n,r,a)=>{i.he("ReduceMean",e,{keepDims:!!t,noopWithEmptyAxes:!!n,axes:r?Array.from(T.subarray(r>>>0,a>>>0)):[]})},1382396:(e,t,n,r,a)=>{i.he("ReduceMax",e,{keepDims:!!t,noopWithEmptyAxes:!!n,axes:r?Array.from(T.subarray(r>>>0,a>>>0)):[]})},1382554:(e,t,n,r,a)=>{i.he("ReduceMin",e,{keepDims:!!t,noopWithEmptyAxes:!!n,axes:r?Array.from(T.subarray(r>>>0,a>>>0)):[]})},1382712:(e,t,n,r,a)=>{i.he("ReduceProd",e,{keepDims:!!t,noopWithEmptyAxes:!!n,axes:r?Array.from(T.subarray(r>>>0,a>>>0)):[]})},1382871:(e,t,n,r,a)=>{i.he("ReduceSum",e,{keepDims:!!t,noopWithEmptyAxes:!!n,axes:r?Array.from(T.subarray(r>>>0,a>>>0)):[]})},1383029:(e,t,n,r,a)=>{i.he("ReduceL1",e,{keepDims:!!t,noopWithEmptyAxes:!!n,axes:r?Array.from(T.subarray(r>>>0,a>>>0)):[]})},1383186:(e,t,n,r,a)=>{i.he("ReduceL2",e,{keepDims:!!t,noopWithEmptyAxes:!!n,axes:r?Array.from(T.subarray(r>>>0,a>>>0)):[]})},1383343:(e,t,n,r,a)=>{i.he("ReduceLogSum",e,{keepDims:!!t,noopWithEmptyAxes:!!n,axes:r?Array.from(T.subarray(r>>>0,a>>>0)):[]})},1383504:(e,t,n,r,a)=>{i.he("ReduceSumSquare",e,{keepDims:!!t,noopWithEmptyAxes:!!n,axes:r?Array.from(T.subarray(r>>>0,a>>>0)):[]})},1383668:(e,t,n,r,a)=>{i.he("ReduceLogSumExp",e,{keepDims:!!t,noopWithEmptyAxes:!!n,axes:r?Array.from(T.subarray(r>>>0,a>>>0)):[]})},1383832:e=>{i.he("Where",e,void 0)},1383885:(e,t,n)=>{i.he("Transpose",e,{perm:t?Array.from(T.subarray(t>>>0,n>>>0)):[]})},1383993:(e,t,n,r,a,s,o,l,u,d,c,h,p,f,m)=>{i.he("ConvTranspose",e,{format:u?"NHWC":"NCHW",autoPad:t,dilations:[n],group:r,kernel_shape:[a],pads:[s,o],strides:[l],wIsConst:()=>!!b[d>>>0],outputPadding:c?Array.from(T.subarray(c>>>0,h>>>0)):[],outputShape:p?Array.from(T.subarray(p>>>0,f>>>0)):[],activation:ie(m)})},1384395:(e,t,n,r,a,s,o,l,u,d,c,h,p,f)=>{i.he("ConvTranspose",e,{format:l?"NHWC":"NCHW",autoPad:t,dilations:Array.from(T.subarray(n>>>0,2+(n>>>0)>>>0)),group:r,kernelShape:Array.from(T.subarray(a>>>0,2+(a>>>0)>>>0)),pads:Array.from(T.subarray(s>>>0,4+(s>>>0)>>>0)),strides:Array.from(T.subarray(o>>>0,2+(o>>>0)>>>0)),wIsConst:()=>!!b[u>>>0],outputPadding:d?Array.from(T.subarray(d>>>0,c>>>0)):[],outputShape:h?Array.from(T.subarray(h>>>0,p>>>0)):[],activation:ie(f)})},1384960:(e,t,n,r,a,s,o,l,u,d,c,h,p,f,m)=>{i.he("ConvTranspose",e,{format:u?"NHWC":"NCHW",autoPad:t,dilations:[n],group:r,kernel_shape:[a],pads:[s,o],strides:[l],wIsConst:()=>!!b[d>>>0],outputPadding:c?Array.from(T.subarray(c>>>0,h>>>0)):[],outputShape:p?Array.from(T.subarray(p>>>0,f>>>0)):[],activation:ie(m)})},1385362:(e,t,n,r,a,s,o,l,u,d,c,h,p,f)=>{i.he("ConvTranspose",e,{format:l?"NHWC":"NCHW",autoPad:t,dilations:Array.from(T.subarray(n>>>0,2+(n>>>0)>>>0)),group:r,kernelShape:Array.from(T.subarray(a>>>0,2+(a>>>0)>>>0)),pads:Array.from(T.subarray(s>>>0,4+(s>>>0)>>>0)),strides:Array.from(T.subarray(o>>>0,2+(o>>>0)>>>0)),wIsConst:()=>!!b[u>>>0],outputPadding:d?Array.from(T.subarray(d>>>0,c>>>0)):[],outputShape:h?Array.from(T.subarray(h>>>0,p>>>0)):[],activation:ie(f)})},1385927:(e,t)=>{i.he("GlobalAveragePool",e,{format:t?"NHWC":"NCHW"})},1386018:(e,t,n,r,a,s,o,l,u,d,c,h,p,f,m,g)=>{i.he("AveragePool",e,{format:g?"NHWC":"NCHW",auto_pad:t,ceil_mode:n,count_include_pad:r,storage_order:a,dilations:[s,o],kernel_shape:[l,u],pads:[d,c,h,p],strides:[f,m]})},1386302:(e,t)=>{i.he("GlobalAveragePool",e,{format:t?"NHWC":"NCHW"})},1386393:(e,t,n,r,a,s,o,l,u,d,c,h,p,f,m,g)=>{i.he("AveragePool",e,{format:g?"NHWC":"NCHW",auto_pad:t,ceil_mode:n,count_include_pad:r,storage_order:a,dilations:[s,o],kernel_shape:[l,u],pads:[d,c,h,p],strides:[f,m]})},1386677:(e,t)=>{i.he("GlobalMaxPool",e,{format:t?"NHWC":"NCHW"})},1386764:(e,t,n,r,a,s,o,l,u,d,c,h,p,f,m,g)=>{i.he("MaxPool",e,{format:g?"NHWC":"NCHW",auto_pad:t,ceil_mode:n,count_include_pad:r,storage_order:a,dilations:[s,o],kernel_shape:[l,u],pads:[d,c,h,p],strides:[f,m]})},1387044:(e,t)=>{i.he("GlobalMaxPool",e,{format:t?"NHWC":"NCHW"})},1387131:(e,t,n,r,a,s,o,l,u,d,c,h,p,f,m,g)=>{i.he("MaxPool",e,{format:g?"NHWC":"NCHW",auto_pad:t,ceil_mode:n,count_include_pad:r,storage_order:a,dilations:[s,o],kernel_shape:[l,u],pads:[d,c,h,p],strides:[f,m]})},1387411:(e,t,n,r,a)=>{i.he("Gemm",e,{alpha:t,beta:n,transA:r,transB:a})},1387515:e=>{i.he("MatMul",e,void 0)},1387569:(e,t,n,r)=>{i.he("ArgMax",e,{keepDims:!!t,selectLastIndex:!!n,axis:r})},1387677:(e,t,n,r)=>{i.he("ArgMin",e,{keepDims:!!t,selectLastIndex:!!n,axis:r})},1387785:(e,t)=>{i.he("Softmax",e,{axis:t})},1387848:(e,t)=>{i.he("Concat",e,{axis:t})},1387908:(e,t,n,r,a)=>{i.he("Split",e,{axis:t,numOutputs:n,splitSizes:r?Array.from(T.subarray(r>>>0,a>>>0)):[]})},1388048:e=>{i.he("Expand",e,void 0)},1388102:(e,t)=>{i.he("Gather",e,{axis:Number(t)})},1388173:(e,t)=>{i.he("GatherElements",e,{axis:Number(t)})},1388252:(e,t,n,r,a,s,o,l,u,d,c)=>{i.he("Resize",e,{antialias:t,axes:n?Array.from(T.subarray(n>>>0,r>>>0)):[],coordinateTransformMode:ie(a),cubicCoeffA:s,excludeOutside:o,extrapolationValue:l,keepAspectRatioPolicy:ie(u),mode:ie(d),nearestMode:ie(c)})},1388598:(e,t,n,r,a,s,o)=>{i.he("Slice",e,{starts:t?Array.from(T.subarray(t>>>0,n>>>0)):[],ends:r?Array.from(T.subarray(r>>>0,a>>>0)):[],axes:s?Array.from(T.subarray(s>>>0,o>>>0)):[]})},1388814:e=>{i.he("Tile",e,void 0)},1388866:(e,t,n)=>{i.he("LayerNormalization",e,{axis:Number(t),epsilon:Number(n)})},1388973:(e,t,n)=>{i.he("InstanceNormalization",e,{epsilon:t,format:n?"NHWC":"NCHW"})},1389087:(e,t,n)=>{i.he("InstanceNormalization",e,{epsilon:t,format:n?"NHWC":"NCHW"})},1389201:e=>{i.he("Range",e,void 0)},1389254:(e,t)=>{i.he("Einsum",e,{equation:ie(t)})},1389335:(e,t,n,r,a)=>{i.he("Pad",e,{mode:t,value:n,pads:r?Array.from(T.subarray(r>>>0,a>>>0)):[]})},1389462:(e,t,n,r,a,s)=>{i.he("BatchNormalization",e,{epsilon:t,momentum:n,spatial:!!a,trainingMode:!!r,format:s?"NHWC":"NCHW"})},1389631:(e,t,n,r,a,s)=>{i.he("BatchNormalization",e,{epsilon:t,momentum:n,spatial:!!a,trainingMode:!!r,format:s?"NHWC":"NCHW"})},1389800:(e,t,n)=>{i.he("CumSum",e,{exclusive:Number(t),reverse:Number(n)})},1389897:(e,t,n,r,a,s,o,l,u)=>{i.he("Attention",e,{numHeads:t,isUnidirectional:n,maskFilterValue:r,scale:a,doRotary:s,qkvHiddenSizes:o?Array.from(T.subarray(Number(l)>>>0,Number(l)+o>>>0)):[],pastPresentShareBuffer:!!u})},1390169:e=>{i.he("BiasAdd",e,void 0)},1390224:e=>{i.he("BiasSplitGelu",e,void 0)},1390285:e=>{i.he("FastGelu",e,void 0)},1390341:(e,t,n,r,a,s,o,l,u,d,c,h,p)=>{i.he("Conv",e,{format:u?"NHWC":"NCHW",auto_pad:t,dilations:[n],group:r,kernel_shape:[a],pads:s?Array.from(T.subarray(s>>>0,o>>>0)):[],strides:[l],w_is_const:()=>!!b[d>>>0],activation:ie(c),activation_params:h?Array.from(M.subarray(h>>>0,p>>>0)):[]})},1390711:(e,t,n,r,a,s,o,l,u,d,c,h,p,f,m,g)=>{i.he("Conv",e,{format:h?"NHWC":"NCHW",auto_pad:t,dilations:[n,r],group:a,kernel_shape:[s,o],pads:l?Array.from(T.subarray(l>>>0,u>>>0)):[],strides:[d,c],w_is_const:()=>!!b[p>>>0],activation:ie(f),activation_params:m?Array.from(M.subarray(m>>>0,g>>>0)):[]})},1391102:e=>{i.he("Gelu",e,void 0)},1391154:(e,t,n,r,a,s)=>{i.he("MatMulNBits",e,{k:t,n,accuracyLevel:r,bits:a,blockSize:s})},1391281:(e,t,n,r,a,s)=>{i.he("MultiHeadAttention",e,{numHeads:t,isUnidirectional:n,maskFilterValue:r,scale:a,doRotary:s})},1391440:(e,t)=>{i.he("SkipLayerNormalization",e,{epsilon:t})},1391521:e=>{i.li(e)},1391555:(e,t)=>i.ni(e,t,i.Kh.oi,i.Kh.errors)};function K(e){this.name="ExitStatus",this.message=`Program terminated with exit(${e})`,this.status=e}var Y=[],Q=0,X=0;function Z(e){this.Jh=e,this.Dh=e-24,this.bi=function(e){S[this.Dh+4>>>2>>>0]=e},this.Lh=function(){return S[this.Dh+4>>>2>>>0]},this.ai=function(e){S[this.Dh+8>>>2>>>0]=e},this.Vh=function(e){b[this.Dh+12>>>0>>>0]=e?1:0},this.Yh=function(){return 0!=b[this.Dh+12>>>0>>>0]},this.Wh=function(e){b[this.Dh+13>>>0>>>0]=e?1:0},this.di=function(){return 0!=b[this.Dh+13>>>0>>>0]},this.$h=function(e,t){this.Mh(0),this.bi(e),this.ai(t)},this.Mh=function(e){S[this.Dh+16>>>2>>>0]=e},this.Xh=function(){return S[this.Dh+16>>>2>>>0]},this.Zh=function(){if(kt(this.Lh()))return S[this.Jh>>>2>>>0];var e=this.Xh();return 0!==e?e:this.Jh}}var J,ee,te=e=>{var t=X;if(!t)return bt(0),0;var n=new Z(t);n.Mh(t);var r=n.Lh();if(!r)return bt(0),t;for(var i in e){var a=e[i];if(0===a||a===r)break;if(Mt(a,r,n.Dh+16))return bt(a),t}return bt(r),t},ne=typeof TextDecoder<"u"?new TextDecoder("utf8"):void 0,re=(e,t,n)=>{var r=(t>>>=0)+n;for(n=t;e[n]&&!(n>=r);)++n;if(16<n-t&&e.buffer&&ne)return ne.decode(e.subarray(t,n));for(r="";t<n;){var i=e[t++];if(128&i){var a=63&e[t++];if(192==(224&i))r+=String.fromCharCode((31&i)<<6|a);else{var s=63&e[t++];65536>(i=224==(240&i)?(15&i)<<12|a<<6|s:(7&i)<<18|a<<12|s<<6|63&e[t++])?r+=String.fromCharCode(i):(i-=65536,r+=String.fromCharCode(55296|i>>10,56320|1023&i))}}else r+=String.fromCharCode(i)}return r},ie=(e,t)=>(e>>>=0)?re($,e,t):"",ae=e=>{for(var t=0,n=0;n<e.length;++n){var r=e.charCodeAt(n);127>=r?t++:2047>=r?t+=2:55296<=r&&57343>=r?(t+=4,++n):t+=3}return t},se=(e,t,n,r)=>{if(!(0<r))return 0;var i=n>>>=0;r=n+r-1;for(var a=0;a<e.length;++a){var s=e.charCodeAt(a);if(55296<=s&&57343>=s&&(s=65536+((1023&s)<<10)|1023&e.charCodeAt(++a)),127>=s){if(n>=r)break;t[n++>>>0]=s}else{if(2047>=s){if(n+1>=r)break;t[n++>>>0]=192|s>>6}else{if(65535>=s){if(n+2>=r)break;t[n++>>>0]=224|s>>12}else{if(n+3>=r)break;t[n++>>>0]=240|s>>18,t[n++>>>0]=128|s>>12&63}t[n++>>>0]=128|s>>6&63}t[n++>>>0]=128|63&s}}return t[n>>>0]=0,n-i},le=e=>{if(null===e)return"null";var t=typeof e;return"object"===t||"array"===t||"function"===t?e.toString():""+e},ue=e=>{for(var t="";$[e>>>0];)t+=J[$[e++>>>0]];return t},de={},pe={},me={};function ge(e,t,n={}){if(!("argPackAdvance"in t))throw new TypeError("registerType registeredInstance requires argPackAdvance");!function(e,t,n={}){var r=t.name;if(!e)throw new ee(`type "${r}" must have a positive integer typeid pointer`);if(pe.hasOwnProperty(e)){if(n.ei)return;throw new ee(`Cannot register type '${r}' twice`)}pe[e]=t,delete me[e],de.hasOwnProperty(e)&&(t=de[e],delete de[e],t.forEach((e=>e())))}(e,t,n)}var _e=(e,t,n)=>{switch(t){case 1:return n?e=>b[e>>>0>>>0]:e=>$[e>>>0>>>0];case 2:return n?e=>x[e>>>1>>>0]:e=>C[e>>>1>>>0];case 4:return n?e=>T[e>>>2>>>0]:e=>S[e>>>2>>>0];case 8:return n?e=>k[e>>>3]:e=>E[e>>>3];default:throw new TypeError(`invalid integer width (${t}): ${e}`)}};function ye(){this.Fh=[void 0],this.Sh=[]}var we=new ye;function ve(e){(e>>>=0)>=we.Dh&&0==--we.get(e).Uh&&we.Mh(e)}var be=e=>{if(!e)throw new ee("Cannot use deleted val. handle = "+e);return we.get(e).value},$e=e=>{switch(e){case void 0:return 1;case null:return 2;case!0:return 3;case!1:return 4;default:return we.Lh({Uh:1,value:e})}};function xe(e){return this.fromWireType(T[e>>>2>>>0])}var Ce=(e,t)=>{switch(t){case 4:return function(e){return this.fromWireType(M[e>>>2>>>0])};case 8:return function(e){return this.fromWireType(A[e>>>3>>>0])};default:throw new TypeError(`invalid float width (${t}): ${e}`)}};function Te(e){return this.fromWireType(S[e>>>2>>>0])}var Se=typeof TextDecoder<"u"?new TextDecoder("utf-16le"):void 0,Me=(e,t)=>{for(var n=e>>1,r=n+t/2;!(n>=r)&&C[n>>>0];)++n;if(32<(n<<=1)-e&&Se)return Se.decode($.subarray(e>>>0,n>>>0));for(n="",r=0;!(r>=t/2);++r){var i=x[e+2*r>>>1>>>0];if(0==i)break;n+=String.fromCharCode(i)}return n},ke=(e,t,n)=>{if(n??=2147483647,2>n)return 0;var r=t;n=(n-=2)<2*e.length?n/2:e.length;for(var i=0;i<n;++i)x[t>>>1>>>0]=e.charCodeAt(i),t+=2;return x[t>>>1>>>0]=0,t-r},Ee=e=>2*e.length,Ae=(e,t)=>{for(var n=0,r="";!(n>=t/4);){var i=T[e+4*n>>>2>>>0];if(0==i)break;++n,65536<=i?(i-=65536,r+=String.fromCharCode(55296|i>>10,56320|1023&i)):r+=String.fromCharCode(i)}return r},Ie=(e,t,n)=>{if(t>>>=0,n??=2147483647,4>n)return 0;var r=t;n=r+n-4;for(var i=0;i<e.length;++i){var a=e.charCodeAt(i);if(55296<=a&&57343>=a&&(a=65536+((1023&a)<<10)|1023&e.charCodeAt(++i)),T[t>>>2>>>0]=a,(t+=4)+4>n)break}return T[t>>>2>>>0]=0,t-r},Pe=e=>{for(var t=0,n=0;n<e.length;++n){var r=e.charCodeAt(n);55296<=r&&57343>=r&&++n,t+=4}return t},Oe=(e,t)=>{var n=pe[e];if(void 0===n)throw e=wt(e),n=ue(e),yt(e),new ee(t+" has unknown type "+n);return n},ze=(e,t,n)=>{var r=[];return e=e.toWireType(r,n),r.length&&(S[t>>>2>>>0]=$e(r)),e},Be=e=>{try{e()}catch(e){D(e)}},Re=0,Fe=null,je=0,De=[],Le={},Ne={},We=0,Ue=null,Ve=[];function Ge(e){if(!I){if(0===Re){var t=!1,n=!1;e(((e=0)=>{if(!I&&(je=e,t=!0,n)){Re=2,Be((()=>Di(Fe))),typeof Browser<"u"&&Browser.Qh.ci&&Browser.Qh.resume(),e=!1;try{var r=(0,ft[Ne[T[Fe+8>>>2>>>0]]])()}catch(t){r=t,e=!0}var i=!1;if(!Fe){var a=Ue;a&&(Ue=null,(e?a.reject:a.resolve)(r),i=!0)}if(e&&!i)throw r}})),n=!0,t||(Re=1,Fe=function(){var e=_t(65548),t=e+12;S[e>>>2>>>0]=t,S[e+4>>>2>>>0]=t+65536,t=De[0];var n=Le[t];return void 0===n&&(n=We++,Le[t]=n,Ne[n]=t),T[e+8>>>2>>>0]=n,e}(),typeof Browser<"u"&&Browser.Qh.ci&&Browser.Qh.pause(),Be((()=>Fi(Fe))))}else 2===Re?(Re=0,Be(Li),yt(Fe),Fe=null,Ve.forEach((e=>{if(!I)try{e();try{v=v=e=v,i.onExit?.(e),I=!0,d(e,new K(e))}catch(e){e instanceof K||"unwind"==e||d(1,e)}}catch(e){e instanceof K||"unwind"==e||d(1,e)}}))):D(`invalid state: ${Re}`);return je}}function qe(e){return Ge((t=>{e().then(t)}))}var He,Ke=[],Ye={},Qe=e=>{var t=Ye[e];return void 0===t?ue(e):t},Xe=()=>"object"==typeof globalThis?globalThis:Function("return this")(),Ze=(e,t)=>Object.defineProperty(t,"name",{value:e}),Je=e=>e%4==0&&(e%100!=0||e%400==0),et=[0,31,60,91,121,152,182,213,244,274,305,335],tt=[0,31,59,90,120,151,181,212,243,273,304,334],nt=e=>{var t=ae(e)+1,n=_t(t);return n&&se(e,$,n,t),n},rt=[],it=(e,t)=>{rt.length=0;for(var n;n=$[e++>>>0];){var r=105!=n;t+=(r&=112!=n)&&t%8?4:0,rt.push(112==n?S[t>>>2>>>0]:106==n?k[t>>>3]:105==n?T[t>>>2>>>0]:A[t>>>3>>>0]),t+=r?8:4}return rt},at={},st=()=>{if(!He){var e,t={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:("object"==typeof navigator&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",_:u||"./this.program"};for(e in at)void 0===at[e]?delete t[e]:t[e]=at[e];var n=[];for(e in t)n.push(`${e}=${t[e]}`);He=n}return He},ot=[null,[],[]],lt=[31,29,31,30,31,30,31,31,30,31,30,31],ut=[31,28,31,30,31,30,31,31,30,31,30,31];function dt(e,t,n,r){function i(e,t,n){for(e="number"==typeof e?e.toString():e||"";e.length<t;)e=n[0]+e;return e}function a(e,t){return i(e,t,"0")}function s(e,t){function n(e){return 0>e?-1:0<e?1:0}var r;return 0===(r=n(e.getFullYear()-t.getFullYear()))&&0===(r=n(e.getMonth()-t.getMonth()))&&(r=n(e.getDate()-t.getDate())),r}function o(e){switch(e.getDay()){case 0:return new Date(e.getFullYear()-1,11,29);case 1:return e;case 2:return new Date(e.getFullYear(),0,3);case 3:return new Date(e.getFullYear(),0,2);case 4:return new Date(e.getFullYear(),0,1);case 5:return new Date(e.getFullYear()-1,11,31);case 6:return new Date(e.getFullYear()-1,11,30)}}function l(e){var t=e.Gh;for(e=new Date(new Date(e.Hh+1900,0,1).getTime());0<t;){var n=e.getMonth(),r=(Je(e.getFullYear())?lt:ut)[n];if(!(t>r-e.getDate())){e.setDate(e.getDate()+t);break}t-=r-e.getDate()+1,e.setDate(1),11>n?e.setMonth(n+1):(e.setMonth(0),e.setFullYear(e.getFullYear()+1))}return n=new Date(e.getFullYear()+1,0,4),t=o(new Date(e.getFullYear(),0,4)),n=o(n),0>=s(t,e)?0>=s(n,e)?e.getFullYear()+1:e.getFullYear():e.getFullYear()-1}e>>>=0,t>>>=0,n>>>=0;var u=S[40+(r>>>=0)>>>2>>>0];for(var d in r={si:T[r>>>2>>>0],ri:T[r+4>>>2>>>0],Oh:T[r+8>>>2>>>0],Rh:T[r+12>>>2>>>0],Ph:T[r+16>>>2>>>0],Hh:T[r+20>>>2>>>0],Eh:T[r+24>>>2>>>0],Gh:T[r+28>>>2>>>0],vi:T[r+32>>>2>>>0],pi:T[r+36>>>2>>>0],ti:u?ie(u):""},n=ie(n),u={"%c":"%a %b %d %H:%M:%S %Y","%D":"%m/%d/%y","%F":"%Y-%m-%d","%h":"%b","%r":"%I:%M:%S %p","%R":"%H:%M","%T":"%H:%M:%S","%x":"%m/%d/%y","%X":"%H:%M:%S","%Ec":"%c","%EC":"%C","%Ex":"%m/%d/%y","%EX":"%H:%M:%S","%Ey":"%y","%EY":"%Y","%Od":"%d","%Oe":"%e","%OH":"%H","%OI":"%I","%Om":"%m","%OM":"%M","%OS":"%S","%Ou":"%u","%OU":"%U","%OV":"%V","%Ow":"%w","%OW":"%W","%Oy":"%y"})n=n.replace(new RegExp(d,"g"),u[d]);var c="Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "),h="January February March April May June July August September October November December".split(" ");for(d in u={"%a":e=>c[e.Eh].substring(0,3),"%A":e=>c[e.Eh],"%b":e=>h[e.Ph].substring(0,3),"%B":e=>h[e.Ph],"%C":e=>a((e.Hh+1900)/100|0,2),"%d":e=>a(e.Rh,2),"%e":e=>i(e.Rh,2," "),"%g":e=>l(e).toString().substring(2),"%G":e=>l(e),"%H":e=>a(e.Oh,2),"%I":e=>(0==(e=e.Oh)?e=12:12<e&&(e-=12),a(e,2)),"%j":e=>{for(var t=0,n=0;n<=e.Ph-1;t+=(Je(e.Hh+1900)?lt:ut)[n++]);return a(e.Rh+t,3)},"%m":e=>a(e.Ph+1,2),"%M":e=>a(e.ri,2),"%n":()=>"\n","%p":e=>0<=e.Oh&&12>e.Oh?"AM":"PM","%S":e=>a(e.si,2),"%t":()=>"\t","%u":e=>e.Eh||7,"%U":e=>a(Math.floor((e.Gh+7-e.Eh)/7),2),"%V":e=>{var t=Math.floor((e.Gh+7-(e.Eh+6)%7)/7);if(2>=(e.Eh+371-e.Gh-2)%7&&t++,t)53==t&&(4==(n=(e.Eh+371-e.Gh)%7)||3==n&&Je(e.Hh)||(t=1));else{t=52;var n=(e.Eh+7-e.Gh-1)%7;(4==n||5==n&&Je(e.Hh%400-1))&&t++}return a(t,2)},"%w":e=>e.Eh,"%W":e=>a(Math.floor((e.Gh+7-(e.Eh+6)%7)/7),2),"%y":e=>(e.Hh+1900).toString().substring(2),"%Y":e=>e.Hh+1900,"%z":e=>(0<=(e=e.pi)?"+":"-")+("0000"+((e=Math.abs(e)/60)/60*100+e%60)).slice(-4),"%Z":e=>e.ti,"%%":()=>"%"},n=n.replace(/%%/g,"\0\0"),u)n.includes(d)&&(n=n.replace(new RegExp(d,"g"),u[d](r)));return d=function(e){var t=Array(ae(e)+1);return se(e,t,0,t.length),t}(n=n.replace(/\0\0/g,"%")),d.length>t?0:(b.set(d,e>>>0),d.length-1)}for(var ct=Array(256),ht=0;256>ht;++ht)ct[ht]=String.fromCharCode(ht);J=ct,ee=i.BindingError=class extends Error{constructor(e){super(e),this.name="BindingError"}},i.InternalError=class extends Error{constructor(e){super(e),this.name="InternalError"}},Object.assign(ye.prototype,{get(e){return this.Fh[e]},has(e){return void 0!==this.Fh[e]},Lh(e){var t=this.Sh.pop()||this.Fh.length;return this.Fh[t]=e,t},Mh(e){this.Fh[e]=void 0,this.Sh.push(e)}}),we.Fh.push({value:void 0},{value:null},{value:!0},{value:!1}),we.Dh=we.Fh.length,i.count_emval_handles=()=>{for(var e=0,t=we.Dh;t<we.Fh.length;++t)void 0!==we.Fh[t]&&++e;return e};var pt={ad:function(e,t,n){return qe((async()=>{await i.ji(e,t,n)}))},u:function(e){return(e=new Z(e>>>0)).Yh()||(e.Vh(!0),Q--),e.Wh(!1),Y.push(e),St(e.Jh),e.Zh()},O:()=>{vt(0,0);var e=Y.pop();Tt(e.Jh),X=0},a:function(){return te([])},m:function(e){return te([e>>>0])},x:function(e,t){return te([e>>>0,t>>>0])},q:function(e,t,n){return te([e>>>0,t>>>0,n>>>0])},zb:()=>{var e=Y.pop();e||D("no exception to throw");var t=e.Jh;throw e.di()||(Y.push(e),e.Wh(!0),e.Vh(!1),Q++),X=t},r:function(e,t,n){throw new Z(e>>>=0).$h(t>>>0,n>>>0),Q++,X=e},eb:()=>Q,g:function(e){throw X||=e>>>0,X},Ab:function(){return 0},Xc:function(){},Ic:function(){},Kc:function(){},Bc:function(){return 0},Vc:function(){},Qc:function(){},Uc:function(){},Vb:function(){},Jc:function(){},Gc:function(){},Wc:function(){},Hc:function(){},Yb:function(e,t,n,r,i){var a=-1!=(t=ue(t>>>=0)).indexOf("u");a&&(i=(1n<<64n)-1n),ge(e>>>0,{name:t,fromWireType:e=>e,toWireType:function(e,n){if("bigint"!=typeof n&&"number"!=typeof n)throw new TypeError(`Cannot convert "${le(n)}" to ${this.name}`);if(n<r||n>i)throw new TypeError(`Passing a number "${le(n)}" from JS side to C/C++ side to an argument of type "${t}", which is outside the valid range [${r}, ${i}]!`);return n},argPackAdvance:8,readValueFromPointer:_e(t,n>>>0,!a),Ih:null})},_c:function(e,t,n,r){ge(e>>>0,{name:t=ue(t>>>0),fromWireType:function(e){return!!e},toWireType:function(e,t){return t?n:r},argPackAdvance:8,readValueFromPointer:function(e){return this.fromWireType($[e>>>0])},Ih:null})},Zc:function(e,t){ge(e>>>0,{name:t=ue(t>>>0),fromWireType:e=>{var t=be(e);return ve(e),t},toWireType:(e,t)=>$e(t),argPackAdvance:8,readValueFromPointer:xe,Ih:null})},Xb:function(e,t,n){ge(e>>>0,{name:t=ue(t>>>0),fromWireType:e=>e,toWireType:(e,t)=>t,argPackAdvance:8,readValueFromPointer:Ce(t,n>>>0),Ih:null})},za:function(e,t,n,r,i){if(e>>>=0,n>>>=0,t=ue(t>>>0),-1===i&&(i=4294967295),i=e=>e,0===r){var a=32-8*n;i=e=>e<<a>>>a}var s=t.includes("unsigned")?function(e,t){return t>>>0}:function(e,t){return t};ge(e,{name:t,fromWireType:i,toWireType:s,argPackAdvance:8,readValueFromPointer:_e(t,n,0!==r),Ih:null})},aa:function(e,t,n){function r(e){return new i(b.buffer,S[e+4>>>2>>>0],S[e>>>2>>>0])}var i=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array,BigInt64Array,BigUint64Array][t];ge(e>>>0,{name:n=ue(n>>>0),fromWireType:r,argPackAdvance:8,readValueFromPointer:r},{ei:!0})},Zb:function(e,t){var n="std::string"===(t=ue(t>>>0));ge(e>>>0,{name:t,fromWireType:function(e){var t=S[e>>>2>>>0],r=e+4;if(n)for(var i=r,a=0;a<=t;++a){var s=r+a;if(a==t||0==$[s>>>0]){if(i=ie(i,s-i),void 0===o)var o=i;else o+=String.fromCharCode(0),o+=i;i=s+1}}else{for(o=Array(t),a=0;a<t;++a)o[a]=String.fromCharCode($[r+a>>>0]);o=o.join("")}return yt(e),o},toWireType:function(e,t){t instanceof ArrayBuffer&&(t=new Uint8Array(t));var r="string"==typeof t;if(!(r||t instanceof Uint8Array||t instanceof Uint8ClampedArray||t instanceof Int8Array))throw new ee("Cannot pass non-string to std::string");var i=n&&r?ae(t):t.length,a=_t(4+i+1),s=a+4;if(S[a>>>2>>>0]=i,n&&r)se(t,$,s,i+1);else if(r)for(r=0;r<i;++r){var o=t.charCodeAt(r);if(255<o)throw yt(s),new ee("String has UTF-16 code units that do not fit in 8 bits");$[s+r>>>0]=o}else for(r=0;r<i;++r)$[s+r>>>0]=t[r];return null!==e&&e.push(yt,a),a},argPackAdvance:8,readValueFromPointer:Te,Ih(e){yt(e)}})},Cb:function(e,t,n){if(t>>>=0,n=ue(n>>>=0),2===t)var r=Me,i=ke,a=Ee,s=()=>C,o=1;else 4===t&&(r=Ae,i=Ie,a=Pe,s=()=>S,o=2);ge(e>>>0,{name:n,fromWireType:e=>{for(var n,i=S[e>>>2>>>0],a=s(),l=e+4,u=0;u<=i;++u){var d=e+4+u*t;(u==i||0==a[d>>>o])&&(l=r(l,d-l),void 0===n?n=l:(n+=String.fromCharCode(0),n+=l),l=d+t)}return yt(e),n},toWireType:(e,r)=>{if("string"!=typeof r)throw new ee(`Cannot pass non-string to C++ string type ${n}`);var s=a(r),l=_t(4+s+t);return S[l>>>2]=s>>o,i(r,l+4,s+t),null!==e&&e.push(yt,l),l},argPackAdvance:8,readValueFromPointer:xe,Ih(e){yt(e)}})},$c:function(e,t){ge(e>>>0,{fi:!0,name:t=ue(t>>>0),argPackAdvance:0,fromWireType:()=>{},toWireType:()=>{}})},Yc:()=>1,jd:function(e,t,n){return t>>>=0,n>>>=0,e=be(e>>>0),t=Oe(t,"emval::as"),ze(t,n,e)},zd:function(e){return e>>>=0,qe((()=>(e=be(e)).then($e)))},rd:function(e,t,n,r){return n>>>=0,r>>>=0,(e=Ke[e>>>0])(null,t=be(t>>>0),n,r)},fa:function(e,t,n,r,i){return n>>>=0,r>>>=0,i>>>=0,(e=Ke[e>>>0])(t=be(t>>>0),t[n=Qe(n)],r,i)},Ac:ve,od:function(e,t){return t>>>=0,(e=be(e>>>0))==(t=be(t))},wd:function(e){return 0==(e>>>=0)?$e(Xe()):(e=Qe(e),$e(Xe()[e]))},ea:function(e,t,n){t=((e,t)=>{for(var n=Array(e),r=0;r<e;++r)n[r]=Oe(S[t+4*r>>>2>>>0],"parameter "+r);return n})(e,t>>>0);var r=t.shift();e--;var i="return function (obj, func, destructorsRef, args) {\n",a=0,s=[];0===n&&s.push("obj");for(var o=["retType"],l=[r],u=0;u<e;++u)s.push("arg"+u),o.push("argType"+u),l.push(t[u]),i+=`  var arg${u} = argType${u}.readValueFromPointer(args${a?"+"+a:""});\n`,a+=t[u].argPackAdvance;for(i+=`  var rv = ${1===n?"new func":"func.call"}(${s.join(", ")});\n`,u=0;u<e;++u)t[u].deleteObject&&(i+=`  argType${u}.deleteObject(arg${u});\n`);return r.fi||(o.push("emval_returnValue"),l.push(ze),i+="  return emval_returnValue(retType, destructorsRef, rv);\n"),o.push(i+"};\n"),e=function(e){var t=Function;if(!(t instanceof Function))throw new TypeError(`new_ called with constructor type ${typeof t} which is not a function`);var n=Ze(t.name||"unknownFunctionName",(function(){}));return n.prototype=t.prototype,n=new n,(e=t.apply(n,e))instanceof Object?e:n}(o).apply(null,l),n=`methodCaller<(${t.map((e=>e.name)).join(", ")}) => ${r.name}>`,(e=>{var t=Ke.length;return Ke.push(e),t})(Ze(n,e))},vd:function(e,t){return t>>>=0,e=be(e>>>0),t=be(t),$e(e[t])},U:function(e){4<(e>>>=0)&&(we.get(e).Uh+=1)},kc:function(){return $e([])},fd:function(e){e=be(e>>>0);for(var t=Array(e.length),n=0;n<e.length;n++)t[n]=e[n];return $e(t)},W:function(e){return $e(Qe(e>>>0))},Wa:function(){return $e({})},td:function(e){for(var t=be(e>>>=0);t.length;){var n=t.pop();t.pop()(n)}ve(e)},qd:function(e,t,n){t>>>=0,n>>>=0,e=be(e>>>0),t=be(t),n=be(n),e[t]=n},yb:function(e,t){return t>>>=0,e=(e=Oe(e>>>0,"_emval_take_value")).readValueFromPointer(t),$e(e)},Nc:function(e,t){e=-9007199254740992>e||9007199254740992<e?NaN:Number(e),t>>>=0,e=new Date(1e3*e),T[t>>>2>>>0]=e.getUTCSeconds(),T[t+4>>>2>>>0]=e.getUTCMinutes(),T[t+8>>>2>>>0]=e.getUTCHours(),T[t+12>>>2>>>0]=e.getUTCDate(),T[t+16>>>2>>>0]=e.getUTCMonth(),T[t+20>>>2>>>0]=e.getUTCFullYear()-1900,T[t+24>>>2>>>0]=e.getUTCDay(),T[t+28>>>2>>>0]=(e.getTime()-Date.UTC(e.getUTCFullYear(),0,1,0,0,0,0))/864e5|0},Oc:function(e,t){e=-9007199254740992>e||9007199254740992<e?NaN:Number(e),t>>>=0,e=new Date(1e3*e),T[t>>>2>>>0]=e.getSeconds(),T[t+4>>>2>>>0]=e.getMinutes(),T[t+8>>>2>>>0]=e.getHours(),T[t+12>>>2>>>0]=e.getDate(),T[t+16>>>2>>>0]=e.getMonth(),T[t+20>>>2>>>0]=e.getFullYear()-1900,T[t+24>>>2>>>0]=e.getDay(),T[t+28>>>2>>>0]=(Je(e.getFullYear())?et:tt)[e.getMonth()]+e.getDate()-1|0,T[t+36>>>2>>>0]=-60*e.getTimezoneOffset();var n=new Date(e.getFullYear(),6,1).getTimezoneOffset(),r=new Date(e.getFullYear(),0,1).getTimezoneOffset();T[t+32>>>2>>>0]=0|(n!=r&&e.getTimezoneOffset()==Math.min(r,n))},Pc:function(e){e>>>=0;var t=new Date(T[e+20>>>2>>>0]+1900,T[e+16>>>2>>>0],T[e+12>>>2>>>0],T[e+8>>>2>>>0],T[e+4>>>2>>>0],T[e>>>2>>>0],0),n=T[e+32>>>2>>>0],r=t.getTimezoneOffset(),i=new Date(t.getFullYear(),6,1).getTimezoneOffset(),a=new Date(t.getFullYear(),0,1).getTimezoneOffset(),s=Math.min(a,i);return 0>n?T[e+32>>>2>>>0]=+(i!=a&&s==r):0<n!=(s==r)&&(i=Math.max(a,i),t.setTime(t.getTime()+6e4*((0<n?s:i)-r))),T[e+24>>>2>>>0]=t.getDay(),T[e+28>>>2>>>0]=(Je(t.getFullYear())?et:tt)[t.getMonth()]+t.getDate()-1|0,T[e>>>2>>>0]=t.getSeconds(),T[e+4>>>2>>>0]=t.getMinutes(),T[e+8>>>2>>>0]=t.getHours(),T[e+12>>>2>>>0]=t.getDate(),T[e+16>>>2>>>0]=t.getMonth(),T[e+20>>>2>>>0]=t.getYear(),e=t.getTime(),isNaN(e)?(T[gt()>>>2>>>0]=61,e=-1):e/=1e3,BigInt(e)},Lc:function(){return-52},Mc:function(){},Dc:function(e,t,n){function r(e){return(e=e.toTimeString().match(/\(([A-Za-z ]+)\)$/))?e[1]:"GMT"}n>>>=0;var i=(new Date).getFullYear(),a=new Date(i,0,1),s=new Date(i,6,1);i=a.getTimezoneOffset();var o=s.getTimezoneOffset();S[e>>>0>>>2>>>0]=60*Math.max(i,o),T[t>>>0>>>2>>>0]=+(i!=o),e=r(a),t=r(s),e=nt(e),t=nt(t),o<i?(S[n>>>2>>>0]=e,S[n+4>>>2>>>0]=t):(S[n>>>2>>>0]=t,S[n+4>>>2>>>0]=e)},jb:()=>{D("")},A:function(e,t,n){return e>>>=0,t=it(t>>>0,n>>>0),H[e].apply(null,t)},_b:function(e,t,n){return e>>>=0,t=it(t>>>0,n>>>0),H[e].apply(null,t)},Wb:()=>Date.now(),Ec:function(){return 4294901760},ha:()=>performance.now(),Cc:function(e){e>>>=0;var t=$.length;if(4294901760<e)return!1;for(var n=1;4>=n;n*=2){var r=t*(1+.2/n);r=Math.min(r,e+100663296);var i=Math;r=Math.max(e,r);e:{i=(i.min.call(i,4294901760,r+(65536-r%65536)%65536)-w.buffer.byteLength+65535)/65536;try{w.grow(i),P();var a=1;break e}catch{}a=void 0}if(a)return!0}return!1},Sc:function(e,t){e>>>=0,t>>>=0;var n=0;return st().forEach(((r,i)=>{var a=t+n;for(i=S[e+4*i>>>2>>>0]=a,a=0;a<r.length;++a)b[i++>>>0>>>0]=r.charCodeAt(a);b[i>>>0>>>0]=0,n+=r.length+1})),0},Tc:function(e,t){e>>>=0,t>>>=0;var n=st();S[e>>>2>>>0]=n.length;var r=0;return n.forEach((e=>r+=e.length+1)),S[t>>>2>>>0]=r,0},Bb:()=>52,Ub:function(){return 52},Rc:function(){return 70},Tb:function(e,t,n,r){t>>>=0,n>>>=0,r>>>=0;for(var i=0,a=0;a<n;a++){var s=S[t>>>2>>>0],o=S[t+4>>>2>>>0];t+=8;for(var l=0;l<o;l++){var u=$[s+l>>>0],d=ot[e];0===u||10===u?((1===e?_:y)(re(d,0)),d.length=0):d.push(u)}i+=o}return S[r>>>2>>>0]=i,0},wb:function(e,t){var n=$t();try{return wn(e,t)}catch(e){if(xt(n),e!==e+0)throw e;vt(1,0)}},bd:function(e,t,n){var r=$t();try{return vn(e,t,n)}catch(e){if(xt(r),e!==e+0)throw e;vt(1,0)}},la:function(e,t,n,r){var i=$t();try{return Lr(e,t,n,r)}catch(e){if(xt(i),e!==e+0)throw e;vt(1,0)}},Z:function(e,t,n,r,i){var a=$t();try{return Si(e,t,n,r,i)}catch(e){if(xt(a),e!==e+0)throw e;vt(1,0)}},ka:function(e,t,n,r,i,a){var s=$t();try{return Mi(e,t,n,r,i,a)}catch(e){if(xt(s),e!==e+0)throw e;vt(1,0)}},ta:function(e,t,n,r,i,a,s){var o=$t();try{return tr(e,t,n,r,i,a,s)}catch(e){if(xt(o),e!==e+0)throw e;vt(1,0)}},na:function(e,t){var n=$t();try{return _n(e,t)}catch(e){if(xt(n),e!==e+0)throw e;vt(1,0)}},cd:function(e,t,n){var r=$t();try{return yn(e,t,n)}catch(e){if(xt(r),e!==e+0)throw e;vt(1,0)}},ob:function(e,t,n,r){var i=$t();try{return Dr(e,t,n,r)}catch(e){if(xt(i),e!==e+0)throw e;vt(1,0)}},N:function(e,t,n,r,i){var a=$t();try{return Oi(e,t,n,r,i)}catch(e){if(xt(a),e!==e+0)throw e;vt(1,0)}},y:function(e){var t=$t();try{return Qt(e)}catch(e){if(xt(t),e!==e+0)throw e;vt(1,0)}},b:function(e,t){var n=$t();try{return Pt(e,t)}catch(e){if(xt(n),e!==e+0)throw e;vt(1,0)}},Sb:function(e,t,n){var r=$t();try{return Kt(e,t,n)}catch(e){if(xt(r),e!==e+0)throw e;vt(1,0)}},xa:function(e,t,n){var r=$t();try{return Ht(e,t,n)}catch(e){if(xt(r),e!==e+0)throw e;vt(1,0)}},f:function(e,t,n){var r=$t();try{return It(e,t,n)}catch(e){if(xt(r),e!==e+0)throw e;vt(1,0)}},Eb:function(e,t,n,r){var i=$t();try{return xi(e,t,n,r)}catch(e){if(xt(i),e!==e+0)throw e;vt(1,0)}},h:function(e,t,n,r){var i=$t();try{return At(e,t,n,r)}catch(e){if(xt(i),e!==e+0)throw e;vt(1,0)}},_:function(e,t,n,r,i,a){var s=$t();try{return pi(e,t,n,r,i,a)}catch(e){if(xt(s),e!==e+0)throw e;vt(1,0)}},i:function(e,t,n,r,i){var a=$t();try{return jt(e,t,n,r,i)}catch(e){if(xt(a),e!==e+0)throw e;vt(1,0)}},dd:function(e,t,n,r,i,a){var s=$t();try{return ei(e,t,n,r,i,a)}catch(e){if(xt(s),e!==e+0)throw e;vt(1,0)}},j:function(e,t,n,r,i,a){var s=$t();try{return Rt(e,t,n,r,i,a)}catch(e){if(xt(s),e!==e+0)throw e;vt(1,0)}},t:function(e,t,n,r,i,a,s){var o=$t();try{return Ot(e,t,n,r,i,a,s)}catch(e){if(xt(o),e!==e+0)throw e;vt(1,0)}},s:function(e,t,n,r,i,a,s,o){var l=$t();try{return dn(e,t,n,r,i,a,s,o)}catch(e){if(xt(l),e!==e+0)throw e;vt(1,0)}},o:function(e,t,n,r,i,a,s,o,l){var u=$t();try{return fn(e,t,n,r,i,a,s,o,l)}catch(e){if(xt(u),e!==e+0)throw e;vt(1,0)}},Va:function(e,t,n,r,i,a,s,o,l,u){var d=$t();try{return $n(e,t,n,r,i,a,s,o,l,u)}catch(e){if(xt(d),e!==e+0)throw e;vt(1,0)}},Ba:function(e,t,n,r,i,a,s,o,l,u,d){var c=$t();try{return ni(e,t,n,r,i,a,s,o,l,u,d)}catch(e){if(xt(c),e!==e+0)throw e;vt(1,0)}},oa:function(e,t,n,r,i,a,s,o,l,u,d,c){var h=$t();try{return tn(e,t,n,r,i,a,s,o,l,u,d,c)}catch(e){if(xt(h),e!==e+0)throw e;vt(1,0)}},Pb:function(e,t,n,r,i,a,s,o,l,u,d,c,h,p,f,m,g){var _=$t();try{return Kn(e,t,n,r,i,a,s,o,l,u,d,c,h,p,f,m,g)}catch(e){if(xt(_),e!==e+0)throw e;vt(1,0)}},bb:function(e,t,n,r,i,a,s,o,l,u,d,c,h,p,f,m,g,_,y,w){var v=$t();try{return Qn(e,t,n,r,i,a,s,o,l,u,d,c,h,p,f,m,g,_,y,w)}catch(e){if(xt(v),e!==e+0)throw e;vt(1,0)}},Ib:function(e,t,n,r,i,a,s,o,l,u,d,c,h,p,f,m,g,_,y,w){var v=$t();try{return ri(e,t,n,r,i,a,s,o,l,u,d,c,h,p,f,m,g,_,y,w)}catch(e){if(xt(v),e!==e+0)throw e;vt(1,0)}},mb:function(e,t,n,r,i,a,s,o,l,u,d,c,h){var p=$t();try{return Vr(e,t,n,r,i,a,s,o,l,u,d,c,h)}catch(e){if(xt(p),e!==e+0)throw e;vt(1,0)}},hc:function(e,t,n,r,i,a,s,o,l,u,d,c){var h=$t();try{return mi(e,t,n,r,i,a,s,o,l,u,d,c)}catch(e){if(xt(h),e!==e+0)throw e;vt(1,0)}},wc:function(e,t,n,r,i,a,s,o,l){var u=$t();try{return hn(e,t,n,r,i,a,s,o,l)}catch(e){if(xt(u),e!==e+0)throw e;vt(1,0)}},ec:function(e,t,n,r,i,a,s,o,l,u,d,c,h){var p=$t();try{return wi(e,t,n,r,i,a,s,o,l,u,d,c,h)}catch(e){if(xt(p),e!==e+0)throw e;vt(1,0)}},fc:function(e,t,n,r,i,a,s,o,l,u,d){var c=$t();try{return _i(e,t,n,r,i,a,s,o,l,u,d)}catch(e){if(xt(c),e!==e+0)throw e;vt(1,0)}},$b:function(e,t,n,r,i,a){var s=$t();try{return an(e,t,n,r,i,a)}catch(e){if(xt(s),e!==e+0)throw e;vt(1,0)}},qa:function(e,t,n,r,i,a,s){var o=$t();try{return vr(e,t,n,r,i,a,s)}catch(e){if(xt(o),e!==e+0)throw e;vt(1,0)}},xb:function(e,t,n,r,i,a,s,o,l,u,d){var c=$t();try{return mn(e,t,n,r,i,a,s,o,l,u,d)}catch(e){if(xt(c),e!==e+0)throw e;vt(1,0)}},Aa:function(e,t,n,r,i,a,s,o){var l=$t();try{return hi(e,t,n,r,i,a,s,o)}catch(e){if(xt(l),e!==e+0)throw e;vt(1,0)}},Db:function(e,t,n,r,i){var a=$t();try{return Ai(e,t,n,r,i)}catch(e){if(xt(a),e!==e+0)throw e;vt(1,0)}},da:function(e,t,n,r,i,a){var s=$t();try{return br(e,t,n,r,i,a)}catch(e){if(xt(s),e!==e+0)throw e;vt(1,0)}},gc:function(e,t,n,r,i,a,s,o){var l=$t();try{return gi(e,t,n,r,i,a,s,o)}catch(e){if(xt(l),e!==e+0)throw e;vt(1,0)}},Sa:function(e,t,n,r,i,a,s){var o=$t();try{return Zn(e,t,n,r,i,a,s)}catch(e){if(xt(o),e!==e+0)throw e;vt(1,0)}},E:function(e,t,n,r){var i=$t();try{return Ft(e,t,n,r)}catch(e){if(xt(i),e!==e+0)throw e;vt(1,0)}},G:function(e,t,n,r,i){var a=$t();try{return Fn(e,t,n,r,i)}catch(e){if(xt(a),e!==e+0)throw e;vt(1,0)}},Gb:function(e,t,n,r,i,a){var s=$t();try{return fi(e,t,n,r,i,a)}catch(e){if(xt(s),e!==e+0)throw e;vt(1,0)}},id:function(e,t,n,r,i,a,s){var o=$t();try{return yi(e,t,n,r,i,a,s)}catch(e){if(xt(o),e!==e+0)throw e;vt(1,0)}},sa:function(e,t,n,r,i,a,s,o){var l=$t();try{return zr(e,t,n,r,i,a,s,o)}catch(e){if(xt(l),e!==e+0)throw e;vt(1,0)}},M:function(e,t,n,r,i,a,s,o,l,u){var d=$t();try{return Nn(e,t,n,r,i,a,s,o,l,u)}catch(e){if(xt(d),e!==e+0)throw e;vt(1,0)}},X:function(e,t,n,r,i,a,s,o,l,u,d,c,h,p){var f=$t();try{return jn(e,t,n,r,i,a,s,o,l,u,d,c,h,p)}catch(e){if(xt(f),e!==e+0)throw e;vt(1,0)}},V:function(e,t,n,r,i,a){var s=$t();try{return er(e,t,n,r,i,a)}catch(e){if(xt(s),e!==e+0)throw e;vt(1,0)}},z:function(e,t,n){var r=$t();try{return qt(e,t,n)}catch(e){if(xt(r),e!==e+0)throw e;vt(1,0)}},Fb:function(e,t,n,r){var i=$t();try{return $i(e,t,n,r)}catch(e){if(xt(i),e!==e+0)throw e;vt(1,0)}},dc:function(e,t,n,r,i,a,s){var o=$t();try{return vi(e,t,n,r,i,a,s)}catch(e){if(xt(o),e!==e+0)throw e;vt(1,0)}},D:function(e,t,n,r,i){var a=$t();try{return oi(e,t,n,r,i)}catch(e){if(xt(a),e!==e+0)throw e;vt(1,0)}},Hb:function(e,t,n,r,i,a){var s=$t();try{return ui(e,t,n,r,i,a)}catch(e){if(xt(s),e!==e+0)throw e;vt(1,0)}},hd:function(e,t,n,r,i,a,s){var o=$t();try{return bi(e,t,n,r,i,a,s)}catch(e){if(xt(o),e!==e+0)throw e;vt(1,0)}},Ta:function(e,t){var n=$t();try{return rn(e,t)}catch(e){if(xt(n),e!==e+0)throw e;vt(1,0)}},wa:function(e,t,n,r){var i=$t();try{return Sr(e,t,n,r)}catch(e){if(xt(i),e!==e+0)throw e;vt(1,0)}},ic:function(e,t,n,r,i,a){var s=$t();try{return di(e,t,n,r,i,a)}catch(e){if(xt(s),e!==e+0)throw e;vt(1,0)}},ac:function(e){var t=$t();try{return sn(e)}catch(e){if(xt(t),e!==e+0)throw e;return vt(1,0),0n}},Mb:function(e,t,n){var r=$t();try{return zi(e,t,n)}catch(e){if(xt(r),e!==e+0)throw e;return vt(1,0),0n}},Y:function(e,t){var n=$t();try{return Jt(e,t)}catch(e){if(xt(n),e!==e+0)throw e;return vt(1,0),0n}},I:function(e,t,n){var r=$t();try{return Yt(e,t,n)}catch(e){if(xt(r),e!==e+0)throw e;return vt(1,0),0n}},C:function(e,t,n,r){var i=$t();try{return En(e,t,n,r)}catch(e){if(xt(i),e!==e+0)throw e;return vt(1,0),0n}},Za:function(e,t,n,r){var i=$t();try{return Ri(e,t,n,r)}catch(e){if(xt(i),e!==e+0)throw e;return vt(1,0),0n}},P:function(e,t,n){var r=$t();try{return Ln(e,t,n)}catch(e){if(xt(r),e!==e+0)throw e;return vt(1,0),0n}},d:function(e){var t=$t();try{Bt(e)}catch(e){if(xt(t),e!==e+0)throw e;vt(1,0)}},$a:function(e,t,n,r,i){var a=$t();try{Wn(e,t,n,r,i)}catch(e){if(xt(a),e!==e+0)throw e;vt(1,0)}},n:function(e,t){var n=$t();try{zt(e,t)}catch(e){if(xt(n),e!==e+0)throw e;vt(1,0)}},Xa:function(e,t,n,r){var i=$t();try{Ci(e,t,n,r)}catch(e){if(xt(i),e!==e+0)throw e;vt(1,0)}},va:function(e,t,n){var r=$t();try{Fr(e,t,n)}catch(e){if(xt(r),e!==e+0)throw e;vt(1,0)}},vb:function(e,t,n,r,i,a,s){var o=$t();try{Tn(e,t,n,r,i,a,s)}catch(e){if(xt(o),e!==e+0)throw e;vt(1,0)}},e:function(e,t,n){var r=$t();try{Et(e,t,n)}catch(e){if(xt(r),e!==e+0)throw e;vt(1,0)}},xc:function(e,t,n,r){var i=$t();try{Cn(e,t,n,r)}catch(e){if(xt(i),e!==e+0)throw e;vt(1,0)}},ca:function(e,t,n,r){var i=$t();try{jr(e,t,n,r)}catch(e){if(xt(i),e!==e+0)throw e;vt(1,0)}},fb:function(e,t,n,r,i){var a=$t();try{Gn(e,t,n,r,i)}catch(e){if(xt(a),e!==e+0)throw e;vt(1,0)}},Ca:function(e,t,n,r,i){var a=$t();try{_r(e,t,n,r,i)}catch(e){if(xt(a),e!==e+0)throw e;vt(1,0)}},lb:function(e,t,n,r,i,a,s,o,l,u,d,c,h){var p=$t();try{Gr(e,t,n,r,i,a,s,o,l,u,d,c,h)}catch(e){if(xt(p),e!==e+0)throw e;vt(1,0)}},hb:function(e,t,n,r,i,a,s){var o=$t();try{Sn(e,t,n,r,i,a,s)}catch(e){if(xt(o),e!==e+0)throw e;vt(1,0)}},c:function(e,t,n,r){var i=$t();try{Dt(e,t,n,r)}catch(e){if(xt(i),e!==e+0)throw e;vt(1,0)}},uc:function(e,t,n,r,i){var a=$t();try{In(e,t,n,r,i)}catch(e){if(xt(a),e!==e+0)throw e;vt(1,0)}},md:function(e,t,n,r,i){var a=$t();try{ii(e,t,n,r,i)}catch(e){if(xt(a),e!==e+0)throw e;vt(1,0)}},oc:function(e,t,n,r,i,a,s){var o=$t();try{Pr(e,t,n,r,i,a,s)}catch(e){if(xt(o),e!==e+0)throw e;vt(1,0)}},k:function(e,t,n,r,i){var a=$t();try{Nt(e,t,n,r,i)}catch(e){if(xt(a),e!==e+0)throw e;vt(1,0)}},sc:function(e,t,n,r,i,a,s){var o=$t();try{Un(e,t,n,r,i,a,s)}catch(e){if(xt(o),e!==e+0)throw e;vt(1,0)}},l:function(e,t,n,r,i,a){var s=$t();try{Lt(e,t,n,r,i,a)}catch(e){if(xt(s),e!==e+0)throw e;vt(1,0)}},vc:function(e,t,n,r,i,a,s,o,l,u,d){var c=$t();try{Mn(e,t,n,r,i,a,s,o,l,u,d)}catch(e){if(xt(c),e!==e+0)throw e;vt(1,0)}},rc:function(e,t,n,r,i,a,s,o){var l=$t();try{Vn(e,t,n,r,i,a,s,o)}catch(e){if(xt(l),e!==e+0)throw e;vt(1,0)}},pd:function(e,t,n,r,i,a,s,o,l,u,d,c,h){var p=$t();try{Hr(e,t,n,r,i,a,s,o,l,u,d,c,h)}catch(e){if(xt(p),e!==e+0)throw e;vt(1,0)}},p:function(e,t,n,r,i,a,s){var o=$t();try{Wt(e,t,n,r,i,a,s)}catch(e){if(xt(o),e!==e+0)throw e;vt(1,0)}},Qa:function(e,t,n,r,i,a,s,o,l,u,d,c,h,p,f,m){var g=$t();try{sr(e,t,n,r,i,a,s,o,l,u,d,c,h,p,f,m)}catch(e){if(xt(g),e!==e+0)throw e;vt(1,0)}},tb:function(e,t,n,r,i,a,s,o,l,u,d,c,h,p,f,m,g){var _=$t();try{ar(e,t,n,r,i,a,s,o,l,u,d,c,h,p,f,m,g)}catch(e){if(xt(_),e!==e+0)throw e;vt(1,0)}},Pa:function(e,t,n,r,i,a,s,o,l,u,d,c,h,p,f){var m=$t();try{or(e,t,n,r,i,a,s,o,l,u,d,c,h,p,f)}catch(e){if(xt(m),e!==e+0)throw e;vt(1,0)}},Kb:function(e,t,n,r,i,a,s,o,l,u){var d=$t();try{Nr(e,t,n,r,i,a,s,o,l,u)}catch(e){if(xt(d),e!==e+0)throw e;vt(1,0)}},B:function(e,t,n,r,i,a,s,o){var l=$t();try{cn(e,t,n,r,i,a,s,o)}catch(e){if(xt(l),e!==e+0)throw e;vt(1,0)}},K:function(e,t,n,r,i,a,s,o,l){var u=$t();try{Xt(e,t,n,r,i,a,s,o,l)}catch(e){if(xt(u),e!==e+0)throw e;vt(1,0)}},T:function(e,t,n,r,i,a,s,o,l,u){var d=$t();try{nn(e,t,n,r,i,a,s,o,l,u)}catch(e){if(xt(d),e!==e+0)throw e;vt(1,0)}},_a:function(e,t,n,r,i,a,s,o,l,u,d,c){var h=$t();try{kn(e,t,n,r,i,a,s,o,l,u,d,c)}catch(e){if(xt(h),e!==e+0)throw e;vt(1,0)}},nc:function(e,t,n,r,i,a,s,o,l,u,d,c){var h=$t();try{Or(e,t,n,r,i,a,s,o,l,u,d,c)}catch(e){if(xt(h),e!==e+0)throw e;vt(1,0)}},gb:function(e,t,n,r,i,a,s,o,l,u,d,c,h,p){var f=$t();try{qn(e,t,n,r,i,a,s,o,l,u,d,c,h,p)}catch(e){if(xt(f),e!==e+0)throw e;vt(1,0)}},ya:function(e,t,n,r,i,a,s,o,l,u,d){var c=$t();try{Jn(e,t,n,r,i,a,s,o,l,u,d)}catch(e){if(xt(c),e!==e+0)throw e;vt(1,0)}},ja:function(e,t,n,r,i,a,s,o,l,u,d,c){var h=$t();try{Vt(e,t,n,r,i,a,s,o,l,u,d,c)}catch(e){if(xt(h),e!==e+0)throw e;vt(1,0)}},Q:function(e,t,n,r,i,a,s,o,l,u,d,c,h){var p=$t();try{Yn(e,t,n,r,i,a,s,o,l,u,d,c,h)}catch(e){if(xt(p),e!==e+0)throw e;vt(1,0)}},cb:function(e,t,n,r,i,a,s,o,l,u,d,c,h,p){var f=$t();try{pn(e,t,n,r,i,a,s,o,l,u,d,c,h,p)}catch(e){if(xt(f),e!==e+0)throw e;vt(1,0)}},Ka:function(e,t,n,r,i,a,s,o,l,u,d,c,h,p,f){var m=$t();try{Bi(e,t,n,r,i,a,s,o,l,u,d,c,h,p,f)}catch(e){if(xt(m),e!==e+0)throw e;vt(1,0)}},kb:function(e,t,n,r,i,a,s,o,l,u,d,c,h,p,f,m){var g=$t();try{Xr(e,t,n,r,i,a,s,o,l,u,d,c,h,p,f,m)}catch(e){if(xt(g),e!==e+0)throw e;vt(1,0)}},Fa:function(e,t,n,r,i,a,s,o,l,u,d,c,h,p,f,m,g){var _=$t();try{Zr(e,t,n,r,i,a,s,o,l,u,d,c,h,p,f,m,g)}catch(e){if(xt(_),e!==e+0)throw e;vt(1,0)}},lc:function(e,t,n,r,i,a,s,o,l,u,d,c,h,p,f,m,g,_,y){var w=$t();try{Yr(e,t,n,r,i,a,s,o,l,u,d,c,h,p,f,m,g,_,y)}catch(e){if(xt(w),e!==e+0)throw e;vt(1,0)}},Ga:function(e,t,n,r,i,a,s,o,l,u,d,c,h,p,f,m,g,_,y,w){var v=$t();try{Qr(e,t,n,r,i,a,s,o,l,u,d,c,h,p,f,m,g,_,y,w)}catch(e){if(xt(v),e!==e+0)throw e;vt(1,0)}},Ha:function(e,t,n,r,i,a,s,o,l,u,d,c,h,p,f,m,g,_,y,w,v){var b=$t();try{qr(e,t,n,r,i,a,s,o,l,u,d,c,h,p,f,m,g,_,y,w,v)}catch(e){if(xt(b),e!==e+0)throw e;vt(1,0)}},ed:function(e,t,n,r,i,a,s,o,l,u,d,c){var h=$t();try{Pn(e,t,n,r,i,a,s,o,l,u,d,c)}catch(e){if(xt(h),e!==e+0)throw e;vt(1,0)}},ud:function(e,t,n,r,i,a,s,o,l,u,d){var c=$t();try{Hn(e,t,n,r,i,a,s,o,l,u,d)}catch(e){if(xt(c),e!==e+0)throw e;vt(1,0)}},ra:function(e,t,n,r,i,a,s,o,l,u,d,c,h,p,f){var m=$t();try{Rr(e,t,n,r,i,a,s,o,l,u,d,c,h,p,f)}catch(e){if(xt(m),e!==e+0)throw e;vt(1,0)}},nd:function(e,t,n,r,i,a,s,o,l,u,d){var c=$t();try{ti(e,t,n,r,i,a,s,o,l,u,d)}catch(e){if(xt(c),e!==e+0)throw e;vt(1,0)}},La:function(e,t,n,r,i,a,s,o,l,u){var d=$t();try{Ar(e,t,n,r,i,a,s,o,l,u)}catch(e){if(xt(d),e!==e+0)throw e;vt(1,0)}},Ja:function(e,t,n,r,i,a,s,o,l,u,d,c,h,p){var f=$t();try{Br(e,t,n,r,i,a,s,o,l,u,d,c,h,p)}catch(e){if(xt(f),e!==e+0)throw e;vt(1,0)}},Rb:function(e,t,n,r,i,a,s){var o=$t();try{Zt(e,t,n,r,i,a,s)}catch(e){if(xt(o),e!==e+0)throw e;vt(1,0)}},qc:function(e,t,n,r,i,a,s,o,l,u,d,c,h){var p=$t();try{$r(e,t,n,r,i,a,s,o,l,u,d,c,h)}catch(e){if(xt(p),e!==e+0)throw e;vt(1,0)}},Ia:function(e,t,n,r,i,a,s,o,l,u,d,c,h,p,f,m,g,_,y,w,v,b,$,x,C,T){var S=$t();try{Wr(e,t,n,r,i,a,s,o,l,u,d,c,h,p,f,m,g,_,y,w,v,b,$,x,C,T)}catch(e){if(xt(S),e!==e+0)throw e;vt(1,0)}},Ma:function(e,t,n,r,i,a,s,o,l){var u=$t();try{Er(e,t,n,r,i,a,s,o,l)}catch(e){if(xt(u),e!==e+0)throw e;vt(1,0)}},pb:function(e,t,n,r,i,a,s,o,l,u,d,c,h){var p=$t();try{wr(e,t,n,r,i,a,s,o,l,u,d,c,h)}catch(e){if(xt(p),e!==e+0)throw e;vt(1,0)}},ma:function(e,t,n,r,i,a,s,o,l,u){var d=$t();try{Mr(e,t,n,r,i,a,s,o,l,u)}catch(e){if(xt(d),e!==e+0)throw e;vt(1,0)}},Da:function(e,t,n,r,i,a){var s=$t();try{nr(e,t,n,r,i,a)}catch(e){if(xt(s),e!==e+0)throw e;vt(1,0)}},jc:function(e,t,n,r,i,a,s){var o=$t();try{li(e,t,n,r,i,a,s)}catch(e){if(xt(o),e!==e+0)throw e;vt(1,0)}},pc:function(e,t,n,r,i,a,s,o){var l=$t();try{Cr(e,t,n,r,i,a,s,o)}catch(e){if(xt(l),e!==e+0)throw e;vt(1,0)}},Jb:function(e,t,n,r,i,a,s,o){var l=$t();try{Jr(e,t,n,r,i,a,s,o)}catch(e){if(xt(l),e!==e+0)throw e;vt(1,0)}},Ea:function(e,t,n,r,i){var a=$t();try{si(e,t,n,r,i)}catch(e){if(xt(a),e!==e+0)throw e;vt(1,0)}},ia:function(e,t,n,r,i,a){var s=$t();try{Bn(e,t,n,r,i,a)}catch(e){if(xt(s),e!==e+0)throw e;vt(1,0)}},xd:function(e,t,n,r,i,a,s){var o=$t();try{Ii(e,t,n,r,i,a,s)}catch(e){if(xt(o),e!==e+0)throw e;vt(1,0)}},ld:function(e,t,n,r,i,a,s,o,l,u){var d=$t();try{ai(e,t,n,r,i,a,s,o,l,u)}catch(e){if(xt(d),e!==e+0)throw e;vt(1,0)}},S:function(e,t,n,r,i,a,s,o,l,u,d){var c=$t();try{xr(e,t,n,r,i,a,s,o,l,u,d)}catch(e){if(xt(c),e!==e+0)throw e;vt(1,0)}},db:function(e,t,n,r,i,a,s,o,l,u,d,c){var h=$t();try{un(e,t,n,r,i,a,s,o,l,u,d,c)}catch(e){if(xt(h),e!==e+0)throw e;vt(1,0)}},Ya:function(e,t,n,r,i,a,s,o,l){var u=$t();try{ci(e,t,n,r,i,a,s,o,l)}catch(e){if(xt(u),e!==e+0)throw e;vt(1,0)}},cc:function(e,t,n,r,i,a,s,o,l,u,d,c){var h=$t();try{ki(e,t,n,r,i,a,s,o,l,u,d,c)}catch(e){if(xt(h),e!==e+0)throw e;vt(1,0)}},ib:function(e,t,n,r,i,a,s,o,l){var u=$t();try{Gt(e,t,n,r,i,a,s,o,l)}catch(e){if(xt(u),e!==e+0)throw e;vt(1,0)}},F:function(e,t,n,r){var i=$t();try{en(e,t,n,r)}catch(e){if(xt(i),e!==e+0)throw e;vt(1,0)}},R:function(e,t,n,r,i){var a=$t();try{Ut(e,t,n,r,i)}catch(e){if(xt(a),e!==e+0)throw e;vt(1,0)}},Ua:function(e,t,n,r,i,a,s){var o=$t();try{xn(e,t,n,r,i,a,s)}catch(e){if(xt(o),e!==e+0)throw e;vt(1,0)}},kd:function(e,t,n,r,i,a,s,o,l,u,d,c,h){var p=$t();try{Pi(e,t,n,r,i,a,s,o,l,u,d,c,h)}catch(e){if(xt(p),e!==e+0)throw e;vt(1,0)}},ba:function(e,t,n,r,i){var a=$t();try{rr(e,t,n,r,i)}catch(e){if(xt(a),e!==e+0)throw e;vt(1,0)}},nb:function(e,t,n,r,i,a){var s=$t();try{Ur(e,t,n,r,i,a)}catch(e){if(xt(s),e!==e+0)throw e;vt(1,0)}},pa:function(e,t,n,r,i,a,s,o){var l=$t();try{Tr(e,t,n,r,i,a,s,o)}catch(e){if(xt(l),e!==e+0)throw e;vt(1,0)}},bc:function(e,t,n,r,i,a,s,o,l,u,d,c,h){var p=$t();try{Ei(e,t,n,r,i,a,s,o,l,u,d,c,h)}catch(e){if(xt(p),e!==e+0)throw e;vt(1,0)}},zc:function(e,t,n,r,i,a,s,o,l,u,d,c){var h=$t();try{ln(e,t,n,r,i,a,s,o,l,u,d,c)}catch(e){if(xt(h),e!==e+0)throw e;vt(1,0)}},v:function(e,t,n){var r=$t();try{on(e,t,n)}catch(e){if(xt(r),e!==e+0)throw e;vt(1,0)}},L:function(e,t,n,r){var i=$t();try{On(e,t,n,r)}catch(e){if(xt(i),e!==e+0)throw e;vt(1,0)}},sd:function(e,t,n,r,i,a){var s=$t();try{Ir(e,t,n,r,i,a)}catch(e){if(xt(s),e!==e+0)throw e;vt(1,0)}},Nb:function(e,t,n,r,i,a,s,o,l,u,d){var c=$t();try{pr(e,t,n,r,i,a,s,o,l,u,d)}catch(e){if(xt(c),e!==e+0)throw e;vt(1,0)}},mc:function(e,t,n,r,i,a,s,o,l,u,d,c,h,p){var f=$t();try{Kr(e,t,n,r,i,a,s,o,l,u,d,c,h,p)}catch(e){if(xt(f),e!==e+0)throw e;vt(1,0)}},yd:function(e,t,n,r){var i=$t();try{bn(e,t,n,r)}catch(e){if(xt(i),e!==e+0)throw e;vt(1,0)}},Ob:function(e,t,n,r,i,a,s,o,l,u){var d=$t();try{hr(e,t,n,r,i,a,s,o,l,u)}catch(e){if(xt(d),e!==e+0)throw e;vt(1,0)}},Lb:function(e,t,n,r,i,a){var s=$t();try{yr(e,t,n,r,i,a)}catch(e){if(xt(s),e!==e+0)throw e;vt(1,0)}},ab:function(e,t,n,r,i,a,s,o,l,u){var d=$t();try{Xn(e,t,n,r,i,a,s,o,l,u)}catch(e){if(xt(d),e!==e+0)throw e;vt(1,0)}},yc:function(e,t,n,r,i,a,s,o,l){var u=$t();try{gn(e,t,n,r,i,a,s,o,l)}catch(e){if(xt(u),e!==e+0)throw e;vt(1,0)}},Qb:function(e,t,n,r,i,a,s,o,l){var u=$t();try{Rn(e,t,n,r,i,a,s,o,l)}catch(e){if(xt(u),e!==e+0)throw e;vt(1,0)}},Na:function(e,t,n,r,i,a,s,o,l){var u=$t();try{kr(e,t,n,r,i,a,s,o,l)}catch(e){if(xt(u),e!==e+0)throw e;vt(1,0)}},$:function(e,t,n,r,i,a,s,o,l,u,d,c,h,p,f){var m=$t();try{fr(e,t,n,r,i,a,s,o,l,u,d,c,h,p,f)}catch(e){if(xt(m),e!==e+0)throw e;vt(1,0)}},tc:function(e,t,n,r,i,a,s,o,l,u,d,c,h,p,f,m){var g=$t();try{zn(e,t,n,r,i,a,s,o,l,u,d,c,h,p,f,m)}catch(e){if(xt(g),e!==e+0)throw e;vt(1,0)}},J:function(e,t){var n=$t();try{Dn(e,t)}catch(e){if(xt(n),e!==e+0)throw e;vt(1,0)}},gd:function(e,t,n,r,i){var a=$t();try{Ti(e,t,n,r,i)}catch(e){if(xt(a),e!==e+0)throw e;vt(1,0)}},ub:function(e,t,n,r,i,a,s,o){var l=$t();try{An(e,t,n,r,i,a,s,o)}catch(e){if(xt(l),e!==e+0)throw e;vt(1,0)}},ua:function(e,t,n,r,i,a,s,o,l){var u=$t();try{gr(e,t,n,r,i,a,s,o,l)}catch(e){if(xt(u),e!==e+0)throw e;vt(1,0)}},H:function(e,t,n,r,i,a,s,o,l,u){var d=$t();try{mr(e,t,n,r,i,a,s,o,l,u)}catch(e){if(xt(d),e!==e+0)throw e;vt(1,0)}},rb:function(e,t,n,r,i,a,s,o,l,u,d,c,h,p,f,m,g){var _=$t();try{dr(e,t,n,r,i,a,s,o,l,u,d,c,h,p,f,m,g)}catch(e){if(xt(_),e!==e+0)throw e;vt(1,0)}},Oa:function(e,t,n,r,i,a,s,o,l,u,d,c,h,p,f,m,g,_,y){var w=$t();try{ur(e,t,n,r,i,a,s,o,l,u,d,c,h,p,f,m,g,_,y)}catch(e){if(xt(w),e!==e+0)throw e;vt(1,0)}},Ra:function(e,t,n,r,i,a,s,o,l,u,d,c,h,p,f,m,g,_){var y=$t();try{ir(e,t,n,r,i,a,s,o,l,u,d,c,h,p,f,m,g,_)}catch(e){if(xt(y),e!==e+0)throw e;vt(1,0)}},qb:function(e,t,n,r,i,a,s,o,l,u,d,c,h,p,f,m,g,_,y,w){var v=$t();try{cr(e,t,n,r,i,a,s,o,l,u,d,c,h,p,f,m,g,_,y,w)}catch(e){if(xt(v),e!==e+0)throw e;vt(1,0)}},sb:function(e,t,n,r,i,a,s,o,l,u,d,c,h,p,f,m,g,_,y,w,v){var b=$t();try{lr(e,t,n,r,i,a,s,o,l,u,d,c,h,p,f,m,g,_,y,w,v)}catch(e){if(xt(b),e!==e+0)throw e;vt(1,0)}},w:function(e){return e>>>0},Fc:dt,ga:function(e,t,n,r){return dt(e>>>0,t>>>0,n>>>0,r>>>0)}},ft=function(){function e(e){return ft=e.exports,ft=function(){var e=ft,t={};for(let[n,r]of Object.entries(e))t[n]="function"==typeof r?function(){De.push(n);try{return r.apply(null,arguments)}finally{I||(De.pop(),Fe&&1===Re&&0===De.length&&(Re=0,Be(ji),typeof Fibers<"u"&&Fibers.wi()))}}:r;return t}(),ft=function(){var e=ft;e=Object.assign({},e);var t=e=>()=>e()>>>0,n=e=>t=>e(t)>>>0;return e.de=t(e.de),e.ee=n(e.ee),e.ge=n(e.ge),e.ke=t(e.ke),e.me=n(e.me),e}(),w=ft.Ad,P(),z.unshift(ft.Bd),0==--R&&(null!==F&&(clearInterval(F),F=null),j&&(e=j,j=null,e())),ft}var t={a:pt};if(R++,i.instantiateWasm)try{return i.instantiateWasm(t,e)}catch(e){y(`Module.instantiateWasm callback failed with error: ${e}`),r(e)}return function(e,t){var n=L;return"function"!=typeof WebAssembly.instantiateStreaming||W(n)||U(n)||p||"function"!=typeof fetch?q(n,e,t):fetch(n,{credentials:"same-origin"}).then((r=>WebAssembly.instantiateStreaming(r,e).then(t,(function(r){return y(`wasm streaming compile failed: ${r}`),y("falling back to ArrayBuffer instantiation"),q(n,e,t)}))))}(t,(function(t){e(t.instance)})).catch(r),{}}();i._OrtInit=(e,t)=>(i._OrtInit=ft.Cd)(e,t),i._OrtGetLastError=(e,t)=>(i._OrtGetLastError=ft.Dd)(e,t),i._OrtCreateSessionOptions=(e,t,n,r,a,s,o,l,u,d)=>(i._OrtCreateSessionOptions=ft.Ed)(e,t,n,r,a,s,o,l,u,d),i._OrtAppendExecutionProvider=(e,t)=>(i._OrtAppendExecutionProvider=ft.Fd)(e,t),i._OrtAddFreeDimensionOverride=(e,t,n)=>(i._OrtAddFreeDimensionOverride=ft.Gd)(e,t,n),i._OrtAddSessionConfigEntry=(e,t,n)=>(i._OrtAddSessionConfigEntry=ft.Hd)(e,t,n),i._OrtReleaseSessionOptions=e=>(i._OrtReleaseSessionOptions=ft.Id)(e),i._OrtCreateSession=(e,t,n)=>(i._OrtCreateSession=ft.Jd)(e,t,n),i._OrtReleaseSession=e=>(i._OrtReleaseSession=ft.Kd)(e),i._OrtGetInputOutputCount=(e,t,n)=>(i._OrtGetInputOutputCount=ft.Ld)(e,t,n),i._OrtGetInputName=(e,t)=>(i._OrtGetInputName=ft.Md)(e,t),i._OrtGetOutputName=(e,t)=>(i._OrtGetOutputName=ft.Nd)(e,t),i._OrtFree=e=>(i._OrtFree=ft.Od)(e),i._OrtCreateTensor=(e,t,n,r,a,s)=>(i._OrtCreateTensor=ft.Pd)(e,t,n,r,a,s),i._OrtGetTensorData=(e,t,n,r,a)=>(i._OrtGetTensorData=ft.Qd)(e,t,n,r,a),i._OrtReleaseTensor=e=>(i._OrtReleaseTensor=ft.Rd)(e),i._OrtCreateRunOptions=(e,t,n,r)=>(i._OrtCreateRunOptions=ft.Sd)(e,t,n,r),i._OrtAddRunConfigEntry=(e,t,n)=>(i._OrtAddRunConfigEntry=ft.Td)(e,t,n),i._OrtReleaseRunOptions=e=>(i._OrtReleaseRunOptions=ft.Ud)(e),i._OrtCreateBinding=e=>(i._OrtCreateBinding=ft.Vd)(e),i._OrtBindInput=(e,t,n)=>(i._OrtBindInput=ft.Wd)(e,t,n),i._OrtBindOutput=(e,t,n,r)=>(i._OrtBindOutput=ft.Xd)(e,t,n,r),i._OrtClearBoundOutputs=e=>(i._OrtClearBoundOutputs=ft.Yd)(e),i._OrtReleaseBinding=e=>(i._OrtReleaseBinding=ft.Zd)(e),i._OrtRunWithBinding=(e,t,n,r,a)=>(i._OrtRunWithBinding=ft._d)(e,t,n,r,a),i._OrtRun=(e,t,n,r,a,s,o,l)=>(i._OrtRun=ft.$d)(e,t,n,r,a,s,o,l),i._OrtEndProfiling=e=>(i._OrtEndProfiling=ft.ae)(e),i._JsepOutput=(e,t,n)=>(i._JsepOutput=ft.be)(e,t,n),i._JsepGetNodeName=e=>(i._JsepGetNodeName=ft.ce)(e);var mt,gt=()=>(gt=ft.de)(),_t=i._malloc=e=>(_t=i._malloc=ft.ee)(e),yt=i._free=e=>(yt=i._free=ft.fe)(e),wt=e=>(wt=ft.ge)(e),vt=(e,t)=>(vt=ft.ie)(e,t),bt=e=>(bt=ft.je)(e),$t=()=>($t=ft.ke)(),xt=e=>(xt=ft.le)(e),Ct=e=>(Ct=ft.me)(e),Tt=e=>(Tt=ft.ne)(e),St=e=>(St=ft.oe)(e),Mt=(e,t,n)=>(Mt=ft.pe)(e,t,n),kt=e=>(kt=ft.qe)(e),Et=i.dynCall_vii=(e,t,n)=>(Et=i.dynCall_vii=ft.re)(e,t,n),At=i.dynCall_iiii=(e,t,n,r)=>(At=i.dynCall_iiii=ft.se)(e,t,n,r),It=i.dynCall_iii=(e,t,n)=>(It=i.dynCall_iii=ft.te)(e,t,n),Pt=i.dynCall_ii=(e,t)=>(Pt=i.dynCall_ii=ft.ue)(e,t),Ot=i.dynCall_iiiiiii=(e,t,n,r,a,s,o)=>(Ot=i.dynCall_iiiiiii=ft.ve)(e,t,n,r,a,s,o),zt=i.dynCall_vi=(e,t)=>(zt=i.dynCall_vi=ft.we)(e,t),Bt=i.dynCall_v=e=>(Bt=i.dynCall_v=ft.xe)(e),Rt=i.dynCall_iiiiii=(e,t,n,r,a,s)=>(Rt=i.dynCall_iiiiii=ft.ye)(e,t,n,r,a,s),Ft=i.dynCall_iiij=(e,t,n,r)=>(Ft=i.dynCall_iiij=ft.ze)(e,t,n,r),jt=i.dynCall_iiiii=(e,t,n,r,a)=>(jt=i.dynCall_iiiii=ft.Ae)(e,t,n,r,a),Dt=i.dynCall_viii=(e,t,n,r)=>(Dt=i.dynCall_viii=ft.Be)(e,t,n,r),Lt=i.dynCall_viiiii=(e,t,n,r,a,s)=>(Lt=i.dynCall_viiiii=ft.Ce)(e,t,n,r,a,s),Nt=i.dynCall_viiii=(e,t,n,r,a)=>(Nt=i.dynCall_viiii=ft.De)(e,t,n,r,a),Wt=i.dynCall_viiiiii=(e,t,n,r,a,s,o)=>(Wt=i.dynCall_viiiiii=ft.Ee)(e,t,n,r,a,s,o),Ut=i.dynCall_viiji=(e,t,n,r,a)=>(Ut=i.dynCall_viiji=ft.Fe)(e,t,n,r,a),Vt=i.dynCall_viiiiiiiiiii=(e,t,n,r,a,s,o,l,u,d,c,h)=>(Vt=i.dynCall_viiiiiiiiiii=ft.Ge)(e,t,n,r,a,s,o,l,u,d,c,h),Gt=i.dynCall_viiijjjii=(e,t,n,r,a,s,o,l,u)=>(Gt=i.dynCall_viiijjjii=ft.He)(e,t,n,r,a,s,o,l,u),qt=i.dynCall_iij=(e,t,n)=>(qt=i.dynCall_iij=ft.Ie)(e,t,n),Ht=i.dynCall_iif=(e,t,n)=>(Ht=i.dynCall_iif=ft.Je)(e,t,n),Kt=i.dynCall_iid=(e,t,n)=>(Kt=i.dynCall_iid=ft.Ke)(e,t,n),Yt=i.dynCall_jii=(e,t,n)=>(Yt=i.dynCall_jii=ft.Le)(e,t,n),Qt=i.dynCall_i=e=>(Qt=i.dynCall_i=ft.Me)(e),Xt=i.dynCall_viiiiiiii=(e,t,n,r,a,s,o,l,u)=>(Xt=i.dynCall_viiiiiiii=ft.Ne)(e,t,n,r,a,s,o,l,u),Zt=i.dynCall_viiiiij=(e,t,n,r,a,s,o)=>(Zt=i.dynCall_viiiiij=ft.Oe)(e,t,n,r,a,s,o),Jt=i.dynCall_ji=(e,t)=>(Jt=i.dynCall_ji=ft.Pe)(e,t),en=i.dynCall_viij=(e,t,n,r)=>(en=i.dynCall_viij=ft.Qe)(e,t,n,r),tn=i.dynCall_iiiiiiiiiiii=(e,t,n,r,a,s,o,l,u,d,c,h)=>(tn=i.dynCall_iiiiiiiiiiii=ft.Re)(e,t,n,r,a,s,o,l,u,d,c,h),nn=i.dynCall_viiiiiiiii=(e,t,n,r,a,s,o,l,u,d)=>(nn=i.dynCall_viiiiiiiii=ft.Se)(e,t,n,r,a,s,o,l,u,d),rn=i.dynCall_ij=(e,t)=>(rn=i.dynCall_ij=ft.Te)(e,t),an=i.dynCall_iiiiij=(e,t,n,r,a,s)=>(an=i.dynCall_iiiiij=ft.Ue)(e,t,n,r,a,s),sn=i.dynCall_j=e=>(sn=i.dynCall_j=ft.Ve)(e),on=i.dynCall_vij=(e,t,n)=>(on=i.dynCall_vij=ft.We)(e,t,n),ln=i.dynCall_viijjjiiiiii=(e,t,n,r,a,s,o,l,u,d,c,h)=>(ln=i.dynCall_viijjjiiiiii=ft.Xe)(e,t,n,r,a,s,o,l,u,d,c,h),un=i.dynCall_viiijiiiiiii=(e,t,n,r,a,s,o,l,u,d,c,h)=>(un=i.dynCall_viiijiiiiiii=ft.Ye)(e,t,n,r,a,s,o,l,u,d,c,h),dn=i.dynCall_iiiiiiii=(e,t,n,r,a,s,o,l)=>(dn=i.dynCall_iiiiiiii=ft.Ze)(e,t,n,r,a,s,o,l),cn=i.dynCall_viiiiiii=(e,t,n,r,a,s,o,l)=>(cn=i.dynCall_viiiiiii=ft._e)(e,t,n,r,a,s,o,l),hn=i.dynCall_iiiiiiiij=(e,t,n,r,a,s,o,l,u)=>(hn=i.dynCall_iiiiiiiij=ft.$e)(e,t,n,r,a,s,o,l,u),pn=i.dynCall_viiiiiiiiiiiii=(e,t,n,r,a,s,o,l,u,d,c,h,p,f)=>(pn=i.dynCall_viiiiiiiiiiiii=ft.af)(e,t,n,r,a,s,o,l,u,d,c,h,p,f),fn=i.dynCall_iiiiiiiii=(e,t,n,r,a,s,o,l,u)=>(fn=i.dynCall_iiiiiiiii=ft.bf)(e,t,n,r,a,s,o,l,u),mn=i.dynCall_iiiiijiiiii=(e,t,n,r,a,s,o,l,u,d,c)=>(mn=i.dynCall_iiiiijiiiii=ft.cf)(e,t,n,r,a,s,o,l,u,d,c),gn=i.dynCall_vijjjiiij=(e,t,n,r,a,s,o,l,u)=>(gn=i.dynCall_vijjjiiij=ft.df)(e,t,n,r,a,s,o,l,u),_n=i.dynCall_fi=(e,t)=>(_n=i.dynCall_fi=ft.ef)(e,t),yn=i.dynCall_fii=(e,t,n)=>(yn=i.dynCall_fii=ft.ff)(e,t,n),wn=i.dynCall_di=(e,t)=>(wn=i.dynCall_di=ft.gf)(e,t),vn=i.dynCall_dii=(e,t,n)=>(vn=i.dynCall_dii=ft.hf)(e,t,n),bn=i.dynCall_vijj=(e,t,n,r)=>(bn=i.dynCall_vijj=ft.jf)(e,t,n,r),$n=i.dynCall_iiiiiiiiii=(e,t,n,r,a,s,o,l,u,d)=>($n=i.dynCall_iiiiiiiiii=ft.kf)(e,t,n,r,a,s,o,l,u,d),xn=i.dynCall_viijiii=(e,t,n,r,a,s,o)=>(xn=i.dynCall_viijiii=ft.lf)(e,t,n,r,a,s,o),Cn=i.dynCall_viid=(e,t,n,r)=>(Cn=i.dynCall_viid=ft.mf)(e,t,n,r),Tn=i.dynCall_viffiii=(e,t,n,r,a,s,o)=>(Tn=i.dynCall_viffiii=ft.nf)(e,t,n,r,a,s,o),Sn=i.dynCall_viifiii=(e,t,n,r,a,s,o)=>(Sn=i.dynCall_viifiii=ft.of)(e,t,n,r,a,s,o),Mn=i.dynCall_viiiiidiidi=(e,t,n,r,a,s,o,l,u,d,c)=>(Mn=i.dynCall_viiiiidiidi=ft.pf)(e,t,n,r,a,s,o,l,u,d,c),kn=i.dynCall_viiiiiiiiidi=(e,t,n,r,a,s,o,l,u,d,c,h)=>(kn=i.dynCall_viiiiiiiiidi=ft.qf)(e,t,n,r,a,s,o,l,u,d,c,h),En=i.dynCall_jiii=(e,t,n,r)=>(En=i.dynCall_jiii=ft.rf)(e,t,n,r),An=i.dynCall_vjiiiiii=(e,t,n,r,a,s,o,l)=>(An=i.dynCall_vjiiiiii=ft.sf)(e,t,n,r,a,s,o,l),In=i.dynCall_viiid=(e,t,n,r,a)=>(In=i.dynCall_viiid=ft.tf)(e,t,n,r,a),Pn=i.dynCall_viiiiiiiiiji=(e,t,n,r,a,s,o,l,u,d,c,h)=>(Pn=i.dynCall_viiiiiiiiiji=ft.uf)(e,t,n,r,a,s,o,l,u,d,c,h),On=i.dynCall_viji=(e,t,n,r)=>(On=i.dynCall_viji=ft.vf)(e,t,n,r),zn=i.dynCall_vijjjjjjjjjjjjji=(e,t,n,r,a,s,o,l,u,d,c,h,p,f,m,g)=>(zn=i.dynCall_vijjjjjjjjjjjjji=ft.wf)(e,t,n,r,a,s,o,l,u,d,c,h,p,f,m,g),Bn=i.dynCall_viiiji=(e,t,n,r,a,s)=>(Bn=i.dynCall_viiiji=ft.xf)(e,t,n,r,a,s),Rn=i.dynCall_vijjjiiji=(e,t,n,r,a,s,o,l,u)=>(Rn=i.dynCall_vijjjiiji=ft.yf)(e,t,n,r,a,s,o,l,u),Fn=i.dynCall_iiiji=(e,t,n,r,a)=>(Fn=i.dynCall_iiiji=ft.zf)(e,t,n,r,a),jn=i.dynCall_iiijiiiiiiiiii=(e,t,n,r,a,s,o,l,u,d,c,h,p,f)=>(jn=i.dynCall_iiijiiiiiiiiii=ft.Af)(e,t,n,r,a,s,o,l,u,d,c,h,p,f),Dn=i.dynCall_vj=(e,t)=>(Dn=i.dynCall_vj=ft.Bf)(e,t),Ln=i.dynCall_jjj=(e,t,n)=>(Ln=i.dynCall_jjj=ft.Cf)(e,t,n),Nn=i.dynCall_iiijiiiiii=(e,t,n,r,a,s,o,l,u,d)=>(Nn=i.dynCall_iiijiiiiii=ft.Df)(e,t,n,r,a,s,o,l,u,d),Wn=i.dynCall_vfiii=(e,t,n,r,a)=>(Wn=i.dynCall_vfiii=ft.Ef)(e,t,n,r,a),Un=i.dynCall_viiiiff=(e,t,n,r,a,s,o)=>(Un=i.dynCall_viiiiff=ft.Ff)(e,t,n,r,a,s,o),Vn=i.dynCall_viiiiiff=(e,t,n,r,a,s,o,l)=>(Vn=i.dynCall_viiiiiff=ft.Gf)(e,t,n,r,a,s,o,l),Gn=i.dynCall_viiff=(e,t,n,r,a)=>(Gn=i.dynCall_viiff=ft.Hf)(e,t,n,r,a),qn=i.dynCall_viiiiiiiiifiii=(e,t,n,r,a,s,o,l,u,d,c,h,p,f)=>(qn=i.dynCall_viiiiiiiiifiii=ft.If)(e,t,n,r,a,s,o,l,u,d,c,h,p,f),Hn=i.dynCall_viiiiiiiijj=(e,t,n,r,a,s,o,l,u,d,c)=>(Hn=i.dynCall_viiiiiiiijj=ft.Jf)(e,t,n,r,a,s,o,l,u,d,c),Kn=i.dynCall_iiiiiiiiiiiiiifii=(e,t,n,r,a,s,o,l,u,d,c,h,p,f,m,g,_)=>(Kn=i.dynCall_iiiiiiiiiiiiiifii=ft.Kf)(e,t,n,r,a,s,o,l,u,d,c,h,p,f,m,g,_),Yn=i.dynCall_viiiiiiiiiiii=(e,t,n,r,a,s,o,l,u,d,c,h,p)=>(Yn=i.dynCall_viiiiiiiiiiii=ft.Lf)(e,t,n,r,a,s,o,l,u,d,c,h,p),Qn=i.dynCall_iiiiiiiiiiiiiiiiifii=(e,t,n,r,a,s,o,l,u,d,c,h,p,f,m,g,_,y,w,v)=>(Qn=i.dynCall_iiiiiiiiiiiiiiiiifii=ft.Mf)(e,t,n,r,a,s,o,l,u,d,c,h,p,f,m,g,_,y,w,v),Xn=i.dynCall_vijjiiiiii=(e,t,n,r,a,s,o,l,u,d)=>(Xn=i.dynCall_vijjiiiiii=ft.Nf)(e,t,n,r,a,s,o,l,u,d),Zn=i.dynCall_iiiijjj=(e,t,n,r,a,s,o)=>(Zn=i.dynCall_iiiijjj=ft.Of)(e,t,n,r,a,s,o),Jn=i.dynCall_viiiiiiiiii=(e,t,n,r,a,s,o,l,u,d,c)=>(Jn=i.dynCall_viiiiiiiiii=ft.Pf)(e,t,n,r,a,s,o,l,u,d,c),er=i.dynCall_iiijjj=(e,t,n,r,a,s)=>(er=i.dynCall_iiijjj=ft.Qf)(e,t,n,r,a,s),tr=i.dynCall_fffffff=(e,t,n,r,a,s,o)=>(tr=i.dynCall_fffffff=ft.Rf)(e,t,n,r,a,s,o),nr=i.dynCall_viiiij=(e,t,n,r,a,s)=>(nr=i.dynCall_viiiij=ft.Sf)(e,t,n,r,a,s),rr=i.dynCall_viijj=(e,t,n,r,a)=>(rr=i.dynCall_viijj=ft.Tf)(e,t,n,r,a),ir=i.dynCall_vjjjjjjffiifiiiiii=(e,t,n,r,a,s,o,l,u,d,c,h,p,f,m,g,_,y)=>(ir=i.dynCall_vjjjjjjffiifiiiiii=ft.Uf)(e,t,n,r,a,s,o,l,u,d,c,h,p,f,m,g,_,y),ar=i.dynCall_viiiiiiffiifiiiii=(e,t,n,r,a,s,o,l,u,d,c,h,p,f,m,g,_)=>(ar=i.dynCall_viiiiiiffiifiiiii=ft.Vf)(e,t,n,r,a,s,o,l,u,d,c,h,p,f,m,g,_),sr=i.dynCall_viiiiiiffifiiiii=(e,t,n,r,a,s,o,l,u,d,c,h,p,f,m,g)=>(sr=i.dynCall_viiiiiiffifiiiii=ft.Wf)(e,t,n,r,a,s,o,l,u,d,c,h,p,f,m,g),or=i.dynCall_viiiiiiffiiiiii=(e,t,n,r,a,s,o,l,u,d,c,h,p,f,m)=>(or=i.dynCall_viiiiiiffiiiiii=ft.Xf)(e,t,n,r,a,s,o,l,u,d,c,h,p,f,m),lr=i.dynCall_vjjjjjjjjfffiifiiiiii=(e,t,n,r,a,s,o,l,u,d,c,h,p,f,m,g,_,y,w,v,b)=>(lr=i.dynCall_vjjjjjjjjfffiifiiiiii=ft.Yf)(e,t,n,r,a,s,o,l,u,d,c,h,p,f,m,g,_,y,w,v,b),ur=i.dynCall_vjjjjjjfffifiiiiiii=(e,t,n,r,a,s,o,l,u,d,c,h,p,f,m,g,_,y,w)=>(ur=i.dynCall_vjjjjjjfffifiiiiiii=ft.Zf)(e,t,n,r,a,s,o,l,u,d,c,h,p,f,m,g,_,y,w),dr=i.dynCall_vjjjjjjfffifiiiii=(e,t,n,r,a,s,o,l,u,d,c,h,p,f,m,g,_)=>(dr=i.dynCall_vjjjjjjfffifiiiii=ft._f)(e,t,n,r,a,s,o,l,u,d,c,h,p,f,m,g,_),cr=i.dynCall_vjjjjjjjjfffiifiiiii=(e,t,n,r,a,s,o,l,u,d,c,h,p,f,m,g,_,y,w,v)=>(cr=i.dynCall_vjjjjjjjjfffiifiiiii=ft.$f)(e,t,n,r,a,s,o,l,u,d,c,h,p,f,m,g,_,y,w,v),hr=i.dynCall_vijjfffiii=(e,t,n,r,a,s,o,l,u,d)=>(hr=i.dynCall_vijjfffiii=ft.ag)(e,t,n,r,a,s,o,l,u,d),pr=i.dynCall_vijiiiiiiii=(e,t,n,r,a,s,o,l,u,d,c)=>(pr=i.dynCall_vijiiiiiiii=ft.bg)(e,t,n,r,a,s,o,l,u,d,c),fr=i.dynCall_vijjjjjjifiiiii=(e,t,n,r,a,s,o,l,u,d,c,h,p,f,m)=>(fr=i.dynCall_vijjjjjjifiiiii=ft.cg)(e,t,n,r,a,s,o,l,u,d,c,h,p,f,m),mr=i.dynCall_vjjjjjiiii=(e,t,n,r,a,s,o,l,u,d)=>(mr=i.dynCall_vjjjjjiiii=ft.dg)(e,t,n,r,a,s,o,l,u,d),gr=i.dynCall_vjjjjfiii=(e,t,n,r,a,s,o,l,u)=>(gr=i.dynCall_vjjjjfiii=ft.eg)(e,t,n,r,a,s,o,l,u),_r=i.dynCall_viifi=(e,t,n,r,a)=>(_r=i.dynCall_viifi=ft.fg)(e,t,n,r,a),yr=i.dynCall_vijjii=(e,t,n,r,a,s)=>(yr=i.dynCall_vijjii=ft.gg)(e,t,n,r,a,s),wr=i.dynCall_viiiiijjiiiii=(e,t,n,r,a,s,o,l,u,d,c,h,p)=>(wr=i.dynCall_viiiiijjiiiii=ft.hg)(e,t,n,r,a,s,o,l,u,d,c,h,p),vr=i.dynCall_iiiiiji=(e,t,n,r,a,s,o)=>(vr=i.dynCall_iiiiiji=ft.ig)(e,t,n,r,a,s,o),br=i.dynCall_iiiiji=(e,t,n,r,a,s)=>(br=i.dynCall_iiiiji=ft.jg)(e,t,n,r,a,s),$r=i.dynCall_viiiiijiiiiii=(e,t,n,r,a,s,o,l,u,d,c,h,p)=>($r=i.dynCall_viiiiijiiiiii=ft.kg)(e,t,n,r,a,s,o,l,u,d,c,h,p),xr=i.dynCall_viiijiiiiii=(e,t,n,r,a,s,o,l,u,d,c)=>(xr=i.dynCall_viiijiiiiii=ft.lg)(e,t,n,r,a,s,o,l,u,d,c),Cr=i.dynCall_viiiijii=(e,t,n,r,a,s,o,l)=>(Cr=i.dynCall_viiiijii=ft.mg)(e,t,n,r,a,s,o,l),Tr=i.dynCall_viijjiii=(e,t,n,r,a,s,o,l)=>(Tr=i.dynCall_viijjiii=ft.ng)(e,t,n,r,a,s,o,l),Sr=i.dynCall_ijii=(e,t,n,r)=>(Sr=i.dynCall_ijii=ft.og)(e,t,n,r),Mr=i.dynCall_viiiiijjji=(e,t,n,r,a,s,o,l,u,d)=>(Mr=i.dynCall_viiiiijjji=ft.pg)(e,t,n,r,a,s,o,l,u,d),kr=i.dynCall_vijjjjiij=(e,t,n,r,a,s,o,l,u)=>(kr=i.dynCall_vijjjjiij=ft.qg)(e,t,n,r,a,s,o,l,u),Er=i.dynCall_viiiiijij=(e,t,n,r,a,s,o,l,u)=>(Er=i.dynCall_viiiiijij=ft.rg)(e,t,n,r,a,s,o,l,u),Ar=i.dynCall_viiiiiijij=(e,t,n,r,a,s,o,l,u,d)=>(Ar=i.dynCall_viiiiiijij=ft.sg)(e,t,n,r,a,s,o,l,u,d),Ir=i.dynCall_vijiii=(e,t,n,r,a,s)=>(Ir=i.dynCall_vijiii=ft.tg)(e,t,n,r,a,s),Pr=i.dynCall_viiifii=(e,t,n,r,a,s,o)=>(Pr=i.dynCall_viiifii=ft.ug)(e,t,n,r,a,s,o),Or=i.dynCall_viiiiiiiiifi=(e,t,n,r,a,s,o,l,u,d,c,h)=>(Or=i.dynCall_viiiiiiiiifi=ft.vg)(e,t,n,r,a,s,o,l,u,d,c,h),zr=i.dynCall_iiijiiii=(e,t,n,r,a,s,o,l)=>(zr=i.dynCall_iiijiiii=ft.wg)(e,t,n,r,a,s,o,l),Br=i.dynCall_viiiiiijjiiiii=(e,t,n,r,a,s,o,l,u,d,c,h,p,f)=>(Br=i.dynCall_viiiiiijjiiiii=ft.xg)(e,t,n,r,a,s,o,l,u,d,c,h,p,f),Rr=i.dynCall_viiiiiiijiiiiii=(e,t,n,r,a,s,o,l,u,d,c,h,p,f,m)=>(Rr=i.dynCall_viiiiiiijiiiiii=ft.yg)(e,t,n,r,a,s,o,l,u,d,c,h,p,f,m),Fr=i.dynCall_vif=(e,t,n)=>(Fr=i.dynCall_vif=ft.zg)(e,t,n),jr=i.dynCall_viif=(e,t,n,r)=>(jr=i.dynCall_viif=ft.Ag)(e,t,n,r),Dr=i.dynCall_fiii=(e,t,n,r)=>(Dr=i.dynCall_fiii=ft.Bg)(e,t,n,r),Lr=i.dynCall_diii=(e,t,n,r)=>(Lr=i.dynCall_diii=ft.Cg)(e,t,n,r),Nr=i.dynCall_viiiiiifii=(e,t,n,r,a,s,o,l,u,d)=>(Nr=i.dynCall_viiiiiifii=ft.Dg)(e,t,n,r,a,s,o,l,u,d),Wr=i.dynCall_viiiiijiiiiiiiiiiiiiiiiiii=(e,t,n,r,a,s,o,l,u,d,c,h,p,f,m,g,_,y,w,v,b,$,x,C,T,S)=>(Wr=i.dynCall_viiiiijiiiiiiiiiiiiiiiiiii=ft.Eg)(e,t,n,r,a,s,o,l,u,d,c,h,p,f,m,g,_,y,w,v,b,$,x,C,T,S),Ur=i.dynCall_viijji=(e,t,n,r,a,s)=>(Ur=i.dynCall_viijji=ft.Fg)(e,t,n,r,a,s),Vr=i.dynCall_iiiiiiiiiiiji=(e,t,n,r,a,s,o,l,u,d,c,h,p)=>(Vr=i.dynCall_iiiiiiiiiiiji=ft.Gg)(e,t,n,r,a,s,o,l,u,d,c,h,p),Gr=i.dynCall_viifiifijjjii=(e,t,n,r,a,s,o,l,u,d,c,h,p)=>(Gr=i.dynCall_viifiifijjjii=ft.Hg)(e,t,n,r,a,s,o,l,u,d,c,h,p),qr=i.dynCall_viiiiiiiiiiiiiiiiiiii=(e,t,n,r,a,s,o,l,u,d,c,h,p,f,m,g,_,y,w,v,b)=>(qr=i.dynCall_viiiiiiiiiiiiiiiiiiii=ft.Ig)(e,t,n,r,a,s,o,l,u,d,c,h,p,f,m,g,_,y,w,v,b),Hr=i.dynCall_viiiiifiiiiii=(e,t,n,r,a,s,o,l,u,d,c,h,p)=>(Hr=i.dynCall_viiiiifiiiiii=ft.Jg)(e,t,n,r,a,s,o,l,u,d,c,h,p),Kr=i.dynCall_vijiiiiiiijjii=(e,t,n,r,a,s,o,l,u,d,c,h,p,f)=>(Kr=i.dynCall_vijiiiiiiijjii=ft.Kg)(e,t,n,r,a,s,o,l,u,d,c,h,p,f),Yr=i.dynCall_viiiiiiiiiiiiiiiiii=(e,t,n,r,a,s,o,l,u,d,c,h,p,f,m,g,_,y,w)=>(Yr=i.dynCall_viiiiiiiiiiiiiiiiii=ft.Lg)(e,t,n,r,a,s,o,l,u,d,c,h,p,f,m,g,_,y,w),Qr=i.dynCall_viiiiiiiiiiiiiiiiiii=(e,t,n,r,a,s,o,l,u,d,c,h,p,f,m,g,_,y,w,v)=>(Qr=i.dynCall_viiiiiiiiiiiiiiiiiii=ft.Mg)(e,t,n,r,a,s,o,l,u,d,c,h,p,f,m,g,_,y,w,v),Xr=i.dynCall_viiiiiiiiiiiiiii=(e,t,n,r,a,s,o,l,u,d,c,h,p,f,m,g)=>(Xr=i.dynCall_viiiiiiiiiiiiiii=ft.Ng)(e,t,n,r,a,s,o,l,u,d,c,h,p,f,m,g),Zr=i.dynCall_viiiiiiiiiiiiiiii=(e,t,n,r,a,s,o,l,u,d,c,h,p,f,m,g,_)=>(Zr=i.dynCall_viiiiiiiiiiiiiiii=ft.Og)(e,t,n,r,a,s,o,l,u,d,c,h,p,f,m,g,_),Jr=i.dynCall_viiiijjj=(e,t,n,r,a,s,o,l)=>(Jr=i.dynCall_viiiijjj=ft.Pg)(e,t,n,r,a,s,o,l),ei=i.dynCall_iiiiid=(e,t,n,r,a,s)=>(ei=i.dynCall_iiiiid=ft.Qg)(e,t,n,r,a,s),ti=i.dynCall_viiiiiiijjj=(e,t,n,r,a,s,o,l,u,d,c)=>(ti=i.dynCall_viiiiiiijjj=ft.Rg)(e,t,n,r,a,s,o,l,u,d,c),ni=i.dynCall_iiiiiiiiiii=(e,t,n,r,a,s,o,l,u,d,c)=>(ni=i.dynCall_iiiiiiiiiii=ft.Sg)(e,t,n,r,a,s,o,l,u,d,c),ri=i.dynCall_iiiiiiiiiiiiiiiiiifi=(e,t,n,r,a,s,o,l,u,d,c,h,p,f,m,g,_,y,w,v)=>(ri=i.dynCall_iiiiiiiiiiiiiiiiiifi=ft.Tg)(e,t,n,r,a,s,o,l,u,d,c,h,p,f,m,g,_,y,w,v),ii=i.dynCall_viiif=(e,t,n,r,a)=>(ii=i.dynCall_viiif=ft.Ug)(e,t,n,r,a),ai=i.dynCall_viiijiiiii=(e,t,n,r,a,s,o,l,u,d)=>(ai=i.dynCall_viiijiiiii=ft.Vg)(e,t,n,r,a,s,o,l,u,d),si=i.dynCall_viiij=(e,t,n,r,a)=>(si=i.dynCall_viiij=ft.Wg)(e,t,n,r,a),oi=i.dynCall_iijjj=(e,t,n,r,a)=>(oi=i.dynCall_iijjj=ft.Xg)(e,t,n,r,a),li=i.dynCall_viiiiji=(e,t,n,r,a,s,o)=>(li=i.dynCall_viiiiji=ft.Yg)(e,t,n,r,a,s,o),ui=i.dynCall_iijjji=(e,t,n,r,a,s)=>(ui=i.dynCall_iijjji=ft.Zg)(e,t,n,r,a,s),di=i.dynCall_ijijji=(e,t,n,r,a,s)=>(di=i.dynCall_ijijji=ft._g)(e,t,n,r,a,s),ci=i.dynCall_viiijjiii=(e,t,n,r,a,s,o,l,u)=>(ci=i.dynCall_viiijjiii=ft.$g)(e,t,n,r,a,s,o,l,u),hi=i.dynCall_iiiiijji=(e,t,n,r,a,s,o,l)=>(hi=i.dynCall_iiiiijji=ft.ah)(e,t,n,r,a,s,o,l),pi=i.dynCall_iiiifi=(e,t,n,r,a,s)=>(pi=i.dynCall_iiiifi=ft.bh)(e,t,n,r,a,s),fi=i.dynCall_iiijii=(e,t,n,r,a,s)=>(fi=i.dynCall_iiijii=ft.ch)(e,t,n,r,a,s),mi=i.dynCall_iiiiiiiiijii=(e,t,n,r,a,s,o,l,u,d,c,h)=>(mi=i.dynCall_iiiiiiiiijii=ft.dh)(e,t,n,r,a,s,o,l,u,d,c,h),gi=i.dynCall_iiiijjii=(e,t,n,r,a,s,o,l)=>(gi=i.dynCall_iiiijjii=ft.eh)(e,t,n,r,a,s,o,l),_i=i.dynCall_iiiiiijjjii=(e,t,n,r,a,s,o,l,u,d,c)=>(_i=i.dynCall_iiiiiijjjii=ft.fh)(e,t,n,r,a,s,o,l,u,d,c),yi=i.dynCall_iiijiii=(e,t,n,r,a,s,o)=>(yi=i.dynCall_iiijiii=ft.gh)(e,t,n,r,a,s,o),wi=i.dynCall_iiiiiiiijjjfi=(e,t,n,r,a,s,o,l,u,d,c,h,p)=>(wi=i.dynCall_iiiiiiiijjjfi=ft.hh)(e,t,n,r,a,s,o,l,u,d,c,h,p),vi=i.dynCall_iijiiii=(e,t,n,r,a,s,o)=>(vi=i.dynCall_iijiiii=ft.ih)(e,t,n,r,a,s,o),bi=i.dynCall_iijjjii=(e,t,n,r,a,s,o)=>(bi=i.dynCall_iijjjii=ft.jh)(e,t,n,r,a,s,o),$i=i.dynCall_iiji=(e,t,n,r)=>($i=i.dynCall_iiji=ft.kh)(e,t,n,r),xi=i.dynCall_iiif=(e,t,n,r)=>(xi=i.dynCall_iiif=ft.lh)(e,t,n,r),Ci=i.dynCall_vidi=(e,t,n,r)=>(Ci=i.dynCall_vidi=ft.mh)(e,t,n,r),Ti=i.dynCall_vjiii=(e,t,n,r,a)=>(Ti=i.dynCall_vjiii=ft.nh)(e,t,n,r,a),Si=i.dynCall_diiii=(e,t,n,r,a)=>(Si=i.dynCall_diiii=ft.oh)(e,t,n,r,a),Mi=i.dynCall_diiiii=(e,t,n,r,a,s)=>(Mi=i.dynCall_diiiii=ft.ph)(e,t,n,r,a,s),ki=i.dynCall_viiijjiiiiii=(e,t,n,r,a,s,o,l,u,d,c,h)=>(ki=i.dynCall_viiijjiiiiii=ft.qh)(e,t,n,r,a,s,o,l,u,d,c,h),Ei=i.dynCall_viijjijjjjiii=(e,t,n,r,a,s,o,l,u,d,c,h,p)=>(Ei=i.dynCall_viijjijjjjiii=ft.rh)(e,t,n,r,a,s,o,l,u,d,c,h,p),Ai=i.dynCall_iiiij=(e,t,n,r,a)=>(Ai=i.dynCall_iiiij=ft.sh)(e,t,n,r,a),Ii=i.dynCall_viiijii=(e,t,n,r,a,s,o)=>(Ii=i.dynCall_viiijii=ft.th)(e,t,n,r,a,s,o),Pi=i.dynCall_viijiiiiiiiii=(e,t,n,r,a,s,o,l,u,d,c,h,p)=>(Pi=i.dynCall_viijiiiiiiiii=ft.uh)(e,t,n,r,a,s,o,l,u,d,c,h,p),Oi=i.dynCall_fiiii=(e,t,n,r,a)=>(Oi=i.dynCall_fiiii=ft.vh)(e,t,n,r,a),zi=i.dynCall_jfi=(e,t,n)=>(zi=i.dynCall_jfi=ft.wh)(e,t,n),Bi=i.dynCall_viiiiiiiiiiiiii=(e,t,n,r,a,s,o,l,u,d,c,h,p,f,m)=>(Bi=i.dynCall_viiiiiiiiiiiiii=ft.xh)(e,t,n,r,a,s,o,l,u,d,c,h,p,f,m),Ri=i.dynCall_jiij=(e,t,n,r)=>(Ri=i.dynCall_jiij=ft.yh)(e,t,n,r),Fi=e=>(Fi=ft.zh)(e),ji=()=>(ji=ft.Ah)(),Di=e=>(Di=ft.Bh)(e),Li=()=>(Li=ft.Ch)();function Ni(){if(!(0<R)){if(i.preRun)for("function"==typeof i.preRun&&(i.preRun=[i.preRun]);i.preRun.length;){var e=i.preRun.shift();O.unshift(e)}for(;0<O.length;)O.shift()(i);if(!(0<R||mt||(mt=!0,i.calledRun=!0,I))){for(;0<z.length;)z.shift()(i);for(t(i);0<B.length;)B.shift()(i)}}}return i.___start_em_js=1391667,i.___stop_em_js=1391828,i.stackAlloc=Ct,i.stackSave=$t,i.stackRestore=xt,i.UTF8ToString=ie,i.stringToUTF8=(e,t,n)=>se(e,$,t,n),i.lengthBytesUTF8=ae,j=function e(){mt||Ni(),mt||(j=e)},Ni(),e.ready});"object"==typeof e&&"object"==typeof t?t.exports=r:"function"==typeof define&&define.amd&&define([],(()=>r))})),ge=D((()=>{})),_e=D((()=>{})),ye={};L(ye,{cpus:()=>we});var we,ve,be,$e,xe,Ce,Te,Se,Me,ke,Ee,Ae,Ie,Pe,Oe,ze,Be,Re,Fe,je,De,Le,Ne,We,Ue,Ve,Ge,qe,He,Ke,Ye,Qe,Xe,Ze,Je,et,tt,nt,rt,it,at,st,ot,lt,ut,dt,ct,ht,pt,ft,mt,gt,_t,yt,wt,vt,bt,$t,xt,Ct,Tt,St,Mt,kt,Et,At,It,Pt,Ot,zt,Bt,Rt,Ft,jt,Dt,Lt,Nt,Wt,Ut,Vt,Gt,qt,Ht,Kt,Yt,Qt,Xt,Zt,Jt,en,tn,nn,rn,an,sn,on,ln,un,dn,cn,hn,pn,fn,mn,gn,_n,yn,wn,vn,bn,$n,xn,Cn,Tn,Sn,Mn,kn,En,An,In,Pn,On,zn,Bn,Rn,Fn,jn,Dn,Ln,Nn,Wn,Un,Vn,Gn,qn,Hn,Kn,Yn,Qn,Xn,Zn,Jn,er,tr,nr,rr,ir,ar,sr,or,lr,ur,dr,cr,hr,pr,fr,mr,gr,_r,yr,wr,vr,br,$r,xr,Cr,Tr,Sr,Mr,kr,Er,Ar,Ir,Pr,Or,zr,Br,Rr,Fr,jr,Dr,Lr,Nr,Wr,Ur,Vr,Gr,qr,Hr,Kr,Yr,Qr,Xr,Zr,Jr,ei,ti,ni,ri,ii,ai,si,oi,li,ui,di,ci,hi,pi,fi,mi,gi,_i,yi,wi,vi,bi,$i,xi,Ci,Ti,Si,Mi,ki,Ei,Ai,Ii,Pi,Oi,zi,Bi,Ri,Fi,ji,Di,Li,Ni,Wi,Ui,Vi,Gi,qi,Hi,Ki,Yi,Qi,Xi,Zi,Ji,ea,ta,na,ra,ia,aa,sa,oa,la,ua,da,ca,ha,pa,fa,ma,ga,_a,ya,wa,va,ba,$a,xa,Ca,Ta,Sa,Ma,ka,Ea,Aa,Ia,Pa,Oa,za,Ba,Ra,Fa,ja,Da,La,Na,Wa,Ua,Va,Ga,qa,Ha,Ka,Ya,Qa,Xa,Za,Ja,es,ts,ns,rs,is,as,ss,os,ls,us,ds,cs,hs,ps,fs,ms,gs,_s,ys,ws,vs,bs,$s,xs,Cs,Ts,Ss,Ms,ks,Es,As,Is,Ps,Os,zs,Bs,Rs,Fs,js,Ds,Ls,Ns,Ws,Us,Vs,Gs,qs,Hs,Ks,Ys,Qs,Xs,Zs,Js,eo,to,no,ro,io,ao,so,oo,lo,uo,co,ho,po,fo,mo,go,_o,yo,wo,vo,bo,$o,xo,Co=j((()=>{we=void 0})),To=D(((e,t)=>{var n,r=(n=typeof document<"u"&&document.currentScript?document.currentScript.src:void 0,typeof __filename<"u"&&(n=n||__filename),function(e={}){function t(){return A.buffer!=z.buffer&&L(),z}function r(){return A.buffer!=z.buffer&&L(),B}function i(){return A.buffer!=z.buffer&&L(),R}function a(){return A.buffer!=z.buffer&&L(),F}function s(){return A.buffer!=z.buffer&&L(),j}var o,l,u=e;u.ready=new Promise(((e,t)=>{o=e,l=t})),u.jsepInit=(e,t,n,r,i,a,s,o)=>{u.Qb=e,u.wb=t,u.yb=n,u.jb=r,u.xb=i,u.Ea=a,u.zb=s,u.Ab=o,t=(e,t,n)=>(...r)=>{let i=wt,a=t?.();r=e(...r);let s=t?.();return a!==s&&(e=s,n(a),t=n=null),wt!=i?new Promise(((e,t)=>{Tt={resolve:e,reject:t}})):r},n=t=>async(...n)=>{try{if(u.bb)throw Error("Session already started");let r=u.bb={Fb:n[0],errors:[]},i=await t(...n);if(u.bb!==r)throw Error("Session mismatch");e.flush();let a=r.errors;if(0<a.length){let e=await Promise.all(a);if(e=e.filter((e=>e)),0<e.length)throw Error(e.join("\n"))}return i}finally{u.bb=null}},u._OrtRun=n(t(u._OrtRun,(()=>u._OrtRun),(e=>u._OrtRun=e))),u._OrtRunWithBinding=n(t(u._OrtRunWithBinding,(()=>u._OrtRunWithBinding),(e=>u._OrtRunWithBinding=e))),u._OrtBindInput=t(u._OrtBindInput,(()=>u._OrtBindInput),(e=>u._OrtBindInput=e)),u.jsepRegisterBuffer=(t,n,r,i)=>e.registerBuffer(t,n,r,i),u.jsepUnregisterBuffers=t=>{e.unregisterBuffers(t)},u.jsepGetBuffer=t=>e.getBuffer(t),u.jsepCreateDownloader=(t,n,r)=>e.createDownloader(t,n,r)};var d,c,h,p=Object.assign({},u),f="./this.program",m=(e,t)=>{throw t},g="object"==typeof window,_="function"==typeof importScripts,y="object"==typeof process&&"object"==typeof process.versions&&"string"==typeof process.versions.node,w=u.ENVIRONMENT_IS_PTHREAD||!1,v="";function b(e){return u.locateFile?u.locateFile(e,v):v+e}if(y){var $=(ce(),N(oe)),x=(fe(),N(he));let e;v=_?x.dirname(v)+"/":__dirname+"/",d=(e,t)=>(e=e.startsWith("file://")?new URL(e):x.normalize(e),$.readFileSync(e,t?void 0:"utf8")),h=e=>((e=d(e,!0)).buffer||(e=new Uint8Array(e)),e),c=(e,t,n,r=!0)=>{e=e.startsWith("file://")?new URL(e):x.normalize(e),$.readFile(e,r?void 0:"utf8",((e,i)=>{e?n(e):t(r?i.buffer:i)}))},!u.thisProgram&&1<process.argv.length&&(f=process.argv[1].replace(/\\/g,"/")),process.argv.slice(2),m=(e,t)=>{throw process.exitCode=e,t},u.inspect=()=>"[Emscripten Module object]";try{e=ge()}catch(e){throw console.error('The "worker_threads" module is not supported in this node.js build - perhaps a newer version is needed?'),e}global.Worker=e.Worker}else(g||_)&&(_?v=self.location.href:typeof document<"u"&&document.currentScript&&(v=document.currentScript.src),typeof n<"u"&&n&&(v=n),v=0!==v.indexOf("blob:")?v.substr(0,v.replace(/[?#].*/,"").lastIndexOf("/")+1):"",y||(d=e=>{var t=new XMLHttpRequest;return t.open("GET",e,!1),t.send(null),t.responseText},_&&(h=e=>{var t=new XMLHttpRequest;return t.open("GET",e,!1),t.responseType="arraybuffer",t.send(null),new Uint8Array(t.response)}),c=(e,t,n)=>{var r=new XMLHttpRequest;r.open("GET",e,!0),r.responseType="arraybuffer",r.onload=()=>{200==r.status||0==r.status&&r.response?t(r.response):n()},r.onerror=n,r.send(null)}));y&&typeof performance>"u"&&(global.performance=_e().performance);var C=console.log.bind(console),T=console.error.bind(console);y&&(C=(...e)=>$.writeSync(1,e.join(" ")+"\n"),T=(...e)=>$.writeSync(2,e.join(" ")+"\n"));var S,M=u.print||C,k=u.printErr||T;Object.assign(u,p),p=null,u.thisProgram&&(f=u.thisProgram),u.quit&&(m=u.quit),u.wasmBinary&&(S=u.wasmBinary);var E=u.noExitRuntime||!0;"object"!=typeof WebAssembly&&ee("no native wasm support detected");var A,I,P,O,z,B,R,F,j,D=!1;function L(){var e=A.buffer;u.HEAP8=z=new Int8Array(e),u.HEAP16=new Int16Array(e),u.HEAP32=R=new Int32Array(e),u.HEAPU8=B=new Uint8Array(e),u.HEAPU16=new Uint16Array(e),u.HEAPU32=F=new Uint32Array(e),u.HEAPF32=new Float32Array(e),u.HEAPF64=j=new Float64Array(e)}var W=u.INITIAL_MEMORY||16777216;if(5242880<=W||ee("INITIAL_MEMORY should be larger than STACK_SIZE, was "+W+"! (STACK_SIZE=5242880)"),w)A=u.wasmMemory;else if(u.wasmMemory)A=u.wasmMemory;else if(!((A=new WebAssembly.Memory({initial:W/65536,maximum:65536,shared:!0})).buffer instanceof SharedArrayBuffer))throw k("requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag"),y&&k("(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and/or recent version)"),Error("bad memory");L(),W=A.buffer.byteLength;var U=[],V=[],G=[],q=0;function H(){return E||0<q}var K,Y=0,Q=null,X=null;function Z(){Y++,u.monitorRunDependencies&&u.monitorRunDependencies(Y)}function J(){if(Y--,u.monitorRunDependencies&&u.monitorRunDependencies(Y),0==Y&&(null!==Q&&(clearInterval(Q),Q=null),X)){var e=X;X=null,e()}}function ee(e){throw u.onAbort&&u.onAbort(e),k(e="Aborted("+e+")"),D=!0,O=1,e=new WebAssembly.RuntimeError(e+". Build with -sASSERTIONS for more info."),l(e),e}function te(e){return e.startsWith("data:application/octet-stream;base64,")}function ne(e){if(e==K&&S)return new Uint8Array(S);if(h)return h(e);throw"both async and sync fetching of the wasm failed"}function re(e,t,n){return function(e){if(!S&&(g||_)){if("function"==typeof fetch&&!e.startsWith("file://"))return fetch(e,{credentials:"same-origin"}).then((t=>{if(!t.ok)throw"failed to load wasm binary file at '"+e+"'";return t.arrayBuffer()})).catch((()=>ne(e)));if(c)return new Promise(((t,n)=>{c(e,(e=>t(new Uint8Array(e))),n)}))}return Promise.resolve().then((()=>ne(e)))}(e).then((e=>WebAssembly.instantiate(e,t))).then((e=>e)).then(n,(e=>{k("failed to asynchronously prepare wasm: "+e),ee(e)}))}te(K="ort-wasm-simd-threaded.wasm")||(K=b(K));var ie,ae={906828:e=>{u.Ea("Abs",e,void 0)},906879:e=>{u.Ea("Neg",e,void 0)},906930:e=>{u.Ea("Floor",e,void 0)},906983:e=>{u.Ea("Ceil",e,void 0)},907035:e=>{u.Ea("Reciprocal",e,void 0)},907093:e=>{u.Ea("Sqrt",e,void 0)},907145:e=>{u.Ea("Exp",e,void 0)},907196:e=>{u.Ea("Erf",e,void 0)},907247:e=>{u.Ea("Sigmoid",e,void 0)},907302:e=>{u.Ea("Log",e,void 0)},907353:e=>{u.Ea("Sin",e,void 0)},907404:e=>{u.Ea("Cos",e,void 0)},907455:e=>{u.Ea("Tan",e,void 0)},907506:e=>{u.Ea("Asin",e,void 0)},907558:e=>{u.Ea("Acos",e,void 0)},907610:e=>{u.Ea("Atan",e,void 0)},907662:e=>{u.Ea("Sinh",e,void 0)},907714:e=>{u.Ea("Cosh",e,void 0)},907766:e=>{u.Ea("Asinh",e,void 0)},907819:e=>{u.Ea("Acosh",e,void 0)},907872:e=>{u.Ea("Atanh",e,void 0)},907925:e=>{u.Ea("Tanh",e,void 0)},907977:e=>{u.Ea("Not",e,void 0)},908028:(e,t,n)=>{u.Ea("ClipV10",e,{min:t,max:n})},908100:e=>{u.Ea("Clip",e,void 0)},908152:(e,t)=>{u.Ea("Elu",e,{alpha:t})},908210:e=>{u.Ea("Relu",e,void 0)},908262:(e,t)=>{u.Ea("LeakyRelu",e,{alpha:t})},908326:(e,t)=>{u.Ea("ThresholdedRelu",e,{alpha:t})},908396:(e,t)=>{u.Ea("Cast",e,{to:t})},908454:e=>{u.Ea("Add",e,void 0)},908505:e=>{u.Ea("Sub",e,void 0)},908556:e=>{u.Ea("Mul",e,void 0)},908607:e=>{u.Ea("Div",e,void 0)},908658:e=>{u.Ea("Pow",e,void 0)},908709:e=>{u.Ea("Equal",e,void 0)},908762:e=>{u.Ea("Greater",e,void 0)},908817:e=>{u.Ea("GreaterOrEqual",e,void 0)},908879:e=>{u.Ea("Less",e,void 0)},908931:e=>{u.Ea("LessOrEqual",e,void 0)},908990:(e,t,n,r,a)=>{u.Ea("ReduceMean",e,{keepDims:!!t,noopWithEmptyAxes:!!n,axes:r?Array.from(i().subarray(a>>>0,a+r>>>0)):[]})},909154:(e,t,n,r,a)=>{u.Ea("ReduceMax",e,{keepDims:!!t,noopWithEmptyAxes:!!n,axes:r?Array.from(i().subarray(a>>>0,a+r>>>0)):[]})},909317:(e,t,n,r,a)=>{u.Ea("ReduceMin",e,{keepDims:!!t,noopWithEmptyAxes:!!n,axes:r?Array.from(i().subarray(a>>>0,a+r>>>0)):[]})},909480:(e,t,n,r,a)=>{u.Ea("ReduceProd",e,{keepDims:!!t,noopWithEmptyAxes:!!n,axes:r?Array.from(i().subarray(a>>>0,a+r>>>0)):[]})},909644:(e,t,n,r,a)=>{u.Ea("ReduceSum",e,{keepDims:!!t,noopWithEmptyAxes:!!n,axes:r?Array.from(i().subarray(a>>>0,a+r>>>0)):[]})},909807:(e,t,n,r,a)=>{u.Ea("ReduceL1",e,{keepDims:!!t,noopWithEmptyAxes:!!n,axes:r?Array.from(i().subarray(a>>>0,a+r>>>0)):[]})},909969:(e,t,n,r,a)=>{u.Ea("ReduceL2",e,{keepDims:!!t,noopWithEmptyAxes:!!n,axes:r?Array.from(i().subarray(a>>>0,a+r>>>0)):[]})},910131:(e,t,n,r,a)=>{u.Ea("ReduceLogSum",e,{keepDims:!!t,noopWithEmptyAxes:!!n,axes:r?Array.from(i().subarray(a>>>0,a+r>>>0)):[]})},910297:(e,t,n,r,a)=>{u.Ea("ReduceSumSquare",e,{keepDims:!!t,noopWithEmptyAxes:!!n,axes:r?Array.from(i().subarray(a>>>0,a+r>>>0)):[]})},910466:(e,t,n,r,a)=>{u.Ea("ReduceLogSumExp",e,{keepDims:!!t,noopWithEmptyAxes:!!n,axes:r?Array.from(i().subarray(a>>>0,a+r>>>0)):[]})},910635:e=>{u.Ea("Where",e,void 0)},910688:(e,t,n)=>{u.Ea("Transpose",e,{perm:t?Array.from(i().subarray(n>>>0,n+t>>>0)):[]})},910801:(e,n,r,i,a,s,o,l,d,c)=>{u.Ea("Conv",e,{format:d?"NHWC":"NCHW",auto_pad:n,dilations:[r],group:i,kernel_shape:[a],pads:[s,o],strides:[l],w_is_const:()=>!!t()[c>>>0]})},911029:(e,n,r,i,a,s,o,l,d,c,h,p,f,m,g)=>{u.Ea("Conv",e,{format:m?"NHWC":"NCHW",auto_pad:n,dilations:[r,i],group:a,kernel_shape:[s,o],pads:[l,d,c,h],strides:[p,f],w_is_const:()=>!!t()[g>>>0]})},911288:(e,n,r,i,a,s,o,l,d,c)=>{u.Ea("Conv",e,{format:d?"NHWC":"NCHW",auto_pad:n,dilations:[r],group:i,kernel_shape:[a],pads:[s,o],strides:[l],w_is_const:()=>!!t()[c>>>0]})},911516:(e,n,r,i,a,s,o,l,d,c,h,p,f,m,g)=>{u.Ea("Conv",e,{format:m?"NHWC":"NCHW",auto_pad:n,dilations:[r,i],group:a,kernel_shape:[s,o],pads:[l,d,c,h],strides:[p,f],w_is_const:()=>!!t()[g>>>0]})},911775:(e,n,r,a,s,o,l,d,c,h,p,f,m,g)=>{u.Ea("ConvTranspose",e,{format:c?"NHWC":"NCHW",autoPad:n,dilations:[r],group:a,kernel_shape:[s],pads:[o,l],strides:[d],wIsConst:()=>!!t()[h>>>0],outputPadding:p?Array.from(i().subarray(f>>>0,f+p>>>0)):[],outputShape:m?Array.from(i().subarray(g>>>0,g+m>>>0)):[]})},912155:(e,n,r,a,s,o,l,d,c,h,p,f,m)=>{u.Ea("ConvTranspose",e,{format:d?"NHWC":"NCHW",autoPad:n,dilations:Array.from(i().subarray(r>>>0,r+2>>>0)),group:a,kernelShape:Array.from(i().subarray(s>>>0,s+2>>>0)),pads:Array.from(i().subarray(o>>>0,o+4>>>0)),strides:Array.from(i().subarray(l>>>0,l+2>>>0)),wIsConst:()=>!!t()[c>>>0],outputPadding:0<h?Array.from(i().subarray(p>>>0,p+h>>>0)):[],outputShape:0<f?Array.from(i().subarray(m>>>0,m+f>>>0)):[]})},912678:(e,n,r,a,s,o,l,d,c,h,p,f,m,g)=>{u.Ea("ConvTranspose",e,{format:c?"NHWC":"NCHW",autoPad:n,dilations:[r],group:a,kernel_shape:[s],pads:[o,l],strides:[d],wIsConst:()=>!!t()[h>>>0],outputPadding:p?Array.from(i().subarray(f>>>0,f+p>>>0)):[],outputShape:m?Array.from(i().subarray(g>>>0,g+m>>>0)):[]})},913058:(e,n,r,a,s,o,l,d,c,h,p,f,m)=>{u.Ea("ConvTranspose",e,{format:d?"NHWC":"NCHW",autoPad:n,dilations:Array.from(i().subarray(r>>>0,r+2>>>0)),group:a,kernelShape:Array.from(i().subarray(s>>>0,s+2>>>0)),pads:Array.from(i().subarray(o>>>0,o+4>>>0)),strides:Array.from(i().subarray(l>>>0,l+2>>>0)),wIsConst:()=>!!t()[c>>>0],outputPadding:0<h?Array.from(i().subarray(p>>>0,p+h>>>0)):[],outputShape:0<f?Array.from(i().subarray(m>>>0,m+f>>>0)):[]})},913581:(e,t)=>{u.Ea("GlobalAveragePool",e,{format:t?"NHWC":"NCHW"})},913672:(e,t,n,r,i,a,s,o,l,d,c,h,p,f,m,g)=>{u.Ea("AveragePool",e,{format:g?"NHWC":"NCHW",auto_pad:t,ceil_mode:n,count_include_pad:r,storage_order:i,dilations:[a,s],kernel_shape:[o,l],pads:[d,c,h,p],strides:[f,m]})},913956:(e,t)=>{u.Ea("GlobalAveragePool",e,{format:t?"NHWC":"NCHW"})},914047:(e,t,n,r,i,a,s,o,l,d,c,h,p,f,m,g)=>{u.Ea("AveragePool",e,{format:g?"NHWC":"NCHW",auto_pad:t,ceil_mode:n,count_include_pad:r,storage_order:i,dilations:[a,s],kernel_shape:[o,l],pads:[d,c,h,p],strides:[f,m]})},914331:(e,t)=>{u.Ea("GlobalMaxPool",e,{format:t?"NHWC":"NCHW"})},914418:(e,t,n,r,i,a,s,o,l,d,c,h,p,f,m,g)=>{u.Ea("MaxPool",e,{format:g?"NHWC":"NCHW",auto_pad:t,ceil_mode:n,count_include_pad:r,storage_order:i,dilations:[a,s],kernel_shape:[o,l],pads:[d,c,h,p],strides:[f,m]})},914698:(e,t)=>{u.Ea("GlobalMaxPool",e,{format:t?"NHWC":"NCHW"})},914785:(e,t,n,r,i,a,s,o,l,d,c,h,p,f,m,g)=>{u.Ea("MaxPool",e,{format:g?"NHWC":"NCHW",auto_pad:t,ceil_mode:n,count_include_pad:r,storage_order:i,dilations:[a,s],kernel_shape:[o,l],pads:[d,c,h,p],strides:[f,m]})},915065:(e,t,n,r,i)=>{u.Ea("Gemm",e,{alpha:t,beta:n,transA:r,transB:i})},915169:e=>{u.Ea("MatMul",e,void 0)},915223:(e,t,n,r)=>{u.Ea("ArgMax",e,{keepDims:!!t,selectLastIndex:!!n,axis:r})},915331:(e,t,n,r)=>{u.Ea("ArgMin",e,{keepDims:!!t,selectLastIndex:!!n,axis:r})},915439:(e,t)=>{u.Ea("Softmax",e,{axis:t})},915502:(e,t)=>{u.Ea("Concat",e,{axis:t})},915562:(e,t,n,r,a)=>{u.Ea("Split",e,{axis:t,numOutputs:n,splitSizes:r?Array.from(i().subarray(a>>>0,a+r>>>0)):[]})},915707:e=>{u.Ea("Expand",e,void 0)},915761:(e,t)=>{u.Ea("Gather",e,{axis:Number(t)})},915832:(e,t)=>{u.Ea("GatherElements",e,{axis:Number(t)})},915911:(e,t,n,r,a,s,o,l,d,c,h)=>{u.Ea("Resize",e,{antialias:t,axes:n?Array.from(i().subarray(r>>>0,r+n>>>0)):[],coordinateTransformMode:we(a),cubicCoeffA:s,excludeOutside:o,extrapolationValue:l,keepAspectRatioPolicy:we(d),mode:we(c),nearestMode:we(h)})},916262:(e,t,n,r,a,s,o)=>{u.Ea("Slice",e,{starts:t?Array.from(i().subarray(n>>>0,n+t>>>0)):[],ends:r?Array.from(i().subarray(a>>>0,a+r>>>0)):[],axes:s?Array.from(i().subarray(o>>>0,o+s>>>0)):[]})},916493:e=>{u.Ea("Tile",e,void 0)},916545:(e,t,n)=>{u.Ea("LayerNormalization",e,{axis:Number(t),epsilon:Number(n)})},916652:(e,t,n)=>{u.Ea("InstanceNormalization",e,{epsilon:t,format:n?"NHWC":"NCHW"})},916766:(e,t,n)=>{u.Ea("InstanceNormalization",e,{epsilon:t,format:n?"NHWC":"NCHW"})},916880:e=>{u.Ea("Range",e,void 0)},916933:(e,t)=>{u.Ea("Einsum",e,{equation:we(t)})},917014:(e,t,n,r,a)=>{u.Ea("Pad",e,{mode:t,value:n,pads:r?Array.from(i().subarray(a>>>0,a+r>>>0)):[]})},917146:e=>{u.Ea("Gelu",e,void 0)},917198:e=>{u.Ea("BiasAdd",e,void 0)},917253:e=>{u.Ea("BiasSplitGelu",e,void 0)},917314:(e,t)=>{u.Ea("SkipLayerNormalization",e,{epsilon:t})},917395:e=>{u.zb(e)},917429:(e,t)=>u.Ab(e,t,u.bb.Fb,u.bb.errors),917541:e=>u.wb(e),917574:e=>u.yb(e),917606:(e,t,n)=>{u.jb(e,t,n,!0)},917645:(e,t,n)=>{u.jb(e,t,n)}};function se(e){this.name="ExitStatus",this.message=`Program terminated with exit(${e})`,this.status=e}function le(e){e.terminate(),e.onmessage=()=>{}}function ue(e){(e=$e.Qa[e])||ee(),$e.Eb(e)}function de(e){var t=$e.tb();if(!t)return 6;$e.Ya.push(t),$e.Qa[e.Xa]=t,t.Xa=e.Xa;var n={cmd:"run",start_routine:e.Gb,arg:e.rb,pthread_ptr:e.Xa};return y&&t.unref(),t.postMessage(n,e.Mb),0}var pe=typeof TextDecoder<"u"?new TextDecoder("utf8"):void 0,me=(e,t,n)=>{var r=(t>>>=0)+n;for(n=t;e[n]&&!(n>=r);)++n;if(16<n-t&&e.buffer&&pe)return pe.decode(e.buffer instanceof SharedArrayBuffer?e.slice(t,n):e.subarray(t,n));for(r="";t<n;){var i=e[t++];if(128&i){var a=63&e[t++];if(192==(224&i))r+=String.fromCharCode((31&i)<<6|a);else{var s=63&e[t++];65536>(i=224==(240&i)?(15&i)<<12|a<<6|s:(7&i)<<18|a<<12|s<<6|63&e[t++])?r+=String.fromCharCode(i):(i-=65536,r+=String.fromCharCode(55296|i>>10,56320|1023&i))}}else r+=String.fromCharCode(i)}return r},we=(e,t)=>(e>>>=0)?me(r(),e,t):"";function ve(e){if(w)return nt(1,1,e);O=e,H()||($e.Hb(),u.onExit&&u.onExit(e),D=!0),m(e,new se(e))}var be=e=>{if(O=e,w)throw Ce(e),"unwind";ve(e)},$e={ab:[],Ya:[],mb:[],Qa:{},gb:function(){w?$e.vb():$e.ub()},ub:function(){U.unshift((()=>{Z(),$e.Bb((()=>J()))}))},vb:function(){$e.receiveObjectTransfer=$e.Db,$e.threadInitTLS=$e.lb,$e.setExitStatus=$e.kb,E=!1},kb:function(e){O=e},Sb:["$terminateWorker"],Hb:function(){for(var e of $e.Ya)le(e);for(e of $e.ab)le(e);$e.ab=[],$e.Ya=[],$e.Qa=[]},Eb:function(e){var t=e.Xa;delete $e.Qa[t],$e.ab.push(e),$e.Ya.splice($e.Ya.indexOf(e),1),e.Xa=0,Rt(t)},Db:function(){},lb:function(){$e.mb.forEach((e=>e()))},Cb:e=>new Promise((t=>{e.onmessage=n=>{var r=(n=n.data).cmd;if(n.targetThread&&n.targetThread!=At()){var i=$e.Qa[n.Rb];i?i.postMessage(n,n.transferList):k('Internal error! Worker sent a message "'+r+'" to target pthread '+n.targetThread+", but that thread no longer exists!")}else"checkMailbox"===r?qe():"spawnThread"===r?de(n):"cleanupThread"===r?ue(n.thread):"killThread"===r?(n=n.thread,r=$e.Qa[n],delete $e.Qa[n],le(r),Rt(n),$e.Ya.splice($e.Ya.indexOf(r),1),r.Xa=0):"cancelThread"===r?$e.Qa[n.thread].postMessage({cmd:"cancel"}):"loaded"===r?(e.loaded=!0,t(e)):"alert"===r?alert("Thread "+n.threadId+": "+n.text):"setimmediate"===n.target?e.postMessage(n):"callHandler"===r?u[n.handler](...n.args):r&&k("worker sent an unknown command "+r)},e.onerror=e=>{throw k("worker sent an error! "+e.filename+":"+e.lineno+": "+e.message),e},y&&(e.on("message",(function(t){e.onmessage({data:t})})),e.on("error",(function(t){e.onerror(t)})));var r,i=[];for(r of["onExit","onAbort","print","printErr"])u.hasOwnProperty(r)&&i.push(r);e.postMessage({cmd:"load",handlers:i,urlOrBlob:u.mainScriptUrlOrBlob||n,wasmMemory:A,wasmModule:P})})),Bb:function(e){e()},qb:function(){var e=b("ort-wasm-simd-threaded.worker.js");e=new Worker(e),$e.ab.push(e)},tb:function(){return 0==$e.ab.length&&($e.qb(),$e.Cb($e.ab[0])),$e.ab.pop()}};u.PThread=$e;var xe=e=>{for(;0<e.length;)e.shift()(u)};function Ce(e){if(w)return nt(2,0,e);be(e)}function Te(e){this.fb=e-24,this.pb=function(e){a()[this.fb+4>>2>>>0]=e},this.ob=function(e){a()[this.fb+8>>2>>>0]=e},this.gb=function(e,t){this.nb(),this.pb(e),this.ob(t)},this.nb=function(){a()[this.fb+16>>2>>>0]=0}}function Se(e,t,n,r){return w?nt(3,1,e,t,n,r):Me(e,t,n,r)}function Me(e,t,n,r){if(e>>>=0,t>>>=0,n>>>=0,r>>>=0,typeof SharedArrayBuffer>"u")return k("Current environment does not support SharedArrayBuffer, pthreads are not available!"),6;var i=[];return w&&0===i.length?Se(e,t,n,r):(e={Gb:n,Xa:e,rb:r,Mb:i},w?(e.Ob="spawnThread",postMessage(e,i),0):de(e))}function ke(e,t,n){return w?nt(4,1,e,t,n):0}function Ee(e,t){if(w)return nt(5,1,e,t)}u.establishStackSpace=function(){var e=At(),t=i()[e+52>>2>>>0];e=i()[e+56>>2>>>0],Lt(t,t-e),Wt(t)},u.invokeEntryPoint=function(e,t){e=Vt.apply(null,[e,t]),H()?$e.kb(e):Ft(e)};var Ae=e=>{for(var t=0,n=0;n<e.length;++n){var r=e.charCodeAt(n);127>=r?t++:2047>=r?t+=2:55296<=r&&57343>=r?(t+=4,++n):t+=3}return t},Ie=(e,t,n,r)=>{if(!(0<r))return 0;var i=n>>>=0;r=n+r-1;for(var a=0;a<e.length;++a){var s=e.charCodeAt(a);if(55296<=s&&57343>=s&&(s=65536+((1023&s)<<10)|1023&e.charCodeAt(++a)),127>=s){if(n>=r)break;t[n++>>>0]=s}else{if(2047>=s){if(n+1>=r)break;t[n++>>>0]=192|s>>6}else{if(65535>=s){if(n+2>=r)break;t[n++>>>0]=224|s>>12}else{if(n+3>=r)break;t[n++>>>0]=240|s>>18,t[n++>>>0]=128|s>>12&63}t[n++>>>0]=128|s>>6&63}t[n++>>>0]=128|63&s}}return t[n>>>0]=0,n-i},Pe=(e,t,n)=>Ie(e,r(),t,n);function Oe(e,t){if(w)return nt(6,1,e,t)}function ze(e,t,n){if(w)return nt(7,1,e,t,n)}function Be(e,t,n){return w?nt(8,1,e,t,n):0}function Re(e,t){if(w)return nt(9,1,e,t)}function Fe(e,t,n){if(w)return nt(10,1,e,t,n)}function je(e,t,n,r){if(w)return nt(11,1,e,t,n,r)}function De(e,t,n,r){if(w)return nt(12,1,e,t,n,r)}function Le(e,t,n,r){if(w)return nt(13,1,e,t,n,r)}function Ne(e){if(w)return nt(14,1,e)}function We(e,t){if(w)return nt(15,1,e,t)}function Ue(e,t,n){if(w)return nt(16,1,e,t,n)}var Ve=e=>{if(!D)try{if(e(),!H())try{w?Ft(O):be(O)}catch(e){e instanceof se||"unwind"==e||m(1,e)}}catch(e){e instanceof se||"unwind"==e||m(1,e)}};function Ge(e){e>>>=0,"function"==typeof Atomics.Nb&&(Atomics.Nb(i(),e>>2,e).value.then(qe),e+=128,Atomics.store(i(),e>>2,1))}function qe(){var e=At();e&&(Ge(e),Ve((()=>jt())))}u.__emscripten_thread_mailbox_await=Ge,u.checkMailbox=qe;var He=e=>e%4==0&&(e%100!=0||e%400==0),Ke=[0,31,60,91,121,152,182,213,244,274,305,335],Ye=[0,31,59,90,120,151,181,212,243,273,304,334];function Qe(e,t,n,r,i,a,s,o){return w?nt(17,1,e,t,n,r,i,a,s,o):-52}function Xe(e,t,n,r,i,a,s){if(w)return nt(18,1,e,t,n,r,i,a,s)}var Ze=e=>{var t=Ae(e)+1,n=It(t);return n&&Pe(e,n,t),n},Je=[],et=(e,t)=>{var n;for(Je.length=0,t>>=2;n=r()[e++>>>0];)t+=105!=n&t,Je.push(105==n?i()[t>>>0]:s()[t++>>>1]),++t;return Je},tt=e=>{var t=Nt();return e=e(),Wt(t),e};function nt(e,t){var n=arguments.length-2,r=arguments;return tt((()=>{for(var i=Ut(8*n),a=i>>3,o=0;o<n;o++){var l=r[2+o];s()[a+o>>>0]=l}return Bt(e,n,i,t)}))}var rt,it=[],at={},st=()=>{if(!rt){var e,t={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:("object"==typeof navigator&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",_:f||"./this.program"};for(e in at)void 0===at[e]?delete t[e]:t[e]=at[e];var n=[];for(e in t)n.push(`${e}=${t[e]}`);rt=n}return rt};function ot(e,n){if(w)return nt(19,1,e,n);e>>>=0,n>>>=0;var r=0;return st().forEach((function(i,s){var o=n+r;for(s=a()[e+4*s>>2>>>0]=o,o=0;o<i.length;++o)t()[s++>>0>>>0]=i.charCodeAt(o);t()[s>>0>>>0]=0,r+=i.length+1})),0}function lt(e,t){if(w)return nt(20,1,e,t);e>>>=0,t>>>=0;var n=st();a()[e>>2>>>0]=n.length;var r=0;return n.forEach((function(e){r+=e.length+1})),a()[t>>2>>>0]=r,0}function ut(e){return w?nt(21,1,e):52}function dt(e,t,n,r){return w?nt(22,1,e,t,n,r):52}function ct(e,t,n,r,i){return w?nt(23,1,e,t,n,r,i):70}var ht=[null,[],[]];function pt(e,t,n,i){if(w)return nt(24,1,e,t,n,i);t>>>=0,n>>>=0,i>>>=0;for(var s=0,o=0;o<n;o++){var l=a()[t>>2>>>0],u=a()[t+4>>2>>>0];t+=8;for(var d=0;d<u;d++){var c=r()[l+d>>>0],h=ht[e];0===c||10===c?((1===e?M:k)(me(h,0)),h.length=0):h.push(c)}s+=u}return a()[i>>2>>>0]=s,0}var ft=[31,29,31,30,31,30,31,31,30,31,30,31],mt=[31,28,31,30,31,30,31,31,30,31,30,31];function gt(e,n,r,a){function s(e,t,n){for(e="number"==typeof e?e.toString():e||"";e.length<t;)e=n[0]+e;return e}function o(e,t){return s(e,t,"0")}function l(e,t){function n(e){return 0>e?-1:0<e?1:0}var r;return 0===(r=n(e.getFullYear()-t.getFullYear()))&&0===(r=n(e.getMonth()-t.getMonth()))&&(r=n(e.getDate()-t.getDate())),r}function u(e){switch(e.getDay()){case 0:return new Date(e.getFullYear()-1,11,29);case 1:return e;case 2:return new Date(e.getFullYear(),0,3);case 3:return new Date(e.getFullYear(),0,2);case 4:return new Date(e.getFullYear(),0,1);case 5:return new Date(e.getFullYear()-1,11,31);case 6:return new Date(e.getFullYear()-1,11,30)}}function d(e){var t=e.Za;for(e=new Date(new Date(e.$a+1900,0,1).getTime());0<t;){var n=e.getMonth(),r=(He(e.getFullYear())?ft:mt)[n];if(!(t>r-e.getDate())){e.setDate(e.getDate()+t);break}t-=r-e.getDate()+1,e.setDate(1),11>n?e.setMonth(n+1):(e.setMonth(0),e.setFullYear(e.getFullYear()+1))}return n=new Date(e.getFullYear()+1,0,4),t=u(new Date(e.getFullYear(),0,4)),n=u(n),0>=l(t,e)?0>=l(n,e)?e.getFullYear()+1:e.getFullYear():e.getFullYear()-1}e>>>=0,n>>>=0,r>>>=0,a>>>=0;var c=i()[a+40>>2>>>0];for(var h in a={Kb:i()[a>>2>>>0],Jb:i()[a+4>>2>>>0],cb:i()[a+8>>2>>>0],ib:i()[a+12>>2>>>0],eb:i()[a+16>>2>>>0],$a:i()[a+20>>2>>>0],Wa:i()[a+24>>2>>>0],Za:i()[a+28>>2>>>0],Tb:i()[a+32>>2>>>0],Ib:i()[a+36>>2>>>0],Lb:c?we(c):""},r=we(r),c={"%c":"%a %b %d %H:%M:%S %Y","%D":"%m/%d/%y","%F":"%Y-%m-%d","%h":"%b","%r":"%I:%M:%S %p","%R":"%H:%M","%T":"%H:%M:%S","%x":"%m/%d/%y","%X":"%H:%M:%S","%Ec":"%c","%EC":"%C","%Ex":"%m/%d/%y","%EX":"%H:%M:%S","%Ey":"%y","%EY":"%Y","%Od":"%d","%Oe":"%e","%OH":"%H","%OI":"%I","%Om":"%m","%OM":"%M","%OS":"%S","%Ou":"%u","%OU":"%U","%OV":"%V","%Ow":"%w","%OW":"%W","%Oy":"%y"})r=r.replace(new RegExp(h,"g"),c[h]);var p="Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "),f="January February March April May June July August September October November December".split(" ");for(h in c={"%a":e=>p[e.Wa].substring(0,3),"%A":e=>p[e.Wa],"%b":e=>f[e.eb].substring(0,3),"%B":e=>f[e.eb],"%C":e=>o((e.$a+1900)/100|0,2),"%d":e=>o(e.ib,2),"%e":e=>s(e.ib,2," "),"%g":e=>d(e).toString().substring(2),"%G":e=>d(e),"%H":e=>o(e.cb,2),"%I":e=>(0==(e=e.cb)?e=12:12<e&&(e-=12),o(e,2)),"%j":e=>{for(var t=0,n=0;n<=e.eb-1;t+=(He(e.$a+1900)?ft:mt)[n++]);return o(e.ib+t,3)},"%m":e=>o(e.eb+1,2),"%M":e=>o(e.Jb,2),"%n":()=>"\n","%p":e=>0<=e.cb&&12>e.cb?"AM":"PM","%S":e=>o(e.Kb,2),"%t":()=>"\t","%u":e=>e.Wa||7,"%U":e=>o(Math.floor((e.Za+7-e.Wa)/7),2),"%V":e=>{var t=Math.floor((e.Za+7-(e.Wa+6)%7)/7);if(2>=(e.Wa+371-e.Za-2)%7&&t++,t)53==t&&(4==(n=(e.Wa+371-e.Za)%7)||3==n&&He(e.$a)||(t=1));else{t=52;var n=(e.Wa+7-e.Za-1)%7;(4==n||5==n&&He(e.$a%400-1))&&t++}return o(t,2)},"%w":e=>e.Wa,"%W":e=>o(Math.floor((e.Za+7-(e.Wa+6)%7)/7),2),"%y":e=>(e.$a+1900).toString().substring(2),"%Y":e=>e.$a+1900,"%z":e=>(0<=(e=e.Ib)?"+":"-")+("0000"+((e=Math.abs(e)/60)/60*100+e%60)).slice(-4),"%Z":e=>e.Lb,"%%":()=>"%"},r=r.replace(/%%/g,"\0\0"),c)r.includes(h)&&(r=r.replace(new RegExp(h,"g"),c[h](a)));return h=function(e){var t=Array(Ae(e)+1);return Ie(e,t,0,t.length),t}(r=r.replace(/\0\0/g,"%")),h.length>n?0:(((e,n)=>{t().set(e,n>>>0)})(h,e),h.length-1)}function _t(e){try{e()}catch(e){ee(e)}}var yt=0,wt=null,vt=0,bt=[],$t={},xt={},Ct=0,Tt=null,St=[];function Mt(e){if(!D){if(0===yt){var t=!1,n=!1;e(((e=0)=>{if(!D&&(vt=e,t=!0,n)){yt=2,_t((()=>Ht(wt))),typeof Browser<"u"&&Browser.hb.sb&&Browser.hb.resume(),e=!1;try{var r=function(){var e=i()[wt+8>>2>>>0];return e=I[xt[e]],--q,e()}()}catch(t){r=t,e=!0}var a=!1;if(!wt){var s=Tt;s&&(Tt=null,(e?s.reject:s.resolve)(r),a=!0)}if(e&&!a)throw r}})),n=!0,t||(yt=1,wt=function(){var e=It(65548),t=e+12;a()[e>>2>>>0]=t,a()[e+4>>2>>>0]=t+65536,t=bt[0];var n=$t[t];return void 0===n&&(n=Ct++,$t[t]=n,xt[n]=t),t=n,i()[e+8>>2>>>0]=t,e}(),typeof Browser<"u"&&Browser.hb.sb&&Browser.hb.pause(),_t((()=>Gt(wt))))}else 2===yt?(yt=0,_t(Kt),Pt(wt),wt=null,St.forEach((e=>Ve(e)))):ee(`invalid state: ${yt}`);return vt}}$e.gb();var kt=[null,ve,Ce,Se,ke,Ee,Oe,ze,Be,Re,Fe,je,De,Le,Ne,We,Ue,Qe,Xe,ot,lt,ut,dt,ct,pt],Et={r:function(e,t,n){return function(e){return Mt((t=>{e().then(t)}))}((async()=>{await u.xb(e,t,n)}))},b:function(e,t,n){throw new Te(e>>>=0).gb(t>>>0,n>>>0),e},O:function(e){Ot(e>>>0,!_,1,!g,131072,!1),$e.lb()},l:function(e){e>>>=0,w?postMessage({cmd:"cleanupThread",thread:e}):ue(e)},I:Me,i:ke,U:Ee,E:Oe,G:ze,V:Be,S:Re,K:Fe,R:je,p:De,F:Le,C:Ne,T:We,D:Ue,q:()=>!0,A:function(e,t){(e>>>=0)==t>>>0?setTimeout((()=>qe())):w?postMessage({targetThread:e,cmd:"checkMailbox"}):(e=$e.Qa[e])&&e.postMessage({cmd:"checkMailbox"})},M:function(){return-1},N:Ge,X:function(e){y&&$e.Qa[e>>>0].ref()},u:function(e,t,n){e=t+2097152>>>0<4194305-!!e?(e>>>0)+4294967296*t:NaN,n>>>=0,e=new Date(1e3*e),i()[n>>2>>>0]=e.getUTCSeconds(),i()[n+4>>2>>>0]=e.getUTCMinutes(),i()[n+8>>2>>>0]=e.getUTCHours(),i()[n+12>>2>>>0]=e.getUTCDate(),i()[n+16>>2>>>0]=e.getUTCMonth(),i()[n+20>>2>>>0]=e.getUTCFullYear()-1900,i()[n+24>>2>>>0]=e.getUTCDay(),e=(e.getTime()-Date.UTC(e.getUTCFullYear(),0,1,0,0,0,0))/864e5|0,i()[n+28>>2>>>0]=e},v:function(e,t,n){e=t+2097152>>>0<4194305-!!e?(e>>>0)+4294967296*t:NaN,n>>>=0,e=new Date(1e3*e),i()[n>>2>>>0]=e.getSeconds(),i()[n+4>>2>>>0]=e.getMinutes(),i()[n+8>>2>>>0]=e.getHours(),i()[n+12>>2>>>0]=e.getDate(),i()[n+16>>2>>>0]=e.getMonth(),i()[n+20>>2>>>0]=e.getFullYear()-1900,i()[n+24>>2>>>0]=e.getDay(),t=(He(e.getFullYear())?Ke:Ye)[e.getMonth()]+e.getDate()-1|0,i()[n+28>>2>>>0]=t,i()[n+36>>2>>>0]=-60*e.getTimezoneOffset(),t=new Date(e.getFullYear(),6,1).getTimezoneOffset();var r=new Date(e.getFullYear(),0,1).getTimezoneOffset();e=0|(t!=r&&e.getTimezoneOffset()==Math.min(r,t)),i()[n+32>>2>>>0]=e},w:function(e){e>>>=0;var t=new Date(i()[e+20>>2>>>0]+1900,i()[e+16>>2>>>0],i()[e+12>>2>>>0],i()[e+8>>2>>>0],i()[e+4>>2>>>0],i()[e>>2>>>0],0),n=i()[e+32>>2>>>0],r=t.getTimezoneOffset(),a=new Date(t.getFullYear(),6,1).getTimezoneOffset(),s=new Date(t.getFullYear(),0,1).getTimezoneOffset(),o=Math.min(s,a);return 0>n?i()[e+32>>2>>>0]=+(a!=s&&o==r):0<n!=(o==r)&&(a=Math.max(s,a),t.setTime(t.getTime()+6e4*((0<n?o:a)-r))),i()[e+24>>2>>>0]=t.getDay(),n=(He(t.getFullYear())?Ke:Ye)[t.getMonth()]+t.getDate()-1|0,i()[e+28>>2>>>0]=n,i()[e>>2>>>0]=t.getSeconds(),i()[e+4>>2>>>0]=t.getMinutes(),i()[e+8>>2>>>0]=t.getHours(),i()[e+12>>2>>>0]=t.getDate(),i()[e+16>>2>>>0]=t.getMonth(),i()[e+20>>2>>>0]=t.getYear(),e=t.getTime()/1e3,Dt((ie=e,1<=+Math.abs(ie)?0<ie?+Math.floor(ie/4294967296)>>>0:~~+Math.ceil((ie-+(~~ie>>>0))/4294967296)>>>0:0)),e>>>0},s:Qe,t:Xe,z:function(e,t,n){function r(e){return(e=e.toTimeString().match(/\(([A-Za-z ]+)\)$/))?e[1]:"GMT"}e>>>=0,t>>>=0,n>>>=0;var s=(new Date).getFullYear(),o=new Date(s,0,1),l=new Date(s,6,1);s=o.getTimezoneOffset();var u=l.getTimezoneOffset(),d=Math.max(s,u);a()[e>>2>>>0]=60*d,i()[t>>2>>>0]=+(s!=u),e=r(o),t=r(l),e=Ze(e),t=Ze(t),u<s?(a()[n>>2>>>0]=e,a()[n+4>>2>>>0]=t):(a()[n>>2>>>0]=t,a()[n+4>>2>>>0]=e)},d:()=>{ee("")},c:function(e,t,n){return e>>>=0,t=et(t>>>0,n>>>0),ae[e].apply(null,t)},k:function(e,t,n){return e>>>=0,t=et(t>>>0,n>>>0),ae[e].apply(null,t)},m:function(){},j:function(){return Date.now()},W:()=>{throw q+=1,"unwind"},B:function(){return 4294901760},f:()=>performance.timeOrigin+performance.now(),g:function(){return y?(Co(),N(ye)).cpus().length:navigator.hardwareConcurrency},L:function(e,t,n,r){for($e.Pb=t>>>0,it.length=n,t=r>>>0>>3,r=0;r<n;r++)it[r]=s()[t+r>>>0];return(0>e?ae[-e-1]:kt[e]).apply(null,it)},y:function(e){e>>>=0;var t=r().length;if(e<=t||4294901760<e)return!1;for(var n=1;4>=n;n*=2){var i=t*(1+.2/n);i=Math.min(i,e+100663296);var a=Math;i=Math.max(e,i);e:{a=a.min.call(a,4294901760,i+(65536-i%65536)%65536)-A.buffer.byteLength+65535>>>16;try{A.grow(a),L();var s=1;break e}catch{}s=void 0}if(s)return!0}return!1},P:ot,Q:lt,H:be,h:ut,o:dt,x:ct,n:pt,a:A||u.wasmMemory,J:gt,e:function(e,t,n,r){return gt(e>>>0,t>>>0,n>>>0,r>>>0)}};(function(){function e(e,t){return e=function(e){var t,n={};for(t in e)!function(t){var r=e[t];n[t]="function"==typeof r?function(){bt.push(t);try{return r.apply(null,arguments)}finally{D||(bt.pop()===t||ee(),wt&&1===yt&&0===bt.length&&(yt=0,q+=1,_t(qt),typeof Fibers<"u"&&Fibers.Ub()))}}:r}(t);return n}(e=e.exports),I=e=function(e){e=Object.assign({},e);var t=e=>()=>e()>>>0,n=e=>t=>e(t)>>>0;return e.__errno_location=t(e.__errno_location),e.pthread_self=t(e.pthread_self),e.malloc=n(e.malloc),e.stackSave=t(e.stackSave),e.stackAlloc=n(e.stackAlloc),e}(e),$e.mb.push(I.Da),V.unshift(I.Y),P=t,J(),e}var t={a:Et};if(Z(),u.instantiateWasm)try{return u.instantiateWasm(t,e)}catch(e){k("Module.instantiateWasm callback failed with error: "+e),l(e)}(function(e,t){var n=K;return S||"function"!=typeof WebAssembly.instantiateStreaming||te(n)||n.startsWith("file://")||y||"function"!=typeof fetch?re(n,e,t):fetch(n,{credentials:"same-origin"}).then((r=>WebAssembly.instantiateStreaming(r,e).then(t,(function(r){return k("wasm streaming compile failed: "+r),k("falling back to ArrayBuffer instantiation"),re(n,e,t)}))))})(t,(function(t){e(t.instance,t.module)})).catch(l)})(),u._OrtInit=(e,t)=>(u._OrtInit=I.Z)(e,t),u._OrtGetLastError=(e,t)=>(u._OrtGetLastError=I._)(e,t),u._OrtCreateSessionOptions=(e,t,n,r,i,a,s,o,l,d)=>(u._OrtCreateSessionOptions=I.$)(e,t,n,r,i,a,s,o,l,d),u._OrtAppendExecutionProvider=(e,t)=>(u._OrtAppendExecutionProvider=I.aa)(e,t),u._OrtAddFreeDimensionOverride=(e,t,n)=>(u._OrtAddFreeDimensionOverride=I.ba)(e,t,n),u._OrtAddSessionConfigEntry=(e,t,n)=>(u._OrtAddSessionConfigEntry=I.ca)(e,t,n),u._OrtReleaseSessionOptions=e=>(u._OrtReleaseSessionOptions=I.da)(e),u._OrtCreateSession=(e,t,n)=>(u._OrtCreateSession=I.ea)(e,t,n),u._OrtReleaseSession=e=>(u._OrtReleaseSession=I.fa)(e),u._OrtGetInputOutputCount=(e,t,n)=>(u._OrtGetInputOutputCount=I.ga)(e,t,n),u._OrtGetInputName=(e,t)=>(u._OrtGetInputName=I.ha)(e,t),u._OrtGetOutputName=(e,t)=>(u._OrtGetOutputName=I.ia)(e,t),u._OrtFree=e=>(u._OrtFree=I.ja)(e),u._OrtCreateTensor=(e,t,n,r,i,a)=>(u._OrtCreateTensor=I.ka)(e,t,n,r,i,a),u._OrtGetTensorData=(e,t,n,r,i)=>(u._OrtGetTensorData=I.la)(e,t,n,r,i),u._OrtReleaseTensor=e=>(u._OrtReleaseTensor=I.ma)(e),u._OrtCreateRunOptions=(e,t,n,r)=>(u._OrtCreateRunOptions=I.na)(e,t,n,r),u._OrtAddRunConfigEntry=(e,t,n)=>(u._OrtAddRunConfigEntry=I.oa)(e,t,n),u._OrtReleaseRunOptions=e=>(u._OrtReleaseRunOptions=I.pa)(e),u._OrtCreateBinding=e=>(u._OrtCreateBinding=I.qa)(e),u._OrtBindInput=(e,t,n)=>(u._OrtBindInput=I.ra)(e,t,n),u._OrtBindOutput=(e,t,n,r)=>(u._OrtBindOutput=I.sa)(e,t,n,r),u._OrtClearBoundOutputs=e=>(u._OrtClearBoundOutputs=I.ta)(e),u._OrtReleaseBinding=e=>(u._OrtReleaseBinding=I.ua)(e),u._OrtRunWithBinding=(e,t,n,r,i)=>(u._OrtRunWithBinding=I.va)(e,t,n,r,i),u._OrtRun=(e,t,n,r,i,a,s,o)=>(u._OrtRun=I.wa)(e,t,n,r,i,a,s,o),u._OrtEndProfiling=e=>(u._OrtEndProfiling=I.xa)(e),u._JsepOutput=(e,t,n)=>(u._JsepOutput=I.ya)(e,t,n),u._JsepGetNodeName=e=>(u._JsepGetNodeName=I.za)(e);var At=u._pthread_self=()=>(At=u._pthread_self=I.Aa)(),It=u._malloc=e=>(It=u._malloc=I.Ba)(e),Pt=u._free=e=>(Pt=u._free=I.Ca)(e);u.__emscripten_tls_init=()=>(u.__emscripten_tls_init=I.Da)();var Ot=u.__emscripten_thread_init=(e,t,n,r,i,a)=>(Ot=u.__emscripten_thread_init=I.Fa)(e,t,n,r,i,a);u.__emscripten_thread_crashed=()=>(u.__emscripten_thread_crashed=I.Ga)();var zt,Bt=(e,t,n,r)=>(Bt=I.Ha)(e,t,n,r),Rt=e=>(Rt=I.Ia)(e),Ft=u.__emscripten_thread_exit=e=>(Ft=u.__emscripten_thread_exit=I.Ja)(e),jt=u.__emscripten_check_mailbox=()=>(jt=u.__emscripten_check_mailbox=I.Ka)(),Dt=e=>(Dt=I.La)(e),Lt=(e,t)=>(Lt=I.Ma)(e,t),Nt=()=>(Nt=I.Na)(),Wt=e=>(Wt=I.Oa)(e),Ut=e=>(Ut=I.Pa)(e),Vt=u.dynCall_ii=(e,t)=>(Vt=u.dynCall_ii=I.Ra)(e,t),Gt=e=>(Gt=I.Sa)(e),qt=()=>(qt=I.Ta)(),Ht=e=>(Ht=I.Ua)(e),Kt=()=>(Kt=I.Va)();function Yt(){function e(){if(!zt&&(zt=!0,u.calledRun=!0,!D)&&(w||xe(V),o(u),u.onRuntimeInitialized&&u.onRuntimeInitialized(),!w)){if(u.postRun)for("function"==typeof u.postRun&&(u.postRun=[u.postRun]);u.postRun.length;){var e=u.postRun.shift();G.unshift(e)}xe(G)}}if(!(0<Y))if(w)o(u),w||xe(V),startWorker(u);else{if(u.preRun)for("function"==typeof u.preRun&&(u.preRun=[u.preRun]);u.preRun.length;)U.unshift(u.preRun.shift());xe(U),0<Y||(u.setStatus?(u.setStatus("Running..."),setTimeout((function(){setTimeout((function(){u.setStatus("")}),1),e()}),1)):e())}}if(u.___start_em_js=917678,u.___stop_em_js=917839,u.keepRuntimeAlive=H,u.wasmMemory=A,u.stackAlloc=Ut,u.stackSave=Nt,u.stackRestore=Wt,u.UTF8ToString=we,u.stringToUTF8=Pe,u.lengthBytesUTF8=Ae,u.ExitStatus=se,u.PThread=$e,X=function e(){zt||Yt(),zt||(X=e)},u.preInit)for("function"==typeof u.preInit&&(u.preInit=[u.preInit]);0<u.preInit.length;)u.preInit.pop()();return Yt(),e.ready});"object"==typeof e&&"object"==typeof t?t.exports=r:"function"==typeof define&&define.amd&&define([],(()=>r))})),So=D(((e,t)=>{t.exports='"use strict";var Module={},ENVIRONMENT_IS_NODE=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string";if(ENVIRONMENT_IS_NODE){var nodeWorkerThreads=require("worker_threads"),parentPort=nodeWorkerThreads.parentPort;parentPort.on("message",e=>onmessage({data:e}));var fs=require("fs");Object.assign(global,{self:global,require,Module,location:{href:__filename},Worker:nodeWorkerThreads.Worker,importScripts:e=>(0,eval)(fs.readFileSync(e,"utf8")+"//# sourceURL="+e),postMessage:e=>parentPort.postMessage(e),performance:global.performance||{now:Date.now}})}var initializedJS=!1;function threadPrintErr(){var e=Array.prototype.slice.call(arguments).join(" ");if(ENVIRONMENT_IS_NODE){fs.writeSync(2,e+`\n`);return}console.error(e)}function threadAlert(){var e=Array.prototype.slice.call(arguments).join(" ");postMessage({cmd:"alert",text:e,threadId:Module._pthread_self()})}var err=threadPrintErr;self.alert=threadAlert,Module.instantiateWasm=(e,t)=>{var a=Module.wasmModule;Module.wasmModule=null;var r=new WebAssembly.Instance(a,e);return t(r)},self.onunhandledrejection=e=>{throw e.reason??e};function handleMessage(e){try{if(e.data.cmd==="load"){let a=[];self.onmessage=r=>a.push(r),self.startWorker=r=>{Module=r,postMessage({cmd:"loaded"});for(let s of a)handleMessage(s);self.onmessage=handleMessage},Module.wasmModule=e.data.wasmModule;for(const r of e.data.handlers)Module[r]=(...s)=>{postMessage({cmd:"callHandler",handler:r,args:s})};if(Module.wasmMemory=e.data.wasmMemory,Module.buffer=Module.wasmMemory.buffer,Module.ENVIRONMENT_IS_PTHREAD=!0,typeof e.data.urlOrBlob=="string")importScripts(e.data.urlOrBlob);else{var t=URL.createObjectURL(e.data.urlOrBlob);importScripts(t),URL.revokeObjectURL(t)}ortWasmThreaded(Module)}else if(e.data.cmd==="run"){Module.__emscripten_thread_init(e.data.pthread_ptr,0,0,1),Module.__emscripten_thread_mailbox_await(e.data.pthread_ptr),Module.establishStackSpace(),Module.PThread.receiveObjectTransfer(e.data),Module.PThread.threadInitTLS(),initializedJS||(initializedJS=!0);try{Module.invokeEntryPoint(e.data.start_routine,e.data.arg)}catch(a){if(a!="unwind")throw a}}else e.data.cmd==="cancel"?Module._pthread_self()&&Module.__emscripten_thread_exit(-1):e.data.target==="setimmediate"||(e.data.cmd==="checkMailbox"?initializedJS&&Module.checkMailbox():e.data.cmd&&(err("worker.js received unknown command "+e.data.cmd),err(e.data)))}catch(a){throw Module.__emscripten_thread_crashed&&Module.__emscripten_thread_crashed(),a}}self.onmessage=handleMessage;\n'})),Mo=j((()=>{ve=me(),be=To(),xe=!1,Ce=!1,Te=!1,Se=e=>{if(1===e)return!1;if(typeof SharedArrayBuffer>"u")return typeof self<"u"&&!self.crossOriginIsolated&&console.warn("env.wasm.numThreads is set to "+e+", but this will not work unless you enable crossOriginIsolated mode. See https://web.dev/cross-origin-isolation-guide/ for more info."),!1;typeof process<"u"&&process.versions&&process.versions.node&&console.warn("env.wasm.numThreads is set to "+e+", however, currently onnxruntime-web does not support multi-threads in Node.js. Please consider using onnxruntime-node for performance critical scenarios.");try{return typeof MessageChannel<"u"&&(new MessageChannel).port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]))}catch{return!1}},Me=()=>{try{return WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,30,1,28,0,65,0,253,15,253,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,253,186,1,26,11]))}catch{return!1}},ke=(e,t)=>e?t?"ort-wasm-simd-threaded.wasm":"ort-wasm-simd.wasm":t?"ort-wasm-threaded.wasm":"ort-wasm.wasm",Ee=async e=>{if(xe)return Promise.resolve();if(Ce)throw new Error("multiple calls to 'initializeWebAssembly()' detected.");if(Te)throw new Error("previous call to 'initializeWebAssembly()' failed.");Ce=!0;let t=e.initTimeout,n=e.numThreads,r=e.simd,i=Se(n),a=r&&Me(),s=e.wasmPaths,o="string"==typeof s?s:void 0,l=ke(a,i),u="object"==typeof s?s[l]:void 0,d=!1,c=[];if(t>0&&c.push(new Promise((e=>{setTimeout((()=>{d=!0,e()}),t)}))),c.push(new Promise(((e,t)=>{let r=i?be:ve,a={locateFile:(e,t)=>{if(i&&e.endsWith(".worker.js")&&typeof Blob<"u")return URL.createObjectURL(new Blob([So()],{type:"text/javascript"}));if(e.endsWith(".wasm")){if(u)return u;let e=o??t;return"ort-wasm-simd.wasm"===l?e+"ort-wasm-simd.jsep.wasm":"ort-wasm-simd-threaded.wasm"===l?e+"ort-wasm-simd-threaded.jsep.wasm":e+l}return t+e}};if(i)if(a.numThreads=n,typeof Blob>"u")a.mainScriptUrlOrBlob=(void 0)(__dirname,"ort-wasm-threaded.js");else{let e=`var ortWasmThreaded=${r.toString()};`;a.mainScriptUrlOrBlob=new Blob([e],{type:"text/javascript"})}r(a).then((t=>{Ce=!1,xe=!0,$e=t,e()}),(e=>{Ce=!1,Te=!0,t(e)}))}))),await Promise.race(c),d)throw new Error(`WebAssembly backend initializing failed due to timeout: ${t}ms`)},Ae=()=>{if(xe&&$e)return $e;throw new Error("WebAssembly is not initialized yet.")}})),ko=j((()=>{Mo(),Ie=(e,t)=>{let n=Ae(),r=n.lengthBytesUTF8(e)+1,i=n._malloc(r);return n.stringToUTF8(e,i,r),t.push(i),i},Pe=(e,t,n,r)=>{if("object"==typeof e&&null!==e){if(n.has(e))throw new Error("Circular reference in options");n.add(e)}Object.entries(e).forEach((([e,i])=>{let a=t?t+e:e;if("object"==typeof i)Pe(i,a+".",n,r);else if("string"==typeof i||"number"==typeof i)r(a,i.toString());else{if("boolean"!=typeof i)throw new Error("Can't handle extra config type: "+typeof i);r(a,i?"1":"0")}}))},Oe=e=>{let t=Ae(),n=t.stackSave();try{let n=t.stackAlloc(8);t._OrtGetLastError(n,n+4);let r=t.HEAP32[n/4],i=t.HEAPU32[n/4+1],a=i?t.UTF8ToString(i):"";throw new Error(`${e} ERROR_CODE: ${r}, ERROR_MESSAGE: ${a}`)}finally{t.stackRestore(n)}}})),Eo=j((()=>{Mo(),ko(),ze=e=>{let t=Ae(),n=0,r=[],i=e||{};try{if(void 0===e?.logSeverityLevel)i.logSeverityLevel=2;else if("number"!=typeof e.logSeverityLevel||!Number.isInteger(e.logSeverityLevel)||e.logSeverityLevel<0||e.logSeverityLevel>4)throw new Error(`log serverity level is not valid: ${e.logSeverityLevel}`);if(void 0===e?.logVerbosityLevel)i.logVerbosityLevel=0;else if("number"!=typeof e.logVerbosityLevel||!Number.isInteger(e.logVerbosityLevel))throw new Error(`log verbosity level is not valid: ${e.logVerbosityLevel}`);void 0===e?.terminate&&(i.terminate=!1);let a=0;return void 0!==e?.tag&&(a=Ie(e.tag,r)),n=t._OrtCreateRunOptions(i.logSeverityLevel,i.logVerbosityLevel,!!i.terminate,a),0===n&&Oe("Can't create run options."),void 0!==e?.extra&&Pe(e.extra,"",new WeakSet,((e,i)=>{let a=Ie(e,r),s=Ie(i,r);0!==t._OrtAddRunConfigEntry(n,a,s)&&Oe(`Can't set a run config entry: ${e} - ${i}.`)})),[n,r]}catch(e){throw 0!==n&&t._OrtReleaseRunOptions(n),r.forEach((e=>t._free(e))),e}}})),Ao=j((()=>{Mo(),ko(),Be=e=>{switch(e){case"disabled":return 0;case"basic":return 1;case"extended":return 2;case"all":return 99;default:throw new Error(`unsupported graph optimization level: ${e}`)}},Re=e=>{switch(e){case"sequential":return 0;case"parallel":return 1;default:throw new Error(`unsupported execution mode: ${e}`)}},Fe=e=>{e.extra||(e.extra={}),e.extra.session||(e.extra.session={});let t=e.extra.session;t.use_ort_model_bytes_directly||(t.use_ort_model_bytes_directly="1"),e.executionProviders&&e.executionProviders.some((e=>"webgpu"===("string"==typeof e?e:e.name)))&&(e.enableMemPattern=!1)},je=(e,t,n)=>{for(let r of t){let t="string"==typeof r?r:r.name;switch(t){case"webnn":if(t="WEBNN","string"!=typeof r){let t=r;if(t?.deviceType){let r=Ie("deviceType",n),i=Ie(t.deviceType,n);0!==Ae()._OrtAddSessionConfigEntry(e,r,i)&&Oe(`Can't set a session config entry: 'deviceType' - ${t.deviceType}.`)}if(t?.numThreads){let r=t.numThreads;("number"!=typeof r||!Number.isInteger(r)||r<0)&&(r=0);let i=Ie("numThreads",n),a=Ie(r.toString(),n);0!==Ae()._OrtAddSessionConfigEntry(e,i,a)&&Oe(`Can't set a session config entry: 'numThreads' - ${t.numThreads}.`)}if(t?.powerPreference){let r=Ie("powerPreference",n),i=Ie(t.powerPreference,n);0!==Ae()._OrtAddSessionConfigEntry(e,r,i)&&Oe(`Can't set a session config entry: 'powerPreference' - ${t.powerPreference}.`)}}break;case"webgpu":if(t="JS","string"!=typeof r){let t=r;if(t?.preferredLayout){if("NCHW"!==t.preferredLayout&&"NHWC"!==t.preferredLayout)throw new Error(`preferredLayout must be either 'NCHW' or 'NHWC': ${t.preferredLayout}`);let r=Ie("preferredLayout",n),i=Ie(t.preferredLayout,n);0!==Ae()._OrtAddSessionConfigEntry(e,r,i)&&Oe(`Can't set a session config entry: 'preferredLayout' - ${t.preferredLayout}.`)}}break;case"wasm":case"cpu":continue;default:throw new Error(`not supported execution provider: ${t}`)}let i=Ie(t,n);0!==Ae()._OrtAppendExecutionProvider(e,i)&&Oe(`Can't append execution provider: ${t}.`)}},De=e=>{let t=Ae(),n=0,r=[],i=e||{};Fe(i);try{let e=Be(i.graphOptimizationLevel??"all"),a=Re(i.executionMode??"sequential"),s="string"==typeof i.logId?Ie(i.logId,r):0,o=i.logSeverityLevel??2;if(!Number.isInteger(o)||o<0||o>4)throw new Error(`log serverity level is not valid: ${o}`);let l=i.logVerbosityLevel??0;if(!Number.isInteger(l)||l<0||l>4)throw new Error(`log verbosity level is not valid: ${l}`);let u="string"==typeof i.optimizedModelFilePath?Ie(i.optimizedModelFilePath,r):0;if(n=t._OrtCreateSessionOptions(e,!!i.enableCpuMemArena,!!i.enableMemPattern,a,!!i.enableProfiling,0,s,o,l,u),0===n&&Oe("Can't create session options."),i.executionProviders&&je(n,i.executionProviders,r),void 0!==i.enableGraphCapture){if("boolean"!=typeof i.enableGraphCapture)throw new Error(`enableGraphCapture must be a boolean value: ${i.enableGraphCapture}`);let e=Ie("enableGraphCapture",r),a=Ie(i.enableGraphCapture.toString(),r);0!==t._OrtAddSessionConfigEntry(n,e,a)&&Oe(`Can't set a session config entry: 'enableGraphCapture' - ${i.enableGraphCapture}.`)}if(i.freeDimensionOverrides)for(let[e,a]of Object.entries(i.freeDimensionOverrides)){if("string"!=typeof e)throw new Error(`free dimension override name must be a string: ${e}`);if("number"!=typeof a||!Number.isInteger(a)||a<0)throw new Error(`free dimension override value must be a non-negative integer: ${a}`);let i=Ie(e,r);0!==t._OrtAddFreeDimensionOverride(n,i,a)&&Oe(`Can't set a free dimension override: ${e} - ${a}.`)}return void 0!==i.extra&&Pe(i.extra,"",new WeakSet,((e,i)=>{let a=Ie(e,r),s=Ie(i,r);0!==t._OrtAddSessionConfigEntry(n,a,s)&&Oe(`Can't set a session config entry: ${e} - ${i}.`)})),[n,r]}catch(e){throw 0!==n&&t._OrtReleaseSessionOptions(n),r.forEach((e=>t._free(e))),e}}})),Io=j((()=>{Le=e=>{switch(e){case"int8":return 3;case"uint8":return 2;case"bool":return 9;case"int16":return 5;case"uint16":return 4;case"int32":return 6;case"uint32":return 12;case"float16":return 10;case"float32":return 1;case"float64":return 11;case"string":return 8;case"int64":return 7;case"uint64":return 13;default:throw new Error(`unsupported data type: ${e}`)}},Ne=e=>{switch(e){case 3:return"int8";case 2:return"uint8";case 9:return"bool";case 5:return"int16";case 4:return"uint16";case 6:return"int32";case 12:return"uint32";case 10:return"float16";case 1:return"float32";case 11:return"float64";case 8:return"string";case 7:return"int64";case 13:return"uint64";default:throw new Error(`unsupported data type: ${e}`)}},We=e=>[void 0,4,1,1,2,2,4,8,void 0,1,2,8,4,8,void 0,void 0,void 0][e],Ue=e=>{switch(e){case"float16":case"uint16":return Uint16Array;case"float32":return Float32Array;case"uint8":case"bool":return Uint8Array;case"int8":return Int8Array;case"int16":return Int16Array;case"int32":return Int32Array;case"float64":return Float64Array;case"uint32":return Uint32Array;case"int64":return BigInt64Array;case"uint64":return BigUint64Array;default:throw new Error(`unsupported type: ${e}`)}},Ve=e=>{switch(e){case"verbose":return 0;case"info":return 1;case"warning":return 2;case"error":return 3;case"fatal":return 4;default:throw new Error(`unsupported logging level: ${e}`)}},Ge=e=>"float32"===e||"int32"===e||"int64"===e||"bool"===e||"float16"===e||"uint32"===e,qe=e=>{switch(e){case"none":return 0;case"cpu":return 1;case"cpu-pinned":return 2;case"texture":return 3;case"gpu-buffer":return 4;default:throw new Error(`unsupported data location: ${e}`)}}})),Po=j((()=>{He=async e=>{if("string"!=typeof e)return e instanceof Blob?new Uint8Array(await e.arrayBuffer()):e instanceof Uint8Array?e:new Uint8Array(e);if(!(typeof process<"u"&&process.versions&&process.versions.node)){let t=await fetch(e);if(!t.ok)throw new Error(`failed to load external data file: ${e}`);let n=t.headers.get("Content-Length"),r=n?parseInt(n,10):0;if(r<1073741824)return new Uint8Array(await t.arrayBuffer());{if(!t.body)throw new Error(`failed to load external data file: ${e}, no response body.`);let n,i=t.body.getReader();try{n=new ArrayBuffer(r)}catch(e){if(!(e instanceof RangeError))throw e;{let e=Math.ceil(r/65536);n=new WebAssembly.Memory({initial:e,maximum:e}).buffer}}let a=0;for(;;){let{done:e,value:t}=await i.read();if(e)break;let r=t.byteLength;new Uint8Array(n,a,r).set(t),a+=r}return new Uint8Array(n,0,r)}}try{return new Uint8Array(await(void 0)(e))}catch(t){if("ERR_FS_FILE_TOO_LARGE"===t.code){let t=(void 0)(e),n=[];for await(let e of t)n.push(e);return new Uint8Array(Buffer.concat(n))}throw t}}})),Oo=j((()=>{Io(),Ke=["V","I","W","E","F"],Ye=(e,t)=>{console.log(`[${Ke[e]},${(new Date).toISOString()}]${t}`)},Ze=(e,t)=>{Qe=e,Xe=t},Je=(e,t)=>{let n=Ve(e);n>=Ve(Qe)&&Ye(n,"function"==typeof t?t():t)},et=(...e)=>{Xe&&Je(...e)}})),zo=j((()=>{Io(),tt=(e,t)=>new(Ue(t))(e)})),Bo=j((()=>{})),Ro=j((()=>{Oo(),Bo(),nt=e=>16*Math.ceil(e/16),rt=1,it=()=>rt++,at=async(e,t,n,r)=>{let i=nt(n),a=e.device.createBuffer({size:i,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ});try{let s=e.getCommandEncoder();e.endComputePass(),s.copyBufferToBuffer(t,0,a,0,i),e.flush(),await a.mapAsync(GPUMapMode.READ);let o=a.getMappedRange();if(r){let e=r();return e.set(new Uint8Array(o,0,n)),e}return new Uint8Array(o.slice(0,n))}finally{a.destroy()}},st=class{constructor(e){this.backend=e,this.storageCache=new Map,this.freeBuffers=new Map,this.freeUniformBuffers=new Map,this.buffersForUploadingPending=[],this.buffersPending=[],this.externalBuffers=new Map,this.capturedPendingBuffers=new Map}upload(e,t){let n=t.buffer,r=t.byteOffset,i=t.byteLength,a=nt(i),s=this.storageCache.get(e);if(!s)return;if(s.originalSize!==i)throw new Error(`inconsistent data size. gpu data size=${s.originalSize}, data size=${i}`);let o=this.backend.device.createBuffer({mappedAtCreation:!0,size:a,usage:GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC}),l=o.getMappedRange();new Uint8Array(l).set(new Uint8Array(n,r,i)),o.unmap();let u=this.backend.getCommandEncoder();this.backend.endComputePass(),u.copyBufferToBuffer(o,0,s.gpuData.buffer,0,a),et("verbose",(()=>`[WebGPU] GpuDataManager.upload(id=${e})`)),this.buffersForUploadingPending.push(o)}memcpy(e,t){let n=this.storageCache.get(e);if(!n)throw new Error("source gpu data for memcpy does not exist");let r=this.storageCache.get(t);if(!r)throw new Error("destination gpu data for memcpy does not exist");if(n.originalSize!==r.originalSize)throw new Error("inconsistent source and destination gpu data size");let i=nt(n.originalSize),a=this.backend.getCommandEncoder();this.backend.endComputePass(),a.copyBufferToBuffer(n.gpuData.buffer,0,r.gpuData.buffer,0,i)}registerExternalBuffer(e,t,n){let r;if(n){if(r=this.externalBuffers.get(n),void 0===r)throw new Error("previous buffer is not registered");if(e===n)return et("verbose",(()=>`[WebGPU] GpuDataManager.registerExternalBuffer(size=${t}) => id=${r}, buffer is the same, skip.`)),r;if(this.backend.capturedCommandList.has(this.backend.currentSessionId))throw new Error("Registering a different external buffer under graph capture mode is not supported yet.\n             Please use the previous external buffer!");this.externalBuffers.delete(n)}else r=it();return this.storageCache.set(r,{gpuData:{id:r,type:0,buffer:e},originalSize:t}),this.externalBuffers.set(e,r),et("verbose",(()=>`[WebGPU] GpuDataManager.registerExternalBuffer(size=${t}) => id=${r}, registered.`)),r}unregisterExternalBuffer(e){let t=this.externalBuffers.get(e);void 0!==t&&(this.storageCache.delete(t),this.externalBuffers.delete(e),et("verbose",(()=>`[WebGPU] GpuDataManager.unregisterExternalBuffer() => id=${t}`)))}create(e,t=GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST){let n,r=nt(e),i=(t&GPUBufferUsage.STORAGE)===GPUBufferUsage.STORAGE,a=(t&GPUBufferUsage.UNIFORM)===GPUBufferUsage.UNIFORM;if(i||a){let e=i?this.freeBuffers:this.freeUniformBuffers,a=e.get(r);a||(a=[],e.set(r,a)),n=a.length>0?a.pop():this.backend.device.createBuffer({size:r,usage:t})}else n=this.backend.device.createBuffer({size:r,usage:t});let s={id:it(),type:0,buffer:n};return this.storageCache.set(s.id,{gpuData:s,originalSize:e}),et("verbose",(()=>`[WebGPU] GpuDataManager.create(size=${e}) => id=${s.id}`)),s}get(e){return this.storageCache.get(e)?.gpuData}release(e){let t=this.storageCache.get(e);if(!t)throw new Error("releasing data does not exist");return et("verbose",(()=>`[WebGPU] GpuDataManager.release(id=${e}), gpuDataId=${t.gpuData.id}`)),this.storageCache.delete(e),this.buffersPending.push(t.gpuData.buffer),t.originalSize}async download(e,t){let n=this.storageCache.get(e);n&&await at(this.backend,n.gpuData.buffer,n.originalSize,t)}refreshPendingBuffers(){for(let e of this.buffersForUploadingPending)e.destroy();if(this.buffersForUploadingPending=[],0!==this.buffersPending.length)if("default"===this.backend.sessionStatus){for(let e of this.buffersPending)(e.usage&GPUBufferUsage.STORAGE)===GPUBufferUsage.STORAGE?this.freeBuffers.get(e.size).push(e):(e.usage&GPUBufferUsage.UNIFORM)===GPUBufferUsage.UNIFORM?this.freeUniformBuffers.get(e.size).push(e):e.destroy();this.buffersPending=[]}else{let e=this.capturedPendingBuffers.get(this.backend.currentSessionId);e||(e=[],this.capturedPendingBuffers.set(this.backend.currentSessionId,e));for(let t of this.buffersPending)e.push(t);this.buffersPending=[]}}dispose(){this.freeBuffers.forEach((e=>{e.forEach((e=>{e.destroy()}))})),this.freeUniformBuffers.forEach((e=>{e.forEach((e=>{e.destroy()}))})),this.storageCache.forEach((e=>{e.gpuData.buffer.destroy()})),this.capturedPendingBuffers.forEach((e=>{e.forEach((e=>{e.destroy()}))})),this.storageCache=new Map,this.freeBuffers=new Map,this.freeUniformBuffers=new Map,this.capturedPendingBuffers=new Map}onReleaseSession(e){let t=this.capturedPendingBuffers.get(e);t&&(t.forEach((e=>{e.destroy()})),this.capturedPendingBuffers.delete(e))}},ot=(...e)=>new st(...e)})),Fo=j((()=>{lt=class{constructor(e){Object.assign(this,e)}get cacheKey(){return this.key||(this.key=Object.getOwnPropertyNames(this).sort().map((e=>`${this[e]}`)).join(";")),this.key}},ut=e=>new lt(e)})),jo=j((()=>{dt=class{static calcMatMulShape(e,t){return e[1]!==t[0]?void 0:[e[0],t[1]]}},ct=class{static calcShape(e,t,n=!1){let r=e.length,i=t.length;if(0===r)return t;if(0===i)return e;let a=Math.max(e.length,t.length),s=new Array(a);if(n){if(r<2||i<2)return;let n=dt.calcMatMulShape([e[r-2],e[r-1]],[t[i-2],t[i-1]]);if(void 0===n)return;[s[a-2],s[a-1]]=n}for(let o=n?3:1;o<=a;o++){let n=r-o<0?1:e[r-o],l=i-o<0?1:t[i-o];if(n!==l&&n>1&&l>1)return;s[a-o]=Math.max(n,l)}return s}static isValidBroadcast(e,t){let n=e.length,r=t.length;if(n>r)return!1;for(let i=1;i<=n;i++)if(1!==e[n-i]&&e[n-i]!==t[r-i])return!1;return!0}},ht=class e{static size(t){return e.getSizeFromDimensionRange(t,0,t.length)}static convertShape(e,t=4){let n=e.length;if(0===n)return[];let r=new Array(n),i=n-1;for(;i>=0;){if(e[i]%t==0){r[i]=e[i]/t;break}if(t%e[i]!=0)throw new Error("cannot convert shape");r[i]=1,t/=e[i],i--}if(i>0)for(let t=i-1;t>=0;t--)r[t]=e[t];return r}static sizeFromDimension(t,n){if(n<0||n>t.length)throw new Error(`invalid dimension of ${n} for sizeFromDimension as Tensor has ${t.length} dimensions.`);return e.getSizeFromDimensionRange(t,n,t.length)}static sizeToDimension(t,n){if(n<0||n>t.length)throw new Error(`invalid dimension of ${n} for sizeToDimension as Tensor has ${t.length} dimensions.`);return e.getSizeFromDimensionRange(t,0,n)}static getSizeFromDimensionRange(e,t,n){let r=1;for(let i=t;i<n;i++){if(e[i]<0)throw new Error("cannot get valid size from specified dimension range. Most likely the range contains negative values in them.");r*=e[i]}return r}static computeStrides(e){let t=e.length;if(0===t)return[];if(1===t)return[1];let n=new Array(t);n[t-1]=1,n[t-2]=e[t-1];for(let r=t-3;r>=0;--r)n[r]=n[r+1]*e[r+1];return n}static normalizeAxis(e,t){if(e<-t&&e>=t)throw new Error("unsupported axis for this operation.");return e<0?e+t:e}static normalizeAxes(e,t){return e.map((n=>this.normalizeAxis(n,t??e.length)))}static sortBasedOnPerm(e,t){return t?t.map((t=>e[t])):e.slice().reverse()}static padShape(e,t){let n=e.length;return e.map(((e,r)=>e+t[r]+t[r+n]))}static areEqual(e,t){return e.length===t.length&&e.every(((e,n)=>e===t[n]))}},pt=class e{static adjustPoolAttributes(e,t,n,r,i,a){if(!e&&n.length!==t.length-2)throw new Error("length of specified kernel shapes should be 2 less than length of input dimensions");if(e)for(let e=0;e<t.length-2;e++)e>=n.length?n.push(t[e+2]):n[e]=t[e+2];for(let e=0;e<n.length;e++)if(e<r.length){if(r[e]<0)throw new Error("strides should be greater than or equal to 1")}else r.push(1);for(let e=0;e<n.length;e++)if(e<i.length){if(i[e]<0)throw new Error("dilations should be greater than or equal to 1")}else i.push(1);for(let e=0;e<2*n.length;e++)if(e<a.length){if(a[e]<0)throw new Error("pad should be greater than or equal to 1")}else a.push(0);for(let e=0;e<n.length;e++){if(n[e]<=0)throw new Error("kernel shapes need to be greater than 0");if(a[e]>=n[e]||a[e+n.length]>=n[e])throw new Error("pads should be smaller than kernel")}}static adjustPadsBasedOnAutoPad(t,n,r,i,a,s,o){if(o){if(a.length!==2*(t.length-2))throw new Error("length of pads should be twice the length of data dimensions");if(n.length!==t.length-2)throw new Error("length of strides should be the length of data dimensions");if(i.length!==t.length-2)throw new Error("length of kernel shapes should be the length of data dimensions");for(let l=0;l<t.length-2;l++)e.adjustPadAndReturnShape(t[l+(s?1:2)],n[l],r[l],i[l],a,l,l+t.length-2,o)}}static computePoolOutputShape(t,n,r,i,a,s,o){if(n.length<=0)throw new Error("input shape must be of size greater than 0");let l=[n[0],n[1]];return e.computeShapeHelper(t,n,l,r,i,a,s,o),l}static computeConvOutputShape(t,n,r,i,a,s,o){if(t.length<=0||n.length<=0)throw new Error("invalid input tensor dims or invalid filter tensor dims");let l=[t[0],n[0]];return e.computeShapeHelper(!1,t,l,r,i,a,s,o),l}static computeShapeHelper(t,n,r,i,a,s,o,l){if(t)for(let e=0;e<n.length-2;e++)r.push(1);else for(let t=0;t<n.length-2;t++)r.push(e.adjustPadAndReturnShape(n[t+2],i[t],a[t],s[t],o,t,t+n.length-2,l))}static adjustPadAndReturnShape(e,t,n,r,i,a,s,o){let l=n*(r-1)+1;if(!o||"NOTSET"===o)return Math.floor((e+i[a]+i[s]-l)/t+1);switch(o){case"VALID":return i[a]=0,i[s]=0,Math.floor((e-l)/t+1);case"SAME_LOWER":case"SAME_UPPER":if(1!==n)throw new Error("Dilation not supported for SAME_UPPER or SAME_LOWER");{let n=((e+t-1)/t-1)*t+r-e;return i[a]=Math.floor("SAME_LOWER"===o?(n+1)/2:n/2),i[s]=n-i[a],Math.floor((e+n-r)/t+1)}default:throw new Error("Unsupported AutoPad type")}}},ft=class{static getShapeOfGemmResult(e,t,n,r,i){if(2!==e.length||2!==n.length)throw new Error("shape need to be of size 2");let a,s,o;t?(a=e[1],s=e[0]):(a=e[0],s=e[1]);let l=-1;if(r?(o=n[0],l=1):(o=n[1],l=0),n[l]!==s)throw new Error("dimension mismatch");if(a<=0||o<=0||s<=0)throw new Error("invalid shape specified");if(i&&!ct.isValidBroadcast(i,[a,o]))throw new Error("gemm: invalid bias shape for broadcast");return[a,o,s]}},mt=-34028234663852886e22,gt=34028234663852886e22})),Do=j((()=>{Io(),jo(),_t=64,yt=(e,t)=>{if(3===t)throw new Error("vec3 has same alignment as vec4, use vec4 instead");switch(e){case 10:return t>1?`vec${t}<f16>`:"f16";case 1:return t>1?`vec${t}<f32>`:"f32";case 6:return t>1?`vec${t}<i32>`:"i32";case 12:return t>1?`vec${t}<u32>`:"u32";case 7:if(t>1)throw new Error("currently not supported vecX of uint64 yet");return["vec2<u32>","i32"];case 13:if(t>1)throw new Error("currently not supported vecX of uint64 yet");return["vec2<u32>","u32"];case 9:if(4!==t)throw new Error("bool must be vec4");return["u32","vec4<bool>"];default:throw new Error(`Unknown data type: ${e}`)}},wt=(e,t=1)=>{let n=yt(e,t);return"string"==typeof n?n:n[0]},vt=(e,t=1)=>{let n=yt(e,t);return"string"==typeof n?n:n[1]},bt=(...e)=>{let t=[];return e.forEach((e=>{0!==e.length&&t.push({type:12,data:e},{type:12,data:ht.computeStrides(e)})})),t},$t=e=>e%4==0?4:e%2==0?2:1,xt=(e="f32",t,n="0")=>t&&1!==t?`vec${t}<${e}>(${n})`:`${e}(${n})`,Ct=(e,t,n)=>"f32"===e?n:1===t?`f32(${n})`:`vec${t}f(${n})`,Tt=(e,t)=>4===t?`(${e}.x + ${e}.y + ${e}.z + ${e}.w)`:2===t?`(${e}.x + ${e}.y)`:3===t?`(${e}.x + ${e}.y + ${e}.z)`:e,St=(e,t,n,r)=>e.startsWith("uniforms.")&&n>4?"string"==typeof t?"f16"===r?`${e}[(${t}) / 8][(${t}) % 8 / 4][(${t}) % 8 % 4]`:`${e}[(${t}) / 4][(${t}) % 4]`:"f16"===r?`${e}[${Math.floor(t/8)}][${Math.floor(t%8/4)}][${t%8%4}]`:`${e}[${Math.floor(t/4)}][${t%4}]`:n>1?`${e}[${t}]`:e,Mt=(e,t,n,r,i)=>{let a="number"==typeof n,s=a?n:n.length,o=[...new Array(s).keys()],l=s<2?"u32":s<=4?`vec${s}<u32>`:`array<u32, ${s}>`,u=yt(t,i),d="string"==typeof u?u:u[1],c="string"==typeof u?u:u[0],h={indices:l,value:d,storage:c,tensor:t},p=e=>"string"==typeof e?e:`${e}u`,f={offsetToIndices:!1,indicesToOffset:!1,broadcastedIndicesToOffset:!1,set:!1,setByIndices:!1,get:!1,getByIndices:!1},m=a?"uniforms.":"",g=`${m}${e}_shape`,_=`${m}${e}_strides`,y="";for(let e=0;e<s-1;e++)y+=`\n    let dim${e} = current / ${St(_,e,s)};\n    let rest${e} = current % ${St(_,e,s)};\n    indices[${e}] = dim${e};\n    current = rest${e};\n    `;y+=`indices[${s-1}] = current;`;let w=s<2?"":`\n  fn o2i_${e}(offset: u32) -> ${h.indices} {\n    var indices: ${h.indices};\n    var current = offset;\n    ${y}\n    return indices;\n  }`,v=[];if(s>=2)for(let e=s-1;e>=0;e--)v.push(`${St(_,e,s)} * (indices[${e}])`);let b=s<2?"":`\n  fn i2o_${e}(indices: ${h.indices}) -> u32 {\n    return ${v.join("+")};\n  }`,$=(...e)=>0===s?"0u":`${h.indices}(${e.map(p).join(",")})`,x=(e,t)=>s<2?`${e}`:`${St(e,t,s)}`,C={},T=(t,n)=>(()=>{if(h.storage===h.value)return`${e}[${t}]=${n};`;if("vec2<u32>"===h.storage&&"i32"===h.value)return`${e}[${t}]=vec2<u32>(u32(${n}), select(0u, 0xFFFFFFFFu, ${n} < 0));`;if("vec2<u32>"===h.storage&&"u32"===h.value)return`${e}[${t}]=vec2<u32>(u32(${n}), 0u);`;if("u32"===h.storage&&"vec4<bool>"===h.value)return`${e}[${t}]=dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(${n}));`;throw new Error(`not supported combination of storage type ${h.storage} and value type ${h.value} yet`)})(),S=t=>(()=>{if(h.storage===h.value)return`${e}[${t}]`;if("vec2<u32>"===h.storage&&"i32"===h.value)return`i32(${e}[${t}].x)`;if("vec2<u32>"===h.storage&&"u32"===h.value)return`u32(${e}[${t}].x)`;if("u32"===h.storage&&"vec4<bool>"===h.value)return`vec4<bool>(bool(${e}[${t}] & 0xFFu), bool(${e}[${t}] & 0xFF00u), bool(${e}[${t}] & 0xFF0000u), bool(${e}[${t}] & 0xFF000000u))`;throw new Error(`not supported combination of storage type ${h.storage} and value type ${h.value} yet`)})(),M=s<2?"":`\n  fn get_${e}ByIndices(indices: ${h.indices}) -> ${d} {\n    return ${S(`i2o_${e}(indices)`)};\n  }`,k=s<2?"":(()=>{let t=o.map((e=>`d${e}: u32`)).join(", "),n=o.map((e=>`d${e}`)).join(", ");return`\n  fn get_${e}(${t}) -> ${d} {\n    return get_${e}ByIndices(${$(n)});\n  }`})(),E=s<2?"":`\n  fn set_${e}ByIndices(indices: ${h.indices}, value: ${d}) {\n    ${T(`i2o_${e}(indices)`,"value")}\n  }`,A=s<2?"":(()=>{let t=o.map((e=>`d${e}: u32`)).join(", "),n=o.map((e=>`d${e}`)).join(", ");return`\n  fn set_${e}(${t}, value: ${d}) {\n    set_${e}ByIndices(${$(n)}, value);\n  }`})();return{impl:()=>{let e=[],t=!1;return f.offsetToIndices&&(e.push(w),t=!0),f.indicesToOffset&&(e.push(b),t=!0),f.broadcastedIndicesToOffset&&(Object.values(C).forEach((t=>e.push(t))),t=!0),f.set&&(e.push(A),t=!0),f.setByIndices&&(e.push(E),t=!0),f.get&&(e.push(k),t=!0),f.getByIndices&&(e.push(M),t=!0),!a&&t&&e.unshift(`const ${g} = ${h.indices}(${n.join(",")});`,`const ${_} = ${h.indices}(${ht.computeStrides(n).join(",")});`),e.join("\n")},type:h,offsetToIndices:t=>(f.offsetToIndices=!0,s<2?t:`o2i_${e}(${t})`),indicesToOffset:t=>(f.indicesToOffset=!0,s<2?t:`i2o_${e}(${t})`),broadcastedIndicesToOffset:(t,n)=>{f.broadcastedIndicesToOffset=!0;let r=`${n.name}broadcastedIndicesTo${e}Offset`;if(r in C)return`${r}(${t})`;let i=[];for(let e=s-1;e>=0;e--){let t=n.indicesGet("outputIndices",e+n.rank-s);i.push(`${x(_,e)} * (${t} % ${x(g,e)})`)}return C[r]=`fn ${r}(outputIndices: ${n.type.indices}) -> u32 {\n             return ${i.length>0?i.join("+"):"0u"};\n           }`,`${r}(${t})`},indices:$,indicesGet:x,indicesSet:(e,t,n)=>s<2?`${e}=${n};`:`${St(e,t,s)}=${n};`,set:(...t)=>{if(t.length!==s+1)throw new Error(`indices length must be ${s}`);let n=t[s];if("string"!=typeof n)throw new Error("value must be string");let r=t.slice(0,s).map(p).join(",");return 0===s?T("0u",n):1===s?T(r[0],n):(f.set=!0,f.setByIndices=!0,f.indicesToOffset=!0,`set_${e}(${r}, ${n})`)},setByOffset:T,setByIndices:(t,n)=>s<2?T(t,n):(f.setByIndices=!0,f.indicesToOffset=!0,`set_${e}ByIndices(${t}, ${n});`),get:(...t)=>{if(t.length!==s)throw new Error(`indices length must be ${s}`);let n=t.map(p).join(",");return 0===s?S("0u"):1===s?S(n[0]):(f.get=!0,f.getByIndices=!0,f.indicesToOffset=!0,`get_${e}(${n})`)},getByOffset:S,getByIndices:t=>s<2?S(t):(f.getByIndices=!0,f.indicesToOffset=!0,`get_${e}ByIndices(${t})`),usage:r,name:e,strides:_,shape:g,rank:s}},kt=(e,t,n,r=1)=>Mt(e,t,n,"input",r),Et=(e,t,n,r=1)=>Mt(e,t,n,"output",r),At=(e,t,n,r=1)=>Mt(e,t,n,"internal",r),It=class{constructor(e){this.normalizedDispatchGroup=e,this.internalVariables=[],this.variables=[],this.uniforms=[],this.variableIndex=0}guardAgainstOutOfBoundsWorkgroupSizes(e){return`if (global_idx >= ${"number"==typeof e?`${e}u`:e}) { return; }`}mainStart(e=_t){let t="number"==typeof e?e:e[0],n="number"==typeof e?1:e[1],r="number"==typeof e?1:e[2],i=1===this.normalizedDispatchGroup[1]&&1===this.normalizedDispatchGroup[2];return`@compute @workgroup_size(${t}, ${n}, ${r})\n  fn main(${i?"@builtin(global_invocation_id) global_id : vec3<u32>,\n    @builtin(workgroup_id) workgroup_id : vec3<u32>,\n    @builtin(local_invocation_id) local_id : vec3<u32>":"@builtin(local_invocation_id) local_id : vec3<u32>,\n    @builtin(local_invocation_index) local_idx : u32,\n    @builtin(workgroup_id) workgroup_id : vec3<u32>,\n    @builtin(num_workgroups) num_workgroups : vec3<u32>"}) {\n    ${i?"let global_idx = global_id.x; let local_idx = local_id.x;":`let global_idx = (workgroup_id.z * num_workgroups[0] * num_workgroups[1] +\n          workgroup_id.y * num_workgroups[0] + workgroup_id.x) * ${t*n*r}u + local_idx;`}\n  `}appendVariableUniforms(e){0!==e.rank&&(e.shape.startsWith("uniforms.")&&this.uniforms.push({name:e.shape.replace("uniforms.",""),type:"u32",length:e.rank}),e.strides.startsWith("uniforms.")&&this.uniforms.push({name:e.strides.replace("uniforms.",""),type:"u32",length:e.rank}))}declareVariable(e,t){if("internal"===e.usage)throw new Error("cannot use internal variable with declareVariable(). use registerInternalVariables() instead.");this.variables.push(e),this.appendVariableUniforms(e);let n="input"===e.usage?"read":"read_write",r=e.type.storage;return`@group(0) @binding(${t}) var<storage, ${n}> ${e.name}: array<${r}>;`}declareVariables(...e){return e.map((e=>this.declareVariable(e,this.variableIndex++))).join("\n")}registerInternalVariable(e){if("internal"!==e.usage)throw new Error("cannot use input or output variable with registerInternalVariable(). use declareVariables() instead.");this.internalVariables.push(e),this.appendVariableUniforms(e)}registerInternalVariables(...e){return e.forEach((e=>this.registerInternalVariable(e))),this}registerUniform(e,t,n=1){return this.uniforms.push({name:e,type:t,length:n}),this}registerUniforms(e){return this.uniforms=this.uniforms.concat(e),this}uniformDeclaration(){if(0===this.uniforms.length)return"";let e=[];for(let{name:t,type:n,length:r}of this.uniforms)if(r&&r>4)"f16"===n?e.push(`@align(16) ${t}:array<mat2x4<${n}>, ${Math.ceil(r/8)}>`):e.push(`${t}:array<vec4<${n}>, ${Math.ceil(r/4)}>`);else{let i=null==r||1===r?n:`vec${r}<${n}>`;e.push(`${t}:${i}`)}return`\n      struct Uniforms { ${e.join(", ")} };\n      @group(0) @binding(${this.variableIndex}) var<uniform> uniforms: Uniforms;`}get additionalImplementations(){return this.uniformDeclaration()+this.variables.map((e=>e.impl())).join("\n")+this.internalVariables.map((e=>e.impl())).join("\n")}},Pt=e=>new It(e),Ot=(e,t)=>{let n=e.length,r=[];for(let i=0;i<n;i++){let a=n-1-i,s=e[a]||1;(t[t.length-1-i]||1)>1&&1===s&&r.unshift(a)}return r}})),Lo=j((()=>{Io(),jo(),Fo(),Do(),zt=e=>{if(!e||1!==e.length)throw new Error("Transpose requires 1 input.")},Bt=(e,t)=>t&&t.length!==e?[...new Array(e).keys()].reverse():t,Rt=(e,t)=>ht.sortBasedOnPerm(e,Bt(e.length,t)),Ft=(e,t,n,r)=>{let i=[];i.push(`fn perm(i: ${r.type.indices}) -> ${n.type.indices} {\n    var a: ${n.type.indices};`);for(let r=0;r<t;++r)i.push(n.indicesSet("a",e[r],`i[${r}]`));return i.push("return a;}"),i.join("\n")},jt=(e,t)=>{let n=e.dataType,r=e.dims.length,i=Bt(r,t),a=Rt(e.dims,i),s=Et("output",n,a.length),o=kt("a",n,r);return{name:"Transpose",shaderCache:{hint:`${t}`,inputDependencies:["rank"]},getRunData:e=>{let t=ht.size(a);return{outputs:[{dims:a,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(t/64)},programUniforms:[{type:12,data:t},...bt(e[0].dims,a)]}},getShaderSource:e=>`\n  ${e.registerUniform("output_size","u32").declareVariables(o,s)}\n\n  ${Ft(i,r,o,s)}\n\n  ${e.mainStart()}\n    ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n\n    let indices = ${s.offsetToIndices("global_idx")};\n    let aIndices = perm(indices);\n\n    ${s.setByOffset("global_idx",o.getByIndices("aIndices"))}\n  }`}},Dt=(e,t)=>{zt(e.inputs),e.compute(jt(e.inputs[0],t.perm))},Lt=e=>ut({perm:e.perm})})),No=j((()=>{Io(),jo(),Do(),Wo(),Lo(),Nt={max:"select(bestValue, candidate, candidate > bestValue)",min:"select(bestValue, candidate, candidate < bestValue)",mean:"bestValue + candidate",sum:"bestValue + candidate",prod:"bestValue * candidate",sumSquare:"bestValue + candidate * candidate",logSumExp:"bestValue + exp(candidate)",l1:"bestValue + abs(candidate)",l2:"bestValue + candidate * candidate",logSum:"bestValue + candidate"},Wt={max:"select(bestValue, candidate, candidate > bestValue)",min:"select(bestValue, candidate, candidate < bestValue)",mean:"bestValue + candidate",sum:"bestValue + candidate",prod:"bestValue * candidate",sumSquare:"bestValue + candidate",logSumExp:"bestValue + candidate",l1:"bestValue + candidate",l2:"bestValue + candidate",logSum:"bestValue + candidate"},Ut={max:"_A[offset]",min:"_A[offset]",mean:"0",sum:"0",prod:"1",sumSquare:"0",logSumExp:"0",l1:"0",l2:"0",logSum:"0"},Vt={max:"bestValue",min:"bestValue",sum:"bestValue",prod:"bestValue",sumSquare:"bestValue",logSumExp:"log(bestValue)",l1:"bestValue",l2:"sqrt(bestValue)",logSum:"log(bestValue)"},Gt=(e,t)=>{let n=[];for(let r=t-e;r<t;++r)n.push(r);return n},qt=(e,t)=>{let n=[],r=e.length;for(let i=0;i<r;i++)-1===t.indexOf(i)&&n.push(e[i]);return[n,t.map((t=>e[t]))]},Ht=(e,t)=>{let n=e.length+t.length,r=[],i=0;for(let a=0;a<n;a++)-1===t.indexOf(a)?r.push(e[i++]):r.push(1);return r},Kt=(e,t)=>{for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0},Yt=(e,t)=>{let n=[];if(!Kt(e,t)){for(let r=0;r<t;++r)-1===e.indexOf(r)&&n.push(r);e.forEach((e=>n.push(e)))}return n},Qt=(e,t,n,r,i,a,s)=>{let o=n[0].dims,l=ht.size(a),u=ht.size(s),d=kt("_A",n[0].dataType,o),c=Et("output",i,a),h=`\n          var<workgroup> aBestValues : array<${c.type.storage}, 32>;\n       `;return{name:e,shaderCache:t,getShaderSource:e=>`\n        ${e.registerUniform("reduceSize","u32").declareVariables(d,c)}\n        ${h}\n        fn DIV_CEIL(a : u32, b : u32) -> u32 {\n          return ((a - 1u) / b + 1u);\n         }\n         ${e.mainStart(32)}\n\n          let outputIndex = global_idx / 32;\n          let offset = outputIndex * uniforms.reduceSize;\n\n          var bestValue = ${c.type.storage}(${Ut[r]});\n          let Length = uniforms.reduceSize;\n          for (var k = local_idx; k < Length; k = k + 32) {\n           let candidate = ${c.type.storage}(${d.getByOffset("offset + k")});\n           bestValue = ${Nt[r]};\n          }\n          aBestValues[local_idx] = bestValue;\n          workgroupBarrier();\n\n         var reduceSize = min(Length, 32u);\n         for (var currentSize = reduceSize / 2u; reduceSize > 1u;\n             currentSize = reduceSize / 2u) {\n           let interval = DIV_CEIL(reduceSize, 2u);\n           if (local_idx < currentSize) {\n            let candidate = aBestValues[local_idx + interval];\n            bestValue = ${Wt[r]};\n            aBestValues[local_idx] = bestValue;\n           }\n           reduceSize = interval;\n           workgroupBarrier();\n         }\n\n         if (local_idx == 0u) {\n          ${c.setByOffset("outputIndex",""+("mean"===r?`bestValue / ${c.type.storage}(uniforms.reduceSize)`:`${Vt[r]}`))};\n         }\n        }`,getRunData:()=>({outputs:[{dims:a,dataType:i}],dispatchGroup:{x:l},programUniforms:[{type:12,data:u}]})}},Xt=(e,t,n,r)=>{let i=1===e.inputs.length?n:hn(e.inputs,n),a=i.axes;0===a.length&&!i.noopWithEmptyAxes&&(a=e.inputs[0].dims.map(((e,t)=>t)));let s=ht.normalizeAxes(a,e.inputs[0].dims.length),o=s,l=e.inputs[0],u=Yt(o,e.inputs[0].dims.length);u.length>0&&(l=e.compute(jt(e.inputs[0],u),{inputs:[0],outputs:[-1]})[0],o=Gt(o.length,l.dims.length));let[d,c]=qt(l.dims,o),h=d;i.keepDims&&(h=Ht(d,s)),e.compute(Qt(t,{hint:i.cacheKey,inputDependencies:["type"]},[l],r,e.inputs[0].dataType,h,c),{inputs:[l]})},Zt=(e,t)=>{Xt(e,"ReduceMeanShared",t,"mean")},Jt=(e,t)=>{Xt(e,"ReduceL1Shared",t,"l1")},en=(e,t)=>{Xt(e,"ReduceL2Shared",t,"l2")},tn=(e,t)=>{Xt(e,"ReduceLogSumExpShared",t,"logSumExp")},nn=(e,t)=>{Xt(e,"ReduceMaxShared",t,"max")},rn=(e,t)=>{Xt(e,"ReduceMinShared",t,"min")},an=(e,t)=>{Xt(e,"ReduceProdShared",t,"prod")},sn=(e,t)=>{Xt(e,"ReduceSumShared",t,"sum")},on=(e,t)=>{Xt(e,"ReduceSumSquareShared",t,"sumSquare")},ln=(e,t)=>{Xt(e,"ReduceLogSumShared",t,"logSum")}})),Wo=j((()=>{Io(),jo(),Fo(),Do(),No(),un=e=>{if(!e||0===e.length||e.length>2)throw new Error("Reduce op requires 1 or 2 inputs.");if(2===e.length&&1!==e[1].dims.length)throw new Error("Invalid axes input dims.")},dn=e=>["","",`var value = ${e.getByIndices("input_indices")};`,""],cn=(e,t,n,r,i,a,s=!1,o=!1)=>{let l=[],u=n[0].dims,d=u.length,c=ht.normalizeAxes(i,d),h=!o&&0===c.length;u.forEach(((e,t)=>{h||c.indexOf(t)>=0?s&&l.push(1):l.push(e)}));let p=l.length,f=ht.size(l);return{name:e,shaderCache:t,getShaderSource:e=>{let t=[],i=kt("_A",n[0].dataType,d),o=Et("output",a,p),l=r(i,o,c),f=l[2];for(let e=0,n=0;e<d;e++)h||c.indexOf(e)>=0?(s&&n++,f=`for(var j${e}: u32 = 0; j${e} < ${u[e]}; j${e}++) {\n                  ${l[2].includes("last_index")?`let last_index = j${e};`:""}\n                  ${i.indicesSet("input_indices",e,`j${e}`)}\n                  ${f}\n                }`):(t.push(`${i.indicesSet("input_indices",e,o.indicesGet("output_indices",n))};`),n++);return`\n\n        ${e.registerUniform("output_size","u32").declareVariables(i,o)}\n\n        ${e.mainStart()}\n          ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n          var input_indices: ${i.type.indices};\n          let output_indices = ${o.offsetToIndices("global_idx")};\n\n          ${t.join("\n")}\n          ${l[0]}       // init ops for reduce max/min\n          ${l[1]}\n          ${f}\n          ${l[3]}\n          ${4===l.length?o.setByOffset("global_idx","value"):l.slice(4).join("\n")}\n        }`},getRunData:()=>({outputs:[{dims:l,dataType:a}],dispatchGroup:{x:Math.ceil(f/64)},programUniforms:[{type:12,data:f},...bt(u,l)]})}},hn=(e,t)=>{let n=[];return e[1].dims[0]>0&&e[1].getBigInt64Array().forEach((e=>n.push(Number(e)))),ut({axes:n,keepDims:t.keepDims,noopWithEmptyAxes:t.noopWithEmptyAxes})},pn=(e,t,n,r)=>{let i=e.inputs,a=1===i.length?n:hn(i,n);e.compute(cn(t,{hint:a.cacheKey,inputDependencies:["rank"]},[i[0]],a.noopWithEmptyAxes&&0===a.axes.length?dn:r,a.axes,i[0].dataType,a.keepDims,a.noopWithEmptyAxes),{inputs:[0]})},fn=(e,t)=>{un(e.inputs),pn(e,"ReduceLogSum",t,((e,t)=>[`var value = ${t.type.storage}(0);`,"",`value += ${e.getByIndices("input_indices")};`,"value = log(value);"]))},mn=(e,t)=>{un(e.inputs),pn(e,"ReduceL1",t,((e,t)=>[`var value = ${t.type.storage}(0);`,"",`value += abs(${e.getByIndices("input_indices")});`,""]))},gn=(e,t)=>{un(e.inputs),pn(e,"ReduceL2",t,((e,t)=>[`var t = ${t.type.value}(0); var value = ${t.type.value}(0);`,"",`t = ${e.getByIndices("input_indices")}; value += (t * t);`,"value = sqrt(value);"]))},_n=(e,t)=>{un(e.inputs),pn(e,"ReduceLogSumExp",t,((e,t)=>[`var value = ${t.type.storage}(0);`,"",`value += exp(${e.getByIndices("input_indices")});`,"value = log(value);"]))},yn=(e,t)=>{un(e.inputs),pn(e,"ReduceMax",t,((e,t,n)=>{let r=[];for(let t=0;t<e.rank;t++)(n.indexOf(t)>=0||0===n.length)&&r.push(e.indicesSet("input_indices",t,0));return[`${r.join("\n")}`,`var value = ${e.getByIndices("input_indices")};`,`value = max(value, ${e.getByIndices("input_indices")});`,""]}))},wn=(e,t)=>{un(e.inputs),pn(e,"ReduceMean",t,((t,n,r)=>{let i=1;for(let n=0;n<t.rank;n++)(r.indexOf(n)>=0||0===r.length)&&(i*=e.inputs[0].dims[n]);return["var sum = f32(0);","",`sum += f32(${t.getByIndices("input_indices")});`,`let value = ${n.type.value}(sum / ${i});`]}))},vn=(e,t)=>{un(e.inputs),pn(e,"ReduceMin",t,((e,t,n)=>{let r=[];for(let t=0;t<e.rank;t++)(n.indexOf(t)>=0||0===n.length)&&r.push(`input_indices[${t}] = 0;`);return[`${r.join("\n")}`,`var value = ${e.getByIndices("input_indices")};`,`value = min(value, ${e.getByIndices("input_indices")});`,""]}))},bn=(e,t)=>{un(e.inputs),pn(e,"ReduceProd",t,((e,t)=>[`var value = ${t.type.storage}(1);`,"",`value *= ${e.getByIndices("input_indices")};`,""]))},$n=(e,t)=>{un(e.inputs),pn(e,"ReduceSum",t,((e,t)=>[`var value = ${t.type.storage}(0);`,"",`value += ${e.getByIndices("input_indices")};`,""]))},xn=(e,t)=>{un(e.inputs),pn(e,"ReduceSumSquare",t,((e,t)=>[`var t = ${t.type.value}(0); var value = ${t.type.value}(0);`,"",`t = ${e.getByIndices("input_indices")}; value += t * t;`,""]))},Cn=(e,t,n)=>{if(0===t.length)return n;let r=1,i=1;for(let n=0;n<t.length;n++)-1===t.indexOf(n)?r*=e[n]:i*=e[n];return i<32&&r>1024},Tn=(e,t)=>{Cn(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?wn(e,t):Zt(e,t)},Sn=(e,t)=>{Cn(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?mn(e,t):Jt(e,t)},Mn=(e,t)=>{Cn(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?gn(e,t):en(e,t)},kn=(e,t)=>{Cn(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?_n(e,t):tn(e,t)},En=(e,t)=>{Cn(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?yn(e,t):nn(e,t)},An=(e,t)=>{Cn(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?vn(e,t):rn(e,t)},In=(e,t)=>{Cn(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?bn(e,t):an(e,t)},Pn=(e,t)=>{Cn(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?$n(e,t):sn(e,t)},On=(e,t)=>{Cn(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?xn(e,t):on(e,t)},zn=(e,t)=>{Cn(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?fn(e,t):ln(e,t)}})),Uo=j((()=>{Io(),Fo(),Wo(),Bn=e=>{if(!e||0===e.length||e.length>2)throw new Error("ArgMinMaxOp op requires 1 or 2 inputs.");if(1!==e[0].dataType)throw new Error("Invalid input type.")},Rn=(e,t)=>{Bn(e.inputs);e.compute(cn("ArgMin",{hint:t.cacheKey,inputDependencies:["rank"]},[e.inputs[0]],((e,n,r)=>{let i=[];for(let t=0;t<e.rank;t++)(r.indexOf(t)>=0||0===r.length)&&i.push(`input_indices[${t}] = 0;`);return[`${i.join("\n")}`,`var value = ${e.getByIndices("input_indices")};\nvar best_index : i32 = 0;`,`if (${e.getByIndices("input_indices")} ${t.selectLastIndex>0?"<=":"<"} value) {\n         value = ${e.getByIndices("input_indices")};\n         best_index = i32(last_index);\n       }`,"",n.setByOffset("global_idx","best_index")]}),[t.axis],7,t.keepDims),{inputs:[0]})},Fn=(e,t)=>{Bn(e.inputs);e.compute(cn("argMax",{hint:t.cacheKey,inputDependencies:["rank"]},[e.inputs[0]],((e,n,r)=>{let i=[];for(let t=0;t<e.rank;t++)(r.indexOf(t)>=0||0===r.length)&&i.push(`input_indices[${t}] = 0;`);return[`${i.join("\n")}`,`var value = ${e.getByIndices("input_indices")};\nvar best_index : i32 = 0;`,`if (${e.getByIndices("input_indices")} ${t.selectLastIndex>0?">=":">"} value) {\n         value = ${e.getByIndices("input_indices")};\n         best_index = i32(last_index);\n       }`,"",n.setByOffset("global_idx","best_index")]}),[t.axis],7,t.keepDims),{inputs:[0]})},jn=e=>ut(e)})),Vo=j((()=>{Io(),Bo(),Do(),Dn=(e,t)=>{let n=e[0],r=e[1],i=e[2],a=e[3],s=e[4],o=e[5];if(s&&o)throw new Error("Attention cannot have both past and relative_position_bias");if(3!==n.dims.length)throw new Error('Input "input" must have 3 dimensions');let l=n.dims[0],u=n.dims[1],d=n.dims[2];if(1!==i.dims.length)throw new Error('Input "bias" is expected to have 1 dimensions');if(2!==r.dims.length)throw new Error('Input "weights" is expected to have 2 dimensions');if(r.dims[0]!==d)throw new Error("Input 1 dimension 0 should have same length as dimension 2 of input 0");if(i.dims[0]!==r.dims[1])throw new Error('Input "bias" dimension 0 should have same length as dimension 1 of input "weights"');let c=i.dims[0]/3,h=c,p=h;if(t.qkvHiddenSizes.length>0){if(3!==t.qkvHiddenSizes.length)throw new Error("qkv_hidden_sizes attribute should have 3 elements");for(let e of t.qkvHiddenSizes)if(e%t.numHeads!=0)throw new Error("qkv_hidden_sizes should be divisible by num_heads");c=t.qkvHiddenSizes[0],h=t.qkvHiddenSizes[1],p=t.qkvHiddenSizes[2]}let f=u;if(c!==h)throw new Error("qkv_hidden_sizes first element should be same as the second");if(i.dims[0]!==c+h+p)throw new Error('Input "bias" dimension 0 should have same length as sum of Q/K/V hidden sizes');let m=0;if(s){if(h!==p)throw new Error('Input "past" expect k_hidden_size == v_hidden_size');if(5!==s.dims.length)throw new Error('Input "past" must have 5 dimensions');if(2!==s.dims[0])throw new Error('Input "past" first dimension must be 2');if(s.dims[1]!==l)throw new Error('Input "past" second dimension must be batch_size');if(s.dims[2]!==t.numHeads)throw new Error('Input "past" third dimension must be num_heads');if(s.dims[4]!==h/t.numHeads)throw new Error('Input "past" fifth dimension must be k_hidden_size / num_heads');t.pastPresentShareBuffer||(m=s.dims[3])}let g=f+m;if(a)throw new Error("Mask not supported");if(s)throw new Error("past is not supported");if(o)throw new Error("relativePositionBias is not supported");return{batchSize:l,sequenceLength:u,pastSequenceLength:m,kvSequenceLength:f,totalSequenceLength:g,maxSequenceLength:-1,inputHiddenSize:d,hiddenSize:c,vHiddenSize:p,headSize:Math.floor(c/t.numHeads),vHeadSize:Math.floor(p/t.numHeads),numHeads:t.numHeads,isUnidirectional:!1,pastPresentShareBuffer:!1,maskFilterValue:t.maskFilterValue,maskType:0,scale:t.scale,broadcastResPosBias:!1,passPastInKv:!1,qkvFormat:1}},Ln=(e,t,n,r)=>{let i=$t(r),a=64,s=r/i;s<a?a=1:s/8<64&&(a=Math.ceil(s/8));let o=Math.ceil(r/i/a),l=[{type:t.dataType,data:1/r},{type:12,data:s},{type:12,data:o}],u=wt(t.dataType,i);e.compute({name:"AttentionProbsSoftmax",shaderCache:{hint:`${a};${u};${i}`},getShaderSource:e=>{let n=Et("x",t.dataType,t.dims,i),r="thread_max_vector";2===i?r="max(thread_max_vector.x, thread_max_vector.y)":4===i&&(r="max(max(thread_max_vector.x, thread_max_vector.y), max(thread_max_vector.z, thread_max_vector.w))");let s=vt(t.dataType),o=[{name:"d_inv",type:s},{name:"d_comp",type:"u32"},{name:"elements_per_wg",type:"u32"}];return`\n  var<workgroup> wgMax: array<f32, ${a}>;\n  var<workgroup> wgSum: array<f32, ${a}>;\n  ${e.registerUniforms(o).declareVariables(n)}\n  ${e.mainStart([a,1,1])}\n    let localOffset = local_idx * uniforms.elements_per_wg;\n    let offset: u32 = workgroup_id.x * uniforms.d_comp + localOffset;\n\n    var thread_max_vector = ${xt("f32",i,"-3.402823e+38f")};\n    for (var i: u32 = 0; i < uniforms.elements_per_wg && i + localOffset < uniforms.d_comp; i++) {\n      thread_max_vector = max(${Ct(s,i,"x[offset + i]")}, thread_max_vector);\n    }\n    wgMax[local_idx] = ${r};\n    workgroupBarrier();\n\n    var maxValue = -3.402823e+38f;\n    for (var i = 0u; i < ${a}; i++) {\n      maxValue = max(wgMax[i], maxValue);\n    }\n\n    var sumVector = ${xt("f32",i,"0")};\n    for (var i: u32 = 0; i < uniforms.elements_per_wg && i + localOffset < uniforms.d_comp; i++) {\n      sumVector += exp(${Ct(s,i,"x[offset + i]")} - maxValue);\n    }\n    wgSum[local_idx] = ${Tt("sumVector",i)};\n    workgroupBarrier();\n\n    var sum: f32 = 0;\n    for (var i = 0u; i < ${a}; i++) {\n      sum += wgSum[i];\n    }\n\n    if (sum == 0) {\n      for (var i: u32 = 0; i < uniforms.elements_per_wg && i + localOffset < uniforms.d_comp; i++) {\n        x[offset + i] = ${xt(s,i,"uniforms.d_inv")};\n      }\n    } else {\n      for (var i: u32 = 0; i < uniforms.elements_per_wg && i + localOffset < uniforms.d_comp; i++) {\n        let f32input = ${Ct(s,i,"x[offset + i]")};\n        x[offset + i] = ${n.type.value}(exp(f32input - maxValue) / sum);\n      }\n    }\n  }`},getRunData:()=>({outputs:[],dispatchGroup:{x:n},programUniforms:l})},{inputs:[t],outputs:[]})},Nn=(e,t,n,r,i,a)=>{let s=[i.batchSize,i.numHeads,i.sequenceLength,i.kvSequenceLength+i.pastSequenceLength],o=0===a.scale?1/Math.sqrt(i.headSize):a.scale,l=$t(i.headSize),u=i.headSize/l,d=12,c={x:Math.ceil(i.totalSequenceLength/d),y:Math.ceil(i.sequenceLength/d),z:i.batchSize*i.numHeads},h=[{type:12,data:i.sequenceLength},{type:12,data:u},{type:12,data:i.totalSequenceLength},{type:12,data:i.kvSequenceLength},{type:t.dataType,data:o}],p=[t,n],f=e.compute({name:"AttentionProbs",shaderCache:{hint:`${l}`,inputDependencies:["type","type"]},getRunData:()=>({outputs:[{dims:s,dataType:t.dataType,gpuDataType:0}],dispatchGroup:c,programUniforms:h}),getShaderSource:e=>{let r=kt("q",t.dataType,t.dims,l),i=kt("key",n.dataType,n.dims,l),a=Et("output",t.dataType,s),o=wt(t.dataType),u=[{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"kv_sequence_length",type:"u32"},{name:"alpha",type:o}];return`\n  const beta: ${o} = 1.0;\n  const TILE_SIZE = 12u;\n\n  var<workgroup> tileQ: array<${r.type.storage}, 144>;\n  var<workgroup> tileK: array<${r.type.storage}, 144>;\n  ${e.registerUniforms(u).declareVariables(r,i,a)}\n  ${e.mainStart([d,d,1])}\n    // x holds the N and y holds the M\n    let headIdx = workgroup_id.z;\n    let m = workgroup_id.y * TILE_SIZE;\n    let n = workgroup_id.x * TILE_SIZE;\n    let lm = m + local_id.y;\n    let ln = n + local_id.x;\n\n    let qOffset = uniforms.M * uniforms.K * headIdx + m * uniforms.K;\n    let kOffset = uniforms.kv_sequence_length * uniforms.K * headIdx + n * uniforms.K;\n\n    var value = ${xt(o,l)};\n    for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {\n      if (m + local_id.y < uniforms.M && w + local_id.x < uniforms.K) {\n        tileQ[TILE_SIZE * local_id.y + local_id.x] = q[qOffset + local_id.y * uniforms.K + w + local_id.x];\n      }\n      if (n + local_id.y < uniforms.N && w + local_id.x < uniforms.K) {\n        tileK[TILE_SIZE * local_id.y + local_id.x] = key[kOffset + local_id.y * uniforms.K + w + local_id.x];\n      }\n      workgroupBarrier();\n\n      for (var k: u32 = 0u; k<TILE_SIZE && w+k < uniforms.K; k++) {\n        value += tileQ[TILE_SIZE * local_id.y + k] * tileK[TILE_SIZE * local_id.x + k];\n      }\n\n      workgroupBarrier();\n    }\n\n    let headOffset = headIdx * uniforms.M * uniforms.N;\n    if (lm < uniforms.M && ln < uniforms.N) {\n      let outputIdx = headOffset + lm * uniforms.N + ln;\n      output[outputIdx] = ${Tt("value",l)} * uniforms.alpha;\n    }\n  }`}},{inputs:p,outputs:[-1]})[0];return Ln(e,f,i.batchSize*i.numHeads*i.sequenceLength,i.totalSequenceLength),f},Wn=(e,t,n,r)=>{let i=[r.batchSize,r.sequenceLength,r.vHiddenSize],a=12,s={x:Math.ceil(r.vHeadSize/a),y:Math.ceil(r.sequenceLength/a),z:r.batchSize*r.numHeads},o=[{type:12,data:r.sequenceLength},{type:12,data:r.totalSequenceLength},{type:12,data:r.vHeadSize},{type:12,data:r.numHeads},{type:12,data:r.vHiddenSize}];return e.compute({name:"AttentionScore",shaderCache:{inputDependencies:["type","type"]},getRunData:()=>({outputs:[{dims:i,dataType:t.dataType,gpuDataType:0}],dispatchGroup:s,programUniforms:o}),getShaderSource:e=>{let r=kt("probs",t.dataType,t.dims),s=kt("v",n.dataType,n.dims),o=Et("output",t.dataType,i);return`\n  const TILE_SIZE = 12u;\n  var<workgroup> tileQ: array<${r.type.value}, 144>;\n  var<workgroup> tileK: array<${r.type.value}, 144>;\n  ${e.registerUniforms([{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"v_hidden_size",type:"u32"}]).declareVariables(r,s,o)}\n  ${e.mainStart([a,a,1])}\n   let headIdx = workgroup_id.z;\n   let m = workgroup_id.y * TILE_SIZE + local_id.y;\n   let n = workgroup_id.x * TILE_SIZE + local_id.x;\n\n   let offsetA = headIdx * (uniforms.M * uniforms.K) + m * uniforms.K;\n   let offsetB = headIdx * (uniforms.N * uniforms.K) + n;\n\n   var value = ${r.type.storage}(0);\n   for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {\n     if (m < uniforms.M && w + local_id.x < uniforms.K) {\n       tileQ[TILE_SIZE * local_id.y + local_id.x] = probs[offsetA + w + local_id.x];\n     }\n     if (n < uniforms.N && w + local_id.y < uniforms.K) {\n       tileK[TILE_SIZE * local_id.y + local_id.x] = v[offsetB + (w + local_id.y) * uniforms.N];\n     }\n     workgroupBarrier();\n     for (var k: u32 = 0u; k<TILE_SIZE && w+k < uniforms.K; k++) {\n       value += tileQ[TILE_SIZE * local_id.y + k] * tileK[TILE_SIZE * k + local_id.x];\n     }\n     workgroupBarrier();\n   }\n\n   // we need to transpose output from BNSH_v to BSND_v\n   let batchIdx = workgroup_id.z / uniforms.num_heads;\n   let currentBatchHeadNumber = workgroup_id.z % uniforms.num_heads;\n   let headOffset = (batchIdx * uniforms.M * uniforms.num_heads + currentBatchHeadNumber) * uniforms.N;\n   if (m < uniforms.M && n < uniforms.N) {\n     let outputIdx = batchIdx * uniforms.M *uniforms.v_hidden_size + m * uniforms.v_hidden_size\n       + currentBatchHeadNumber * uniforms.N + n;\n     output[outputIdx] = value;\n   }\n  }`}},{inputs:[t,n],outputs:[0]})[0]},Un=(e,t,n,r,i,a,s,o,l,u,d)=>{let c=Nn(e,t,n,0,u,d);Wn(e,c,r,u)},Vn=(e,t)=>{let n=[t.batchSize,t.numHeads,t.sequenceLength,t.headSize],r=t.sequenceLength,i=t.inputHiddenSize,a=t.headSize,s=12,o={x:Math.ceil(t.headSize/s),y:Math.ceil(t.sequenceLength/s),z:t.batchSize*t.numHeads},l=[e.inputs[0],e.inputs[1],e.inputs[2]],u=[{type:12,data:r},{type:12,data:i},{type:12,data:a},{type:12,data:t.numHeads},{type:12,data:t.headSize},{type:12,data:t.hiddenSize},{type:12,data:t.hiddenSize+t.hiddenSize+t.vHiddenSize}];return e.compute({name:"AttentionPrepare",shaderCache:{inputDependencies:["type","type","type"]},getRunData:()=>({outputs:[{dims:n,dataType:e.inputs[0].dataType,gpuDataType:0},{dims:n,dataType:e.inputs[0].dataType,gpuDataType:0},{dims:n,dataType:e.inputs[0].dataType,gpuDataType:0}],dispatchGroup:o,programUniforms:u}),getShaderSource:e=>{let t=Et("output_q",l[0].dataType,n),r=Et("output_k",l[0].dataType,n),i=Et("output_v",l[0].dataType,n),a=kt("input",l[0].dataType,l[0].dims),o=kt("weight",l[1].dataType,l[1].dims),u=kt("bias",l[2].dataType,l[2].dims),d=a.type.storage;return`\n  const TILE_SIZE = 12u;\n  var<workgroup> tileInput: array<${d}, 144>;\n  var<workgroup> tileWeightQ: array<${d}, 144>;\n  var<workgroup> tileWeightK: array<${d}, 144>;\n  var<workgroup> tileWeightV: array<${d}, 144>;\n  ${e.registerUniforms([{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"head_size",type:"u32"},{name:"hidden_size",type:"u32"},{name:"ldb",type:"u32"}]).declareVariables(a,o,u,t,r,i)}\n  ${e.mainStart([s,s,1])}\n    let batchIndex = workgroup_id.z / uniforms.num_heads;\n    let headNumber = workgroup_id.z % uniforms.num_heads;\n    let m = workgroup_id.y * TILE_SIZE + local_id.y;\n    let n = workgroup_id.x * TILE_SIZE + local_id.x;\n\n    let inputOffset = batchIndex * (uniforms.M * uniforms.K) + m * uniforms.K;\n    let biasOffsetQ = headNumber * uniforms.head_size;\n    let biasOffsetK = uniforms.hidden_size + biasOffsetQ;\n    let biasOffsetV = uniforms.hidden_size + biasOffsetK;\n\n    var valueQ = ${d}(0);\n    var valueK = ${d}(0);\n    var valueV = ${d}(0);\n    for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {\n      if (m < uniforms.M && w + local_id.x < uniforms.K) {\n        tileInput[TILE_SIZE * local_id.y + local_id.x] = input[inputOffset + w + local_id.x];\n      }\n      if (n < uniforms.N && w + local_id.y < uniforms.K) {\n        let offset = n + (w + local_id.y) * uniforms.ldb;\n        tileWeightQ[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetQ + offset];\n        tileWeightK[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetK + offset];\n        tileWeightV[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetV + offset];\n      }\n      workgroupBarrier();\n      for (var k: u32 = 0u; k<TILE_SIZE && w+k < uniforms.K; k++) {\n        let inputTileOffset = TILE_SIZE * local_id.y + k;\n        let weightTileOffset = TILE_SIZE * k + local_id.x;\n        valueQ += tileInput[inputTileOffset] * tileWeightQ[weightTileOffset];\n        valueK += tileInput[inputTileOffset] * tileWeightK[weightTileOffset];\n        valueV += tileInput[inputTileOffset] * tileWeightV[weightTileOffset];\n      }\n\n      workgroupBarrier();\n    }\n\n    let headOffset = (m * uniforms.N + n) % uniforms.head_size;\n    valueQ += bias[headOffset + biasOffsetQ];\n    valueK += bias[headOffset + biasOffsetK];\n    valueV += bias[headOffset + biasOffsetV];\n\n    let offset = workgroup_id.z * uniforms.M * uniforms.N;\n    if (m < uniforms.M && n < uniforms.N) {\n      let outputIdx = offset + m * uniforms.N + n;\n      output_q[outputIdx] = valueQ;\n      output_k[outputIdx] = valueK;\n      output_v[outputIdx] = valueV;\n    }\n  }`}},{inputs:l,outputs:[-1,-1,-1]})},Gn=(e,t)=>{let n=Dn(e.inputs,t),[r,i,a]=Vn(e,n);return Un(e,r,i,a,e.inputs[4],void 0,void 0,void 0,e.inputs[5],n,t)}})),Go=j((()=>{se(),Io(),jo(),Fo(),Do(),qn=(e,t)=>{if(!e||5!==e.length)throw new Error("BatchNormalization requires 5 inputs");let n=(e,t,n)=>{let r=t.length;if(r!==e.length)throw new Error(`${n}: num dimensions != ${r}`);t.forEach(((t,r)=>{if(t!==e[r])throw new Error(`${n}: dim[${r}] do not match`)}))};if(e[0].dims.length>1){let r="NHWC"===t.format?t.spatial?e[0].dims.slice(-1):e[0].dims.slice(-1).concat(e[0].dims.slice(1,e[0].dims.length-1)):e[0].dims.slice(1,t.spatial?2:void 0);n(e[1].dims,r,"Invalid input scale"),n(e[2].dims,r,"Invalid input B"),n(e[3].dims,r,"Invalid input mean"),n(e[4].dims,r,"Invalid input var")}else n(e[1].dims,[1],"Invalid input scale"),n(e[2].dims,[1],"Invalid input B"),n(e[3].dims,[1],"Invalid input mean"),n(e[4].dims,[1],"Invalid input var")},Hn=(e,t)=>{let{epsilon:n,spatial:r,format:i}=t,a=e[0].dims,s=r?$t(a[a.length-1]):1,o="NHWC"===i&&a.length>1?s:1,l=ht.size(a)/s,u=r,d=u?a.length:a,c=kt("x",e[0].dataType,e[0].dims,s),h=kt("scale",e[1].dataType,e[1].dims,o),p=kt("bias",e[2].dataType,e[2].dims,o),f=kt("inputMean",e[3].dataType,e[3].dims,o),m=kt("inputVar",e[4].dataType,e[4].dims,o),g=Et("y",e[0].dataType,d,s);return{name:"BatchNormalization",shaderCache:{hint:`${t.epsilon}_${t.format}_${r}_${s}`,inputDependencies:u?["rank","type","type","type","type"]:void 0},getShaderSource:e=>`\n  const epsilon = ${n};\n  ${e.registerUniform("outputSize","u32").declareVariables(c,h,p,f,m,g)}\n  ${e.mainStart()}\n  ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n    var outputIndices = ${g.offsetToIndices(`global_idx * ${s}`)};\n    ${(()=>{let e="";if(r)e=`let cOffset = ${1===a.length?"0u":"NHWC"===i?`outputIndices[${a.length-1}] / ${s}`:"outputIndices[1]"};`;else if("NCHW"===i)e=`\n            ${g.indicesSet("outputIndices","0","0")}\n            let cOffset = ${g.indicesToOffset("outputIndices")};`;else{e=`var cIndices = ${h.type.indices}(0);\n                       cIndices[0] = outputIndices[${a.length-1}];`;for(let t=1;t<h.rank;t++)e+=`cIndices[${t}] = outputIndices[${t}];`;e+=`let cOffset = ${h.indicesToOffset("cIndices")};`}return e})()}\n    let scale = ${h.getByOffset("cOffset")};\n    let bias = ${p.getByOffset("cOffset")};\n    let inputMean = ${f.getByOffset("cOffset")};\n    let inputVar = ${m.getByOffset("cOffset")};\n    let x = ${c.getByOffset("global_idx")};\n    let value = (x - inputMean) * inverseSqrt(inputVar + epsilon) * scale + bias;\n    ${g.setByOffset("global_idx","value")}\n  }`,getRunData:()=>({outputs:[{dims:e[0].dims,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(l/64)},programUniforms:u?[{type:12,data:l},...bt(a)]:[{type:12,data:l}]})}},Kn=e=>ut(e),Yn=(e,t)=>{let{inputs:n,outputCount:r}=e,i=Kn({...t,outputCount:r});if(d.webgpu.validateInputContent&&qn(n,i),t.trainingMode)throw new Error("BatchNormalization trainingMode is not supported yet.");e.compute(Hn(n,i))}})),qo=j((()=>{jo(),Do(),Qn=e=>{if(3!==e[0].dims.length)throw new Error("input should have 3 dimensions");if(![320,640,1280].includes(e[0].dims[2]))throw new Error("number of channels should be 320, 640 or 1280");if(1!==e[1].dims.length)throw new Error("bias is expected to have 1 dimensions");if(e[0].dims[2]!==e[1].dims[0])throw new Error("last dimension of input and bias are not the same")},Xn=e=>{let t=e[0].dims,n=e[0].dims[2],r=ht.size(t)/4,i=e[0].dataType,a=kt("input",i,t,4),s=kt("bias",i,[n],4),o=kt("residual",i,t,4),l=Et("output",i,t,4);return{name:"BiasAdd",getRunData:()=>({outputs:[{dims:t,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(r/64)}}),getShaderSource:e=>`\n  const channels = ${n}u / 4;\n  ${e.declareVariables(a,s,o,l)}\n\n  ${e.mainStart()}\n    ${e.guardAgainstOutOfBoundsWorkgroupSizes(r)}\n    let value = ${a.getByOffset("global_idx")}\n      + ${s.getByOffset("global_idx % channels")} + ${o.getByOffset("global_idx")};\n    ${l.setByOffset("global_idx","value")}\n  }`}},Zn=e=>{Qn(e.inputs),e.compute(Xn(e.inputs))}})),Ho=j((()=>{Io(),jo(),Fo(),Do(),Jn=(e,t,n,r,i,a)=>{let s=Math.ceil(t/4),o="";o="string"==typeof i?`${i}(a)`:i("a");let l=kt("inputData",n,[s],4),u=Et("outputData",r,[s],4);return`\n      ${e.registerUniform("vec_size","u32").declareVariables(l,u)}\n\n  ${a??""}\n\n  ${e.mainStart()}\n    ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}\n\n    let a = ${l.getByOffset("global_idx")};\n    ${u.setByOffset("global_idx",o)}\n  }`},er=(e,t,n,r,i,a=e.dataType)=>({name:t,shaderCache:{hint:i,inputDependencies:["type"]},getShaderSource:t=>Jn(t,ht.size(e.dims),e.dataType,a,n,r),getRunData:t=>({outputs:[{dims:e.dims,dataType:a}],dispatchGroup:{x:Math.ceil(ht.size(t[0].dims)/64/4)},programUniforms:[{type:12,data:Math.ceil(ht.size(e.dims)/4)}]})}),tr=e=>{e.compute(er(e.inputs[0],"Abs","abs"))},nr=e=>{e.compute(er(e.inputs[0],"Acos","acos"))},rr=e=>{e.compute(er(e.inputs[0],"Acosh","acosh"))},ir=e=>{e.compute(er(e.inputs[0],"Asin","asin"))},ar=e=>{e.compute(er(e.inputs[0],"Asinh","asinh"))},sr=e=>{e.compute(er(e.inputs[0],"Atan","atan"))},or=e=>{e.compute(er(e.inputs[0],"Atanh","atanh"))},lr=e=>ut(e),ur=(e,t)=>{let n;switch(t.to){case 10:n="vec4<f16>";break;case 1:n="vec4<f32>";break;case 12:n="vec4<u32>";break;case 6:n="vec4<i32>";break;case 9:n="vec4<bool>";break;default:throw new RangeError(`not supported type (specified in attribute 'to' from 'Cast' operator): ${t.to}`)}e.compute(er(e.inputs[0],"Cast",n,void 0,t.cacheKey,t.to))},dr=e=>{let t=e.length>=2&&0!==e[1].data?e[1].getFloat32Array()[0]:mt,n=e.length>=3&&0!==e[2].data?e[2].getFloat32Array()[0]:gt;return ut({min:t,max:n})},cr=(e,t)=>{let n=1===e.inputs.length?t:dr(e.inputs),r=vt(e.inputs[0].dataType);e.compute(er(e.inputs[0],"Clip",(e=>`clamp(${e}, clip_min_, clip_max_)`),`\n    const clip_min_: vec4<${r}> = vec4(${r}(${n.min}));\n    const clip_max_: vec4<${r}> = vec4(${r}(${n.max}));\n`,n.cacheKey),{inputs:[0]})},hr=e=>{e.compute(er(e.inputs[0],"Ceil","ceil"))},pr=e=>{e.compute(er(e.inputs[0],"Cos","cos"))},fr=e=>{e.compute(er(e.inputs[0],"Cosh","cosh"))},mr=e=>ut(e),gr=(e,t)=>{let n=vt(e.inputs[0].dataType);e.compute(er(e.inputs[0],"Elu",(e=>`elu_vf32(${e})`),`\n  const elu_alpha_ = ${n}(${t.alpha});\n\n  fn elu_f32(a: ${n}) -> ${n} {\n  return select((exp(a) - 1.0) * elu_alpha_, a, a >= 0.0);\n  }\n\n  fn elu_vf32(v: vec4<${n}>) -> vec4<${n}> {\n  return vec4(elu_f32(v.x), elu_f32(v.y), elu_f32(v.z), elu_f32(v.w));\n  }`,t.cacheKey))},_r=(e="f32")=>`\nconst r0: ${e} = 0.3275911;\nconst r1: ${e} = 0.254829592;\nconst r2: ${e} = -0.284496736;\nconst r3: ${e} = 1.421413741;\nconst r4: ${e} = -1.453152027;\nconst r5: ${e} = 1.061405429;\n\nfn erf_vf32(v: vec4<${e}>) -> vec4<${e}> {\n  let absv = abs(v);\n  let x = 1.0 / (1.0 + r0 * absv);\n  return sign(v) * (1.0 - ((((r5 * x + r4) * x + r3) * x + r2) * x + r1) * x * exp(-absv * absv));\n}`,yr=e=>{let t=vt(e.inputs[0].dataType);e.compute(er(e.inputs[0],"Erf",(e=>`erf_vf32(${e})`),_r(t)))},wr=e=>{e.compute(er(e.inputs[0],"Exp","exp"))},vr=e=>{e.compute(er(e.inputs[0],"Floor","floor"))},br=e=>{let t=vt(e.inputs[0].dataType);e.compute(er(e.inputs[0],"Gelu",(e=>`0.5 * ${e} * (1.0 + erf_vf32(${e} * 0.7071067811865475))`),_r(t)))},$r=(e,t)=>{let n=vt(e.inputs[0].dataType);e.compute(er(e.inputs[0],"LeakyRelu",(e=>`select(leaky_relu_alpha_ * ${e}, ${e}, ${e} >= vec4<${n}>(0.0))`),`const leaky_relu_alpha_ = ${n}(${t.alpha});`,t.cacheKey))},xr=e=>{e.compute(er(e.inputs[0],"Not",(e=>`!${e}`)))},Cr=e=>{e.compute(er(e.inputs[0],"Neg",(e=>`-${e}`)))},Tr=e=>{e.compute(er(e.inputs[0],"Reciprocal",(e=>`1.0/${e}`)))},Sr=e=>{let t=vt(e.inputs[0].dataType);e.compute(er(e.inputs[0],"Relu",(e=>`select(vec4<${t}>(0.0), ${e}, ${e} > vec4<${t}>(0.0))`)))},Mr=e=>{e.compute(er(e.inputs[0],"Sigmoid",(e=>`(1.0 / (1.0 + exp(-${e})))`)))},kr=e=>ut(e),Er=(e,t)=>{let n=vt(e.inputs[0].dataType);e.compute(er(e.inputs[0],"HardSigmoid",(e=>`max(vec4<${n}>(0.0), min(vec4<${n}>(1.0), ${t.alpha} * ${e} + vec4<${n}>(${t.beta})))`),void 0,t.cacheKey))},Ar=e=>{e.compute(er(e.inputs[0],"Sin","sin"))},Ir=e=>{e.compute(er(e.inputs[0],"Sinh","sinh"))},Pr=e=>{e.compute(er(e.inputs[0],"Sqrt","sqrt"))},Or=e=>{e.compute(er(e.inputs[0],"Tan","tan"))},zr=e=>`sign(${e}) * (1 - exp(-2 * abs(${e}))) / (1 + exp(-2 * abs(${e})))`,Br=e=>{e.compute(er(e.inputs[0],"Tanh",zr))},Rr=(e="f32")=>`\nconst fast_gelu_a: ${e} = 0.5;\nconst fast_gelu_b: ${e} = 0.7978845608028654;\nconst fast_gelu_c: ${e} = 0.035677408136300125;\n\nfn tanh_v(v: vec4<${e}>) -> vec4<${e}> {\n  return ${zr("v")};\n}\n`,Fr=e=>`(fast_gelu_a + fast_gelu_a * tanh_v(${e} * (fast_gelu_c * ${e} * ${e} + fast_gelu_b))) * ${e}`,jr=e=>{let t=vt(e.inputs[0].dataType);e.compute(er(e.inputs[0],"FastGelu",Fr,Rr(t),void 0,e.inputs[0].dataType))},Dr=(e,t)=>{let n=vt(e.inputs[0].dataType);return e.compute(er(e.inputs[0],"ThresholdedRelu",(e=>`select(vec4<${n}>(0.0), ${e}, ${e} > thresholded_relu_alpha_)`),`const thresholded_relu_alpha_ = vec4<${n}>(${t.alpha});`,t.cacheKey)),0},Lr=e=>{e.compute(er(e.inputs[0],"Log","log"))}})),Ko=j((()=>{jo(),Do(),Ho(),Nr=e=>{if(3!==e[0].dims.length)throw new Error("input should have 3 dimensions");if(![2560,5120,10240].includes(e[0].dims[2]))throw new Error("hidden state should be 2560, 5120 or 10240");if(1!==e[1].dims.length)throw new Error("bias is expected to have 1 dimensions");if(e[0].dims[2]!==e[1].dims[0])throw new Error("last dimension of input and bias are not the same")},Wr=e=>{let t=e[0].dims.slice();t[2]=t[2]/2;let n=kt("input",e[0].dataType,e[0].dims,4),r=kt("bias",e[0].dataType,[e[0].dims[2]],4),i=Et("output",e[0].dataType,t,4),a=ht.size(t)/4,s=wt(e[0].dataType);return{name:"BiasSplitGelu",getRunData:()=>({outputs:[{dims:t,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(a/64)}}),getShaderSource:t=>`\n  const M_SQRT2 = sqrt(2.0);\n  const halfChannels = ${e[0].dims[2]/4/2}u;\n\n  ${t.declareVariables(n,r,i)}\n\n  ${_r(s)}\n\n  ${t.mainStart()}\n    ${t.guardAgainstOutOfBoundsWorkgroupSizes(a)}\n    let biasIdx = global_idx % halfChannels;\n    let batchIndex = global_idx / halfChannels;\n    let inputOffset = biasIdx + batchIndex * halfChannels * 2;\n    let valueLeft = input[inputOffset] + bias[biasIdx];\n    let valueRight = input[inputOffset + halfChannels] + bias[biasIdx + halfChannels];\n    let geluRight = valueRight * 0.5 * (erf_vf32(valueRight / M_SQRT2) + 1);\n\n    ${i.setByOffset("global_idx","valueLeft * geluRight")}\n  }`}},Ur=e=>{Nr(e.inputs),e.compute(Wr(e.inputs))}})),Yo=j((()=>{Io(),jo(),Do(),Vr=(e,t,n,r,i,a,s,o,l,u,d,c)=>{let h,p;"string"==typeof o?h=p=(e,t)=>`${o}((${e}),(${t}))`:"function"==typeof o?h=p=o:(h=o.scalar,p=o.vector);let f,m=Et("outputData",d,r.length,4),g=kt("aData",l,t.length,4),_=kt("bData",u,n.length,4);if(i)if(a){let e=1===ht.size(t),r=1===ht.size(n),i=t.length>0&&t[t.length-1]%4==0,a=n.length>0&&n[n.length-1]%4==0;f=e||r?m.setByOffset("global_idx",p(e?`${g.type.value}(${g.getByOffset("0")}.x)`:g.getByOffset("global_idx"),r?`${_.type.value}(${_.getByOffset("0")}.x)`:_.getByOffset("global_idx"))):`\n            let outputIndices = ${m.offsetToIndices("global_idx * 4u")};\n            let offsetA = ${g.broadcastedIndicesToOffset("outputIndices",m)};\n            let offsetB = ${_.broadcastedIndicesToOffset("outputIndices",m)};\n            ${m.setByOffset("global_idx",p(s||i?g.getByOffset("offsetA / 4u"):`${g.type.value}(${g.getByOffset("offsetA / 4u")}[offsetA % 4u])`,s||a?_.getByOffset("offsetB / 4u"):`${_.type.value}(${_.getByOffset("offsetB / 4u")}[offsetB % 4u])`))}\n          `}else f=m.setByOffset("global_idx",p(g.getByOffset("global_idx"),_.getByOffset("global_idx")));else{if(!a)throw new Error("no necessary to use scalar implementation for element-wise binary op implementation.");let e=(e,t,n="")=>{let r=`aData[indexA${t}][componentA${t}]`,i=`bData[indexB${t}][componentB${t}]`;return`\n            let outputIndices${t} = ${m.offsetToIndices(`global_idx * 4u + ${t}u`)};\n            let offsetA${t} = ${g.broadcastedIndicesToOffset(`outputIndices${t}`,m)};\n            let offsetB${t} = ${_.broadcastedIndicesToOffset(`outputIndices${t}`,m)};\n            let indexA${t} = offsetA${t} / 4u;\n            let indexB${t} = offsetB${t} / 4u;\n            let componentA${t} = offsetA${t} % 4u;\n            let componentB${t} = offsetB${t} % 4u;\n            ${e}[${t}] = ${n}(${h(r,i)});\n          `};f=9===d?`\n            var data = vec4<u32>(0);\n            ${e("data",0,"u32")}\n            ${e("data",1,"u32")}\n            ${e("data",2,"u32")}\n            ${e("data",3,"u32")}\n            outputData[global_idx] = dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(data));`:`\n            ${e("outputData[global_idx]",0)}\n            ${e("outputData[global_idx]",1)}\n            ${e("outputData[global_idx]",2)}\n            ${e("outputData[global_idx]",3)}\n          `}return`\n        ${e.registerUniform("vec_size","u32").declareVariables(g,_,m)}\n\n        ${c??""}\n\n        ${e.mainStart()}\n        ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}\n        ${f}\n      }`},Gr=(e,t,n,r,i,a,s=n.dataType)=>{let o=!ht.areEqual(n.dims,r.dims),l=n.dims,u=ht.size(n.dims),d=!1,c=!1,h=[o];if(o){let e=ct.calcShape(n.dims,r.dims,!1);if(!e)throw new Error("Can't perform binary op on the given tensors");l=e,u=ht.size(l);let t=1===ht.size(n.dims),i=1===ht.size(r.dims),a=n.dims.length>0&&n.dims[n.dims.length-1]%4==0,s=r.dims.length>0&&r.dims[r.dims.length-1]%4==0;h.push(t),h.push(i),h.push(a),h.push(s);let o=1;for(let e=1;e<l.length;e++){let t=n.dims[n.dims.length-e]??1;if(t!==(r.dims[r.dims.length-e]??1))break;o*=t}o%4==0?(c=!0,d=!0):(t||i||a||s)&&(d=!0)}else d=!0;return h.push(d),{name:e,shaderCache:{hint:t+h.map((e=>e.toString())).join("_"),inputDependencies:["rank","rank"]},getShaderSource:e=>Vr(e,n.dims,r.dims,l,d,o,c,i,n.dataType,r.dataType,s,a),getRunData:()=>({outputs:[{dims:l,dataType:s}],dispatchGroup:{x:Math.ceil(u/64/4)},programUniforms:[{type:12,data:Math.ceil(ht.size(l)/4)},...bt(n.dims,r.dims,l)]})}},qr=(e,t,n,r,i,a)=>{e.compute(Gr(t,i??"",e.inputs[0],e.inputs[1],n,r,a))},Hr=e=>{qr(e,"Add",((e,t)=>`${e}+${t}`))},Kr=e=>{qr(e,"Div",((e,t)=>`${e}/${t}`))},Yr=e=>{qr(e,"Equal",{scalar:(e,t)=>`u32(${e}==${t})`,vector:(e,t)=>`vec4<u32>(${e}==${t})`},void 0,void 0,9)},Qr=e=>{qr(e,"Mul",((e,t)=>`${e}*${t}`))},Xr=e=>{let t=kt("input",e.inputs[0].dataType,e.inputs[0].dims).type.value;qr(e,"Pow",{scalar:(e,t)=>`pow_custom(${e},${t})`,vector:(e,t)=>`pow_vector_custom(${e},${t})`},`\n    fn pow_custom(a : ${t}, b : ${t}) -> ${t} {\n      if (b == ${t}(0.0)) {\n        return ${t}(1.0);\n      } else if (a < ${t}(0.0) && f32(b) != floor(f32(b))) {\n        return ${t}(pow(f32(a), f32(b))); // NaN\n      }\n      return select(sign(a), ${t}(1.0), round(f32(abs(b) % ${t}(2.0))) != 1.0) * ${t}(${"i32"===t?"round":""}(pow(f32(abs(a)), f32(b))));\n    }\n    fn pow_vector_custom(a : vec4<${t}>, b : vec4<${t}>) -> vec4<${t}> {\n      // TODO: implement vectorized pow\n      return vec4<${t}>(pow_custom(a.x, b.x), pow_custom(a.y, b.y), pow_custom(a.z, b.z), pow_custom(a.w, b.w));\n    }\n      `)},Zr=e=>{qr(e,"Sub",((e,t)=>`${e}-${t}`))},Jr=e=>{qr(e,"Greater",{scalar:(e,t)=>`u32(${e}>${t})`,vector:(e,t)=>`vec4<u32>(${e}>${t})`},void 0,void 0,9)},ei=e=>{qr(e,"Less",{scalar:(e,t)=>`u32(${e}<${t})`,vector:(e,t)=>`vec4<u32>(${e}<${t})`},void 0,void 0,9)},ti=e=>{qr(e,"GreaterOrEqual",{scalar:(e,t)=>`u32(${e}>=${t})`,vector:(e,t)=>`vec4<u32>(${e}>=${t})`},void 0,void 0,9)},ni=e=>{qr(e,"LessOrEqual",{scalar:(e,t)=>`u32(${e}<=${t})`,vector:(e,t)=>`vec4<u32>(${e}<=${t})`},void 0,void 0,9)}})),Qo=j((()=>{Io(),jo(),Fo(),Do(),ri=e=>{if(!e||e.length<1)throw new Error("too few inputs");let t=e[0].dataType,n=e[0].dims.length;for(let r of e){if(r.dataType!==t)throw new Error("input tensors should be one type");if(r.dims.length!==n)throw new Error("input tensors should have the same shape")}},ii=(e,t)=>`\n  fn calculateInputIndex(index: u32) -> u32 {\n    let sizeInConcatAxis = array<u32, ${e}u>(${t});\n    for (var i: u32 = 0u; i < ${e}; i += 1u ) {\n      if (index < sizeInConcatAxis[i]) {\n        return i;\n      }\n    }\n    return ${e}u;\n  }`,ai=(e,t)=>{let n=e.length,r=[];for(let i=0;i<n;++i){let a=t.setByOffset("global_idx",e[i].getByIndices("indices"));1===n?r.push(a):0===i?r.push(`if (inputIndex == ${i}u) { ${a} }`):i===n-1?r.push(`else { ${a} }`):r.push(`else if (inputIndex == ${i}) { ${a} }`)}return r.join("\n")},si=(e,t)=>{let n=0,r=0,i=new Array(e.length);for(let t=0;t<e.length;t++){let a=ht.size(e[t].dims);i[t]=a,a>n&&(n=a,r=t)}let a=e[r].dims.slice();if(t>=a.length||t<-1*a.length)throw new Error("axis specified for concat doesn't match input dimensionality");let s=t<0?a.length+t:t,o=a.slice(0);for(let t=0;t<e.length;t++){if(t===r)continue;let n=e[t].dims.slice();for(let e=0;e<a.length;e++)if(e===s)o[s]+=n[e];else if(a[e]!==n[e])throw new Error("non concat dimensions must match")}let l=ht.size(o),u=new Array(e.length),d=new Array(e.length),c=e[0].dataType,h=0,p=[],f=[],m=[{type:12,data:l}];for(let t=0;t<e.length;++t)h+=e[t].dims[s],u[t]=h,f.push(e[t].dims.length),d[t]=kt(`input${t}`,c,f[t]),p.push("rank"),m.push({type:12,data:u[t]});for(let t=0;t<e.length;++t)m.push(...bt(e[t].dims));m.push(...bt(o));let g=Et("output",c,o.length),_=g.indicesGet("indices",s),y=Array.from(Array(u.length).keys()).map((e=>`uniforms.sizeInConcatAxis${e}`)).join(",");return{name:"Concat",shaderCache:{hint:`${t}`,inputDependencies:p},getRunData:()=>({outputs:[{dims:o,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(l/64)},programUniforms:m}),getShaderSource:t=>`\n\n  ${(()=>{t.registerUniform("outputSize","u32");for(let n=0;n<e.length;n++)t.registerUniform(`sizeInConcatAxis${n}`,"u32");return t.declareVariables(...d,g)})()}\n\n  ${ii(u.length,y)}\n\n  ${t.mainStart()}\n    ${t.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n\n    var indices = ${g.offsetToIndices("global_idx")};\n\n    let inputIndex = calculateInputIndex(${_});\n    if (inputIndex != 0u) {\n      let sizeInConcatAxis = array<u32, ${u.length}u>(${y});\n      ${_} -= sizeInConcatAxis[inputIndex - 1u];\n    }\n\n    ${ai(d,g)}\n  }`}},oi=(e,t)=>{ri(e.inputs);for(let t=0;t<e.inputs.length;t++)0===ht.size(e.inputs[t].dims)&&e.inputs.slice(t,1);e.compute(si(e.inputs,t.axis))},li=e=>ut({axis:e.axis})})),Xo=j((()=>{Io(),jo(),ui=(e,t,n="f32")=>{switch(e.activation){case"Relu":return`value = max(value, ${t}(0.0));`;case"Sigmoid":return`value = (${t}(1.0) / (${t}(1.0) + exp(-value)));`;case"Clip":return`value = clamp(value, ${t}(${n}(uniforms.clip_min)), ${t}(${n}(uniforms.clip_max)));`;case"HardSigmoid":return`value = max(${t}(0.0), min(${t}(1.0), ${n}(uniforms.alpha) * value + ${n}(uniforms.beta)));`;case"LeakyRelu":return`value = select(${n}(uniforms.alpha) * value, value, value >= ${t}(0.0));`;case"":return"";default:throw new Error(`Unsupported activation ${e.activation}`)}},di=(e,t)=>{"Clip"===e.activation?t.push({type:1,data:e.clipMax},{type:1,data:e.clipMin}):"HardSigmoid"===e.activation?t.push({type:1,data:e.alpha},{type:1,data:e.beta}):"LeakyRelu"===e.activation&&t.push({type:1,data:e.alpha})},ci=(e,t)=>{"Clip"===e.activation?t.push({name:"clip_max",type:"f32"},{name:"clip_min",type:"f32"}):"HardSigmoid"===e.activation?t.push({name:"alpha",type:"f32"},{name:"beta",type:"f32"}):"LeakyRelu"===e.activation&&t.push({name:"alpha",type:"f32"})},hi=e=>{let t=e?.activation||"";if("HardSigmoid"===t){let[n,r]=e?.activation_params||[.2,.5];return{activation:t,alpha:n,beta:r}}if("Clip"===t){let[n,r]=e?.activation_params||[mt,gt];return{activation:t,clipMax:r,clipMin:n}}if("LeakyRelu"===t){let[n]=e?.activation_params||[.01];return{activation:t,alpha:n}}return{activation:t}}})),Zo=j((()=>{pi=(e,t)=>{switch(e){case 1:return t;case 2:return`vec2<${t}>`;case 3:return`vec3<${t}>`;case 4:return`vec4<${t}>`;default:throw new Error(`${e}-component is not supported.`)}},fi=e=>`\n      ${e?"value = value + getBiasByOutputCoords(coords);":""}\n      `})),Jo=j((()=>{mi=e=>`\nfn getIndexFromCoords4D(coords : vec4<i32>, shape : vec4<i32>) -> i32 {\n  return dot(coords, vec4<i32>(\n      shape.y * shape.z * shape.w, shape.z * shape.w, shape.w, 1));\n}\nfn getOutputIndexFromCoords(coords : vec4<i32>) -> i32 {\n  return dot(coords, vec4<i32>(\n    i32(${e}.x), i32(${e}.y), i32(${e}.z), 1));\n}\n`})),el=j((()=>{Io(),jo(),Do(),Xo(),Zo(),gi=(e,t)=>e?`\n        mm_Asub[inputRow][inputCol] = mm_readA(batch,\n          kStart + inputRow,\n          globalRowStart / innerElementSize + inputCol${t?", batchIndices":""});\n        `:`\n        mm_Asub[inputRow][inputCol] = mm_readA(batch,\n          globalRow + innerRow,\n          kStart / innerElementSize + inputCol${t?", batchIndices":""});\n        `,_i=(e,t)=>e?`\n        let ACached0 = mm_Asub[k * innerElementSize][localRow];\n        let ACached1 = mm_Asub[k * innerElementSize + 1][localRow];\n        let ACached2 = mm_Asub[k * innerElementSize + 2][localRow];\n        ${3===t?"":"let ACached3 = mm_Asub[k * innerElementSize + 3][localRow];"}\n        for (var i = 0; i < rowPerThread; i = i + 1) {\n          acc[i] = BCached0 * ACached0[i] + acc[i];\n          acc[i] = BCached1 * ACached1[i] + acc[i];\n          acc[i] = BCached2 * ACached2[i] + acc[i];\n          ${3===t?"":"acc[i] = BCached3 * ACached3[i] + acc[i];"}\n        }`:`\n        for (var i = 0; i < rowPerThread; i = i + 1) {\n          let ACached = mm_Asub[tileRow + i][k];\n          acc[i] = BCached0 * ACached.x + acc[i];\n          acc[i] = BCached1 * ACached.y + acc[i];\n          acc[i] = BCached2 * ACached.z + acc[i];\n          ${3===t?"":"acc[i] = BCached3 * ACached.w + acc[i];"}\n        }`,yi=(e,t,n="f32",r,i=!1,a=32,s=!1,o=32)=>{let l=t[1]*e[1],u=t[0]*e[0],d=i?l:a,c=i?a:l,h=d/t[0],p=a/t[1];if((!i||4!==h||4!==e[1])&&(i||3!==h&&4!==h)||d%t[0]!=0||a%t[1]!=0||4!==e[0])throw new Error(`If transposeA ${i} is true, innerElementSize ${h} and workPerThread[1] ${e[1]} must be 4.\n      Otherwise, innerElementSize ${h} must be 3 or 4.\n  tileAWidth ${d} must be divisible by workgroupSize[0]${t[0]}. tileInner ${a} must be divisible by workgroupSize[1] ${t[1]}. colPerThread ${e[0]} must be 4.`);return`\nvar<workgroup> mm_Asub: array<array<vec${h}<${n}>, ${d/h}>, ${c}>;\nvar<workgroup> mm_Bsub: array<array<vec4<${n}>, ${u/e[0]}>, ${a}>;\n\nconst rowPerThread = ${e[1]};\nconst colPerThread = ${e[0]};\nconst innerElementSize = ${h};\nconst tileInner = ${a};\n\n@compute @workgroup_size(${t[0]}, ${t[1]}, ${t[2]})\nfn main(@builtin(local_invocation_id) localId : vec3<u32>,\n        @builtin(global_invocation_id) globalId : vec3<u32>,\n        @builtin(workgroup_id) workgroupId : vec3<u32>) {\n  let localRow = i32(localId.y);\n  let tileRow = localRow * rowPerThread;\n  let tileCol = i32(localId.x);\n\n  let globalRow =i32(globalId.y) * rowPerThread;\n  let globalCol = i32(globalId.x);\n  let batch = ${s?"0":"i32(globalId.z)"};\n  ${r?`let batchIndices = ${r.offsetToIndices("u32(batch)")};`:""}\n  let globalRowStart = i32(workgroupId.y) * ${l};\n\n  let num_tiles = ${s?`${Math.ceil(o/a)}`:"(uniforms.dim_inner - 1) / tileInner + 1"};\n  var kStart = ${s?`i32(globalId.z) * ${o}`:"0"};\n\n  var acc: array<vec4<${n}>, rowPerThread>;\n\n  // Loop over shared dimension.\n  let tileRowB = localRow * ${p};\n  for (var t = 0; t < num_tiles; t = t + 1) {\n      // Load one tile of A into local memory.\n      for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n          let inputRow = tileRow + innerRow;\n          let inputCol = tileCol;\n          ${gi(i,r)}\n      }\n\n      // Load one tile of B into local memory.\n      for (var innerRow = 0; innerRow < ${p}; innerRow = innerRow + 1) {\n          let inputRow = tileRowB + innerRow;\n          let inputCol = tileCol;\n          mm_Bsub[inputRow][inputCol] = mm_readB(batch, kStart + inputRow, globalCol${r?", batchIndices":""});\n      }\n      kStart = kStart + tileInner;\n      workgroupBarrier();\n\n      // Compute acc values for a single thread.\n      for (var k = 0; k < tileInner / innerElementSize; k = k + 1) {\n          let BCached0 = mm_Bsub[k * innerElementSize][tileCol];\n          let BCached1 = mm_Bsub[k * innerElementSize + 1][tileCol];\n          let BCached2 = mm_Bsub[k * innerElementSize + 2][tileCol];\n          ${3===h?"":"let BCached3 = mm_Bsub[k * innerElementSize + 3][tileCol];"}\n\n          ${_i(i,h)}\n      }\n\n      workgroupBarrier();\n  }\n\n  for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n      mm_write(batch, globalRow + innerRow, globalCol, acc[innerRow]);\n  }\n}`},wi=(e,t)=>e?`\n            mm_Asub[inputRow][inputCol] = mm_readA(batch,\n              kStart + inputRow,\n              globalRowStart + inputCol${t?", batchIndices":""});\n            `:`\n            mm_Asub[inputRow][inputCol] = mm_readA(batch,\n              globalRowStart + inputRow,\n              kStart + inputCol${t?", batchIndices":""});\n            `,vi=e=>e?"let ACached = mm_Asub[k][tileRow + innerRow];":"let ACached = mm_Asub[tileRow + innerRow][k];",bi=(e,t,n="f32",r,i=!1,a=32,s=!1,o=32,l=!1)=>{let u=e[1]*t[1],d=e[0]*t[0],c=i?u:a,h=i?a:u;if(h%t[1]!=0||c%t[0]!=0||a%t[1]!=0)throw new Error(`tileAHight ${h} must be divisible by workgroupSize[1]${t[1]}, tileAWidth ${c} must be divisible by workgroupSize[0]${t[0]}, tileInner ${a} must be divisible by workgroupSize[1]${t[1]}`);let p=h/t[1],f=c/t[0],m=a/t[1],g=l?`\n    let localRow = i32(localId.y);\n    let localCol = i32(localId.x);\n    let globalRowStart = i32(workgroupId.y) * ${u};\n    let globalColStart = i32(workgroupId.x) * ${d};\n\n    // Loop over shared dimension.\n    for (var t = 0; t < num_tiles; t = t + 1) {\n      // Load one tile of A into local memory.\n      for (var inputRow = localRow; inputRow < ${h}; inputRow = inputRow + ${t[1]}) {\n        for (var inputCol = localCol; inputCol < ${c}; inputCol = inputCol + ${t[0]}) {\n          ${wi(i,r)}\n        }\n      }\n      // Load one tile of B into local memory.\n      for (var inputRow = localRow; inputRow < ${a}; inputRow = inputRow + ${t[1]}) {\n            for (var inputCol = localCol; inputCol < ${d}; inputCol = inputCol + ${t[0]}) {\n          mm_Bsub[inputRow][inputCol] = mm_readB(batch,\n            kStart + inputRow,\n            globalColStart + inputCol${r?", batchIndices":""});\n        }\n      }\n      kStart = kStart + tileInner;\n      workgroupBarrier();\n\n      // Compute acc values for a single thread.\n      var BCached : array<${n}, colPerThread>;\n      for (var k = 0; k < tileInner; k = k + 1) {\n        for (var inner = 0; inner < colPerThread; inner = inner + 1) {\n          BCached[inner] = mm_Bsub[k][localCol + inner * ${t[0]}];\n        }\n        for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n          let ACached = ${i?`mm_Asub[k][localRow + innerRow * ${t[1]}];`:`mm_Asub[localRow + innerRow * ${t[1]}][k];`}\n          for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n            acc[innerRow][innerCol] = acc[innerRow][innerCol] +\n                ACached * BCached[innerCol];\n          }\n        }\n      }\n      workgroupBarrier();\n    }\n    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n      let gRow = globalRowStart + localRow + innerRow * ${t[1]};\n      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n        let gCol = globalColStart + localCol + innerCol * ${t[0]};\n        mm_write(batch, gRow, gCol, acc[innerRow][innerCol]);\n      }\n    }\n    `:`\nlet tileRow = i32(localId.y) * rowPerThread;\nlet tileCol = i32(localId.x) * colPerThread;\n\nlet globalRow = i32(globalId.y) * rowPerThread;\nlet globalCol = i32(globalId.x) * colPerThread;\nlet globalRowStart = i32(workgroupId.y) * ${u};\n\nlet tileRowA = i32(localId.y) * ${p};\nlet tileColA = i32(localId.x) * ${f};\nlet tileRowB = i32(localId.y) * ${m};\n// Loop over shared dimension.\nfor (var t = 0; t < num_tiles; t = t + 1) {\n  // Load one tile of A into local memory.\n  for (var innerRow = 0; innerRow < ${p}; innerRow = innerRow + 1) {\n    for (var innerCol = 0; innerCol < ${f}; innerCol = innerCol + 1) {\n      let inputRow = tileRowA + innerRow;\n      let inputCol = tileColA + innerCol;\n      ${wi(i,r)}\n    }\n  }\n\n  // Load one tile of B into local memory.\n  for (var innerRow = 0; innerRow < ${m}; innerRow = innerRow + 1) {\n    for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n      let inputRow = tileRowB + innerRow;\n      let inputCol = tileCol + innerCol;\n      mm_Bsub[inputRow][inputCol] = mm_readB(batch,\n        kStart + inputRow,\n        globalCol + innerCol${r?", batchIndices":""});\n    }\n  }\n  kStart = kStart + tileInner;\n  workgroupBarrier();\n\n  // Compute acc values for a single thread.\n  var BCached : array<${n}, colPerThread>;\n  for (var k = 0; k < tileInner; k = k + 1) {\n    for (var inner = 0; inner < colPerThread; inner = inner + 1) {\n      BCached[inner] = mm_Bsub[k][tileCol + inner];\n    }\n\n    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n      ${vi(i)}\n      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n        acc[innerRow][innerCol] = acc[innerRow][innerCol] + ACached * BCached[innerCol];\n      }\n    }\n  }\n\n  workgroupBarrier();\n}\n\nfor (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n  for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n    mm_write(batch, globalRow + innerRow, globalCol + innerCol,\n        acc[innerRow][innerCol]);\n  }\n}\n`;return`\n  var<workgroup> mm_Asub : array<array<${n}, ${c}>, ${h}>;\n  var<workgroup> mm_Bsub : array<array<${n}, ${d}>, ${a}>;\n  const rowPerThread = ${e[1]};\n  const colPerThread = ${e[0]};\n  const tileInner = ${a};\n\n@compute @workgroup_size(${t[0]}, ${t[1]}, ${t[2]})\nfn main(@builtin(local_invocation_id) localId : vec3<u32>,\n        @builtin(global_invocation_id) globalId : vec3<u32>,\n        @builtin(workgroup_id) workgroupId : vec3<u32>) {\n    let batch = ${s?"0":"i32(globalId.z)"};\n    ${r?`let batchIndices = ${r.offsetToIndices("u32(batch)")};`:""}\n    let num_tiles = ${s?`${Math.ceil(o/a)}`:"(uniforms.dim_inner - 1) / tileInner + 1"};\n    var kStart = ${s?`i32(globalId.z) * ${o}`:"0"};\n\n    var acc : array<array<${n}, colPerThread>, rowPerThread>;\n\n    // Without this initialization strange values show up in acc.\n    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n        acc[innerRow][innerCol] = 0.0;\n      }\n    }\n    ${g}\n  }\n`},$i=(e,t,n,r,i,a=!1)=>{let[s,o,l]=i,[u,d,c,h]=r,p=Ot(s,l),f=Ot(o,l),m=wt(r[0].type.tensor);return`\n    fn mm_readA(batch: i32, row: i32, colIn: i32, batchIndices: ${u.type.indices}) -> ${pi(e,m)} {\n      var value = ${pi(e,m)}(0.0);\n      let col = colIn * ${e};\n      if(row < uniforms.dim_a_outer && col < uniforms.dim_inner)\n      {\n        ${(()=>{let e=d.rank,t=u.rank,n=`var aIndices: ${d.type.indices};`;for(let r=e-2-1,i=t-1;r>=0;r--,i--)n+=`\naIndices[${r}] = ${t>1?`batchIndices[${i}]`:"batchIndices"};`;return p.forEach((e=>{n+=`\naIndices[${e}] = 0;`})),n+=`\naIndices[${e-2}] = u32(row);\n                   aIndices[${e-1}] = u32(colIn);`,n})()}\n        value = ${d.getByIndices("aIndices")};\n      }\n      return value;\n    }\n\n    fn mm_readB(batch: i32, row: i32, colIn: i32, batchIndices: ${u.type.indices}) -> ${pi(e,m)} {\n      var value = ${pi(e,m)}(0.0);\n      let col = colIn * ${e};\n      if(row < uniforms.dim_inner && col < uniforms.dim_b_outer)\n      {\n        ${(()=>{let e=c.rank,t=u.rank,n=`var bIndices: ${c.type.indices};`;for(let r=e-2-1,i=t-1;r>=0;r--,i--)n+=`\nbIndices[${r}] = ${t>1?`batchIndices[${i}]`:"batchIndices"};`;return f.forEach((e=>{n+=`\nbIndices[${e}] = 0;`})),n+=`\nbIndices[${e-2}] = u32(row);\n                   bIndices[${e-1}] = u32(colIn);`,n})()}\n        value = ${c.getByIndices("bIndices")};\n      }\n      return value;\n    }\n\n    fn mm_write(batch: i32, row: i32, colIn: i32, valueIn: ${pi(e,m)}) {\n      let col = colIn * ${e};\n      if (row < uniforms.dim_a_outer && col < uniforms.dim_b_outer) {\n        var value = valueIn;\n        let coords = vec3<i32>(batch, row, colIn);\n        ${t?`value = value + ${a?"bias[colIn]":`${pi(e,m)}(bias[row])`};`:""}\n        ${n}\n        ${h.setByIndices("vec3<u32>(coords)","value")}\n      }\n    }\n    `},xi=(e,t,n,r,i=!1)=>{let a=e[0].dims,s=e[1].dims,o=a.slice(0,-2),l=s.slice(0,-2),u=r?r.slice(0,-2):n.slice(0,-2),d=ht.size(u),c=a[a.length-2],h=a[a.length-1],p=s[s.length-1],f=h%4==0&&p%4==0,m=c<=8?[4,1,1]:[4,4,1],g=[8,8,1],_=[Math.ceil(p/g[0]/m[0]),Math.ceil(c/g[1]/m[1]),Math.ceil(d/g[2]/m[2])],y=f?4:1,w=[...o,c,h/y],v=w.length,b=[...l,h,p/y],$=b.length,x=[d,c,p/y],C=[{type:6,data:c},{type:6,data:p},{type:6,data:h}];di(t,C),C.push(...bt(u,w,b));let T=["rank","rank"],S=e.length>2;S&&(C.push(...bt(e[2].dims)),T.push("rank")),C.push(...bt(x));return{name:"MatMul",shaderCache:{hint:`${m};${t.activation};${f};${i}`,inputDependencies:T},getRunData:()=>({outputs:[{dims:n,dataType:e[0].dataType}],dispatchGroup:{x:_[0],y:_[1],z:_[2]},programUniforms:C}),getShaderSource:n=>{let r=u.length,a=At("batchDims",e[0].dataType,r,1),s=wt(e[0].dataType),d=kt("a",e[0].dataType,v,y),c=kt("b",e[1].dataType,$,y),h=Et("result",e[0].dataType,x.length,y),p=[d,c];if(S){let t=i?y:1;p.push(kt("bias",e[2].dataType,e[2].dims.length,t))}let _=[{name:"dim_a_outer",type:"i32"},{name:"dim_b_outer",type:"i32"},{name:"dim_inner",type:"i32"}];ci(t,_);let w=wt(h.type.tensor),b=ui(t,h.type.value,w),C=$i(y,S,b,[a,d,c,h],[o,l,u],i);return`\n  ${n.registerUniforms(_).registerInternalVariables(a).declareVariables(...p,h)}\n  ${C}\n  ${f?yi(m,g,s,a):bi(m,g,s,a)}\n                   `}}}})),tl=j((()=>{Io(),Oo(),Do(),Xo(),Zo(),Jo(),el(),Ci=(e,t,n,r,i=!1,a,s=4,o=4,l=4,u="f32")=>{let d=e?"\n    let coord = vec4<i32>(batch, xRow, xCol, xCh);\n    ":"\n    let coord = vec4<i32>(batch, xCh, xRow, xCol);\n    ",c=e?"\n    let coords = vec4<i32>(\n      batch,\n      row / outWidth,\n      row % outWidth,\n      col);\n    ":"\n    let coords = vec4<i32>(\n      batch,\n      row,\n      col / outWidth,\n      col % outWidth);\n    ",h=e?"i32(uniforms.x_shape[1])":"i32(uniforms.x_shape[2])",p=e?"i32(uniforms.x_shape[2])":"i32(uniforms.x_shape[3])",f=e?"row":"col",m=e?"col":"row",g=`\n    let inChannels = i32(uniforms.w_shape[2]);\n    let outWidth = ${e?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};\n    let outRow = ${f} / outWidth;\n    let outCol = ${f} % outWidth;\n\n    let WRow = ${m} / (i32(uniforms.w_shape[1]) * inChannels);\n    let WCol = ${m} / inChannels % i32(uniforms.w_shape[1]);\n    let xRow = outRow * uniforms.stride[0] + uniforms.dilation[0] * WRow - uniforms.pad[0];\n    let xCol = outCol * uniforms.stride[1] + uniforms.dilation[1] * WCol - uniforms.pad[1];\n    let xCh = ${m} % inChannels;\n    var resData = ${pi(s,u)}(0.0);\n    // The bounds checking is always needed since we use it to pad zero for\n    // the 'same' padding type.\n    if (xRow >= 0 && xRow < ${h} && xCol >= 0 && xCol < ${p}) {\n      ${d}\n      let xIndex = getIndexFromCoords4D(coord, vec4<i32>(uniforms.x_shape));\n      ${(e=>{switch(e){case 1:return"resData = x[xIndex];";case 3:return`resData = vec3<${u}>(x[xIndex], x[xIndex + 1], x[xIndex + 2]);`;case 4:return"resData = x[xIndex / 4];";default:throw new Error(`innerElementSize ${e} is not supported.`)}})(s)}\n    }\n    return resData;`,_=e?t&&r?`\n    let col = colIn * ${s};\n    ${g}`:`\n    let col = colIn * ${s};\n    if (row < uniforms.dim_a_outer && col < uniforms.dim_inner) {\n      ${g}\n    }\n    return ${pi(s,u)}(0.0);`:r&&n?`\n    let col = colIn * ${s};\n    ${g}`:`\n    let col = colIn * ${s};\n    if (row < uniforms.dim_inner && col < uniforms.dim_b_outer) {\n      ${g}\n    }\n    return ${pi(s,u)}(0.0);`,y=`${(e=>{switch(e){case 1:return"return w[row * i32(uniforms.w_shape[3]) + colIn];";case 4:return"return w[row * i32(uniforms.w_shape[3]) / 4 + colIn];";default:throw new Error(`innerElementSize ${e} is not supported.`)}})(o)}`,w=pi(l,u),v=pi(e?s:o,u),b=pi(e?o:s,u),$=ui(a,w,u);return`\n    fn mm_readA(batch: i32, row : i32, colIn : i32) -> ${v} {\n      ${e?_:y}\n    }\n\n    fn mm_readB(batch: i32, row : i32, colIn : i32) -> ${b} {\n      ${e?y:_}\n    }\n\n    fn mm_write(batch: i32, row : i32, colIn : i32, valueIn : ${w}) {\n      let col = colIn * ${l};\n      if (row < uniforms.dim_a_outer && col < uniforms.dim_b_outer)\n      {\n      var value = valueIn;\n      let outWidth = ${e?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};\n      ${c}\n      ${fi(i)}\n      ${$}\n      setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);\n      }\n    }`},Ti=(e,t,n,r,i,a,s,o)=>{let l="NHWC"===t.format,u=l?e[0].dims[3]:e[0].dims[1],d=n[0],c=l?n[2]:n[3],h=l?n[1]:n[2],p=l?n[3]:n[1],f=l&&(u%4==0||u%3==0)&&p%4==0,m=l?p:c*h,g=l?c*h:p,_=[8,8,1],y=r<=8?[4,1,1]:[4,4,1],w=[Math.ceil(m/_[0]/y[0]),Math.ceil(g/_[1]/y[1]),Math.ceil(d/_[2]/y[2])];et("verbose",(()=>`[conv2d_mm_webgpu] dispatch = ${w}`));let v=f?l&&u%4!=0?3:4:1,b=_[1]*y[1],$=_[0]*y[0],x=Math.max(_[0]*v,_[1]),C=r%b==0,T=i%$==0,S=a%x==0,M=f?[v,4,4]:[1,1,1],k=[{type:6,data:r},{type:6,data:i},{type:6,data:a},{type:6,data:[t.pads[0],t.pads[1]]},{type:6,data:t.strides},{type:6,data:t.dilations}];di(t,k),k.push(...bt(e[0].dims,e[1].dims));let E=["rank","rank"];s&&(k.push(...bt(e[2].dims)),E.push("rank")),k.push(...bt(n));return{name:"Conv2DMatMul",shaderCache:{hint:`${t.cacheKey};${v};${f};${C};${T};${S};${b};${$};${x}`,inputDependencies:E},getRunData:()=>({outputs:[{dims:n,dataType:e[0].dataType}],dispatchGroup:{x:w[0],y:w[1],z:w[2]},programUniforms:k}),getShaderSource:r=>{let i=[{name:"dim_a_outer",type:"i32"},{name:"dim_b_outer",type:"i32"},{name:"dim_inner",type:"i32"},{name:"pad",type:"i32",length:2},{name:"stride",type:"i32",length:2},{name:"dilation",type:"i32",length:2}];ci(t,i);let a=f?4:1,u=wt(e[0].dataType),d=`\n      fn setOutputAtIndex(flatIndex : i32, value : ${f?`vec4<${u}>`:u}) {\n        result[flatIndex] = ${f?`vec4<${u}>`:u}(value);\n      }\n      fn setOutputAtCoords(d0 : i32, d1 : i32, d2 : i32, d3 : i32, value : ${f?`vec4<${u}>`:u}) {\n        let flatIndex = getOutputIndexFromCoords(vec4<i32>(d0, d1, d2, d3));\n        setOutputAtIndex(flatIndex ${f?"/ 4":""}, value);\n      }`,c=[kt("x",e[0].dataType,e[0].dims.length,3===v?1:v),kt("w",e[1].dataType,e[1].dims.length,a)],h=Et("result",e[0].dataType,n.length,a);if(s){let t=kt("bias",e[2].dataType,e[2].dims.length,a);c.push(t),d+=`\n        fn getBiasByOutputCoords(coords : vec4<i32>) -> ${f?`vec4<${u}>`:u} {\n          return bias[coords.${l?"w":"y"}${f?"/ 4":""}];\n        }`}return`\n        ${mi("uniforms.result_strides")}\n        //struct Uniforms { xShape : vec4<i32>, wShape : vec4<i32>, outShape : vec4<i32>,\n        //  outShapeStrides: vec3<i32>, filterDims : vec2<i32>, pad : vec2<i32>, stride : vec2<i32>,\n        //  dilation : vec2<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32 };\n        ${r.registerUniforms(i).declareVariables(...c,h)}\n        ${d}\n        ${Ci(l,C,T,S,s,t,M[0],M[1],M[2],u)}\n        ${f?yi(y,_,u,void 0,!l,x):bi(y,_,u,void 0,!l,x,!1,void 0,o)}`}}}})),nl=j((()=>{Io(),jo(),Do(),il(),Xo(),Si=(e,t,n)=>{let r=e.length>2,i=r?"value += b[output_channel];":"",a=e[0].dims,s=e[1].dims,o=s[0]/t.group,l="NHWC"===t.format,u=Ai(a,s,t.dilations,t.pads,t.strides,l),d=ht.size(u),c=[{type:12,data:d},{type:12,data:t.dilations},{type:12,data:[t.strides[0],t.strides[1]]},{type:12,data:[t.pads[0],t.pads[1]]},{type:12,data:o}];di(t,c),c.push(...bt(a,s,u));let h=["rank","rank"];r&&(c.push(...bt(e[2].dims)),h.push("rank")),c.push(...bt(u));return{name:"GroupedConv",shaderCache:{hint:t.cacheKey,inputDependencies:h},getRunData:()=>({outputs:[{dims:n?n(u):u,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(d/64)},programUniforms:c}),getShaderSource:n=>{let o=Et("output",e[0].dataType,u.length),d=wt(o.type.tensor),c=ui(t,o.type.value,d),h=kt("x",e[0].dataType,a.length),p=kt("w",e[1].dataType,s.length),f=[h,p];r&&f.push(kt("b",e[2].dataType,e[2].dims));let m=[{name:"output_size",type:"u32"},{name:"dilations",type:"u32",length:t.dilations.length},{name:"strides",type:"u32",length:2},{name:"pads",type:"u32",length:2},{name:"output_channels_per_group",type:"u32"}];return ci(t,m),`\n  ${n.registerUniforms(m).declareVariables(...f,o)}\n\n  ${n.mainStart()}\n    ${n.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n\n    let outputIndices = ${o.offsetToIndices("global_idx")};\n    let batch: u32 = outputIndices[0];\n    let output_channel: u32 = outputIndices[${l?3:1}];\n    let xRCCorner: vec2<u32> = vec2<u32>(outputIndices[${l?1:2}], outputIndices[${l?2:3}]) * uniforms.strides - uniforms.pads;\n    let group_id: u32 = output_channel / uniforms.output_channels_per_group;\n\n    var value: ${o.type.value} = ${o.type.value}(0);\n    for (var wInChannel: u32 = 0u; wInChannel < uniforms.w_shape[1]; wInChannel++) {\n      let input_channel = group_id * uniforms.w_shape[1] + wInChannel;\n      for (var wHeight: u32 = 0u; wHeight < uniforms.w_shape[2]; wHeight++) {\n        let xHeight = xRCCorner.x + wHeight * uniforms.dilations[0];\n\n        if (xHeight < 0u || xHeight >= uniforms.x_shape[${l?1:2}]) {\n          continue;\n        }\n\n        for (var wWidth: u32 = 0u; wWidth < uniforms.w_shape[3]; wWidth++) {\n          let xWidth = xRCCorner.y + wWidth * uniforms.dilations[1];\n          if (xWidth < 0u || xWidth >= uniforms.x_shape[${l?2:3}]) {\n            continue;\n          }\n\n          let xVal = ${l?h.get("batch","xHeight","xWidth","input_channel"):h.get("batch","input_channel","xHeight","xWidth")};\n          let wVal = ${p.get("output_channel","wInChannel","wHeight","wWidth")};\n          value += xVal*wVal;\n        }\n      }\n    }\n    ${i}\n    ${c}\n    ${o.setByOffset("global_idx","value")}\n  }`}}}})),rl=j((()=>{Io(),jo(),el(),Do(),Xo(),Mi=(e,t,n,r,i=!1)=>{let a=e[0].dims,s=e[1].dims,o=a[a.length-2],l=s[s.length-1],u=a[a.length-1],d=$t(l),c=$t(u),h=$t(o),p=ht.size(n)/d/h,f=e.length>2,m=r?r.slice(0,-2):n.slice(0,-2),g=[ht.size(m),o,l],_=[{type:12,data:p},{type:12,data:o},{type:12,data:l},{type:12,data:u}];di(t,_),_.push(...bt(m,a,s)),f&&_.push(...bt(e[2].dims)),_.push(...bt(g));return{name:"MatMulNaive",shaderCache:{hint:`${t.activation};${d};${c};${h};${i}`,inputDependencies:f?["rank","rank","rank"]:["rank","rank"]},getRunData:()=>({outputs:[{dims:n,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(p/64)},programUniforms:_}),getShaderSource:r=>{let o=At("batch_dims",e[0].dataType,m.length),l=kt("a",e[0].dataType,a.length,c),u=kt("b",e[1].dataType,s.length,d),p=Et("output",e[0].dataType,g.length,d),_=wt(p.type.tensor),y=ui(t,p.type.value,_),w=[l,u],v="";if(f){let t=i?d:1;w.push(kt("bias",e[2].dataType,e[2].dims.length,t)),v=""+(i?`value += bias[col / ${t}];`:`value += ${p.type.value}(bias[row + i]);`)}let b=a.slice(0,-2),$=s.slice(0,-2),x=Ot(b,m),C=Ot($,m),T=[{name:"output_size",type:"u32"},{name:"M",type:"u32"},{name:"N",type:"u32"},{name:"K",type:"u32"}];ci(t,T);let S=(e,t)=>{let n=e.rank,r=e.name;if(2===n)return`var ${r}_indices = ${e.type.indices}(0u, 0u);`;let i=o.rank,a=`var ${r}_indices: ${e.type.indices};`;for(let e=n-2-1,t=i-1;e>=0;e--,t--)a+=`\n${r}_indices[${e}] = ${i>1?`batch_indices[${t}]`:"batch_indices"};`;return t.forEach((e=>{a+=`\n${r}_indices[${e}] = 0;`})),a+=`${r}_indices[${n-2}] = 0u;\n                     ${r}_indices[${n-1}] = 0u;`,a};return`\n  ${r.registerUniforms(T).registerInternalVariables(o).declareVariables(...w,p)}\n  ${r.mainStart()}\n    ${r.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n    let col = (global_idx % (uniforms.N / ${d})) * ${d};\n    var index1 = global_idx / (uniforms.N / ${d});\n    let stride1 = uniforms.M / ${h};\n    let row = (index1 % stride1) * ${h};\n    let batch = index1 / stride1;\n\n    ${2===n.length?"":`let batch_indices = ${o.offsetToIndices("batch")};`}\n    ${S(l,x)}\n    let a_offset = ${l.indicesToOffset("a_indices")};\n    ${S(u,C)}\n    let b_offset = ${u.indicesToOffset("b_indices")};\n    var values: array<${p.type.value}, ${h}>;\n    for (var k: u32 = 0u; k < uniforms.K; k = k + ${c}) {\n      ${(()=>{let e=`var a_data: ${l.type.value};`;for(let t=0;t<c;t++)e+=`\n              let b_data${t} = b[(b_offset + (k + ${t}) * uniforms.N + col) / ${d}];`;for(let t=0;t<h;t++){e+=`a_data = a[(a_offset + (row + ${t}) * uniforms.K + k) / ${c}];`;for(let n=0;n<c;n++)e+=`\n            values[${t}] = fma(${u.type.value}(a_data${1===c?"":`[${n}]`}), b_data${n}, values[${t}]);\n`}return e})()}\n    }\n    for (var i = 0u; i < ${h}u; i++) {\n      var value = values[i];\n      ${v}\n      ${y}\n      let cur_indices = ${p.type.indices}(batch, row + i, col);\n      let offset = ${p.indicesToOffset("cur_indices")};\n      ${p.setByOffset(`offset / ${d}`,"value")};\n    }\n  }\n  `}}},ki=e=>{if(!e||2!==e.length)throw new Error("MatMul requires 2 inputs.");if(e[0].dims[e[0].dims.length-1]!==e[1].dims[e[1].dims.length-2])throw new Error("shared dimension does not match.")},Ei=e=>{ki(e.inputs);let t=ct.calcShape(e.inputs[0].dims,e.inputs[1].dims,!0);if(!t)throw new Error("Can't use matmul on the given tensors");let n=t[t.length-1],r=e.inputs[0].dims[e.inputs[0].dims.length-1];n<8&&r<8?e.compute(Mi(e.inputs,{activation:""},t)):e.compute(xi(e.inputs,{activation:""},t))}})),il=j((()=>{jo(),tl(),el(),nl(),Xo(),rl(),Lo(),Ai=(e,t,n,r,i,a)=>{let s=e[0],o=e.slice(a?1:2,a?3:4),l=o.length,u=t[0],d=t.slice(2).map(((e,t)=>e+(e-1)*(n[t]-1))),c=o.map(((e,t)=>e+r[t]+r[t+l])).map(((e,t)=>Math.floor((e-d[t]+i[t])/i[t])));return c.splice(0,0,s),c.splice(a?3:1,0,u),c},Ii=[2,3,1,0],Pi=(e,t)=>{if(!e||2!==e.length&&3!==e.length)throw new Error("Conv requires 2 or 3 inputs");if(4!==e[0].dims.length&&3!==e[0].dims.length)throw new Error("currently only support conv 1D and 2D");if(e[0].dims.length!==e[1].dims.length)throw new Error("filter does not have same dimension as input");if(e[0].dims["NHWC"===t.format?e[0].dims.length-1:1]!==e[1].dims[1]*t.group)throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");if(3===e.length&&(1!==e[2].dims.length||e[1].dims[0]!==e[2].dims[0]))throw new Error("invalid bias");let n=e[0].dims.length-2;if(t.dilations.length!==n)throw new Error(`dilations should be ${n}D`);if(t.strides.length!==n)throw new Error(`strides should be ${n}D`);if(t.pads.length!==2*n)throw new Error(`pads should be ${2*n}D`);if(0!==t.kernelShape.length&&t.kernelShape.length!==e[1].dims.length-2)throw new Error("invalid kernel shape")},Oi=(e,t)=>{let n=e.kernelShape.slice();for(let e=2;e<t[1].dims.length;++e)0===n[e-2]&&(n[e-2]=t[1].dims[e]);let r=e.pads.slice();pt.adjustPadsBasedOnAutoPad(t[0].dims,e.strides,e.dilations,n,r,"NHWC"===e.format,e.autoPad);let i=Object.assign({},e);return Object.assign(i,{kernelShape:n,pads:r}),i},zi=e=>{let t=hi(e),n=e.format;return{autoPad:["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][e.auto_pad],format:n,dilations:e.dilations,group:e.group,kernelShape:e.kernel_shape,pads:e.pads,strides:e.strides,wIsConst:e.w_is_const(),...t,cacheKey:`${e.format};${t.activation};`}},Bi=(e,t,n)=>{let r=Oi(n,t),i="NHWC"===n.format;if(1!==n.group)return void e.compute(Si(t,r));let a=3===t.length,s=t[0].dims[i?1:2],o=t[0].dims[i?2:3],l=t[0].dims[i?3:1],u=t[1].dims[2],d=t[1].dims[3],c=Ai(t[0].dims,t[1].dims,n.dilations,r.pads,n.strides,i),h=c[i?1:2],p=c[i?2:3],f=c[i?3:1],m=i&&u===s&&d===o&&0===n.pads[0]&&0===n.pads[1];if(m||1===u&&1===d&&1===n.dilations[0]&&1===n.dilations[1]&&1===n.strides[0]&&1===n.strides[1]&&0===n.pads[0]&&0===n.pads[1]){let u,d,g,_=c[0],y=[];if(i){let r=e.kernelCustomData.wT??e.compute(jt(t[1],Ii),{inputs:[1],outputs:[n.wIsConst?-2:-1]})[0];if(n.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=r),m){let e=s*o*l;u=t[0].reshape([1,_,e]),d=r.reshape([1,e,f]),g=[1,_,f]}else u=t[0].reshape([_,s*o,l]),d=r.reshape([1,l,f]),g=[_,h*p,f];y.push(u),y.push(d)}else u=t[0].reshape([_,l,s*o]),d=t[1].reshape([1,f,l]),g=[_,f,h*p],y.push(d),y.push(u);a&&y.push(t[2]);let w=g[2],v=y[0].dims[y[0].dims.length-1];return void(w<8&&v<8?e.compute(Mi(y,r,c,g,i),{inputs:y}):e.compute(xi(y,r,c,g,i),{inputs:y}))}let g=e.kernelCustomData.wT??e.compute(jt(t[1],Ii),{inputs:[1],outputs:[n.wIsConst?-2:-1]})[0];n.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=g);let _=[t[0],g];a&&_.push(t[2]);let y=i?h*p:f,w=i?f:h*p,v=u*d*l;e.compute(Ti(_,r,c,y,w,v,a,!0),{inputs:_})},Ri=(e,t)=>{let n="NHWC"===t.format,r=[e.inputs[0].reshape(n?[e.inputs[0].dims[0],1,e.inputs[0].dims[1],e.inputs[0].dims[2]]:[e.inputs[0].dims[0],e.inputs[0].dims[1],1,e.inputs[0].dims[2]]),e.inputs[1].reshape([e.inputs[1].dims[0],e.inputs[1].dims[1],1,e.inputs[1].dims[2]])];3===e.inputs.length&&r.push(e.inputs[2]);let i=[0,t.pads[0],0,t.pads[1]],a=[1].concat(t.strides),s=[1].concat(t.dilations),o=[1].concat(t.kernelShape),l=Oi({...t,pads:i,strides:a,dilations:s,kernelShape:o},r);e.compute(Si(r,l,(e=>n?[e[0],e[2],e[3]]:[])))},Fi=(e,t)=>{Pi(e.inputs,t),3===e.inputs[0].dims.length?Ri(e,t):Bi(e,e.inputs,t)}})),al=j((()=>{Io(),Oo(),Do(),Xo(),Zo(),Jo(),el(),ji=(e,t=!1,n,r=4)=>{let i=pi(r,"f32"),a=e?"\n    let coords = vec4<i32>(\n      batch,\n      row / outWidth,\n      row % outWidth,\n      col);\n    ":"\n    let coords = vec4<i32>(\n      batch,\n      row,\n      col / outWidth,\n      col % outWidth);\n    ",s=e?"row":"col",o=e?"col":"row",l=`\n      let inChannels = ${e?"i32(uniforms.x_shape[3])":"i32(uniforms.x_shape[1])"};\n      let outWidth = ${e?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};\n      let outRow = ${s} / outWidth;\n      let outCol = ${s} % outWidth;\n\n      let WRow = ${o} / (uniforms.filter_dims[1] * inChannels);\n      let WCol = ${o} / inChannels % uniforms.filter_dims[1];\n      let xR = f32(outRow - uniforms.pads[0] + uniforms.dilations[0] * WRow) / f32(uniforms.strides[0]);\n      let xC = f32(outCol - uniforms.pads[1] + uniforms.dilations[1] * WCol) / f32(uniforms.strides[1]);\n      if (xR < 0.0 || xR >= f32(${e?"i32(uniforms.x_shape[1])":"i32(uniforms.x_shape[2])"}) || fract(xR) > 0.0) {\n        return ${i}(0.0);\n      }\n      if (xC < 0.0 || xC >= f32(${e?"i32(uniforms.x_shape[2])":"i32(uniforms.x_shape[3])"}) || fract(xC) > 0.0) {\n        return ${i}(0.0);\n      }\n      let iXR = i32(xR);\n      let iXC = i32(xC);\n      let xCh = ${o} % inChannels;\n      ${e?"\n      let coord = vec4<i32>(batch, iXR, iXC, xCh);\n      ":"\n      let coord = vec4<i32>(batch, xCh, iXR, iXC);\n      "}\n      return x[getIndexFromCoords4D(coord, vec4<i32>(uniforms.x_shape))/${r}];`,u=e?`\n      let col = colIn * ${r};\n      if (row < uniforms.dim_a_outer && col < uniforms.dim_inner) {\n        ${l}\n      }\n      return ${i}(0.0);`:`\n      let col = colIn * ${r};\n      if (row < uniforms.dim_inner && col < uniforms.dim_b_outer) {\n        ${l}\n      }\n      return ${i}(0.0);`,d=`\n      let col = colIn * ${r};\n      let inChannels = ${e?"i32(uniforms.x_shape[3])":"i32(uniforms.x_shape[1])"};\n      let coordX = uniforms.filter_dims[0] - 1 - row / (uniforms.filter_dims[1] * inChannels);\n      let coordY = uniforms.filter_dims[1] - 1 - (row / inChannels) % uniforms.filter_dims[1];\n      if (${e?"row < uniforms.dim_inner && col < uniforms.dim_b_outer":"row < uniforms.dim_inner && col < uniforms.dim_a_outer"}  && coordX >= 0 && coordY >= 0) {\n        let rowInner = row % inChannels;\n        let coord = vec4<i32>(coordX, coordY, col, rowInner);\n        ${(e=>{switch(e){case 1:return"return w[getIndexFromCoords4D(coord, vec4<i32>(uniforms.w_shape))];";case 4:return"\n            let coord1 = vec4<i32>(coordX, coordY, col + 1, rowInner);\n            let coord2 = vec4<i32>(coordX, coordY, col + 2, rowInner);\n            let coord3 = vec4<i32>(coordX, coordY, col + 3, rowInner);\n            let v0 = w[getIndexFromCoords4D(coord, vec4<i32>(uniforms.w_shape))];\n            let v1 = w[getIndexFromCoords4D(coord1, vec4<i32>(uniforms.w_shape))];\n            let v2 = w[getIndexFromCoords4D(coord2, vec4<i32>(uniforms.w_shape))];\n            let v3 = w[getIndexFromCoords4D(coord3, vec4<i32>(uniforms.w_shape))];\n            return vec4<f32>(v0, v1, v2, v3);\n            ";default:throw new Error(`innerElementSize ${e} is not supported.`)}})(r)}\n      }\n      return ${i}(0.0);\n      `,c=ui(n,i);return`\n  fn mm_readA(batch: i32, row : i32, colIn : i32) -> ${i} {\n    ${e?u:d}\n  }\n\n  fn mm_readB(batch: i32, row : i32, colIn : i32) -> ${i} {\n    ${e?d:u}\n  }\n\n  fn mm_write(batch: i32, row : i32, colIn : i32, valueInput : ${i}) {\n    let col = colIn * ${r};\n    if (row < uniforms.dim_a_outer && col < uniforms.dim_b_outer) {\n      var value = valueInput;\n      let outWidth = ${e?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};\n      ${a}\n      ${fi(t)}\n      ${c}\n      result[getIndexFromCoords4D(coords, vec4<i32>(uniforms.result_shape))/${r}] = value;\n    }\n  }`},Di=(e,t,n,r,i,a,s,o)=>{let l="NHWC"===t.format,u=l?e[0].dims[3]:e[0].dims[1],d=n[0],c=l?n[2]:n[3],h=l?n[1]:n[2],p=l?n[3]:n[1],f=l?u%4==0&&p%4==0:c%4==0&&p%4==0,m=l?p:c*h,g=l?c*h:p,_=f?[8,8,1]:[m<=4||g<=4?4:16,m>4&&g<=4?4:16,1],y=f?[4,4,1]:[m<=4?1:4,m>4&&g<=4?1:4,1],w=[Math.ceil(m/_[0]/y[0]),Math.ceil(g/_[1]/y[1]),Math.ceil(d/_[2]/y[2])];et("verbose",(()=>`[conv_backprop_mm_webgpu] dispatch = ${w}`));let v=f?4:1,b=Math.max(_[0]*v,_[1]),$=f?4:1,x=[t.kernelShape[l?1:2],t.kernelShape[l?2:3]],C=[x[0]+(t.dilations[0]<=1?0:(x[0]-1)*(t.dilations[0]-1)),x[1]+(t.dilations[1]<=1?0:(x[1]-1)*(t.dilations[1]-1))],T=[C[0]-1-Math.floor((t.pads[0]+t.pads[2])/2),C[1]-1-Math.floor((t.pads[1]+t.pads[3])/2)],S=[{type:6,data:r},{type:6,data:i},{type:6,data:a},{type:6,data:t.strides},{type:6,data:t.dilations},{type:6,data:x},{type:6,data:T}];di(t,S),S.push(...bt(e[0].dims,e[1].dims));let M=["rank","rank"];s&&(S.push(...bt(e[2].dims)),M.push("rank")),S.push(...bt(n));return{name:"Conv2DTransposeMatMul",shaderCache:{hint:`${t.cacheKey};${y};${_};${f}`,inputDependencies:M},getRunData:()=>({outputs:[{dims:n,dataType:e[0].dataType}],dispatchGroup:{x:w[0],y:w[1],z:w[2]},programUniforms:S}),getShaderSource:r=>{let i=kt("x",e[0].dataType,e[0].dims.length,$),a=kt("w",e[1].dataType,e[1].dims.length,1),u=Et("result",e[0].dataType,n.length,$),d=[i,a],c="";if(s){let t=kt("bias",e[2].dataType,e[2].dims.length,$);d.push(t),c+=`\n          fn getBiasByOutputCoords(coords : vec4<i32>) -> ${f?"vec4<f32>":"f32"} {\n            return bias[coords.${l?"w":"y"}${f?"/ 4":""}];\n          }`}let h=[{name:"dim_a_outer",type:"i32"},{name:"dim_b_outer",type:"i32"},{name:"dim_inner",type:"i32"},{name:"strides",type:"i32",length:2},{name:"dilations",type:"i32",length:2},{name:"filter_dims",type:"i32",length:x.length},{name:"pads",type:"i32",length:T.length}];return ci(t,h),`\n        ${mi("uniforms.result_strides")}\n        ${r.registerUniforms(h).declareVariables(...d,u)};\n        ${c}\n        ${ji(l,s,t,v)}\n        ${f?yi(y,_,"f32",void 0,!l,b):bi(y,_,"f32",void 0,!l,b,!1,void 0,o)}`}}}})),sl=j((()=>{Io(),Oo(),jo(),Do(),Li=(e,t,n,r,i,a=!1,s,o,l=!1)=>{let u=l?1:2,d=l?2:3,c=l?3:1,h=a?2:1,p=`\n  fn setOutputAtIndex(flatIndex : u32, value : ${a?`vec4<${s}>`:s}) {\n    result[flatIndex] = ${a?`vec4<${s}>`:s}(value);\n  }`;r&&(p+=`\n    fn getBiasByOutputCoords(coords : vec4<u32>) -> ${a?`vec4<${s}>`:s} {\n      return bias[coords.${l?"w":"y"}${a?"/ 4":""}];\n    }`);let f=a?4:1,m=kt("W",t[1].dataType,t[1].dims.length,f),g=kt("Dy",t[0].dataType,t[0].dims.length,f),_=[g,m];r&&_.push(kt("bias",t[2].dataType,[n[c]].length,f));let y=Et("result",t[0].dataType,n.length,f),w=`{\n        let batch: u32 = ${i?"global_id.z":"workgroup_id.z"} / uniforms.result_shape[1];\n        let r = ${i?"global_id.z":"workgroup_id.z"} % uniforms.result_shape[1];\n        let c = ${i?"global_id.y":"workgroup_id.y"} * ${h};\n        let d1: u32 = ${i?"global_id.x":"workgroup_id.x"} * 4;\n\n        let dyCorner = vec2<i32>(i32(r), i32(c)) - vec2<i32>(uniforms.pads);\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        var dotProd: array<vec4<${s}>, ${h}>;\n        for (var i = 0; i < ${h}; i++) {\n          dotProd[i] = vec4<${s}>(0.0);\n        }\n        for (var wR: u32 = 0; wR < uniforms.filter_dims[0]; wR = wR + 1) {\n          var dyR = (${s}(dyCorner.x) + ${s}(wR)) / ${s}(uniforms.strides.x);\n          let wRPerm = uniforms.filter_dims[0] - 1 - wR;\n          if (dyR < 0.0 || dyR >= ${s}(uniforms.Dy_shape[1]) ||\n              fract(dyR) > 0.0 || wRPerm < 0) {\n            continue;\n          }\n          let idyR: u32 = u32(dyR);\n\n          for (var wC: u32 = 0; wC < uniforms.filter_dims[1]; wC = wC + 1) {\n            let dyC = (${s}(dyCorner.y) + ${s}(wC)) / ${s}(uniforms.strides.y);\n            let dyC2 = (${s}(dyCorner.y) + 1.0 + ${s}(wC)) / ${s}(uniforms.strides.y);\n            let wCPerm = uniforms.filter_dims[1] - 1 - wC;\n            if (wCPerm < 0) {\n              continue;\n            }\n            var bDyCVal = true;\n            var bDyCVal2 = true;\n            if (dyC < 0.0 || dyC >= ${s}(uniforms.Dy_shape[2]) ||\n                fract(dyC) > 0.0) {\n              bDyCVal = false;\n            }\n            if (dyC2 < 0.0 || dyC2 >= ${s}(uniforms.Dy_shape[2]) ||\n                fract(dyC2) > 0.0) {\n              bDyCVal2 = false;\n            }\n\n            let idyC: u32 = u32(dyC);\n            let idyC2: u32 = u32(dyC2);\n            if (bDyCVal && bDyCVal2) {\n              let d2Length = uniforms.Dy_shape[3];\n              for (var d2 :u32 = 0; d2 < d2Length; d2 = d2 + 4) {\n                let wValue0 = ${m.get("u32(wRPerm)","u32(wCPerm)","d1","d2")};\n                let wValue1 = ${m.get("u32(wRPerm)","u32(wCPerm)","d1 + 1","d2")};\n                let wValue2 = ${m.get("u32(wRPerm)","u32(wCPerm)","d1 + 2","d2")};\n                let wValue3 = ${m.get("u32(wRPerm)","u32(wCPerm)","d1 + 3","d2")};\n\n                var xValue = ${g.get("batch","idyR","idyC","d2")};\n                let tmpval = vec4<${s}>(dot(xValue, wValue0),\n                                      dot(xValue, wValue1),\n                                      dot(xValue, wValue2),\n                                      dot(xValue, wValue3));\n                dotProd[0] = dotProd[0] + tmpval;\n\n                xValue =  ${g.get("batch","idyR","idyC2","d2")};\n\n                dotProd[1] = dotProd[1] + vec4<${s}>(dot(xValue, wValue0),\n                                                    dot(xValue, wValue1),\n                                                    dot(xValue, wValue2),\n                                                    dot(xValue, wValue3));\n              }\n            } else if (bDyCVal) {\n              let d2Length = uniforms.Dy_shape[${c}];\n              for (var d2: u32 = 0; d2 < d2Length; d2 = d2 + 4) {\n                let wValue0 = ${m.get("u32(wRPerm)","u32(wCPerm)","d1","d2")};\n                let wValue1 = ${m.get("u32(wRPerm)","u32(wCPerm)","d1 + 1","d2")};\n                let wValue2 = ${m.get("u32(wRPerm)","u32(wCPerm)","d1 + 2","d2")};\n                let wValue3 = ${m.get("u32(wRPerm)","u32(wCPerm)","d1 + 3","d2")};\n\n                var xValue = ${g.get("batch","idyR","idyC","d2")};\n                let tmpval = vec4<${s}>(dot(xValue, wValue0),\n                                      dot(xValue, wValue1),\n                                      dot(xValue, wValue2),\n                                      dot(xValue, wValue3));\n                dotProd[0] = dotProd[0] + tmpval;\n              }\n            } else if (bDyCVal2) {\n              let d2Length = uniforms.Dy_shape[3];\n              for (var d2: u32 = 0; d2 < d2Length; d2 = d2 + 4) {\n                let wValue0 = ${m.get("u32(wRPerm)","u32(wCPerm)","d1","d2")};\n                let wValue1 = ${m.get("u32(wRPerm)","u32(wCPerm)","d1 + 1","d2")};\n                let wValue2 = ${m.get("u32(wRPerm)","u32(wCPerm)","d1 + 2","d2")};\n                let wValue3 = ${m.get("u32(wRPerm)","u32(wCPerm)","d1 + 3","d2")};\n\n                var xValue = ${g.get("batch","idyR","idyC2","d2")};\n                let tmpval = vec4<${s}>(dot(xValue, wValue0),\n                                      dot(xValue, wValue1),\n                                      dot(xValue, wValue2),\n                                      dot(xValue, wValue3));\n                dotProd[1] = dotProd[1] + tmpval;\n              }\n            }\n          }\n        }\n\n        for (var i: u32 = 0; i < ${h}; i = i + 1) {\n          let value = dotProd[i] + ${r?"bias[c+i]":`vec4<${s}>(0.0)`};\n          ${y.set("batch","r","c + i","d1","value")};\n        }\n      }`,v=`\n          let outputIndices = ${y.offsetToIndices("global_idx")};\n          let batch = ${y.indicesGet("outputIndices",0)};\n          let d1 = ${y.indicesGet("outputIndices",c)};\n          let r = ${y.indicesGet("outputIndices",u)};\n          let c = ${y.indicesGet("outputIndices",d)};\n          let dyCorner = vec2<i32>(i32(r), i32(c)) - uniforms.pads;\n          let dyRCorner = dyCorner.x;\n          let dyCCorner = dyCorner.y;\n          let groupId = d1 / uniforms.output_channels_per_group;\n          let wOutChannel = d1 - groupId * uniforms.output_channels_per_group;\n          // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n          // ? = to be determined. : = across all values in that axis.\n          var dotProd = ${s}(0.0);\n          for (var wR: u32 = 0; wR < uniforms.effective_filter_dims.x; wR = wR + 1) {\n            if (wR % uniforms.dilations.x != 0) {\n              continue;\n            }\n            let dyR = (${s}(dyRCorner) + ${s}(wR)) / ${s}(uniforms.strides[0]);\n            let wRPerm = uniforms.filter_dims.x - 1 - wR / uniforms.dilations.x;\n            if (dyR < 0.0 || dyR >= ${s}(uniforms.Dy_shape[${u}]) || fract(dyR) > 0.0 ||\n                wRPerm < 0) {\n              continue;\n            }\n            let idyR: u32 = u32(dyR);\n\n            for (var wC: u32 = 0; wC < uniforms.effective_filter_dims.y; wC = wC + 1) {\n              if (wC % uniforms.dilations.y != 0) {\n                continue;\n              }\n              let dyC = (${s}(dyCCorner) + ${s}(wC)) / ${s}(uniforms.strides.y);\n              let wCPerm = uniforms.filter_dims.y - 1 - wC / uniforms.dilations.y;\n              if (dyC < 0.0 || dyC >= ${s}(uniforms.Dy_shape[${d}]) ||\n                  fract(dyC) > 0.0 || wCPerm < 0) {\n                continue;\n              }\n              let idyC: u32 = u32(dyC);\n              var inputChannel = groupId * uniforms.input_channels_per_group;\n              for (var d2: u32 = 0; d2 < uniforms.input_channels_per_group; d2 = d2 + 1) {\n                let xValue = ${l?g.get("batch","idyR","idyC","inputChannel"):g.get("batch","inputChannel","idyR","idyC")};\n                let wValue = ${m.get("inputChannel","wOutChannel","u32(wRPerm)","u32(wCPerm)")};\n                dotProd = dotProd + xValue * wValue;\n                inputChannel = inputChannel + 1;\n              }\n            }\n          }\n          let value = dotProd + ${r?"bias[d1]":`${s}(0.0)`};\n          ${y.setByOffset("global_idx","value")};\n        `;return`\n  ${e.registerUniforms(o).declareVariables(..._,y)}\n  ${p}\n\n    ${e.mainStart()}\n    ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")};\n  ${a?w:v}}`},Ni=(e,t,n)=>{let r=e.length>2,i=t.outputShape,a=ht.size(i),s=[Math.ceil(a/64),1,1];et("verbose",(()=>`[conv2d_backprop_webgpu] dispatch = ${s}`));let o="NHWC"===t.format,l=["rank","rank"],u=[t.strides[0],t.strides[1]],d=[t.kernelShape[o?1:2],t.kernelShape[o?2:3]],c=[t.dilations[0],t.dilations[1]],h=[d[0]+(t.dilations[0]<=1?0:(t.kernelShape[o?1:2]-1)*(t.dilations[0]-1)),d[1]+(t.dilations[1]<=1?0:(t.kernelShape[o?2:3]-1)*(t.dilations[1]-1))],p=[h[0]-1-Math.floor((t.pads[0]+t.pads[2])/2),h[1]-1-Math.floor(t.pads[1]+t.pads[3])/2],f=t.group,m=e[1].dims,g=m[0]/f,_=m[1],y=[{type:6,data:a},{type:12,data:u},{type:12,data:d},{type:12,data:c},{type:12,data:h},{type:6,data:p},{type:12,data:g},{type:12,data:_},...bt(e[0].dims,e[1].dims)];r&&(y.push(...bt(e[2].dims)),l.push("rank")),y.push(...bt(i));let w=1===s[1]&&1===s[2];return{name:"ConvTranspose2D",shaderCache:{hint:`${t.cacheKey};`,inputDependencies:l},getRunData:()=>({dispatchGroup:{x:s[0],y:s[1],z:s[2]},outputs:[{dims:n?n(i):i,dataType:e[0].dataType}],programUniforms:y}),getShaderSource:t=>{let n=[{name:"output_size",type:"u32"},{name:"strides",type:"u32",length:u.length},{name:"filter_dims",type:"u32",length:d.length},{name:"dilations",type:"u32",length:d.length},{name:"effective_filter_dims",type:"u32",length:h.length},{name:"pads",type:"i32",length:p.length},{name:"input_channels_per_group",type:"u32"},{name:"output_channels_per_group",type:"u32"}],a=wt(e[0].dataType);return`${Li(t,e,i,r,w,false,a,n,o)}`}}}})),ol=j((()=>{al(),sl(),Xo(),Lo(),Wi=(e,t,n,r,i,a)=>(e-1)*t+n+(r-1)*i+1-a,Ui=(e,t,n,r,i)=>{let a=Math.floor(e/2);"SAME_UPPER"===t?(n[r]=a,n[i]=e-a):"SAME_LOWER"===t&&(n[r]=e-a,n[i]=a)},Vi=(e,t,n,r,i,a,s,o,l,u)=>{let d=e.length-2,c=0===u.length;if(0===l.length)for(let e=0;e<d;++e)l.push(0);let h=e[0],p=t[o?3:1]*i;for(let i=0,h=e.length-d-(o?1:0);i<d;++i,++h){let o=e[h],p=c?o*s[i]:u[i],f=Wi(o,s[i],a[i],t[h],n[i],p);Ui(f,r,a,i,i+d),c&&u.push(s[i]*(o-1)+l[i]+(t[h]-1)*n[i]+1-a[i]-a[i+d])}u.splice(0,0,h),u.splice(o?3:1,0,p)},Gi=(e,t)=>{let n=e.kernelShape.slice();if(0===e.kernelShape.length||0===e.kernelShape.reduce(((e,t)=>e*t),1)){n.length=0;for(let e=2;e<t[1].dims.length;++e)n.push(t[1].dims[e])}let r="NHWC"===e.format;n.splice(0,0,t[1].dims[0]),n.splice(r?3:1,0,t[1].dims[1]);let i=e.pads.slice(),a=e.outputShape.slice(),s=e.outputPadding.slice(),o=t[0].dims,l=e.dilations.slice();if(0===l.reduce(((e,t)=>e+t),0)){let e=t[0].dims.length-2;l=new Array(e).fill(1)}let u=e.strides.slice();if(0===u.reduce(((e,t)=>e+t),0)){let e=t[0].dims.length-2;u=new Array(e).fill(1)}Vi(o,n,l,e.autoPad,e.group,i,u,r,s,a);let d=Object.assign({},e);return Object.assign(d,{kernelShape:n,pads:i,outputPadding:s,outputShape:a,dilations:l,strides:u}),d},qi=e=>{let t=hi(e),n=e.format,r=["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][typeof e.autoPad>"u"?0:e.autoPad],i=e.dilations,a=e.group,s=e.kernelShape,o=e.pads,l=e.strides,u=e.wIsConst();return{autoPad:r,format:n,dilations:i,group:a,kernelShape:s,outputPadding:e.outputPadding,outputShape:e.outputShape,pads:o,strides:l,wIsConst:u,...t,cacheKey:`${e.format};${t.activation};`}},Hi=(e,t)=>{if(!e||2!==e.length&&3!==e.length)throw new Error("Conv requires 2 or 3 inputs");if(4!==e[0].dims.length&&3!==e[0].dims.length)throw new Error("currently only support 2-dimensional conv");if(e[0].dims.length!==e[1].dims.length)throw new Error("filter does not have same dimension as input");if(e[0].dims["NHWC"===t.format?e[0].dims.length-1:1]!==e[1].dims[0])throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");let n=e[1].dims[1]*t.group;if(3===e.length&&(1!==e[2].dims.length||e[2].dims[0]!==n))throw new Error("invalid bias");let r=e[0].dims.length-2;if(t.dilations.reduce(((e,t)=>e+t),0)>0&&t.dilations.length!==r)throw new Error(`dilations should be ${r}D`);if(t.strides.reduce(((e,t)=>e+t),0)>0&&t.strides.length!==r)throw new Error(`strides should be ${r}D`);if(t.pads.reduce(((e,t)=>e+t),0)>0&&t.pads.length!==2*r)throw new Error(`pads should be ${2*r}D`);if(t.outputPadding.length!==r&&0!==t.outputPadding.length)throw new Error(`output_padding should be ${r}D`);if(t.kernelShape.reduce(((e,t)=>e+t),0)>0&&0!==t.kernelShape.length&&t.kernelShape.length!==e[1].dims.length-2)throw new Error("invalid kernel shape");if(0!==t.outputShape.length&&t.outputShape.length!==e[0].dims.length-2)throw new Error("invalid output shape")},Ki=[2,3,1,0],Yi=(e,t,n)=>{let r=Gi(n,t),i="NHWC"===n.format,a=r.outputShape,s=a[i?3:1],o=t[0].dims[i?3:1];if(1!==r.group||1===s&&1===o)return void e.compute(Ni(t,r));let l=a[i?1:2],u=a[i?2:3],d=i?l*u:s,c=i?s:l*u,h=t[1].dims[2]*t[1].dims[3]*o,p=e.kernelCustomData.wT??e.compute(jt(t[1],Ki),{inputs:[1],outputs:[n.wIsConst?-2:-1]})[0];n.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=p);let f=[t[0],p],m=3===t.length;m&&(i||1!==t[2].dims.length?f.push(t[2]):f.push(t[2].reshape([t[2].dims[0],1,1]))),e.compute(Di(f,r,a,d,c,h,m,!0),{inputs:f})},Qi=(e,t)=>{let n="NHWC"===t.format,r=[e.inputs[0].reshape(n?[e.inputs[0].dims[0],1,e.inputs[0].dims[1],e.inputs[0].dims[2]]:[e.inputs[0].dims[0],e.inputs[0].dims[1],1,e.inputs[0].dims[2]]),e.inputs[1].reshape([e.inputs[1].dims[0],e.inputs[1].dims[1],1,e.inputs[1].dims[2]])];3===r.length&&r.push(e.inputs[2]);let i=t.kernelShape;(0===i.length||0===i[0])&&(i=[e.inputs[1].dims[2]]);let a=t.dilations;(0===a.length||0===a[0])&&(a=[1]);let s=t.strides;(0===s.length||0===s[0])&&(s=[1]);let o=t.pads;0===o.length&&(o=[0,0]),o=[0,o[0],0,o[1]],s=[1].concat(s),a=[1].concat(a),i=[1].concat(i);let l=Gi({...t,pads:o,strides:s,dilations:a,kernelShape:i},r);e.compute(Ni(r,l,(e=>n?[e[0],e[2],e[3]]:[e[0],e[1],e[3]])))},Xi=(e,t)=>{Hi(e.inputs,t),3===e.inputs[0].dims.length?Qi(e,t):Yi(e,e.inputs,t)}})),ll=j((()=>{Io(),jo(),Fo(),Do(),Zi=(e,t,n,r)=>{let i=ht.size(t),a=t.length,s=kt("input",e,a),o=Et("output",e,a),l=6===n.dataType?n.getInt32Array()[0]:Number(n.getBigInt64Array()[0]),u=ht.normalizeAxis(l,a);return{name:"CumSum",shaderCache:{hint:r.cacheKey,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:t,dataType:e}],dispatchGroup:{x:Math.ceil(i/64)},programUniforms:[{type:12,data:i},{type:6,data:u},...bt(t,t)]}),getShaderSource:e=>{let t=` i32(${s.indicesGet("inputIndices","uniforms.axis")}) `,n=St("uniforms.input_shape","uniforms.axis",a),i=r.reverse?t+(r.exclusive?" + 1":""):"0",l=r.reverse?n:t+(r.exclusive?"":" + 1");return`\n                ${e.registerUniform("outputSize","u32").registerUniform("axis","u32").declareVariables(s,o)}\n                ${e.mainStart()}\n                  ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n                  var inputIndices = ${o.offsetToIndices("global_idx")};\n                  var sum = ${o.type.value}(0);\n                  let first : i32 = ${i};\n                  let last : i32 = ${l};\n                  for (var i : i32 = first; i < last; i++) {\n                    ${s.indicesSet("inputIndices","uniforms.axis","u32(i)")};\n                    sum = sum + ${s.getByIndices("inputIndices")};\n                  }\n                  ${o.setByOffset("global_idx","sum")};\n                }`}}},Ji=(e,t)=>{let n=e.inputs[0].dims,r=e.inputs[0].dataType,i=e.inputs[1];e.compute(Zi(r,n,i,t),{inputs:[0]})},ea=e=>{let t=1===e.exclusive,n=1===e.reverse;return ut({exclusive:t,reverse:n})}})),ul=j((()=>{Io(),jo(),Fo(),Do(),ra="^"+(na="("+(ta="[a-zA-Z]|\\.\\.\\.")+")+")+"$",ia="^"+("("+na+",)*"+na)+"$",aa=class{constructor(e=-1){this.symbolToIndices=new Map,this.inputIndex=e}addSymbol(e,t){let n=this.symbolToIndices.get(e);void 0===n?n=[t]:n.push(t),this.symbolToIndices.set(e,n)}},sa=class{constructor(e,t){this.equation=t,this.hasEllipsis=!1,this.symbolToInfo=new Map,this.lhs=new Array,this.outputDims=[];let[n,r]=t.includes("->")?t.split("->",2):[t,""];if(!n.match(RegExp(ia)))throw new Error("Invalid LHS term");if(n.split(",").forEach(((t,n)=>{let r=e[n].dims.slice();if(!t.match(RegExp(ra)))throw new Error("Invalid LHS term");let i=this.processTerm(t,!0,r,n);this.lhs.push(i)})),""===r)r+=[...this.symbolToInfo.entries()].filter((([e,t])=>1===t.count||"..."===e)).map((([e])=>e)).join("");else if(!r.match(RegExp(na)))throw new Error("Invalid RHS");r.match(RegExp(ta,"g"))?.forEach((e=>{if("..."===e)this.outputDims=this.outputDims.concat(this.ellipsisDims);else{let t=this.symbolToInfo.get(e);if(void 0===t)throw new Error("Invalid RHS symbol");this.outputDims.push(t.dimValue)}})),this.rhs=this.processTerm(r,!1,this.outputDims)}addSymbol(e,t,n){let r=this.symbolToInfo.get(e);if(void 0!==r){if(r.dimValue!==t&&1!==r.count)throw new Error("Dimension mismatch");r.count++,r.inputIndices.push(n)}else r={count:1,dimValue:t,inputIndices:[n]};this.symbolToInfo.set(e,r)}processTerm(e,t,n,r=-1){let i=n.length,a=!1,s=[],o=0;if(!e.match(RegExp(ra))&&!t&&""!==e)throw new Error("Invalid LHS term");let l=e.match(RegExp(ta,"g")),u=new aa(r);return l?.forEach(((e,d)=>{if("..."===e){if(a)throw new Error("Only one ellipsis is allowed per input term");a=!0;let e=i-l.length+1;if(e<0)throw new Error("Ellipsis out of bounds");if(s=n.slice(o,o+e),this.hasEllipsis){if(this.ellipsisDims.length!==s.length||this.ellipsisDims.toString()!==s.toString())throw new Error("Ellipsis dimensions mismatch")}else{if(!t)throw new Error("Ellipsis must be specified in the LHS");this.hasEllipsis=!0,this.ellipsisDims=s}for(let e=0;e<s.length;e++){let t=String.fromCharCode("0".charCodeAt(0)+e);u.addSymbol(t,d+e),this.addSymbol(t,n[o++],r)}}else u.addSymbol(e,d+(this.hasEllipsis?this.ellipsisDims.length-1:0)),this.addSymbol(e,n[o++],r)})),u}},oa=e=>e+"_max",la=(e,t,n,r)=>{let i=e.map((e=>e.length)).map(((e,n)=>kt(`input${n}`,t,e))),a=ht.size(r),s=Et("output",t,r.length),o=[...n.symbolToInfo.keys()].filter((e=>!n.rhs.symbolToIndices.has(e)));return{name:"Einsum",shaderCache:{hint:n.equation,inputDependencies:e.map((()=>"rank"))},getRunData:()=>{let i=o.filter((e=>n.symbolToInfo.has(e))).map((e=>({type:12,data:n.symbolToInfo.get(e)?.dimValue||0})));i.push({type:12,data:a});let s=e.map(((e,t)=>[...bt(e)])).reduce(((e,t)=>e.concat(t)),i);return s.push(...bt(r)),{outputs:[{dims:r,dataType:t}],dispatchGroup:{x:Math.ceil(a/64)},programUniforms:s}},getShaderSource:e=>{let t=[],r=[],a=[],l=[],u=[],d=n.symbolToInfo.size===n.rhs.symbolToIndices.size;n.symbolToInfo.forEach(((e,o)=>{if(n.rhs.symbolToIndices.has(o)){let r=n.rhs.symbolToIndices.get(o)?.[0];void 0!==r&&n.lhs.forEach(((n,a)=>{if(e.inputIndices.includes(a)){let e=n.symbolToIndices.get(o);if(void 0===e)throw new Error("Invalid symbol error");e.forEach((e=>{t.push(`${i[a].indicesSet(`input${a}Indices`,e,s.indicesGet("outputIndices",r))}`)}))}}))}else n.lhs.forEach(((t,n)=>{if(e.inputIndices.includes(n)){let e=t.symbolToIndices.get(o);if(void 0===e)throw new Error("Invalid symbol error");e.forEach((e=>{r.push(`${i[n].indicesSet(`input${n}Indices`,e,`${o}`)}`)})),u.push(`prod *= ${i[n].getByIndices(`input${n}Indices`)};`)}})),a.push(`for(var ${o}: u32 = 0; ${o} < uniforms.${oa(o)}; ${o}++) {`),l.push("}")}));let c=d?[...t,`let sum = ${i.map(((e,t)=>e.getByIndices(`input${t}Indices`))).join(" * ")};`]:[...t,"var sum = 0.0;",...a,...r,"var prod = 1.0;",...u,"sum += prod;",...l];return`\n            ${e.registerUniforms(o.map((e=>({name:`${oa(e)}`,type:"u32"})))).registerUniform("outputSize","u32").declareVariables(...i,s)}\n\n            ${e.mainStart()}\n            ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n            var outputIndices = ${s.offsetToIndices("global_idx")};\n            ${i.map(((e,t)=>`var input${t}Indices: ${i[t].type.indices};`)).join("\n")}\n            ${c.join("\n")};\n            ${s.setByOffset("global_idx","sum")};\n          }`}}},ua=(e,t)=>{let n=new sa(e.inputs,t.equation),r=n.outputDims,i=e.inputs.map(((e,t)=>e.dims));e.compute(la(i,e.inputs[0].dataType,n,r))},da=e=>{let t=e.equation.replace(/\s+/g,"");return ut({equation:t})}})),dl=j((()=>{Io(),jo(),Do(),ca=e=>{if(!e||2!==e.length)throw new Error("Expand requires 2 input.");let t=e[0].dims,n=Array.from(e[1].getBigInt64Array(),Number),r=n.length<t.length?0:n.length-t.length,i=t.length<n.length?0:t.length-n.length;for(;r<n.length&&i<t.length;++r,++i)if(n[r]!==t[i]&&1!==n[r]&&1!==t[i])throw new Error("Expand requires shape to be broadcastable to input")},ha=(e,t)=>{let n=e.length-t.length,r=[];for(let t=0;t<n;++t)r.push(e[t]);for(let i=0;i<t.length;++i)r.push(1===t[i]?e[i+n]:t[i]);return r},pa=(e,t)=>e.length>t.length?ha(e,t):ha(t,e),fa=e=>{let t=e[0].dims,n=Array.from(e[1].getBigInt64Array(),Number),r=pa(t,n),i=e[0].dataType,a=9===i?4:1,s=Math.ceil(ht.size(r)/a),o=[{type:12,data:s},...bt(t,r)];return{name:"Expand",shaderCache:{hint:`${r.length}`,inputDependencies:["rank"]},getShaderSource:e=>{let n,s=kt("input",i,t.length,a),o=Et("output",i,r.length,a);if(9===i){let e=(e,t,n="")=>`\n          let outputIndices${t} = ${o.offsetToIndices(`outputOffset + ${t}u`)};\n          let offset${t} = ${s.broadcastedIndicesToOffset(`outputIndices${t}`,o)};\n          let index${t} = offset${t} / 4u;\n          let component${t} = offset${t} % 4u;\n          ${e}[${t}] = ${n}(${s.getByOffset(`index${t}`)}[component${t}]);\n        `;n=`\n        let outputOffset = global_idx * ${a};\n        var data = vec4<u32>(0);\n        ${e("data",0,"u32")}\n        ${e("data",1,"u32")}\n        ${e("data",2,"u32")}\n        ${e("data",3,"u32")}\n        ${o.setByOffset("global_idx","data")}\n      }`}else n=`\n        let outputIndices = ${o.offsetToIndices("global_idx")};\n        let inputOffset = ${s.broadcastedIndicesToOffset("outputIndices",o)};\n        ${o.setByOffset("global_idx",s.getByOffset("inputOffset"))}\n      }`;return`\n    ${e.registerUniform("vec_size","u32").declareVariables(s,o)}\n    ${e.mainStart()}\n    ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}\n    ${n}`},getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(s/64)},programUniforms:o})}},ma=e=>{ca(e.inputs),e.compute(fa(e.inputs),{inputs:[0]})}})),cl=j((()=>{Io(),jo(),Do(),Ho(),ga=e=>{let t=e[0].dataType,n=ht.size(e[0].dims),r=ht.size(e[1].dims),i=r%4==0;return{name:"FastGeluWithBias",shaderCache:{hint:`${i}`,inputDependencies:["type","type"]},getShaderSource:e=>{let n=kt("x",t,[1],4),r=kt("bias",t,[1],4),a=Et("y",t,[1],4),s=e=>`\n      let bias${e}_offset: u32 = (global_idx * 4 + ${e}) % uniforms.bias_size;\n      let bias${e} = ${r.getByOffset(`bias${e}_offset / 4`)}[bias${e}_offset % 4];`,o=i?`\n      let bias = ${r.getByOffset("global_idx % (uniforms.bias_size / 4)")};`:`${s(0)}${s(1)}${s(2)}${s(3)}\n      let bias = ${n.type.value}(bias0, bias1, bias2, bias3);`;return`${e.registerUniforms([{name:"output_vec_size",type:"u32"},{name:"bias_size",type:"u32"}]).declareVariables(n,r,a)}\n\n    ${Rr(vt(t))}\n\n    ${e.mainStart(_t)}\n      ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_vec_size")}\n\n      let x = ${n.getByOffset("global_idx")};\n      ${o}\n      let x_in = x + bias;\n      ${a.setByOffset("global_idx",Fr("x_in"))}\n    }`},getRunData:e=>({outputs:[{dims:e[0].dims,dataType:e[0].dataType}],programUniforms:[{type:12,data:Math.ceil(n/4)},{type:12,data:r}],dispatchGroup:{x:Math.ceil(n/_t/4)}})}},_a=e=>{e.inputs.length<2||0===ht.size(e.inputs[1].dims)?jr(e):e.compute(ga(e.inputs))}})),hl=j((()=>{Io(),jo(),Fo(),Do(),ya=e=>{if(!e||2!==e.length)throw new Error("Gather requires 2 inputs.")},wa=(e,t)=>{let n=e[0].dims,r=e[1].dims,i=n.length,a=ht.normalizeAxis(t.axis,i),s=n.slice(0);s.splice(a,1,...r);let o=n[a],l=9===e[0].dataType?4:1,u=Math.ceil(ht.size(s)/l),d=[{type:12,data:u},{type:6,data:o},{type:12,data:a},...bt(e[0].dims,e[1].dims,s)];return{name:"Gather",shaderCache:{hint:t.cacheKey,inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:s,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(u/64)},programUniforms:d}),getShaderSource:t=>{let n,o=kt("data",e[0].dataType,e[0].dims.length,l),u=kt("inputIndices",e[1].dataType,e[1].dims.length),d=Et("output",e[0].dataType,s.length,l),c=e=>{let t=r.length,n=`var indicesIndices${e}  = ${u.type.indices}(0);`;for(let r=0;r<t;r++)n+=`${t>1?`indicesIndices${e}[${r}]`:`indicesIndices${e}`} = ${s.length>1?`outputIndices${e}[uniforms.axis + ${r}]`:`outputIndices${e}`};`;n+=`\n          var idx${e} = ${u.getByIndices(`indicesIndices${e}`)};\n          if (idx${e} < 0) {\n            idx${e} = idx${e} + uniforms.axisDimLimit;\n          }\n          var dataIndices${e} = ${o.type.indices}(0);\n        `;for(let r=0,o=0;r<i;r++)r===a?(n+=`${i>1?`dataIndices${e}[${r}]`:`dataIndices${e}`} = u32(idx${e});`,o+=t):(n+=`${i>1?`dataIndices${e}[${r}]`:`dataIndices${e}`} = ${s.length>1?`outputIndices${e}[${o}]`:`outputIndices${e}`};`,o++);return n};if(9===e[0].dataType){let e=(e,t,n="")=>`\n          let outputIndices${t} = ${d.offsetToIndices(`outputOffset + ${t}u`)};\n          ${c(t)};\n          let offset${t} = ${o.indicesToOffset(`dataIndices${t}`)};\n          let index${t} = offset${t} / 4u;\n          let component${t} = offset${t} % 4u;\n          ${e}[${t}] = ${n}(${o.getByOffset(`index${t}`)}[component${t}]);\n        `;n=`\n        let outputOffset = global_idx * ${l};\n        var value = vec4<u32>(0);\n        ${e("value",0,"u32")}\n        ${e("value",1,"u32")}\n        ${e("value",2,"u32")}\n        ${e("value",3,"u32")}\n        ${d.setByOffset("global_idx","value")}\n      `}else n=`\n      let outputIndices = ${d.offsetToIndices("global_idx")};\n      ${c("")};\n      let value = ${o.getByIndices("dataIndices")};\n      ${d.setByOffset("global_idx","value")};\n      `;return`\n      ${t.registerUniform("outputSize","u32").registerUniform("axisDimLimit","i32").registerUniform("axis","u32").declareVariables(o,u,d)}\n      ${t.mainStart()}\n        ${t.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n        ${n}\n      }`}}},va=e=>ut({axis:e.axis}),ba=(e,t)=>{let n=e.inputs;ya(n),e.compute(wa(e.inputs,t))}})),pl=j((()=>{Io(),jo(),Fo(),Do(),$a=e=>{if(!e||2!==e.length)throw new Error("GatherElements requires 2 inputs.");if(e[0].dims.length<1)throw new Error("GatherElements requires that the data input be rank >= 1.");if(e[0].dims.length!==e[1].dims.length)throw new Error("GatherElements requires that the data input and\n                     indices input tensors be of same rank.")},xa=(e,t)=>{let n=e[0].dims,r=e[0].dataType,i=n.length,a=e[1].dims,s=e[1].dataType,o=ht.normalizeAxis(t.axis,i),l=n[o],u=a.slice(0),d=ht.size(u),c=kt("input",r,i),h=kt("indicesInput",s,a.length),p=Et("output",r,u.length),f=[{type:12,data:d},{type:6,data:l},{type:12,data:o}];return f.push(...bt(n,a,u)),{name:"GatherElements",shaderCache:{inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:u,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(d/64)},programUniforms:f}),getShaderSource:e=>`\n      ${e.registerUniform("outputSize","u32").registerUniform("axisDimLimit","i32").registerUniform("axis","u32").declareVariables(c,h,p)}\n      ${e.mainStart()}\n      ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n\n      let outputIndices = ${p.offsetToIndices("global_idx")};\n\n      var idx = ${h.getByOffset("global_idx")};\n      if (idx < 0) {\n        idx = idx + uniforms.axisDimLimit;\n      }\n      var inputIndices = ${c.type.indices}(outputIndices);\n      ${c.indicesSet("inputIndices","uniforms.axis","u32(idx)")};\n      let value = ${c.getByIndices("inputIndices")};\n\n      ${p.setByOffset("global_idx","value")};\n  }`}},Ca=e=>ut({axis:e.axis}),Ta=(e,t)=>{let n=e.inputs;$a(n),e.compute(xa(e.inputs,t))}})),fl=j((()=>{Io(),jo(),Do(),Sa=e=>{if(!e)throw new Error("Input is missing");if(e.length<2||e.length>3)throw new Error("Invaid input number.");if(3===e.length&&e[2].dims.length>2)throw new Error("Invalid input shape of C");if(e[0].dataType!==e[1].dataType||3===e.length&&e[0].dataType!==e[2].dataType)throw new Error("Input types are mismatched")},Ma=(e,t)=>{let n=e[0].dims.slice(),r=e[1].dims.slice(),[i,a,s]=ft.getShapeOfGemmResult(n,t.transA,r,t.transB,3===e.length?e[2].dims:void 0),o=[i,a];if(!o)throw new Error("Can't use gemm on the given tensors");let l=ht.size(o),u=[{type:12,data:l},{type:12,data:i},{type:12,data:a},{type:12,data:s},{type:1,data:t.alpha},{type:1,data:t.beta}],d=["type","type"];3===e.length&&(u.push(...bt(e[2].dims)),d.push("rank")),u.push(...bt(o));return{name:"Gemm",shaderCache:{hint:`${t.cacheKey}`,inputDependencies:d},getRunData:()=>({outputs:[{dims:o,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(l/64)},programUniforms:u}),getShaderSource:n=>{let r="";t.transA&&t.transB?r="value += a[k * uniforms.M + m] * b[n * uniforms.K + k];":t.transA&&!t.transB?r="value += a[k * uniforms.M + m] * b[k * uniforms.N + n];":!t.transA&&t.transB?r="value += a[m * uniforms.K + k] * b[n * uniforms.K + k];":!t.transA&&!t.transB&&(r="value += a[m * uniforms.K + k] * b[k * uniforms.N + n];");let i=1===t.alpha?"":"value *= uniforms.alpha;",a=kt("a",e[0].dataType,e[0].dims),s=kt("b",e[1].dataType,e[1].dims),l=a.type.value,u=null,d=[a,s];3===e.length&&(u=kt("c",e[2].dataType,e[2].dims.length),d.push(u));let c=Et("output",e[0].dataType,o.length);d.push(c);return`\n  ${n.registerUniforms([{name:"output_size",type:"u32"},{name:"M",type:"u32"},{name:"N",type:"u32"},{name:"K",type:"u32"},{name:"alpha",type:"f32"},{name:"beta",type:"f32"}]).declareVariables(...d)}\n\n  ${n.mainStart()}\n    ${n.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n\n    let m = global_idx / uniforms.N;\n    let n = global_idx % uniforms.N;\n\n    var value = ${l}(0);\n    for (var k: u32 = 0u; k < uniforms.K; k++) {\n      ${r}\n    }\n\n    ${i}\n    ${null!=u?`let cOffset = ${u.broadcastedIndicesToOffset("vec2(m, n)",c)}; value += ${l}(uniforms.beta) * ${u.getByOffset("cOffset")};`:""}\n    output[global_idx] = value;\n  }`}}},ka=e=>({transA:e.transA,transB:e.transB,alpha:e.alpha,beta:e.beta,cacheKey:`${e.transA};${e.transB};${1===e.alpha}`}),Ea=(e,t)=>{Sa(e.inputs),e.compute(Ma(e.inputs,t))}})),ml=j((()=>{Io(),jo(),Do(),Aa=(e,t)=>{let n=e[0].dims,r=n,i=ht.sizeToDimension(n,2),a=ht.sizeFromDimension(n,2),s=$t(a),o=a/s,l=[n[0],n[1],o],u=[{type:12,data:a},{type:12,data:o}];u.push(...bt(l,l));return{name:"InstanceNormalization",shaderCache:{hint:`${t.epsilon};${s}`,inputDependencies:["rank","type","type"]},getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:i},programUniforms:u}),getShaderSource:n=>{let r=kt("x",e[0].dataType,l.length,s),i=kt("scale",e[1].dataType,e[1].dims),a=kt("bias",e[2].dataType,e[2].dims),o=Et("output",e[0].dataType,l.length,s),u=[r,i,a,o],d=r.type.value,c=1===s?"f32":`vec${s}<f32>`;return`\n  var<workgroup> meanShared : f32;\n  var<workgroup> squaredNormShared : f32;\n  var<workgroup> workgroupShared : array<${c}, 64>;\n  const workgroupSize = 64u;\n  ${n.registerUniforms([{name:"normSize",type:"u32"},{name:"normPackedSize",type:"u32"}]).declareVariables(...u)}\n  ${n.mainStart(64)}\n    let norm = global_idx / workgroupSize;\n    let batch = norm / uniforms.x_shape[1];\n    let channel = norm % uniforms.x_shape[1];\n    let localIndex = local_id.x;\n\n    // initialize workgroup memory\n    var initial = ${c}(0);\n    for (var h = localIndex; h < uniforms.normPackedSize; h += workgroupSize) {\n      initial = initial + ${c}(${r.get("batch","channel","h")});\n    }\n    workgroupShared[localIndex] = initial;\n    workgroupBarrier();\n\n    // Calculate the mean of current channel data.\n    for (var currSize = workgroupSize >> 1;  currSize > 0; currSize = currSize >> 1) {\n      if (localIndex < currSize) {\n        workgroupShared[localIndex] = workgroupShared[localIndex] + workgroupShared[localIndex + currSize];\n      }\n      workgroupBarrier();\n    }\n    if (localIndex == 0) {\n      meanShared = ${Tt("workgroupShared[0]",s)} / f32(uniforms.normSize);\n    }\n    workgroupBarrier();\n\n    // reinitialize workgroup memory.\n    initial = ${c}(0);\n    for (var h = localIndex; h < uniforms.normPackedSize; h += workgroupSize) {\n      let deviation =  ${c}(${r.get("batch","channel","h")}) - ${c}(meanShared);\n      initial = initial + deviation * deviation;\n    }\n    workgroupShared[localIndex] = initial;\n    workgroupBarrier();\n\n    // Calculate the sum of square of deviation of current channel data.\n    for (var currSize = workgroupSize >> 1;  currSize > 0; currSize = currSize >> 1) {\n      if (localIndex < currSize) {\n        workgroupShared[localIndex] = workgroupShared[localIndex] + workgroupShared[localIndex + currSize];\n      }\n      workgroupBarrier();\n    }\n    if (localIndex == 0) {\n      squaredNormShared = ${Tt("workgroupShared[0]",s)};\n    }\n    workgroupBarrier();\n\n    let invStdDev = inverseSqrt(squaredNormShared / f32(uniforms.normSize) + f32(${t.epsilon}));\n    let channelScale = invStdDev * f32(${i.getByOffset("channel")});\n    let channelShift = f32(${a.getByOffset("channel")}) - meanShared * channelScale;\n    for (var h = localIndex; h < uniforms.normPackedSize; h += workgroupSize) {\n      let value = ${r.get("batch","channel","h")} * ${d}(${c}(channelScale)) + ${d}(${c}(channelShift));\n      ${o.set("batch","channel","h","value")};\n    }\n  }`}}},Ia=(e,t,n,r,i,a,s,o)=>{let l=$t(s),u=64,d=1===l?"vec2f":`mat2x${l}f`,c=1===l?"f32":`vec${l}f`,h=(e,t)=>`${d}(${e}, ${t})`,p=i*s/l,f=[{type:12,data:Math.ceil(a/u)},{type:12,data:a},{type:12,data:Math.floor(s/l)},{type:12,data:Math.floor(a*s/l)}],m=e.compute({name:"InstanceNormComputeMean",shaderCache:{hint:`${l}`,inputDependencies:["type"]},getRunData:()=>({outputs:[{dims:[i,s,u,2],dataType:1}],dispatchGroup:{x:i*s/l},programUniforms:f}),getShaderSource:e=>{let n=kt("input",t.dataType,t.dims,l);return`\n  ${e.declareVariables(n)}\n  @group(0) @binding(1) var<storage, read_write> output : array<${d}>;\n  struct Uniforms {wg_size:u32, H:u32, C:u32, image_size:u32};\n  @group(0) @binding(2) var<uniform> uniforms: Uniforms;\n\n  ${e.mainStart(u)}\n    let currentImageNumber = global_idx / 64 / uniforms.C;\n    let currentChannelNumber = (global_idx / 64) % uniforms.C;\n    let wgId = global_idx % 64;\n    let wgOffset = wgId * uniforms.wg_size;\n    if (wgOffset >= uniforms.H) {\n        return;\n    }\n    let wgMax = min(wgOffset + uniforms.wg_size, uniforms.H);\n\n    let offset = currentImageNumber * uniforms.image_size + currentChannelNumber;\n    var sum = ${xt("f32",l)};\n    var squaredSum = ${xt("f32",l)};\n    for (var i: u32 = wgOffset; i < wgMax; i++) {\n        let value = ${c}(input[offset + i * uniforms.C]);\n        sum += value;\n        squaredSum += value * value;\n    }\n    output[global_idx] = ${h("sum","squaredSum")};\n  }`}},{inputs:[t],outputs:[-1]})[0],g=[{type:12,data:p},{type:12,data:a},{type:12,data:Math.floor(s/l)},{type:12,data:Math.floor(u*s/l)}];return e.compute({name:"InstanceNormComputeChannelScaleShift",shaderCache:{hint:`${l};${o}`,inputDependencies:["type","type","type"]},getRunData:()=>({outputs:[{dims:[i,s,2],dataType:1}],dispatchGroup:{x:Math.ceil(p/64)},programUniforms:g}),getShaderSource:e=>{let t=kt("scale",n.dataType,n.dims,l),i=kt("bias",r.dataType,r.dims,l);return`\n  @group(0) @binding(0) var<storage, read> input : array<${d}>;\n  @group(0) @binding(1) var<storage, read> scale : array<${t.type.storage}>;\n  @group(0) @binding(2) var<storage, read> bias : array<${i.type.storage}>;\n  @group(0) @binding(3) var<storage, read_write> output : array<${d}>;\n  struct Uniforms {units_of_work : u32, H: u32, C : u32, image_size : u32};\n  @group(0) @binding(4) var<uniform> uniforms: Uniforms;\n\n  ${e.mainStart()}\n    ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.units_of_work")}\n    let currentImageNumber = global_idx / uniforms.C;\n    let currentChannelNumber = global_idx % uniforms.C;\n\n    let offset = currentImageNumber * uniforms.image_size;\n    var sum = ${xt("f32",l)};\n    var squaredSum = ${xt("f32",l)};\n    for (var i: u32 = 0; i < 64; i++) {\n        let value = input[offset + i + currentChannelNumber * 64];\n        sum += value[0];\n        squaredSum += value[1];\n    }\n    sum = sum / f32(uniforms.H);\n    squaredSum = squaredSum / f32(uniforms.H);\n    let invStdDev = inverseSqrt(squaredSum - sum * sum + f32(${o}));\n    let channelScale = invStdDev * ${c}(scale[currentChannelNumber]);\n    let channelShift = ${c}(bias[currentChannelNumber]) - sum * channelScale;\n\n    output[global_idx] = ${h("channelScale","channelShift")};\n  }`}},{inputs:[m,n,r],outputs:[-1]})[0]},Pa=(e,t,n)=>{let r=t[0].dims,i=r,a=r[0],s=r[r.length-1],o=ht.sizeFromDimension(r,1)/s,l=$t(s),u=ht.size(i)/l,d=[{type:12,data:o},{type:12,data:Math.floor(s/l)}],c=Ia(e,t[0],t[1],t[2],a,o,s,n.epsilon);e.compute({name:"InstanceNormalizationNHWC",shaderCache:{hint:`${l}`,inputDependencies:["type","type"]},getRunData:()=>({outputs:[{dims:i,dataType:t[0].dataType}],dispatchGroup:{x:Math.ceil(u/64)},programUniforms:d}),getShaderSource:e=>{let n=wt(t[0].dataType),r=1===l?"vec2f":`mat2x${l}f`,a=1===l?n:`vec${l}<${n}>`,s=kt("input",t[0].dataType,t[0].dims,l),o=Et("output",t[0].dataType,i,l);return`\n  @group(0) @binding(0) var<storage, read> input : array<${s.type.storage}>;\n  @group(0) @binding(1) var<storage, read> scaleInput : array<${r}>;\n  @group(0) @binding(2) var<storage, read_write> output : array<${o.type.storage}>;\n  struct Uniforms {H: u32, C : u32};\n  @group(0) @binding(3) var<uniform> uniforms: Uniforms;\n\n  ${e.mainStart()}\n    let currentImageNumber = global_idx / (uniforms.C * uniforms.H);\n    let currentChannelNumber = global_idx % uniforms.C;\n\n    let scaleOffset = currentImageNumber * uniforms.C + currentChannelNumber;\n    let scale = scaleInput[scaleOffset];\n    output[global_idx] = fma(input[global_idx], ${a}(scale[0]), ${a}(scale[1]));\n  }`}},{inputs:[t[0],c]})},Oa=(e,t)=>{"NHWC"===t.format?Pa(e,e.inputs,t):e.compute(Aa(e.inputs,t))}})),gl=j((()=>{Io(),jo(),Do(),za=e=>{if(!e||e.length<2)throw new Error("layerNorm requires at least 2 inputs.")},Ba=(e,t,n)=>{let r=e[0].dims,i=e[1],a=e[2],s=r,o=ht.normalizeAxis(t.axis,r.length),l=ht.sizeToDimension(r,o),u=ht.sizeFromDimension(r,o),d=ht.size(i.dims),c=a?ht.size(a.dims):0;if(d!==u||a&&c!==u)throw new Error(`Size of X.shape()[axis:] == ${u}.\n       Size of scale and bias (if provided) must match this.\n       Got scale size of ${d} and bias size of ${c}`);let h=[];for(let e=0;e<r.length;++e)e<o?h.push(r[e]):h.push(1);let p=$t(u),f=["type","type"],m=[{type:12,data:l},{type:1,data:u},{type:12,data:Math.floor(u/p)},{type:1,data:t.epsilon}];a&&f.push("type");let g=n>1,_=n>2,y=[{dims:s,dataType:e[0].dataType}];return g&&y.push({dims:h,dataType:1}),_&&y.push({dims:h,dataType:1}),{name:"LayerNormalization",shaderCache:{hint:`${p};${n}`,inputDependencies:f},getRunData:()=>({outputs:y,dispatchGroup:{x:Math.ceil(l/64)},programUniforms:m}),getShaderSource:t=>{let n=wt(e[0].dataType),r=[kt("x",e[0].dataType,e[0].dims,p),kt("scale",i.dataType,i.dims,p)];a&&r.push(kt("bias",a.dataType,a.dims,p)),r.push(Et("output",e[0].dataType,s,p)),g&&r.push(Et("mean_data_output",1,h)),_&&r.push(Et("inv_std_output",1,h));return`\n  ${t.registerUniforms([{name:"norm_count",type:"u32"},{name:"norm_size",type:"f32"},{name:"norm_size_vectorized",type:"u32"},{name:"epsilon",type:"f32"}]).declareVariables(...r)}\n  ${t.mainStart()}\n    ${t.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.norm_count")}\n    let offset = global_idx * uniforms.norm_size_vectorized;\n    var meanVector = ${xt("f32",p)};\n    var meanSquareVector = ${xt("f32",p)};\n\n    for (var h: u32 = 0u; h < uniforms.norm_size_vectorized; h++) {\n      let value = ${Ct(n,p,"x[h + offset]")};\n      meanVector += value;\n      meanSquareVector += value * value;\n    }\n    let mean = ${Tt("meanVector",p)} / uniforms.norm_size;\n    let invStdDev =\n        inverseSqrt(${Tt("meanSquareVector",p)} / uniforms.norm_size - mean * mean + uniforms.epsilon);\n\n    for (var j: u32 = 0; j < uniforms.norm_size_vectorized; j++) {\n      let f32input = ${Ct(n,p,"x[j + offset]")};\n      let f32scale = ${Ct(n,p,"scale[j]")};\n      output[j + offset] = ${r[0].type.value}((f32input - mean) * invStdDev * f32scale\n        ${a?`+ ${Ct(n,p,"bias[j]")}`:""}\n      );\n    }\n\n    ${g?"mean_data_output[global_idx] = mean":""};\n    ${_?"inv_std_output[global_idx] = invStdDev":""};\n  }`}}},Ra=(e,t)=>{za(e.inputs),e.compute(Ba(e.inputs,t,e.outputCount))}})),_l=j((()=>{Io(),jo(),Do(),Fa=(e,t)=>{if(e.length<3||e.length>4)throw new Error("MatMulNBits requires 3 or 4 inputs");let n=e[0],r=n.dims.length;if(n.dims[r-1]!==t.k)throw new Error("The last dim of input shape does not match the k value");let i=Math.floor((t.k+t.blockSize-1)/t.blockSize),a=t.blockSize/8*t.bits,s=e[1];if(!ht.areEqual(s.dims,[t.n,i,a]))throw new Error("The second inputs must be 3D tensor with shape N X nBlocksPerCol X blobSize");let o=e[2].dims;if(ht.size(o)!==t.n*i)throw new Error("scales input size error.");if(4===e.length){let n=e[3].dims,r=t.bits>4?t.n*i:t.n*Math.floor((i+1)/2);if(ht.size(n)!==r)throw new Error("zeroPoints input size error.")}},ja=(e,t)=>{let n=e[0],r=e[1],i=e[2],a=n.dims.length,s=n.dims.slice(0,a-1).concat(t.n),o=ht.size(s),l=Math.floor((t.k+t.blockSize-1)/t.blockSize),u=t.blockSize/8*t.bits,d=[{type:12,data:o},{type:12,data:t.k},{type:12,data:t.n},{type:12,data:t.accuracyLevel},{type:12,data:t.bits},{type:12,data:t.blockSize},{type:12,data:l},{type:12,data:u}];d.push(...bt(n.dims)),d.push(...bt(ht.convertShape(r.dims))),d.push(...bt(i.dims)),4===e.length&&d.push(...bt(ht.convertShape(e[3].dims))),d.push(...bt(s));return{name:"MatMulNBits",shaderCache:{hint:t.cacheKey,inputDependencies:Array(e.length).fill("rank")},getRunData:()=>({outputs:[{dims:s,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(o/64)},programUniforms:d}),getShaderSource:t=>{let n=kt("a",e[0].dataType,e[0].dims.length),r=kt("b",12,e[1].dims.length),i=kt("scales",e[2].dataType,e[2].dims.length),o=[n,r,i],l=4===e.length?kt("zero_points",12,e[3].dims.length):void 0;l&&o.push(l);let u=Et("output",e[0].dataType,s.length),d=wt(e[0].dataType);return`\n        fn ortUnpack8x4snorm(value: u32) -> array<${d}, 8>{\n          var result = array<${d}, 8>();\n          var offset: u32 = 0;\n          let count: u32 = 4;\n          for (var i: u32 = 0; i < 8u; i++) {\n            result[i] = ${d}(extractBits(value, offset, count));\n            offset += count;\n          }\n          return result;\n        }\n        ${t.registerUniforms([{name:"output_size",type:"u32"},{name:"k",type:"u32"},{name:"n",type:"u32"},{name:"accuracy_level",type:"u32"},{name:"bits",type:"u32"},{name:"block_size",type:"u32"},{name:"n_blocks_per_col",type:"u32"},{name:"blob_size",type:"u32"}]).declareVariables(...o,u)}\n        ${t.mainStart()}\n          ${t.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n          var value: ${d} = 0.0;\n          let output_indices = ${u.offsetToIndices("global_idx")};\n          var a_indices: ${n.type.indices} = output_indices;\n          var n = ${u.indicesGet("output_indices",a-1)};\n          // Two zero points are packed into one byte because uniforms.bits <= 4.\n          // zero_point_offset is either 0 or 4. It is bit offset within one byte.\n          // TODO support zero_point_offset for bits > 4\n          ${l?`\n            var zero_point_index: u32 = n * ((uniforms.n_blocks_per_col + 1) / 2);\n            var zero_point_word: u32 = ${l.getByOffset("zero_point_index")};\n            var zero_point_offset: u32 = 0;`:""}\n          var scale_idex = n * uniforms.n_blocks_per_col;\n          for (var block: u32 = 0; block < uniforms.n_blocks_per_col; block++) {\n            var block_offset = block * uniforms.block_size;\n            // The scale and zero points are computed per block.\n            let scale = ${i.getByOffset("scale_idex")};\n            // The default zero point is 8 for unsigned 4-bit quantization.\n            let zero_point: ${d} = ${l?`${d}(extractBits(zero_point_word, zero_point_offset, 4))`:8};\n            for (var blob: u32 = 0; blob < uniforms.block_size/uniforms.blob_size; blob++) {\n              var blob_offset = blob * uniforms.blob_size;\n              var b_indices: ${r.type.indices};\n              ${r.indicesSet("b_indices","2","blob")};\n              ${r.indicesSet("b_indices","1","block")};\n              ${r.indicesSet("b_indices","0","n")};\n              let b_value = ${r.getByIndices("b_indices")};\n              let b_quantized_values: array<${d}, 8> = ortUnpack8x4snorm(b_value);\n              // Number of B elements per 32-bit word is 32/bits = 32/4 = 8\n              for (var i: u32 = 0; i < 8; i++) {\n                ${n.indicesSet("a_indices",a-1,"block_offset + blob_offset + i")};\n                let a_value = ${n.getByIndices("a_indices")};\n                let b_quantized_value = b_quantized_values[i];\n                let b_dequantized_value = (b_quantized_value - zero_point) * scale;\n                value += a_value * b_dequantized_value;\n              }\n            }\n            scale_idex++;\n            ${l?`\n            if (zero_point_offset == 28) {\n              zero_point_offset = 0;\n              zero_point_index++;\n              var zero_point_word = ${l.getByOffset("zero_point_index")};\n            } else {\n              zero_point_offset += 4;\n            }`:""}\n          }\n          ${u.setByOffset("global_idx","value")};\n        }\n        `}}},Da=(e,t)=>{Fa(e.inputs,t),e.compute(ja(e.inputs,t))}})),yl=j((()=>{Io(),jo(),Fo(),Bo(),Vo(),Do(),Lo(),La=(e,t)=>{let n=e[0],r=e[1],i=e[2],a=e[3],s=e[4],o=e[5],l=e[6],u=e[7];if(3!==n.dims.length&&5!==n.dims.length)throw new Error("Input query is expected to have 3 or 5 dimensions");let d,c=n.dims[0],h=n.dims[1],p=3===n.dims.length?n.dims[2]:t.numHeads*n.dims[4],f=h,m=0,g=0,_=Math.floor(p/t.numHeads);if(l&&u){if(4!==l.dims.length)throw new Error('Input "past_key" is expected to have 4 dimensions');if(4!==u.dims.length)throw new Error('Input "past_value" is expected to have 4 dimensions');m=l.dims[2],g=l.dims[2]}else if(l||u)throw new Error('Input "past_key" and "past_value" shall be both present or both absent');if(r){if(3!==n.dims.length)throw new Error('Input "query" is expected to have 3 dimensions when key is given');if(r.dims.length<3||r.dims.length>5)throw new Error('Input "key" is expected to have 3, 4, or 5 dimensions');if(n.dims[0]!==r.dims[0])throw new Error('Input "query" and "key" shall have same dim 0 (batch size)');if(3===r.dims.length){if(r.dims[2]!==n.dims[2])throw new Error('Input "query" and "key" shall have same dim 2 (hidden_size)');d=2,f=r.dims[1]}else if(5===r.dims.length){if(r.dims[2]!==t.numHeads||2!==r.dims[3]||r.dims[4]!==_)throw new Error('Expect "key" shape (batch_size, kv_sequence_length, num_heads, 2, head_size) for packed kv');if(i)throw new Error('Expect "value" be none when "key" has packed kv format.');d=5,f=r.dims[1]}else{if(r.dims[1]!==t.numHeads||r.dims[3]!==_)throw new Error('Expect "key" shape (batch_size, num_heads, kv_sequence_length, head_size) for past_key');d=0,f=r.dims[2]}}else{if(3!==n.dims.length&&5!==n.dims.length)throw new Error('Input "query" is expected to have 3 or 5 dimensions when key is empty');if(5===n.dims.length&&(n.dims[2]!==t.numHeads||3!==n.dims[3]))throw new Error('Expect "query" shape (batch_size, kv_sequence_length, num_heads, 3, head_size) for packed kv');d=3}if(a){if(1!==a.dims.length)throw new Error('Input "bias" is expected to have 1 dimension');if(i&&5===n.dims.length&&2===n.dims[3])throw new Error("bias is not allowed for packed kv.")}let y=0;if(s){y=8;let e=s.dims;throw 1===e.length?e[0]===c?y=1:e[0]===3*c+2&&(y=3):2===e.length&&e[0]===c&&e[1]===f&&(y=5),8===y?new Error('Input "key_padding_mask" shape shall be (batch_size) or (batch_size, kv_sequence_length)'):new Error("Mask not supported")}let w=!1,v=p;if(i){if(3!==i.dims.length&&4!==i.dims.length)throw new Error('Input "value" is expected to have 3 or 4 dimensions');if(n.dims[0]!==i.dims[0])throw new Error('Input "query" and "value" shall have same dim 0 (batch_size)');if(3===i.dims.length){if(f!==i.dims[1])throw new Error('Input "key" and "value" shall have the same dim 1 (kv_sequence_length)');v=i.dims[2]}else{if(f!==i.dims[2])throw new Error('Input "past_key" and "past_value" shall have the same dim 2 (kv_sequence_length)');v=i.dims[1]*i.dims[3],w=!0}}let b=m+f;if(s)throw new Error("Key padding mask is not supported");if(o)throw new Error("extraAddQk is not supported");if(l)throw new Error("pastKey is not supported");if(u)throw new Error("pastValue is not supported");return{batchSize:c,sequenceLength:h,pastSequenceLength:m,kvSequenceLength:f,totalSequenceLength:b,maxSequenceLength:g,inputHiddenSize:0,hiddenSize:p,vHiddenSize:v,headSize:_,vHeadSize:Math.floor(v/t.numHeads),numHeads:t.numHeads,isUnidirectional:!1,pastPresentShareBuffer:!1,maskFilterValue:t.maskFilterValue,maskType:y,scale:t.scale,broadcastResPosBias:!1,passPastInKv:w,qkvFormat:d}},Na=e=>ut({...e}),Wa=ut({perm:[0,2,1,3]}),Ua=(e,t,n,r,i,a,s)=>{let o=[r,i,a],l=ht.size(o),u=[{type:12,data:l},{type:12,data:s},{type:12,data:a}];return e.compute({name:"MultiHeadAttentionAddBias",shaderCache:{inputDependencies:["type","type"]},getRunData:()=>({outputs:[{dims:o,dataType:t.dataType,gpuDataType:0}],dispatchGroup:{x:Math.ceil(l/64)},programUniforms:u}),getShaderSource:e=>{let r=Et("qkv_with_bias",t.dataType,o),i=kt("qkv",t.dataType,o),a=kt("bias",n.dataType,o);return`\n  ${e.registerUniforms([{name:"output_size",type:"u32"},{name:"bias_offset",type:"u32"},{name:"hidden_size",type:"u32"}]).declareVariables(i,a,r)}\n  ${e.mainStart()}\n    ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n    let bias_offset_idx = (global_idx % uniforms.hidden_size) + uniforms.bias_offset;\n\n    qkv_with_bias[global_idx] = qkv[global_idx] + bias[bias_offset_idx];\n  }`}},{inputs:[t,n],outputs:[-1]})[0]},Va=(e,t,n,r,i,a,s,o)=>{let l=a;if(s){if(1===r)throw new Error("AddBiasReshape is not implemented. Please export your model with packed QKV or KV");return l=Ua(e,a,s,t,r,n*i,o),l=l.reshape([t,r,n,i]),e.compute(jt(l,Wa.perm),{inputs:[l],outputs:[-1]})[0]}return 3===a.dims.length&&(l=a.reshape([t,r,n,i])),e.compute(jt(l,Wa.perm),{inputs:[l],outputs:[-1]})[0]},Ga=(e,t)=>{let n=La(e.inputs,t);if(5===e.inputs[0].dims.length)throw new Error("Packed QKV is not implemented");if(5===e.inputs[1]?.dims.length)throw new Error("Packed KV is not implemented");let r=e.inputs[1]&&e.inputs[2]&&4===e.inputs[1].dims.length&&4===e.inputs[2].dims.length,i=Va(e,n.batchSize,n.numHeads,n.sequenceLength,n.headSize,e.inputs[0],e.inputs[3],0);if(r)return Un(e,i,e.inputs[1],e.inputs[2],e.inputs[4],void 0,void 0,void 0,e.inputs[5],n,t);let a=Va(e,n.batchSize,n.numHeads,n.kvSequenceLength,n.headSize,e.inputs[1],e.inputs[3],n.hiddenSize),s=Va(e,n.batchSize,n.numHeads,n.kvSequenceLength,n.vHeadSize,e.inputs[2],e.inputs[3],2*n.hiddenSize);Un(e,i,a,s,e.inputs[4],void 0,e.inputs[6],e.inputs[7],e.inputs[5],n,t)}})),wl=j((()=>{Io(),jo(),Do(),qa=e=>{if(!e||e.length<1)throw new Error("Too few inputs");if(1!==e[0].dataType&&10!==e[0].dataType)throw new Error("Input type must be float or float16.");if(e.length>=2){let t=2*e[0].dims.length===e[1].dims[0];if(4===e.length&&(t=2*e[3].dims[0]===e[1].dims[0]),!t)throw new Error("The pads should be a 1D tensor of shape [2 * input_rank] or [2 * num_axes].")}},Ha=(e,t,n)=>{let r="";for(let i=t-1;i>=0;--i)r+=`\n            k = i32(${e.indicesGet("indices",i)}) - ${St("uniforms.pads",i,n)};\n            if (k < 0) {\n              break;\n            }\n            if (k >= i32(${St("uniforms.x_shape",i,t)})) {\n              break;\n            }\n            offset += k * i32(${St("uniforms.x_strides",i,t)});\n        `;return`\n          value = ${e.type.value}(uniforms.constant_value);\n          for (var i = 0; i < 1; i++) {\n            var offset = 0;\n            var k = 0;\n            ${r}\n            value = x[offset];\n          }\n      `},Ka=(e,t,n)=>{let r="";for(let i=t-1;i>=0;--i)r+=`\n                k = i32(${e.indicesGet("indices",i)}) - ${St("uniforms.pads",i,n)};\n                if (k < 0) {\n                  k = -k;\n                }\n                {\n                  let _2n_1 = 2 * (i32(${St("uniforms.x_shape",i,t)}) - 1);\n                  k = k % _2n_1;\n                  if(k >= i32(${St("uniforms.x_shape",i,t)})) {\n                    k = _2n_1 - k;\n                  }\n                }\n                offset += k * i32(${St("uniforms.x_strides",i,t)});\n            `;return`\n              var offset = 0;\n              var k = 0;\n              ${r}\n              value = x[offset];\n          `},Ya=(e,t,n)=>{let r="";for(let i=t-1;i>=0;--i)r+=`\n                k = i32(${e.indicesGet("indices",i)}) - ${St("uniforms.pads",i,n)};\n                if (k < 0) {\n                  k = 0;\n                }\n                if (k >= i32(${St("uniforms.x_shape",i,t)})) {\n                  k = i32(${St("uniforms.x_shape",i,t)}) - 1;\n                }\n                offset += k * i32(${St("uniforms.x_strides",i,t)});\n            `;return`\n              var offset = 0;\n              var k = 0;\n              ${r}\n              value = x[offset];\n          `},Qa=(e,t,n)=>{let r="";for(let i=t-1;i>=0;--i)r+=`\n                k = i32(${e.indicesGet("indices",i)}) - ${St("uniforms.pads",i,n)};\n                if (k < 0)  {\n                  k += i32(${St("uniforms.x_shape",i,t)}]);\n                }\n                if (k >= i32(${St("uniforms.x_shape",i,t)})) {\n                  k -= i32(${St("uniforms.x_shape",i,t)});\n                }\n                offset += k * i32(${St("uniforms.x_strides",i,t)});\n            `;return`\n              var offset = 0;\n              var k = 0;\n              ${r}\n              value = x[offset];\n          `},Xa=(e,t,n)=>{switch(n.mode){case 0:return Ha(e,t,n.pads.length);case 1:return Ka(e,t,n.pads.length);case 2:return Ya(e,t,n.pads.length);case 3:return Qa(e,t,n.pads.length);default:throw new Error("Invalid mode")}},Za=(e,t)=>{let n=ht.padShape(e[0].dims.slice(),t.pads),r=e[0].dims,i=[{type:12,data:ht.size(n)},{type:12,data:t.pads}];0===t.mode&&i.push({type:e[0].dataType,data:t.value}),i.push(...bt(e[0].dims,n));return{name:"Pad",shaderCache:{hint:`${t.mode}`,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:n,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(ht.size(n)/64)},programUniforms:i}),getShaderSource:i=>{let a=Et("output",e[0].dataType,n.length),s=kt("x",e[0].dataType,r.length),o=s.type.value,l=Xa(a,r.length,t),u=[{name:"output_size",type:"u32"},{name:"pads",type:"i32",length:t.pads.length}];return 0===t.mode&&u.push({name:"constant_value",type:o}),`\n            ${i.registerUniforms(u).declareVariables(s,a)}\n            ${i.mainStart()}\n            ${i.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n\n            let indices = ${a.offsetToIndices("global_idx")};\n\n            var value = ${o}(0);\n            ${l}\n            output[global_idx] = value;\n        }`}}},Ja=(e,t)=>{if(e.length>1){let n=e[1].getBigInt64Array(),r=e.length>=3&&e[2].data?e[2].getFloat32Array()[0]:0,i=e[0].dims.length,a=new Int32Array(2*i).fill(0);if(e.length>=4){let t=e[3].getBigInt64Array();for(let e=0;e<t.length;e++)a[Number(t[e])]=Number(n[e]),a[Number(t[e])+i]=Number(n[e+t.length])}else n.forEach(((e,t)=>a[Number(t)]=Number(e)));let s=[];return a.forEach((e=>s.push(e))),{mode:t.mode,value:r,pads:s}}return t},es=(e,t)=>{qa(e.inputs);let n=Ja(e.inputs,t);e.compute(Za(e.inputs,n),{inputs:[0]})}})),vl=j((()=>{se(),Io(),jo(),Do(),ts=e=>{if(d.webgpu.validateInputContent&&(!e||1!==e.length))throw new Error("Pool ops requires 1 input.")},ns=(e,t,n)=>{let r="NHWC"===t.format,i=e.dims.slice();r&&i.splice(1,0,i.pop());let a=Object.hasOwnProperty.call(t,"dilations"),s=t.kernelShape.slice(),o=t.strides.slice(),l=a?t.dilations.slice():[],u=t.pads.slice();pt.adjustPoolAttributes(n,i,s,o,l,u);let d=pt.computePoolOutputShape(n,i,o,l,s,u,t.autoPad),c=Object.assign({},t);a?Object.assign(c,{kernelShape:s,strides:o,pads:u,dilations:l,cacheKey:t.cacheKey}):Object.assign(c,{kernelShape:s,strides:o,pads:u,cacheKey:t.cacheKey});let h=d.slice();return h.push(h.splice(1,1)[0]),[c,r?h:d]},rs=(e,t)=>{let n="NHWC"===t.format,r=[{type:12,data:ht.size(e)},{type:12,data:ht.size(t.kernelShape)}],i=[{name:"outputSize",type:"u32"},{name:"kernelSize",type:"u32"}];if(t.kernelShape.length<=2){let e=t.kernelShape[t.kernelShape.length-1],n=t.strides[t.strides.length-1],a=t.pads[t.pads.length/2-1],s=t.pads[t.pads.length-1],o=!!(a+s);r.push({type:12,data:e},{type:12,data:n},{type:12,data:a},{type:12,data:s}),i.push({name:"kw",type:"u32"},{name:"sw",type:"u32"},{name:"pwStart",type:"u32"},{name:"pwEnd",type:"u32"});let l=!1;if(2===t.kernelShape.length){let e=t.kernelShape[t.kernelShape.length-2],n=t.strides[t.strides.length-2],a=t.pads[t.pads.length/2-2],s=t.pads[t.pads.length-2];l=!!(a+s),r.push({type:12,data:e},{type:12,data:n},{type:12,data:a},{type:12,data:s}),i.push({name:"kh",type:"u32"},{name:"sh",type:"u32"},{name:"phStart",type:"u32"},{name:"phEnd",type:"u32"})}return[r,i,!0,o,l]}{if(n)throw new Error("Pooling with kernelShape.length > 2 is not supported for NHWC format.");let e=ht.computeStrides(t.kernelShape);return r.push({type:12,data:e},{type:12,data:t.pads},{type:12,data:t.strides}),i.push({name:"kernelStrides",type:"u32",length:e.length},{name:"pads",type:"u32",length:t.pads.length},{name:"strides",type:"u32",length:t.strides.length}),[r,i,!!t.pads.reduce(((e,t)=>e+t)),!1,!1]}},is=(e,t,n,r,i,a,s,o,l,u,d,c)=>{let h="NHWC"===i.format,p=t.type.value,f=Et("output",t.type.tensor,r);if(i.kernelShape.length<=2){let r="",u="",m="",g=n-(h?2:1);if(r=d?`\n                for (var i: u32 = 0u; i < uniforms.kw; i++) {\n                  xIndices[${g}] = indices[${g}] * uniforms.sw - uniforms.pwStart + i;\n                  if (xIndices[${g}] < 0 || xIndices[${g}]\n                      >= uniforms.x_shape[${g}]) {\n                    pad++;\n                    continue;\n                  }\n                  let x_val = x[${t.indicesToOffset("xIndices")}];\n                  ${a}\n                }`:`\n                for (var i: u32 = 0u; i < uniforms.kw; i++) {\n                  xIndices[${g}] = indices[${g}] * uniforms.sw - uniforms.pwStart + i;\n                  let x_val = x[${t.indicesToOffset("xIndices")}];\n                  ${a}\n                }`,2===i.kernelShape.length){let e=n-(h?3:2);u=c?`\n                for (var j: u32 = 0u; j < uniforms.kh; j++) {\n                  xIndices[${e}] = indices[${e}] * uniforms.sh - uniforms.phStart + j;\n                  if (xIndices[${e}] < 0 || xIndices[${e}] >= uniforms.x_shape[${e}]) {\n                    pad += i32(uniforms.kw);\n                    continue;\n                  }\n              `:`\n                for (var j: u32 = 0u; j < uniforms.kh; j++) {\n                  xIndices[${e}] = indices[${e}] * uniforms.sh - uniforms.phStart + j;\n                `,m="\n              }\n            "}return`\n            ${e.registerUniforms(l).declareVariables(t,f)}\n\n            ${e.mainStart()}\n              ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n\n              let indices = ${f.offsetToIndices("global_idx")};\n              var xIndices = ${f.offsetToIndices("global_idx")};\n\n              var value = ${p}(${o});\n              var pad = 0;\n              ${u}\n              ${r}\n              ${m}\n              ${s}\n\n              output[global_idx] = value;\n            }`}{if(h)throw new Error("Pooling with kernelShape.length > 2 is not supported for NHWC format.");let r=i.kernelShape.length,d=i.pads.length,c="";return c=u?`\n                if (xIndices[j] >= uniforms.x_shape[j]) {\n                  pad++;\n                  isPad = true;\n                  break;\n                }\n              }\n              if (!isPad) {\n                let x_val = x[${t.indicesToOffset("xIndices")}];\n                ${a}\n              }`:`\n              }\n              let x_val = x[${t.indicesToOffset("xIndices")}];\n              ${a}\n            `,`\n            ${e.registerUniforms(l).declareVariables(t,f)}\n\n            ${e.mainStart()}\n              ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n              let indices = ${f.offsetToIndices("global_idx")};\n              var xIndices = ${f.offsetToIndices("global_idx")};\n\n              var offsets: array<u32, ${r}>;\n\n              var value = ${p}(${o});\n              var pad = 0;\n              var isPad = false;\n\n              for (var i: u32 = 0u; i < uniforms.kernelSize; i++) {\n                var offset = i;\n                for (var j = 0u; j < ${r-1}u; j++) {\n                  offsets[j] = offset / ${St("uniforms.kernelStrides","j",r)};\n                  offset -= offsets[j] * ${St("uniforms.kernelStrides","j",r)};\n                }\n                offsets[${r-1}] = offset;\n\n                isPad = false;\n                for (var j = ${n-r}u; j < ${n}u; j++) {\n                  xIndices[j] = indices[j] * ${St("uniforms.strides",`j - ${n-r}u`,r)}\n                    + offsets[j - ${n-r}u] - ${St("uniforms.pads","j - 2u",d)};\n                  ${c}\n              }\n              ${s}\n\n              output[global_idx] = value;\n            }`}},as=e=>`${e.format};${e.ceilMode};${e.autoPad};${e.kernelShape.length}`,ss=e=>`${as(e)};${e.countIncludePad}`,os=e=>`${as(e)};${e.storageOrder};${e.dilations}`,ls=e=>({format:e.format,autoPad:["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][e.auto_pad],ceilMode:e.ceil_mode,kernelShape:e.kernel_shape,strides:e.strides,pads:e.pads}),us=(e,t,n,r)=>{let[i,a]=ns(t,r,n),s=kt("x",t.dataType,t.dims.length),o=s.type.value,l="";i.countIncludePad?l+=`value /= ${o}(uniforms.kernelSize);`:l+=`value /= ${o}(i32(uniforms.kernelSize) - pad);`;let[u,d,c,h,p]=rs(a,i);u.push(...bt(t.dims,a));return{name:e,shaderCache:{hint:`${r.cacheKey};${c};${h};${p}`,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:a,dataType:t.dataType}],dispatchGroup:{x:Math.ceil(ht.size(a)/64)},programUniforms:u}),getShaderSource:e=>is(e,s,t.dims.length,a.length,i,"value += x_val;",l,0,d,c,h,p)}},ds=e=>{let t=0!==e.count_include_pad,n=ls(e);if(0!==n.ceilMode)throw new Error("using ceil() in shape computation is not yet supported for AveragePool");let r={countIncludePad:t,...n,cacheKey:""};return{...r,cacheKey:ss(r)}},cs=(e,t)=>{ts(e.inputs),e.compute(us("AveragePool",e.inputs[0],!1,t))},hs={autoPad:"",ceilMode:0,countIncludePad:!1,kernelShape:[],strides:[],pads:[],storageOrder:0,dilations:[]},ps=e=>{let t=e.format;return{format:t,...hs,cacheKey:t}},fs=(e,t)=>{ts(e.inputs),e.compute(us("GlobalAveragePool",e.inputs[0],!0,t))},ms=(e,t,n,r)=>{let[i,a]=ns(t,r,n),s=kt("x",t.dataType,t.dims.length),[o,l,u,d,c]=rs(a,i);return o.push(...bt(t.dims,a)),{name:e,shaderCache:{hint:`${r.cacheKey};${u};${d};${c}`,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:a,dataType:t.dataType}],dispatchGroup:{x:Math.ceil(ht.size(a)/64)},programUniforms:o}),getShaderSource:e=>is(e,s,t.dims.length,a.length,i,"\n      value = max(x_val, value);\n    ","",-1e5,l,u,d,c)}},gs=(e,t)=>{ts(e.inputs),e.compute(ms("MaxPool",e.inputs[0],!1,t))},_s=e=>{let t=e.storage_order,n=e.dilations,r=ls(e);if(0!==t)throw new Error("column major storage order is not yet supported for MaxPool");if(0!==r.ceilMode)throw new Error("using ceil() in shape computation is not yet supported for MaxPool");let i={storageOrder:t,dilations:n,...r,cacheKey:""};return{...i,cacheKey:os(i)}},ys=e=>{let t=e.format;return{format:t,...hs,cacheKey:t}},ws=(e,t)=>{ts(e.inputs),e.compute(ms("GlobalMaxPool",e.inputs[0],!0,t))}})),bl=j((()=>{se(),Io(),Do(),vs=(e,t,n)=>{if(e===t||e<t&&n<0||e>t&&n>0)throw new Error("Range these inputs' contents are invalid.")},bs=(e,t,n,r)=>{let i=Math.abs(Math.ceil((t-e)/n)),a=[i],s=i,o=[{type:12,data:s},{type:r,data:e},{type:r,data:n},...bt(a)];return{name:"Range",shaderCache:{hint:`${r}`},getShaderSource:e=>{let t=Et("output",r,a.length),n=t.type.value,i=[{name:"outputSize",type:"u32"},{name:"start",type:n},{name:"delta",type:n}];return`\n        ${e.registerUniforms(i).declareVariables(t)}\n        ${e.mainStart()}\n        ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n        output[global_idx] = uniforms.start + ${n}(global_idx) * uniforms.delta;\n      }`},getRunData:()=>({outputs:[{dims:a,dataType:r}],dispatchGroup:{x:Math.ceil(s/64)},programUniforms:o})}},$s=e=>{let t=0,n=0,r=0;6===e.inputs[0].dataType?(t=e.inputs[0].getInt32Array()[0],n=e.inputs[1].getInt32Array()[0],r=e.inputs[2].getInt32Array()[0]):1===e.inputs[0].dataType&&(t=e.inputs[0].getFloat32Array()[0],n=e.inputs[1].getFloat32Array()[0],r=e.inputs[2].getFloat32Array()[0]),d.webgpu.validateInputContent&&vs(t,n,r),e.compute(bs(t,n,r,e.inputs[0].dataType),{inputs:[]})}})),$l=j((()=>{Io(),jo(),Fo(),Do(),xs=(e,t)=>{if(e.every((e=>e>0||(()=>{throw new Error("Resize requires scales input values to be positive")}))),e.length>0)if("linear"===t.mode){if(!(2===e.length||3===e.length||4===e.length&&1===e[0]&&1===e[1]||4===e.length&&1===e[0]&&1===e[3]||5===e.length&&1===e[0]&&1===e[1]))throw new Error("For linear mode, Resize requires scales to be 2D, 3D, 4D with either two outermost or one innermost and\n            one outermost scale values equal to 1, or 5D with two outermost scale values equal to 1")}else if("cubic"===t.mode&&!(2===e.length||4===e.length&&1===e[0]&&1===e[1]||4===e.length&&1===e[0]&&1===e[3]))throw new Error("Resize requires scales input size to be 2 or 4 for cubic mode")},Cs=(e,t,n)=>{t.every((e=>e>=0&&e<n||(()=>{throw new Error("Resize requires axes input values to be positive and less than rank")})));let r=new Array(n).fill(1);return t.forEach(((t,n)=>r[t]=e[n])),r},Ts=(e,t,n,r,i,a)=>{let[s,o,l]=n>10?[1,2,3]:[-1,e.length>1?1:-1,-1],u=e[0].dims.length;if(s>0&&e.length>s&&e[s].dims.length>0)e[s].getFloat32Array().forEach((e=>a.push(e)));else if("tf_crop_and_resize"===t.coordinateTransformMode)throw new Error("Resize requires RoI input to be specified when coordinateTransformMode is tfCropAndResize");if(o>0&&e.length>o&&e[o].dims.length>0){if(e[o].getFloat32Array().forEach((e=>r.push(e))),0!==r.length&&r.length!==u&&n>=18&&r.length!==t.axes.length)throw new Error("Resize requires scales input size to be same as input rank or axes size for opset 18 and up");xs(r,t),t.axes.length>0&&Cs(r,t.axes,u).forEach(((e,t)=>r[t]=e))}if(l>0&&e.length>l&&(e[l].getBigInt64Array().forEach((e=>i.push(Number(e)))),i.length!==u||n>=18&&i.length===t.axes.length))throw new Error("Resize requires sizes input size to be same as input rank or axes size for opset 18 and up");if(t.axes.length>0){if(r.length!==t.axes.length)throw new Error('Resize requires "scales" input size to be of axes rank when axes attributes is specified');if(i.length!==t.axes.length)throw new Error('Resize requires "sizes" input size to be of rank axes rank when axes attributes is specified')}if(typeof r<"u"&&typeof i<"u"&&r.length>0&&i.length>u)throw new Error("Resize requires only of scales or sizes to be specified")},Ss=(e,t)=>`fn getOriginalCoordinateFromResizedCoordinate(xResized: u32, xScale: f32, lengthResized: u32,\n     lengthOriginal: u32, roiStart: f32, roiEnd: f32) -> ${t} { `+(()=>{switch(e){case"asymmetric":return`return ${t}(xResized) / ${t}(xScale);`;case"pytorch_half_pixel":return`if (lengthResized > 1) {\n                    return (${t}(xResized) + 0.5) / ${t}(xScale) - 0.5;\n                  } else {\n                    return 0.0;\n                  }`;case"tf_half_pixel_for_nn":return`return (${t}(xResized) + 0.5) / ${t}(xScale);`;case"align_corners":return`if (lengthResized == 1) {\n                    return 0.0;\n                  } else {\n                    // The whole part and the fractional part are calculated separately due to inaccuracy of floating\n                    // point division. As an example, f32(21) / f32(7) may evaluate to 2.99... instead of 3, causing an\n                    // offset-by-one error later in floor().\n                    let whole = ${t}(xResized * (lengthOriginal - 1) / (lengthResized - 1));\n                    let fract =\n                        ${t}(xResized * (lengthOriginal - 1) % (lengthResized - 1)) / ${t}(lengthResized - 1);\n                    return whole + fract;\n                  }`;case"tf_crop_and_resize":return`if (lengthResized > 1) {\n                    return ${t}(roiStart) * ${t}(lengthOriginal - 1) +\n                        (${t}(xResized) * ${t}(roiEnd - roiStart) * ${t}(lengthOriginal - 1)) /\n                        ${t}(lengthResized - 1);\n                  } else {\n                    return 0.5 * ${t}(roiStart + roiEnd) * ${t}(lengthOriginal - 1);\n                  }`;case"half_pixel_symmetric":return`const outputWidth = ${t}xScale * ${t}(lengthResized);\n                  const adjustment = ${t}(lengthResized) / outputWidth;\n                  const center = ${t}(lengthOriginal) / 2;\n                  const offset = center * (1 - adjustment);\n                  return offset + ((${t}(xResized) + 0.5) / ${t}(xScale)) - 0.5;`;case"half_pixel":return`return ((${t}(xResized) + 0.5) / ${t}(xScale)) - 0.5;`;default:throw new Error(`Coordinate transform mode ${e} is not supported`)}})()+"}",Ms=(e,t,n)=>`fn getNearestPixelFromOriginal(xOriginal: ${n}, isDownSample: bool) -> ${n} {`+(()=>{switch(e){case"round_prefer_ceil":return"if (fract(xOriginal) == 0.5) {             return ceil(xOriginal);           } else {             return round(xOriginal);           }";case"floor":return"return floor(xOriginal);";case"ceil":return"return ceil(xOriginal);";case"round_prefer_floor":return"if (fract(xOriginal) == 0.5) {                     return floor(xOriginal);                   } else {                     return round(xOriginal);                   }";default:if(t<11)return"if (isDownSample)                     {                       return ceil(xOriginal);                     } else {                       return xOriginal;                     }";throw new Error(`Nearest mode ${e} is not supported`)}})()+"}",ks=(e,t,n)=>{let r=new Array(n).fill(0).concat(new Array(n).fill(1)),i=0===e.length?r:e.slice();return t.length>0?(t.forEach(((e,a)=>{r[e]=i[a],r[a+n]=i[t.length+a]})),r):i},Es=(e,t,n,r)=>{let i=[];if(n.length>0)if(r.length>0){if(e.forEach((e=>i.push(e))),Math.max(...r)>e.length)throw new Error("axes is out of bound");r.forEach(((e,t)=>i[e]=n[t]))}else n.forEach((e=>i.push(e)));else{if(0===t.length)throw new Error("Resize requires either scales or sizes.");i=e.map(((e,n)=>Math.round(e*t[n])))}return i},As=(e,t,n)=>{let r=(()=>{switch(n.keepAspectRatioPolicy){case"not_larger":return n.axes.length>0?Math.min(...n.axes.map((e=>t[e])),Number.MAX_VALUE):Math.min(...t,Number.MAX_VALUE);case"not_smaller":return n.axes.length>0?Math.max(...n.axes.map((e=>t[e])),Number.MIN_VALUE):Math.max(...t,Number.MIN_VALUE);default:throw new Error(`Keep aspect ratio policy ${n.keepAspectRatioPolicy} is not supported`)}})();t.fill(1,0,t.length);let i=e.slice();return n.axes.length>0?(n.axes.forEach((e=>t[e]=r)),n.axes.forEach((n=>i[n]=Math.round(e[n]*t[n])))):(t.fill(r,0,t.length),i.forEach(((e,n)=>i[n]=Math.round(e*t[n])))),i},Is=(e,t,n,r,i)=>`\n    fn calculateOriginalIndicesFromOutputIndices(output_indices: ${e.type.indices}) -> array<${e.type.value}, ${n.length}> {\n      var original_indices: array<${e.type.value}, ${n.length}>;\n      for (var i:u32 = 0; i < ${n.length}; i++) {\n        var output_index = ${e.indicesGet("output_indices","i")};\n        var scale = ${St("uniforms.scales","i",r)};\n        var roi_low = ${St("uniforms.roi","i",i)};\n        var roi_hi = ${St("uniforms.roi",`i + ${t.length}`,i)};\n        if (scale == 1.0) {\n          original_indices[i] = ${e.type.value}(output_index);\n        } else {\n          var input_shape_i = ${St("uniforms.input_shape","i",t.length)};\n          var output_shape_i = ${St("uniforms.output_shape","i",n.length)};\n          original_indices[i] = getOriginalCoordinateFromResizedCoordinate(output_index, scale, output_shape_i,\n                                                                           input_shape_i, roi_low, roi_hi);\n        }\n      }\n      return original_indices;\n    }`,Ps=(e,t,n,r,i,a,s)=>`\n    fn calculateInputIndicesFromOutputIndices(output_indices: ${t.type.indices}) -> ${e.type.indices} {\n      var input_indices: ${e.type.indices};\n      for (var i:u32 = 0; i < ${r.length}; i++) {\n        var output_index = ${t.indicesGet("output_indices","i")};\n        var input_index: u32;\n        var scale = ${St("uniforms.scales","i",i)};\n        if (scale == 1.0) {\n          input_index = output_index;\n        } else {\n          var roi_low = ${St("uniforms.roi","i",a)};\n          var roi_hi = ${St("uniforms.roi",`i + ${n.length}`,a)};\n          var input_shape_i = ${St("uniforms.input_shape","i",n.length)};\n          var output_shape_i = ${St("uniforms.output_shape","i",r.length)};\n          var original_idx = getOriginalCoordinateFromResizedCoordinate(output_index, scale, output_shape_i,\n                                                                        input_shape_i, roi_low, roi_hi);\n          if (!${s} || (original_idx >= 0 && original_idx < ${t.type.value}(input_shape_i))) {\n            if (original_idx < 0) {\n              input_index = 0;\n            } else if (original_idx > ${t.type.value}(input_shape_i - 1)) {\n              input_index = input_shape_i - 1;\n            } else {\n              input_index = u32(getNearestPixelFromOriginal(original_idx, scale < 1));\n            }\n          } else {\n            input_index = u32(original_idx);\n          }\n        }\n        ${e.indicesSet("input_indices","i"," input_index")}\n      }\n      return input_indices;\n    }`,Os=(e,t)=>`\n    fn checkInputIndices(input_indices: ${e.type.indices}) -> bool {\n      for (var i:u32 = 0; i < ${t.length}; i++) {\n        var input_index = ${e.indicesGet("input_indices","i")};\n        if (input_index < 0 || input_index >= ${St("uniforms.input_shape","i",t.length)}) {\n          return false;\n        }\n      }\n      return true;\n    }`,zs=(e,t,n,r)=>e.rank>r?`\n    ${e.indicesSet("input_indices",t,"channel")};\n    ${e.indicesSet("input_indices",n,"batch")};\n`:"",Bs=(e,t,n,r,i)=>{let[a,s,o,l]=2===n.length?[-1,0,1,-1]:[0,2,3,1],u=e.type.value;return`\n    fn getInputValue(batch: u32, channel: u32, row: u32, col: u32) -> ${u} {\n      var input_indices: ${e.type.indices};\n      ${e.indicesSet("input_indices",s,`max(0, min(row, ${n[s]} - 1))`)};\n      ${e.indicesSet("input_indices",o,`max(0, min(col, ${n[o]} - 1))`)};\n      ${zs(e,l,a,2)}\n      return ${e.getByIndices("input_indices")};\n    }\n\n    fn bilinearInterpolation(output_indices: ${t.type.indices}) -> ${u} {\n      var originalIndices = calculateOriginalIndicesFromOutputIndices(output_indices);\n      var row:${u} = originalIndices[${s}];\n      var col:${u} = originalIndices[${o}];\n      ${r?`if (row < 0 || row > (${n[s]} - 1) || col < 0 || col > (${n[o]} - 1)) {\n        return ${i};\n      }`:""};\n      row = max(0, min(row, ${n[s]} - 1));\n      col = max(0, min(col, ${n[o]} - 1));\n      var row1: u32 = u32(row);\n      var col1: u32 = u32(col);\n      var row2: u32 = u32(row + 1);\n      var col2: u32 = u32(col + 1);\n      var channel: u32 = ${n.length>2?`u32(originalIndices[${l}])`:"0"};\n      var batch: u32 =  ${n.length>2?`u32(originalIndices[${a}])`:"0"};\n      var x11: ${u} = getInputValue(batch, channel, row1, col1);\n      var x12: ${u} = getInputValue(batch, channel, row1, col2);\n      var x21: ${u} = getInputValue(batch, channel, row2, col1);\n      var x22: ${u} = getInputValue(batch, channel, row2, col2);\n      var dx1: ${u} = abs(row - ${u}(row1));\n      var dx2: ${u} = abs(${u}(row2) - row);\n      var dy1: ${u} = abs(col - ${u}(col1));\n      var dy2: ${u} = abs(${u}(col2) - col);\n      if (row1 == row2) {\n        dx1 = 0.5;\n        dx2 = 0.5;\n      }\n      if (col1 == col2) {\n        dy1 = 0.5;\n        dy2 = 0.5;\n      }\n      return (x11 * dx2 * dy2 + x12 * dx2 * dy1 + x21 * dx1 * dy2 + x22 * dx1 * dy1);\n    }`},Rs=(e,t,n,r,i,a,s,o,l,u)=>{let d=2===n.length,[c,h]=d?[0,1]:[2,3],p=e.type.value,f=s=>{let d=s===c?"row":"col";return`\n      fn ${d}CubicInterpolation(input_indices: ${e.type.indices}, output_indices: ${t.type.indices}) -> ${p} {\n        var output_index = ${t.indicesGet("output_indices",s)};\n        var originalIdx: ${p} = getOriginalCoordinateFromResizedCoordinate(output_index, ${i[s]},\n        ${r[s]}, ${n[s]}, ${a[s]}, ${a[s]} + ${n.length});\n        var fractOriginalIdx: ${p} = originalIdx - floor(originalIdx);\n        var coefs = getCubicInterpolationCoefs(fractOriginalIdx);\n\n        if (${o} && (originalIdx < 0 || originalIdx > (${n[s]} - 1))) {\n          return ${l};\n        }\n        var data: array<${p}, 4> = array<${p}, 4>(0.0, 0.0, 0.0, 0.0);\n        for (var i: i32 = -1; i < 3; i++) {\n          var ${d}: ${p} = originalIdx + ${p}(i);\n          if (${d} < 0 || ${d} >= ${n[s]}) {\n            ${u?"coefs[i + 1] = 0.0;\n                        continue;":o?`return ${l};`:`${d} = max(0, min(${d}, ${n[s]} - 1));`};\n          }\n        var input_indices_copy: ${e.type.indices} = input_indices;\n          ${e.indicesSet("input_indices_copy",s,`u32(${d})`)};\n          data[i + 1] = ${s===c?e.getByIndices("input_indices_copy"):"rowCubicInterpolation(input_indices_copy, output_indices)"};\n        }\n        return cubicInterpolation1D(data, coefs);\n      }`};return`\n    ${f(c)};\n    ${f(h)};\n  fn getCubicInterpolationCoefs(s: ${p}) -> array<${p}, 4> {\n    var absS = abs(s);\n    var coeffs: array<${p}, 4> = array<${p}, 4>(0.0, 0.0, 0.0, 0.0);\n    var oneMinusAbsS: ${p} = 1.0 - absS;\n    var twoMinusAbsS: ${p} = 2.0 - absS;\n    var onePlusAbsS: ${p} = 1.0 + absS;\n    coeffs[0] = ((${s} * onePlusAbsS - 5 * ${s}) * onePlusAbsS + 8 * ${s}) * onePlusAbsS - 4 * ${s};\n    coeffs[1] = ((${s} + 2) * absS - (${s} + 3)) * absS * absS + 1;\n    coeffs[2] = ((${s} + 2) * oneMinusAbsS - (${s} + 3)) * oneMinusAbsS * oneMinusAbsS + 1;\n    coeffs[3] = ((${s} * twoMinusAbsS - 5 * ${s}) * twoMinusAbsS + 8 * ${s}) * twoMinusAbsS - 4 * ${s};\n    return coeffs;\n  }\n\n  fn cubicInterpolation1D(x: array<${p}, 4>, coefs: array<${p}, 4>) -> ${p} {\n    var coefsSum: ${p} = coefs[0] + coefs[1] + coefs[2] + coefs[3];\n    return (x[0] * coefs[0] + x[1] * coefs[1]+ x[2] * coefs[2]+ x[3] * coefs[3]) / coefsSum;\n  }\n\n  fn bicubicInterpolation(output_indices: ${t.type.indices}) -> ${p} {\n    var input_indices: ${e.type.indices} = output_indices;\n    return colCubicInterpolation(input_indices, output_indices);\n  }\n    `},Fs=(e,t,n,r,i)=>{let[a,s,o,l,u]=3===n.length?[-1,0,1,2,-1]:[0,2,3,4,1],d=e.type.value;return`\n    fn getInputValue(batch: u32, channel: u32, depth:u32, height: u32, width: u32) -> ${d} {\n      var input_indices: ${e.type.indices};\n      ${e.indicesSet("input_indices",s,`max(0, min(depth, ${n[s]} - 1))`)};\n      ${e.indicesSet("input_indices",o,`max(0, min(height, ${n[o]} - 1))`)};\n      ${e.indicesSet("input_indices",l,`max(0, min(width, ${n[l]} - 1))`)};\n      ${zs(e,u,a,3)}\n      return ${e.getByIndices("input_indices")};\n    }\n\n    fn trilinearInterpolation(output_indices: ${t.type.indices}) -> ${d} {\n      var originalIndices = calculateOriginalIndicesFromOutputIndices(output_indices);\n      var depth:${d} = originalIndices[${s}];\n      var height:${d} = originalIndices[${o}];\n      var width:${d} = originalIndices[${l}];\n      ${r?`if (depth < 0 || depth > (${n[s]} - 1) || height < 0 || height > (${n[o]} - 1) || width < 0 || (width > ${n[l]} - 1)) {\n      return ${i};\n        }`:""};\n\n    depth = max(0, min(depth, ${n[s]} - 1));\n      height = max(0, min(height, ${n[o]} - 1));\n      width = max(0, min(width, ${n[l]} - 1));\n      var depth1: u32 = u32(depth);\n      var height1: u32 = u32(height);\n      var width1: u32 = u32(width);\n      var depth2: u32 = u32(depth + 1);\n      var height2: u32 = u32(height + 1);\n      var width2: u32 = u32(width + 1);\n      var channel: u32 = ${n.length>3?`u32(originalIndices[${u}])`:"0"};\n      var batch: u32 =  ${n.length>3?`u32(originalIndices[${a}])`:"0"};\n\n      var x111: ${d} = getInputValue(batch, channel, depth1, height1, width1);\n      var x112: ${d} = getInputValue(batch, channel, depth1, height1, width2);\n      var x121: ${d} = getInputValue(batch, channel, depth1, height2, width1);\n      var x122: ${d} = getInputValue(batch, channel, depth1, height2, width2);\n      var x211: ${d} = getInputValue(batch, channel, depth2, height1, width1);\n      var x212: ${d} = getInputValue(batch, channel, depth2, height1, width2);\n      var x221: ${d} = getInputValue(batch, channel, depth2, height2, width1);\n      var x222: ${d} = getInputValue(batch, channel, depth2, height2, width2);\n      var dx1: ${d} = abs(depth - ${d}(depth1));\n      var dx2: ${d} = abs(${d}(depth2) - depth);\n      var dy1: ${d} = abs(height - ${d}(height1));\n      var dy2: ${d} = abs(${d}(height2) - height);\n      var dz1: ${d} = abs(width - ${d}(width1));\n      var dz2: ${d} = abs(${d}(width2) - width);\n      if (depth1 == depth2) {\n        dx1 = 0.5;\n        dx2 = 0.5;\n      }\n      if (height1 == height2) {\n        dy1 = 0.5;\n        dy2 = 0.5;\n      }\n      if (width1 == width2) {\n        dz1 = 0.5;\n        dz2 = 0.5;\n      }\n      return (x111 * dx2 * dy2 * dz2 + x112 * dx2 * dy2 * dz1 + x121 * dx2 * dy1 *dz2 + x122 * dx2 * dy1 * dz1 +\n              x211 * dx1 * dy2 * dz2 + x212 * dx1 * dy2 * dz1 + x221 * dx1 * dy1 *dz2 + x222 * dx1 * dy1 * dz1);\n    }`},js=(e,t,n,r,i,a)=>{let s=e.dims,o=ks(a,t.axes,s.length),l=Es(s,r,i,t.axes),u=r.slice();0===r.length&&(u=s.map(((e,t)=>0===e?1:l[t]/e)),"stretch"!==t.keepAspectRatioPolicy&&(l=As(s,u,t)));let d=Et("output",e.dataType,l.length),c=kt("input",e.dataType,s.length),h=ht.size(l),p=s.length===l.length&&s.every(((e,t)=>e===l[t])),f="tf_crop_and_resize"===t.coordinateTransformMode,m=t.extrapolationValue,g=c.type.value;return{name:"Resize",shaderCache:{hint:`${t.cacheKey}|${n}|${u.length>0?u:""}|${i.length>0?i:""}|${o.length>0?o:""}|${p}|${s}`,inputDependencies:["rank"]},getShaderSource:e=>`\n      ${p?"":`\n      ${Ss(t.coordinateTransformMode,g)};\n      ${(()=>{switch(t.mode){case"nearest":return`\n              ${Os(c,s)};\n              ${Ms(t.nearestMode,n,g)};\n              ${Ps(c,d,s,l,u.length,o.length,f)};\n              `;case"linear":return`\n              ${Is(d,s,l,u.length,o.length)};\n              ${(()=>{if(2===s.length||4===s.length)return`${Bs(c,d,s,f,m)}`;if(3===s.length||5===s.length)return`${Fs(c,d,s,f,m)}`;throw Error("Linear mode only supports input dims 2, 3, 4 and 5 are supported in linear mode.")})()};\n            `;case"cubic":return`\n            ${(()=>{if(2===s.length||4===s.length)return`${Rs(c,d,s,l,u,o,t.cubicCoeffA,f,t.extrapolationValue,t.excludeOutside)}`;throw Error("Cubic mode only supports input dims 2 and 4 are supported in linear mode.")})()};\n            `;default:throw Error("Invalid resize mode")}})()};\n      `}\n      ${e.registerUniform("output_size","u32").registerUniform("scales","f32",u.length).registerUniform("roi","f32",o.length).declareVariables(c,d)}\n      ${e.mainStart()}\n        ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n        ${p?"output[global_idx] = input[global_idx];":`\n        let output_indices = ${d.offsetToIndices("global_idx")};\n        var input_indices: ${c.type.indices};\n        ${(()=>{switch(t.mode){case"nearest":return`input_indices = calculateInputIndicesFromOutputIndices(output_indices);\n                if (checkInputIndices(input_indices)) {\n                  output[global_idx] = ${c.getByIndices("input_indices")};\n                } else {\n                  output[global_idx] = ${t.extrapolationValue};\n                }`;case"linear":return`output[global_idx] = ${2===s.length||4===s.length?"bilinearInterpolation":"trilinearInterpolation"}(output_indices);`;case"cubic":return"output[global_idx] = bicubicInterpolation(output_indices);";default:throw Error(`Unsupported resize mode: ${t.mode}`)}})()};\n`}\n      }`,getRunData:()=>({outputs:[{dims:l,dataType:e.dataType}],dispatchGroup:{x:Math.ceil(h/64)},programUniforms:[{type:12,data:h},{type:1,data:u},{type:1,data:o},...bt(s,l)]})}},Ds=e=>{let t=e.customDataBuffer;return new Uint32Array(t,t.byteOffset,1)[0]},Ls=(e,t)=>{let n=[],r=[],i=[],a=Ds(e);if(0!==t.antialias)throw Error("Only default value (0) for Antialias attribute is supported");Ts(e.inputs,t,a,n,r,i),e.compute(js(e.inputs[0],t,a,n,r,i),{inputs:[0]})},Ns=e=>{let t=e.antialias,n=e.axes,r=e.coordinateTransformMode,i=e.cubicCoeffA,a=0!==e.excludeOutside,s=e.extrapolationValue,o=e.keepAspectRatioPolicy,l=e.mode,u=""===e.nearestMode?"simple":e.nearestMode;return ut({antialias:t,axes:n,coordinateTransformMode:r,cubicCoeffA:i,excludeOutside:a,extrapolationValue:s,keepAspectRatioPolicy:o,mode:l,nearestMode:u})}})),xl=j((()=>{Io(),jo(),Do(),Ws=e=>{if(!e||e.length<3)throw new Error("layerNorm requires at least 3 inputs.");let t=e[0],n=e[1],r=e[2];if(t.dataType!==n.dataType||t.dataType!==r.dataType)throw new Error("All inputs must have the same data type");if(3!==t.dims.length&&2!==t.dims.length)throw new Error("Input must be 2D or 3D");if(3!==n.dims.length&&2!==n.dims.length)throw new Error("Skip must be 2D or 3D");let i=t.dims[t.dims.length-1],a=t.dims[t.dims.length-2];if(n.dims[n.dims.length-1]!==i)throw new Error("Skip must have the same hidden size as input");if(n.dims[n.dims.length-2]!==a)throw new Error("Skip must have the same sequence length as input");if(1!==r.dims.length)throw new Error("Gamma must be 1D");if(r.dims[r.dims.length-1]!==i)throw new Error("Gamma must have the same hidden size as input");if(e.length>3){let t=e[3];if(1!==t.dims.length)throw new Error("Beta must be 1D");if(t.dims[t.dims.length-1]!==i)throw new Error("Beta must have the same hidden size as input")}if(e.length>4){let t=e[4];if(1!==t.dims.length)throw new Error("Bias must be 1D");if(t.dims[t.dims.length-1]!==i)throw new Error("Bias must have the same hidden size as input")}},Us=(e,t,n,r)=>{let i=e[0].dims,a=ht.size(i),s=i,o=a,l=i.slice(-1)[0],u=r?i.slice(0,-1).concat(1):[],d=e.length>3,c=e.length>4,h=r&&n>1,p=r&&n>2,f=n>3,m=$t(l),g=[{type:12,data:o},{type:12,data:m},{type:12,data:l},{type:1,data:t.epsilon}],_=[{dims:s,dataType:e[0].dataType}];return n>1&&_.push({dims:u,dataType:1}),n>2&&_.push({dims:u,dataType:1}),n>3&&_.push({dims:i,dataType:e[0].dataType}),{name:"SkipLayerNormalization",shaderCache:{hint:`${m};${h};${p};${f}`,inputDependencies:e.map(((e,t)=>"type"))},getShaderSource:t=>{let n=[kt("x",e[0].dataType,e[0].dims,m),kt("skip",e[1].dataType,e[1].dims,m),kt("gamma",e[2].dataType,e[2].dims,m)];d&&n.push(kt("beta",e[3].dataType,e[3].dims,m)),c&&n.push(kt("bias",e[4].dataType,e[4].dims,m)),n.push(Et("output",e[0].dataType,s,m)),h&&n.push(Et("mean_output",1,u)),p&&n.push(Et("inv_std_output",1,u)),f&&n.push(Et("input_skip_bias_sum",e[0].dataType,s,m));let r=wt(e[0].dataType);return`\n\n      ${t.registerUniforms([{name:"output_size",type:"u32"},{name:"components",type:"u32"},{name:"hidden_size",type:"u32"},{name:"epsilon",type:"f32"}]).declareVariables(...n)}\n\n      ${t.mainStart()}\n        ${t.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size / uniforms.hidden_size")}\n        let hidden_size_vectorized: u32 = uniforms.hidden_size / uniforms.components;\n        let offset = global_idx * hidden_size_vectorized;\n        var sum = ${xt("f32",m)};\n        var squareSum = ${xt("f32",m)};\n        for (var i: u32 = 0; i < hidden_size_vectorized; i++) {\n          let skip_value = skip[offset + i];\n          let bias_value = ${c?"bias[i]":"0.0"};\n          let input_value = x[offset + i];\n          let value = input_value + skip_value + bias_value;\n          ${f?"input_skip_bias_sum[offset + i] = value;":""}\n          output[offset + i] = value;\n          let f32_value = ${Ct(r,m,"value")};\n          sum += f32_value;\n          squareSum += f32_value * f32_value;\n        }\n        let mean = ${Tt("sum",m)} / f32(uniforms.hidden_size);\n        let inv_std_dev = inverseSqrt(${Tt("squareSum",m)} / f32(uniforms.hidden_size) - mean * mean + uniforms.epsilon);\n        ${h?"mean_output[global_idx] = mean;":""}\n        ${p?"inv_std_output[global_idx] = inv_std_dev;":""}\n        for (var i: u32 = 0; i < hidden_size_vectorized; i++) {\n          output[offset + i] = (output[offset + i] - ${r}(mean)) * ${r}(inv_std_dev) * gamma[i] + ${d?"beta[i]":"0.0"};\n        }\n      }`},getRunData:()=>({outputs:_,dispatchGroup:{x:Math.ceil(o/l/64)},programUniforms:g})}},Vs=(e,t)=>{Ws(e.inputs);let n=[0];e.outputCount>1&&n.push(-3),e.outputCount>2&&n.push(-3),e.outputCount>3&&n.push(3),e.compute(Us(e.inputs,t,e.outputCount,!1),{outputs:n})}})),Cl=j((()=>{Io(),jo(),Fo(),Do(),Gs=(e,t)=>{if(!e||e.length<1)throw new Error("too few inputs");if(0!==t.axes.length){if(t.axes.length!==t.starts.length||t.axes.length!==t.ends.length)throw new Error("axes, starts and ends must have the same length")}else if(t.starts.length!==t.ends.length)throw new Error("starts and ends must have the same length");e.slice(1).forEach(((t,n)=>{if(6!==e[n+1].dataType&&7!==e[n+1].dataType)throw new Error(`Input ${n} must be an array of int32 or int64`)}))},qs=(e,t)=>{let n=[];if(e.length>t)if(7===e[t].dataType)e[t].getBigInt64Array().forEach((e=>n.push(Number(e))));else{if(6!==e[t].dataType)throw new Error(`Input ${t} must be an array of int32 or int64`);e[t].getInt32Array().forEach((e=>n.push(Number(e))))}return n},Hs=(e,t)=>{if(e.length>1){let t=qs(e,1),n=qs(e,2),r=qs(e,3);return 0===r.length&&(r=[...Array(e[0].dims.length).keys()]),ut({starts:t,ends:n,axes:r})}return t},Ks=(e,t,n,r,i)=>{let a=e;return e<0&&(a+=n[r[t]]),i[t]<0?Math.max(0,Math.min(a,n[r[t]]-1)):Math.max(0,Math.min(a,n[r[t]]))},Ys=(e,t,n)=>`fn calculateInputIndices(output_indices: ${t.type.indices}) -> ${e.type.indices} {\n          var input_indices: ${e.type.indices};\n          var carry = 0u;\n          for (var i = ${n.length}; i >= 0; i--) {\n            let input_shape_i = ${St("uniforms.input_shape","i",n.length)};\n            let steps_i = ${St("uniforms.steps","i",n.length)};\n            let signs_i = ${St("uniforms.signs","i",n.length)};\n            let starts_i = ${St("uniforms.starts","i",n.length)};\n            var output_index = ${t.indicesGet("output_indices","i")};\n            var input_index = output_index * steps_i + starts_i + carry;\n            carry = input_index / input_shape_i;\n            input_index = input_index % input_shape_i;\n            if (signs_i < 0) {\n              input_index = input_shape_i - input_index - 1u + starts_i;\n            }\n            ${e.indicesSet("input_indices","i","input_index")};\n          }\n          return input_indices;\n      }`,Qs=(e,t)=>{let n=e[0].dims,r=ht.size(n),i=t.axes.length>0?ht.normalizeAxes(t.axes,n.length):[...Array(n.length).keys()],a=qs(e,4);a.forEach((e=>0!==e||(()=>{throw new Error("step cannot be 0")}))),0===a.length&&(a=Array(i.length).fill(1));let s=t.starts.map(((e,t)=>Ks(e,t,n,i,a))),o=t.ends.map(((e,t)=>Ks(e,t,n,i,a)));if(i.length!==s.length||i.length!==o.length)throw new Error("start, ends and axes should have the same number of elements");if(i.length!==n.length)for(let e=0;e<n.length;++e)i.includes(e)||(s.splice(e,0,0),o.splice(e,0,n[e]),a.splice(e,0,1));let l=a.map((e=>Math.sign(e)));a.forEach(((e,t,n)=>{if(e<0){let r=(o[t]-s[t])/e,i=s[t],l=i+r*a[t];s[t]=l,o[t]=i,n[t]=-e}}));let u=n.slice(0);i.forEach(((e,t)=>{u[e]=Math.ceil((o[e]-s[e])/a[e])}));let d={dims:u,dataType:e[0].dataType},c=Et("output",e[0].dataType,u.length),h=kt("input",e[0].dataType,e[0].dims.length),p=ht.size(u),f=[{name:"outputSize",type:"u32"},{name:"starts",type:"u32",length:s.length},{name:"signs",type:"i32",length:l.length},{name:"steps",type:"u32",length:a.length}],m=[{type:12,data:p},{type:12,data:s},{type:6,data:l},{type:12,data:a},...bt(e[0].dims,u)];return{name:"Slice",shaderCache:{hint:`${l.length}_${s.length}_${a.length}`,inputDependencies:["rank"]},getShaderSource:e=>`\n      ${e.registerUniforms(f).declareVariables(h,c)}\n        ${Ys(h,c,n)}\n        ${e.mainStart()}\n          ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n          let output_indices = ${c.offsetToIndices("global_idx")};\n          let input_indices = calculateInputIndices(output_indices);\n          ${c.setByOffset("global_idx",h.getByIndices("input_indices"))}\n      }`,getRunData:()=>({outputs:[d],dispatchGroup:{x:Math.ceil(r/64)},programUniforms:m})}},Xs=(e,t)=>{Gs(e.inputs,t);let n=Hs(e.inputs,t);e.compute(Qs(e.inputs,n),{inputs:[0]})},Zs=e=>{let t=e.starts,n=e.ends,r=e.axes;return ut({starts:t,ends:n,axes:r})}})),Tl=j((()=>{Io(),jo(),Fo(),Do(),Js=e=>{if(!e||1!==e.length)throw new Error("Softmax op requires 1 input.")},eo=(e,t)=>{let n=e.dims,r=ht.size(n),i=t.axis;if(i<0&&(i=n.length+i),i<n.length-1)throw new Error("softmax only supports last axis for now.");let a=n[i],s=r/a,o=$t(a),l=a/o,u=kt("x",e.dataType,e.dims,o),d=Et("result",e.dataType,e.dims,o),c=u.type.value,h="f32"===wt(e.dataType)?`var threadMax = ${c}(-3.402823e+38f);`:`var threadMax = ${c}(-65504.0h);`;return{name:"Softmax",shaderCache:{hint:`${o}`,inputDependencies:["type"]},getRunData:()=>({outputs:[{dims:n,dataType:e.dataType}],dispatchGroup:{x:s},programUniforms:[{type:12,data:l}]}),getShaderSource:e=>`\n      var<workgroup> rowMaxShared : ${c};\n      var<workgroup> rowSumShared : ${c};\n      var<workgroup> threadShared : array<${c}, 64>;\n\n      fn getValue(row: i32, col: i32, row_stride: i32) -> ${c} {\n        let index = row * row_stride + col;\n        return x[index];\n      }\n\n      fn setValue(row: i32, col: i32, row_stride: i32, value: ${c}) {\n        let index = row * row_stride + col;\n        result[index] = value;\n      }\n      ${e.registerUniform("packedCols","i32").declareVariables(u,d)}\n      ${e.mainStart()}\n        let gindex = i32(global_idx);\n        let lindex = i32(local_idx);\n        const wg = 64;\n        let row = gindex / wg;\n        let cols = uniforms.packedCols;\n        let row_stride : i32 = uniforms.packedCols;\n\n        // find the rows max\n        ${h}\n        for (var col = lindex; col < cols; col += wg) {\n          let value = getValue(row, col, row_stride);\n          threadMax = max(threadMax, value);\n        }\n        if (lindex < cols) {\n          threadShared[lindex] = threadMax;\n        }\n        workgroupBarrier();\n\n        var reduceSize = min(cols, wg);\n        for (var currSize = reduceSize >> 1;  currSize > 0; currSize = reduceSize >> 1) {\n          reduceSize = currSize + (reduceSize & 1);\n          if (lindex < currSize) {\n            threadShared[lindex] = max(threadShared[lindex], threadShared[lindex + reduceSize]);\n          }\n          workgroupBarrier();\n        }\n        if (lindex == 0) {\n          rowMaxShared = ${c}(${((e,t)=>4===t?`max(max(${e}.x, ${e}.y), max(${e}.z, ${e}.w))`:2===t?`max(${e}.x, ${e}.y)`:3===t?`max(max(${e}.x, ${e}.y), ${e}.z)`:e)("threadShared[0]",o)});\n        }\n        workgroupBarrier();\n\n        // find the rows sum\n        var threadSum = ${c}(0.0);\n        for (var col = lindex; col < cols; col += wg) {\n          let subExp = exp(getValue(row, col, row_stride) - rowMaxShared);\n          threadSum += subExp;\n        }\n        threadShared[lindex] = threadSum;\n        workgroupBarrier();\n\n        for (var currSize = wg >> 1;  currSize > 0; currSize = currSize >> 1) {\n          if (lindex < currSize) {\n            threadShared[lindex] = threadShared[lindex] + threadShared[lindex + currSize];\n          }\n          workgroupBarrier();\n        }\n        if (lindex == 0) {\n          rowSumShared = ${c}(${Tt("threadShared[0]",o)});\n        }\n        workgroupBarrier();\n\n        // calculate final value for each element in the row\n        for (var col = lindex; col < cols; col += wg) {\n          let value = exp(getValue(row, col, row_stride) - rowMaxShared) / rowSumShared;\n          setValue(row, col, row_stride, value);\n        }\n      }`}},to=(e,t)=>{Js(e.inputs),e.compute(eo(e.inputs[0],t))},no=e=>ut({axis:e.axis})})),Sl=j((()=>{Io(),jo(),Fo(),Do(),ro=e=>{if(!e||e.length<1)throw new Error("too few inputs")},io=(e,t)=>{let n=[],r=t.numOutputs;return e[1].dims[0]>0&&(e[1].getBigInt64Array().forEach((e=>n.push(Number(e)))),r=n.length),ut({numOutputs:r,axis:t.axis,splitSizes:n})},ao=e=>`\nfn calculateOutputIndex(index: u32) -> u32 {\n    for (var i: u32 = 0u; i < ${e}u; i += 1u ) {\n    if (index < ${St("uniforms.size_in_split_axis","i",e)}) {\n        return i;\n    }\n    }\n    return ${e}u;\n}`,so=e=>{let t=e.length,n=[];for(let r=0;r<t;++r){let i=e[r].setByIndices("indices","input[global_idx]");1===t?n.push(i):0===r?n.push(`if (output_number == ${r}u) { ${i} }`):r===t-1?n.push(`else { ${i} }`):n.push(`else if (output_number == ${r}) { ${i} }`)}return`\n      fn writeBufferData(output_number: u32, indices: ${e[0].type.indices}, global_idx: u32) {\n        ${n.join("\n")}\n      }`},oo=(e,t)=>{let n=e[0].dims,r=ht.size(n),i=e[0].dataType,a=ht.normalizeAxis(t.axis,n.length),s=new Array(t.numOutputs),o=kt("input",i,n),l=new Array(t.numOutputs),u=[],d=[],c=0,h=[{type:12,data:r}];for(let r=0;r<t.numOutputs;r++){c+=t.splitSizes[r],l[r]=c;let a=n.slice();a[t.axis]=t.splitSizes[r],d.push(a),s[r]=Et(`output${r}`,i,a),u.push({dims:d[r],dataType:e[0].dataType})}h.push({type:12,data:l},...bt(n,...d));return{name:"Split",shaderCache:{hint:t.cacheKey,inputDependencies:["rank"]},getShaderSource:e=>`\n  ${e.registerUniform("input_size","u32").registerUniform("size_in_split_axis","u32",l.length).declareVariables(o,...s)}\n  ${ao(l.length)}\n  ${so(s)}\n\n  ${e.mainStart()}\n    ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.input_size")}\n\n    var indices = ${o.offsetToIndices("global_idx")};\n    var index = ${o.indicesGet("indices",a)};\n    let output_number = calculateOutputIndex(index);\n    if (output_number != 0) {\n      index -= ${St("uniforms.size_in_split_axis","output_number - 1u",l.length)};\n      ${o.indicesSet("indices",a,"index")};\n    }\n    writeBufferData(output_number, indices, global_idx);\n  }`,getRunData:()=>({outputs:u,dispatchGroup:{x:Math.ceil(r/64)},programUniforms:h})}},lo=(e,t)=>{ro(e.inputs);let n=1===e.inputs.length?t:io(e.inputs,t);e.compute(oo(e.inputs,n),{inputs:[0]})},uo=e=>{let t=e.axis,n=e.splitSizes,r=e.numOutputs<0?n.length:e.numOutputs;if(r!==n.length)throw new Error("numOutputs and splitSizes lengh must be equal");return ut({axis:t,numOutputs:r,splitSizes:n})}})),Ml=j((()=>{Io(),jo(),Do(),co=e=>Array.from(e.getBigInt64Array(),Number),ho=e=>{if(!e||2!==e.length)throw new Error("Tile requires 2 inputs.");if(1!==e[0].dataType&&6!==e[0].dataType&&12!==e[0].dataType)throw new Error("Tile only support float, int32, and uint32 data types");if(7!==e[1].dataType)throw new Error("Tile `repeats` input should be of int64 data type");if(1!==e[1].dims.length)throw new Error("Tile `repeats` input should be 1-D");if(co(e[1]).length!==e[0].dims.length)throw new Error("Tile `repeats` input should have same number of elements as rank of input data tensor")},po=(e,t)=>{let n=[];for(let r=0;r<e.length;++r)n.push(e[r]*t[r]);return n},fo=e=>{let t=e[0].dims,n=co(e[1]),r=po(t,n),i=ht.size(r),a=e[0].dataType,s=kt("input",a,t.length),o=Et("output",a,r.length);return{name:"Tile",shaderCache:{hint:`${n}`,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(i/64)},programUniforms:[{type:12,data:i},...bt(e[0].dims,r)]}),getShaderSource:e=>`\n      const inputShape = ${s.indices(...t)};\n      ${e.registerUniform("output_size","u32").declareVariables(s,o)}\n      ${e.mainStart()}\n      ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n      let output_indices = ${o.offsetToIndices("global_idx")};\n      var input_indices: ${s.type.indices};\n      for (var i = 0; i < ${t.length}; i++) {\n        let input_dim_i = ${s.indicesGet("uniforms.input_shape","i")};\n        let input_dim_value = ${o.indicesGet("output_indices","i")}  % input_dim_i;\n\n        ${s.indicesSet("input_indices","i","input_dim_value")}\n      }\n      ${o.setByOffset("global_idx",s.getByIndices("input_indices"))}\n    }`}},mo=e=>{ho(e.inputs),e.compute(fo(e.inputs),{inputs:[0]})}})),kl=j((()=>{Io(),jo(),Do(),go=(e,t,n,r,i)=>{let a,s=Et("output_data",i,n.length,4),o=kt("a_data",t[1].dataType,t[1].dims.length,4),l=kt("b_data",t[2].dataType,t[2].dims.length,4),u=kt("c_data",t[0].dataType,t[0].dims.length,4),d=(e,t,n)=>`select(${t}, ${e}, ${n})`;if(r){let e=(e,t,n="")=>{let r=`a_data[index_a${t}][component_a${t}]`,i=`b_data[index_b${t}][component_b${t}]`,a=`bool(c_data[index_c${t}] & ${4278190080>>>8*(3-t)}u)`;return`\n            let output_indices${t} = ${s.offsetToIndices(`global_idx * 4u + ${t}u`)};\n            let offset_a${t} = ${o.broadcastedIndicesToOffset(`output_indices${t}`,s)};\n            let offset_b${t} = ${l.broadcastedIndicesToOffset(`output_indices${t}`,s)};\n            let offset_c${t} = ${u.broadcastedIndicesToOffset(`output_indices${t}`,s)};\n            let index_a${t} = offset_a${t} / 4u;\n            let index_b${t} = offset_b${t} / 4u;\n            let index_c${t} = offset_c${t} / 4u;\n            let component_a${t} = offset_a${t} % 4u;\n            let component_b${t} = offset_b${t} % 4u;\n            ${e}[${t}] = ${n}(${d(r,i,a)});\n          `};a=9===i?`\n            var data = vec4<u32>(0);\n            ${e("data",0,"u32")}\n            ${e("data",1,"u32")}\n            ${e("data",2,"u32")}\n            ${e("data",3,"u32")}\n            output_data[global_idx] = dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(data));`:`\n            ${e("output_data[global_idx]",0)}\n            ${e("output_data[global_idx]",1)}\n            ${e("output_data[global_idx]",2)}\n            ${e("output_data[global_idx]",3)}\n          `}else a=s.setByOffset("global_idx",d(o.getByOffset("global_idx"),l.getByOffset("global_idx"),u.getByOffset("global_idx")));return`\n        ${e.registerUniform("vec_size","u32").declareVariables(u,o,l,s)}\n        ${e.mainStart()}\n        ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}\n        ${a}\n      }`},_o=e=>{let t=e[1].dims,n=e[2].dims,r=e[0].dims,i=e[1].dataType,a=!(ht.areEqual(t,n)&&ht.areEqual(n,r)),s=t,o=ht.size(t);if(a){let e=ct.calcShape(ct.calcShape(t,n,!1),r,!1);if(!e)throw new Error("Can't perform where op on the given tensors");s=e,o=ht.size(s)}let l=Math.ceil(o/4);return{name:"Where",shaderCache:{inputDependencies:["rank","rank","rank"]},getShaderSource:t=>go(t,e,s,a,i),getRunData:()=>({outputs:[{dims:s,dataType:i}],dispatchGroup:{x:Math.ceil(o/64/4)},programUniforms:[{type:12,data:l},...bt(r,t,n,s)]})}},yo=e=>{e.compute(_o(e.inputs))}})),El=j((()=>{Uo(),Vo(),Go(),qo(),Ko(),Yo(),Qo(),il(),ol(),ll(),ul(),dl(),cl(),hl(),pl(),fl(),ml(),gl(),rl(),_l(),yl(),wl(),vl(),bl(),Wo(),$l(),xl(),Cl(),Tl(),Sl(),Ml(),Lo(),Ho(),kl(),wo=new Map([["Abs",[tr]],["Acos",[nr]],["Acosh",[rr]],["Add",[Hr]],["ArgMax",[Fn,jn]],["ArgMin",[Rn,jn]],["Asin",[ir]],["Asinh",[ar]],["Atan",[sr]],["Atanh",[or]],["Attention",[Gn]],["AveragePool",[cs,ds]],["BatchNormalization",[Yn]],["BiasAdd",[Zn]],["BiasSplitGelu",[Ur]],["Cast",[ur,lr]],["Ceil",[hr]],["Clip",[cr]],["Concat",[oi,li]],["Conv",[Fi,zi]],["ConvTranspose",[Xi,qi]],["Cos",[pr]],["Cosh",[fr]],["CumSum",[Ji,ea]],["Div",[Kr]],["Einsum",[ua,da]],["Elu",[gr,mr]],["Equal",[Yr]],["Erf",[yr]],["Exp",[wr]],["Expand",[ma]],["FastGelu",[_a]],["Floor",[vr]],["FusedConv",[Fi,zi]],["Gather",[ba,va]],["GatherElements",[Ta,Ca]],["Gelu",[br]],["Gemm",[Ea,ka]],["GlobalAveragePool",[fs,ps]],["GlobalMaxPool",[ws,ys]],["Greater",[Jr]],["GreaterOrEqual",[ti]],["HardSigmoid",[Er,kr]],["InstanceNormalization",[Oa]],["LayerNormalization",[Ra]],["LeakyRelu",[$r,mr]],["Less",[ei]],["LessOrEqual",[ni]],["Log",[Lr]],["MatMul",[Ei]],["MatMulNBits",[Da]],["MaxPool",[gs,_s]],["Mul",[Qr]],["MultiHeadAttention",[Ga,Na]],["Neg",[Cr]],["Not",[xr]],["Pad",[es]],["Pow",[Xr]],["Range",[$s]],["Reciprocal",[Tr]],["ReduceMin",[An]],["ReduceMean",[Tn]],["ReduceMax",[En]],["ReduceSum",[Pn]],["ReduceProd",[In]],["ReduceL1",[Sn]],["ReduceL2",[Mn]],["ReduceLogSum",[zn]],["ReduceLogSumExp",[kn]],["ReduceSumSquare",[On]],["Relu",[Sr]],["Resize",[Ls,Ns]],["Sigmoid",[Mr]],["Sin",[Ar]],["Sinh",[Ir]],["Slice",[Xs,Zs]],["SkipLayerNormalization",[Vs]],["Split",[lo,uo]],["Sqrt",[Pr]],["Softmax",[to,no]],["Sub",[Zr]],["Tan",[Or]],["Tanh",[Br]],["ThresholdedRelu",[Dr,mr]],["Tile",[mo]],["Transpose",[Dt,Lt]],["Where",[yo]]])})),Al=j((()=>{se(),Oo(),Do(),vo=class{constructor(e){this.backend=e,this.repo=new Map,this.attributesBound=!1}getArtifact(e){return this.repo.get(e)}setArtifact(e,t){this.repo.set(e,t)}run(e,t,n,r,i){k(e.programInfo.name);let a=this.backend.device,s=this.backend.getComputePassEncoder();this.backend.writeTimestamp(2*this.backend.pendingDispatchNumber);let o=[];for(let e of t)o.push({binding:o.length,resource:{buffer:e.buffer}});for(let e of n)o.push({binding:o.length,resource:{buffer:e.buffer}});i&&o.push({binding:o.length,resource:i});let l=a.createBindGroup({layout:e.computePipeline.getBindGroupLayout(0),entries:o,label:e.programInfo.name});if("capturing"===this.backend.sessionStatus){let t={kernelId:this.backend.currentKernelId,computePipeline:e.computePipeline,bindGroup:l,dispatchGroup:r};this.backend.capturedCommandList.get(this.backend.currentSessionId).push(t)}s.setPipeline(e.computePipeline),s.setBindGroup(0,l),s.dispatchWorkgroups(...r),this.backend.writeTimestamp(2*this.backend.pendingDispatchNumber+1),this.backend.pendingDispatchNumber++,(this.backend.pendingDispatchNumber>=this.backend.maxDispatchNumber||"at-passes"===this.backend.queryType)&&this.backend.endComputePass(),this.backend.pendingDispatchNumber>=this.backend.maxDispatchNumber&&this.backend.flush(),E(e.programInfo.name)}dispose(){}build(e,t){k(e.name);let n=this.backend.device,r=[];n.features.has("shader-f16")&&r.push("enable f16;");let i=Pt(t),a=e.getShaderSource(i),s=`${r.join("\n")}\n${i.additionalImplementations}\n${a}`,o=n.createShaderModule({code:s,label:e.name});et("verbose",(()=>`[WebGPU] ${e.name} shader code: ${s}`));let l=n.createComputePipeline({compute:{module:o,entryPoint:"main"},layout:"auto",label:e.name});return E(e.name),{programInfo:e,computePipeline:l}}normalizeDispatchGroupSize(e){let t="number"==typeof e?e:e.x,n="number"==typeof e?1:e.y||1,r="number"==typeof e?1:e.z||1,i=this.backend.device.limits.maxComputeWorkgroupsPerDimension;if(t<=i&&n<=i&&r<=i)return[t,n,r];let a=t*n*r,s=Math.ceil(Math.sqrt(a));if(s>i){if(s=Math.ceil(Math.cbrt(a)),s>i)throw new Error("Total dispatch size exceeds WebGPU maximum.");return[s,s,s]}return[s,s,1]}}})),Il=j((()=>{se(),Io(),Oo(),zo(),Ro(),El(),Al(),bo=(e,t)=>{if(t.length!==e.length)throw new Error(`inputDependencies length ${t.length} is not equal to inputTensors length ${e.length}.`);let n=[];for(let r=0;r<e.length;++r){let i=e[r].dataType;switch(t[r]){case"none":n.push("");break;case"type":n.push(`${i}`);break;case"rank":{let t=e[r].dims.length;n.push(`${i};${t}`);break}case"dims":{let t=e[r].dims.join(",");n.push(`${i};${t}`);break}default:throw new Error(`unsupported input dependency: ${t[r]}`)}}return n.join("|")},$o=(e,t,n)=>{let r=e.name;return e.shaderCache?.hint&&(r+="["+e.shaderCache.hint+"]"),r+=":"+n+`:${bo(t,e.shaderCache?.inputDependencies??new Array(t.length).fill("dims"))}`,r},xo=class{constructor(){this.currentSessionId=null,this.currentKernelId=null,this.commandEncoder=null,this.computePassEncoder=null,this.maxDispatchNumber=16,this.pendingDispatchNumber=0,this.pendingKernels=[],this.pendingQueries=new Map,this.sessionStatus="default",this.capturedCommandList=new Map,this.capturedPendingKernels=new Map,this.sessionExternalDataMapping=new Map}get currentKernelCustomData(){if(null===this.currentKernelId)throw new Error("currentKernelCustomData(): currentKernelId is null. (should not happen)");let e=this.kernelCustomData.get(this.currentKernelId);return e||(e={},this.kernelCustomData.set(this.currentKernelId,e)),e}async initialize(e,t){this.env=e;let n=[],r={requiredLimits:{maxComputeWorkgroupStorageSize:t.limits.maxComputeWorkgroupStorageSize,maxComputeWorkgroupsPerDimension:t.limits.maxComputeWorkgroupsPerDimension,maxStorageBufferBindingSize:t.limits.maxStorageBufferBindingSize,maxBufferSize:t.limits.maxBufferSize,maxComputeInvocationsPerWorkgroup:t.limits.maxComputeInvocationsPerWorkgroup,maxComputeWorkgroupSizeX:t.limits.maxComputeWorkgroupSizeX,maxComputeWorkgroupSizeY:t.limits.maxComputeWorkgroupSizeY,maxComputeWorkgroupSizeZ:t.limits.maxComputeWorkgroupSizeZ},requiredFeatures:n};t.features.has("chromium-experimental-timestamp-query-inside-passes")?n.push("chromium-experimental-timestamp-query-inside-passes"):t.features.has("timestamp-query")&&n.push("timestamp-query"),t.features.has("shader-f16")&&n.push("shader-f16"),this.device=await t.requestDevice(r),this.gpuDataManager=ot(this),this.programManager=new vo(this),this.kernels=new Map,this.kernelPersistentData=new Map,this.kernelCustomData=new Map,Ze(e.logLevel,!!e.debug),this.device.onuncapturederror=e=>{e.error instanceof GPUValidationError&&console.error(`An uncaught WebGPU validation error was raised: ${e.error.message}`)},Object.defineProperty(this.env.webgpu,"device",{value:this.device}),this.setQueryType()}dispose(){typeof this.querySet<"u"&&this.querySet.destroy(),this.gpuDataManager.dispose()}getCommandEncoder(){return this.commandEncoder||(this.commandEncoder=this.device.createCommandEncoder()),this.commandEncoder}getComputePassEncoder(){if(!this.computePassEncoder){let e=this.getCommandEncoder(),t={};"at-passes"===this.queryType&&(t.timestampWrites={querySet:this.querySet,beginningOfPassWriteIndex:2*this.pendingDispatchNumber,endOfPassWriteIndex:2*this.pendingDispatchNumber+1}),this.computePassEncoder=e.beginComputePass(t)}return this.computePassEncoder}endComputePass(){this.computePassEncoder&&(this.computePassEncoder.end(),this.computePassEncoder=null)}flush(){if(!this.commandEncoder)return;let e;k(),this.endComputePass(),"none"!==this.queryType&&(this.commandEncoder.resolveQuerySet(this.querySet,0,2*this.pendingDispatchNumber,this.queryResolveBuffer,0),e=this.device.createBuffer({size:2*this.pendingDispatchNumber*8,usage:GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST}),this.pendingQueries.set(e,this.pendingKernels),this.pendingKernels=[],this.commandEncoder.copyBufferToBuffer(this.queryResolveBuffer,0,e,0,2*this.pendingDispatchNumber*8)),this.device.queue.submit([this.commandEncoder.finish()]),this.gpuDataManager.refreshPendingBuffers(),this.commandEncoder=null,this.pendingDispatchNumber=0,"none"!==this.queryType&&e.mapAsync(GPUMapMode.READ).then((()=>{let t=new BigUint64Array(e.getMappedRange()),n=this.pendingQueries.get(e);for(let e=0;e<t.length/2;e++){let r=n[e],i=r.kernelId,a=this.kernels.get(i),s=a.kernelType,o=a.kernelName,l=r.programName,u=r.inputTensorViews,d=r.outputTensorViews,c=t[2*e],h=t[2*e+1];typeof this.queryTimeBase>"u"&&(this.queryTimeBase=c);let p=Number(c-this.queryTimeBase),f=Number(h-this.queryTimeBase);if(!Number.isSafeInteger(p)||!Number.isSafeInteger(f))throw new RangeError("incorrect timestamp range");if(this.env.webgpu.profiling?.ondata)this.env.webgpu.profiling.ondata({version:1,inputsMetadata:u.map((e=>({dims:e.dims,dataType:Ne(e.dataType)}))),outputsMetadata:d.map((e=>({dims:e.dims,dataType:Ne(e.dataType)}))),kernelId:i,kernelType:s,kernelName:o,programName:l,startTime:p,endTime:f});else{let e="";u.forEach(((t,n)=>{e+=`input[${n}]: [${t.dims}] | ${Ne(t.dataType)}, `}));let t="";d.forEach(((e,n)=>{t+=`output[${n}]: [${e.dims}] | ${Ne(e.dataType)}, `})),console.log(`[profiling] kernel "${i}|${s}|${o}|${l}" ${e}${t}execution time: ${f-p} ns`)}S("GPU",`${l}::${c}::${h}`)}e.unmap(),this.pendingQueries.delete(e)})),E()}run(e,t,n,r,i){k(e.name);let a=[];for(let e=0;e<t.length;++e){let n=this.gpuDataManager.get(t[e].data);a[e]=n||this.gpuDataManager.create(4)}let{outputs:s,dispatchGroup:o,programUniforms:l}=e.getRunData(t),u=0===n.length?s.map(((e,t)=>t)):n;if(u.length!==s.length)throw new Error(`Output size ${u.length} must be equal to ${s.length}.`);let d,c=[],h=[];for(let e=0;e<s.length;++e){if(!Number.isInteger(u[e])||u[e]<-3||u[e]>=s.length)throw new Error(`Invalid output index: ${u[e]}`);if(-3===u[e])continue;let t=-1===u[e],n=-2===u[e],a=t||n?i(s[e].dataType,s[e].dims):r(u[e],s[e].dataType,s[e].dims),o=this.gpuDataManager.get(a.data);if(!o)throw new Error(`no GPU data for output: ${a.data}`);if(t&&this.temporaryData.push(o),n){let e=this.kernelPersistentData.get(this.currentKernelId);e||(e=[],this.kernelPersistentData.set(this.currentKernelId,e)),e.push(o)}c.push(a),h.push(o)}if(l){let e=0,t=[];l.forEach((n=>{let r="number"==typeof n.data?[n.data]:n.data;if(0===r.length)return;let i,a,s=10===n.type?2:4;10===n.type?(a=r.length>4?16:r.length>2?8:r.length*s,i=r.length>4?16:s*r.length):(a=r.length<=2?r.length*s:16,i=16),e=Math.ceil(e/a)*a,t.push(e);let o=10===n.type?8:4;e+=r.length>4?Math.ceil(r.length/o)*i:r.length*s}));let n=16;e=Math.ceil(e/n)*n;let r=new ArrayBuffer(e);l.forEach(((e,n)=>{let i=t[n],a="number"==typeof e.data?[e.data]:e.data;if(6===e.type)new Int32Array(r,i,a.length).set(a);else if(12===e.type)new Uint32Array(r,i,a.length).set(a);else if(10===e.type)new Uint16Array(r,i,a.length).set(a);else{if(1!==e.type)throw new Error(`Unsupported uniform type: ${Ne(e.type)}`);new Float32Array(r,i,a.length).set(a)}}));let i=this.gpuDataManager.create(e,GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM);this.device.queue.writeBuffer(i.buffer,0,r,0,e),this.gpuDataManager.release(i.id),d={offset:0,size:e,buffer:i.buffer}}let p=this.programManager.normalizeDispatchGroupSize(o),f=1===p[1]&&1===p[2],m=$o(e,t,f),g=this.programManager.getArtifact(m);if(g||(g=this.programManager.build(e,p),this.programManager.setArtifact(m,g),et("info",(()=>`[artifact] key: ${m}, programName: ${e.name}`))),et("info",(()=>`[ProgramManager] run "${e.name}" (key=${m}) with ${p[0]}x${p[1]}x${p[2]}`)),"none"!==this.queryType||"capturing"===this.sessionStatus){let e={kernelId:this.currentKernelId,programName:g.programInfo.name,inputTensorViews:t,outputTensorViews:c};this.pendingKernels.push(e),"capturing"===this.sessionStatus&&this.capturedPendingKernels.get(this.currentSessionId).push(e)}return this.programManager.run(g,a,h,p,d),E(e.name),c}upload(e,t){this.gpuDataManager.upload(e,t)}memcpy(e,t){this.gpuDataManager.memcpy(e,t)}async download(e,t){await this.gpuDataManager.download(e,t)}alloc(e){return this.gpuDataManager.create(e).id}free(e){return this.gpuDataManager.release(e)}createKernel(e,t,n,r){let i=wo.get(e);if(!i)throw new Error(`kernel not implemented: ${e}`);let a={kernelType:e,kernelName:r,kernelEntry:i[0],attributes:[i[1],n]};this.kernels.set(t,a)}releaseKernel(e){let t=this.kernelPersistentData.get(e);if(t){for(let e of t)this.gpuDataManager.release(e.id);this.kernelPersistentData.delete(e)}this.kernelCustomData.delete(e),this.kernels.delete(e)}computeKernel(e,t,n){let r=this.kernels.get(e);if(!r)throw new Error(`kernel not created: ${e}`);let i=r.kernelType,a=r.kernelName,s=r.kernelEntry,o=r.attributes;if(null!==this.currentKernelId)throw new Error(`kernel "[${i}] ${a}" is not allowed to be called recursively`);this.currentKernelId=e,o[0]&&(o[1]=o[0](o[1]),o[0]=void 0),et("info",(()=>`[WebGPU] Start to run kernel "[${i}] ${a}"...`));let l=this.env.debug;this.temporaryData=[];try{return l&&this.device.pushErrorScope("validation"),s(t,o[1]),0}catch(e){return n.push(Promise.resolve(`[WebGPU] Kernel "[${i}] ${a}" failed. ${e}`)),1}finally{l&&n.push(this.device.popErrorScope().then((e=>e?`GPU validation error for kernel "[${i}] ${a}": ${e.message}`:null)));for(let e of this.temporaryData)this.gpuDataManager.release(e.id);this.temporaryData=[],this.currentKernelId=null}}registerBuffer(e,t,n,r){let i=this.sessionExternalDataMapping.get(e);i||(i=new Map,this.sessionExternalDataMapping.set(e,i));let a=i.get(t),s=this.gpuDataManager.registerExternalBuffer(n,r,a?.[1]);return i.set(t,[s,n]),s}unregisterBuffers(e){let t=this.sessionExternalDataMapping.get(e);t&&(t.forEach((e=>this.gpuDataManager.unregisterExternalBuffer(e[1]))),this.sessionExternalDataMapping.delete(e))}getBuffer(e){let t=this.gpuDataManager.get(e);if(!t)throw new Error(`no GPU data for buffer: ${e}`);return t.buffer}createDownloader(e,t,n){return async()=>{let r=await at(this,e,t);return tt(r.buffer,n)}}writeTimestamp(e){"inside-passes"===this.queryType&&this.computePassEncoder.writeTimestamp(this.querySet,e)}setQueryType(){this.queryType="none",("default"===this.env.webgpu.profiling?.mode||this.env.wasm.trace)&&(this.device.features.has("chromium-experimental-timestamp-query-inside-passes")?this.queryType="inside-passes":this.device.features.has("timestamp-query")&&(this.queryType="at-passes"),"none"!==this.queryType&&typeof this.querySet>"u"&&(this.querySet=this.device.createQuerySet({type:"timestamp",count:2*this.maxDispatchNumber}),this.queryResolveBuffer=this.device.createBuffer({size:2*this.maxDispatchNumber*8,usage:GPUBufferUsage.COPY_SRC|GPUBufferUsage.QUERY_RESOLVE})))}captureBegin(){et("info","captureBegin"),this.capturedCommandList.get(this.currentSessionId)||this.capturedCommandList.set(this.currentSessionId,[]),this.capturedPendingKernels.get(this.currentSessionId)||this.capturedPendingKernels.set(this.currentSessionId,[]),this.flush(),this.sessionStatus="capturing"}captureEnd(){et("info","captureEnd"),this.flush(),this.sessionStatus="default"}replay(){et("info","replay"),this.sessionStatus="replaying";let e=this.capturedCommandList.get(this.currentSessionId),t=this.capturedPendingKernels.get(this.currentSessionId),n=e.length;this.pendingKernels=[];for(let r=0;r<n;r++){let n=this.getComputePassEncoder(),i=e[r];this.writeTimestamp(2*this.pendingDispatchNumber),n.setPipeline(i.computePipeline),n.setBindGroup(0,i.bindGroup),n.dispatchWorkgroups(...i.dispatchGroup),this.writeTimestamp(2*this.pendingDispatchNumber+1),this.pendingDispatchNumber++,"none"!==this.queryType&&this.pendingKernels.push(t[r]),(this.pendingDispatchNumber>=this.maxDispatchNumber||"at-passes"===this.queryType)&&this.endComputePass(),this.pendingDispatchNumber>=this.maxDispatchNumber&&this.flush()}this.flush(),this.sessionStatus="default"}onReleaseSession(e){this.unregisterBuffers(e),this.capturedCommandList.has(e)&&this.capturedCommandList.delete(e),this.capturedPendingKernels.has(e)&&this.capturedPendingKernels.delete(e),this.gpuDataManager.onReleaseSession(e)}onRunStart(e){this.currentSessionId=e,this.setQueryType()}}})),Pl={};L(Pl,{init:()=>Bl});var Ol,zl,Bl,Rl,Fl,jl,Dl,Ll,Nl,Wl,Ul,Vl,Gl,ql,Hl,Kl,Yl,Ql,Xl,Zl,Jl,eu,tu,nu,ru,iu,au,su,ou,lu,uu,du,cu,hu,pu,fu,mu,gu,_u=j((()=>{Io(),Il(),Oo(),jo(),Ol=class e{constructor(e,t,n,r){this.module=e,this.dataType=t,this.data=n,this.dims=r}getFloat32Array(){if(1!==this.dataType)throw new Error("Invalid data type");let e=ht.size(this.dims);return 0===e?new Float32Array:new Float32Array(this.module.HEAP8.buffer,this.data,e)}getBigInt64Array(){if(7!==this.dataType)throw new Error("Invalid data type");let e=ht.size(this.dims);return 0===e?new BigInt64Array:new BigInt64Array(this.module.HEAP8.buffer,this.data,e)}getInt32Array(){if(6!==this.dataType)throw new Error("Invalid data type");let e=ht.size(this.dims);return 0===e?new Int32Array:new Int32Array(this.module.HEAP8.buffer,this.data,e)}reshape(t){if(ht.size(t)!==ht.size(this.dims))throw new Error("Invalid new shape");return new e(this.module,this.dataType,this.data,t)}},zl=class{constructor(e,t,n){this.module=e,this.backend=t,this.customDataOffset=0,this.customDataSize=0;let r=e.HEAPU32,i=n>>>2;this.opKernelContext=r[i++];let a=r[i++];this.outputCount=r[i++],this.customDataOffset=r[i++],this.customDataSize=r[i++];let s=[];for(let t=0;t<a;t++){let t=r[i++],n=r[i++],a=r[i++],o=[];for(let e=0;e<a;e++)o.push(r[i++]);s.push(new Ol(e,t,n,o))}this.inputs=s}get kernelCustomData(){return this.backend.currentKernelCustomData}get customDataBuffer(){return this.module.HEAPU8.subarray(this.customDataOffset,this.customDataOffset+this.customDataSize)}compute(e,t){let n=t?.inputs?.map((e=>"number"==typeof e?this.inputs[e]:e))??this.inputs,r=t?.outputs??[];return this.backend.run(e,n,r,((e,t,n)=>new Ol(this.module,t,this.output(e,n),n)),((e,t)=>{let n=We(e);if(!n)throw new Error(`Unsupported data type: ${e}`);let r=n*ht.size(t);return new Ol(this.module,e,this.backend.gpuDataManager.create(r).id,t)}))}output(e,t){let n=this.module.stackSave();try{let n=this.module.stackAlloc(4*(1+t.length)),r=n>>2;this.module.HEAPU32[r++]=t.length;for(let e=0;e<t.length;e++)this.module.HEAPU32[r++]=t[e];return this.module._JsepOutput(this.opKernelContext,e,n)}catch(n){throw new Error(`Failed to generate kernel's output[${e}] with dims [${t}]. If you are running with pre-allocated output, please make sure the output type/dims are correct. Error: ${n}`)}finally{this.module.stackRestore(n)}}},Bl=async(e,t,n)=>{let r=e.jsepInit;if(!r)throw new Error("Failed to initialize JSEP. The WebAssembly module is not built with JSEP support.");let i=new xo;await i.initialize(t,n),r(i,(e=>i.alloc(e)),(e=>i.free(e)),((t,n,r,a=!1)=>{if(a)et("verbose",(()=>`[WebGPU] jsepCopyGpuToGpu: src=${t}, dst=${n}, size=${r}`)),i.memcpy(t,n);else{et("verbose",(()=>`[WebGPU] jsepCopyCpuToGpu: dataOffset=${t}, gpuDataId=${n}, size=${r}`));let a=e.HEAPU8.subarray(t>>>0,(t>>>0)+r);i.upload(n,a)}}),(async(t,n,r)=>{et("verbose",(()=>`[WebGPU] jsepCopyGpuToCpu: gpuDataId=${t}, dataOffset=${n}, size=${r}`)),await i.download(t,(()=>e.HEAPU8.subarray(n>>>0,(n>>>0)+r)))}),((t,n,r)=>i.createKernel(t,n,r,e.UTF8ToString(e._JsepGetNodeName(n)))),(e=>i.releaseKernel(e)),((t,n,r,a)=>{et("verbose",(()=>`[WebGPU] jsepRun: sessionHandle=${r}, kernel=${t}, contextDataOffset=${n}`));let s=new zl(e,i,n);return i.computeKernel(t,s,a)}),(()=>i.captureBegin()),(()=>i.captureEnd()),(()=>i.replay()))}})),yu=j((()=>{Eo(),Ao(),Io(),Mo(),ko(),Po(),Rl=(e,t)=>{0!==Ae()._OrtInit(e,t)&&Oe("Can't initialize onnxruntime.")},Fl=async e=>{Rl(e.wasm.numThreads,Ve(e.logLevel))},jl=async(e,t)=>{if("webgpu"===t||"webnn"===t){if(typeof navigator>"u"||!navigator.gpu)throw new Error("WebGPU is not supported in current environment");let t=await navigator.gpu.requestAdapter();if(!t)throw new Error('Failed to get GPU adapter. You may need to enable flag "--enable-unsafe-webgpu" if you are using Chrome.');if(!e.wasm.simd)throw new Error("Not supported for WebGPU=ON and SIMD=OFF. Please set `env.wasm.simd` to true when using `webgpu` EP");let n=(_u(),N(Pl)).init;await n(Ae(),e,t)}},Dl=new Map,Ll=e=>{let t=Ae(),n=t.stackSave();try{let n=t.stackAlloc(8);return 0!==t._OrtGetInputOutputCount(e,n,n+4)&&Oe("Can't get session input/output count."),[t.HEAP32[n/4],t.HEAP32[n/4+1]]}finally{t.stackRestore(n)}},Nl=e=>{let t=Ae(),n=t._malloc(e.byteLength);if(0===n)throw new Error(`Can't create a session. failed to allocate a buffer of size ${e.byteLength}.`);return t.HEAPU8.set(e,n),[n,e.byteLength]},Wl=async(e,t)=>{let n,r,i=Ae();Array.isArray(e)?[n,r]=e:e.buffer===i.HEAPU8.buffer?[n,r]=[e.byteOffset,e.byteLength]:[n,r]=Nl(e);let a=0,s=0,o=0,l=[],u=[],d=[];try{if([s,l]=De(t),t?.externalData&&i.mountExternalData){let e=[];for(let n of t.externalData){let t="string"==typeof n?n:n.path;e.push(He("string"==typeof n?n:n.data).then((e=>{i.mountExternalData(t,e)})))}await Promise.all(e)}a=await i._OrtCreateSession(n,r,s),0===a&&Oe("Can't create a session.");let[e,c]=Ll(a),h=!!t?.enableGraphCapture,p=[],f=[],m=[];for(let t=0;t<e;t++){let e=i._OrtGetInputName(a,t);0===e&&Oe("Can't get an input name."),u.push(e),p.push(i.UTF8ToString(e))}for(let e=0;e<c;e++){let n=i._OrtGetOutputName(a,e);0===n&&Oe("Can't get an output name."),d.push(n);let r=i.UTF8ToString(n);f.push(r);{if(h&&void 0===t?.preferredOutputLocation){m.push("gpu-buffer");continue}let e="string"==typeof t?.preferredOutputLocation?t.preferredOutputLocation:t?.preferredOutputLocation?.[r]??"cpu";if("cpu"!==e&&"cpu-pinned"!==e&&"gpu-buffer"!==e)throw new Error(`Not supported preferred output location: ${e}.`);if(h&&"gpu-buffer"!==e)throw new Error(`Not supported preferred output location: ${e}. Only 'gpu-buffer' location is supported when enableGraphCapture is true.`);m.push(e)}}let g=null;return m.some((e=>"gpu-buffer"===e))&&(o=i._OrtCreateBinding(a),0===o&&Oe("Can't create IO binding."),g={handle:o,outputPreferredLocations:m,outputPreferredLocationsEncoded:m.map((e=>qe(e)))}),Dl.set(a,[a,u,d,g,h,!1]),[a,p,f]}catch(e){throw u.forEach((e=>i._OrtFree(e))),d.forEach((e=>i._OrtFree(e))),0!==o&&i._OrtReleaseBinding(o),0!==a&&i._OrtReleaseSession(a),e}finally{i._free(n),0!==s&&i._OrtReleaseSessionOptions(s),l.forEach((e=>i._free(e))),i.unmountExternalData?.()}},Ul=e=>{let t=Ae(),n=Dl.get(e);if(!n)throw new Error(`cannot release session. invalid session id: ${e}`);let[r,i,a,s,o]=n;s&&(o&&t._OrtClearBoundOutputs(s.handle),t._OrtReleaseBinding(s.handle)),t.jsepOnReleaseSession?.(e),i.forEach((e=>t._OrtFree(e))),a.forEach((e=>t._OrtFree(e))),t._OrtReleaseSession(r),Dl.delete(e)},Vl=(e,t,n,r,i,a=!1)=>{if(!e)return void t.push(0);let s,o,l=Ae(),u=e[0],d=e[1],c=e[3];if("string"===u&&"gpu-buffer"===c)throw new Error("String tensor is not supported on GPU.");if(a&&"gpu-buffer"!==c)throw new Error(`External buffer must be provided for input/output index ${i} when enableGraphCapture is true.`);if("gpu-buffer"===c){let t=e[2].gpuBuffer,n=We(Le(u));o=d.reduce(((e,t)=>e*t),1)*n,s=l.jsepRegisterBuffer(r,i,t,o)}else{let t=e[2];if(Array.isArray(t)){o=4*t.length,s=l._malloc(o),n.push(s);let e=s/4;for(let r=0;r<t.length;r++){if("string"!=typeof t[r])throw new TypeError(`tensor data at index ${r} is not a string`);l.HEAPU32[e++]=Ie(t[r],n)}}else o=t.byteLength,s=l._malloc(o),n.push(s),l.HEAPU8.set(new Uint8Array(t.buffer,t.byteOffset,o),s)}let h=l.stackSave(),p=l.stackAlloc(4*d.length);try{let e=p/4;d.forEach((t=>l.HEAP32[e++]=t));let n=l._OrtCreateTensor(Le(u),s,o,p,d.length,qe(c));0===n&&Oe(`Can't create tensor for input/output. session=${r}, index=${i}.`),t.push(n)}finally{l.stackRestore(h)}},Gl=async(e,t,n,r,i,a)=>{let s=Ae(),o=Dl.get(e);if(!o)throw new Error(`cannot run inference. invalid session id: ${e}`);let l=o[0],u=o[1],d=o[2],c=o[3],h=o[4],p=o[5],f=t.length,m=r.length,g=0,_=[],y=[],w=[],v=[],b=s.stackSave(),$=s.stackAlloc(4*f),x=s.stackAlloc(4*f),C=s.stackAlloc(4*m),T=s.stackAlloc(4*m);try{[g,_]=ze(a);for(let r=0;r<f;r++)Vl(n[r],y,v,e,t[r],h);for(let t=0;t<m;t++)Vl(i[t],w,v,e,f+r[t],h);let o,b=$/4,S=x/4,M=C/4,k=T/4;for(let e=0;e<f;e++)s.HEAPU32[b++]=y[e],s.HEAPU32[S++]=u[t[e]];for(let e=0;e<m;e++)s.HEAPU32[M++]=w[e],s.HEAPU32[k++]=d[r[e]];if(c&&!p){let{handle:n,outputPreferredLocations:a,outputPreferredLocationsEncoded:o}=c;if(u.length!==f)throw new Error(`input count from feeds (${f}) is expected to be always equal to model's input count (${u.length}).`);for(let r=0;r<f;r++){let i=t[r];0!==await s._OrtBindInput(n,u[i],y[r])&&Oe(`Can't bind input[${r}] for session=${e}.`)}for(let t=0;t<m;t++){let l=r[t];i[t]?.[3]?0!==s._OrtBindOutput(n,d[l],w[t],0)&&Oe(`Can't bind pre-allocated output[${t}] for session=${e}.`):0!==s._OrtBindOutput(n,d[l],0,o[l])&&Oe(`Can't bind output[${t}] to ${a[t]} for session=${e}.`)}Dl.set(e,[l,u,d,c,h,!0])}s.jsepOnRunStart?.(l),o=c?await s._OrtRunWithBinding(l,c.handle,m,C,g):await s._OrtRun(l,x,$,f,T,m,C,g),0!==o&&Oe("failed to call OrtRun().");let E=[];for(let e=0;e<m;e++){let t=s.HEAPU32[C/4+e];if(t===w[e]){E.push(i[e]);continue}let n,a=s.stackSave(),o=s.stackAlloc(16),l=!1,u=0;try{0!==s._OrtGetTensorData(t,o,o+4,o+8,o+12)&&Oe(`Can't access output tensor data on index ${e}.`);let i=o/4,a=s.HEAPU32[i++];u=s.HEAPU32[i++];let d=s.HEAPU32[i++],h=s.HEAPU32[i++],p=[];for(let e=0;e<h;e++)p.push(s.HEAPU32[d/4+e]);s._OrtFree(d);let f=p.reduce(((e,t)=>e*t),1);n=Ne(a);let m=c?.outputPreferredLocations[r[e]];if("string"===n){if("gpu-buffer"===m)throw new Error("String tensor is not supported on GPU.");let e=[],t=u/4;for(let n=0;n<f;n++){let r=s.HEAPU32[t++],i=n===f-1?void 0:s.HEAPU32[t]-r;e.push(s.UTF8ToString(r,i))}E.push([n,p,e,"cpu"])}else if("gpu-buffer"===m&&f>0){let e=s.jsepGetBuffer(u),r=We(a);if(void 0===r||!Ge(n))throw new Error(`Unsupported data type: ${n}`);l=!0,E.push([n,p,{gpuBuffer:e,download:s.jsepCreateDownloader(e,f*r,n),dispose:()=>{s._OrtReleaseTensor(t)}},"gpu-buffer"])}else{let e=new(Ue(n))(f);new Uint8Array(e.buffer,e.byteOffset,e.byteLength).set(s.HEAPU8.subarray(u,u+e.byteLength)),E.push([n,p,e,"cpu"])}}finally{s.stackRestore(a),"string"===n&&u&&s._free(u),l||s._OrtReleaseTensor(t)}}return c&&!h&&(s._OrtClearBoundOutputs(c.handle),Dl.set(e,[l,u,d,c,h,!1])),E}finally{s.stackRestore(b),y.forEach((e=>s._OrtReleaseTensor(e))),w.forEach((e=>s._OrtReleaseTensor(e))),v.forEach((e=>s._free(e))),0!==g&&s._OrtReleaseRunOptions(g),_.forEach((e=>s._free(e)))}},ql=e=>{let t=Ae(),n=Dl.get(e);if(!n)throw new Error("invalid session id");let r=n[0],i=t._OrtEndProfiling(r);0===i&&Oe("Can't get an profile file name."),t._OrtFree(i)},Hl=e=>{let t=[];for(let n of e){let e=n[2];!Array.isArray(e)&&"buffer"in e&&t.push(e.buffer)}return t}})),wu=D(((e,t)=>{t.exports='/*!\n * ONNX Runtime Web v1.18.0\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n"use strict";(()=>{var xi=Object.defineProperty;var dh=Object.getOwnPropertyDescriptor;var ch=Object.getOwnPropertyNames;var fh=Object.prototype.hasOwnProperty;var oe=(e,r)=>()=>(e&&(r=e(e=0)),r);var sn=(e,r)=>()=>(r||e((r={exports:{}}).exports,r),r.exports),Hn=(e,r)=>{for(var t in r)xi(e,t,{get:r[t],enumerable:!0})},ph=(e,r,t,u)=>{if(r&&typeof r=="object"||typeof r=="function")for(let s of ch(r))!fh.call(e,s)&&s!==t&&xi(e,s,{get:()=>r[s],enumerable:!(u=dh(r,s))||u.enumerable});return e};var nr=e=>ph(xi({},"__esModule",{value:!0}),e);var Ln={};Hn(Ln,{createReadStream:()=>Us,readFile:()=>mh,readFileSync:()=>hh});var mh,hh,Us,Fn=oe(()=>{mh=void 0,hh=void 0,Us=void 0});var Ii={};Hn(Ii,{join:()=>gh});var gh,Ai=oe(()=>{gh=void 0});var Ns=sn((Vs,Ti)=>{"use strict";var js=(()=>{var e=typeof document<"u"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename<"u"&&(e=e||__filename),function(r={}){var t=r,u,s;t.ready=new Promise((n,i)=>{u=n,s=i}),t.mountExternalData=(n,i)=>{(t.Nh||(t.Nh=new Map)).set(n,i)},t.unmountExternalData=()=>{delete t.Nh},t.jsepInit=(n,i,o,a,l,c,h,g,v,_,x)=>{t.ui=n,t.gi=i,t.ki=o,t.Th=a,t.ji=l,t.he=c,t.li=h,t.ni=g,t.hi=v,t.ii=_,t.mi=x,i=(E,D,A)=>(...j)=>{let Y=mt,re=D?.();j=E(...j);let le=D?.();return re!==le&&(E=le,A(re),D=A=null),mt!=Y?In():j},o=E=>async(...D)=>{try{if(t.Kh)throw Error("Session already started");let A=t.Kh={oi:D[0],errors:[]},j=await E(...D);if(t.Kh!==A)throw Error("Session mismatch");n.flush();let Y=A.errors;if(0<Y.length){let re=await Promise.all(Y);if(re=re.filter(le=>le),0<re.length)throw Error(re.join(`\n`))}return j}finally{t.Kh=null}},t._OrtCreateSession=i(t._OrtCreateSession,()=>t._OrtCreateSession,E=>t._OrtCreateSession=E),t._OrtRun=o(i(t._OrtRun,()=>t._OrtRun,E=>t._OrtRun=E)),t._OrtRunWithBinding=o(i(t._OrtRunWithBinding,()=>t._OrtRunWithBinding,E=>t._OrtRunWithBinding=E)),t._OrtBindInput=i(t._OrtBindInput,()=>t._OrtBindInput,E=>t._OrtBindInput=E),t.jsepRegisterBuffer=(E,D,A,j)=>n.registerBuffer(E,D,A,j),t.jsepGetBuffer=E=>n.getBuffer(E),t.jsepCreateDownloader=(E,D,A)=>n.createDownloader(E,D,A),t.jsepOnReleaseSession=E=>{n.onReleaseSession(E)},t.jsepOnRunStart=E=>n.onRunStart(E)};var f=Object.assign({},t),m="./this.program",d=(n,i)=>{throw i},y=typeof window=="object",w=typeof importScripts=="function",C=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",$="",T,P,I;if(C){var O=(Fn(),nr(Ln)),R=(Ai(),nr(Ii));$=w?R.dirname($)+"/":__dirname+"/",T=(n,i)=>(n=fe(n)?new URL(n):R.normalize(n),O.readFileSync(n,i?void 0:"utf8")),I=n=>(n=T(n,!0),n.buffer||(n=new Uint8Array(n)),n),P=(n,i,o,a=!0)=>{n=fe(n)?new URL(n):R.normalize(n),O.readFile(n,a?void 0:"utf8",(l,c)=>{l?o(l):i(a?c.buffer:c)})},!t.thisProgram&&1<process.argv.length&&(m=process.argv[1].replace(/\\\\/g,"/")),process.argv.slice(2),d=(n,i)=>{throw process.exitCode=n,i},t.inspect=()=>"[Emscripten Module object]"}else(y||w)&&(w?$=self.location.href:typeof document<"u"&&document.currentScript&&($=document.currentScript.src),e&&($=e),$.indexOf("blob:")!==0?$=$.substr(0,$.replace(/[?#].*/,"").lastIndexOf("/")+1):$="",T=n=>{var i=new XMLHttpRequest;return i.open("GET",n,!1),i.send(null),i.responseText},w&&(I=n=>{var i=new XMLHttpRequest;return i.open("GET",n,!1),i.responseType="arraybuffer",i.send(null),new Uint8Array(i.response)}),P=(n,i,o)=>{var a=new XMLHttpRequest;a.open("GET",n,!0),a.responseType="arraybuffer",a.onload=()=>{a.status==200||a.status==0&&a.response?i(a.response):o()},a.onerror=o,a.send(null)});var z=console.log.bind(console),k=console.error.bind(console);Object.assign(t,f),f=null,typeof WebAssembly!="object"&&Ye("no native wasm support detected");var G,U=!1,q,K,J,ie,ge,L,ue,je,Ve,Ce,ae;function ye(){var n=G.buffer;t.HEAP8=K=new Int8Array(n),t.HEAP16=ie=new Int16Array(n),t.HEAPU8=J=new Uint8Array(n),t.HEAPU16=ge=new Uint16Array(n),t.HEAP32=L=new Int32Array(n),t.HEAPU32=ue=new Uint32Array(n),t.HEAPF32=je=new Float32Array(n),t.HEAPF64=ae=new Float64Array(n),t.HEAP64=Ve=new BigInt64Array(n),t.HEAPU64=Ce=new BigUint64Array(n)}var Me=[],xe=[],_e=[],Ie=0,Pe=null,De=null;function Ye(n){throw n="Aborted("+n+")",k(n),U=!0,q=1,n=new WebAssembly.RuntimeError(n+". Build with -sASSERTIONS for more info."),s(n),n}var te=n=>n.startsWith("data:application/octet-stream;base64,"),fe=n=>n.startsWith("file://"),Se;if(Se="ort-wasm-simd.wasm",!te(Se)){var st=Se;Se=t.locateFile?t.locateFile(st,$):$+st}function tt(n){if(I)return I(n);throw"both async and sync fetching of the wasm failed"}function lt(n){if(y||w){if(typeof fetch=="function"&&!fe(n))return fetch(n,{credentials:"same-origin"}).then(i=>{if(!i.ok)throw"failed to load wasm binary file at \'"+n+"\'";return i.arrayBuffer()}).catch(()=>tt(n));if(P)return new Promise((i,o)=>{P(n,a=>i(new Uint8Array(a)),o)})}return Promise.resolve().then(()=>tt(n))}function It(n,i,o){return lt(n).then(a=>WebAssembly.instantiate(a,i)).then(a=>a).then(o,a=>{k(`failed to asynchronously prepare wasm: ${a}`),Ye(a)})}function Fe(n,i){var o=Se;return typeof WebAssembly.instantiateStreaming!="function"||te(o)||fe(o)||C||typeof fetch!="function"?It(o,n,i):fetch(o,{credentials:"same-origin"}).then(a=>WebAssembly.instantiateStreaming(a,n).then(i,function(l){return k(`wasm streaming compile failed: ${l}`),k("falling back to ArrayBuffer instantiation"),It(o,n,i)}))}var Qe={1378768:(n,i,o,a)=>{if(typeof t>"u"||!t.Nh)return 1;if(n=Xe(n>>>0),n.startsWith("./")&&(n=n.substring(2)),n=t.Nh.get(n),!n)return 2;if(i>>>=0,o>>>=0,i+o>n.byteLength)return 3;try{return J.set(n.subarray(i,i+o),a>>>0>>>0),0}catch{return 4}},1379269:(n,i,o)=>{o=Xe(o);let a=new Uint8Array(i);a.set(J.subarray(n>>>0,n+i>>>0)),typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string"?(Fn(),nr(Ln)).writeFileSync(o,a):(n=new File([a],o,{type:"application/octet-stream"}),n=URL.createObjectURL(n),window.open(n,"_blank"))},1379777:()=>{t.hi()},1379808:()=>{t.ii()},1379837:()=>{t.mi()},1379862:n=>t.gi(n),1379895:n=>t.ki(n),1379927:(n,i,o)=>{t.Th(n,i,o,!0)},1379966:(n,i,o)=>{t.Th(n,i,o)},1379999:n=>{t.he("Abs",n,void 0)},1380050:n=>{t.he("Neg",n,void 0)},1380101:n=>{t.he("Floor",n,void 0)},1380154:n=>{t.he("Ceil",n,void 0)},1380206:n=>{t.he("Reciprocal",n,void 0)},1380264:n=>{t.he("Sqrt",n,void 0)},1380316:n=>{t.he("Exp",n,void 0)},1380367:n=>{t.he("Erf",n,void 0)},1380418:n=>{t.he("Sigmoid",n,void 0)},1380473:(n,i,o)=>{t.he("HardSigmoid",n,{alpha:i,beta:o})},1380552:n=>{t.he("Log",n,void 0)},1380603:n=>{t.he("Sin",n,void 0)},1380654:n=>{t.he("Cos",n,void 0)},1380705:n=>{t.he("Tan",n,void 0)},1380756:n=>{t.he("Asin",n,void 0)},1380808:n=>{t.he("Acos",n,void 0)},1380860:n=>{t.he("Atan",n,void 0)},1380912:n=>{t.he("Sinh",n,void 0)},1380964:n=>{t.he("Cosh",n,void 0)},1381016:n=>{t.he("Asinh",n,void 0)},1381069:n=>{t.he("Acosh",n,void 0)},1381122:n=>{t.he("Atanh",n,void 0)},1381175:n=>{t.he("Tanh",n,void 0)},1381227:n=>{t.he("Not",n,void 0)},1381278:(n,i,o)=>{t.he("Clip",n,{min:i,max:o})},1381347:n=>{t.he("Clip",n,void 0)},1381399:(n,i)=>{t.he("Elu",n,{alpha:i})},1381457:n=>{t.he("Relu",n,void 0)},1381509:(n,i)=>{t.he("LeakyRelu",n,{alpha:i})},1381573:(n,i)=>{t.he("ThresholdedRelu",n,{alpha:i})},1381643:(n,i)=>{t.he("Cast",n,{to:i})},1381701:n=>{t.he("Add",n,void 0)},1381752:n=>{t.he("Sub",n,void 0)},1381803:n=>{t.he("Mul",n,void 0)},1381854:n=>{t.he("Div",n,void 0)},1381905:n=>{t.he("Pow",n,void 0)},1381956:n=>{t.he("Equal",n,void 0)},1382009:n=>{t.he("Greater",n,void 0)},1382064:n=>{t.he("GreaterOrEqual",n,void 0)},1382126:n=>{t.he("Less",n,void 0)},1382178:n=>{t.he("LessOrEqual",n,void 0)},1382237:(n,i,o,a,l)=>{t.he("ReduceMean",n,{keepDims:!!i,noopWithEmptyAxes:!!o,axes:a?Array.from(L.subarray(a>>>0,l>>>0)):[]})},1382396:(n,i,o,a,l)=>{t.he("ReduceMax",n,{keepDims:!!i,noopWithEmptyAxes:!!o,axes:a?Array.from(L.subarray(a>>>0,l>>>0)):[]})},1382554:(n,i,o,a,l)=>{t.he("ReduceMin",n,{keepDims:!!i,noopWithEmptyAxes:!!o,axes:a?Array.from(L.subarray(a>>>0,l>>>0)):[]})},1382712:(n,i,o,a,l)=>{t.he("ReduceProd",n,{keepDims:!!i,noopWithEmptyAxes:!!o,axes:a?Array.from(L.subarray(a>>>0,l>>>0)):[]})},1382871:(n,i,o,a,l)=>{t.he("ReduceSum",n,{keepDims:!!i,noopWithEmptyAxes:!!o,axes:a?Array.from(L.subarray(a>>>0,l>>>0)):[]})},1383029:(n,i,o,a,l)=>{t.he("ReduceL1",n,{keepDims:!!i,noopWithEmptyAxes:!!o,axes:a?Array.from(L.subarray(a>>>0,l>>>0)):[]})},1383186:(n,i,o,a,l)=>{t.he("ReduceL2",n,{keepDims:!!i,noopWithEmptyAxes:!!o,axes:a?Array.from(L.subarray(a>>>0,l>>>0)):[]})},1383343:(n,i,o,a,l)=>{t.he("ReduceLogSum",n,{keepDims:!!i,noopWithEmptyAxes:!!o,axes:a?Array.from(L.subarray(a>>>0,l>>>0)):[]})},1383504:(n,i,o,a,l)=>{t.he("ReduceSumSquare",n,{keepDims:!!i,noopWithEmptyAxes:!!o,axes:a?Array.from(L.subarray(a>>>0,l>>>0)):[]})},1383668:(n,i,o,a,l)=>{t.he("ReduceLogSumExp",n,{keepDims:!!i,noopWithEmptyAxes:!!o,axes:a?Array.from(L.subarray(a>>>0,l>>>0)):[]})},1383832:n=>{t.he("Where",n,void 0)},1383885:(n,i,o)=>{t.he("Transpose",n,{perm:i?Array.from(L.subarray(i>>>0,o>>>0)):[]})},1383993:(n,i,o,a,l,c,h,g,v,_,x,E,D,A,j)=>{t.he("ConvTranspose",n,{format:v?"NHWC":"NCHW",autoPad:i,dilations:[o],group:a,kernel_shape:[l],pads:[c,h],strides:[g],wIsConst:()=>!!K[_>>>0],outputPadding:x?Array.from(L.subarray(x>>>0,E>>>0)):[],outputShape:D?Array.from(L.subarray(D>>>0,A>>>0)):[],activation:Xe(j)})},1384395:(n,i,o,a,l,c,h,g,v,_,x,E,D,A)=>{t.he("ConvTranspose",n,{format:g?"NHWC":"NCHW",autoPad:i,dilations:Array.from(L.subarray(o>>>0,(o>>>0)+2>>>0)),group:a,kernelShape:Array.from(L.subarray(l>>>0,(l>>>0)+2>>>0)),pads:Array.from(L.subarray(c>>>0,(c>>>0)+4>>>0)),strides:Array.from(L.subarray(h>>>0,(h>>>0)+2>>>0)),wIsConst:()=>!!K[v>>>0],outputPadding:_?Array.from(L.subarray(_>>>0,x>>>0)):[],outputShape:E?Array.from(L.subarray(E>>>0,D>>>0)):[],activation:Xe(A)})},1384960:(n,i,o,a,l,c,h,g,v,_,x,E,D,A,j)=>{t.he("ConvTranspose",n,{format:v?"NHWC":"NCHW",autoPad:i,dilations:[o],group:a,kernel_shape:[l],pads:[c,h],strides:[g],wIsConst:()=>!!K[_>>>0],outputPadding:x?Array.from(L.subarray(x>>>0,E>>>0)):[],outputShape:D?Array.from(L.subarray(D>>>0,A>>>0)):[],activation:Xe(j)})},1385362:(n,i,o,a,l,c,h,g,v,_,x,E,D,A)=>{t.he("ConvTranspose",n,{format:g?"NHWC":"NCHW",autoPad:i,dilations:Array.from(L.subarray(o>>>0,(o>>>0)+2>>>0)),group:a,kernelShape:Array.from(L.subarray(l>>>0,(l>>>0)+2>>>0)),pads:Array.from(L.subarray(c>>>0,(c>>>0)+4>>>0)),strides:Array.from(L.subarray(h>>>0,(h>>>0)+2>>>0)),wIsConst:()=>!!K[v>>>0],outputPadding:_?Array.from(L.subarray(_>>>0,x>>>0)):[],outputShape:E?Array.from(L.subarray(E>>>0,D>>>0)):[],activation:Xe(A)})},1385927:(n,i)=>{t.he("GlobalAveragePool",n,{format:i?"NHWC":"NCHW"})},1386018:(n,i,o,a,l,c,h,g,v,_,x,E,D,A,j,Y)=>{t.he("AveragePool",n,{format:Y?"NHWC":"NCHW",auto_pad:i,ceil_mode:o,count_include_pad:a,storage_order:l,dilations:[c,h],kernel_shape:[g,v],pads:[_,x,E,D],strides:[A,j]})},1386302:(n,i)=>{t.he("GlobalAveragePool",n,{format:i?"NHWC":"NCHW"})},1386393:(n,i,o,a,l,c,h,g,v,_,x,E,D,A,j,Y)=>{t.he("AveragePool",n,{format:Y?"NHWC":"NCHW",auto_pad:i,ceil_mode:o,count_include_pad:a,storage_order:l,dilations:[c,h],kernel_shape:[g,v],pads:[_,x,E,D],strides:[A,j]})},1386677:(n,i)=>{t.he("GlobalMaxPool",n,{format:i?"NHWC":"NCHW"})},1386764:(n,i,o,a,l,c,h,g,v,_,x,E,D,A,j,Y)=>{t.he("MaxPool",n,{format:Y?"NHWC":"NCHW",auto_pad:i,ceil_mode:o,count_include_pad:a,storage_order:l,dilations:[c,h],kernel_shape:[g,v],pads:[_,x,E,D],strides:[A,j]})},1387044:(n,i)=>{t.he("GlobalMaxPool",n,{format:i?"NHWC":"NCHW"})},1387131:(n,i,o,a,l,c,h,g,v,_,x,E,D,A,j,Y)=>{t.he("MaxPool",n,{format:Y?"NHWC":"NCHW",auto_pad:i,ceil_mode:o,count_include_pad:a,storage_order:l,dilations:[c,h],kernel_shape:[g,v],pads:[_,x,E,D],strides:[A,j]})},1387411:(n,i,o,a,l)=>{t.he("Gemm",n,{alpha:i,beta:o,transA:a,transB:l})},1387515:n=>{t.he("MatMul",n,void 0)},1387569:(n,i,o,a)=>{t.he("ArgMax",n,{keepDims:!!i,selectLastIndex:!!o,axis:a})},1387677:(n,i,o,a)=>{t.he("ArgMin",n,{keepDims:!!i,selectLastIndex:!!o,axis:a})},1387785:(n,i)=>{t.he("Softmax",n,{axis:i})},1387848:(n,i)=>{t.he("Concat",n,{axis:i})},1387908:(n,i,o,a,l)=>{t.he("Split",n,{axis:i,numOutputs:o,splitSizes:a?Array.from(L.subarray(a>>>0,l>>>0)):[]})},1388048:n=>{t.he("Expand",n,void 0)},1388102:(n,i)=>{t.he("Gather",n,{axis:Number(i)})},1388173:(n,i)=>{t.he("GatherElements",n,{axis:Number(i)})},1388252:(n,i,o,a,l,c,h,g,v,_,x)=>{t.he("Resize",n,{antialias:i,axes:o?Array.from(L.subarray(o>>>0,a>>>0)):[],coordinateTransformMode:Xe(l),cubicCoeffA:c,excludeOutside:h,extrapolationValue:g,keepAspectRatioPolicy:Xe(v),mode:Xe(_),nearestMode:Xe(x)})},1388598:(n,i,o,a,l,c,h)=>{t.he("Slice",n,{starts:i?Array.from(L.subarray(i>>>0,o>>>0)):[],ends:a?Array.from(L.subarray(a>>>0,l>>>0)):[],axes:c?Array.from(L.subarray(c>>>0,h>>>0)):[]})},1388814:n=>{t.he("Tile",n,void 0)},1388866:(n,i,o)=>{t.he("LayerNormalization",n,{axis:Number(i),epsilon:Number(o)})},1388973:(n,i,o)=>{t.he("InstanceNormalization",n,{epsilon:i,format:o?"NHWC":"NCHW"})},1389087:(n,i,o)=>{t.he("InstanceNormalization",n,{epsilon:i,format:o?"NHWC":"NCHW"})},1389201:n=>{t.he("Range",n,void 0)},1389254:(n,i)=>{t.he("Einsum",n,{equation:Xe(i)})},1389335:(n,i,o,a,l)=>{t.he("Pad",n,{mode:i,value:o,pads:a?Array.from(L.subarray(a>>>0,l>>>0)):[]})},1389462:(n,i,o,a,l,c)=>{t.he("BatchNormalization",n,{epsilon:i,momentum:o,spatial:!!l,trainingMode:!!a,format:c?"NHWC":"NCHW"})},1389631:(n,i,o,a,l,c)=>{t.he("BatchNormalization",n,{epsilon:i,momentum:o,spatial:!!l,trainingMode:!!a,format:c?"NHWC":"NCHW"})},1389800:(n,i,o)=>{t.he("CumSum",n,{exclusive:Number(i),reverse:Number(o)})},1389897:(n,i,o,a,l,c,h,g,v)=>{t.he("Attention",n,{numHeads:i,isUnidirectional:o,maskFilterValue:a,scale:l,doRotary:c,qkvHiddenSizes:h?Array.from(L.subarray(Number(g)>>>0,Number(g)+h>>>0)):[],pastPresentShareBuffer:!!v})},1390169:n=>{t.he("BiasAdd",n,void 0)},1390224:n=>{t.he("BiasSplitGelu",n,void 0)},1390285:n=>{t.he("FastGelu",n,void 0)},1390341:(n,i,o,a,l,c,h,g,v,_,x,E,D)=>{t.he("Conv",n,{format:v?"NHWC":"NCHW",auto_pad:i,dilations:[o],group:a,kernel_shape:[l],pads:c?Array.from(L.subarray(c>>>0,h>>>0)):[],strides:[g],w_is_const:()=>!!K[_>>>0],activation:Xe(x),activation_params:E?Array.from(je.subarray(E>>>0,D>>>0)):[]})},1390711:(n,i,o,a,l,c,h,g,v,_,x,E,D,A,j,Y)=>{t.he("Conv",n,{format:E?"NHWC":"NCHW",auto_pad:i,dilations:[o,a],group:l,kernel_shape:[c,h],pads:g?Array.from(L.subarray(g>>>0,v>>>0)):[],strides:[_,x],w_is_const:()=>!!K[D>>>0],activation:Xe(A),activation_params:j?Array.from(je.subarray(j>>>0,Y>>>0)):[]})},1391102:n=>{t.he("Gelu",n,void 0)},1391154:(n,i,o,a,l,c)=>{t.he("MatMulNBits",n,{k:i,n:o,accuracyLevel:a,bits:l,blockSize:c})},1391281:(n,i,o,a,l,c)=>{t.he("MultiHeadAttention",n,{numHeads:i,isUnidirectional:o,maskFilterValue:a,scale:l,doRotary:c})},1391440:(n,i)=>{t.he("SkipLayerNormalization",n,{epsilon:i})},1391521:n=>{t.li(n)},1391555:(n,i)=>t.ni(n,i,t.Kh.oi,t.Kh.errors)};function pt(n){this.name="ExitStatus",this.message=`Program terminated with exit(${n})`,this.status=n}var At=[],Vt=0,rt=0;function lr(n){this.Jh=n,this.Dh=n-24,this.bi=function(i){ue[this.Dh+4>>>2>>>0]=i},this.Lh=function(){return ue[this.Dh+4>>>2>>>0]},this.ai=function(i){ue[this.Dh+8>>>2>>>0]=i},this.Vh=function(i){K[this.Dh+12>>>0>>>0]=i?1:0},this.Yh=function(){return K[this.Dh+12>>>0>>>0]!=0},this.Wh=function(i){K[this.Dh+13>>>0>>>0]=i?1:0},this.di=function(){return K[this.Dh+13>>>0>>>0]!=0},this.$h=function(i,o){this.Mh(0),this.bi(i),this.ai(o)},this.Mh=function(i){ue[this.Dh+16>>>2>>>0]=i},this.Xh=function(){return ue[this.Dh+16>>>2>>>0]},this.Zh=function(){if(Nn(this.Lh()))return ue[this.Jh>>>2>>>0];var i=this.Xh();return i!==0?i:this.Jh}}var vt=n=>{var i=rt;if(!i)return Jt(0),0;var o=new lr(i);o.Mh(i);var a=o.Lh();if(!a)return Jt(0),i;for(var l in n){var c=n[l];if(c===0||c===a)break;if(Vn(c,a,o.Dh+16))return Jt(c),i}return Jt(a),i},Pr=typeof TextDecoder<"u"?new TextDecoder("utf8"):void 0,hn=(n,i,o)=>{i>>>=0;var a=i+o;for(o=i;n[o]&&!(o>=a);)++o;if(16<o-i&&n.buffer&&Pr)return Pr.decode(n.subarray(i,o));for(a="";i<o;){var l=n[i++];if(l&128){var c=n[i++]&63;if((l&224)==192)a+=String.fromCharCode((l&31)<<6|c);else{var h=n[i++]&63;l=(l&240)==224?(l&15)<<12|c<<6|h:(l&7)<<18|c<<12|h<<6|n[i++]&63,65536>l?a+=String.fromCharCode(l):(l-=65536,a+=String.fromCharCode(55296|l>>10,56320|l&1023))}}else a+=String.fromCharCode(l)}return a},Xe=(n,i)=>(n>>>=0)?hn(J,n,i):"",dr=n=>{for(var i=0,o=0;o<n.length;++o){var a=n.charCodeAt(o);127>=a?i++:2047>=a?i+=2:55296<=a&&57343>=a?(i+=4,++o):i+=3}return i},wt=(n,i,o,a)=>{if(o>>>=0,!(0<a))return 0;var l=o;a=o+a-1;for(var c=0;c<n.length;++c){var h=n.charCodeAt(c);if(55296<=h&&57343>=h){var g=n.charCodeAt(++c);h=65536+((h&1023)<<10)|g&1023}if(127>=h){if(o>=a)break;i[o++>>>0]=h}else{if(2047>=h){if(o+1>=a)break;i[o++>>>0]=192|h>>6}else{if(65535>=h){if(o+2>=a)break;i[o++>>>0]=224|h>>12}else{if(o+3>=a)break;i[o++>>>0]=240|h>>18,i[o++>>>0]=128|h>>12&63}i[o++>>>0]=128|h>>6&63}i[o++>>>0]=128|h&63}}return i[o>>>0]=0,o-l},cr=n=>{if(n===null)return"null";var i=typeof n;return i==="object"||i==="array"||i==="function"?n.toString():""+n},qt,ut=n=>{for(var i="";J[n>>>0];)i+=qt[J[n++>>>0]];return i},fr={},pr={},gn={},_t;function Tt(n,i,o={}){var a=i.name;if(!n)throw new _t(`type "${a}" must have a positive integer typeid pointer`);if(pr.hasOwnProperty(n)){if(o.ei)return;throw new _t(`Cannot register type \'${a}\' twice`)}pr[n]=i,delete gn[n],fr.hasOwnProperty(n)&&(i=fr[n],delete fr[n],i.forEach(l=>l()))}function yt(n,i,o={}){if(!("argPackAdvance"in i))throw new TypeError("registerType registeredInstance requires argPackAdvance");Tt(n,i,o)}var mr=(n,i,o)=>{switch(i){case 1:return o?a=>K[a>>>0>>>0]:a=>J[a>>>0>>>0];case 2:return o?a=>ie[a>>>1>>>0]:a=>ge[a>>>1>>>0];case 4:return o?a=>L[a>>>2>>>0]:a=>ue[a>>>2>>>0];case 8:return o?a=>Ve[a>>>3]:a=>Ce[a>>>3];default:throw new TypeError(`invalid integer width (${i}): ${n}`)}};function be(){this.Fh=[void 0],this.Sh=[]}var nt=new be;function hr(n){n>>>=0,n>=nt.Dh&&--nt.get(n).Uh===0&&nt.Mh(n)}var it=n=>{if(!n)throw new _t("Cannot use deleted val. handle = "+n);return nt.get(n).value},dt=n=>{switch(n){case void 0:return 1;case null:return 2;case!0:return 3;case!1:return 4;default:return nt.Lh({Uh:1,value:n})}};function yn(n){return this.fromWireType(L[n>>>2>>>0])}var bn=(n,i)=>{switch(i){case 4:return function(o){return this.fromWireType(je[o>>>2>>>0])};case 8:return function(o){return this.fromWireType(ae[o>>>3>>>0])};default:throw new TypeError(`invalid float width (${i}): ${n}`)}};function vn(n){return this.fromWireType(ue[n>>>2>>>0])}var Or=typeof TextDecoder<"u"?new TextDecoder("utf-16le"):void 0,wn=(n,i)=>{for(var o=n>>1,a=o+i/2;!(o>=a)&&ge[o>>>0];)++o;if(o<<=1,32<o-n&&Or)return Or.decode(J.subarray(n>>>0,o>>>0));for(o="",a=0;!(a>=i/2);++a){var l=ie[n+2*a>>>1>>>0];if(l==0)break;o+=String.fromCharCode(l)}return o},kr=(n,i,o)=>{if(o??=2147483647,2>o)return 0;o-=2;var a=i;o=o<2*n.length?o/2:n.length;for(var l=0;l<o;++l)ie[i>>>1>>>0]=n.charCodeAt(l),i+=2;return ie[i>>>1>>>0]=0,i-a},_n=n=>2*n.length,$n=(n,i)=>{for(var o=0,a="";!(o>=i/4);){var l=L[n+4*o>>>2>>>0];if(l==0)break;++o,65536<=l?(l-=65536,a+=String.fromCharCode(55296|l>>10,56320|l&1023)):a+=String.fromCharCode(l)}return a},Cn=(n,i,o)=>{if(i>>>=0,o??=2147483647,4>o)return 0;var a=i;o=a+o-4;for(var l=0;l<n.length;++l){var c=n.charCodeAt(l);if(55296<=c&&57343>=c){var h=n.charCodeAt(++l);c=65536+((c&1023)<<10)|h&1023}if(L[i>>>2>>>0]=c,i+=4,i+4>o)break}return L[i>>>2>>>0]=0,i-a},Sn=n=>{for(var i=0,o=0;o<n.length;++o){var a=n.charCodeAt(o);55296<=a&&57343>=a&&++o,i+=4}return i},gr=(n,i)=>{var o=pr[n];if(o===void 0)throw n=Mn(n),o=ut(n),gt(n),new _t(i+" has unknown type "+o);return o},Rr=(n,i,o)=>{var a=[];return n=n.toWireType(a,o),a.length&&(ue[i>>>2>>>0]=dt(a)),n},Kt=n=>{try{n()}catch(i){Ye(i)}};function xn(){var n=M,i={};for(let[o,a]of Object.entries(n))i[o]=typeof a=="function"?function(){Yt.push(o);try{return a.apply(null,arguments)}finally{U||(Yt.pop(),mt&&$t===1&&Yt.length===0&&($t=0,Kt(Ds),typeof Fibers<"u"&&Fibers.wi()))}}:a;return i}var $t=0,mt=null,Dr=0,Yt=[],Br={},Mr={},zr=0,Nt=null,Wt=[];function In(){return new Promise((n,i)=>{Nt={resolve:n,reject:i}})}function An(){var n=Gt(65548),i=n+12;ue[n>>>2>>>0]=i,ue[n+4>>>2>>>0]=i+65536,i=Yt[0];var o=Br[i];return o===void 0&&(o=zr++,Br[i]=o,Mr[o]=i),L[n+8>>>2>>>0]=o,n}function Tn(n){if(!U){if($t===0){var i=!1,o=!1;n((a=0)=>{if(!U&&(Dr=a,i=!0,o)){$t=2,Kt(()=>Bs(mt)),typeof Browser<"u"&&Browser.Qh.ci&&Browser.Qh.resume(),a=!1;try{var l=(0,M[Mr[L[mt+8>>>2>>>0]]])()}catch(g){l=g,a=!0}var c=!1;if(!mt){var h=Nt;h&&(Nt=null,(a?h.reject:h.resolve)(l),c=!0)}if(a&&!c)throw l}}),o=!0,i||($t=1,mt=An(),typeof Browser<"u"&&Browser.Qh.ci&&Browser.Qh.pause(),Kt(()=>Rs(mt)))}else $t===2?($t=0,Kt(Ms),gt(mt),mt=null,Wt.forEach(a=>{if(!U)try{a();try{q=q=a=q,t.onExit?.(a),U=!0,d(a,new pt(a))}catch(l){l instanceof pt||l=="unwind"||d(1,l)}}catch(l){l instanceof pt||l=="unwind"||d(1,l)}})):Ye(`invalid state: ${$t}`);return Dr}}function Ur(n){return Tn(i=>{n().then(i)})}var Zt=[],jr={},yr=n=>{var i=jr[n];return i===void 0?ut(n):i},En=()=>typeof globalThis=="object"?globalThis:Function("return this")(),Le=n=>{var i=Zt.length;return Zt.push(n),i},Vr=(n,i)=>{for(var o=Array(n),a=0;a<n;++a)o[a]=gr(ue[i+4*a>>>2>>>0],"parameter "+a);return o},br=(n,i)=>Object.defineProperty(i,"name",{value:n});function Pn(n){var i=Function;if(!(i instanceof Function))throw new TypeError(`new_ called with constructor type ${typeof i} which is not a function`);var o=br(i.name||"unknownFunctionName",function(){});return o.prototype=i.prototype,o=new o,n=i.apply(o,n),n instanceof Object?n:o}var Et=n=>n%4===0&&(n%100!==0||n%400===0),Nr=[0,31,60,91,121,152,182,213,244,274,305,335],Wr=[0,31,59,90,120,151,181,212,243,273,304,334],Gr=n=>{var i=dr(n)+1,o=Gt(i);return o&&wt(n,J,o,i),o},vr=[],Hr=(n,i)=>{vr.length=0;for(var o;o=J[n++>>>0];){var a=o!=105;a&=o!=112,i+=a&&i%8?4:0,vr.push(o==112?ue[i>>>2>>>0]:o==106?Ve[i>>>3]:o==105?L[i>>>2>>>0]:ae[i>>>3>>>0]),i+=a?8:4}return vr},Lr={},Fr=()=>{if(!wr){var n={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:(typeof navigator=="object"&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",_:m||"./this.program"},i;for(i in Lr)Lr[i]===void 0?delete n[i]:n[i]=Lr[i];var o=[];for(i in n)o.push(`${i}=${n[i]}`);wr=o}return wr},wr,On=[null,[],[]],kn=[31,29,31,30,31,30,31,31,30,31,30,31],Rn=[31,28,31,30,31,30,31,31,30,31,30,31];function Dn(n){var i=Array(dr(n)+1);return wt(n,i,0,i.length),i}function Qt(n,i,o,a){function l(A,j,Y){for(A=typeof A=="number"?A.toString():A||"";A.length<j;)A=Y[0]+A;return A}function c(A,j){return l(A,j,"0")}function h(A,j){function Y(le){return 0>le?-1:0<le?1:0}var re;return(re=Y(A.getFullYear()-j.getFullYear()))===0&&(re=Y(A.getMonth()-j.getMonth()))===0&&(re=Y(A.getDate()-j.getDate())),re}function g(A){switch(A.getDay()){case 0:return new Date(A.getFullYear()-1,11,29);case 1:return A;case 2:return new Date(A.getFullYear(),0,3);case 3:return new Date(A.getFullYear(),0,2);case 4:return new Date(A.getFullYear(),0,1);case 5:return new Date(A.getFullYear()-1,11,31);case 6:return new Date(A.getFullYear()-1,11,30)}}function v(A){var j=A.Gh;for(A=new Date(new Date(A.Hh+1900,0,1).getTime());0<j;){var Y=A.getMonth(),re=(Et(A.getFullYear())?kn:Rn)[Y];if(j>re-A.getDate())j-=re-A.getDate()+1,A.setDate(1),11>Y?A.setMonth(Y+1):(A.setMonth(0),A.setFullYear(A.getFullYear()+1));else{A.setDate(A.getDate()+j);break}}return Y=new Date(A.getFullYear()+1,0,4),j=g(new Date(A.getFullYear(),0,4)),Y=g(Y),0>=h(j,A)?0>=h(Y,A)?A.getFullYear()+1:A.getFullYear():A.getFullYear()-1}n>>>=0,i>>>=0,o>>>=0,a>>>=0;var _=ue[a+40>>>2>>>0];a={si:L[a>>>2>>>0],ri:L[a+4>>>2>>>0],Oh:L[a+8>>>2>>>0],Rh:L[a+12>>>2>>>0],Ph:L[a+16>>>2>>>0],Hh:L[a+20>>>2>>>0],Eh:L[a+24>>>2>>>0],Gh:L[a+28>>>2>>>0],vi:L[a+32>>>2>>>0],pi:L[a+36>>>2>>>0],ti:_?Xe(_):""},o=Xe(o),_={"%c":"%a %b %d %H:%M:%S %Y","%D":"%m/%d/%y","%F":"%Y-%m-%d","%h":"%b","%r":"%I:%M:%S %p","%R":"%H:%M","%T":"%H:%M:%S","%x":"%m/%d/%y","%X":"%H:%M:%S","%Ec":"%c","%EC":"%C","%Ex":"%m/%d/%y","%EX":"%H:%M:%S","%Ey":"%y","%EY":"%Y","%Od":"%d","%Oe":"%e","%OH":"%H","%OI":"%I","%Om":"%m","%OM":"%M","%OS":"%S","%Ou":"%u","%OU":"%U","%OV":"%V","%Ow":"%w","%OW":"%W","%Oy":"%y"};for(var x in _)o=o.replace(new RegExp(x,"g"),_[x]);var E="Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "),D="January February March April May June July August September October November December".split(" ");_={"%a":A=>E[A.Eh].substring(0,3),"%A":A=>E[A.Eh],"%b":A=>D[A.Ph].substring(0,3),"%B":A=>D[A.Ph],"%C":A=>c((A.Hh+1900)/100|0,2),"%d":A=>c(A.Rh,2),"%e":A=>l(A.Rh,2," "),"%g":A=>v(A).toString().substring(2),"%G":A=>v(A),"%H":A=>c(A.Oh,2),"%I":A=>(A=A.Oh,A==0?A=12:12<A&&(A-=12),c(A,2)),"%j":A=>{for(var j=0,Y=0;Y<=A.Ph-1;j+=(Et(A.Hh+1900)?kn:Rn)[Y++]);return c(A.Rh+j,3)},"%m":A=>c(A.Ph+1,2),"%M":A=>c(A.ri,2),"%n":()=>`\n`,"%p":A=>0<=A.Oh&&12>A.Oh?"AM":"PM","%S":A=>c(A.si,2),"%t":()=>"\t","%u":A=>A.Eh||7,"%U":A=>c(Math.floor((A.Gh+7-A.Eh)/7),2),"%V":A=>{var j=Math.floor((A.Gh+7-(A.Eh+6)%7)/7);if(2>=(A.Eh+371-A.Gh-2)%7&&j++,j)j==53&&(Y=(A.Eh+371-A.Gh)%7,Y==4||Y==3&&Et(A.Hh)||(j=1));else{j=52;var Y=(A.Eh+7-A.Gh-1)%7;(Y==4||Y==5&&Et(A.Hh%400-1))&&j++}return c(j,2)},"%w":A=>A.Eh,"%W":A=>c(Math.floor((A.Gh+7-(A.Eh+6)%7)/7),2),"%y":A=>(A.Hh+1900).toString().substring(2),"%Y":A=>A.Hh+1900,"%z":A=>{A=A.pi;var j=0<=A;return A=Math.abs(A)/60,(j?"+":"-")+("0000"+(A/60*100+A%60)).slice(-4)},"%Z":A=>A.ti,"%%":()=>"%"},o=o.replace(/%%/g,"\\0\\0");for(x in _)o.includes(x)&&(o=o.replace(new RegExp(x,"g"),_[x](a)));return o=o.replace(/\\0\\0/g,"%"),x=Dn(o),x.length>i?0:(K.set(x,n>>>0),x.length-1)}for(var Bn=Array(256),ht=0;256>ht;++ht)Bn[ht]=String.fromCharCode(ht);qt=Bn,_t=t.BindingError=class extends Error{constructor(n){super(n),this.name="BindingError"}},t.InternalError=class extends Error{constructor(n){super(n),this.name="InternalError"}},Object.assign(be.prototype,{get(n){return this.Fh[n]},has(n){return this.Fh[n]!==void 0},Lh(n){var i=this.Sh.pop()||this.Fh.length;return this.Fh[i]=n,i},Mh(n){this.Fh[n]=void 0,this.Sh.push(n)}}),nt.Fh.push({value:void 0},{value:null},{value:!0},{value:!1}),nt.Dh=nt.Fh.length,t.count_emval_handles=()=>{for(var n=0,i=nt.Dh;i<nt.Fh.length;++i)nt.Fh[i]!==void 0&&++n;return n};var bt={ad:function(n,i,o){return Ur(async()=>{await t.ji(n,i,o)})},u:function(n){return n=new lr(n>>>0),n.Yh()||(n.Vh(!0),Vt--),n.Wh(!1),At.push(n),jn(n.Jh),n.Zh()},O:()=>{V(0,0);var n=At.pop();Un(n.Jh),rt=0},a:function(){return vt([])},m:function(n){return vt([n>>>0])},x:function(n,i){return vt([n>>>0,i>>>0])},q:function(n,i,o){return vt([n>>>0,i>>>0,o>>>0])},zb:()=>{var n=At.pop();n||Ye("no exception to throw");var i=n.Jh;throw n.di()||(At.push(n),n.Wh(!0),n.Vh(!1),Vt++),rt=i,rt},r:function(n,i,o){throw n>>>=0,new lr(n).$h(i>>>0,o>>>0),rt=n,Vt++,rt},eb:()=>Vt,g:function(n){throw rt||=n>>>0,rt},Ab:function(){return 0},Xc:function(){},Ic:function(){},Kc:function(){},Bc:function(){return 0},Vc:function(){},Qc:function(){},Uc:function(){},Vb:function(){},Jc:function(){},Gc:function(){},Wc:function(){},Hc:function(){},Yb:function(n,i,o,a,l){i>>>=0,i=ut(i);var c=i.indexOf("u")!=-1;c&&(l=(1n<<64n)-1n),yt(n>>>0,{name:i,fromWireType:h=>h,toWireType:function(h,g){if(typeof g!="bigint"&&typeof g!="number")throw new TypeError(`Cannot convert "${cr(g)}" to ${this.name}`);if(g<a||g>l)throw new TypeError(`Passing a number "${cr(g)}" from JS side to C/C++ side to an argument of type "${i}", which is outside the valid range [${a}, ${l}]!`);return g},argPackAdvance:8,readValueFromPointer:mr(i,o>>>0,!c),Ih:null})},_c:function(n,i,o,a){i=ut(i>>>0),yt(n>>>0,{name:i,fromWireType:function(l){return!!l},toWireType:function(l,c){return c?o:a},argPackAdvance:8,readValueFromPointer:function(l){return this.fromWireType(J[l>>>0])},Ih:null})},Zc:function(n,i){i=ut(i>>>0),yt(n>>>0,{name:i,fromWireType:o=>{var a=it(o);return hr(o),a},toWireType:(o,a)=>dt(a),argPackAdvance:8,readValueFromPointer:yn,Ih:null})},Xb:function(n,i,o){i=ut(i>>>0),yt(n>>>0,{name:i,fromWireType:a=>a,toWireType:(a,l)=>l,argPackAdvance:8,readValueFromPointer:bn(i,o>>>0),Ih:null})},za:function(n,i,o,a,l){if(n>>>=0,o>>>=0,i=ut(i>>>0),l===-1&&(l=4294967295),l=g=>g,a===0){var c=32-8*o;l=g=>g<<c>>>c}var h=i.includes("unsigned")?function(g,v){return v>>>0}:function(g,v){return v};yt(n,{name:i,fromWireType:l,toWireType:h,argPackAdvance:8,readValueFromPointer:mr(i,o,a!==0),Ih:null})},aa:function(n,i,o){function a(c){return new l(K.buffer,ue[c+4>>>2>>>0],ue[c>>>2>>>0])}var l=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array,BigInt64Array,BigUint64Array][i];o=ut(o>>>0),yt(n>>>0,{name:o,fromWireType:a,argPackAdvance:8,readValueFromPointer:a},{ei:!0})},Zb:function(n,i){i=ut(i>>>0);var o=i==="std::string";yt(n>>>0,{name:i,fromWireType:function(a){var l=ue[a>>>2>>>0],c=a+4;if(o)for(var h=c,g=0;g<=l;++g){var v=c+g;if(g==l||J[v>>>0]==0){if(h=Xe(h,v-h),_===void 0)var _=h;else _+=String.fromCharCode(0),_+=h;h=v+1}}else{for(_=Array(l),g=0;g<l;++g)_[g]=String.fromCharCode(J[c+g>>>0]);_=_.join("")}return gt(a),_},toWireType:function(a,l){l instanceof ArrayBuffer&&(l=new Uint8Array(l));var c=typeof l=="string";if(!(c||l instanceof Uint8Array||l instanceof Uint8ClampedArray||l instanceof Int8Array))throw new _t("Cannot pass non-string to std::string");var h=o&&c?dr(l):l.length,g=Gt(4+h+1),v=g+4;if(ue[g>>>2>>>0]=h,o&&c)wt(l,J,v,h+1);else if(c)for(c=0;c<h;++c){var _=l.charCodeAt(c);if(255<_)throw gt(v),new _t("String has UTF-16 code units that do not fit in 8 bits");J[v+c>>>0]=_}else for(c=0;c<h;++c)J[v+c>>>0]=l[c];return a!==null&&a.push(gt,g),g},argPackAdvance:8,readValueFromPointer:vn,Ih(a){gt(a)}})},Cb:function(n,i,o){if(i>>>=0,o>>>=0,o=ut(o),i===2)var a=wn,l=kr,c=_n,h=()=>ge,g=1;else i===4&&(a=$n,l=Cn,c=Sn,h=()=>ue,g=2);yt(n>>>0,{name:o,fromWireType:v=>{for(var _=ue[v>>>2>>>0],x=h(),E,D=v+4,A=0;A<=_;++A){var j=v+4+A*i;(A==_||x[j>>>g]==0)&&(D=a(D,j-D),E===void 0?E=D:(E+=String.fromCharCode(0),E+=D),D=j+i)}return gt(v),E},toWireType:(v,_)=>{if(typeof _!="string")throw new _t(`Cannot pass non-string to C++ string type ${o}`);var x=c(_),E=Gt(4+x+i);return ue[E>>>2]=x>>g,l(_,E+4,x+i),v!==null&&v.push(gt,E),E},argPackAdvance:8,readValueFromPointer:yn,Ih(v){gt(v)}})},$c:function(n,i){i=ut(i>>>0),yt(n>>>0,{fi:!0,name:i,argPackAdvance:0,fromWireType:()=>{},toWireType:()=>{}})},Yc:()=>1,jd:function(n,i,o){return i>>>=0,o>>>=0,n=it(n>>>0),i=gr(i,"emval::as"),Rr(i,o,n)},zd:function(n){return n>>>=0,Ur(()=>(n=it(n),n.then(dt)))},rd:function(n,i,o,a){return o>>>=0,a>>>=0,n=Zt[n>>>0],i=it(i>>>0),n(null,i,o,a)},fa:function(n,i,o,a,l){return o>>>=0,a>>>=0,l>>>=0,n=Zt[n>>>0],i=it(i>>>0),o=yr(o),n(i,i[o],a,l)},Ac:hr,od:function(n,i){return i>>>=0,n=it(n>>>0),i=it(i),n==i},wd:function(n){return n>>>=0,n===0?dt(En()):(n=yr(n),dt(En()[n]))},ea:function(n,i,o){i=Vr(n,i>>>0);var a=i.shift();n--;var l=`return function (obj, func, destructorsRef, args) {\n`,c=0,h=[];o===0&&h.push("obj");for(var g=["retType"],v=[a],_=0;_<n;++_)h.push("arg"+_),g.push("argType"+_),v.push(i[_]),l+=`  var arg${_} = argType${_}.readValueFromPointer(args${c?"+"+c:""});\n`,c+=i[_].argPackAdvance;for(l+=`  var rv = ${o===1?"new func":"func.call"}(${h.join(", ")});\n`,_=0;_<n;++_)i[_].deleteObject&&(l+=`  argType${_}.deleteObject(arg${_});\n`);return a.fi||(g.push("emval_returnValue"),v.push(Rr),l+=`  return emval_returnValue(retType, destructorsRef, rv);\n`),g.push(l+`};\n`),n=Pn(g).apply(null,v),o=`methodCaller<(${i.map(x=>x.name).join(", ")}) => ${a.name}>`,Le(br(o,n))},vd:function(n,i){return i>>>=0,n=it(n>>>0),i=it(i),dt(n[i])},U:function(n){n>>>=0,4<n&&(nt.get(n).Uh+=1)},kc:function(){return dt([])},fd:function(n){n=it(n>>>0);for(var i=Array(n.length),o=0;o<n.length;o++)i[o]=n[o];return dt(i)},W:function(n){return dt(yr(n>>>0))},Wa:function(){return dt({})},td:function(n){n>>>=0;for(var i=it(n);i.length;){var o=i.pop();i.pop()(o)}hr(n)},qd:function(n,i,o){i>>>=0,o>>>=0,n=it(n>>>0),i=it(i),o=it(o),n[i]=o},yb:function(n,i){return i>>>=0,n=gr(n>>>0,"_emval_take_value"),n=n.readValueFromPointer(i),dt(n)},Nc:function(n,i){n=-9007199254740992>n||9007199254740992<n?NaN:Number(n),i>>>=0,n=new Date(1e3*n),L[i>>>2>>>0]=n.getUTCSeconds(),L[i+4>>>2>>>0]=n.getUTCMinutes(),L[i+8>>>2>>>0]=n.getUTCHours(),L[i+12>>>2>>>0]=n.getUTCDate(),L[i+16>>>2>>>0]=n.getUTCMonth(),L[i+20>>>2>>>0]=n.getUTCFullYear()-1900,L[i+24>>>2>>>0]=n.getUTCDay(),L[i+28>>>2>>>0]=(n.getTime()-Date.UTC(n.getUTCFullYear(),0,1,0,0,0,0))/864e5|0},Oc:function(n,i){n=-9007199254740992>n||9007199254740992<n?NaN:Number(n),i>>>=0,n=new Date(1e3*n),L[i>>>2>>>0]=n.getSeconds(),L[i+4>>>2>>>0]=n.getMinutes(),L[i+8>>>2>>>0]=n.getHours(),L[i+12>>>2>>>0]=n.getDate(),L[i+16>>>2>>>0]=n.getMonth(),L[i+20>>>2>>>0]=n.getFullYear()-1900,L[i+24>>>2>>>0]=n.getDay(),L[i+28>>>2>>>0]=(Et(n.getFullYear())?Nr:Wr)[n.getMonth()]+n.getDate()-1|0,L[i+36>>>2>>>0]=-(60*n.getTimezoneOffset());var o=new Date(n.getFullYear(),6,1).getTimezoneOffset(),a=new Date(n.getFullYear(),0,1).getTimezoneOffset();L[i+32>>>2>>>0]=(o!=a&&n.getTimezoneOffset()==Math.min(a,o))|0},Pc:function(n){n>>>=0;var i=new Date(L[n+20>>>2>>>0]+1900,L[n+16>>>2>>>0],L[n+12>>>2>>>0],L[n+8>>>2>>>0],L[n+4>>>2>>>0],L[n>>>2>>>0],0),o=L[n+32>>>2>>>0],a=i.getTimezoneOffset(),l=new Date(i.getFullYear(),6,1).getTimezoneOffset(),c=new Date(i.getFullYear(),0,1).getTimezoneOffset(),h=Math.min(c,l);return 0>o?L[n+32>>>2>>>0]=+(l!=c&&h==a):0<o!=(h==a)&&(l=Math.max(c,l),i.setTime(i.getTime()+6e4*((0<o?h:l)-a))),L[n+24>>>2>>>0]=i.getDay(),L[n+28>>>2>>>0]=(Et(i.getFullYear())?Nr:Wr)[i.getMonth()]+i.getDate()-1|0,L[n>>>2>>>0]=i.getSeconds(),L[n+4>>>2>>>0]=i.getMinutes(),L[n+8>>>2>>>0]=i.getHours(),L[n+12>>>2>>>0]=i.getDate(),L[n+16>>>2>>>0]=i.getMonth(),L[n+20>>>2>>>0]=i.getYear(),n=i.getTime(),isNaN(n)?(L[Xt()>>>2>>>0]=61,n=-1):n/=1e3,BigInt(n)},Lc:function(){return-52},Mc:function(){},Dc:function(n,i,o){function a(v){return(v=v.toTimeString().match(/\\(([A-Za-z ]+)\\)$/))?v[1]:"GMT"}o>>>=0;var l=new Date().getFullYear(),c=new Date(l,0,1),h=new Date(l,6,1);l=c.getTimezoneOffset();var g=h.getTimezoneOffset();ue[n>>>0>>>2>>>0]=60*Math.max(l,g),L[i>>>0>>>2>>>0]=+(l!=g),n=a(c),i=a(h),n=Gr(n),i=Gr(i),g<l?(ue[o>>>2>>>0]=n,ue[o+4>>>2>>>0]=i):(ue[o>>>2>>>0]=i,ue[o+4>>>2>>>0]=n)},jb:()=>{Ye("")},A:function(n,i,o){return n>>>=0,i=Hr(i>>>0,o>>>0),Qe[n].apply(null,i)},_b:function(n,i,o){return n>>>=0,i=Hr(i>>>0,o>>>0),Qe[n].apply(null,i)},Wb:()=>Date.now(),Ec:function(){return 4294901760},ha:()=>performance.now(),Cc:function(n){n>>>=0;var i=J.length;if(4294901760<n)return!1;for(var o=1;4>=o;o*=2){var a=i*(1+.2/o);a=Math.min(a,n+100663296);var l=Math;a=Math.max(n,a);e:{l=(l.min.call(l,4294901760,a+(65536-a%65536)%65536)-G.buffer.byteLength+65535)/65536;try{G.grow(l),ye();var c=1;break e}catch{}c=void 0}if(c)return!0}return!1},Sc:function(n,i){n>>>=0,i>>>=0;var o=0;return Fr().forEach((a,l)=>{var c=i+o;for(l=ue[n+4*l>>>2>>>0]=c,c=0;c<a.length;++c)K[l++>>>0>>>0]=a.charCodeAt(c);K[l>>>0>>>0]=0,o+=a.length+1}),0},Tc:function(n,i){n>>>=0,i>>>=0;var o=Fr();ue[n>>>2>>>0]=o.length;var a=0;return o.forEach(l=>a+=l.length+1),ue[i>>>2>>>0]=a,0},Bb:()=>52,Ub:function(){return 52},Rc:function(){return 70},Tb:function(n,i,o,a){i>>>=0,o>>>=0,a>>>=0;for(var l=0,c=0;c<o;c++){var h=ue[i>>>2>>>0],g=ue[i+4>>>2>>>0];i+=8;for(var v=0;v<g;v++){var _=J[h+v>>>0],x=On[n];_===0||_===10?((n===1?z:k)(hn(x,0)),x.length=0):x.push(_)}l+=g}return ue[a>>>2>>>0]=l,0},wb:Uf,bd:sh,la:um,Z:Zm,ka:Qm,ta:zp,na:Mf,cd:ah,ob:sm,N:yp,y:_f,b:nf,Sb:bf,xa:yf,f:tf,Eb:Km,h:ef,_:zm,i:df,dd:ih,j:lf,t:uf,s:Af,o:Rf,Va:Wf,Ba:$m,oa:Ef,Pb:mp,bb:bp,Ib:Cm,mb:fm,hc:jm,wc:Lf,ec:Gm,fc:Nm,$b:nh,qa:Np,xb:kf,Aa:Mm,Db:th,da:Wp,gc:Vm,Sa:wp,E:af,G:np,Gb:Um,id:Wm,sa:rm,M:sp,X:ip,V:$p,z:gf,Fb:Fm,dc:Hm,D:Em,Hb:km,hd:Lm,Ta:gp,wa:Kp,ic:Rm,ac:rh,Mb:jp,Y:zf,I:vf,C:Zf,Za:Pm,P:ap,d:sf,$a:lp,n:of,Xa:qm,va:am,vb:Ff,e:rf,xc:Hf,ca:Bm,fb:cp,Ca:Up,lb:pm,hb:Kf,c:cf,uc:Xf,md:Sm,oc:em,k:ff,sc:dp,l:pf,vc:Yf,rc:fp,pd:hm,p:mf,Qa:Ip,tb:xp,Pa:Ap,Kb:lm,B:Tf,K:wf,T:Of,_a:xm,nc:tm,gb:up,ya:_p,ja:hf,Q:hp,cb:Pf,Ka:nm,kb:oh,Fa:bm,lc:vm,Ga:ym,Ha:mm,ed:eh,ud:pp,ra:om,nd:_m,La:Xp,Ja:im,Rb:Sf,qc:Gp,Ia:dm,Ma:Qp,pb:Vp,ma:Yp,Da:Cp,jc:Om,pc:Fp,Jb:wm,Ea:Am,ia:tp,xd:Vf,ld:Im,S:Lp,db:If,Ya:Dm,cc:Xm,ib:qf,F:Bf,R:Cf,Ua:Gf,kd:Tm,ba:Nf,nb:cm,pa:qp,bc:Jm,zc:xf,v:$f,L:Jf,sd:Jp,Nb:Rp,mc:gm,yd:jf,Ob:kp,Lb:Hp,ab:vp,yc:Df,Qb:rp,Na:Zp,$:Dp,tc:ep,J:op,gd:Ym,ub:Qf,ua:Mp,H:Bp,rb:Pp,Oa:Ep,Ra:Sp,qb:Op,sb:Tp,w:function(n){return n>>>0},Fc:Qt,ga:function(n,i,o,a){return Qt(n>>>0,i>>>0,o>>>0,a>>>0)}},M=function(){function n(o){return M=o.exports,M=xn(),M=uh(),G=M.Ad,ye(),xe.unshift(M.Bd),Ie--,Ie==0&&(Pe!==null&&(clearInterval(Pe),Pe=null),De&&(o=De,De=null,o())),M}var i={a:bt};if(Ie++,t.instantiateWasm)try{return t.instantiateWasm(i,n)}catch(o){k(`Module.instantiateWasm callback failed with error: ${o}`),s(o)}return Fe(i,function(o){n(o.instance)}).catch(s),{}}();t._OrtInit=(n,i)=>(t._OrtInit=M.Cd)(n,i),t._OrtGetLastError=(n,i)=>(t._OrtGetLastError=M.Dd)(n,i),t._OrtCreateSessionOptions=(n,i,o,a,l,c,h,g,v,_)=>(t._OrtCreateSessionOptions=M.Ed)(n,i,o,a,l,c,h,g,v,_),t._OrtAppendExecutionProvider=(n,i)=>(t._OrtAppendExecutionProvider=M.Fd)(n,i),t._OrtAddFreeDimensionOverride=(n,i,o)=>(t._OrtAddFreeDimensionOverride=M.Gd)(n,i,o),t._OrtAddSessionConfigEntry=(n,i,o)=>(t._OrtAddSessionConfigEntry=M.Hd)(n,i,o),t._OrtReleaseSessionOptions=n=>(t._OrtReleaseSessionOptions=M.Id)(n),t._OrtCreateSession=(n,i,o)=>(t._OrtCreateSession=M.Jd)(n,i,o),t._OrtReleaseSession=n=>(t._OrtReleaseSession=M.Kd)(n),t._OrtGetInputOutputCount=(n,i,o)=>(t._OrtGetInputOutputCount=M.Ld)(n,i,o),t._OrtGetInputName=(n,i)=>(t._OrtGetInputName=M.Md)(n,i),t._OrtGetOutputName=(n,i)=>(t._OrtGetOutputName=M.Nd)(n,i),t._OrtFree=n=>(t._OrtFree=M.Od)(n),t._OrtCreateTensor=(n,i,o,a,l,c)=>(t._OrtCreateTensor=M.Pd)(n,i,o,a,l,c),t._OrtGetTensorData=(n,i,o,a,l)=>(t._OrtGetTensorData=M.Qd)(n,i,o,a,l),t._OrtReleaseTensor=n=>(t._OrtReleaseTensor=M.Rd)(n),t._OrtCreateRunOptions=(n,i,o,a)=>(t._OrtCreateRunOptions=M.Sd)(n,i,o,a),t._OrtAddRunConfigEntry=(n,i,o)=>(t._OrtAddRunConfigEntry=M.Td)(n,i,o),t._OrtReleaseRunOptions=n=>(t._OrtReleaseRunOptions=M.Ud)(n),t._OrtCreateBinding=n=>(t._OrtCreateBinding=M.Vd)(n),t._OrtBindInput=(n,i,o)=>(t._OrtBindInput=M.Wd)(n,i,o),t._OrtBindOutput=(n,i,o,a)=>(t._OrtBindOutput=M.Xd)(n,i,o,a),t._OrtClearBoundOutputs=n=>(t._OrtClearBoundOutputs=M.Yd)(n),t._OrtReleaseBinding=n=>(t._OrtReleaseBinding=M.Zd)(n),t._OrtRunWithBinding=(n,i,o,a,l)=>(t._OrtRunWithBinding=M._d)(n,i,o,a,l),t._OrtRun=(n,i,o,a,l,c,h,g)=>(t._OrtRun=M.$d)(n,i,o,a,l,c,h,g),t._OrtEndProfiling=n=>(t._OrtEndProfiling=M.ae)(n),t._JsepOutput=(n,i,o)=>(t._JsepOutput=M.be)(n,i,o),t._JsepGetNodeName=n=>(t._JsepGetNodeName=M.ce)(n);var Xt=()=>(Xt=M.de)(),Gt=t._malloc=n=>(Gt=t._malloc=M.ee)(n),gt=t._free=n=>(gt=t._free=M.fe)(n),Mn=n=>(Mn=M.ge)(n),V=(n,i)=>(V=M.ie)(n,i),Jt=n=>(Jt=M.je)(n),N=()=>(N=M.ke)(),W=n=>(W=M.le)(n),zn=n=>(zn=M.me)(n),Un=n=>(Un=M.ne)(n),jn=n=>(jn=M.oe)(n),Vn=(n,i,o)=>(Vn=M.pe)(n,i,o),Nn=n=>(Nn=M.qe)(n),er=t.dynCall_vii=(n,i,o)=>(er=t.dynCall_vii=M.re)(n,i,o),_r=t.dynCall_iiii=(n,i,o,a)=>(_r=t.dynCall_iiii=M.se)(n,i,o,a),qr=t.dynCall_iii=(n,i,o)=>(qr=t.dynCall_iii=M.te)(n,i,o),Kr=t.dynCall_ii=(n,i)=>(Kr=t.dynCall_ii=M.ue)(n,i),Yr=t.dynCall_iiiiiii=(n,i,o,a,l,c,h)=>(Yr=t.dynCall_iiiiiii=M.ve)(n,i,o,a,l,c,h),$r=t.dynCall_vi=(n,i)=>($r=t.dynCall_vi=M.we)(n,i),Cr=t.dynCall_v=n=>(Cr=t.dynCall_v=M.xe)(n),Zr=t.dynCall_iiiiii=(n,i,o,a,l,c)=>(Zr=t.dynCall_iiiiii=M.ye)(n,i,o,a,l,c),Qr=t.dynCall_iiij=(n,i,o,a)=>(Qr=t.dynCall_iiij=M.ze)(n,i,o,a),Xr=t.dynCall_iiiii=(n,i,o,a,l)=>(Xr=t.dynCall_iiiii=M.Ae)(n,i,o,a,l),Sr=t.dynCall_viii=(n,i,o,a)=>(Sr=t.dynCall_viii=M.Be)(n,i,o,a),tr=t.dynCall_viiiii=(n,i,o,a,l,c)=>(tr=t.dynCall_viiiii=M.Ce)(n,i,o,a,l,c),xr=t.dynCall_viiii=(n,i,o,a,l)=>(xr=t.dynCall_viiii=M.De)(n,i,o,a,l),Jr=t.dynCall_viiiiii=(n,i,o,a,l,c,h)=>(Jr=t.dynCall_viiiiii=M.Ee)(n,i,o,a,l,c,h),en=t.dynCall_viiji=(n,i,o,a,l)=>(en=t.dynCall_viiji=M.Fe)(n,i,o,a,l),tn=t.dynCall_viiiiiiiiiii=(n,i,o,a,l,c,h,g,v,_,x,E)=>(tn=t.dynCall_viiiiiiiiiii=M.Ge)(n,i,o,a,l,c,h,g,v,_,x,E),rn=t.dynCall_viiijjjii=(n,i,o,a,l,c,h,g,v)=>(rn=t.dynCall_viiijjjii=M.He)(n,i,o,a,l,c,h,g,v),nn=t.dynCall_iij=(n,i,o)=>(nn=t.dynCall_iij=M.Ie)(n,i,o),Wn=t.dynCall_iif=(n,i,o)=>(Wn=t.dynCall_iif=M.Je)(n,i,o),rr=t.dynCall_iid=(n,i,o)=>(rr=t.dynCall_iid=M.Ke)(n,i,o),on=t.dynCall_jii=(n,i,o)=>(on=t.dynCall_jii=M.Le)(n,i,o),p=t.dynCall_i=n=>(p=t.dynCall_i=M.Me)(n),b=t.dynCall_viiiiiiii=(n,i,o,a,l,c,h,g,v)=>(b=t.dynCall_viiiiiiii=M.Ne)(n,i,o,a,l,c,h,g,v),S=t.dynCall_viiiiij=(n,i,o,a,l,c,h)=>(S=t.dynCall_viiiiij=M.Oe)(n,i,o,a,l,c,h),B=t.dynCall_ji=(n,i)=>(B=t.dynCall_ji=M.Pe)(n,i),H=t.dynCall_viij=(n,i,o,a)=>(H=t.dynCall_viij=M.Qe)(n,i,o,a),Z=t.dynCall_iiiiiiiiiiii=(n,i,o,a,l,c,h,g,v,_,x,E)=>(Z=t.dynCall_iiiiiiiiiiii=M.Re)(n,i,o,a,l,c,h,g,v,_,x,E),ee=t.dynCall_viiiiiiiii=(n,i,o,a,l,c,h,g,v,_)=>(ee=t.dynCall_viiiiiiiii=M.Se)(n,i,o,a,l,c,h,g,v,_),pe=t.dynCall_ij=(n,i)=>(pe=t.dynCall_ij=M.Te)(n,i),ce=t.dynCall_iiiiij=(n,i,o,a,l,c)=>(ce=t.dynCall_iiiiij=M.Ue)(n,i,o,a,l,c),de=t.dynCall_j=n=>(de=t.dynCall_j=M.Ve)(n),me=t.dynCall_vij=(n,i,o)=>(me=t.dynCall_vij=M.We)(n,i,o),Oe=t.dynCall_viijjjiiiiii=(n,i,o,a,l,c,h,g,v,_,x,E)=>(Oe=t.dynCall_viijjjiiiiii=M.Xe)(n,i,o,a,l,c,h,g,v,_,x,E),Be=t.dynCall_viiijiiiiiii=(n,i,o,a,l,c,h,g,v,_,x,E)=>(Be=t.dynCall_viiijiiiiiii=M.Ye)(n,i,o,a,l,c,h,g,v,_,x,E),F=t.dynCall_iiiiiiii=(n,i,o,a,l,c,h,g)=>(F=t.dynCall_iiiiiiii=M.Ze)(n,i,o,a,l,c,h,g),we=t.dynCall_viiiiiii=(n,i,o,a,l,c,h,g)=>(we=t.dynCall_viiiiiii=M._e)(n,i,o,a,l,c,h,g),ze=t.dynCall_iiiiiiiij=(n,i,o,a,l,c,h,g,v)=>(ze=t.dynCall_iiiiiiiij=M.$e)(n,i,o,a,l,c,h,g,v),Pt=t.dynCall_viiiiiiiiiiiii=(n,i,o,a,l,c,h,g,v,_,x,E,D,A)=>(Pt=t.dynCall_viiiiiiiiiiiii=M.af)(n,i,o,a,l,c,h,g,v,_,x,E,D,A),an=t.dynCall_iiiiiiiii=(n,i,o,a,l,c,h,g,v)=>(an=t.dynCall_iiiiiiiii=M.bf)(n,i,o,a,l,c,h,g,v),co=t.dynCall_iiiiijiiiii=(n,i,o,a,l,c,h,g,v,_,x)=>(co=t.dynCall_iiiiijiiiii=M.cf)(n,i,o,a,l,c,h,g,v,_,x),fo=t.dynCall_vijjjiiij=(n,i,o,a,l,c,h,g,v)=>(fo=t.dynCall_vijjjiiij=M.df)(n,i,o,a,l,c,h,g,v),po=t.dynCall_fi=(n,i)=>(po=t.dynCall_fi=M.ef)(n,i),mo=t.dynCall_fii=(n,i,o)=>(mo=t.dynCall_fii=M.ff)(n,i,o),ho=t.dynCall_di=(n,i)=>(ho=t.dynCall_di=M.gf)(n,i),go=t.dynCall_dii=(n,i,o)=>(go=t.dynCall_dii=M.hf)(n,i,o),yo=t.dynCall_vijj=(n,i,o,a)=>(yo=t.dynCall_vijj=M.jf)(n,i,o,a),bo=t.dynCall_iiiiiiiiii=(n,i,o,a,l,c,h,g,v,_)=>(bo=t.dynCall_iiiiiiiiii=M.kf)(n,i,o,a,l,c,h,g,v,_),vo=t.dynCall_viijiii=(n,i,o,a,l,c,h)=>(vo=t.dynCall_viijiii=M.lf)(n,i,o,a,l,c,h),wo=t.dynCall_viid=(n,i,o,a)=>(wo=t.dynCall_viid=M.mf)(n,i,o,a),_o=t.dynCall_viffiii=(n,i,o,a,l,c,h)=>(_o=t.dynCall_viffiii=M.nf)(n,i,o,a,l,c,h),$o=t.dynCall_viifiii=(n,i,o,a,l,c,h)=>($o=t.dynCall_viifiii=M.of)(n,i,o,a,l,c,h),Co=t.dynCall_viiiiidiidi=(n,i,o,a,l,c,h,g,v,_,x)=>(Co=t.dynCall_viiiiidiidi=M.pf)(n,i,o,a,l,c,h,g,v,_,x),So=t.dynCall_viiiiiiiiidi=(n,i,o,a,l,c,h,g,v,_,x,E)=>(So=t.dynCall_viiiiiiiiidi=M.qf)(n,i,o,a,l,c,h,g,v,_,x,E),xo=t.dynCall_jiii=(n,i,o,a)=>(xo=t.dynCall_jiii=M.rf)(n,i,o,a),Io=t.dynCall_vjiiiiii=(n,i,o,a,l,c,h,g)=>(Io=t.dynCall_vjiiiiii=M.sf)(n,i,o,a,l,c,h,g),Ao=t.dynCall_viiid=(n,i,o,a,l)=>(Ao=t.dynCall_viiid=M.tf)(n,i,o,a,l),To=t.dynCall_viiiiiiiiiji=(n,i,o,a,l,c,h,g,v,_,x,E)=>(To=t.dynCall_viiiiiiiiiji=M.uf)(n,i,o,a,l,c,h,g,v,_,x,E),Eo=t.dynCall_viji=(n,i,o,a)=>(Eo=t.dynCall_viji=M.vf)(n,i,o,a),Po=t.dynCall_vijjjjjjjjjjjjji=(n,i,o,a,l,c,h,g,v,_,x,E,D,A,j,Y)=>(Po=t.dynCall_vijjjjjjjjjjjjji=M.wf)(n,i,o,a,l,c,h,g,v,_,x,E,D,A,j,Y),Oo=t.dynCall_viiiji=(n,i,o,a,l,c)=>(Oo=t.dynCall_viiiji=M.xf)(n,i,o,a,l,c),ko=t.dynCall_vijjjiiji=(n,i,o,a,l,c,h,g,v)=>(ko=t.dynCall_vijjjiiji=M.yf)(n,i,o,a,l,c,h,g,v),Ro=t.dynCall_iiiji=(n,i,o,a,l)=>(Ro=t.dynCall_iiiji=M.zf)(n,i,o,a,l),Do=t.dynCall_iiijiiiiiiiiii=(n,i,o,a,l,c,h,g,v,_,x,E,D,A)=>(Do=t.dynCall_iiijiiiiiiiiii=M.Af)(n,i,o,a,l,c,h,g,v,_,x,E,D,A),Bo=t.dynCall_vj=(n,i)=>(Bo=t.dynCall_vj=M.Bf)(n,i),Mo=t.dynCall_jjj=(n,i,o)=>(Mo=t.dynCall_jjj=M.Cf)(n,i,o),zo=t.dynCall_iiijiiiiii=(n,i,o,a,l,c,h,g,v,_)=>(zo=t.dynCall_iiijiiiiii=M.Df)(n,i,o,a,l,c,h,g,v,_),Uo=t.dynCall_vfiii=(n,i,o,a,l)=>(Uo=t.dynCall_vfiii=M.Ef)(n,i,o,a,l),jo=t.dynCall_viiiiff=(n,i,o,a,l,c,h)=>(jo=t.dynCall_viiiiff=M.Ff)(n,i,o,a,l,c,h),Vo=t.dynCall_viiiiiff=(n,i,o,a,l,c,h,g)=>(Vo=t.dynCall_viiiiiff=M.Gf)(n,i,o,a,l,c,h,g),No=t.dynCall_viiff=(n,i,o,a,l)=>(No=t.dynCall_viiff=M.Hf)(n,i,o,a,l),Wo=t.dynCall_viiiiiiiiifiii=(n,i,o,a,l,c,h,g,v,_,x,E,D,A)=>(Wo=t.dynCall_viiiiiiiiifiii=M.If)(n,i,o,a,l,c,h,g,v,_,x,E,D,A),Go=t.dynCall_viiiiiiiijj=(n,i,o,a,l,c,h,g,v,_,x)=>(Go=t.dynCall_viiiiiiiijj=M.Jf)(n,i,o,a,l,c,h,g,v,_,x),Ho=t.dynCall_iiiiiiiiiiiiiifii=(n,i,o,a,l,c,h,g,v,_,x,E,D,A,j,Y,re)=>(Ho=t.dynCall_iiiiiiiiiiiiiifii=M.Kf)(n,i,o,a,l,c,h,g,v,_,x,E,D,A,j,Y,re),Lo=t.dynCall_viiiiiiiiiiii=(n,i,o,a,l,c,h,g,v,_,x,E,D)=>(Lo=t.dynCall_viiiiiiiiiiii=M.Lf)(n,i,o,a,l,c,h,g,v,_,x,E,D),Fo=t.dynCall_iiiiiiiiiiiiiiiiifii=(n,i,o,a,l,c,h,g,v,_,x,E,D,A,j,Y,re,le,he,Re)=>(Fo=t.dynCall_iiiiiiiiiiiiiiiiifii=M.Mf)(n,i,o,a,l,c,h,g,v,_,x,E,D,A,j,Y,re,le,he,Re),qo=t.dynCall_vijjiiiiii=(n,i,o,a,l,c,h,g,v,_)=>(qo=t.dynCall_vijjiiiiii=M.Nf)(n,i,o,a,l,c,h,g,v,_),Ko=t.dynCall_iiiijjj=(n,i,o,a,l,c,h)=>(Ko=t.dynCall_iiiijjj=M.Of)(n,i,o,a,l,c,h),Yo=t.dynCall_viiiiiiiiii=(n,i,o,a,l,c,h,g,v,_,x)=>(Yo=t.dynCall_viiiiiiiiii=M.Pf)(n,i,o,a,l,c,h,g,v,_,x),Zo=t.dynCall_iiijjj=(n,i,o,a,l,c)=>(Zo=t.dynCall_iiijjj=M.Qf)(n,i,o,a,l,c),Qo=t.dynCall_fffffff=(n,i,o,a,l,c,h)=>(Qo=t.dynCall_fffffff=M.Rf)(n,i,o,a,l,c,h),Xo=t.dynCall_viiiij=(n,i,o,a,l,c)=>(Xo=t.dynCall_viiiij=M.Sf)(n,i,o,a,l,c),Jo=t.dynCall_viijj=(n,i,o,a,l)=>(Jo=t.dynCall_viijj=M.Tf)(n,i,o,a,l),ea=t.dynCall_vjjjjjjffiifiiiiii=(n,i,o,a,l,c,h,g,v,_,x,E,D,A,j,Y,re,le)=>(ea=t.dynCall_vjjjjjjffiifiiiiii=M.Uf)(n,i,o,a,l,c,h,g,v,_,x,E,D,A,j,Y,re,le),ta=t.dynCall_viiiiiiffiifiiiii=(n,i,o,a,l,c,h,g,v,_,x,E,D,A,j,Y,re)=>(ta=t.dynCall_viiiiiiffiifiiiii=M.Vf)(n,i,o,a,l,c,h,g,v,_,x,E,D,A,j,Y,re),ra=t.dynCall_viiiiiiffifiiiii=(n,i,o,a,l,c,h,g,v,_,x,E,D,A,j,Y)=>(ra=t.dynCall_viiiiiiffifiiiii=M.Wf)(n,i,o,a,l,c,h,g,v,_,x,E,D,A,j,Y),na=t.dynCall_viiiiiiffiiiiii=(n,i,o,a,l,c,h,g,v,_,x,E,D,A,j)=>(na=t.dynCall_viiiiiiffiiiiii=M.Xf)(n,i,o,a,l,c,h,g,v,_,x,E,D,A,j),ia=t.dynCall_vjjjjjjjjfffiifiiiiii=(n,i,o,a,l,c,h,g,v,_,x,E,D,A,j,Y,re,le,he,Re,Ne)=>(ia=t.dynCall_vjjjjjjjjfffiifiiiiii=M.Yf)(n,i,o,a,l,c,h,g,v,_,x,E,D,A,j,Y,re,le,he,Re,Ne),oa=t.dynCall_vjjjjjjfffifiiiiiii=(n,i,o,a,l,c,h,g,v,_,x,E,D,A,j,Y,re,le,he)=>(oa=t.dynCall_vjjjjjjfffifiiiiiii=M.Zf)(n,i,o,a,l,c,h,g,v,_,x,E,D,A,j,Y,re,le,he),aa=t.dynCall_vjjjjjjfffifiiiii=(n,i,o,a,l,c,h,g,v,_,x,E,D,A,j,Y,re)=>(aa=t.dynCall_vjjjjjjfffifiiiii=M._f)(n,i,o,a,l,c,h,g,v,_,x,E,D,A,j,Y,re),sa=t.dynCall_vjjjjjjjjfffiifiiiii=(n,i,o,a,l,c,h,g,v,_,x,E,D,A,j,Y,re,le,he,Re)=>(sa=t.dynCall_vjjjjjjjjfffiifiiiii=M.$f)(n,i,o,a,l,c,h,g,v,_,x,E,D,A,j,Y,re,le,he,Re),ua=t.dynCall_vijjfffiii=(n,i,o,a,l,c,h,g,v,_)=>(ua=t.dynCall_vijjfffiii=M.ag)(n,i,o,a,l,c,h,g,v,_),la=t.dynCall_vijiiiiiiii=(n,i,o,a,l,c,h,g,v,_,x)=>(la=t.dynCall_vijiiiiiiii=M.bg)(n,i,o,a,l,c,h,g,v,_,x),da=t.dynCall_vijjjjjjifiiiii=(n,i,o,a,l,c,h,g,v,_,x,E,D,A,j)=>(da=t.dynCall_vijjjjjjifiiiii=M.cg)(n,i,o,a,l,c,h,g,v,_,x,E,D,A,j),ca=t.dynCall_vjjjjjiiii=(n,i,o,a,l,c,h,g,v,_)=>(ca=t.dynCall_vjjjjjiiii=M.dg)(n,i,o,a,l,c,h,g,v,_),fa=t.dynCall_vjjjjfiii=(n,i,o,a,l,c,h,g,v)=>(fa=t.dynCall_vjjjjfiii=M.eg)(n,i,o,a,l,c,h,g,v),pa=t.dynCall_viifi=(n,i,o,a,l)=>(pa=t.dynCall_viifi=M.fg)(n,i,o,a,l),ma=t.dynCall_vijjii=(n,i,o,a,l,c)=>(ma=t.dynCall_vijjii=M.gg)(n,i,o,a,l,c),ha=t.dynCall_viiiiijjiiiii=(n,i,o,a,l,c,h,g,v,_,x,E,D)=>(ha=t.dynCall_viiiiijjiiiii=M.hg)(n,i,o,a,l,c,h,g,v,_,x,E,D),ga=t.dynCall_iiiiiji=(n,i,o,a,l,c,h)=>(ga=t.dynCall_iiiiiji=M.ig)(n,i,o,a,l,c,h),ya=t.dynCall_iiiiji=(n,i,o,a,l,c)=>(ya=t.dynCall_iiiiji=M.jg)(n,i,o,a,l,c),ba=t.dynCall_viiiiijiiiiii=(n,i,o,a,l,c,h,g,v,_,x,E,D)=>(ba=t.dynCall_viiiiijiiiiii=M.kg)(n,i,o,a,l,c,h,g,v,_,x,E,D),va=t.dynCall_viiijiiiiii=(n,i,o,a,l,c,h,g,v,_,x)=>(va=t.dynCall_viiijiiiiii=M.lg)(n,i,o,a,l,c,h,g,v,_,x),wa=t.dynCall_viiiijii=(n,i,o,a,l,c,h,g)=>(wa=t.dynCall_viiiijii=M.mg)(n,i,o,a,l,c,h,g),_a=t.dynCall_viijjiii=(n,i,o,a,l,c,h,g)=>(_a=t.dynCall_viijjiii=M.ng)(n,i,o,a,l,c,h,g),$a=t.dynCall_ijii=(n,i,o,a)=>($a=t.dynCall_ijii=M.og)(n,i,o,a),Ca=t.dynCall_viiiiijjji=(n,i,o,a,l,c,h,g,v,_)=>(Ca=t.dynCall_viiiiijjji=M.pg)(n,i,o,a,l,c,h,g,v,_),Sa=t.dynCall_vijjjjiij=(n,i,o,a,l,c,h,g,v)=>(Sa=t.dynCall_vijjjjiij=M.qg)(n,i,o,a,l,c,h,g,v),xa=t.dynCall_viiiiijij=(n,i,o,a,l,c,h,g,v)=>(xa=t.dynCall_viiiiijij=M.rg)(n,i,o,a,l,c,h,g,v),Ia=t.dynCall_viiiiiijij=(n,i,o,a,l,c,h,g,v,_)=>(Ia=t.dynCall_viiiiiijij=M.sg)(n,i,o,a,l,c,h,g,v,_),Aa=t.dynCall_vijiii=(n,i,o,a,l,c)=>(Aa=t.dynCall_vijiii=M.tg)(n,i,o,a,l,c),Ta=t.dynCall_viiifii=(n,i,o,a,l,c,h)=>(Ta=t.dynCall_viiifii=M.ug)(n,i,o,a,l,c,h),Ea=t.dynCall_viiiiiiiiifi=(n,i,o,a,l,c,h,g,v,_,x,E)=>(Ea=t.dynCall_viiiiiiiiifi=M.vg)(n,i,o,a,l,c,h,g,v,_,x,E),Pa=t.dynCall_iiijiiii=(n,i,o,a,l,c,h,g)=>(Pa=t.dynCall_iiijiiii=M.wg)(n,i,o,a,l,c,h,g),Oa=t.dynCall_viiiiiijjiiiii=(n,i,o,a,l,c,h,g,v,_,x,E,D,A)=>(Oa=t.dynCall_viiiiiijjiiiii=M.xg)(n,i,o,a,l,c,h,g,v,_,x,E,D,A),ka=t.dynCall_viiiiiiijiiiiii=(n,i,o,a,l,c,h,g,v,_,x,E,D,A,j)=>(ka=t.dynCall_viiiiiiijiiiiii=M.yg)(n,i,o,a,l,c,h,g,v,_,x,E,D,A,j),Ra=t.dynCall_vif=(n,i,o)=>(Ra=t.dynCall_vif=M.zg)(n,i,o),Da=t.dynCall_viif=(n,i,o,a)=>(Da=t.dynCall_viif=M.Ag)(n,i,o,a),Ba=t.dynCall_fiii=(n,i,o,a)=>(Ba=t.dynCall_fiii=M.Bg)(n,i,o,a),Ma=t.dynCall_diii=(n,i,o,a)=>(Ma=t.dynCall_diii=M.Cg)(n,i,o,a),za=t.dynCall_viiiiiifii=(n,i,o,a,l,c,h,g,v,_)=>(za=t.dynCall_viiiiiifii=M.Dg)(n,i,o,a,l,c,h,g,v,_),Ua=t.dynCall_viiiiijiiiiiiiiiiiiiiiiiii=(n,i,o,a,l,c,h,g,v,_,x,E,D,A,j,Y,re,le,he,Re,Ne,qe,Ct,_i,$i,Ci)=>(Ua=t.dynCall_viiiiijiiiiiiiiiiiiiiiiiii=M.Eg)(n,i,o,a,l,c,h,g,v,_,x,E,D,A,j,Y,re,le,he,Re,Ne,qe,Ct,_i,$i,Ci),ja=t.dynCall_viijji=(n,i,o,a,l,c)=>(ja=t.dynCall_viijji=M.Fg)(n,i,o,a,l,c),Va=t.dynCall_iiiiiiiiiiiji=(n,i,o,a,l,c,h,g,v,_,x,E,D)=>(Va=t.dynCall_iiiiiiiiiiiji=M.Gg)(n,i,o,a,l,c,h,g,v,_,x,E,D),Na=t.dynCall_viifiifijjjii=(n,i,o,a,l,c,h,g,v,_,x,E,D)=>(Na=t.dynCall_viifiifijjjii=M.Hg)(n,i,o,a,l,c,h,g,v,_,x,E,D),Wa=t.dynCall_viiiiiiiiiiiiiiiiiiii=(n,i,o,a,l,c,h,g,v,_,x,E,D,A,j,Y,re,le,he,Re,Ne)=>(Wa=t.dynCall_viiiiiiiiiiiiiiiiiiii=M.Ig)(n,i,o,a,l,c,h,g,v,_,x,E,D,A,j,Y,re,le,he,Re,Ne),Ga=t.dynCall_viiiiifiiiiii=(n,i,o,a,l,c,h,g,v,_,x,E,D)=>(Ga=t.dynCall_viiiiifiiiiii=M.Jg)(n,i,o,a,l,c,h,g,v,_,x,E,D),Ha=t.dynCall_vijiiiiiiijjii=(n,i,o,a,l,c,h,g,v,_,x,E,D,A)=>(Ha=t.dynCall_vijiiiiiiijjii=M.Kg)(n,i,o,a,l,c,h,g,v,_,x,E,D,A),La=t.dynCall_viiiiiiiiiiiiiiiiii=(n,i,o,a,l,c,h,g,v,_,x,E,D,A,j,Y,re,le,he)=>(La=t.dynCall_viiiiiiiiiiiiiiiiii=M.Lg)(n,i,o,a,l,c,h,g,v,_,x,E,D,A,j,Y,re,le,he),Fa=t.dynCall_viiiiiiiiiiiiiiiiiii=(n,i,o,a,l,c,h,g,v,_,x,E,D,A,j,Y,re,le,he,Re)=>(Fa=t.dynCall_viiiiiiiiiiiiiiiiiii=M.Mg)(n,i,o,a,l,c,h,g,v,_,x,E,D,A,j,Y,re,le,he,Re),qa=t.dynCall_viiiiiiiiiiiiiii=(n,i,o,a,l,c,h,g,v,_,x,E,D,A,j,Y)=>(qa=t.dynCall_viiiiiiiiiiiiiii=M.Ng)(n,i,o,a,l,c,h,g,v,_,x,E,D,A,j,Y),Ka=t.dynCall_viiiiiiiiiiiiiiii=(n,i,o,a,l,c,h,g,v,_,x,E,D,A,j,Y,re)=>(Ka=t.dynCall_viiiiiiiiiiiiiiii=M.Og)(n,i,o,a,l,c,h,g,v,_,x,E,D,A,j,Y,re),Ya=t.dynCall_viiiijjj=(n,i,o,a,l,c,h,g)=>(Ya=t.dynCall_viiiijjj=M.Pg)(n,i,o,a,l,c,h,g),Za=t.dynCall_iiiiid=(n,i,o,a,l,c)=>(Za=t.dynCall_iiiiid=M.Qg)(n,i,o,a,l,c),Qa=t.dynCall_viiiiiiijjj=(n,i,o,a,l,c,h,g,v,_,x)=>(Qa=t.dynCall_viiiiiiijjj=M.Rg)(n,i,o,a,l,c,h,g,v,_,x),Xa=t.dynCall_iiiiiiiiiii=(n,i,o,a,l,c,h,g,v,_,x)=>(Xa=t.dynCall_iiiiiiiiiii=M.Sg)(n,i,o,a,l,c,h,g,v,_,x),Ja=t.dynCall_iiiiiiiiiiiiiiiiiifi=(n,i,o,a,l,c,h,g,v,_,x,E,D,A,j,Y,re,le,he,Re)=>(Ja=t.dynCall_iiiiiiiiiiiiiiiiiifi=M.Tg)(n,i,o,a,l,c,h,g,v,_,x,E,D,A,j,Y,re,le,he,Re),es=t.dynCall_viiif=(n,i,o,a,l)=>(es=t.dynCall_viiif=M.Ug)(n,i,o,a,l),ts=t.dynCall_viiijiiiii=(n,i,o,a,l,c,h,g,v,_)=>(ts=t.dynCall_viiijiiiii=M.Vg)(n,i,o,a,l,c,h,g,v,_),rs=t.dynCall_viiij=(n,i,o,a,l)=>(rs=t.dynCall_viiij=M.Wg)(n,i,o,a,l),ns=t.dynCall_iijjj=(n,i,o,a,l)=>(ns=t.dynCall_iijjj=M.Xg)(n,i,o,a,l),is=t.dynCall_viiiiji=(n,i,o,a,l,c,h)=>(is=t.dynCall_viiiiji=M.Yg)(n,i,o,a,l,c,h),os=t.dynCall_iijjji=(n,i,o,a,l,c)=>(os=t.dynCall_iijjji=M.Zg)(n,i,o,a,l,c),as=t.dynCall_ijijji=(n,i,o,a,l,c)=>(as=t.dynCall_ijijji=M._g)(n,i,o,a,l,c),ss=t.dynCall_viiijjiii=(n,i,o,a,l,c,h,g,v)=>(ss=t.dynCall_viiijjiii=M.$g)(n,i,o,a,l,c,h,g,v),us=t.dynCall_iiiiijji=(n,i,o,a,l,c,h,g)=>(us=t.dynCall_iiiiijji=M.ah)(n,i,o,a,l,c,h,g),ls=t.dynCall_iiiifi=(n,i,o,a,l,c)=>(ls=t.dynCall_iiiifi=M.bh)(n,i,o,a,l,c),ds=t.dynCall_iiijii=(n,i,o,a,l,c)=>(ds=t.dynCall_iiijii=M.ch)(n,i,o,a,l,c),cs=t.dynCall_iiiiiiiiijii=(n,i,o,a,l,c,h,g,v,_,x,E)=>(cs=t.dynCall_iiiiiiiiijii=M.dh)(n,i,o,a,l,c,h,g,v,_,x,E),fs=t.dynCall_iiiijjii=(n,i,o,a,l,c,h,g)=>(fs=t.dynCall_iiiijjii=M.eh)(n,i,o,a,l,c,h,g),ps=t.dynCall_iiiiiijjjii=(n,i,o,a,l,c,h,g,v,_,x)=>(ps=t.dynCall_iiiiiijjjii=M.fh)(n,i,o,a,l,c,h,g,v,_,x),ms=t.dynCall_iiijiii=(n,i,o,a,l,c,h)=>(ms=t.dynCall_iiijiii=M.gh)(n,i,o,a,l,c,h),hs=t.dynCall_iiiiiiiijjjfi=(n,i,o,a,l,c,h,g,v,_,x,E,D)=>(hs=t.dynCall_iiiiiiiijjjfi=M.hh)(n,i,o,a,l,c,h,g,v,_,x,E,D),gs=t.dynCall_iijiiii=(n,i,o,a,l,c,h)=>(gs=t.dynCall_iijiiii=M.ih)(n,i,o,a,l,c,h),ys=t.dynCall_iijjjii=(n,i,o,a,l,c,h)=>(ys=t.dynCall_iijjjii=M.jh)(n,i,o,a,l,c,h),bs=t.dynCall_iiji=(n,i,o,a)=>(bs=t.dynCall_iiji=M.kh)(n,i,o,a),vs=t.dynCall_iiif=(n,i,o,a)=>(vs=t.dynCall_iiif=M.lh)(n,i,o,a),ws=t.dynCall_vidi=(n,i,o,a)=>(ws=t.dynCall_vidi=M.mh)(n,i,o,a),_s=t.dynCall_vjiii=(n,i,o,a,l)=>(_s=t.dynCall_vjiii=M.nh)(n,i,o,a,l),$s=t.dynCall_diiii=(n,i,o,a,l)=>($s=t.dynCall_diiii=M.oh)(n,i,o,a,l),Cs=t.dynCall_diiiii=(n,i,o,a,l,c)=>(Cs=t.dynCall_diiiii=M.ph)(n,i,o,a,l,c),Ss=t.dynCall_viiijjiiiiii=(n,i,o,a,l,c,h,g,v,_,x,E)=>(Ss=t.dynCall_viiijjiiiiii=M.qh)(n,i,o,a,l,c,h,g,v,_,x,E),xs=t.dynCall_viijjijjjjiii=(n,i,o,a,l,c,h,g,v,_,x,E,D)=>(xs=t.dynCall_viijjijjjjiii=M.rh)(n,i,o,a,l,c,h,g,v,_,x,E,D),Is=t.dynCall_iiiij=(n,i,o,a,l)=>(Is=t.dynCall_iiiij=M.sh)(n,i,o,a,l),As=t.dynCall_viiijii=(n,i,o,a,l,c,h)=>(As=t.dynCall_viiijii=M.th)(n,i,o,a,l,c,h),Ts=t.dynCall_viijiiiiiiiii=(n,i,o,a,l,c,h,g,v,_,x,E,D)=>(Ts=t.dynCall_viijiiiiiiiii=M.uh)(n,i,o,a,l,c,h,g,v,_,x,E,D),Es=t.dynCall_fiiii=(n,i,o,a,l)=>(Es=t.dynCall_fiiii=M.vh)(n,i,o,a,l),Ps=t.dynCall_jfi=(n,i,o)=>(Ps=t.dynCall_jfi=M.wh)(n,i,o),Os=t.dynCall_viiiiiiiiiiiiii=(n,i,o,a,l,c,h,g,v,_,x,E,D,A,j)=>(Os=t.dynCall_viiiiiiiiiiiiii=M.xh)(n,i,o,a,l,c,h,g,v,_,x,E,D,A,j),ks=t.dynCall_jiij=(n,i,o,a)=>(ks=t.dynCall_jiij=M.yh)(n,i,o,a),Rs=n=>(Rs=M.zh)(n),Ds=()=>(Ds=M.Ah)(),Bs=n=>(Bs=M.Bh)(n),Ms=()=>(Ms=M.Ch)();t.___start_em_js=1391667,t.___stop_em_js=1391828;function ef(n,i,o,a){var l=N();try{return _r(n,i,o,a)}catch(c){if(W(l),c!==c+0)throw c;V(1,0)}}function tf(n,i,o){var a=N();try{return qr(n,i,o)}catch(l){if(W(a),l!==l+0)throw l;V(1,0)}}function rf(n,i,o){var a=N();try{er(n,i,o)}catch(l){if(W(a),l!==l+0)throw l;V(1,0)}}function nf(n,i){var o=N();try{return Kr(n,i)}catch(a){if(W(o),a!==a+0)throw a;V(1,0)}}function of(n,i){var o=N();try{$r(n,i)}catch(a){if(W(o),a!==a+0)throw a;V(1,0)}}function af(n,i,o,a){var l=N();try{return Qr(n,i,o,a)}catch(c){if(W(l),c!==c+0)throw c;V(1,0)}}function sf(n){var i=N();try{Cr(n)}catch(o){if(W(i),o!==o+0)throw o;V(1,0)}}function uf(n,i,o,a,l,c,h){var g=N();try{return Yr(n,i,o,a,l,c,h)}catch(v){if(W(g),v!==v+0)throw v;V(1,0)}}function lf(n,i,o,a,l,c){var h=N();try{return Zr(n,i,o,a,l,c)}catch(g){if(W(h),g!==g+0)throw g;V(1,0)}}function df(n,i,o,a,l){var c=N();try{return Xr(n,i,o,a,l)}catch(h){if(W(c),h!==h+0)throw h;V(1,0)}}function cf(n,i,o,a){var l=N();try{Sr(n,i,o,a)}catch(c){if(W(l),c!==c+0)throw c;V(1,0)}}function ff(n,i,o,a,l){var c=N();try{xr(n,i,o,a,l)}catch(h){if(W(c),h!==h+0)throw h;V(1,0)}}function pf(n,i,o,a,l,c){var h=N();try{tr(n,i,o,a,l,c)}catch(g){if(W(h),g!==g+0)throw g;V(1,0)}}function mf(n,i,o,a,l,c,h){var g=N();try{Jr(n,i,o,a,l,c,h)}catch(v){if(W(g),v!==v+0)throw v;V(1,0)}}function hf(n,i,o,a,l,c,h,g,v,_,x,E){var D=N();try{tn(n,i,o,a,l,c,h,g,v,_,x,E)}catch(A){if(W(D),A!==A+0)throw A;V(1,0)}}function gf(n,i,o){var a=N();try{return nn(n,i,o)}catch(l){if(W(a),l!==l+0)throw l;V(1,0)}}function yf(n,i,o){var a=N();try{return Wn(n,i,o)}catch(l){if(W(a),l!==l+0)throw l;V(1,0)}}function bf(n,i,o){var a=N();try{return rr(n,i,o)}catch(l){if(W(a),l!==l+0)throw l;V(1,0)}}function vf(n,i,o){var a=N();try{return on(n,i,o)}catch(l){if(W(a),l!==l+0)throw l;return V(1,0),0n}}function wf(n,i,o,a,l,c,h,g,v){var _=N();try{b(n,i,o,a,l,c,h,g,v)}catch(x){if(W(_),x!==x+0)throw x;V(1,0)}}function _f(n){var i=N();try{return p(n)}catch(o){if(W(i),o!==o+0)throw o;V(1,0)}}function $f(n,i,o){var a=N();try{me(n,i,o)}catch(l){if(W(a),l!==l+0)throw l;V(1,0)}}function Cf(n,i,o,a,l){var c=N();try{en(n,i,o,a,l)}catch(h){if(W(c),h!==h+0)throw h;V(1,0)}}function Sf(n,i,o,a,l,c,h){var g=N();try{S(n,i,o,a,l,c,h)}catch(v){if(W(g),v!==v+0)throw v;V(1,0)}}function xf(n,i,o,a,l,c,h,g,v,_,x,E){var D=N();try{Oe(n,i,o,a,l,c,h,g,v,_,x,E)}catch(A){if(W(D),A!==A+0)throw A;V(1,0)}}function If(n,i,o,a,l,c,h,g,v,_,x,E){var D=N();try{Be(n,i,o,a,l,c,h,g,v,_,x,E)}catch(A){if(W(D),A!==A+0)throw A;V(1,0)}}function Af(n,i,o,a,l,c,h,g){var v=N();try{return F(n,i,o,a,l,c,h,g)}catch(_){if(W(v),_!==_+0)throw _;V(1,0)}}function Tf(n,i,o,a,l,c,h,g){var v=N();try{we(n,i,o,a,l,c,h,g)}catch(_){if(W(v),_!==_+0)throw _;V(1,0)}}function Ef(n,i,o,a,l,c,h,g,v,_,x,E){var D=N();try{return Z(n,i,o,a,l,c,h,g,v,_,x,E)}catch(A){if(W(D),A!==A+0)throw A;V(1,0)}}function Pf(n,i,o,a,l,c,h,g,v,_,x,E,D,A){var j=N();try{Pt(n,i,o,a,l,c,h,g,v,_,x,E,D,A)}catch(Y){if(W(j),Y!==Y+0)throw Y;V(1,0)}}function Of(n,i,o,a,l,c,h,g,v,_){var x=N();try{ee(n,i,o,a,l,c,h,g,v,_)}catch(E){if(W(x),E!==E+0)throw E;V(1,0)}}function kf(n,i,o,a,l,c,h,g,v,_,x){var E=N();try{return co(n,i,o,a,l,c,h,g,v,_,x)}catch(D){if(W(E),D!==D+0)throw D;V(1,0)}}function Rf(n,i,o,a,l,c,h,g,v){var _=N();try{return an(n,i,o,a,l,c,h,g,v)}catch(x){if(W(_),x!==x+0)throw x;V(1,0)}}function Df(n,i,o,a,l,c,h,g,v){var _=N();try{fo(n,i,o,a,l,c,h,g,v)}catch(x){if(W(_),x!==x+0)throw x;V(1,0)}}function Bf(n,i,o,a){var l=N();try{H(n,i,o,a)}catch(c){if(W(l),c!==c+0)throw c;V(1,0)}}function Mf(n,i){var o=N();try{return po(n,i)}catch(a){if(W(o),a!==a+0)throw a;V(1,0)}}function zf(n,i){var o=N();try{return B(n,i)}catch(a){if(W(o),a!==a+0)throw a;return V(1,0),0n}}function Uf(n,i){var o=N();try{return ho(n,i)}catch(a){if(W(o),a!==a+0)throw a;V(1,0)}}function jf(n,i,o,a){var l=N();try{yo(n,i,o,a)}catch(c){if(W(l),c!==c+0)throw c;V(1,0)}}function Vf(n,i,o,a,l,c,h){var g=N();try{As(n,i,o,a,l,c,h)}catch(v){if(W(g),v!==v+0)throw v;V(1,0)}}function Nf(n,i,o,a,l){var c=N();try{Jo(n,i,o,a,l)}catch(h){if(W(c),h!==h+0)throw h;V(1,0)}}function Wf(n,i,o,a,l,c,h,g,v,_){var x=N();try{return bo(n,i,o,a,l,c,h,g,v,_)}catch(E){if(W(x),E!==E+0)throw E;V(1,0)}}function Gf(n,i,o,a,l,c,h){var g=N();try{vo(n,i,o,a,l,c,h)}catch(v){if(W(g),v!==v+0)throw v;V(1,0)}}function Hf(n,i,o,a){var l=N();try{wo(n,i,o,a)}catch(c){if(W(l),c!==c+0)throw c;V(1,0)}}function Lf(n,i,o,a,l,c,h,g,v){var _=N();try{return ze(n,i,o,a,l,c,h,g,v)}catch(x){if(W(_),x!==x+0)throw x;V(1,0)}}function Ff(n,i,o,a,l,c,h){var g=N();try{_o(n,i,o,a,l,c,h)}catch(v){if(W(g),v!==v+0)throw v;V(1,0)}}function qf(n,i,o,a,l,c,h,g,v){var _=N();try{rn(n,i,o,a,l,c,h,g,v)}catch(x){if(W(_),x!==x+0)throw x;V(1,0)}}function Kf(n,i,o,a,l,c,h){var g=N();try{$o(n,i,o,a,l,c,h)}catch(v){if(W(g),v!==v+0)throw v;V(1,0)}}function Yf(n,i,o,a,l,c,h,g,v,_,x){var E=N();try{Co(n,i,o,a,l,c,h,g,v,_,x)}catch(D){if(W(E),D!==D+0)throw D;V(1,0)}}function Zf(n,i,o,a){var l=N();try{return xo(n,i,o,a)}catch(c){if(W(l),c!==c+0)throw c;return V(1,0),0n}}function Qf(n,i,o,a,l,c,h,g){var v=N();try{Io(n,i,o,a,l,c,h,g)}catch(_){if(W(v),_!==_+0)throw _;V(1,0)}}function Xf(n,i,o,a,l){var c=N();try{Ao(n,i,o,a,l)}catch(h){if(W(c),h!==h+0)throw h;V(1,0)}}function Jf(n,i,o,a){var l=N();try{Eo(n,i,o,a)}catch(c){if(W(l),c!==c+0)throw c;V(1,0)}}function ep(n,i,o,a,l,c,h,g,v,_,x,E,D,A,j,Y){var re=N();try{Po(n,i,o,a,l,c,h,g,v,_,x,E,D,A,j,Y)}catch(le){if(W(re),le!==le+0)throw le;V(1,0)}}function tp(n,i,o,a,l,c){var h=N();try{Oo(n,i,o,a,l,c)}catch(g){if(W(h),g!==g+0)throw g;V(1,0)}}function rp(n,i,o,a,l,c,h,g,v){var _=N();try{ko(n,i,o,a,l,c,h,g,v)}catch(x){if(W(_),x!==x+0)throw x;V(1,0)}}function np(n,i,o,a,l){var c=N();try{return Ro(n,i,o,a,l)}catch(h){if(W(c),h!==h+0)throw h;V(1,0)}}function ip(n,i,o,a,l,c,h,g,v,_,x,E,D,A){var j=N();try{return Do(n,i,o,a,l,c,h,g,v,_,x,E,D,A)}catch(Y){if(W(j),Y!==Y+0)throw Y;V(1,0)}}function op(n,i){var o=N();try{Bo(n,i)}catch(a){if(W(o),a!==a+0)throw a;V(1,0)}}function ap(n,i,o){var a=N();try{return Mo(n,i,o)}catch(l){if(W(a),l!==l+0)throw l;return V(1,0),0n}}function sp(n,i,o,a,l,c,h,g,v,_){var x=N();try{return zo(n,i,o,a,l,c,h,g,v,_)}catch(E){if(W(x),E!==E+0)throw E;V(1,0)}}function up(n,i,o,a,l,c,h,g,v,_,x,E,D,A){var j=N();try{Wo(n,i,o,a,l,c,h,g,v,_,x,E,D,A)}catch(Y){if(W(j),Y!==Y+0)throw Y;V(1,0)}}function lp(n,i,o,a,l){var c=N();try{Uo(n,i,o,a,l)}catch(h){if(W(c),h!==h+0)throw h;V(1,0)}}function dp(n,i,o,a,l,c,h){var g=N();try{jo(n,i,o,a,l,c,h)}catch(v){if(W(g),v!==v+0)throw v;V(1,0)}}function cp(n,i,o,a,l){var c=N();try{No(n,i,o,a,l)}catch(h){if(W(c),h!==h+0)throw h;V(1,0)}}function fp(n,i,o,a,l,c,h,g){var v=N();try{Vo(n,i,o,a,l,c,h,g)}catch(_){if(W(v),_!==_+0)throw _;V(1,0)}}function pp(n,i,o,a,l,c,h,g,v,_,x){var E=N();try{Go(n,i,o,a,l,c,h,g,v,_,x)}catch(D){if(W(E),D!==D+0)throw D;V(1,0)}}function mp(n,i,o,a,l,c,h,g,v,_,x,E,D,A,j,Y,re){var le=N();try{return Ho(n,i,o,a,l,c,h,g,v,_,x,E,D,A,j,Y,re)}catch(he){if(W(le),he!==he+0)throw he;V(1,0)}}function hp(n,i,o,a,l,c,h,g,v,_,x,E,D){var A=N();try{Lo(n,i,o,a,l,c,h,g,v,_,x,E,D)}catch(j){if(W(A),j!==j+0)throw j;V(1,0)}}function gp(n,i){var o=N();try{return pe(n,i)}catch(a){if(W(o),a!==a+0)throw a;V(1,0)}}function yp(n,i,o,a,l){var c=N();try{return Es(n,i,o,a,l)}catch(h){if(W(c),h!==h+0)throw h;V(1,0)}}function bp(n,i,o,a,l,c,h,g,v,_,x,E,D,A,j,Y,re,le,he,Re){var Ne=N();try{return Fo(n,i,o,a,l,c,h,g,v,_,x,E,D,A,j,Y,re,le,he,Re)}catch(qe){if(W(Ne),qe!==qe+0)throw qe;V(1,0)}}function vp(n,i,o,a,l,c,h,g,v,_){var x=N();try{qo(n,i,o,a,l,c,h,g,v,_)}catch(E){if(W(x),E!==E+0)throw E;V(1,0)}}function wp(n,i,o,a,l,c,h){var g=N();try{return Ko(n,i,o,a,l,c,h)}catch(v){if(W(g),v!==v+0)throw v;V(1,0)}}function _p(n,i,o,a,l,c,h,g,v,_,x){var E=N();try{Yo(n,i,o,a,l,c,h,g,v,_,x)}catch(D){if(W(E),D!==D+0)throw D;V(1,0)}}function $p(n,i,o,a,l,c){var h=N();try{return Zo(n,i,o,a,l,c)}catch(g){if(W(h),g!==g+0)throw g;V(1,0)}}function Cp(n,i,o,a,l,c){var h=N();try{Xo(n,i,o,a,l,c)}catch(g){if(W(h),g!==g+0)throw g;V(1,0)}}function Sp(n,i,o,a,l,c,h,g,v,_,x,E,D,A,j,Y,re,le){var he=N();try{ea(n,i,o,a,l,c,h,g,v,_,x,E,D,A,j,Y,re,le)}catch(Re){if(W(he),Re!==Re+0)throw Re;V(1,0)}}function xp(n,i,o,a,l,c,h,g,v,_,x,E,D,A,j,Y,re){var le=N();try{ta(n,i,o,a,l,c,h,g,v,_,x,E,D,A,j,Y,re)}catch(he){if(W(le),he!==he+0)throw he;V(1,0)}}function Ip(n,i,o,a,l,c,h,g,v,_,x,E,D,A,j,Y){var re=N();try{ra(n,i,o,a,l,c,h,g,v,_,x,E,D,A,j,Y)}catch(le){if(W(re),le!==le+0)throw le;V(1,0)}}function Ap(n,i,o,a,l,c,h,g,v,_,x,E,D,A,j){var Y=N();try{na(n,i,o,a,l,c,h,g,v,_,x,E,D,A,j)}catch(re){if(W(Y),re!==re+0)throw re;V(1,0)}}function Tp(n,i,o,a,l,c,h,g,v,_,x,E,D,A,j,Y,re,le,he,Re,Ne){var qe=N();try{ia(n,i,o,a,l,c,h,g,v,_,x,E,D,A,j,Y,re,le,he,Re,Ne)}catch(Ct){if(W(qe),Ct!==Ct+0)throw Ct;V(1,0)}}function Ep(n,i,o,a,l,c,h,g,v,_,x,E,D,A,j,Y,re,le,he){var Re=N();try{oa(n,i,o,a,l,c,h,g,v,_,x,E,D,A,j,Y,re,le,he)}catch(Ne){if(W(Re),Ne!==Ne+0)throw Ne;V(1,0)}}function Pp(n,i,o,a,l,c,h,g,v,_,x,E,D,A,j,Y,re){var le=N();try{aa(n,i,o,a,l,c,h,g,v,_,x,E,D,A,j,Y,re)}catch(he){if(W(le),he!==he+0)throw he;V(1,0)}}function Op(n,i,o,a,l,c,h,g,v,_,x,E,D,A,j,Y,re,le,he,Re){var Ne=N();try{sa(n,i,o,a,l,c,h,g,v,_,x,E,D,A,j,Y,re,le,he,Re)}catch(qe){if(W(Ne),qe!==qe+0)throw qe;V(1,0)}}function kp(n,i,o,a,l,c,h,g,v,_){var x=N();try{ua(n,i,o,a,l,c,h,g,v,_)}catch(E){if(W(x),E!==E+0)throw E;V(1,0)}}function Rp(n,i,o,a,l,c,h,g,v,_,x){var E=N();try{la(n,i,o,a,l,c,h,g,v,_,x)}catch(D){if(W(E),D!==D+0)throw D;V(1,0)}}function Dp(n,i,o,a,l,c,h,g,v,_,x,E,D,A,j){var Y=N();try{da(n,i,o,a,l,c,h,g,v,_,x,E,D,A,j)}catch(re){if(W(Y),re!==re+0)throw re;V(1,0)}}function Bp(n,i,o,a,l,c,h,g,v,_){var x=N();try{ca(n,i,o,a,l,c,h,g,v,_)}catch(E){if(W(x),E!==E+0)throw E;V(1,0)}}function Mp(n,i,o,a,l,c,h,g,v){var _=N();try{fa(n,i,o,a,l,c,h,g,v)}catch(x){if(W(_),x!==x+0)throw x;V(1,0)}}function zp(n,i,o,a,l,c,h){var g=N();try{return Qo(n,i,o,a,l,c,h)}catch(v){if(W(g),v!==v+0)throw v;V(1,0)}}function Up(n,i,o,a,l){var c=N();try{pa(n,i,o,a,l)}catch(h){if(W(c),h!==h+0)throw h;V(1,0)}}function jp(n,i,o){var a=N();try{return Ps(n,i,o)}catch(l){if(W(a),l!==l+0)throw l;return V(1,0),0n}}function Vp(n,i,o,a,l,c,h,g,v,_,x,E,D){var A=N();try{ha(n,i,o,a,l,c,h,g,v,_,x,E,D)}catch(j){if(W(A),j!==j+0)throw j;V(1,0)}}function Np(n,i,o,a,l,c,h){var g=N();try{return ga(n,i,o,a,l,c,h)}catch(v){if(W(g),v!==v+0)throw v;V(1,0)}}function Wp(n,i,o,a,l,c){var h=N();try{return ya(n,i,o,a,l,c)}catch(g){if(W(h),g!==g+0)throw g;V(1,0)}}function Gp(n,i,o,a,l,c,h,g,v,_,x,E,D){var A=N();try{ba(n,i,o,a,l,c,h,g,v,_,x,E,D)}catch(j){if(W(A),j!==j+0)throw j;V(1,0)}}function Hp(n,i,o,a,l,c){var h=N();try{ma(n,i,o,a,l,c)}catch(g){if(W(h),g!==g+0)throw g;V(1,0)}}function Lp(n,i,o,a,l,c,h,g,v,_,x){var E=N();try{va(n,i,o,a,l,c,h,g,v,_,x)}catch(D){if(W(E),D!==D+0)throw D;V(1,0)}}function Fp(n,i,o,a,l,c,h,g){var v=N();try{wa(n,i,o,a,l,c,h,g)}catch(_){if(W(v),_!==_+0)throw _;V(1,0)}}function qp(n,i,o,a,l,c,h,g){var v=N();try{_a(n,i,o,a,l,c,h,g)}catch(_){if(W(v),_!==_+0)throw _;V(1,0)}}function Kp(n,i,o,a){var l=N();try{return $a(n,i,o,a)}catch(c){if(W(l),c!==c+0)throw c;V(1,0)}}function Yp(n,i,o,a,l,c,h,g,v,_){var x=N();try{Ca(n,i,o,a,l,c,h,g,v,_)}catch(E){if(W(x),E!==E+0)throw E;V(1,0)}}function Zp(n,i,o,a,l,c,h,g,v){var _=N();try{Sa(n,i,o,a,l,c,h,g,v)}catch(x){if(W(_),x!==x+0)throw x;V(1,0)}}function Qp(n,i,o,a,l,c,h,g,v){var _=N();try{xa(n,i,o,a,l,c,h,g,v)}catch(x){if(W(_),x!==x+0)throw x;V(1,0)}}function Xp(n,i,o,a,l,c,h,g,v,_){var x=N();try{Ia(n,i,o,a,l,c,h,g,v,_)}catch(E){if(W(x),E!==E+0)throw E;V(1,0)}}function Jp(n,i,o,a,l,c){var h=N();try{Aa(n,i,o,a,l,c)}catch(g){if(W(h),g!==g+0)throw g;V(1,0)}}function em(n,i,o,a,l,c,h){var g=N();try{Ta(n,i,o,a,l,c,h)}catch(v){if(W(g),v!==v+0)throw v;V(1,0)}}function tm(n,i,o,a,l,c,h,g,v,_,x,E){var D=N();try{Ea(n,i,o,a,l,c,h,g,v,_,x,E)}catch(A){if(W(D),A!==A+0)throw A;V(1,0)}}function rm(n,i,o,a,l,c,h,g){var v=N();try{return Pa(n,i,o,a,l,c,h,g)}catch(_){if(W(v),_!==_+0)throw _;V(1,0)}}function nm(n,i,o,a,l,c,h,g,v,_,x,E,D,A,j){var Y=N();try{Os(n,i,o,a,l,c,h,g,v,_,x,E,D,A,j)}catch(re){if(W(Y),re!==re+0)throw re;V(1,0)}}function im(n,i,o,a,l,c,h,g,v,_,x,E,D,A){var j=N();try{Oa(n,i,o,a,l,c,h,g,v,_,x,E,D,A)}catch(Y){if(W(j),Y!==Y+0)throw Y;V(1,0)}}function om(n,i,o,a,l,c,h,g,v,_,x,E,D,A,j){var Y=N();try{ka(n,i,o,a,l,c,h,g,v,_,x,E,D,A,j)}catch(re){if(W(Y),re!==re+0)throw re;V(1,0)}}function am(n,i,o){var a=N();try{Ra(n,i,o)}catch(l){if(W(a),l!==l+0)throw l;V(1,0)}}function sm(n,i,o,a){var l=N();try{return Ba(n,i,o,a)}catch(c){if(W(l),c!==c+0)throw c;V(1,0)}}function um(n,i,o,a){var l=N();try{return Ma(n,i,o,a)}catch(c){if(W(l),c!==c+0)throw c;V(1,0)}}function lm(n,i,o,a,l,c,h,g,v,_){var x=N();try{za(n,i,o,a,l,c,h,g,v,_)}catch(E){if(W(x),E!==E+0)throw E;V(1,0)}}function dm(n,i,o,a,l,c,h,g,v,_,x,E,D,A,j,Y,re,le,he,Re,Ne,qe,Ct,_i,$i,Ci){var lh=N();try{Ua(n,i,o,a,l,c,h,g,v,_,x,E,D,A,j,Y,re,le,he,Re,Ne,qe,Ct,_i,$i,Ci)}catch(Si){if(W(lh),Si!==Si+0)throw Si;V(1,0)}}function cm(n,i,o,a,l,c){var h=N();try{ja(n,i,o,a,l,c)}catch(g){if(W(h),g!==g+0)throw g;V(1,0)}}function fm(n,i,o,a,l,c,h,g,v,_,x,E,D){var A=N();try{return Va(n,i,o,a,l,c,h,g,v,_,x,E,D)}catch(j){if(W(A),j!==j+0)throw j;V(1,0)}}function pm(n,i,o,a,l,c,h,g,v,_,x,E,D){var A=N();try{Na(n,i,o,a,l,c,h,g,v,_,x,E,D)}catch(j){if(W(A),j!==j+0)throw j;V(1,0)}}function mm(n,i,o,a,l,c,h,g,v,_,x,E,D,A,j,Y,re,le,he,Re,Ne){var qe=N();try{Wa(n,i,o,a,l,c,h,g,v,_,x,E,D,A,j,Y,re,le,he,Re,Ne)}catch(Ct){if(W(qe),Ct!==Ct+0)throw Ct;V(1,0)}}function hm(n,i,o,a,l,c,h,g,v,_,x,E,D){var A=N();try{Ga(n,i,o,a,l,c,h,g,v,_,x,E,D)}catch(j){if(W(A),j!==j+0)throw j;V(1,0)}}function gm(n,i,o,a,l,c,h,g,v,_,x,E,D,A){var j=N();try{Ha(n,i,o,a,l,c,h,g,v,_,x,E,D,A)}catch(Y){if(W(j),Y!==Y+0)throw Y;V(1,0)}}function ym(n,i,o,a,l,c,h,g,v,_,x,E,D,A,j,Y,re,le,he,Re){var Ne=N();try{Fa(n,i,o,a,l,c,h,g,v,_,x,E,D,A,j,Y,re,le,he,Re)}catch(qe){if(W(Ne),qe!==qe+0)throw qe;V(1,0)}}function bm(n,i,o,a,l,c,h,g,v,_,x,E,D,A,j,Y,re){var le=N();try{Ka(n,i,o,a,l,c,h,g,v,_,x,E,D,A,j,Y,re)}catch(he){if(W(le),he!==he+0)throw he;V(1,0)}}function vm(n,i,o,a,l,c,h,g,v,_,x,E,D,A,j,Y,re,le,he){var Re=N();try{La(n,i,o,a,l,c,h,g,v,_,x,E,D,A,j,Y,re,le,he)}catch(Ne){if(W(Re),Ne!==Ne+0)throw Ne;V(1,0)}}function wm(n,i,o,a,l,c,h,g){var v=N();try{Ya(n,i,o,a,l,c,h,g)}catch(_){if(W(v),_!==_+0)throw _;V(1,0)}}function _m(n,i,o,a,l,c,h,g,v,_,x){var E=N();try{Qa(n,i,o,a,l,c,h,g,v,_,x)}catch(D){if(W(E),D!==D+0)throw D;V(1,0)}}function $m(n,i,o,a,l,c,h,g,v,_,x){var E=N();try{return Xa(n,i,o,a,l,c,h,g,v,_,x)}catch(D){if(W(E),D!==D+0)throw D;V(1,0)}}function Cm(n,i,o,a,l,c,h,g,v,_,x,E,D,A,j,Y,re,le,he,Re){var Ne=N();try{return Ja(n,i,o,a,l,c,h,g,v,_,x,E,D,A,j,Y,re,le,he,Re)}catch(qe){if(W(Ne),qe!==qe+0)throw qe;V(1,0)}}function Sm(n,i,o,a,l){var c=N();try{es(n,i,o,a,l)}catch(h){if(W(c),h!==h+0)throw h;V(1,0)}}function xm(n,i,o,a,l,c,h,g,v,_,x,E){var D=N();try{So(n,i,o,a,l,c,h,g,v,_,x,E)}catch(A){if(W(D),A!==A+0)throw A;V(1,0)}}function Im(n,i,o,a,l,c,h,g,v,_){var x=N();try{ts(n,i,o,a,l,c,h,g,v,_)}catch(E){if(W(x),E!==E+0)throw E;V(1,0)}}function Am(n,i,o,a,l){var c=N();try{rs(n,i,o,a,l)}catch(h){if(W(c),h!==h+0)throw h;V(1,0)}}function Tm(n,i,o,a,l,c,h,g,v,_,x,E,D){var A=N();try{Ts(n,i,o,a,l,c,h,g,v,_,x,E,D)}catch(j){if(W(A),j!==j+0)throw j;V(1,0)}}function Em(n,i,o,a,l){var c=N();try{return ns(n,i,o,a,l)}catch(h){if(W(c),h!==h+0)throw h;V(1,0)}}function Pm(n,i,o,a){var l=N();try{return ks(n,i,o,a)}catch(c){if(W(l),c!==c+0)throw c;return V(1,0),0n}}function Om(n,i,o,a,l,c,h){var g=N();try{is(n,i,o,a,l,c,h)}catch(v){if(W(g),v!==v+0)throw v;V(1,0)}}function km(n,i,o,a,l,c){var h=N();try{return os(n,i,o,a,l,c)}catch(g){if(W(h),g!==g+0)throw g;V(1,0)}}function Rm(n,i,o,a,l,c){var h=N();try{return as(n,i,o,a,l,c)}catch(g){if(W(h),g!==g+0)throw g;V(1,0)}}function Dm(n,i,o,a,l,c,h,g,v){var _=N();try{ss(n,i,o,a,l,c,h,g,v)}catch(x){if(W(_),x!==x+0)throw x;V(1,0)}}function Bm(n,i,o,a){var l=N();try{Da(n,i,o,a)}catch(c){if(W(l),c!==c+0)throw c;V(1,0)}}function Mm(n,i,o,a,l,c,h,g){var v=N();try{return us(n,i,o,a,l,c,h,g)}catch(_){if(W(v),_!==_+0)throw _;V(1,0)}}function zm(n,i,o,a,l,c){var h=N();try{return ls(n,i,o,a,l,c)}catch(g){if(W(h),g!==g+0)throw g;V(1,0)}}function Um(n,i,o,a,l,c){var h=N();try{return ds(n,i,o,a,l,c)}catch(g){if(W(h),g!==g+0)throw g;V(1,0)}}function jm(n,i,o,a,l,c,h,g,v,_,x,E){var D=N();try{return cs(n,i,o,a,l,c,h,g,v,_,x,E)}catch(A){if(W(D),A!==A+0)throw A;V(1,0)}}function Vm(n,i,o,a,l,c,h,g){var v=N();try{return fs(n,i,o,a,l,c,h,g)}catch(_){if(W(v),_!==_+0)throw _;V(1,0)}}function Nm(n,i,o,a,l,c,h,g,v,_,x){var E=N();try{return ps(n,i,o,a,l,c,h,g,v,_,x)}catch(D){if(W(E),D!==D+0)throw D;V(1,0)}}function Wm(n,i,o,a,l,c,h){var g=N();try{return ms(n,i,o,a,l,c,h)}catch(v){if(W(g),v!==v+0)throw v;V(1,0)}}function Gm(n,i,o,a,l,c,h,g,v,_,x,E,D){var A=N();try{return hs(n,i,o,a,l,c,h,g,v,_,x,E,D)}catch(j){if(W(A),j!==j+0)throw j;V(1,0)}}function Hm(n,i,o,a,l,c,h){var g=N();try{return gs(n,i,o,a,l,c,h)}catch(v){if(W(g),v!==v+0)throw v;V(1,0)}}function Lm(n,i,o,a,l,c,h){var g=N();try{return ys(n,i,o,a,l,c,h)}catch(v){if(W(g),v!==v+0)throw v;V(1,0)}}function Fm(n,i,o,a){var l=N();try{return bs(n,i,o,a)}catch(c){if(W(l),c!==c+0)throw c;V(1,0)}}function qm(n,i,o,a){var l=N();try{ws(n,i,o,a)}catch(c){if(W(l),c!==c+0)throw c;V(1,0)}}function Km(n,i,o,a){var l=N();try{return vs(n,i,o,a)}catch(c){if(W(l),c!==c+0)throw c;V(1,0)}}function Ym(n,i,o,a,l){var c=N();try{_s(n,i,o,a,l)}catch(h){if(W(c),h!==h+0)throw h;V(1,0)}}function Zm(n,i,o,a,l){var c=N();try{return $s(n,i,o,a,l)}catch(h){if(W(c),h!==h+0)throw h;V(1,0)}}function Qm(n,i,o,a,l,c){var h=N();try{return Cs(n,i,o,a,l,c)}catch(g){if(W(h),g!==g+0)throw g;V(1,0)}}function Xm(n,i,o,a,l,c,h,g,v,_,x,E){var D=N();try{Ss(n,i,o,a,l,c,h,g,v,_,x,E)}catch(A){if(W(D),A!==A+0)throw A;V(1,0)}}function Jm(n,i,o,a,l,c,h,g,v,_,x,E,D){var A=N();try{xs(n,i,o,a,l,c,h,g,v,_,x,E,D)}catch(j){if(W(A),j!==j+0)throw j;V(1,0)}}function eh(n,i,o,a,l,c,h,g,v,_,x,E){var D=N();try{To(n,i,o,a,l,c,h,g,v,_,x,E)}catch(A){if(W(D),A!==A+0)throw A;V(1,0)}}function th(n,i,o,a,l){var c=N();try{return Is(n,i,o,a,l)}catch(h){if(W(c),h!==h+0)throw h;V(1,0)}}function rh(n){var i=N();try{return de(n)}catch(o){if(W(i),o!==o+0)throw o;return V(1,0),0n}}function nh(n,i,o,a,l,c){var h=N();try{return ce(n,i,o,a,l,c)}catch(g){if(W(h),g!==g+0)throw g;V(1,0)}}function ih(n,i,o,a,l,c){var h=N();try{return Za(n,i,o,a,l,c)}catch(g){if(W(h),g!==g+0)throw g;V(1,0)}}function oh(n,i,o,a,l,c,h,g,v,_,x,E,D,A,j,Y){var re=N();try{qa(n,i,o,a,l,c,h,g,v,_,x,E,D,A,j,Y)}catch(le){if(W(re),le!==le+0)throw le;V(1,0)}}function ah(n,i,o){var a=N();try{return mo(n,i,o)}catch(l){if(W(a),l!==l+0)throw l;V(1,0)}}function sh(n,i,o){var a=N();try{return go(n,i,o)}catch(l){if(W(a),l!==l+0)throw l;V(1,0)}}function uh(){var n=M;n=Object.assign({},n);var i=a=>()=>a()>>>0,o=a=>l=>a(l)>>>0;return n.de=i(n.de),n.ee=o(n.ee),n.ge=o(n.ge),n.ke=i(n.ke),n.me=o(n.me),n}t.stackAlloc=zn,t.stackSave=N,t.stackRestore=W,t.UTF8ToString=Xe,t.stringToUTF8=(n,i,o)=>wt(n,J,i,o),t.lengthBytesUTF8=dr;var Gn;De=function n(){Gn||zs(),Gn||(De=n)};function zs(){if(!(0<Ie)){if(t.preRun)for(typeof t.preRun=="function"&&(t.preRun=[t.preRun]);t.preRun.length;){var n=t.preRun.shift();Me.unshift(n)}for(;0<Me.length;)Me.shift()(t);if(!(0<Ie||Gn||(Gn=!0,t.calledRun=!0,U))){for(;0<xe.length;)xe.shift()(t);for(u(t);0<_e.length;)_e.shift()(t)}}}return zs(),r.ready}})();typeof Vs=="object"&&typeof Ti=="object"?Ti.exports=js:typeof define=="function"&&define.amd&&define([],()=>js)});var Ws=sn(()=>{});var Gs=sn(()=>{});var Hs={};Hn(Hs,{cpus:()=>yh});var yh,Ls=oe(()=>{yh=void 0});var Ks=sn((qs,Ei)=>{"use strict";var Fs=(()=>{var e=typeof document<"u"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename<"u"&&(e=e||__filename),function(r={}){function t(){return Ce.buffer!=_e.buffer&&te(),_e}function u(){return Ce.buffer!=_e.buffer&&te(),Ie}function s(){return Ce.buffer!=_e.buffer&&te(),Pe}function f(){return Ce.buffer!=_e.buffer&&te(),De}function m(){return Ce.buffer!=_e.buffer&&te(),Ye}var d=r,y,w;d.ready=new Promise((p,b)=>{y=p,w=b}),d.jsepInit=(p,b,S,B,H,Z,ee,pe)=>{d.Qb=p,d.wb=b,d.yb=S,d.jb=B,d.xb=H,d.Ea=Z,d.zb=ee,d.Ab=pe,b=(ce,de,me)=>(...Oe)=>{let Be=bt,F=de?.();Oe=ce(...Oe);let we=de?.();return F!==we&&(ce=we,me(F),de=me=null),bt!=Be?N():Oe},S=ce=>async(...de)=>{try{if(d.bb)throw Error("Session already started");let me=d.bb={Fb:de[0],errors:[]},Oe=await ce(...de);if(d.bb!==me)throw Error("Session mismatch");p.flush();let Be=me.errors;if(0<Be.length){let F=await Promise.all(Be);if(F=F.filter(we=>we),0<F.length)throw Error(F.join(`\n`))}return Oe}finally{d.bb=null}},d._OrtRun=S(b(d._OrtRun,()=>d._OrtRun,ce=>d._OrtRun=ce)),d._OrtRunWithBinding=S(b(d._OrtRunWithBinding,()=>d._OrtRunWithBinding,ce=>d._OrtRunWithBinding=ce)),d._OrtBindInput=b(d._OrtBindInput,()=>d._OrtBindInput,ce=>d._OrtBindInput=ce),d.jsepRegisterBuffer=(ce,de,me,Oe)=>p.registerBuffer(ce,de,me,Oe),d.jsepUnregisterBuffers=ce=>{p.unregisterBuffers(ce)},d.jsepGetBuffer=ce=>p.getBuffer(ce),d.jsepCreateDownloader=(ce,de,me)=>p.createDownloader(ce,de,me)};var C=Object.assign({},d),$="./this.program",T=(p,b)=>{throw b},P=typeof window=="object",I=typeof importScripts=="function",O=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",R=d.ENVIRONMENT_IS_PTHREAD||!1,z="";function k(p){return d.locateFile?d.locateFile(p,z):z+p}var G,U,q;if(O){var K=(Fn(),nr(Ln)),J=(Ai(),nr(Ii));z=I?J.dirname(z)+"/":__dirname+"/",G=(b,S)=>(b=b.startsWith("file://")?new URL(b):J.normalize(b),K.readFileSync(b,S?void 0:"utf8")),q=b=>(b=G(b,!0),b.buffer||(b=new Uint8Array(b)),b),U=(b,S,B,H=!0)=>{b=b.startsWith("file://")?new URL(b):J.normalize(b),K.readFile(b,H?void 0:"utf8",(Z,ee)=>{Z?B(Z):S(H?ee.buffer:ee)})},!d.thisProgram&&1<process.argv.length&&($=process.argv[1].replace(/\\\\/g,"/")),process.argv.slice(2),T=(b,S)=>{throw process.exitCode=b,S},d.inspect=()=>"[Emscripten Module object]";let p;try{p=Ws()}catch(b){throw console.error(\'The "worker_threads" module is not supported in this node.js build - perhaps a newer version is needed?\'),b}global.Worker=p.Worker}else(P||I)&&(I?z=self.location.href:typeof document<"u"&&document.currentScript&&(z=document.currentScript.src),typeof e<"u"&&e&&(z=e),z.indexOf("blob:")!==0?z=z.substr(0,z.replace(/[?#].*/,"").lastIndexOf("/")+1):z="",O||(G=p=>{var b=new XMLHttpRequest;return b.open("GET",p,!1),b.send(null),b.responseText},I&&(q=p=>{var b=new XMLHttpRequest;return b.open("GET",p,!1),b.responseType="arraybuffer",b.send(null),new Uint8Array(b.response)}),U=(p,b,S)=>{var B=new XMLHttpRequest;B.open("GET",p,!0),B.responseType="arraybuffer",B.onload=()=>{B.status==200||B.status==0&&B.response?b(B.response):S()},B.onerror=S,B.send(null)}));O&&typeof performance>"u"&&(global.performance=Gs().performance);var ie=console.log.bind(console),ge=console.error.bind(console);O&&(ie=(...p)=>K.writeSync(1,p.join(" ")+`\n`),ge=(...p)=>K.writeSync(2,p.join(" ")+`\n`));var L=d.print||ie,ue=d.printErr||ge;Object.assign(d,C),C=null,d.thisProgram&&($=d.thisProgram),d.quit&&(T=d.quit);var je;d.wasmBinary&&(je=d.wasmBinary);var Ve=d.noExitRuntime||!0;typeof WebAssembly!="object"&&rt("no native wasm support detected");var Ce,ae,ye,Me=!1,xe,_e,Ie,Pe,De,Ye;function te(){var p=Ce.buffer;d.HEAP8=_e=new Int8Array(p),d.HEAP16=new Int16Array(p),d.HEAP32=Pe=new Int32Array(p),d.HEAPU8=Ie=new Uint8Array(p),d.HEAPU16=new Uint16Array(p),d.HEAPU32=De=new Uint32Array(p),d.HEAPF32=new Float32Array(p),d.HEAPF64=Ye=new Float64Array(p)}var fe=d.INITIAL_MEMORY||16777216;if(5242880<=fe||rt("INITIAL_MEMORY should be larger than STACK_SIZE, was "+fe+"! (STACK_SIZE=5242880)"),R)Ce=d.wasmMemory;else if(d.wasmMemory)Ce=d.wasmMemory;else if(Ce=new WebAssembly.Memory({initial:fe/65536,maximum:65536,shared:!0}),!(Ce.buffer instanceof SharedArrayBuffer))throw ue("requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag"),O&&ue("(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and/or recent version)"),Error("bad memory");te(),fe=Ce.buffer.byteLength;var Se=[],st=[],tt=[],lt=0;function It(){return Ve||0<lt}var Fe=0,Qe=null,pt=null;function At(){Fe++,d.monitorRunDependencies&&d.monitorRunDependencies(Fe)}function Vt(){if(Fe--,d.monitorRunDependencies&&d.monitorRunDependencies(Fe),Fe==0&&(Qe!==null&&(clearInterval(Qe),Qe=null),pt)){var p=pt;pt=null,p()}}function rt(p){throw d.onAbort&&d.onAbort(p),p="Aborted("+p+")",ue(p),Me=!0,xe=1,p=new WebAssembly.RuntimeError(p+". Build with -sASSERTIONS for more info."),w(p),p}function lr(p){return p.startsWith("data:application/octet-stream;base64,")}var vt;vt="ort-wasm-simd-threaded.wasm",lr(vt)||(vt=k(vt));function Pr(p){if(p==vt&&je)return new Uint8Array(je);if(q)return q(p);throw"both async and sync fetching of the wasm failed"}function hn(p){if(!je&&(P||I)){if(typeof fetch=="function"&&!p.startsWith("file://"))return fetch(p,{credentials:"same-origin"}).then(b=>{if(!b.ok)throw"failed to load wasm binary file at \'"+p+"\'";return b.arrayBuffer()}).catch(()=>Pr(p));if(U)return new Promise((b,S)=>{U(p,B=>b(new Uint8Array(B)),S)})}return Promise.resolve().then(()=>Pr(p))}function Xe(p,b,S){return hn(p).then(B=>WebAssembly.instantiate(B,b)).then(B=>B).then(S,B=>{ue("failed to asynchronously prepare wasm: "+B),rt(B)})}function dr(p,b){var S=vt;return je||typeof WebAssembly.instantiateStreaming!="function"||lr(S)||S.startsWith("file://")||O||typeof fetch!="function"?Xe(S,p,b):fetch(S,{credentials:"same-origin"}).then(B=>WebAssembly.instantiateStreaming(B,p).then(b,function(H){return ue("wasm streaming compile failed: "+H),ue("falling back to ArrayBuffer instantiation"),Xe(S,p,b)}))}var wt,cr={906828:p=>{d.Ea("Abs",p,void 0)},906879:p=>{d.Ea("Neg",p,void 0)},906930:p=>{d.Ea("Floor",p,void 0)},906983:p=>{d.Ea("Ceil",p,void 0)},907035:p=>{d.Ea("Reciprocal",p,void 0)},907093:p=>{d.Ea("Sqrt",p,void 0)},907145:p=>{d.Ea("Exp",p,void 0)},907196:p=>{d.Ea("Erf",p,void 0)},907247:p=>{d.Ea("Sigmoid",p,void 0)},907302:p=>{d.Ea("Log",p,void 0)},907353:p=>{d.Ea("Sin",p,void 0)},907404:p=>{d.Ea("Cos",p,void 0)},907455:p=>{d.Ea("Tan",p,void 0)},907506:p=>{d.Ea("Asin",p,void 0)},907558:p=>{d.Ea("Acos",p,void 0)},907610:p=>{d.Ea("Atan",p,void 0)},907662:p=>{d.Ea("Sinh",p,void 0)},907714:p=>{d.Ea("Cosh",p,void 0)},907766:p=>{d.Ea("Asinh",p,void 0)},907819:p=>{d.Ea("Acosh",p,void 0)},907872:p=>{d.Ea("Atanh",p,void 0)},907925:p=>{d.Ea("Tanh",p,void 0)},907977:p=>{d.Ea("Not",p,void 0)},908028:(p,b,S)=>{d.Ea("ClipV10",p,{min:b,max:S})},908100:p=>{d.Ea("Clip",p,void 0)},908152:(p,b)=>{d.Ea("Elu",p,{alpha:b})},908210:p=>{d.Ea("Relu",p,void 0)},908262:(p,b)=>{d.Ea("LeakyRelu",p,{alpha:b})},908326:(p,b)=>{d.Ea("ThresholdedRelu",p,{alpha:b})},908396:(p,b)=>{d.Ea("Cast",p,{to:b})},908454:p=>{d.Ea("Add",p,void 0)},908505:p=>{d.Ea("Sub",p,void 0)},908556:p=>{d.Ea("Mul",p,void 0)},908607:p=>{d.Ea("Div",p,void 0)},908658:p=>{d.Ea("Pow",p,void 0)},908709:p=>{d.Ea("Equal",p,void 0)},908762:p=>{d.Ea("Greater",p,void 0)},908817:p=>{d.Ea("GreaterOrEqual",p,void 0)},908879:p=>{d.Ea("Less",p,void 0)},908931:p=>{d.Ea("LessOrEqual",p,void 0)},908990:(p,b,S,B,H)=>{d.Ea("ReduceMean",p,{keepDims:!!b,noopWithEmptyAxes:!!S,axes:B?Array.from(s().subarray(H>>>0,H+B>>>0)):[]})},909154:(p,b,S,B,H)=>{d.Ea("ReduceMax",p,{keepDims:!!b,noopWithEmptyAxes:!!S,axes:B?Array.from(s().subarray(H>>>0,H+B>>>0)):[]})},909317:(p,b,S,B,H)=>{d.Ea("ReduceMin",p,{keepDims:!!b,noopWithEmptyAxes:!!S,axes:B?Array.from(s().subarray(H>>>0,H+B>>>0)):[]})},909480:(p,b,S,B,H)=>{d.Ea("ReduceProd",p,{keepDims:!!b,noopWithEmptyAxes:!!S,axes:B?Array.from(s().subarray(H>>>0,H+B>>>0)):[]})},909644:(p,b,S,B,H)=>{d.Ea("ReduceSum",p,{keepDims:!!b,noopWithEmptyAxes:!!S,axes:B?Array.from(s().subarray(H>>>0,H+B>>>0)):[]})},909807:(p,b,S,B,H)=>{d.Ea("ReduceL1",p,{keepDims:!!b,noopWithEmptyAxes:!!S,axes:B?Array.from(s().subarray(H>>>0,H+B>>>0)):[]})},909969:(p,b,S,B,H)=>{d.Ea("ReduceL2",p,{keepDims:!!b,noopWithEmptyAxes:!!S,axes:B?Array.from(s().subarray(H>>>0,H+B>>>0)):[]})},910131:(p,b,S,B,H)=>{d.Ea("ReduceLogSum",p,{keepDims:!!b,noopWithEmptyAxes:!!S,axes:B?Array.from(s().subarray(H>>>0,H+B>>>0)):[]})},910297:(p,b,S,B,H)=>{d.Ea("ReduceSumSquare",p,{keepDims:!!b,noopWithEmptyAxes:!!S,axes:B?Array.from(s().subarray(H>>>0,H+B>>>0)):[]})},910466:(p,b,S,B,H)=>{d.Ea("ReduceLogSumExp",p,{keepDims:!!b,noopWithEmptyAxes:!!S,axes:B?Array.from(s().subarray(H>>>0,H+B>>>0)):[]})},910635:p=>{d.Ea("Where",p,void 0)},910688:(p,b,S)=>{d.Ea("Transpose",p,{perm:b?Array.from(s().subarray(S>>>0,S+b>>>0)):[]})},910801:(p,b,S,B,H,Z,ee,pe,ce,de)=>{d.Ea("Conv",p,{format:ce?"NHWC":"NCHW",auto_pad:b,dilations:[S],group:B,kernel_shape:[H],pads:[Z,ee],strides:[pe],w_is_const:()=>!!t()[de>>>0]})},911029:(p,b,S,B,H,Z,ee,pe,ce,de,me,Oe,Be,F,we)=>{d.Ea("Conv",p,{format:F?"NHWC":"NCHW",auto_pad:b,dilations:[S,B],group:H,kernel_shape:[Z,ee],pads:[pe,ce,de,me],strides:[Oe,Be],w_is_const:()=>!!t()[we>>>0]})},911288:(p,b,S,B,H,Z,ee,pe,ce,de)=>{d.Ea("Conv",p,{format:ce?"NHWC":"NCHW",auto_pad:b,dilations:[S],group:B,kernel_shape:[H],pads:[Z,ee],strides:[pe],w_is_const:()=>!!t()[de>>>0]})},911516:(p,b,S,B,H,Z,ee,pe,ce,de,me,Oe,Be,F,we)=>{d.Ea("Conv",p,{format:F?"NHWC":"NCHW",auto_pad:b,dilations:[S,B],group:H,kernel_shape:[Z,ee],pads:[pe,ce,de,me],strides:[Oe,Be],w_is_const:()=>!!t()[we>>>0]})},911775:(p,b,S,B,H,Z,ee,pe,ce,de,me,Oe,Be,F)=>{d.Ea("ConvTranspose",p,{format:ce?"NHWC":"NCHW",autoPad:b,dilations:[S],group:B,kernel_shape:[H],pads:[Z,ee],strides:[pe],wIsConst:()=>!!t()[de>>>0],outputPadding:me?Array.from(s().subarray(Oe>>>0,Oe+me>>>0)):[],outputShape:Be?Array.from(s().subarray(F>>>0,F+Be>>>0)):[]})},912155:(p,b,S,B,H,Z,ee,pe,ce,de,me,Oe,Be)=>{d.Ea("ConvTranspose",p,{format:pe?"NHWC":"NCHW",autoPad:b,dilations:Array.from(s().subarray(S>>>0,S+2>>>0)),group:B,kernelShape:Array.from(s().subarray(H>>>0,H+2>>>0)),pads:Array.from(s().subarray(Z>>>0,Z+4>>>0)),strides:Array.from(s().subarray(ee>>>0,ee+2>>>0)),wIsConst:()=>!!t()[ce>>>0],outputPadding:0<de?Array.from(s().subarray(me>>>0,me+de>>>0)):[],outputShape:0<Oe?Array.from(s().subarray(Be>>>0,Be+Oe>>>0)):[]})},912678:(p,b,S,B,H,Z,ee,pe,ce,de,me,Oe,Be,F)=>{d.Ea("ConvTranspose",p,{format:ce?"NHWC":"NCHW",autoPad:b,dilations:[S],group:B,kernel_shape:[H],pads:[Z,ee],strides:[pe],wIsConst:()=>!!t()[de>>>0],outputPadding:me?Array.from(s().subarray(Oe>>>0,Oe+me>>>0)):[],outputShape:Be?Array.from(s().subarray(F>>>0,F+Be>>>0)):[]})},913058:(p,b,S,B,H,Z,ee,pe,ce,de,me,Oe,Be)=>{d.Ea("ConvTranspose",p,{format:pe?"NHWC":"NCHW",autoPad:b,dilations:Array.from(s().subarray(S>>>0,S+2>>>0)),group:B,kernelShape:Array.from(s().subarray(H>>>0,H+2>>>0)),pads:Array.from(s().subarray(Z>>>0,Z+4>>>0)),strides:Array.from(s().subarray(ee>>>0,ee+2>>>0)),wIsConst:()=>!!t()[ce>>>0],outputPadding:0<de?Array.from(s().subarray(me>>>0,me+de>>>0)):[],outputShape:0<Oe?Array.from(s().subarray(Be>>>0,Be+Oe>>>0)):[]})},913581:(p,b)=>{d.Ea("GlobalAveragePool",p,{format:b?"NHWC":"NCHW"})},913672:(p,b,S,B,H,Z,ee,pe,ce,de,me,Oe,Be,F,we,ze)=>{d.Ea("AveragePool",p,{format:ze?"NHWC":"NCHW",auto_pad:b,ceil_mode:S,count_include_pad:B,storage_order:H,dilations:[Z,ee],kernel_shape:[pe,ce],pads:[de,me,Oe,Be],strides:[F,we]})},913956:(p,b)=>{d.Ea("GlobalAveragePool",p,{format:b?"NHWC":"NCHW"})},914047:(p,b,S,B,H,Z,ee,pe,ce,de,me,Oe,Be,F,we,ze)=>{d.Ea("AveragePool",p,{format:ze?"NHWC":"NCHW",auto_pad:b,ceil_mode:S,count_include_pad:B,storage_order:H,dilations:[Z,ee],kernel_shape:[pe,ce],pads:[de,me,Oe,Be],strides:[F,we]})},914331:(p,b)=>{d.Ea("GlobalMaxPool",p,{format:b?"NHWC":"NCHW"})},914418:(p,b,S,B,H,Z,ee,pe,ce,de,me,Oe,Be,F,we,ze)=>{d.Ea("MaxPool",p,{format:ze?"NHWC":"NCHW",auto_pad:b,ceil_mode:S,count_include_pad:B,storage_order:H,dilations:[Z,ee],kernel_shape:[pe,ce],pads:[de,me,Oe,Be],strides:[F,we]})},914698:(p,b)=>{d.Ea("GlobalMaxPool",p,{format:b?"NHWC":"NCHW"})},914785:(p,b,S,B,H,Z,ee,pe,ce,de,me,Oe,Be,F,we,ze)=>{d.Ea("MaxPool",p,{format:ze?"NHWC":"NCHW",auto_pad:b,ceil_mode:S,count_include_pad:B,storage_order:H,dilations:[Z,ee],kernel_shape:[pe,ce],pads:[de,me,Oe,Be],strides:[F,we]})},915065:(p,b,S,B,H)=>{d.Ea("Gemm",p,{alpha:b,beta:S,transA:B,transB:H})},915169:p=>{d.Ea("MatMul",p,void 0)},915223:(p,b,S,B)=>{d.Ea("ArgMax",p,{keepDims:!!b,selectLastIndex:!!S,axis:B})},915331:(p,b,S,B)=>{d.Ea("ArgMin",p,{keepDims:!!b,selectLastIndex:!!S,axis:B})},915439:(p,b)=>{d.Ea("Softmax",p,{axis:b})},915502:(p,b)=>{d.Ea("Concat",p,{axis:b})},915562:(p,b,S,B,H)=>{d.Ea("Split",p,{axis:b,numOutputs:S,splitSizes:B?Array.from(s().subarray(H>>>0,H+B>>>0)):[]})},915707:p=>{d.Ea("Expand",p,void 0)},915761:(p,b)=>{d.Ea("Gather",p,{axis:Number(b)})},915832:(p,b)=>{d.Ea("GatherElements",p,{axis:Number(b)})},915911:(p,b,S,B,H,Z,ee,pe,ce,de,me)=>{d.Ea("Resize",p,{antialias:b,axes:S?Array.from(s().subarray(B>>>0,B+S>>>0)):[],coordinateTransformMode:Tt(H),cubicCoeffA:Z,excludeOutside:ee,extrapolationValue:pe,keepAspectRatioPolicy:Tt(ce),mode:Tt(de),nearestMode:Tt(me)})},916262:(p,b,S,B,H,Z,ee)=>{d.Ea("Slice",p,{starts:b?Array.from(s().subarray(S>>>0,S+b>>>0)):[],ends:B?Array.from(s().subarray(H>>>0,H+B>>>0)):[],axes:Z?Array.from(s().subarray(ee>>>0,ee+Z>>>0)):[]})},916493:p=>{d.Ea("Tile",p,void 0)},916545:(p,b,S)=>{d.Ea("LayerNormalization",p,{axis:Number(b),epsilon:Number(S)})},916652:(p,b,S)=>{d.Ea("InstanceNormalization",p,{epsilon:b,format:S?"NHWC":"NCHW"})},916766:(p,b,S)=>{d.Ea("InstanceNormalization",p,{epsilon:b,format:S?"NHWC":"NCHW"})},916880:p=>{d.Ea("Range",p,void 0)},916933:(p,b)=>{d.Ea("Einsum",p,{equation:Tt(b)})},917014:(p,b,S,B,H)=>{d.Ea("Pad",p,{mode:b,value:S,pads:B?Array.from(s().subarray(H>>>0,H+B>>>0)):[]})},917146:p=>{d.Ea("Gelu",p,void 0)},917198:p=>{d.Ea("BiasAdd",p,void 0)},917253:p=>{d.Ea("BiasSplitGelu",p,void 0)},917314:(p,b)=>{d.Ea("SkipLayerNormalization",p,{epsilon:b})},917395:p=>{d.zb(p)},917429:(p,b)=>d.Ab(p,b,d.bb.Fb,d.bb.errors),917541:p=>d.wb(p),917574:p=>d.yb(p),917606:(p,b,S)=>{d.jb(p,b,S,!0)},917645:(p,b,S)=>{d.jb(p,b,S)}};function qt(p){this.name="ExitStatus",this.message=`Program terminated with exit(${p})`,this.status=p}function ut(p){p.terminate(),p.onmessage=()=>{}}function fr(p){(p=be.Qa[p])||rt(),be.Eb(p)}function pr(p){var b=be.tb();if(!b)return 6;be.Ya.push(b),be.Qa[p.Xa]=b,b.Xa=p.Xa;var S={cmd:"run",start_routine:p.Gb,arg:p.rb,pthread_ptr:p.Xa};return O&&b.unref(),b.postMessage(S,p.Mb),0}var gn=typeof TextDecoder<"u"?new TextDecoder("utf8"):void 0,_t=(p,b,S)=>{b>>>=0;var B=b+S;for(S=b;p[S]&&!(S>=B);)++S;if(16<S-b&&p.buffer&&gn)return gn.decode(p.buffer instanceof SharedArrayBuffer?p.slice(b,S):p.subarray(b,S));for(B="";b<S;){var H=p[b++];if(H&128){var Z=p[b++]&63;if((H&224)==192)B+=String.fromCharCode((H&31)<<6|Z);else{var ee=p[b++]&63;H=(H&240)==224?(H&15)<<12|Z<<6|ee:(H&7)<<18|Z<<12|ee<<6|p[b++]&63,65536>H?B+=String.fromCharCode(H):(H-=65536,B+=String.fromCharCode(55296|H>>10,56320|H&1023))}}else B+=String.fromCharCode(H)}return B},Tt=(p,b)=>(p>>>=0)?_t(u(),p,b):"";function yt(p){if(R)return Le(1,1,p);xe=p,It()||(be.Hb(),d.onExit&&d.onExit(p),Me=!0),T(p,new qt(p))}var mr=p=>{if(xe=p,R)throw hr(p),"unwind";yt(p)},be={ab:[],Ya:[],mb:[],Qa:{},gb:function(){R?be.vb():be.ub()},ub:function(){Se.unshift(()=>{At(),be.Bb(()=>Vt())})},vb:function(){be.receiveObjectTransfer=be.Db,be.threadInitTLS=be.lb,be.setExitStatus=be.kb,Ve=!1},kb:function(p){xe=p},Sb:["$terminateWorker"],Hb:function(){for(var p of be.Ya)ut(p);for(p of be.ab)ut(p);be.ab=[],be.Ya=[],be.Qa=[]},Eb:function(p){var b=p.Xa;delete be.Qa[b],be.ab.push(p),be.Ya.splice(be.Ya.indexOf(p),1),p.Xa=0,$r(b)},Db:function(){},lb:function(){be.mb.forEach(p=>p())},Cb:p=>new Promise(b=>{p.onmessage=Z=>{Z=Z.data;var ee=Z.cmd;if(Z.targetThread&&Z.targetThread!=er()){var pe=be.Qa[Z.Rb];pe?pe.postMessage(Z,Z.transferList):ue(\'Internal error! Worker sent a message "\'+ee+\'" to target pthread \'+Z.targetThread+", but that thread no longer exists!")}else ee==="checkMailbox"?Nt():ee==="spawnThread"?pr(Z):ee==="cleanupThread"?fr(Z.thread):ee==="killThread"?(Z=Z.thread,ee=be.Qa[Z],delete be.Qa[Z],ut(ee),$r(Z),be.Ya.splice(be.Ya.indexOf(ee),1),ee.Xa=0):ee==="cancelThread"?be.Qa[Z.thread].postMessage({cmd:"cancel"}):ee==="loaded"?(p.loaded=!0,b(p)):ee==="alert"?alert("Thread "+Z.threadId+": "+Z.text):Z.target==="setimmediate"?p.postMessage(Z):ee==="callHandler"?d[Z.handler](...Z.args):ee&&ue("worker sent an unknown command "+ee)},p.onerror=Z=>{throw ue("worker sent an error! "+Z.filename+":"+Z.lineno+": "+Z.message),Z},O&&(p.on("message",function(Z){p.onmessage({data:Z})}),p.on("error",function(Z){p.onerror(Z)}));var S=[],B=["onExit","onAbort","print","printErr"],H;for(H of B)d.hasOwnProperty(H)&&S.push(H);p.postMessage({cmd:"load",handlers:S,urlOrBlob:d.mainScriptUrlOrBlob||e,wasmMemory:Ce,wasmModule:ye})}),Bb:function(p){p()},qb:function(){var p=k("ort-wasm-simd-threaded.worker.js");p=new Worker(p),be.ab.push(p)},tb:function(){return be.ab.length==0&&(be.qb(),be.Cb(be.ab[0])),be.ab.pop()}};d.PThread=be;var nt=p=>{for(;0<p.length;)p.shift()(d)};d.establishStackSpace=function(){var p=er(),b=s()[p+52>>2>>>0];p=s()[p+56>>2>>>0],Xr(b,b-p),tr(b)};function hr(p){if(R)return Le(2,0,p);mr(p)}d.invokeEntryPoint=function(p,b){p=Jr.apply(null,[p,b]),It()?be.kb(p):Cr(p)};function it(p){this.fb=p-24,this.pb=function(b){f()[this.fb+4>>2>>>0]=b},this.ob=function(b){f()[this.fb+8>>2>>>0]=b},this.gb=function(b,S){this.nb(),this.pb(b),this.ob(S)},this.nb=function(){f()[this.fb+16>>2>>>0]=0}}var dt=0,yn=0;function bn(p,b,S,B){return R?Le(3,1,p,b,S,B):vn(p,b,S,B)}function vn(p,b,S,B){if(p>>>=0,b>>>=0,S>>>=0,B>>>=0,typeof SharedArrayBuffer>"u")return ue("Current environment does not support SharedArrayBuffer, pthreads are not available!"),6;var H=[];return R&&H.length===0?bn(p,b,S,B):(p={Gb:S,Xa:p,rb:B,Mb:H},R?(p.Ob="spawnThread",postMessage(p,H),0):pr(p))}function Or(p,b,S){return R?Le(4,1,p,b,S):0}function wn(p,b){if(R)return Le(5,1,p,b)}var kr=p=>{for(var b=0,S=0;S<p.length;++S){var B=p.charCodeAt(S);127>=B?b++:2047>=B?b+=2:55296<=B&&57343>=B?(b+=4,++S):b+=3}return b},_n=(p,b,S,B)=>{if(S>>>=0,!(0<B))return 0;var H=S;B=S+B-1;for(var Z=0;Z<p.length;++Z){var ee=p.charCodeAt(Z);if(55296<=ee&&57343>=ee){var pe=p.charCodeAt(++Z);ee=65536+((ee&1023)<<10)|pe&1023}if(127>=ee){if(S>=B)break;b[S++>>>0]=ee}else{if(2047>=ee){if(S+1>=B)break;b[S++>>>0]=192|ee>>6}else{if(65535>=ee){if(S+2>=B)break;b[S++>>>0]=224|ee>>12}else{if(S+3>=B)break;b[S++>>>0]=240|ee>>18,b[S++>>>0]=128|ee>>12&63}b[S++>>>0]=128|ee>>6&63}b[S++>>>0]=128|ee&63}}return b[S>>>0]=0,S-H},$n=(p,b,S)=>_n(p,u(),b,S);function Cn(p,b){if(R)return Le(6,1,p,b)}function Sn(p,b,S){if(R)return Le(7,1,p,b,S)}function gr(p,b,S){return R?Le(8,1,p,b,S):0}function Rr(p,b){if(R)return Le(9,1,p,b)}function Kt(p,b,S){if(R)return Le(10,1,p,b,S)}function xn(p,b,S,B){if(R)return Le(11,1,p,b,S,B)}function $t(p,b,S,B){if(R)return Le(12,1,p,b,S,B)}function mt(p,b,S,B){if(R)return Le(13,1,p,b,S,B)}function Dr(p){if(R)return Le(14,1,p)}function Yt(p,b){if(R)return Le(15,1,p,b)}function Br(p,b,S){if(R)return Le(16,1,p,b,S)}var Mr=p=>{if(!Me)try{if(p(),!It())try{R?Cr(xe):mr(xe)}catch(b){b instanceof qt||b=="unwind"||T(1,b)}}catch(b){b instanceof qt||b=="unwind"||T(1,b)}};function zr(p){p>>>=0,typeof Atomics.Nb=="function"&&(Atomics.Nb(s(),p>>2,p).value.then(Nt),p+=128,Atomics.store(s(),p>>2,1))}d.__emscripten_thread_mailbox_await=zr;function Nt(){var p=er();p&&(zr(p),Mr(()=>Zr()))}d.checkMailbox=Nt;var Wt=p=>p%4===0&&(p%100!==0||p%400===0),In=[0,31,60,91,121,152,182,213,244,274,305,335],An=[0,31,59,90,120,151,181,212,243,273,304,334];function Tn(p,b,S,B,H,Z,ee,pe){return R?Le(17,1,p,b,S,B,H,Z,ee,pe):-52}function Ur(p,b,S,B,H,Z,ee){if(R)return Le(18,1,p,b,S,B,H,Z,ee)}var Zt=p=>{var b=kr(p)+1,S=_r(b);return S&&$n(p,S,b),S},jr=[],yr=(p,b)=>{jr.length=0;var S;for(b>>=2;S=u()[p++>>>0];)b+=S!=105&b,jr.push(S==105?s()[b>>>0]:m()[b++>>>1]),++b;return jr},En=p=>{var b=Sr();return p=p(),tr(b),p};function Le(p,b){var S=arguments.length-2,B=arguments;return En(()=>{for(var H=xr(8*S),Z=H>>3,ee=0;ee<S;ee++){var pe=B[2+ee];m()[Z+ee>>>0]=pe}return Yr(p,S,H,b)})}var Vr=[],br={},Pn=()=>{if(!Et){var p={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:(typeof navigator=="object"&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",_:$||"./this.program"},b;for(b in br)br[b]===void 0?delete p[b]:p[b]=br[b];var S=[];for(b in p)S.push(`${b}=${p[b]}`);Et=S}return Et},Et;function Nr(p,b){if(R)return Le(19,1,p,b);p>>>=0,b>>>=0;var S=0;return Pn().forEach(function(B,H){var Z=b+S;for(H=f()[p+4*H>>2>>>0]=Z,Z=0;Z<B.length;++Z)t()[H++>>0>>>0]=B.charCodeAt(Z);t()[H>>0>>>0]=0,S+=B.length+1}),0}function Wr(p,b){if(R)return Le(20,1,p,b);p>>>=0,b>>>=0;var S=Pn();f()[p>>2>>>0]=S.length;var B=0;return S.forEach(function(H){B+=H.length+1}),f()[b>>2>>>0]=B,0}function Gr(p){return R?Le(21,1,p):52}function vr(p,b,S,B){return R?Le(22,1,p,b,S,B):52}function Hr(p,b,S,B,H){return R?Le(23,1,p,b,S,B,H):70}var Lr=[null,[],[]];function Fr(p,b,S,B){if(R)return Le(24,1,p,b,S,B);b>>>=0,S>>>=0,B>>>=0;for(var H=0,Z=0;Z<S;Z++){var ee=f()[b>>2>>>0],pe=f()[b+4>>2>>>0];b+=8;for(var ce=0;ce<pe;ce++){var de=u()[ee+ce>>>0],me=Lr[p];de===0||de===10?((p===1?L:ue)(_t(me,0)),me.length=0):me.push(de)}H+=pe}return f()[B>>2>>>0]=H,0}var wr=[31,29,31,30,31,30,31,31,30,31,30,31],On=[31,28,31,30,31,30,31,31,30,31,30,31];function kn(p){var b=Array(kr(p)+1);return _n(p,b,0,b.length),b}var Rn=(p,b)=>{t().set(p,b>>>0)};function Dn(p,b,S,B){function H(F,we,ze){for(F=typeof F=="number"?F.toString():F||"";F.length<we;)F=ze[0]+F;return F}function Z(F,we){return H(F,we,"0")}function ee(F,we){function ze(an){return 0>an?-1:0<an?1:0}var Pt;return(Pt=ze(F.getFullYear()-we.getFullYear()))===0&&(Pt=ze(F.getMonth()-we.getMonth()))===0&&(Pt=ze(F.getDate()-we.getDate())),Pt}function pe(F){switch(F.getDay()){case 0:return new Date(F.getFullYear()-1,11,29);case 1:return F;case 2:return new Date(F.getFullYear(),0,3);case 3:return new Date(F.getFullYear(),0,2);case 4:return new Date(F.getFullYear(),0,1);case 5:return new Date(F.getFullYear()-1,11,31);case 6:return new Date(F.getFullYear()-1,11,30)}}function ce(F){var we=F.Za;for(F=new Date(new Date(F.$a+1900,0,1).getTime());0<we;){var ze=F.getMonth(),Pt=(Wt(F.getFullYear())?wr:On)[ze];if(we>Pt-F.getDate())we-=Pt-F.getDate()+1,F.setDate(1),11>ze?F.setMonth(ze+1):(F.setMonth(0),F.setFullYear(F.getFullYear()+1));else{F.setDate(F.getDate()+we);break}}return ze=new Date(F.getFullYear()+1,0,4),we=pe(new Date(F.getFullYear(),0,4)),ze=pe(ze),0>=ee(we,F)?0>=ee(ze,F)?F.getFullYear()+1:F.getFullYear():F.getFullYear()-1}p>>>=0,b>>>=0,S>>>=0,B>>>=0;var de=s()[B+40>>2>>>0];B={Kb:s()[B>>2>>>0],Jb:s()[B+4>>2>>>0],cb:s()[B+8>>2>>>0],ib:s()[B+12>>2>>>0],eb:s()[B+16>>2>>>0],$a:s()[B+20>>2>>>0],Wa:s()[B+24>>2>>>0],Za:s()[B+28>>2>>>0],Tb:s()[B+32>>2>>>0],Ib:s()[B+36>>2>>>0],Lb:de?Tt(de):""},S=Tt(S),de={"%c":"%a %b %d %H:%M:%S %Y","%D":"%m/%d/%y","%F":"%Y-%m-%d","%h":"%b","%r":"%I:%M:%S %p","%R":"%H:%M","%T":"%H:%M:%S","%x":"%m/%d/%y","%X":"%H:%M:%S","%Ec":"%c","%EC":"%C","%Ex":"%m/%d/%y","%EX":"%H:%M:%S","%Ey":"%y","%EY":"%Y","%Od":"%d","%Oe":"%e","%OH":"%H","%OI":"%I","%Om":"%m","%OM":"%M","%OS":"%S","%Ou":"%u","%OU":"%U","%OV":"%V","%Ow":"%w","%OW":"%W","%Oy":"%y"};for(var me in de)S=S.replace(new RegExp(me,"g"),de[me]);var Oe="Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "),Be="January February March April May June July August September October November December".split(" ");de={"%a":F=>Oe[F.Wa].substring(0,3),"%A":F=>Oe[F.Wa],"%b":F=>Be[F.eb].substring(0,3),"%B":F=>Be[F.eb],"%C":F=>Z((F.$a+1900)/100|0,2),"%d":F=>Z(F.ib,2),"%e":F=>H(F.ib,2," "),"%g":F=>ce(F).toString().substring(2),"%G":F=>ce(F),"%H":F=>Z(F.cb,2),"%I":F=>(F=F.cb,F==0?F=12:12<F&&(F-=12),Z(F,2)),"%j":F=>{for(var we=0,ze=0;ze<=F.eb-1;we+=(Wt(F.$a+1900)?wr:On)[ze++]);return Z(F.ib+we,3)},"%m":F=>Z(F.eb+1,2),"%M":F=>Z(F.Jb,2),"%n":()=>`\n`,"%p":F=>0<=F.cb&&12>F.cb?"AM":"PM","%S":F=>Z(F.Kb,2),"%t":()=>"\t","%u":F=>F.Wa||7,"%U":F=>Z(Math.floor((F.Za+7-F.Wa)/7),2),"%V":F=>{var we=Math.floor((F.Za+7-(F.Wa+6)%7)/7);if(2>=(F.Wa+371-F.Za-2)%7&&we++,we)we==53&&(ze=(F.Wa+371-F.Za)%7,ze==4||ze==3&&Wt(F.$a)||(we=1));else{we=52;var ze=(F.Wa+7-F.Za-1)%7;(ze==4||ze==5&&Wt(F.$a%400-1))&&we++}return Z(we,2)},"%w":F=>F.Wa,"%W":F=>Z(Math.floor((F.Za+7-(F.Wa+6)%7)/7),2),"%y":F=>(F.$a+1900).toString().substring(2),"%Y":F=>F.$a+1900,"%z":F=>{F=F.Ib;var we=0<=F;return F=Math.abs(F)/60,(we?"+":"-")+("0000"+(F/60*100+F%60)).slice(-4)},"%Z":F=>F.Lb,"%%":()=>"%"},S=S.replace(/%%/g,"\\0\\0");for(me in de)S.includes(me)&&(S=S.replace(new RegExp(me,"g"),de[me](B)));return S=S.replace(/\\0\\0/g,"%"),me=kn(S),me.length>b?0:(Rn(me,p),me.length-1)}function Qt(p){try{p()}catch(b){rt(b)}}function Bn(p){var b={},S;for(S in p)(function(B){var H=p[B];b[B]=typeof H=="function"?function(){Xt.push(B);try{return H.apply(null,arguments)}finally{Me||(Xt.pop()===B||rt(),bt&&ht===1&&Xt.length===0&&(ht=0,lt+=1,Qt(tn),typeof Fibers<"u"&&Fibers.Ub()))}}:H})(S);return b}var ht=0,bt=null,M=0,Xt=[],Gt={},gt={},Mn=0,V=null,Jt=[];function N(){return new Promise((p,b)=>{V={resolve:p,reject:b}})}function W(){var p=_r(65548),b=p+12;f()[p>>2>>>0]=b,f()[p+4>>2>>>0]=b+65536,b=Xt[0];var S=Gt[b];return S===void 0&&(S=Mn++,Gt[b]=S,gt[S]=b),b=S,s()[p+8>>2>>>0]=b,p}function zn(){var p=s()[bt+8>>2>>>0];return p=ae[gt[p]],--lt,p()}function Un(p){if(!Me){if(ht===0){var b=!1,S=!1;p((B=0)=>{if(!Me&&(M=B,b=!0,S)){ht=2,Qt(()=>rn(bt)),typeof Browser<"u"&&Browser.hb.sb&&Browser.hb.resume(),B=!1;try{var H=zn()}catch(pe){H=pe,B=!0}var Z=!1;if(!bt){var ee=V;ee&&(V=null,(B?ee.reject:ee.resolve)(H),Z=!0)}if(B&&!Z)throw H}}),S=!0,b||(ht=1,bt=W(),typeof Browser<"u"&&Browser.hb.sb&&Browser.hb.pause(),Qt(()=>en(bt)))}else ht===2?(ht=0,Qt(nn),qr(bt),bt=null,Jt.forEach(B=>Mr(B))):rt(`invalid state: ${ht}`);return M}}function jn(p){return Un(b=>{p().then(b)})}be.gb();var Vn=[null,yt,hr,bn,Or,wn,Cn,Sn,gr,Rr,Kt,xn,$t,mt,Dr,Yt,Br,Tn,Ur,Nr,Wr,Gr,vr,Hr,Fr],Nn={r:function(p,b,S){return jn(async()=>{await d.xb(p,b,S)})},b:function(p,b,S){throw p>>>=0,new it(p).gb(b>>>0,S>>>0),dt=p,yn++,dt},O:function(p){Kr(p>>>0,!I,1,!P,131072,!1),be.lb()},l:function(p){p>>>=0,R?postMessage({cmd:"cleanupThread",thread:p}):fr(p)},I:vn,i:Or,U:wn,E:Cn,G:Sn,V:gr,S:Rr,K:Kt,R:xn,p:$t,F:mt,C:Dr,T:Yt,D:Br,q:()=>!0,A:function(p,b){p>>>=0,p==b>>>0?setTimeout(()=>Nt()):R?postMessage({targetThread:p,cmd:"checkMailbox"}):(p=be.Qa[p])&&p.postMessage({cmd:"checkMailbox"})},M:function(){return-1},N:zr,X:function(p){O&&be.Qa[p>>>0].ref()},u:function(p,b,S){p=b+2097152>>>0<4194305-!!p?(p>>>0)+4294967296*b:NaN,S>>>=0,p=new Date(1e3*p),s()[S>>2>>>0]=p.getUTCSeconds(),s()[S+4>>2>>>0]=p.getUTCMinutes(),s()[S+8>>2>>>0]=p.getUTCHours(),s()[S+12>>2>>>0]=p.getUTCDate(),s()[S+16>>2>>>0]=p.getUTCMonth(),s()[S+20>>2>>>0]=p.getUTCFullYear()-1900,s()[S+24>>2>>>0]=p.getUTCDay(),p=(p.getTime()-Date.UTC(p.getUTCFullYear(),0,1,0,0,0,0))/864e5|0,s()[S+28>>2>>>0]=p},v:function(p,b,S){p=b+2097152>>>0<4194305-!!p?(p>>>0)+4294967296*b:NaN,S>>>=0,p=new Date(1e3*p),s()[S>>2>>>0]=p.getSeconds(),s()[S+4>>2>>>0]=p.getMinutes(),s()[S+8>>2>>>0]=p.getHours(),s()[S+12>>2>>>0]=p.getDate(),s()[S+16>>2>>>0]=p.getMonth(),s()[S+20>>2>>>0]=p.getFullYear()-1900,s()[S+24>>2>>>0]=p.getDay(),b=(Wt(p.getFullYear())?In:An)[p.getMonth()]+p.getDate()-1|0,s()[S+28>>2>>>0]=b,s()[S+36>>2>>>0]=-(60*p.getTimezoneOffset()),b=new Date(p.getFullYear(),6,1).getTimezoneOffset();var B=new Date(p.getFullYear(),0,1).getTimezoneOffset();p=(b!=B&&p.getTimezoneOffset()==Math.min(B,b))|0,s()[S+32>>2>>>0]=p},w:function(p){p>>>=0;var b=new Date(s()[p+20>>2>>>0]+1900,s()[p+16>>2>>>0],s()[p+12>>2>>>0],s()[p+8>>2>>>0],s()[p+4>>2>>>0],s()[p>>2>>>0],0),S=s()[p+32>>2>>>0],B=b.getTimezoneOffset(),H=new Date(b.getFullYear(),6,1).getTimezoneOffset(),Z=new Date(b.getFullYear(),0,1).getTimezoneOffset(),ee=Math.min(Z,H);return 0>S?s()[p+32>>2>>>0]=+(H!=Z&&ee==B):0<S!=(ee==B)&&(H=Math.max(Z,H),b.setTime(b.getTime()+6e4*((0<S?ee:H)-B))),s()[p+24>>2>>>0]=b.getDay(),S=(Wt(b.getFullYear())?In:An)[b.getMonth()]+b.getDate()-1|0,s()[p+28>>2>>>0]=S,s()[p>>2>>>0]=b.getSeconds(),s()[p+4>>2>>>0]=b.getMinutes(),s()[p+8>>2>>>0]=b.getHours(),s()[p+12>>2>>>0]=b.getDate(),s()[p+16>>2>>>0]=b.getMonth(),s()[p+20>>2>>>0]=b.getYear(),p=b.getTime()/1e3,Qr((wt=p,1<=+Math.abs(wt)?0<wt?+Math.floor(wt/4294967296)>>>0:~~+Math.ceil((wt-+(~~wt>>>0))/4294967296)>>>0:0)),p>>>0},s:Tn,t:Ur,z:function(p,b,S){function B(de){return(de=de.toTimeString().match(/\\(([A-Za-z ]+)\\)$/))?de[1]:"GMT"}p>>>=0,b>>>=0,S>>>=0;var H=new Date().getFullYear(),Z=new Date(H,0,1),ee=new Date(H,6,1);H=Z.getTimezoneOffset();var pe=ee.getTimezoneOffset(),ce=Math.max(H,pe);f()[p>>2>>>0]=60*ce,s()[b>>2>>>0]=+(H!=pe),p=B(Z),b=B(ee),p=Zt(p),b=Zt(b),pe<H?(f()[S>>2>>>0]=p,f()[S+4>>2>>>0]=b):(f()[S>>2>>>0]=b,f()[S+4>>2>>>0]=p)},d:()=>{rt("")},c:function(p,b,S){return p>>>=0,b=yr(b>>>0,S>>>0),cr[p].apply(null,b)},k:function(p,b,S){return p>>>=0,b=yr(b>>>0,S>>>0),cr[p].apply(null,b)},m:function(){},j:function(){return Date.now()},W:()=>{throw lt+=1,"unwind"},B:function(){return 4294901760},f:()=>performance.timeOrigin+performance.now(),g:function(){return O?(Ls(),nr(Hs)).cpus().length:navigator.hardwareConcurrency},L:function(p,b,S,B){for(be.Pb=b>>>0,Vr.length=S,b=B>>>0>>3,B=0;B<S;B++)Vr[B]=m()[b+B>>>0];return(0>p?cr[-p-1]:Vn[p]).apply(null,Vr)},y:function(p){p>>>=0;var b=u().length;if(p<=b||4294901760<p)return!1;for(var S=1;4>=S;S*=2){var B=b*(1+.2/S);B=Math.min(B,p+100663296);var H=Math;B=Math.max(p,B);e:{H=H.min.call(H,4294901760,B+(65536-B%65536)%65536)-Ce.buffer.byteLength+65535>>>16;try{Ce.grow(H),te();var Z=1;break e}catch{}Z=void 0}if(Z)return!0}return!1},P:Nr,Q:Wr,H:mr,h:Gr,o:vr,x:Hr,n:Fr,a:Ce||d.wasmMemory,J:Dn,e:function(p,b,S,B){return Dn(p>>>0,b>>>0,S>>>0,B>>>0)}};(function(){function p(S,B){return S=S.exports,S=Bn(S),ae=S=Wn(S),be.mb.push(ae.Da),st.unshift(ae.Y),ye=B,Vt(),S}var b={a:Nn};if(At(),d.instantiateWasm)try{return d.instantiateWasm(b,p)}catch(S){ue("Module.instantiateWasm callback failed with error: "+S),w(S)}return dr(b,function(S){p(S.instance,S.module)}).catch(w),{}})(),d._OrtInit=(p,b)=>(d._OrtInit=ae.Z)(p,b),d._OrtGetLastError=(p,b)=>(d._OrtGetLastError=ae._)(p,b),d._OrtCreateSessionOptions=(p,b,S,B,H,Z,ee,pe,ce,de)=>(d._OrtCreateSessionOptions=ae.$)(p,b,S,B,H,Z,ee,pe,ce,de),d._OrtAppendExecutionProvider=(p,b)=>(d._OrtAppendExecutionProvider=ae.aa)(p,b),d._OrtAddFreeDimensionOverride=(p,b,S)=>(d._OrtAddFreeDimensionOverride=ae.ba)(p,b,S),d._OrtAddSessionConfigEntry=(p,b,S)=>(d._OrtAddSessionConfigEntry=ae.ca)(p,b,S),d._OrtReleaseSessionOptions=p=>(d._OrtReleaseSessionOptions=ae.da)(p),d._OrtCreateSession=(p,b,S)=>(d._OrtCreateSession=ae.ea)(p,b,S),d._OrtReleaseSession=p=>(d._OrtReleaseSession=ae.fa)(p),d._OrtGetInputOutputCount=(p,b,S)=>(d._OrtGetInputOutputCount=ae.ga)(p,b,S),d._OrtGetInputName=(p,b)=>(d._OrtGetInputName=ae.ha)(p,b),d._OrtGetOutputName=(p,b)=>(d._OrtGetOutputName=ae.ia)(p,b),d._OrtFree=p=>(d._OrtFree=ae.ja)(p),d._OrtCreateTensor=(p,b,S,B,H,Z)=>(d._OrtCreateTensor=ae.ka)(p,b,S,B,H,Z),d._OrtGetTensorData=(p,b,S,B,H)=>(d._OrtGetTensorData=ae.la)(p,b,S,B,H),d._OrtReleaseTensor=p=>(d._OrtReleaseTensor=ae.ma)(p),d._OrtCreateRunOptions=(p,b,S,B)=>(d._OrtCreateRunOptions=ae.na)(p,b,S,B),d._OrtAddRunConfigEntry=(p,b,S)=>(d._OrtAddRunConfigEntry=ae.oa)(p,b,S),d._OrtReleaseRunOptions=p=>(d._OrtReleaseRunOptions=ae.pa)(p),d._OrtCreateBinding=p=>(d._OrtCreateBinding=ae.qa)(p),d._OrtBindInput=(p,b,S)=>(d._OrtBindInput=ae.ra)(p,b,S),d._OrtBindOutput=(p,b,S,B)=>(d._OrtBindOutput=ae.sa)(p,b,S,B),d._OrtClearBoundOutputs=p=>(d._OrtClearBoundOutputs=ae.ta)(p),d._OrtReleaseBinding=p=>(d._OrtReleaseBinding=ae.ua)(p),d._OrtRunWithBinding=(p,b,S,B,H)=>(d._OrtRunWithBinding=ae.va)(p,b,S,B,H),d._OrtRun=(p,b,S,B,H,Z,ee,pe)=>(d._OrtRun=ae.wa)(p,b,S,B,H,Z,ee,pe),d._OrtEndProfiling=p=>(d._OrtEndProfiling=ae.xa)(p),d._JsepOutput=(p,b,S)=>(d._JsepOutput=ae.ya)(p,b,S),d._JsepGetNodeName=p=>(d._JsepGetNodeName=ae.za)(p);var er=d._pthread_self=()=>(er=d._pthread_self=ae.Aa)(),_r=d._malloc=p=>(_r=d._malloc=ae.Ba)(p),qr=d._free=p=>(qr=d._free=ae.Ca)(p);d.__emscripten_tls_init=()=>(d.__emscripten_tls_init=ae.Da)();var Kr=d.__emscripten_thread_init=(p,b,S,B,H,Z)=>(Kr=d.__emscripten_thread_init=ae.Fa)(p,b,S,B,H,Z);d.__emscripten_thread_crashed=()=>(d.__emscripten_thread_crashed=ae.Ga)();var Yr=(p,b,S,B)=>(Yr=ae.Ha)(p,b,S,B),$r=p=>($r=ae.Ia)(p),Cr=d.__emscripten_thread_exit=p=>(Cr=d.__emscripten_thread_exit=ae.Ja)(p),Zr=d.__emscripten_check_mailbox=()=>(Zr=d.__emscripten_check_mailbox=ae.Ka)(),Qr=p=>(Qr=ae.La)(p),Xr=(p,b)=>(Xr=ae.Ma)(p,b),Sr=()=>(Sr=ae.Na)(),tr=p=>(tr=ae.Oa)(p),xr=p=>(xr=ae.Pa)(p),Jr=d.dynCall_ii=(p,b)=>(Jr=d.dynCall_ii=ae.Ra)(p,b),en=p=>(en=ae.Sa)(p),tn=()=>(tn=ae.Ta)(),rn=p=>(rn=ae.Ua)(p),nn=()=>(nn=ae.Va)();d.___start_em_js=917678,d.___stop_em_js=917839;function Wn(p){p=Object.assign({},p);var b=B=>()=>B()>>>0,S=B=>H=>B(H)>>>0;return p.__errno_location=b(p.__errno_location),p.pthread_self=b(p.pthread_self),p.malloc=S(p.malloc),p.stackSave=b(p.stackSave),p.stackAlloc=S(p.stackAlloc),p}d.keepRuntimeAlive=It,d.wasmMemory=Ce,d.stackAlloc=xr,d.stackSave=Sr,d.stackRestore=tr,d.UTF8ToString=Tt,d.stringToUTF8=$n,d.lengthBytesUTF8=kr,d.ExitStatus=qt,d.PThread=be;var rr;pt=function p(){rr||on(),rr||(pt=p)};function on(){function p(){if(!rr&&(rr=!0,d.calledRun=!0,!Me)&&(R||nt(st),y(d),d.onRuntimeInitialized&&d.onRuntimeInitialized(),!R)){if(d.postRun)for(typeof d.postRun=="function"&&(d.postRun=[d.postRun]);d.postRun.length;){var b=d.postRun.shift();tt.unshift(b)}nt(tt)}}if(!(0<Fe))if(R)y(d),R||nt(st),startWorker(d);else{if(d.preRun)for(typeof d.preRun=="function"&&(d.preRun=[d.preRun]);d.preRun.length;)Se.unshift(d.preRun.shift());nt(Se),0<Fe||(d.setStatus?(d.setStatus("Running..."),setTimeout(function(){setTimeout(function(){d.setStatus("")},1),p()},1)):p())}}if(d.preInit)for(typeof d.preInit=="function"&&(d.preInit=[d.preInit]);0<d.preInit.length;)d.preInit.pop()();return on(),r.ready}})();typeof qs=="object"&&typeof Ei=="object"?Ei.exports=Fs:typeof define=="function"&&define.amd&&define([],()=>Fs)});var Ys=sn((g0,bh)=>{bh.exports=\'"use strict";var Module={},ENVIRONMENT_IS_NODE=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string";if(ENVIRONMENT_IS_NODE){var nodeWorkerThreads=require("worker_threads"),parentPort=nodeWorkerThreads.parentPort;parentPort.on("message",e=>onmessage({data:e}));var fs=require("fs");Object.assign(global,{self:global,require,Module,location:{href:__filename},Worker:nodeWorkerThreads.Worker,importScripts:e=>(0,eval)(fs.readFileSync(e,"utf8")+"//# sourceURL="+e),postMessage:e=>parentPort.postMessage(e),performance:global.performance||{now:Date.now}})}var initializedJS=!1;function threadPrintErr(){var e=Array.prototype.slice.call(arguments).join(" ");if(ENVIRONMENT_IS_NODE){fs.writeSync(2,e+`\\n`);return}console.error(e)}function threadAlert(){var e=Array.prototype.slice.call(arguments).join(" ");postMessage({cmd:"alert",text:e,threadId:Module._pthread_self()})}var err=threadPrintErr;self.alert=threadAlert,Module.instantiateWasm=(e,t)=>{var a=Module.wasmModule;Module.wasmModule=null;var r=new WebAssembly.Instance(a,e);return t(r)},self.onunhandledrejection=e=>{throw e.reason??e};function handleMessage(e){try{if(e.data.cmd==="load"){let a=[];self.onmessage=r=>a.push(r),self.startWorker=r=>{Module=r,postMessage({cmd:"loaded"});for(let s of a)handleMessage(s);self.onmessage=handleMessage},Module.wasmModule=e.data.wasmModule;for(const r of e.data.handlers)Module[r]=(...s)=>{postMessage({cmd:"callHandler",handler:r,args:s})};if(Module.wasmMemory=e.data.wasmMemory,Module.buffer=Module.wasmMemory.buffer,Module.ENVIRONMENT_IS_PTHREAD=!0,typeof e.data.urlOrBlob=="string")importScripts(e.data.urlOrBlob);else{var t=URL.createObjectURL(e.data.urlOrBlob);importScripts(t),URL.revokeObjectURL(t)}ortWasmThreaded(Module)}else if(e.data.cmd==="run"){Module.__emscripten_thread_init(e.data.pthread_ptr,0,0,1),Module.__emscripten_thread_mailbox_await(e.data.pthread_ptr),Module.establishStackSpace(),Module.PThread.receiveObjectTransfer(e.data),Module.PThread.threadInitTLS(),initializedJS||(initializedJS=!0);try{Module.invokeEntryPoint(e.data.start_routine,e.data.arg)}catch(a){if(a!="unwind")throw a}}else e.data.cmd==="cancel"?Module._pthread_self()&&Module.__emscripten_thread_exit(-1):e.data.target==="setimmediate"||(e.data.cmd==="checkMailbox"?initializedJS&&Module.checkMailbox():e.data.cmd&&(err("worker.js received unknown command "+e.data.cmd),err(e.data)))}catch(a){throw Module.__emscripten_thread_crashed&&Module.__emscripten_thread_crashed(),a}}self.onmessage=handleMessage;\\n\'});var ki,Ht,ln,Kn,dn,tu,Ri,$e=oe(()=>{"use strict";ki=e=>{switch(e){case"int8":return 3;case"uint8":return 2;case"bool":return 9;case"int16":return 5;case"uint16":return 4;case"int32":return 6;case"uint32":return 12;case"float16":return 10;case"float32":return 1;case"float64":return 11;case"string":return 8;case"int64":return 7;case"uint64":return 13;default:throw new Error(`unsupported data type: ${e}`)}},Ht=e=>{switch(e){case 3:return"int8";case 2:return"uint8";case 9:return"bool";case 5:return"int16";case 4:return"uint16";case 6:return"int32";case 12:return"uint32";case 10:return"float16";case 1:return"float32";case 11:return"float64";case 8:return"string";case 7:return"int64";case 13:return"uint64";default:throw new Error(`unsupported data type: ${e}`)}},ln=e=>[void 0,4,1,1,2,2,4,8,void 0,1,2,8,4,8,void 0,void 0,void 0][e],Kn=e=>{switch(e){case"float16":return Uint16Array;case"float32":return Float32Array;case"uint8":return Uint8Array;case"int8":return Int8Array;case"uint16":return Uint16Array;case"int16":return Int16Array;case"int32":return Int32Array;case"bool":return Uint8Array;case"float64":return Float64Array;case"uint32":return Uint32Array;case"int64":return BigInt64Array;case"uint64":return BigUint64Array;default:throw new Error(`unsupported type: ${e}`)}},dn=e=>{switch(e){case"verbose":return 0;case"info":return 1;case"warning":return 2;case"error":return 3;case"fatal":return 4;default:throw new Error(`unsupported logging level: ${e}`)}},tu=e=>e==="float32"||e==="int32"||e==="int64"||e==="bool"||e==="float16"||e==="uint32",Ri=e=>{switch(e){case"none":return 0;case"cpu":return 1;case"cpu-pinned":return 2;case"texture":return 3;case"gpu-buffer":return 4;default:throw new Error(`unsupported data location: ${e}`)}}});var Yn=oe(()=>{"use strict"});var nu=oe(()=>{"use strict";Yn()});var iu,ou=oe(()=>{"use strict";iu="1.18.0"});var au,ir,Di=oe(()=>{"use strict";ou();au="warning",ir={wasm:{},webgl:{},webgpu:{},versions:{common:iu},set logLevel(e){if(e!==void 0){if(typeof e!="string"||["verbose","info","warning","error","fatal"].indexOf(e)===-1)throw new Error(`Unsupported logging level: ${e}`);au=e}},get logLevel(){return au}};Object.defineProperty(ir,"logLevel",{enumerable:!0})});var Ir,su=oe(()=>{"use strict";Di();Ir=ir});var uu=oe(()=>{"use strict"});var lu=oe(()=>{"use strict";Zn()});var cu=oe(()=>{"use strict"});var fu=oe(()=>{"use strict";Zn()});var Zn=oe(()=>{"use strict";uu();lu();cu();fu()});var Qn=oe(()=>{"use strict";Zn()});var Bi,pu,or,ar,Mi=oe(()=>{"use strict";Di();Bi=(e,r)=>{ir.wasm.trace&&console.timeStamp(`${e}::ORT::${r}`)},pu=(e,r)=>{let t=new Error().stack?.split(/\\r\\n|\\r|\\n/g)||[],u=!1;for(let s=0;s<t.length;s++){if(u&&!t[s].includes("TRACE_FUNC")){let f=`FUNC_${e}::${t[s].trim().split(" ")[1]}`;r&&(f+=`::${r}`),Bi("CPU",f);return}t[s].includes("TRACE_FUNC")&&(u=!0)}},or=e=>{ir.wasm.trace&&pu("BEGIN",e)},ar=e=>{ir.wasm.trace&&pu("END",e)}});var mu=oe(()=>{"use strict";Yn();Qn();Mi()});var hu=oe(()=>{"use strict";mu()});var gu=oe(()=>{"use strict"});var yu=oe(()=>{"use strict";Yn();Qn()});var bu=oe(()=>{"use strict";yu()});var Ar=oe(()=>{"use strict";nu();su();hu();Qn();Mi();gu();bu()});var Eh,Ph,vu,wu,_u,Oh,Ge,Lt=oe(()=>{"use strict";$e();Eh=["V","I","W","E","F"],Ph=(e,r)=>{console.log(`[${Eh[e]},${new Date().toISOString()}]${r}`)},_u=(e,r)=>{vu=e,wu=r},Oh=(e,r)=>{let t=dn(e),u=dn(vu);t>=u&&Ph(t,typeof r=="function"?r():r)},Ge=(...e)=>{wu&&Oh(...e)}});var $u,Cu=oe(()=>{"use strict";$e();$u=(e,r)=>new(Kn(r))(e)});var Xn=oe(()=>{"use strict"});var Jn,kh,Su,Ui,zi,Iu,Au=oe(()=>{"use strict";Lt();Xn();Jn=e=>Math.ceil(e/16)*16,kh=1,Su=()=>kh++,Ui=async(e,r,t,u)=>{let s=Jn(t),f=e.device.createBuffer({size:s,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ});try{let m=e.getCommandEncoder();e.endComputePass(),m.copyBufferToBuffer(r,0,f,0,s),e.flush(),await f.mapAsync(GPUMapMode.READ);let d=f.getMappedRange();if(u){let y=u();return y.set(new Uint8Array(d,0,t)),y}else return new Uint8Array(d.slice(0,t))}finally{f.destroy()}},zi=class{constructor(r){this.backend=r;this.storageCache=new Map,this.freeBuffers=new Map,this.freeUniformBuffers=new Map,this.buffersForUploadingPending=[],this.buffersPending=[],this.externalBuffers=new Map,this.capturedPendingBuffers=new Map}upload(r,t){let u=t.buffer,s=t.byteOffset,f=t.byteLength,m=Jn(f),d=this.storageCache.get(r);if(!d)return;if(d.originalSize!==f)throw new Error(`inconsistent data size. gpu data size=${d.originalSize}, data size=${f}`);let y=this.backend.device.createBuffer({mappedAtCreation:!0,size:m,usage:GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC}),w=y.getMappedRange();new Uint8Array(w).set(new Uint8Array(u,s,f)),y.unmap();let C=this.backend.getCommandEncoder();this.backend.endComputePass(),C.copyBufferToBuffer(y,0,d.gpuData.buffer,0,m),Ge("verbose",()=>`[WebGPU] GpuDataManager.upload(id=${r})`),this.buffersForUploadingPending.push(y)}memcpy(r,t){let u=this.storageCache.get(r);if(!u)throw new Error("source gpu data for memcpy does not exist");let s=this.storageCache.get(t);if(!s)throw new Error("destination gpu data for memcpy does not exist");if(u.originalSize!==s.originalSize)throw new Error("inconsistent source and destination gpu data size");let f=Jn(u.originalSize),m=this.backend.getCommandEncoder();this.backend.endComputePass(),m.copyBufferToBuffer(u.gpuData.buffer,0,s.gpuData.buffer,0,f)}registerExternalBuffer(r,t,u){let s;if(u){if(s=this.externalBuffers.get(u),s===void 0)throw new Error("previous buffer is not registered");if(r===u)return Ge("verbose",()=>`[WebGPU] GpuDataManager.registerExternalBuffer(size=${t}) => id=${s}, buffer is the same, skip.`),s;if(this.backend.capturedCommandList.has(this.backend.currentSessionId))throw new Error(`Registering a different external buffer under graph capture mode is not supported yet.\n             Please use the previous external buffer!`);this.externalBuffers.delete(u)}else s=Su();return this.storageCache.set(s,{gpuData:{id:s,type:0,buffer:r},originalSize:t}),this.externalBuffers.set(r,s),Ge("verbose",()=>`[WebGPU] GpuDataManager.registerExternalBuffer(size=${t}) => id=${s}, registered.`),s}unregisterExternalBuffer(r){let t=this.externalBuffers.get(r);t!==void 0&&(this.storageCache.delete(t),this.externalBuffers.delete(r),Ge("verbose",()=>`[WebGPU] GpuDataManager.unregisterExternalBuffer() => id=${t}`))}create(r,t=GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST){let u=Jn(r),s,f=(t&GPUBufferUsage.STORAGE)===GPUBufferUsage.STORAGE,m=(t&GPUBufferUsage.UNIFORM)===GPUBufferUsage.UNIFORM;if(f||m){let y=f?this.freeBuffers:this.freeUniformBuffers,w=y.get(u);w||(w=[],y.set(u,w)),w.length>0?s=w.pop():s=this.backend.device.createBuffer({size:u,usage:t})}else s=this.backend.device.createBuffer({size:u,usage:t});let d={id:Su(),type:0,buffer:s};return this.storageCache.set(d.id,{gpuData:d,originalSize:r}),Ge("verbose",()=>`[WebGPU] GpuDataManager.create(size=${r}) => id=${d.id}`),d}get(r){return this.storageCache.get(r)?.gpuData}release(r){let t=this.storageCache.get(r);if(!t)throw new Error("releasing data does not exist");return Ge("verbose",()=>`[WebGPU] GpuDataManager.release(id=${r}), gpuDataId=${t.gpuData.id}`),this.storageCache.delete(r),this.buffersPending.push(t.gpuData.buffer),t.originalSize}async download(r,t){let u=this.storageCache.get(r);u&&await Ui(this.backend,u.gpuData.buffer,u.originalSize,t)}refreshPendingBuffers(){for(let r of this.buffersForUploadingPending)r.destroy();if(this.buffersForUploadingPending=[],this.buffersPending.length!==0)if(this.backend.sessionStatus==="default"){for(let r of this.buffersPending)(r.usage&GPUBufferUsage.STORAGE)===GPUBufferUsage.STORAGE?this.freeBuffers.get(r.size).push(r):(r.usage&GPUBufferUsage.UNIFORM)===GPUBufferUsage.UNIFORM?this.freeUniformBuffers.get(r.size).push(r):r.destroy();this.buffersPending=[]}else{let r=this.capturedPendingBuffers.get(this.backend.currentSessionId);r||(r=[],this.capturedPendingBuffers.set(this.backend.currentSessionId,r));for(let t of this.buffersPending)r.push(t);this.buffersPending=[]}}dispose(){this.freeBuffers.forEach(r=>{r.forEach(t=>{t.destroy()})}),this.freeUniformBuffers.forEach(r=>{r.forEach(t=>{t.destroy()})}),this.storageCache.forEach(r=>{r.gpuData.buffer.destroy()}),this.capturedPendingBuffers.forEach(r=>{r.forEach(t=>{t.destroy()})}),this.storageCache=new Map,this.freeBuffers=new Map,this.freeUniformBuffers=new Map,this.capturedPendingBuffers=new Map}onReleaseSession(r){let t=this.capturedPendingBuffers.get(r);t&&(t.forEach(u=>{u.destroy()}),this.capturedPendingBuffers.delete(r))}},Iu=(...e)=>new zi(...e)});var ji,ke,ot=oe(()=>{"use strict";ji=class{constructor(r){Object.assign(this,r)}get cacheKey(){return this.key||(this.key=Object.getOwnPropertyNames(this).sort().map(r=>`${this[r]}`).join(";")),this.key}},ke=e=>new ji(e)});var Vi,Ot,Q,sr,ei,ti,ri,Ee=oe(()=>{"use strict";Vi=class{static calcMatMulShape(r,t){return r[1]!==t[0]?void 0:[r[0],t[1]]}},Ot=class{static calcShape(r,t,u=!1){let s=r.length,f=t.length;if(s===0)return t;if(f===0)return r;let m=Math.max(r.length,t.length),d=new Array(m);if(u){if(s<2||f<2)return;let y=Vi.calcMatMulShape([r[s-2],r[s-1]],[t[f-2],t[f-1]]);if(y===void 0)return;[d[m-2],d[m-1]]=y}for(let y=u?3:1;y<=m;y++){let w=s-y<0?1:r[s-y],C=f-y<0?1:t[f-y];if(w!==C&&w>1&&C>1)return;d[m-y]=Math.max(w,C)}return d}static isValidBroadcast(r,t){let u=r.length,s=t.length;if(u>s)return!1;for(let f=1;f<=u;f++)if(r[u-f]!==1&&r[u-f]!==t[s-f])return!1;return!0}},Q=class e{static size(r){return e.getSizeFromDimensionRange(r,0,r.length)}static convertShape(r,t=4){let u=r.length;if(u===0)return[];let s=new Array(u),f=u-1;for(;f>=0;){if(r[f]%t===0){s[f]=r[f]/t;break}if(t%r[f]!==0)throw new Error("cannot convert shape");s[f]=1,t/=r[f],f--}if(f>0)for(let m=f-1;m>=0;m--)s[m]=r[m];return s}static sizeFromDimension(r,t){if(t<0||t>r.length)throw new Error(`invalid dimension of ${t} for sizeFromDimension as Tensor has ${r.length} dimensions.`);return e.getSizeFromDimensionRange(r,t,r.length)}static sizeToDimension(r,t){if(t<0||t>r.length)throw new Error(`invalid dimension of ${t} for sizeToDimension as Tensor has ${r.length} dimensions.`);return e.getSizeFromDimensionRange(r,0,t)}static getSizeFromDimensionRange(r,t,u){let s=1;for(let f=t;f<u;f++){if(r[f]<0)throw new Error("cannot get valid size from specified dimension range. Most likely the range contains negative values in them.");s*=r[f]}return s}static computeStrides(r){let t=r.length;if(t===0)return[];if(t===1)return[1];let u=new Array(t);u[t-1]=1,u[t-2]=r[t-1];for(let s=t-3;s>=0;--s)u[s]=u[s+1]*r[s+1];return u}static normalizeAxis(r,t){if(r<-t&&r>=t)throw new Error("unsupported axis for this operation.");return r<0?r+t:r}static normalizeAxes(r,t){return r.map(u=>this.normalizeAxis(u,t??r.length))}static sortBasedOnPerm(r,t){return t?t.map(u=>r[u]):r.slice().reverse()}static padShape(r,t){let u=r.length;return r.map((s,f)=>s+t[f]+t[f+u])}static areEqual(r,t){return r.length!==t.length?!1:r.every((u,s)=>u===t[s])}},sr=class e{static adjustPoolAttributes(r,t,u,s,f,m){if(!r&&u.length!==t.length-2)throw new Error("length of specified kernel shapes should be 2 less than length of input dimensions");if(r)for(let d=0;d<t.length-2;d++)d>=u.length?u.push(t[d+2]):u[d]=t[d+2];for(let d=0;d<u.length;d++)if(d<s.length){if(s[d]<0)throw new Error("strides should be greater than or equal to 1")}else s.push(1);for(let d=0;d<u.length;d++)if(d<f.length){if(f[d]<0)throw new Error("dilations should be greater than or equal to 1")}else f.push(1);for(let d=0;d<u.length*2;d++)if(d<m.length){if(m[d]<0)throw new Error("pad should be greater than or equal to 1")}else m.push(0);for(let d=0;d<u.length;d++){if(u[d]<=0)throw new Error("kernel shapes need to be greater than 0");if(m[d]>=u[d]||m[d+u.length]>=u[d])throw new Error("pads should be smaller than kernel")}}static adjustPadsBasedOnAutoPad(r,t,u,s,f,m,d){if(d){if(f.length!==2*(r.length-2))throw new Error("length of pads should be twice the length of data dimensions");if(t.length!==r.length-2)throw new Error("length of strides should be the length of data dimensions");if(s.length!==r.length-2)throw new Error("length of kernel shapes should be the length of data dimensions");for(let y=0;y<r.length-2;y++)e.adjustPadAndReturnShape(r[y+(m?1:2)],t[y],u[y],s[y],f,y,y+r.length-2,d)}}static computePoolOutputShape(r,t,u,s,f,m,d){if(t.length<=0)throw new Error("input shape must be of size greater than 0");let y=[t[0],t[1]];return e.computeShapeHelper(r,t,y,u,s,f,m,d),y}static computeConvOutputShape(r,t,u,s,f,m,d){if(r.length<=0||t.length<=0)throw new Error("invalid input tensor dims or invalid filter tensor dims");let y=[r[0],t[0]];return e.computeShapeHelper(!1,r,y,u,s,f,m,d),y}static computeShapeHelper(r,t,u,s,f,m,d,y){if(r)for(let w=0;w<t.length-2;w++)u.push(1);else for(let w=0;w<t.length-2;w++)u.push(e.adjustPadAndReturnShape(t[w+2],s[w],f[w],m[w],d,w,w+t.length-2,y))}static adjustPadAndReturnShape(r,t,u,s,f,m,d,y){let w=u*(s-1)+1;if(y&&y!=="NOTSET")switch(y){case"VALID":return f[m]=0,f[d]=0,Math.floor((r-w)/t+1);case"SAME_LOWER":case"SAME_UPPER":if(u!==1)throw new Error("Dilation not supported for SAME_UPPER or SAME_LOWER");{let $=((r+t-1)/t-1)*t+s-r;return f[m]=Math.floor(y==="SAME_LOWER"?($+1)/2:$/2),f[d]=$-f[m],Math.floor((r+$-s)/t+1)}default:throw new Error("Unsupported AutoPad type")}else return Math.floor((r+f[m]+f[d]-w)/t+1)}},ei=class{static getShapeOfGemmResult(r,t,u,s,f){if(r.length!==2||u.length!==2)throw new Error("shape need to be of size 2");let m,d,y;t?(m=r[1],d=r[0]):(m=r[0],d=r[1]);let w=-1;if(s?(y=u[0],w=1):(y=u[1],w=0),u[w]!==d)throw new Error("dimension mismatch");if(m<=0||y<=0||d<=0)throw new Error("invalid shape specified");if(f&&!Ot.isValidBroadcast(f,[m,y]))throw new Error("gemm: invalid bias shape for broadcast");return[m,y,d]}},ti=-34028234663852886e22,ri=34028234663852886e22});var ni,Wi,He,ct,se,Je,at,St,ft,ve,Gi,X,ne,ii,Ni,Tu,Tr,Te=oe(()=>{"use strict";$e();Ee();ni=64,Wi=(e,r)=>{if(r===3)throw new Error("vec3 has same alignment as vec4, use vec4 instead");switch(e){case 10:return r>1?`vec${r}<f16>`:"f16";case 1:return r>1?`vec${r}<f32>`:"f32";case 6:return r>1?`vec${r}<i32>`:"i32";case 12:return r>1?`vec${r}<u32>`:"u32";case 7:if(r>1)throw new Error("currently not supported vecX of uint64 yet");return["vec2<u32>","i32"];case 13:if(r>1)throw new Error("currently not supported vecX of uint64 yet");return["vec2<u32>","u32"];case 9:if(r!==4)throw new Error("bool must be vec4");return["u32","vec4<bool>"];default:throw new Error(`Unknown data type: ${e}`)}},He=(e,r=1)=>{let t=Wi(e,r);return typeof t=="string"?t:t[0]},ct=(e,r=1)=>{let t=Wi(e,r);return typeof t=="string"?t:t[1]},se=(...e)=>{let r=[];return e.forEach(t=>{t.length!==0&&r.push({type:12,data:t},{type:12,data:Q.computeStrides(t)})}),r},Je=e=>e%4===0?4:e%2===0?2:1,at=(e="f32",r,t="0")=>!r||r===1?`${e}(${t})`:`vec${r}<${e}>(${t})`,St=(e,r,t)=>e==="f32"?t:r===1?`f32(${t})`:`vec${r}f(${t})`,ft=(e,r)=>r===4?`(${e}.x + ${e}.y + ${e}.z + ${e}.w)`:r===2?`(${e}.x + ${e}.y)`:r===3?`(${e}.x + ${e}.y + ${e}.z)`:e,ve=(e,r,t,u)=>e.startsWith("uniforms.")&&t>4?typeof r=="string"?u==="f16"?`${e}[(${r}) / 8][(${r}) % 8 / 4][(${r}) % 8 % 4]`:`${e}[(${r}) / 4][(${r}) % 4]`:u==="f16"?`${e}[${Math.floor(r/8)}][${Math.floor(r%8/4)}][${r%8%4}]`:`${e}[${Math.floor(r/4)}][${r%4}]`:t>1?`${e}[${r}]`:e,Gi=(e,r,t,u,s)=>{let f=typeof t=="number",m=f?t:t.length,d=[...new Array(m).keys()],y=m<2?"u32":m<=4?`vec${m}<u32>`:`array<u32, ${m}>`,w=Wi(r,s),C=typeof w=="string"?w:w[1],$=typeof w=="string"?w:w[0],T={indices:y,value:C,storage:$,tensor:r},P=te=>typeof te=="string"?te:`${te}u`,I={offsetToIndices:!1,indicesToOffset:!1,broadcastedIndicesToOffset:!1,set:!1,setByIndices:!1,get:!1,getByIndices:!1},O=f?"uniforms.":"",R=`${O}${e}_shape`,z=`${O}${e}_strides`,k="";for(let te=0;te<m-1;te++)k+=`\n    let dim${te} = current / ${ve(z,te,m)};\n    let rest${te} = current % ${ve(z,te,m)};\n    indices[${te}] = dim${te};\n    current = rest${te};\n    `;k+=`indices[${m-1}] = current;`;let G=m<2?"":`\n  fn o2i_${e}(offset: u32) -> ${T.indices} {\n    var indices: ${T.indices};\n    var current = offset;\n    ${k}\n    return indices;\n  }`,U=te=>(I.offsetToIndices=!0,m<2?te:`o2i_${e}(${te})`),q=[];if(m>=2)for(let te=m-1;te>=0;te--)q.push(`${ve(z,te,m)} * (indices[${te}])`);let K=m<2?"":`\n  fn i2o_${e}(indices: ${T.indices}) -> u32 {\n    return ${q.join("+")};\n  }`,J=te=>(I.indicesToOffset=!0,m<2?te:`i2o_${e}(${te})`),ie=(...te)=>m===0?"0u":`${T.indices}(${te.map(P).join(",")})`,ge=(te,fe)=>m<2?`${te}`:`${ve(te,fe,m)}`,L=(te,fe,Se)=>m<2?`${te}=${Se};`:`${ve(te,fe,m)}=${Se};`,ue={},je=(te,fe)=>{I.broadcastedIndicesToOffset=!0;let Se=`${fe.name}broadcastedIndicesTo${e}Offset`;if(Se in ue)return`${Se}(${te})`;let st=[];for(let tt=m-1;tt>=0;tt--){let lt=fe.indicesGet("outputIndices",tt+fe.rank-m);st.push(`${ge(z,tt)} * (${lt} % ${ge(R,tt)})`)}return ue[Se]=`fn ${Se}(outputIndices: ${fe.type.indices}) -> u32 {\n             return ${st.length>0?st.join("+"):"0u"};\n           }`,`${Se}(${te})`},Ve=(te,fe)=>(()=>{if(T.storage===T.value)return`${e}[${te}]=${fe};`;if(T.storage==="vec2<u32>"&&T.value==="i32")return`${e}[${te}]=vec2<u32>(u32(${fe}), select(0u, 0xFFFFFFFFu, ${fe} < 0));`;if(T.storage==="vec2<u32>"&&T.value==="u32")return`${e}[${te}]=vec2<u32>(u32(${fe}), 0u);`;if(T.storage==="u32"&&T.value==="vec4<bool>")return`${e}[${te}]=dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(${fe}));`;throw new Error(`not supported combination of storage type ${T.storage} and value type ${T.value} yet`)})(),Ce=te=>(()=>{if(T.storage===T.value)return`${e}[${te}]`;if(T.storage==="vec2<u32>"&&T.value==="i32")return`i32(${e}[${te}].x)`;if(T.storage==="vec2<u32>"&&T.value==="u32")return`u32(${e}[${te}].x)`;if(T.storage==="u32"&&T.value==="vec4<bool>")return`vec4<bool>(bool(${e}[${te}] & 0xFFu), bool(${e}[${te}] & 0xFF00u), bool(${e}[${te}] & 0xFF0000u), bool(${e}[${te}] & 0xFF000000u))`;throw new Error(`not supported combination of storage type ${T.storage} and value type ${T.value} yet`)})(),ae=m<2?"":`\n  fn get_${e}ByIndices(indices: ${T.indices}) -> ${C} {\n    return ${Ce(`i2o_${e}(indices)`)};\n  }`,ye=m<2?"":(()=>{let te=d.map(Se=>`d${Se}: u32`).join(", "),fe=d.map(Se=>`d${Se}`).join(", ");return`\n  fn get_${e}(${te}) -> ${C} {\n    return get_${e}ByIndices(${ie(fe)});\n  }`})(),Me=(...te)=>{if(te.length!==m)throw new Error(`indices length must be ${m}`);let fe=te.map(P).join(",");return m===0?Ce("0u"):m===1?Ce(fe[0]):(I.get=!0,I.getByIndices=!0,I.indicesToOffset=!0,`get_${e}(${fe})`)},xe=te=>m<2?Ce(te):(I.getByIndices=!0,I.indicesToOffset=!0,`get_${e}ByIndices(${te})`),_e=m<2?"":`\n  fn set_${e}ByIndices(indices: ${T.indices}, value: ${C}) {\n    ${Ve(`i2o_${e}(indices)`,"value")}\n  }`,Ie=m<2?"":(()=>{let te=d.map(Se=>`d${Se}: u32`).join(", "),fe=d.map(Se=>`d${Se}`).join(", ");return`\n  fn set_${e}(${te}, value: ${C}) {\n    set_${e}ByIndices(${ie(fe)}, value);\n  }`})();return{impl:()=>{let te=[],fe=!1;return I.offsetToIndices&&(te.push(G),fe=!0),I.indicesToOffset&&(te.push(K),fe=!0),I.broadcastedIndicesToOffset&&(Object.values(ue).forEach(Se=>te.push(Se)),fe=!0),I.set&&(te.push(Ie),fe=!0),I.setByIndices&&(te.push(_e),fe=!0),I.get&&(te.push(ye),fe=!0),I.getByIndices&&(te.push(ae),fe=!0),!f&&fe&&te.unshift(`const ${R} = ${T.indices}(${t.join(",")});`,`const ${z} = ${T.indices}(${Q.computeStrides(t).join(",")});`),te.join(`\n`)},type:T,offsetToIndices:U,indicesToOffset:J,broadcastedIndicesToOffset:je,indices:ie,indicesGet:ge,indicesSet:L,set:(...te)=>{if(te.length!==m+1)throw new Error(`indices length must be ${m}`);let fe=te[m];if(typeof fe!="string")throw new Error("value must be string");let Se=te.slice(0,m).map(P).join(",");return m===0?Ve("0u",fe):m===1?Ve(Se[0],fe):(I.set=!0,I.setByIndices=!0,I.indicesToOffset=!0,`set_${e}(${Se}, ${fe})`)},setByOffset:Ve,setByIndices:(te,fe)=>m<2?Ve(te,fe):(I.setByIndices=!0,I.indicesToOffset=!0,`set_${e}ByIndices(${te}, ${fe});`),get:Me,getByOffset:Ce,getByIndices:xe,usage:u,name:e,strides:z,shape:R,rank:m}},X=(e,r,t,u=1)=>Gi(e,r,t,"input",u),ne=(e,r,t,u=1)=>Gi(e,r,t,"output",u),ii=(e,r,t,u=1)=>Gi(e,r,t,"internal",u),Ni=class{constructor(r){this.normalizedDispatchGroup=r;this.internalVariables=[];this.variables=[];this.uniforms=[];this.variableIndex=0}guardAgainstOutOfBoundsWorkgroupSizes(r){return`if (global_idx >= ${typeof r=="number"?`${r}u`:r}) { return; }`}mainStart(r=ni){let t=typeof r=="number"?r:r[0],u=typeof r=="number"?1:r[1],s=typeof r=="number"?1:r[2],f=this.normalizedDispatchGroup[1]===1&&this.normalizedDispatchGroup[2]===1,m=f?`@builtin(global_invocation_id) global_id : vec3<u32>,\n    @builtin(workgroup_id) workgroup_id : vec3<u32>,\n    @builtin(local_invocation_id) local_id : vec3<u32>`:`@builtin(local_invocation_id) local_id : vec3<u32>,\n    @builtin(local_invocation_index) local_idx : u32,\n    @builtin(workgroup_id) workgroup_id : vec3<u32>,\n    @builtin(num_workgroups) num_workgroups : vec3<u32>`,d=f?"let global_idx = global_id.x; let local_idx = local_id.x;":`let global_idx = (workgroup_id.z * num_workgroups[0] * num_workgroups[1] +\n          workgroup_id.y * num_workgroups[0] + workgroup_id.x) * ${t*u*s}u + local_idx;`;return`@compute @workgroup_size(${t}, ${u}, ${s})\n  fn main(${m}) {\n    ${d}\n  `}appendVariableUniforms(r){r.rank!==0&&(r.shape.startsWith("uniforms.")&&this.uniforms.push({name:r.shape.replace("uniforms.",""),type:"u32",length:r.rank}),r.strides.startsWith("uniforms.")&&this.uniforms.push({name:r.strides.replace("uniforms.",""),type:"u32",length:r.rank}))}declareVariable(r,t){if(r.usage==="internal")throw new Error("cannot use internal variable with declareVariable(). use registerInternalVariables() instead.");this.variables.push(r),this.appendVariableUniforms(r);let u=r.usage==="input"?"read":"read_write",s=r.type.storage;return`@group(0) @binding(${t}) var<storage, ${u}> ${r.name}: array<${s}>;`}declareVariables(...r){return r.map(t=>this.declareVariable(t,this.variableIndex++)).join(`\n`)}registerInternalVariable(r){if(r.usage!=="internal")throw new Error("cannot use input or output variable with registerInternalVariable(). use declareVariables() instead.");this.internalVariables.push(r),this.appendVariableUniforms(r)}registerInternalVariables(...r){return r.forEach(t=>this.registerInternalVariable(t)),this}registerUniform(r,t,u=1){return this.uniforms.push({name:r,type:t,length:u}),this}registerUniforms(r){return this.uniforms=this.uniforms.concat(r),this}uniformDeclaration(){if(this.uniforms.length===0)return"";let r=[];for(let{name:t,type:u,length:s}of this.uniforms)if(s&&s>4)u==="f16"?r.push(`@align(16) ${t}:array<mat2x4<${u}>, ${Math.ceil(s/8)}>`):r.push(`${t}:array<vec4<${u}>, ${Math.ceil(s/4)}>`);else{let f=s==null||s===1?u:`vec${s}<${u}>`;r.push(`${t}:${f}`)}return`\n      struct Uniforms { ${r.join(", ")} };\n      @group(0) @binding(${this.variableIndex}) var<uniform> uniforms: Uniforms;`}get additionalImplementations(){return this.uniformDeclaration()+this.variables.map(r=>r.impl()).join(`\n`)+this.internalVariables.map(r=>r.impl()).join(`\n`)}},Tu=e=>new Ni(e),Tr=(e,r)=>{let t=e.length,u=[];for(let s=0;s<t;s++){let f=t-1-s,m=e[f]||1;(r[r.length-1-s]||1)>1&&m===1&&u.unshift(f)}return u}});var Rh,Eu,Dh,Bh,xt,Pu,Ou,Er=oe(()=>{"use strict";$e();Ee();ot();Te();Rh=e=>{if(!e||e.length!==1)throw new Error("Transpose requires 1 input.")},Eu=(e,r)=>r&&r.length!==e?[...new Array(e).keys()].reverse():r,Dh=(e,r)=>Q.sortBasedOnPerm(e,Eu(e.length,r)),Bh=(e,r,t,u)=>{let s=[];s.push(`fn perm(i: ${u.type.indices}) -> ${t.type.indices} {\n    var a: ${t.type.indices};`);for(let f=0;f<r;++f)s.push(t.indicesSet("a",e[f],`i[${f}]`));return s.push("return a;}"),s.join(`\n`)},xt=(e,r)=>{let t=e.dataType,u=e.dims.length,s=Eu(u,r),f=Dh(e.dims,s),m=ne("output",t,f.length),d=X("a",t,u),y=w=>`\n  ${w.registerUniform("output_size","u32").declareVariables(d,m)}\n\n  ${Bh(s,u,d,m)}\n\n  ${w.mainStart()}\n    ${w.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n\n    let indices = ${m.offsetToIndices("global_idx")};\n    let aIndices = perm(indices);\n\n    ${m.setByOffset("global_idx",d.getByIndices("aIndices"))}\n  }`;return{name:"Transpose",shaderCache:{hint:`${r}`,inputDependencies:["rank"]},getRunData:w=>{let C=Q.size(f);return{outputs:[{dims:f,dataType:w[0].dataType}],dispatchGroup:{x:Math.ceil(C/64)},programUniforms:[{type:12,data:C},...se(w[0].dims,f)]}},getShaderSource:y}},Pu=(e,r)=>{Rh(e.inputs),e.compute(xt(e.inputs[0],r.perm))},Ou=e=>ke({perm:e.perm})});var Mh,zh,Uh,jh,Vh,Nh,Wh,Gh,Hh,Lh,kt,ku,Ru,Du,Bu,Mu,zu,Uu,ju,Vu,Nu,Wu=oe(()=>{"use strict";$e();Ee();Te();oi();Er();Mh={max:"select(bestValue, candidate, candidate > bestValue)",min:"select(bestValue, candidate, candidate < bestValue)",mean:"bestValue + candidate",sum:"bestValue + candidate",prod:"bestValue * candidate",sumSquare:"bestValue + candidate * candidate",logSumExp:"bestValue + exp(candidate)",l1:"bestValue + abs(candidate)",l2:"bestValue + candidate * candidate",logSum:"bestValue + candidate"},zh={max:"select(bestValue, candidate, candidate > bestValue)",min:"select(bestValue, candidate, candidate < bestValue)",mean:"bestValue + candidate",sum:"bestValue + candidate",prod:"bestValue * candidate",sumSquare:"bestValue + candidate",logSumExp:"bestValue + candidate",l1:"bestValue + candidate",l2:"bestValue + candidate",logSum:"bestValue + candidate"},Uh={max:"_A[offset]",min:"_A[offset]",mean:"0",sum:"0",prod:"1",sumSquare:"0",logSumExp:"0",l1:"0",l2:"0",logSum:"0"},jh={max:"bestValue",min:"bestValue",sum:"bestValue",prod:"bestValue",sumSquare:"bestValue",logSumExp:"log(bestValue)",l1:"bestValue",l2:"sqrt(bestValue)",logSum:"log(bestValue)"},Vh=(e,r)=>{let t=[];for(let u=r-e;u<r;++u)t.push(u);return t},Nh=(e,r)=>{let t=[],u=e.length;for(let f=0;f<u;f++)r.indexOf(f)===-1&&t.push(e[f]);let s=r.map(f=>e[f]);return[t,s]},Wh=(e,r)=>{let t=e.length+r.length,u=[],s=0;for(let f=0;f<t;f++)r.indexOf(f)===-1?u.push(e[s++]):u.push(1);return u},Gh=(e,r)=>{for(let t=0;t<e.length;++t)if(e[e.length-t-1]!==r-1-t)return!1;return!0},Hh=(e,r)=>{let t=[];if(!Gh(e,r)){for(let u=0;u<r;++u)e.indexOf(u)===-1&&t.push(u);e.forEach(u=>t.push(u))}return t},Lh=(e,r,t,u,s,f,m)=>{let d=t[0].dims,y=Q.size(f),w=Q.size(m),C=X("_A",t[0].dataType,d),$=ne("output",s,f),T=32,P=`\n          var<workgroup> aBestValues : array<${$.type.storage}, ${T}>;\n       `;return{name:e,shaderCache:r,getShaderSource:O=>`\n        ${O.registerUniform("reduceSize","u32").declareVariables(C,$)}\n        ${P}\n        fn DIV_CEIL(a : u32, b : u32) -> u32 {\n          return ((a - 1u) / b + 1u);\n         }\n         ${O.mainStart(T)}\n\n          let outputIndex = global_idx / ${T};\n          let offset = outputIndex * uniforms.reduceSize;\n\n          var bestValue = ${$.type.storage}(${Uh[u]});\n          let Length = uniforms.reduceSize;\n          for (var k = local_idx; k < Length; k = k + ${T}) {\n           let candidate = ${$.type.storage}(${C.getByOffset("offset + k")});\n           bestValue = ${Mh[u]};\n          }\n          aBestValues[local_idx] = bestValue;\n          workgroupBarrier();\n\n         var reduceSize = min(Length, ${T}u);\n         for (var currentSize = reduceSize / 2u; reduceSize > 1u;\n             currentSize = reduceSize / 2u) {\n           let interval = DIV_CEIL(reduceSize, 2u);\n           if (local_idx < currentSize) {\n            let candidate = aBestValues[local_idx + interval];\n            bestValue = ${zh[u]};\n            aBestValues[local_idx] = bestValue;\n           }\n           reduceSize = interval;\n           workgroupBarrier();\n         }\n\n         if (local_idx == 0u) {\n          ${$.setByOffset("outputIndex",`${u==="mean"?`bestValue / ${$.type.storage}(uniforms.reduceSize)`:`${jh[u]}`}`)};\n         }\n        }`,getRunData:()=>({outputs:[{dims:f,dataType:s}],dispatchGroup:{x:y},programUniforms:[{type:12,data:w}]})}},kt=(e,r,t,u)=>{let s=e.inputs.length===1?t:Hi(e.inputs,t),f=s.axes;f.length===0&&!s.noopWithEmptyAxes&&(f=e.inputs[0].dims.map((P,I)=>I));let m=Q.normalizeAxes(f,e.inputs[0].dims.length),d=m,y=e.inputs[0],w=Hh(d,e.inputs[0].dims.length);w.length>0&&(y=e.compute(xt(e.inputs[0],w),{inputs:[0],outputs:[-1]})[0],d=Vh(d.length,y.dims.length));let[C,$]=Nh(y.dims,d),T=C;s.keepDims&&(T=Wh(C,m)),e.compute(Lh(r,{hint:s.cacheKey,inputDependencies:["type"]},[y],u,e.inputs[0].dataType,T,$),{inputs:[y]})},ku=(e,r)=>{kt(e,"ReduceMeanShared",r,"mean")},Ru=(e,r)=>{kt(e,"ReduceL1Shared",r,"l1")},Du=(e,r)=>{kt(e,"ReduceL2Shared",r,"l2")},Bu=(e,r)=>{kt(e,"ReduceLogSumExpShared",r,"logSumExp")},Mu=(e,r)=>{kt(e,"ReduceMaxShared",r,"max")},zu=(e,r)=>{kt(e,"ReduceMinShared",r,"min")},Uu=(e,r)=>{kt(e,"ReduceProdShared",r,"prod")},ju=(e,r)=>{kt(e,"ReduceSumShared",r,"sum")},Vu=(e,r)=>{kt(e,"ReduceSumSquareShared",r,"sumSquare")},Nu=(e,r)=>{kt(e,"ReduceLogSumShared",r,"logSum")}});var Rt,Fh,ai,Hi,Dt,qh,Kh,Yh,Zh,Qh,Xh,Jh,eg,tg,rg,Bt,Gu,Hu,Lu,Fu,qu,Ku,Yu,Zu,Qu,Xu,oi=oe(()=>{"use strict";$e();Ee();ot();Te();Wu();Rt=e=>{if(!e||e.length===0||e.length>2)throw new Error("Reduce op requires 1 or 2 inputs.");if(e.length===2&&e[1].dims.length!==1)throw new Error("Invalid axes input dims.")},Fh=e=>["","",`var value = ${e.getByIndices("input_indices")};`,""],ai=(e,r,t,u,s,f,m=!1,d=!1)=>{let y=[],w=t[0].dims,C=w.length,$=Q.normalizeAxes(s,C),T=!d&&$.length===0;w.forEach((R,z)=>{T||$.indexOf(z)>=0?m&&y.push(1):y.push(R)});let P=y.length,I=Q.size(y);return{name:e,shaderCache:r,getShaderSource:R=>{let z=[],k=X("_A",t[0].dataType,C),G=ne("output",f,P),U=u(k,G,$),q=U[2];for(let K=0,J=0;K<C;K++)T||$.indexOf(K)>=0?(m&&J++,q=`for(var j${K}: u32 = 0; j${K} < ${w[K]}; j${K}++) {\n                  ${U[2].includes("last_index")?`let last_index = j${K};`:""}\n                  ${k.indicesSet("input_indices",K,`j${K}`)}\n                  ${q}\n                }`):(z.push(`${k.indicesSet("input_indices",K,G.indicesGet("output_indices",J))};`),J++);return`\n\n        ${R.registerUniform("output_size","u32").declareVariables(k,G)}\n\n        ${R.mainStart()}\n          ${R.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n          var input_indices: ${k.type.indices};\n          let output_indices = ${G.offsetToIndices("global_idx")};\n\n          ${z.join(`\n`)}\n          ${U[0]}       // init ops for reduce max/min\n          ${U[1]}\n          ${q}\n          ${U[3]}\n          ${U.length===4?G.setByOffset("global_idx","value"):U.slice(4).join(`\n`)}\n        }`},getRunData:()=>({outputs:[{dims:y,dataType:f}],dispatchGroup:{x:Math.ceil(I/64)},programUniforms:[{type:12,data:I},...se(w,y)]})}},Hi=(e,r)=>{let t=[];return e[1].dims[0]>0&&e[1].getBigInt64Array().forEach(u=>t.push(Number(u))),ke({axes:t,keepDims:r.keepDims,noopWithEmptyAxes:r.noopWithEmptyAxes})},Dt=(e,r,t,u)=>{let s=e.inputs,f=s.length===1?t:Hi(s,t);e.compute(ai(r,{hint:f.cacheKey,inputDependencies:["rank"]},[s[0]],f.noopWithEmptyAxes&&f.axes.length===0?Fh:u,f.axes,s[0].dataType,f.keepDims,f.noopWithEmptyAxes),{inputs:[0]})},qh=(e,r)=>{Rt(e.inputs),Dt(e,"ReduceLogSum",r,(u,s)=>[`var value = ${s.type.storage}(0);`,"",`value += ${u.getByIndices("input_indices")};`,"value = log(value);"])},Kh=(e,r)=>{Rt(e.inputs),Dt(e,"ReduceL1",r,(u,s)=>[`var value = ${s.type.storage}(0);`,"",`value += abs(${u.getByIndices("input_indices")});`,""])},Yh=(e,r)=>{Rt(e.inputs),Dt(e,"ReduceL2",r,(u,s)=>[`var t = ${s.type.value}(0); var value = ${s.type.value}(0);`,"",`t = ${u.getByIndices("input_indices")}; value += (t * t);`,"value = sqrt(value);"])},Zh=(e,r)=>{Rt(e.inputs),Dt(e,"ReduceLogSumExp",r,(u,s)=>[`var value = ${s.type.storage}(0);`,"",`value += exp(${u.getByIndices("input_indices")});`,"value = log(value);"])},Qh=(e,r)=>{Rt(e.inputs),Dt(e,"ReduceMax",r,(u,s,f)=>{let m=[];for(let d=0;d<u.rank;d++)(f.indexOf(d)>=0||f.length===0)&&m.push(u.indicesSet("input_indices",d,0));return[`${m.join(`\n`)}`,`var value = ${u.getByIndices("input_indices")};`,`value = max(value, ${u.getByIndices("input_indices")});`,""]})},Xh=(e,r)=>{Rt(e.inputs),Dt(e,"ReduceMean",r,(u,s,f)=>{let m=1;for(let d=0;d<u.rank;d++)(f.indexOf(d)>=0||f.length===0)&&(m*=e.inputs[0].dims[d]);return["var sum = f32(0);","",`sum += f32(${u.getByIndices("input_indices")});`,`let value = ${s.type.value}(sum / ${m});`]})},Jh=(e,r)=>{Rt(e.inputs),Dt(e,"ReduceMin",r,(u,s,f)=>{let m=[];for(let d=0;d<u.rank;d++)(f.indexOf(d)>=0||f.length===0)&&m.push(`input_indices[${d}] = 0;`);return[`${m.join(`\n`)}`,`var value = ${u.getByIndices("input_indices")};`,`value = min(value, ${u.getByIndices("input_indices")});`,""]})},eg=(e,r)=>{Rt(e.inputs),Dt(e,"ReduceProd",r,(u,s)=>[`var value = ${s.type.storage}(1);`,"",`value *= ${u.getByIndices("input_indices")};`,""])},tg=(e,r)=>{Rt(e.inputs),Dt(e,"ReduceSum",r,(u,s)=>[`var value = ${s.type.storage}(0);`,"",`value += ${u.getByIndices("input_indices")};`,""])},rg=(e,r)=>{Rt(e.inputs),Dt(e,"ReduceSumSquare",r,(u,s)=>[`var t = ${s.type.value}(0); var value = ${s.type.value}(0);`,"",`t = ${u.getByIndices("input_indices")}; value += t * t;`,""])},Bt=(e,r,t)=>{if(r.length===0)return t;let u=1,s=1;for(let f=0;f<r.length;f++)r.indexOf(f)===-1?u*=e[f]:s*=e[f];return s<32&&u>1024},Gu=(e,r)=>{Bt(e.inputs[0].dims,r.axes,r.noopWithEmptyAxes)?Xh(e,r):ku(e,r)},Hu=(e,r)=>{Bt(e.inputs[0].dims,r.axes,r.noopWithEmptyAxes)?Kh(e,r):Ru(e,r)},Lu=(e,r)=>{Bt(e.inputs[0].dims,r.axes,r.noopWithEmptyAxes)?Yh(e,r):Du(e,r)},Fu=(e,r)=>{Bt(e.inputs[0].dims,r.axes,r.noopWithEmptyAxes)?Zh(e,r):Bu(e,r)},qu=(e,r)=>{Bt(e.inputs[0].dims,r.axes,r.noopWithEmptyAxes)?Qh(e,r):Mu(e,r)},Ku=(e,r)=>{Bt(e.inputs[0].dims,r.axes,r.noopWithEmptyAxes)?Jh(e,r):zu(e,r)},Yu=(e,r)=>{Bt(e.inputs[0].dims,r.axes,r.noopWithEmptyAxes)?eg(e,r):Uu(e,r)},Zu=(e,r)=>{Bt(e.inputs[0].dims,r.axes,r.noopWithEmptyAxes)?tg(e,r):ju(e,r)},Qu=(e,r)=>{Bt(e.inputs[0].dims,r.axes,r.noopWithEmptyAxes)?rg(e,r):Vu(e,r)},Xu=(e,r)=>{Bt(e.inputs[0].dims,r.axes,r.noopWithEmptyAxes)?qh(e,r):Nu(e,r)}});var Ju,el,tl,Li,rl=oe(()=>{"use strict";$e();ot();oi();Ju=e=>{if(!e||e.length===0||e.length>2)throw new Error("ArgMinMaxOp op requires 1 or 2 inputs.");if(e[0].dataType!==1)throw new Error("Invalid input type.")},el=(e,r)=>{Ju(e.inputs);let t=(u,s,f)=>{let m=[];for(let d=0;d<u.rank;d++)(f.indexOf(d)>=0||f.length===0)&&m.push(`input_indices[${d}] = 0;`);return[`${m.join(`\n`)}`,`var value = ${u.getByIndices("input_indices")};\nvar best_index : i32 = 0;`,`if (${u.getByIndices("input_indices")} ${r.selectLastIndex>0?"<=":"<"} value) {\n         value = ${u.getByIndices("input_indices")};\n         best_index = i32(last_index);\n       }`,"",s.setByOffset("global_idx","best_index")]};e.compute(ai("ArgMin",{hint:r.cacheKey,inputDependencies:["rank"]},[e.inputs[0]],t,[r.axis],7,r.keepDims),{inputs:[0]})},tl=(e,r)=>{Ju(e.inputs);let t=(u,s,f)=>{let m=[];for(let d=0;d<u.rank;d++)(f.indexOf(d)>=0||f.length===0)&&m.push(`input_indices[${d}] = 0;`);return[`${m.join(`\n`)}`,`var value = ${u.getByIndices("input_indices")};\nvar best_index : i32 = 0;`,`if (${u.getByIndices("input_indices")} ${r.selectLastIndex>0?">=":">"} value) {\n         value = ${u.getByIndices("input_indices")};\n         best_index = i32(last_index);\n       }`,"",s.setByOffset("global_idx","best_index")]};e.compute(ai("argMax",{hint:r.cacheKey,inputDependencies:["rank"]},[e.inputs[0]],t,[r.axis],7,r.keepDims),{inputs:[0]})},Li=e=>ke(e)});var ng,ig,og,ag,si,sg,nl,Fi=oe(()=>{"use strict";$e();Xn();Te();ng=(e,r)=>{let t=e[0],u=e[1],s=e[2],f=e[3],m=e[4],d=e[5];if(m&&d)throw new Error("Attention cannot have both past and relative_position_bias");if(t.dims.length!==3)throw new Error(\'Input "input" must have 3 dimensions\');let y=t.dims[0],w=t.dims[1],C=t.dims[2];if(s.dims.length!==1)throw new Error(\'Input "bias" is expected to have 1 dimensions\');if(u.dims.length!==2)throw new Error(\'Input "weights" is expected to have 2 dimensions\');if(u.dims[0]!==C)throw new Error("Input 1 dimension 0 should have same length as dimension 2 of input 0");if(s.dims[0]!==u.dims[1])throw new Error(\'Input "bias" dimension 0 should have same length as dimension 1 of input "weights"\');let $=s.dims[0]/3,T=$,P=T;if(r.qkvHiddenSizes.length>0){if(r.qkvHiddenSizes.length!==3)throw new Error("qkv_hidden_sizes attribute should have 3 elements");for(let G of r.qkvHiddenSizes)if(G%r.numHeads!==0)throw new Error("qkv_hidden_sizes should be divisible by num_heads");$=r.qkvHiddenSizes[0],T=r.qkvHiddenSizes[1],P=r.qkvHiddenSizes[2]}let I=w;if($!==T)throw new Error("qkv_hidden_sizes first element should be same as the second");if(s.dims[0]!==$+T+P)throw new Error(\'Input "bias" dimension 0 should have same length as sum of Q/K/V hidden sizes\');let O=0;if(m){if(T!==P)throw new Error(\'Input "past" expect k_hidden_size == v_hidden_size\');if(m.dims.length!==5)throw new Error(\'Input "past" must have 5 dimensions\');if(m.dims[0]!==2)throw new Error(\'Input "past" first dimension must be 2\');if(m.dims[1]!==y)throw new Error(\'Input "past" second dimension must be batch_size\');if(m.dims[2]!==r.numHeads)throw new Error(\'Input "past" third dimension must be num_heads\');if(m.dims[4]!==T/r.numHeads)throw new Error(\'Input "past" fifth dimension must be k_hidden_size / num_heads\');r.pastPresentShareBuffer||(O=m.dims[3])}let R=I+O,z=-1,k=0;if(f)throw new Error("Mask not supported");if(m)throw new Error("past is not supported");if(d)throw new Error("relativePositionBias is not supported");return{batchSize:y,sequenceLength:w,pastSequenceLength:O,kvSequenceLength:I,totalSequenceLength:R,maxSequenceLength:z,inputHiddenSize:C,hiddenSize:$,vHiddenSize:P,headSize:Math.floor($/r.numHeads),vHeadSize:Math.floor(P/r.numHeads),numHeads:r.numHeads,isUnidirectional:!1,pastPresentShareBuffer:!1,maskFilterValue:r.maskFilterValue,maskType:k,scale:r.scale,broadcastResPosBias:!1,passPastInKv:!1,qkvFormat:1}},ig=(e,r,t,u)=>{let s=Je(u),f=64,m=u/s;m<f?f=1:m/8<64&&(f=Math.ceil(m/8));let d=Math.ceil(u/s/f),y=[{type:r.dataType,data:1/u},{type:12,data:m},{type:12,data:d}],w=He(r.dataType,s),C=$=>{let T=ne("x",r.dataType,r.dims,s),P="thread_max_vector";s===2?P="max(thread_max_vector.x, thread_max_vector.y)":s===4&&(P="max(max(thread_max_vector.x, thread_max_vector.y), max(thread_max_vector.z, thread_max_vector.w))");let I=ct(r.dataType),O=[{name:"d_inv",type:I},{name:"d_comp",type:"u32"},{name:"elements_per_wg",type:"u32"}];return`\n  var<workgroup> wgMax: array<f32, ${f}>;\n  var<workgroup> wgSum: array<f32, ${f}>;\n  ${$.registerUniforms(O).declareVariables(T)}\n  ${$.mainStart([f,1,1])}\n    let localOffset = local_idx * uniforms.elements_per_wg;\n    let offset: u32 = workgroup_id.x * uniforms.d_comp + localOffset;\n\n    var thread_max_vector = ${at("f32",s,"-3.402823e+38f")};\n    for (var i: u32 = 0; i < uniforms.elements_per_wg && i + localOffset < uniforms.d_comp; i++) {\n      thread_max_vector = max(${St(I,s,"x[offset + i]")}, thread_max_vector);\n    }\n    wgMax[local_idx] = ${P};\n    workgroupBarrier();\n\n    var maxValue = -3.402823e+38f;\n    for (var i = 0u; i < ${f}; i++) {\n      maxValue = max(wgMax[i], maxValue);\n    }\n\n    var sumVector = ${at("f32",s,"0")};\n    for (var i: u32 = 0; i < uniforms.elements_per_wg && i + localOffset < uniforms.d_comp; i++) {\n      sumVector += exp(${St(I,s,"x[offset + i]")} - maxValue);\n    }\n    wgSum[local_idx] = ${ft("sumVector",s)};\n    workgroupBarrier();\n\n    var sum: f32 = 0;\n    for (var i = 0u; i < ${f}; i++) {\n      sum += wgSum[i];\n    }\n\n    if (sum == 0) {\n      for (var i: u32 = 0; i < uniforms.elements_per_wg && i + localOffset < uniforms.d_comp; i++) {\n        x[offset + i] = ${at(I,s,"uniforms.d_inv")};\n      }\n    } else {\n      for (var i: u32 = 0; i < uniforms.elements_per_wg && i + localOffset < uniforms.d_comp; i++) {\n        let f32input = ${St(I,s,"x[offset + i]")};\n        x[offset + i] = ${T.type.value}(exp(f32input - maxValue) / sum);\n      }\n    }\n  }`};e.compute({name:"AttentionProbsSoftmax",shaderCache:{hint:`${f};${w};${s}`},getShaderSource:C,getRunData:()=>({outputs:[],dispatchGroup:{x:t},programUniforms:y})},{inputs:[r],outputs:[]})},og=(e,r,t,u,s,f)=>{let m=[s.batchSize,s.numHeads,s.sequenceLength,s.kvSequenceLength+s.pastSequenceLength],d=f.scale===0?1/Math.sqrt(s.headSize):f.scale,y=Je(s.headSize),w=s.headSize/y,C=12,$={x:Math.ceil(s.totalSequenceLength/C),y:Math.ceil(s.sequenceLength/C),z:s.batchSize*s.numHeads},T=[{type:12,data:s.sequenceLength},{type:12,data:w},{type:12,data:s.totalSequenceLength},{type:12,data:s.kvSequenceLength},{type:r.dataType,data:d}],P=[r,t],I=R=>{let z=X("q",r.dataType,r.dims,y),k=X("key",t.dataType,t.dims,y),G=ne("output",r.dataType,m),U=He(r.dataType),q=[{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"kv_sequence_length",type:"u32"},{name:"alpha",type:U}];return`\n  const beta: ${U} = 1.0;\n  const TILE_SIZE = ${C}u;\n\n  var<workgroup> tileQ: array<${z.type.storage}, ${C*C}>;\n  var<workgroup> tileK: array<${z.type.storage}, ${C*C}>;\n  ${R.registerUniforms(q).declareVariables(z,k,G)}\n  ${R.mainStart([C,C,1])}\n    // x holds the N and y holds the M\n    let headIdx = workgroup_id.z;\n    let m = workgroup_id.y * TILE_SIZE;\n    let n = workgroup_id.x * TILE_SIZE;\n    let lm = m + local_id.y;\n    let ln = n + local_id.x;\n\n    let qOffset = uniforms.M * uniforms.K * headIdx + m * uniforms.K;\n    let kOffset = uniforms.kv_sequence_length * uniforms.K * headIdx + n * uniforms.K;\n\n    var value = ${at(U,y)};\n    for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {\n      if (m + local_id.y < uniforms.M && w + local_id.x < uniforms.K) {\n        tileQ[TILE_SIZE * local_id.y + local_id.x] = q[qOffset + local_id.y * uniforms.K + w + local_id.x];\n      }\n      if (n + local_id.y < uniforms.N && w + local_id.x < uniforms.K) {\n        tileK[TILE_SIZE * local_id.y + local_id.x] = key[kOffset + local_id.y * uniforms.K + w + local_id.x];\n      }\n      workgroupBarrier();\n\n      for (var k: u32 = 0u; k<TILE_SIZE && w+k < uniforms.K; k++) {\n        value += tileQ[TILE_SIZE * local_id.y + k] * tileK[TILE_SIZE * local_id.x + k];\n      }\n\n      workgroupBarrier();\n    }\n\n    let headOffset = headIdx * uniforms.M * uniforms.N;\n    if (lm < uniforms.M && ln < uniforms.N) {\n      let outputIdx = headOffset + lm * uniforms.N + ln;\n      output[outputIdx] = ${ft("value",y)} * uniforms.alpha;\n    }\n  }`},O=e.compute({name:"AttentionProbs",shaderCache:{hint:`${y}`,inputDependencies:["type","type"]},getRunData:()=>({outputs:[{dims:m,dataType:r.dataType,gpuDataType:0}],dispatchGroup:$,programUniforms:T}),getShaderSource:I},{inputs:P,outputs:[-1]})[0];return ig(e,O,s.batchSize*s.numHeads*s.sequenceLength,s.totalSequenceLength),O},ag=(e,r,t,u)=>{let s=[u.batchSize,u.sequenceLength,u.vHiddenSize],f=12,m={x:Math.ceil(u.vHeadSize/f),y:Math.ceil(u.sequenceLength/f),z:u.batchSize*u.numHeads},d=[{type:12,data:u.sequenceLength},{type:12,data:u.totalSequenceLength},{type:12,data:u.vHeadSize},{type:12,data:u.numHeads},{type:12,data:u.vHiddenSize}],y=w=>{let C=X("probs",r.dataType,r.dims),$=X("v",t.dataType,t.dims),T=ne("output",r.dataType,s),P=[{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"v_hidden_size",type:"u32"}];return`\n  const TILE_SIZE = ${f}u;\n  var<workgroup> tileQ: array<${C.type.value}, ${f*f}>;\n  var<workgroup> tileK: array<${C.type.value}, ${f*f}>;\n  ${w.registerUniforms(P).declareVariables(C,$,T)}\n  ${w.mainStart([f,f,1])}\n   let headIdx = workgroup_id.z;\n   let m = workgroup_id.y * TILE_SIZE + local_id.y;\n   let n = workgroup_id.x * TILE_SIZE + local_id.x;\n\n   let offsetA = headIdx * (uniforms.M * uniforms.K) + m * uniforms.K;\n   let offsetB = headIdx * (uniforms.N * uniforms.K) + n;\n\n   var value = ${C.type.storage}(0);\n   for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {\n     if (m < uniforms.M && w + local_id.x < uniforms.K) {\n       tileQ[TILE_SIZE * local_id.y + local_id.x] = probs[offsetA + w + local_id.x];\n     }\n     if (n < uniforms.N && w + local_id.y < uniforms.K) {\n       tileK[TILE_SIZE * local_id.y + local_id.x] = v[offsetB + (w + local_id.y) * uniforms.N];\n     }\n     workgroupBarrier();\n     for (var k: u32 = 0u; k<TILE_SIZE && w+k < uniforms.K; k++) {\n       value += tileQ[TILE_SIZE * local_id.y + k] * tileK[TILE_SIZE * k + local_id.x];\n     }\n     workgroupBarrier();\n   }\n\n   // we need to transpose output from BNSH_v to BSND_v\n   let batchIdx = workgroup_id.z / uniforms.num_heads;\n   let currentBatchHeadNumber = workgroup_id.z % uniforms.num_heads;\n   let headOffset = (batchIdx * uniforms.M * uniforms.num_heads + currentBatchHeadNumber) * uniforms.N;\n   if (m < uniforms.M && n < uniforms.N) {\n     let outputIdx = batchIdx * uniforms.M *uniforms.v_hidden_size + m * uniforms.v_hidden_size\n       + currentBatchHeadNumber * uniforms.N + n;\n     output[outputIdx] = value;\n   }\n  }`};return e.compute({name:"AttentionScore",shaderCache:{inputDependencies:["type","type"]},getRunData:()=>({outputs:[{dims:s,dataType:r.dataType,gpuDataType:0}],dispatchGroup:m,programUniforms:d}),getShaderSource:y},{inputs:[r,t],outputs:[0]})[0]},si=(e,r,t,u,s,f,m,d,y,w,C)=>{let $=og(e,r,t,y,w,C);ag(e,$,u,w)},sg=(e,r)=>{let t=[r.batchSize,r.numHeads,r.sequenceLength,r.headSize],u=r.sequenceLength,s=r.inputHiddenSize,f=r.headSize,m=12,d={x:Math.ceil(r.headSize/m),y:Math.ceil(r.sequenceLength/m),z:r.batchSize*r.numHeads},y=[e.inputs[0],e.inputs[1],e.inputs[2]],w=[{type:12,data:u},{type:12,data:s},{type:12,data:f},{type:12,data:r.numHeads},{type:12,data:r.headSize},{type:12,data:r.hiddenSize},{type:12,data:r.hiddenSize+r.hiddenSize+r.vHiddenSize}],C=$=>{let T=ne("output_q",y[0].dataType,t),P=ne("output_k",y[0].dataType,t),I=ne("output_v",y[0].dataType,t),O=X("input",y[0].dataType,y[0].dims),R=X("weight",y[1].dataType,y[1].dims),z=X("bias",y[2].dataType,y[2].dims),k=O.type.storage,G=[{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"head_size",type:"u32"},{name:"hidden_size",type:"u32"},{name:"ldb",type:"u32"}];return`\n  const TILE_SIZE = ${m}u;\n  var<workgroup> tileInput: array<${k}, ${m*m}>;\n  var<workgroup> tileWeightQ: array<${k}, ${m*m}>;\n  var<workgroup> tileWeightK: array<${k}, ${m*m}>;\n  var<workgroup> tileWeightV: array<${k}, ${m*m}>;\n  ${$.registerUniforms(G).declareVariables(O,R,z,T,P,I)}\n  ${$.mainStart([m,m,1])}\n    let batchIndex = workgroup_id.z / uniforms.num_heads;\n    let headNumber = workgroup_id.z % uniforms.num_heads;\n    let m = workgroup_id.y * TILE_SIZE + local_id.y;\n    let n = workgroup_id.x * TILE_SIZE + local_id.x;\n\n    let inputOffset = batchIndex * (uniforms.M * uniforms.K) + m * uniforms.K;\n    let biasOffsetQ = headNumber * uniforms.head_size;\n    let biasOffsetK = uniforms.hidden_size + biasOffsetQ;\n    let biasOffsetV = uniforms.hidden_size + biasOffsetK;\n\n    var valueQ = ${k}(0);\n    var valueK = ${k}(0);\n    var valueV = ${k}(0);\n    for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {\n      if (m < uniforms.M && w + local_id.x < uniforms.K) {\n        tileInput[TILE_SIZE * local_id.y + local_id.x] = input[inputOffset + w + local_id.x];\n      }\n      if (n < uniforms.N && w + local_id.y < uniforms.K) {\n        let offset = n + (w + local_id.y) * uniforms.ldb;\n        tileWeightQ[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetQ + offset];\n        tileWeightK[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetK + offset];\n        tileWeightV[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetV + offset];\n      }\n      workgroupBarrier();\n      for (var k: u32 = 0u; k<TILE_SIZE && w+k < uniforms.K; k++) {\n        let inputTileOffset = TILE_SIZE * local_id.y + k;\n        let weightTileOffset = TILE_SIZE * k + local_id.x;\n        valueQ += tileInput[inputTileOffset] * tileWeightQ[weightTileOffset];\n        valueK += tileInput[inputTileOffset] * tileWeightK[weightTileOffset];\n        valueV += tileInput[inputTileOffset] * tileWeightV[weightTileOffset];\n      }\n\n      workgroupBarrier();\n    }\n\n    let headOffset = (m * uniforms.N + n) % uniforms.head_size;\n    valueQ += bias[headOffset + biasOffsetQ];\n    valueK += bias[headOffset + biasOffsetK];\n    valueV += bias[headOffset + biasOffsetV];\n\n    let offset = workgroup_id.z * uniforms.M * uniforms.N;\n    if (m < uniforms.M && n < uniforms.N) {\n      let outputIdx = offset + m * uniforms.N + n;\n      output_q[outputIdx] = valueQ;\n      output_k[outputIdx] = valueK;\n      output_v[outputIdx] = valueV;\n    }\n  }`};return e.compute({name:"AttentionPrepare",shaderCache:{inputDependencies:["type","type","type"]},getRunData:()=>({outputs:[{dims:t,dataType:e.inputs[0].dataType,gpuDataType:0},{dims:t,dataType:e.inputs[0].dataType,gpuDataType:0},{dims:t,dataType:e.inputs[0].dataType,gpuDataType:0}],dispatchGroup:d,programUniforms:w}),getShaderSource:C},{inputs:y,outputs:[-1,-1,-1]})},nl=(e,r)=>{let t=ng(e.inputs,r),[u,s,f]=sg(e,t);return si(e,u,s,f,e.inputs[4],void 0,void 0,void 0,e.inputs[5],t,r)}});var ug,lg,dg,il,ol=oe(()=>{"use strict";Ar();$e();Ee();ot();Te();ug=(e,r)=>{if(!e||e.length!==5)throw new Error("BatchNormalization requires 5 inputs");let t=(u,s,f)=>{let m=s.length;if(m!==u.length)throw new Error(`${f}: num dimensions != ${m}`);s.forEach((d,y)=>{if(d!==u[y])throw new Error(`${f}: dim[${y}] do not match`)})};if(e[0].dims.length>1){let u=r.format==="NHWC"?r.spatial?e[0].dims.slice(-1):e[0].dims.slice(-1).concat(e[0].dims.slice(1,e[0].dims.length-1)):e[0].dims.slice(1,r.spatial?2:void 0);t(e[1].dims,u,"Invalid input scale"),t(e[2].dims,u,"Invalid input B"),t(e[3].dims,u,"Invalid input mean"),t(e[4].dims,u,"Invalid input var")}else t(e[1].dims,[1],"Invalid input scale"),t(e[2].dims,[1],"Invalid input B"),t(e[3].dims,[1],"Invalid input mean"),t(e[4].dims,[1],"Invalid input var")},lg=(e,r)=>{let{epsilon:t,spatial:u,format:s}=r,f=e[0].dims,m=u?Je(f[f.length-1]):1,d=s==="NHWC"&&f.length>1?m:1,y=Q.size(f)/m,w=u,C=w?f.length:f,$=X("x",e[0].dataType,e[0].dims,m),T=X("scale",e[1].dataType,e[1].dims,d),P=X("bias",e[2].dataType,e[2].dims,d),I=X("inputMean",e[3].dataType,e[3].dims,d),O=X("inputVar",e[4].dataType,e[4].dims,d),R=ne("y",e[0].dataType,C,m),z=()=>{let G="";if(u)G=`let cOffset = ${f.length===1?"0u":s==="NHWC"?`outputIndices[${f.length-1}] / ${m}`:"outputIndices[1]"};`;else if(s==="NCHW")G=`\n            ${R.indicesSet("outputIndices","0","0")}\n            let cOffset = ${R.indicesToOffset("outputIndices")};`;else{G=`var cIndices = ${T.type.indices}(0);\n                       cIndices[0] = outputIndices[${f.length-1}];`;for(let U=1;U<T.rank;U++)G+=`cIndices[${U}] = outputIndices[${U}];`;G+=`let cOffset = ${T.indicesToOffset("cIndices")};`}return G},k=G=>`\n  const epsilon = ${t};\n  ${G.registerUniform("outputSize","u32").declareVariables($,T,P,I,O,R)}\n  ${G.mainStart()}\n  ${G.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n    var outputIndices = ${R.offsetToIndices(`global_idx * ${m}`)};\n    ${z()}\n    let scale = ${T.getByOffset("cOffset")};\n    let bias = ${P.getByOffset("cOffset")};\n    let inputMean = ${I.getByOffset("cOffset")};\n    let inputVar = ${O.getByOffset("cOffset")};\n    let x = ${$.getByOffset("global_idx")};\n    let value = (x - inputMean) * inverseSqrt(inputVar + epsilon) * scale + bias;\n    ${R.setByOffset("global_idx","value")}\n  }`;return{name:"BatchNormalization",shaderCache:{hint:`${r.epsilon}_${r.format}_${u}_${m}`,inputDependencies:w?["rank","type","type","type","type"]:void 0},getShaderSource:k,getRunData:()=>({outputs:[{dims:e[0].dims,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(y/64)},programUniforms:w?[{type:12,data:y},...se(f)]:[{type:12,data:y}]})}},dg=e=>ke(e),il=(e,r)=>{let{inputs:t,outputCount:u}=e,s=dg({...r,outputCount:u});if(Ir.webgpu.validateInputContent&&ug(t,s),r.trainingMode)throw new Error("BatchNormalization trainingMode is not supported yet.");e.compute(lg(t,s))}});var cg,fg,al,sl=oe(()=>{"use strict";Ee();Te();cg=e=>{if(e[0].dims.length!==3)throw new Error("input should have 3 dimensions");if(![320,640,1280].includes(e[0].dims[2]))throw new Error("number of channels should be 320, 640 or 1280");if(e[1].dims.length!==1)throw new Error("bias is expected to have 1 dimensions");if(e[0].dims[2]!==e[1].dims[0])throw new Error("last dimension of input and bias are not the same")},fg=e=>{let r=e[0].dims,t=e[0].dims[2],u=Q.size(r)/4,s=e[0].dataType,f=X("input",s,r,4),m=X("bias",s,[t],4),d=X("residual",s,r,4),y=ne("output",s,r,4);return{name:"BiasAdd",getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(u/64)}}),getShaderSource:C=>`\n  const channels = ${t}u / 4;\n  ${C.declareVariables(f,m,d,y)}\n\n  ${C.mainStart()}\n    ${C.guardAgainstOutOfBoundsWorkgroupSizes(u)}\n    let value = ${f.getByOffset("global_idx")}\n      + ${m.getByOffset("global_idx % channels")} + ${d.getByOffset("global_idx")};\n    ${y.setByOffset("global_idx","value")}\n  }`}},al=e=>{cg(e.inputs),e.compute(fg(e.inputs))}});var pg,Ue,ul,ll,dl,cl,fl,pl,ml,hl,gl,mg,yl,bl,vl,wl,ui,_l,li,$l,Cl,Sl,xl,Il,Al,Tl,El,Pl,Ol,kl,Rl,Dl,Bl,Ml,zl,Ul,jl,qi,Ki,Vl,Nl,Wl,di=oe(()=>{"use strict";$e();Ee();ot();Te();pg=(e,r,t,u,s,f)=>{let m=Math.ceil(r/4),d="";typeof s=="string"?d=`${s}(a)`:d=s("a");let y=X("inputData",t,[m],4),w=ne("outputData",u,[m],4);return`\n      ${e.registerUniform("vec_size","u32").declareVariables(y,w)}\n\n  ${f??""}\n\n  ${e.mainStart()}\n    ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}\n\n    let a = ${y.getByOffset("global_idx")};\n    ${w.setByOffset("global_idx",d)}\n  }`},Ue=(e,r,t,u,s,f=e.dataType)=>({name:r,shaderCache:{hint:s,inputDependencies:["type"]},getShaderSource:m=>pg(m,Q.size(e.dims),e.dataType,f,t,u),getRunData:m=>({outputs:[{dims:e.dims,dataType:f}],dispatchGroup:{x:Math.ceil(Q.size(m[0].dims)/64/4)},programUniforms:[{type:12,data:Math.ceil(Q.size(e.dims)/4)}]})}),ul=e=>{e.compute(Ue(e.inputs[0],"Abs","abs"))},ll=e=>{e.compute(Ue(e.inputs[0],"Acos","acos"))},dl=e=>{e.compute(Ue(e.inputs[0],"Acosh","acosh"))},cl=e=>{e.compute(Ue(e.inputs[0],"Asin","asin"))},fl=e=>{e.compute(Ue(e.inputs[0],"Asinh","asinh"))},pl=e=>{e.compute(Ue(e.inputs[0],"Atan","atan"))},ml=e=>{e.compute(Ue(e.inputs[0],"Atanh","atanh"))},hl=e=>ke(e),gl=(e,r)=>{let t;switch(r.to){case 10:t="vec4<f16>";break;case 1:t="vec4<f32>";break;case 12:t="vec4<u32>";break;case 6:t="vec4<i32>";break;case 9:t="vec4<bool>";break;default:throw new RangeError(`not supported type (specified in attribute \'to\' from \'Cast\' operator): ${r.to}`)}e.compute(Ue(e.inputs[0],"Cast",t,void 0,r.cacheKey,r.to))},mg=e=>{let r=e.length>=2&&e[1].data!==0?e[1].getFloat32Array()[0]:ti,t=e.length>=3&&e[2].data!==0?e[2].getFloat32Array()[0]:ri;return ke({min:r,max:t})},yl=(e,r)=>{let t=e.inputs.length===1?r:mg(e.inputs),u=ct(e.inputs[0].dataType);e.compute(Ue(e.inputs[0],"Clip",s=>`clamp(${s}, clip_min_, clip_max_)`,`\n    const clip_min_: vec4<${u}> = vec4(${u}(${t.min}));\n    const clip_max_: vec4<${u}> = vec4(${u}(${t.max}));\n`,t.cacheKey),{inputs:[0]})},bl=e=>{e.compute(Ue(e.inputs[0],"Ceil","ceil"))},vl=e=>{e.compute(Ue(e.inputs[0],"Cos","cos"))},wl=e=>{e.compute(Ue(e.inputs[0],"Cosh","cosh"))},ui=e=>ke(e),_l=(e,r)=>{let t=ct(e.inputs[0].dataType);e.compute(Ue(e.inputs[0],"Elu",u=>`elu_vf32(${u})`,`\n  const elu_alpha_ = ${t}(${r.alpha});\n\n  fn elu_f32(a: ${t}) -> ${t} {\n  return select((exp(a) - 1.0) * elu_alpha_, a, a >= 0.0);\n  }\n\n  fn elu_vf32(v: vec4<${t}>) -> vec4<${t}> {\n  return vec4(elu_f32(v.x), elu_f32(v.y), elu_f32(v.z), elu_f32(v.w));\n  }`,r.cacheKey))},li=(e="f32")=>`\nconst r0: ${e} = 0.3275911;\nconst r1: ${e} = 0.254829592;\nconst r2: ${e} = -0.284496736;\nconst r3: ${e} = 1.421413741;\nconst r4: ${e} = -1.453152027;\nconst r5: ${e} = 1.061405429;\n\nfn erf_vf32(v: vec4<${e}>) -> vec4<${e}> {\n  let absv = abs(v);\n  let x = 1.0 / (1.0 + r0 * absv);\n  return sign(v) * (1.0 - ((((r5 * x + r4) * x + r3) * x + r2) * x + r1) * x * exp(-absv * absv));\n}`,$l=e=>{let r=ct(e.inputs[0].dataType);e.compute(Ue(e.inputs[0],"Erf",t=>`erf_vf32(${t})`,li(r)))},Cl=e=>{e.compute(Ue(e.inputs[0],"Exp","exp"))},Sl=e=>{e.compute(Ue(e.inputs[0],"Floor","floor"))},xl=e=>{let r=ct(e.inputs[0].dataType);e.compute(Ue(e.inputs[0],"Gelu",t=>`0.5 * ${t} * (1.0 + erf_vf32(${t} * 0.7071067811865475))`,li(r)))},Il=(e,r)=>{let t=ct(e.inputs[0].dataType);e.compute(Ue(e.inputs[0],"LeakyRelu",u=>`select(leaky_relu_alpha_ * ${u}, ${u}, ${u} >= vec4<${t}>(0.0))`,`const leaky_relu_alpha_ = ${t}(${r.alpha});`,r.cacheKey))},Al=e=>{e.compute(Ue(e.inputs[0],"Not",r=>`!${r}`))},Tl=e=>{e.compute(Ue(e.inputs[0],"Neg",r=>`-${r}`))},El=e=>{e.compute(Ue(e.inputs[0],"Reciprocal",r=>`1.0/${r}`))},Pl=e=>{let r=ct(e.inputs[0].dataType);e.compute(Ue(e.inputs[0],"Relu",t=>`select(vec4<${r}>(0.0), ${t}, ${t} > vec4<${r}>(0.0))`))},Ol=e=>{e.compute(Ue(e.inputs[0],"Sigmoid",r=>`(1.0 / (1.0 + exp(-${r})))`))},kl=e=>ke(e),Rl=(e,r)=>{let t=ct(e.inputs[0].dataType);e.compute(Ue(e.inputs[0],"HardSigmoid",u=>`max(vec4<${t}>(0.0), min(vec4<${t}>(1.0), ${r.alpha} * ${u} + vec4<${t}>(${r.beta})))`,void 0,r.cacheKey))},Dl=e=>{e.compute(Ue(e.inputs[0],"Sin","sin"))},Bl=e=>{e.compute(Ue(e.inputs[0],"Sinh","sinh"))},Ml=e=>{e.compute(Ue(e.inputs[0],"Sqrt","sqrt"))},zl=e=>{e.compute(Ue(e.inputs[0],"Tan","tan"))},Ul=e=>`sign(${e}) * (1 - exp(-2 * abs(${e}))) / (1 + exp(-2 * abs(${e})))`,jl=e=>{e.compute(Ue(e.inputs[0],"Tanh",Ul))},qi=(e="f32")=>`\nconst fast_gelu_a: ${e} = 0.5;\nconst fast_gelu_b: ${e} = 0.7978845608028654;\nconst fast_gelu_c: ${e} = 0.035677408136300125;\n\nfn tanh_v(v: vec4<${e}>) -> vec4<${e}> {\n  return ${Ul("v")};\n}\n`,Ki=e=>`(fast_gelu_a + fast_gelu_a * tanh_v(${e} * (fast_gelu_c * ${e} * ${e} + fast_gelu_b))) * ${e}`,Vl=e=>{let r=ct(e.inputs[0].dataType);e.compute(Ue(e.inputs[0],"FastGelu",Ki,qi(r),void 0,e.inputs[0].dataType))},Nl=(e,r)=>{let t=ct(e.inputs[0].dataType);return e.compute(Ue(e.inputs[0],"ThresholdedRelu",u=>`select(vec4<${t}>(0.0), ${u}, ${u} > thresholded_relu_alpha_)`,`const thresholded_relu_alpha_ = vec4<${t}>(${r.alpha});`,r.cacheKey)),0},Wl=e=>{e.compute(Ue(e.inputs[0],"Log","log"))}});var hg,gg,Hl,Ll=oe(()=>{"use strict";Ee();Te();di();hg=e=>{if(e[0].dims.length!==3)throw new Error("input should have 3 dimensions");if(![2560,5120,10240].includes(e[0].dims[2]))throw new Error("hidden state should be 2560, 5120 or 10240");if(e[1].dims.length!==1)throw new Error("bias is expected to have 1 dimensions");if(e[0].dims[2]!==e[1].dims[0])throw new Error("last dimension of input and bias are not the same")},gg=e=>{let r=e[0].dims.slice();r[2]=r[2]/2;let t=X("input",e[0].dataType,e[0].dims,4),u=X("bias",e[0].dataType,[e[0].dims[2]],4),s=ne("output",e[0].dataType,r,4),f=Q.size(r)/4,m=He(e[0].dataType);return{name:"BiasSplitGelu",getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(f/64)}}),getShaderSource:y=>`\n  const M_SQRT2 = sqrt(2.0);\n  const halfChannels = ${e[0].dims[2]/4/2}u;\n\n  ${y.declareVariables(t,u,s)}\n\n  ${li(m)}\n\n  ${y.mainStart()}\n    ${y.guardAgainstOutOfBoundsWorkgroupSizes(f)}\n    let biasIdx = global_idx % halfChannels;\n    let batchIndex = global_idx / halfChannels;\n    let inputOffset = biasIdx + batchIndex * halfChannels * 2;\n    let valueLeft = input[inputOffset] + bias[biasIdx];\n    let valueRight = input[inputOffset + halfChannels] + bias[biasIdx + halfChannels];\n    let geluRight = valueRight * 0.5 * (erf_vf32(valueRight / M_SQRT2) + 1);\n\n    ${s.setByOffset("global_idx","valueLeft * geluRight")}\n  }`}},Hl=e=>{hg(e.inputs),e.compute(gg(e.inputs))}});var yg,bg,Mt,Fl,ql,Kl,Yl,Zl,Ql,Xl,Jl,ed,td,rd=oe(()=>{"use strict";$e();Ee();Te();yg=(e,r,t,u,s,f,m,d,y,w,C,$)=>{let T,P;typeof d=="string"?T=P=(k,G)=>`${d}((${k}),(${G}))`:typeof d=="function"?T=P=d:(T=d.scalar,P=d.vector);let I=ne("outputData",C,u.length,4),O=X("aData",y,r.length,4),R=X("bData",w,t.length,4),z;if(s)if(f){let k=Q.size(r)===1,G=Q.size(t)===1,U=r.length>0&&r[r.length-1]%4===0,q=t.length>0&&t[t.length-1]%4===0;k||G?z=I.setByOffset("global_idx",P(k?`${O.type.value}(${O.getByOffset("0")}.x)`:O.getByOffset("global_idx"),G?`${R.type.value}(${R.getByOffset("0")}.x)`:R.getByOffset("global_idx"))):z=`\n            let outputIndices = ${I.offsetToIndices("global_idx * 4u")};\n            let offsetA = ${O.broadcastedIndicesToOffset("outputIndices",I)};\n            let offsetB = ${R.broadcastedIndicesToOffset("outputIndices",I)};\n            ${I.setByOffset("global_idx",P(m||U?O.getByOffset("offsetA / 4u"):`${O.type.value}(${O.getByOffset("offsetA / 4u")}[offsetA % 4u])`,m||q?R.getByOffset("offsetB / 4u"):`${R.type.value}(${R.getByOffset("offsetB / 4u")}[offsetB % 4u])`))}\n          `}else z=I.setByOffset("global_idx",P(O.getByOffset("global_idx"),R.getByOffset("global_idx")));else{if(!f)throw new Error("no necessary to use scalar implementation for element-wise binary op implementation.");let k=(G,U,q="")=>{let K=`aData[indexA${U}][componentA${U}]`,J=`bData[indexB${U}][componentB${U}]`;return`\n            let outputIndices${U} = ${I.offsetToIndices(`global_idx * 4u + ${U}u`)};\n            let offsetA${U} = ${O.broadcastedIndicesToOffset(`outputIndices${U}`,I)};\n            let offsetB${U} = ${R.broadcastedIndicesToOffset(`outputIndices${U}`,I)};\n            let indexA${U} = offsetA${U} / 4u;\n            let indexB${U} = offsetB${U} / 4u;\n            let componentA${U} = offsetA${U} % 4u;\n            let componentB${U} = offsetB${U} % 4u;\n            ${G}[${U}] = ${q}(${T(K,J)});\n          `};C===9?z=`\n            var data = vec4<u32>(0);\n            ${k("data",0,"u32")}\n            ${k("data",1,"u32")}\n            ${k("data",2,"u32")}\n            ${k("data",3,"u32")}\n            outputData[global_idx] = dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(data));`:z=`\n            ${k("outputData[global_idx]",0)}\n            ${k("outputData[global_idx]",1)}\n            ${k("outputData[global_idx]",2)}\n            ${k("outputData[global_idx]",3)}\n          `}return`\n        ${e.registerUniform("vec_size","u32").declareVariables(O,R,I)}\n\n        ${$??""}\n\n        ${e.mainStart()}\n        ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}\n        ${z}\n      }`},bg=(e,r,t,u,s,f,m=t.dataType)=>{let d=!Q.areEqual(t.dims,u.dims),y=t.dims,w=Q.size(t.dims),C=!1,$=!1,T=[d];if(d){let P=Ot.calcShape(t.dims,u.dims,!1);if(!P)throw new Error("Can\'t perform binary op on the given tensors");y=P,w=Q.size(y);let I=Q.size(t.dims)===1,O=Q.size(u.dims)===1,R=t.dims.length>0&&t.dims[t.dims.length-1]%4===0,z=u.dims.length>0&&u.dims[u.dims.length-1]%4===0;T.push(I),T.push(O),T.push(R),T.push(z);let k=1;for(let G=1;G<y.length;G++){let U=t.dims[t.dims.length-G]??1,q=u.dims[u.dims.length-G]??1;if(U===q)k*=U;else break}k%4===0?($=!0,C=!0):(I||O||R||z)&&(C=!0)}else C=!0;return T.push(C),{name:e,shaderCache:{hint:r+T.map(P=>P.toString()).join("_"),inputDependencies:["rank","rank"]},getShaderSource:P=>yg(P,t.dims,u.dims,y,C,d,$,s,t.dataType,u.dataType,m,f),getRunData:()=>({outputs:[{dims:y,dataType:m}],dispatchGroup:{x:Math.ceil(w/64/4)},programUniforms:[{type:12,data:Math.ceil(Q.size(y)/4)},...se(t.dims,u.dims,y)]})}},Mt=(e,r,t,u,s,f)=>{e.compute(bg(r,s??"",e.inputs[0],e.inputs[1],t,u,f))},Fl=e=>{Mt(e,"Add",(r,t)=>`${r}+${t}`)},ql=e=>{Mt(e,"Div",(r,t)=>`${r}/${t}`)},Kl=e=>{Mt(e,"Equal",{scalar:(r,t)=>`u32(${r}==${t})`,vector:(r,t)=>`vec4<u32>(${r}==${t})`},void 0,void 0,9)},Yl=e=>{Mt(e,"Mul",(r,t)=>`${r}*${t}`)},Zl=e=>{let r=X("input",e.inputs[0].dataType,e.inputs[0].dims).type.value;Mt(e,"Pow",{scalar:(u,s)=>`pow_custom(${u},${s})`,vector:(u,s)=>`pow_vector_custom(${u},${s})`},`\n    fn pow_custom(a : ${r}, b : ${r}) -> ${r} {\n      if (b == ${r}(0.0)) {\n        return ${r}(1.0);\n      } else if (a < ${r}(0.0) && f32(b) != floor(f32(b))) {\n        return ${r}(pow(f32(a), f32(b))); // NaN\n      }\n      return select(sign(a), ${r}(1.0), round(f32(abs(b) % ${r}(2.0))) != 1.0) * ${r}(${r==="i32"?"round":""}(pow(f32(abs(a)), f32(b))));\n    }\n    fn pow_vector_custom(a : vec4<${r}>, b : vec4<${r}>) -> vec4<${r}> {\n      // TODO: implement vectorized pow\n      return vec4<${r}>(pow_custom(a.x, b.x), pow_custom(a.y, b.y), pow_custom(a.z, b.z), pow_custom(a.w, b.w));\n    }\n      `)},Ql=e=>{Mt(e,"Sub",(r,t)=>`${r}-${t}`)},Xl=e=>{Mt(e,"Greater",{scalar:(r,t)=>`u32(${r}>${t})`,vector:(r,t)=>`vec4<u32>(${r}>${t})`},void 0,void 0,9)},Jl=e=>{Mt(e,"Less",{scalar:(r,t)=>`u32(${r}<${t})`,vector:(r,t)=>`vec4<u32>(${r}<${t})`},void 0,void 0,9)},ed=e=>{Mt(e,"GreaterOrEqual",{scalar:(r,t)=>`u32(${r}>=${t})`,vector:(r,t)=>`vec4<u32>(${r}>=${t})`},void 0,void 0,9)},td=e=>{Mt(e,"LessOrEqual",{scalar:(r,t)=>`u32(${r}<=${t})`,vector:(r,t)=>`vec4<u32>(${r}<=${t})`},void 0,void 0,9)}});var wg,_g,$g,Cg,nd,id,od=oe(()=>{"use strict";$e();Ee();ot();Te();wg=e=>{if(!e||e.length<1)throw new Error("too few inputs");let r=e[0].dataType,t=e[0].dims.length;for(let u of e){if(u.dataType!==r)throw new Error("input tensors should be one type");if(u.dims.length!==t)throw new Error("input tensors should have the same shape")}},_g=(e,r)=>`\n  fn calculateInputIndex(index: u32) -> u32 {\n    let sizeInConcatAxis = array<u32, ${e}u>(${r});\n    for (var i: u32 = 0u; i < ${e}; i += 1u ) {\n      if (index < sizeInConcatAxis[i]) {\n        return i;\n      }\n    }\n    return ${e}u;\n  }`,$g=(e,r)=>{let t=e.length,u=[];for(let s=0;s<t;++s){let f=r.setByOffset("global_idx",e[s].getByIndices("indices"));t===1?u.push(f):s===0?u.push(`if (inputIndex == ${s}u) { ${f} }`):s===t-1?u.push(`else { ${f} }`):u.push(`else if (inputIndex == ${s}) { ${f} }`)}return u.join(`\n`)},Cg=(e,r)=>{let t=0,u=0,s=new Array(e.length);for(let U=0;U<e.length;U++){let q=Q.size(e[U].dims);s[U]=q,q>t&&(t=q,u=U)}let f=e[u].dims.slice();if(r>=f.length||r<-1*f.length)throw new Error("axis specified for concat doesn\'t match input dimensionality");let m=r<0?f.length+r:r,d=f.slice(0);for(let U=0;U<e.length;U++){if(U===u)continue;let q=e[U].dims.slice();for(let K=0;K<f.length;K++)if(K===m)d[m]+=q[K];else if(f[K]!==q[K])throw new Error("non concat dimensions must match")}let y=Q.size(d),w=new Array(e.length),C=new Array(e.length),$=e[0].dataType,T=0,P=[],I=[],O=[{type:12,data:y}];for(let U=0;U<e.length;++U)T+=e[U].dims[m],w[U]=T,I.push(e[U].dims.length),C[U]=X(`input${U}`,$,I[U]),P.push("rank"),O.push({type:12,data:w[U]});for(let U=0;U<e.length;++U)O.push(...se(e[U].dims));O.push(...se(d));let R=ne("output",$,d.length),z=R.indicesGet("indices",m),k=Array.from(Array(w.length).keys()).map(U=>`uniforms.sizeInConcatAxis${U}`).join(","),G=U=>`\n\n  ${(()=>{U.registerUniform("outputSize","u32");for(let q=0;q<e.length;q++)U.registerUniform(`sizeInConcatAxis${q}`,"u32");return U.declareVariables(...C,R)})()}\n\n  ${_g(w.length,k)}\n\n  ${U.mainStart()}\n    ${U.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n\n    var indices = ${R.offsetToIndices("global_idx")};\n\n    let inputIndex = calculateInputIndex(${z});\n    if (inputIndex != 0u) {\n      let sizeInConcatAxis = array<u32, ${w.length}u>(${k});\n      ${z} -= sizeInConcatAxis[inputIndex - 1u];\n    }\n\n    ${$g(C,R)}\n  }`;return{name:"Concat",shaderCache:{hint:`${r}`,inputDependencies:P},getRunData:()=>({outputs:[{dims:d,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(y/64)},programUniforms:O}),getShaderSource:G}},nd=(e,r)=>{wg(e.inputs);for(let t=0;t<e.inputs.length;t++)Q.size(e.inputs[t].dims)===0&&e.inputs.slice(t,1);e.compute(Cg(e.inputs,r.axis))},id=e=>ke({axis:e.axis})});var zt,Ut,jt,ci,Ft=oe(()=>{"use strict";$e();Ee();zt=(e,r,t="f32")=>{switch(e.activation){case"Relu":return`value = max(value, ${r}(0.0));`;case"Sigmoid":return`value = (${r}(1.0) / (${r}(1.0) + exp(-value)));`;case"Clip":return`value = clamp(value, ${r}(${t}(uniforms.clip_min)), ${r}(${t}(uniforms.clip_max)));`;case"HardSigmoid":return`value = max(${r}(0.0), min(${r}(1.0), ${t}(uniforms.alpha) * value + ${t}(uniforms.beta)));`;case"LeakyRelu":return`value = select(${t}(uniforms.alpha) * value, value, value >= ${r}(0.0));`;case"":return"";default:throw new Error(`Unsupported activation ${e.activation}`)}},Ut=(e,r)=>{e.activation==="Clip"?r.push({type:1,data:e.clipMax},{type:1,data:e.clipMin}):e.activation==="HardSigmoid"?r.push({type:1,data:e.alpha},{type:1,data:e.beta}):e.activation==="LeakyRelu"&&r.push({type:1,data:e.alpha})},jt=(e,r)=>{e.activation==="Clip"?r.push({name:"clip_max",type:"f32"},{name:"clip_min",type:"f32"}):e.activation==="HardSigmoid"?r.push({name:"alpha",type:"f32"},{name:"beta",type:"f32"}):e.activation==="LeakyRelu"&&r.push({name:"alpha",type:"f32"})},ci=e=>{let r=e?.activation||"";if(r==="HardSigmoid"){let[t,u]=e?.activation_params||[.2,.5];return{activation:r,alpha:t,beta:u}}else if(r==="Clip"){let[t,u]=e?.activation_params||[ti,ri];return{activation:r,clipMax:u,clipMin:t}}else if(r==="LeakyRelu"){let[t]=e?.activation_params||[.01];return{activation:r,alpha:t}}return{activation:r}}});var et,fi,pi=oe(()=>{"use strict";et=(e,r)=>{switch(e){case 1:return r;case 2:return`vec2<${r}>`;case 3:return`vec3<${r}>`;case 4:return`vec4<${r}>`;default:throw new Error(`${e}-component is not supported.`)}},fi=e=>`\n      ${e?"value = value + getBiasByOutputCoords(coords);":""}\n      `});var mi,Yi=oe(()=>{"use strict";mi=e=>`\nfn getIndexFromCoords4D(coords : vec4<i32>, shape : vec4<i32>) -> i32 {\n  return dot(coords, vec4<i32>(\n      shape.y * shape.z * shape.w, shape.z * shape.w, shape.w, 1));\n}\nfn getOutputIndexFromCoords(coords : vec4<i32>) -> i32 {\n  return dot(coords, vec4<i32>(\n    i32(${e}.x), i32(${e}.y), i32(${e}.z), 1));\n}\n`});var Sg,xg,cn,ad,Ig,fn,Ag,hi,pn=oe(()=>{"use strict";$e();Ee();Te();Ft();pi();Sg=(e,r)=>e?`\n        mm_Asub[inputRow][inputCol] = mm_readA(batch,\n          kStart + inputRow,\n          globalRowStart / innerElementSize + inputCol${r?", batchIndices":""});\n        `:`\n        mm_Asub[inputRow][inputCol] = mm_readA(batch,\n          globalRow + innerRow,\n          kStart / innerElementSize + inputCol${r?", batchIndices":""});\n        `,xg=(e,r)=>e?`\n        let ACached0 = mm_Asub[k * innerElementSize][localRow];\n        let ACached1 = mm_Asub[k * innerElementSize + 1][localRow];\n        let ACached2 = mm_Asub[k * innerElementSize + 2][localRow];\n        ${r===3?"":"let ACached3 = mm_Asub[k * innerElementSize + 3][localRow];"}\n        for (var i = 0; i < rowPerThread; i = i + 1) {\n          acc[i] = BCached0 * ACached0[i] + acc[i];\n          acc[i] = BCached1 * ACached1[i] + acc[i];\n          acc[i] = BCached2 * ACached2[i] + acc[i];\n          ${r===3?"":"acc[i] = BCached3 * ACached3[i] + acc[i];"}\n        }`:`\n        for (var i = 0; i < rowPerThread; i = i + 1) {\n          let ACached = mm_Asub[tileRow + i][k];\n          acc[i] = BCached0 * ACached.x + acc[i];\n          acc[i] = BCached1 * ACached.y + acc[i];\n          acc[i] = BCached2 * ACached.z + acc[i];\n          ${r===3?"":"acc[i] = BCached3 * ACached.w + acc[i];"}\n        }`,cn=(e,r,t="f32",u,s=!1,f=32,m=!1,d=32)=>{let y=r[1]*e[1],w=r[0]*e[0],C=s?y:f,$=s?f:y,T=C/r[0],P=f/r[1];if(!((s&&T===4&&e[1]===4||!s&&(T===3||T===4))&&C%r[0]===0&&f%r[1]===0&&e[0]===4))throw new Error(`If transposeA ${s} is true, innerElementSize ${T} and workPerThread[1] ${e[1]} must be 4.\n      Otherwise, innerElementSize ${T} must be 3 or 4.\n  tileAWidth ${C} must be divisible by workgroupSize[0]${r[0]}. tileInner ${f} must be divisible by workgroupSize[1] ${r[1]}. colPerThread ${e[0]} must be 4.`);return`\nvar<workgroup> mm_Asub: array<array<vec${T}<${t}>, ${C/T}>, ${$}>;\nvar<workgroup> mm_Bsub: array<array<vec4<${t}>, ${w/e[0]}>, ${f}>;\n\nconst rowPerThread = ${e[1]};\nconst colPerThread = ${e[0]};\nconst innerElementSize = ${T};\nconst tileInner = ${f};\n\n@compute @workgroup_size(${r[0]}, ${r[1]}, ${r[2]})\nfn main(@builtin(local_invocation_id) localId : vec3<u32>,\n        @builtin(global_invocation_id) globalId : vec3<u32>,\n        @builtin(workgroup_id) workgroupId : vec3<u32>) {\n  let localRow = i32(localId.y);\n  let tileRow = localRow * rowPerThread;\n  let tileCol = i32(localId.x);\n\n  let globalRow =i32(globalId.y) * rowPerThread;\n  let globalCol = i32(globalId.x);\n  let batch = ${m?"0":"i32(globalId.z)"};\n  ${u?`let batchIndices = ${u.offsetToIndices("u32(batch)")};`:""}\n  let globalRowStart = i32(workgroupId.y) * ${y};\n\n  let num_tiles = ${m?`${Math.ceil(d/f)}`:"(uniforms.dim_inner - 1) / tileInner + 1"};\n  var kStart = ${m?`i32(globalId.z) * ${d}`:"0"};\n\n  var acc: array<vec4<${t}>, rowPerThread>;\n\n  // Loop over shared dimension.\n  let tileRowB = localRow * ${P};\n  for (var t = 0; t < num_tiles; t = t + 1) {\n      // Load one tile of A into local memory.\n      for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n          let inputRow = tileRow + innerRow;\n          let inputCol = tileCol;\n          ${Sg(s,u)}\n      }\n\n      // Load one tile of B into local memory.\n      for (var innerRow = 0; innerRow < ${P}; innerRow = innerRow + 1) {\n          let inputRow = tileRowB + innerRow;\n          let inputCol = tileCol;\n          mm_Bsub[inputRow][inputCol] = mm_readB(batch, kStart + inputRow, globalCol${u?", batchIndices":""});\n      }\n      kStart = kStart + tileInner;\n      workgroupBarrier();\n\n      // Compute acc values for a single thread.\n      for (var k = 0; k < tileInner / innerElementSize; k = k + 1) {\n          let BCached0 = mm_Bsub[k * innerElementSize][tileCol];\n          let BCached1 = mm_Bsub[k * innerElementSize + 1][tileCol];\n          let BCached2 = mm_Bsub[k * innerElementSize + 2][tileCol];\n          ${T===3?"":"let BCached3 = mm_Bsub[k * innerElementSize + 3][tileCol];"}\n\n          ${xg(s,T)}\n      }\n\n      workgroupBarrier();\n  }\n\n  for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n      mm_write(batch, globalRow + innerRow, globalCol, acc[innerRow]);\n  }\n}`},ad=(e,r)=>e?`\n            mm_Asub[inputRow][inputCol] = mm_readA(batch,\n              kStart + inputRow,\n              globalRowStart + inputCol${r?", batchIndices":""});\n            `:`\n            mm_Asub[inputRow][inputCol] = mm_readA(batch,\n              globalRowStart + inputRow,\n              kStart + inputCol${r?", batchIndices":""});\n            `,Ig=e=>e?"let ACached = mm_Asub[k][tileRow + innerRow];":"let ACached = mm_Asub[tileRow + innerRow][k];",fn=(e,r,t="f32",u,s=!1,f=32,m=!1,d=32,y=!1)=>{let w=e[1]*r[1],C=e[0]*r[0],$=s?w:f,T=s?f:w;if(!(T%r[1]===0&&$%r[0]===0&&f%r[1]===0))throw new Error(`tileAHight ${T} must be divisible by workgroupSize[1]${r[1]}, tileAWidth ${$} must be divisible by workgroupSize[0]${r[0]}, tileInner ${f} must be divisible by workgroupSize[1]${r[1]}`);let P=T/r[1],I=$/r[0],O=f/r[1],R=y?`\n    let localRow = i32(localId.y);\n    let localCol = i32(localId.x);\n    let globalRowStart = i32(workgroupId.y) * ${w};\n    let globalColStart = i32(workgroupId.x) * ${C};\n\n    // Loop over shared dimension.\n    for (var t = 0; t < num_tiles; t = t + 1) {\n      // Load one tile of A into local memory.\n      for (var inputRow = localRow; inputRow < ${T}; inputRow = inputRow + ${r[1]}) {\n        for (var inputCol = localCol; inputCol < ${$}; inputCol = inputCol + ${r[0]}) {\n          ${ad(s,u)}\n        }\n      }\n      // Load one tile of B into local memory.\n      for (var inputRow = localRow; inputRow < ${f}; inputRow = inputRow + ${r[1]}) {\n            for (var inputCol = localCol; inputCol < ${C}; inputCol = inputCol + ${r[0]}) {\n          mm_Bsub[inputRow][inputCol] = mm_readB(batch,\n            kStart + inputRow,\n            globalColStart + inputCol${u?", batchIndices":""});\n        }\n      }\n      kStart = kStart + tileInner;\n      workgroupBarrier();\n\n      // Compute acc values for a single thread.\n      var BCached : array<${t}, colPerThread>;\n      for (var k = 0; k < tileInner; k = k + 1) {\n        for (var inner = 0; inner < colPerThread; inner = inner + 1) {\n          BCached[inner] = mm_Bsub[k][localCol + inner * ${r[0]}];\n        }\n        for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n          let ACached = ${s?`mm_Asub[k][localRow + innerRow * ${r[1]}];`:`mm_Asub[localRow + innerRow * ${r[1]}][k];`}\n          for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n            acc[innerRow][innerCol] = acc[innerRow][innerCol] +\n                ACached * BCached[innerCol];\n          }\n        }\n      }\n      workgroupBarrier();\n    }\n    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n      let gRow = globalRowStart + localRow + innerRow * ${r[1]};\n      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n        let gCol = globalColStart + localCol + innerCol * ${r[0]};\n        mm_write(batch, gRow, gCol, acc[innerRow][innerCol]);\n      }\n    }\n    `:`\nlet tileRow = i32(localId.y) * rowPerThread;\nlet tileCol = i32(localId.x) * colPerThread;\n\nlet globalRow = i32(globalId.y) * rowPerThread;\nlet globalCol = i32(globalId.x) * colPerThread;\nlet globalRowStart = i32(workgroupId.y) * ${w};\n\nlet tileRowA = i32(localId.y) * ${P};\nlet tileColA = i32(localId.x) * ${I};\nlet tileRowB = i32(localId.y) * ${O};\n// Loop over shared dimension.\nfor (var t = 0; t < num_tiles; t = t + 1) {\n  // Load one tile of A into local memory.\n  for (var innerRow = 0; innerRow < ${P}; innerRow = innerRow + 1) {\n    for (var innerCol = 0; innerCol < ${I}; innerCol = innerCol + 1) {\n      let inputRow = tileRowA + innerRow;\n      let inputCol = tileColA + innerCol;\n      ${ad(s,u)}\n    }\n  }\n\n  // Load one tile of B into local memory.\n  for (var innerRow = 0; innerRow < ${O}; innerRow = innerRow + 1) {\n    for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n      let inputRow = tileRowB + innerRow;\n      let inputCol = tileCol + innerCol;\n      mm_Bsub[inputRow][inputCol] = mm_readB(batch,\n        kStart + inputRow,\n        globalCol + innerCol${u?", batchIndices":""});\n    }\n  }\n  kStart = kStart + tileInner;\n  workgroupBarrier();\n\n  // Compute acc values for a single thread.\n  var BCached : array<${t}, colPerThread>;\n  for (var k = 0; k < tileInner; k = k + 1) {\n    for (var inner = 0; inner < colPerThread; inner = inner + 1) {\n      BCached[inner] = mm_Bsub[k][tileCol + inner];\n    }\n\n    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n      ${Ig(s)}\n      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n        acc[innerRow][innerCol] = acc[innerRow][innerCol] + ACached * BCached[innerCol];\n      }\n    }\n  }\n\n  workgroupBarrier();\n}\n\nfor (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n  for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n    mm_write(batch, globalRow + innerRow, globalCol + innerCol,\n        acc[innerRow][innerCol]);\n  }\n}\n`;return`\n  var<workgroup> mm_Asub : array<array<${t}, ${$}>, ${T}>;\n  var<workgroup> mm_Bsub : array<array<${t}, ${C}>, ${f}>;\n  const rowPerThread = ${e[1]};\n  const colPerThread = ${e[0]};\n  const tileInner = ${f};\n\n@compute @workgroup_size(${r[0]}, ${r[1]}, ${r[2]})\nfn main(@builtin(local_invocation_id) localId : vec3<u32>,\n        @builtin(global_invocation_id) globalId : vec3<u32>,\n        @builtin(workgroup_id) workgroupId : vec3<u32>) {\n    let batch = ${m?"0":"i32(globalId.z)"};\n    ${u?`let batchIndices = ${u.offsetToIndices("u32(batch)")};`:""}\n    let num_tiles = ${m?`${Math.ceil(d/f)}`:"(uniforms.dim_inner - 1) / tileInner + 1"};\n    var kStart = ${m?`i32(globalId.z) * ${d}`:"0"};\n\n    var acc : array<array<${t}, colPerThread>, rowPerThread>;\n\n    // Without this initialization strange values show up in acc.\n    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n        acc[innerRow][innerCol] = 0.0;\n      }\n    }\n    ${R}\n  }\n`},Ag=(e,r,t,u,s,f=!1)=>{let[m,d,y]=s,[w,C,$,T]=u,P=Tr(m,y),I=Tr(d,y),O=He(u[0].type.tensor),R=()=>{let G=C.rank,U=w.rank,q=`var aIndices: ${C.type.indices};`;for(let K=G-2-1,J=U-1;K>=0;K--,J--)q+=`\naIndices[${K}] = ${U>1?`batchIndices[${J}]`:"batchIndices"};`;return P.forEach(K=>{q+=`\naIndices[${K}] = 0;`}),q+=`\naIndices[${G-2}] = u32(row);\n                   aIndices[${G-1}] = u32(colIn);`,q},z=()=>{let G=$.rank,U=w.rank,q=`var bIndices: ${$.type.indices};`;for(let K=G-2-1,J=U-1;K>=0;K--,J--)q+=`\nbIndices[${K}] = ${U>1?`batchIndices[${J}]`:"batchIndices"};`;return I.forEach(K=>{q+=`\nbIndices[${K}] = 0;`}),q+=`\nbIndices[${G-2}] = u32(row);\n                   bIndices[${G-1}] = u32(colIn);`,q};return`\n    fn mm_readA(batch: i32, row: i32, colIn: i32, batchIndices: ${w.type.indices}) -> ${et(e,O)} {\n      var value = ${et(e,O)}(0.0);\n      let col = colIn * ${e};\n      if(row < uniforms.dim_a_outer && col < uniforms.dim_inner)\n      {\n        ${R()}\n        value = ${C.getByIndices("aIndices")};\n      }\n      return value;\n    }\n\n    fn mm_readB(batch: i32, row: i32, colIn: i32, batchIndices: ${w.type.indices}) -> ${et(e,O)} {\n      var value = ${et(e,O)}(0.0);\n      let col = colIn * ${e};\n      if(row < uniforms.dim_inner && col < uniforms.dim_b_outer)\n      {\n        ${z()}\n        value = ${$.getByIndices("bIndices")};\n      }\n      return value;\n    }\n\n    fn mm_write(batch: i32, row: i32, colIn: i32, valueIn: ${et(e,O)}) {\n      let col = colIn * ${e};\n      if (row < uniforms.dim_a_outer && col < uniforms.dim_b_outer) {\n        var value = valueIn;\n        let coords = vec3<i32>(batch, row, colIn);\n        ${r?`value = value + ${f?"bias[colIn]":`${et(e,O)}(bias[row])`};`:""}\n        ${t}\n        ${T.setByIndices("vec3<u32>(coords)","value")}\n      }\n    }\n    `},hi=(e,r,t,u,s=!1)=>{let f=e[0].dims,m=e[1].dims,d=f.slice(0,-2),y=m.slice(0,-2),w=u?u.slice(0,-2):t.slice(0,-2),C=Q.size(w),$=f[f.length-2],T=f[f.length-1],P=m[m.length-1],I=T%4===0&&P%4===0,O=$<=8?[4,1,1]:[4,4,1],R=[8,8,1],z=[Math.ceil(P/R[0]/O[0]),Math.ceil($/R[1]/O[1]),Math.ceil(C/R[2]/O[2])],k=I?4:1,G=[...d,$,T/k],U=G.length,q=[...y,T,P/k],K=q.length,J=[C,$,P/k],ie=[{type:6,data:$},{type:6,data:P},{type:6,data:T}];Ut(r,ie),ie.push(...se(w,G,q));let ge=["rank","rank"],L=e.length>2;L&&(ie.push(...se(e[2].dims)),ge.push("rank")),ie.push(...se(J));let ue=je=>{let Ve=w.length,Ce=ii("batchDims",e[0].dataType,Ve,1),ae=He(e[0].dataType),ye=X("a",e[0].dataType,U,k),Me=X("b",e[1].dataType,K,k),xe=ne("result",e[0].dataType,J.length,k),_e=[ye,Me];if(L){let te=s?k:1;_e.push(X("bias",e[2].dataType,e[2].dims.length,te))}let Ie=[{name:"dim_a_outer",type:"i32"},{name:"dim_b_outer",type:"i32"},{name:"dim_inner",type:"i32"}];jt(r,Ie);let Pe=He(xe.type.tensor),De=zt(r,xe.type.value,Pe),Ye=Ag(k,L,De,[Ce,ye,Me,xe],[d,y,w],s);return`\n  ${je.registerUniforms(Ie).registerInternalVariables(Ce).declareVariables(..._e,xe)}\n  ${Ye}\n  ${I?cn(O,R,ae,Ce):fn(O,R,ae,Ce)}\n                   `};return{name:"MatMul",shaderCache:{hint:`${O};${r.activation};${I};${s}`,inputDependencies:ge},getRunData:()=>({outputs:[{dims:t,dataType:e[0].dataType}],dispatchGroup:{x:z[0],y:z[1],z:z[2]},programUniforms:ie}),getShaderSource:ue}}});var Tg,sd,ud=oe(()=>{"use strict";$e();Lt();Te();Ft();pi();Yi();pn();Tg=(e,r,t,u,s=!1,f,m=4,d=4,y=4,w="f32")=>{let C=L=>{switch(L){case 1:return"resData = x[xIndex];";case 3:return`resData = vec3<${w}>(x[xIndex], x[xIndex + 1], x[xIndex + 2]);`;case 4:return"resData = x[xIndex / 4];";default:throw new Error(`innerElementSize ${L} is not supported.`)}},$=L=>{switch(L){case 1:return"return w[row * i32(uniforms.w_shape[3]) + colIn];";case 4:return"return w[row * i32(uniforms.w_shape[3]) / 4 + colIn];";default:throw new Error(`innerElementSize ${L} is not supported.`)}},T=e?`\n    let coord = vec4<i32>(batch, xRow, xCol, xCh);\n    `:`\n    let coord = vec4<i32>(batch, xCh, xRow, xCol);\n    `,P=e?`\n    let coords = vec4<i32>(\n      batch,\n      row / outWidth,\n      row % outWidth,\n      col);\n    `:`\n    let coords = vec4<i32>(\n      batch,\n      row,\n      col / outWidth,\n      col % outWidth);\n    `,I=e?"i32(uniforms.x_shape[1])":"i32(uniforms.x_shape[2])",O=e?"i32(uniforms.x_shape[2])":"i32(uniforms.x_shape[3])",R=e?"row":"col",z=e?"col":"row",k=`\n    let inChannels = i32(uniforms.w_shape[2]);\n    let outWidth = ${e?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};\n    let outRow = ${R} / outWidth;\n    let outCol = ${R} % outWidth;\n\n    let WRow = ${z} / (i32(uniforms.w_shape[1]) * inChannels);\n    let WCol = ${z} / inChannels % i32(uniforms.w_shape[1]);\n    let xRow = outRow * uniforms.stride[0] + uniforms.dilation[0] * WRow - uniforms.pad[0];\n    let xCol = outCol * uniforms.stride[1] + uniforms.dilation[1] * WCol - uniforms.pad[1];\n    let xCh = ${z} % inChannels;\n    var resData = ${et(m,w)}(0.0);\n    // The bounds checking is always needed since we use it to pad zero for\n    // the \'same\' padding type.\n    if (xRow >= 0 && xRow < ${I} && xCol >= 0 && xCol < ${O}) {\n      ${T}\n      let xIndex = getIndexFromCoords4D(coord, vec4<i32>(uniforms.x_shape));\n      ${C(m)}\n    }\n    return resData;`,G=e?r&&u?`\n    let col = colIn * ${m};\n    ${k}`:`\n    let col = colIn * ${m};\n    if (row < uniforms.dim_a_outer && col < uniforms.dim_inner) {\n      ${k}\n    }\n    return ${et(m,w)}(0.0);`:u&&t?`\n    let col = colIn * ${m};\n    ${k}`:`\n    let col = colIn * ${m};\n    if (row < uniforms.dim_inner && col < uniforms.dim_b_outer) {\n      ${k}\n    }\n    return ${et(m,w)}(0.0);`,U=`${$(d)}`,q=et(y,w),K=e?et(m,w):et(d,w),J=e?et(d,w):et(m,w),ie=zt(f,q,w);return`\n    fn mm_readA(batch: i32, row : i32, colIn : i32) -> ${K} {\n      ${e?G:U}\n    }\n\n    fn mm_readB(batch: i32, row : i32, colIn : i32) -> ${J} {\n      ${e?U:G}\n    }\n\n    fn mm_write(batch: i32, row : i32, colIn : i32, valueIn : ${q}) {\n      let col = colIn * ${y};\n      if (row < uniforms.dim_a_outer && col < uniforms.dim_b_outer)\n      {\n      var value = valueIn;\n      let outWidth = ${e?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};\n      ${P}\n      ${fi(s)}\n      ${ie}\n      setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);\n      }\n    }`},sd=(e,r,t,u,s,f,m,d)=>{let y=r.format==="NHWC",w=y?e[0].dims[3]:e[0].dims[1],C=t[0],$=y?t[2]:t[3],T=y?t[1]:t[2],P=y?t[3]:t[1],I=y&&(w%4===0||w%3===0)&&P%4===0,O=y?P:$*T,R=y?$*T:P,z=[8,8,1],k=u<=8?[4,1,1]:[4,4,1],G=[Math.ceil(O/z[0]/k[0]),Math.ceil(R/z[1]/k[1]),Math.ceil(C/z[2]/k[2])];Ge("verbose",()=>`[conv2d_mm_webgpu] dispatch = ${G}`);let U=I?y&&w%4!==0?3:4:1,q=z[1]*k[1],K=z[0]*k[0],J=Math.max(z[0]*U,z[1]),ie=u%q===0,ge=s%K===0,L=f%J===0,ue=I?[U,4,4]:[1,1,1],je=[{type:6,data:u},{type:6,data:s},{type:6,data:f},{type:6,data:[r.pads[0],r.pads[1]]},{type:6,data:r.strides},{type:6,data:r.dilations}];Ut(r,je),je.push(...se(e[0].dims,e[1].dims));let Ve=["rank","rank"];m&&(je.push(...se(e[2].dims)),Ve.push("rank")),je.push(...se(t));let Ce=ae=>{let ye=[{name:"dim_a_outer",type:"i32"},{name:"dim_b_outer",type:"i32"},{name:"dim_inner",type:"i32"},{name:"pad",type:"i32",length:2},{name:"stride",type:"i32",length:2},{name:"dilation",type:"i32",length:2}];jt(r,ye);let Me=I?4:1,xe=He(e[0].dataType),_e=`\n      fn setOutputAtIndex(flatIndex : i32, value : ${I?`vec4<${xe}>`:xe}) {\n        result[flatIndex] = ${I?`vec4<${xe}>`:xe}(value);\n      }\n      fn setOutputAtCoords(d0 : i32, d1 : i32, d2 : i32, d3 : i32, value : ${I?`vec4<${xe}>`:xe}) {\n        let flatIndex = getOutputIndexFromCoords(vec4<i32>(d0, d1, d2, d3));\n        setOutputAtIndex(flatIndex ${I?"/ 4":""}, value);\n      }`,Ie=X("x",e[0].dataType,e[0].dims.length,U===3?1:U),Pe=X("w",e[1].dataType,e[1].dims.length,Me),De=[Ie,Pe],Ye=ne("result",e[0].dataType,t.length,Me);if(m){let te=X("bias",e[2].dataType,e[2].dims.length,Me);De.push(te),_e+=`\n        fn getBiasByOutputCoords(coords : vec4<i32>) -> ${I?`vec4<${xe}>`:xe} {\n          return bias[coords.${y?"w":"y"}${I?"/ 4":""}];\n        }`}return`\n        ${mi("uniforms.result_strides")}\n        //struct Uniforms { xShape : vec4<i32>, wShape : vec4<i32>, outShape : vec4<i32>,\n        //  outShapeStrides: vec3<i32>, filterDims : vec2<i32>, pad : vec2<i32>, stride : vec2<i32>,\n        //  dilation : vec2<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32 };\n        ${ae.registerUniforms(ye).declareVariables(...De,Ye)}\n        ${_e}\n        ${Tg(y,ie,ge,L,m,r,ue[0],ue[1],ue[2],xe)}\n        ${I?cn(k,z,xe,void 0,!y,J):fn(k,z,xe,void 0,!y,J,!1,void 0,d)}`};return{name:"Conv2DMatMul",shaderCache:{hint:`${r.cacheKey};${U};${I};${ie};${ge};${L};${q};${K};${J}`,inputDependencies:Ve},getRunData:()=>({outputs:[{dims:t,dataType:e[0].dataType}],dispatchGroup:{x:G[0],y:G[1],z:G[2]},programUniforms:je}),getShaderSource:Ce}}});var Zi,ld=oe(()=>{"use strict";$e();Ee();Te();Xi();Ft();Zi=(e,r,t)=>{let u=e.length>2,s=u?"value += b[output_channel];":"",f=e[0].dims,m=e[1].dims,d=m[0]/r.group,y=r.format==="NHWC",w=Qi(f,m,r.dilations,r.pads,r.strides,y),C=Q.size(w),$=[{type:12,data:C},{type:12,data:r.dilations},{type:12,data:[r.strides[0],r.strides[1]]},{type:12,data:[r.pads[0],r.pads[1]]},{type:12,data:d}];Ut(r,$),$.push(...se(f,m,w));let T=["rank","rank"];u&&($.push(...se(e[2].dims)),T.push("rank")),$.push(...se(w));let P=I=>{let O=ne("output",e[0].dataType,w.length),R=He(O.type.tensor),z=zt(r,O.type.value,R),k=X("x",e[0].dataType,f.length),G=X("w",e[1].dataType,m.length),U=[k,G];u&&U.push(X("b",e[2].dataType,e[2].dims));let q=[{name:"output_size",type:"u32"},{name:"dilations",type:"u32",length:r.dilations.length},{name:"strides",type:"u32",length:2},{name:"pads",type:"u32",length:2},{name:"output_channels_per_group",type:"u32"}];return jt(r,q),`\n  ${I.registerUniforms(q).declareVariables(...U,O)}\n\n  ${I.mainStart()}\n    ${I.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n\n    let outputIndices = ${O.offsetToIndices("global_idx")};\n    let batch: u32 = outputIndices[0];\n    let output_channel: u32 = outputIndices[${y?3:1}];\n    let xRCCorner: vec2<u32> = vec2<u32>(outputIndices[${y?1:2}], outputIndices[${y?2:3}]) * uniforms.strides - uniforms.pads;\n    let group_id: u32 = output_channel / uniforms.output_channels_per_group;\n\n    var value: ${O.type.value} = ${O.type.value}(0);\n    for (var wInChannel: u32 = 0u; wInChannel < uniforms.w_shape[1]; wInChannel++) {\n      let input_channel = group_id * uniforms.w_shape[1] + wInChannel;\n      for (var wHeight: u32 = 0u; wHeight < uniforms.w_shape[2]; wHeight++) {\n        let xHeight = xRCCorner.x + wHeight * uniforms.dilations[0];\n\n        if (xHeight < 0u || xHeight >= uniforms.x_shape[${y?1:2}]) {\n          continue;\n        }\n\n        for (var wWidth: u32 = 0u; wWidth < uniforms.w_shape[3]; wWidth++) {\n          let xWidth = xRCCorner.y + wWidth * uniforms.dilations[1];\n          if (xWidth < 0u || xWidth >= uniforms.x_shape[${y?2:3}]) {\n            continue;\n          }\n\n          let xVal = ${y?k.get("batch","xHeight","xWidth","input_channel"):k.get("batch","input_channel","xHeight","xWidth")};\n          let wVal = ${G.get("output_channel","wInChannel","wHeight","wWidth")};\n          value += xVal*wVal;\n        }\n      }\n    }\n    ${s}\n    ${z}\n    ${O.setByOffset("global_idx","value")}\n  }`};return{name:"GroupedConv",shaderCache:{hint:r.cacheKey,inputDependencies:T},getRunData:()=>({outputs:[{dims:t?t(w):w,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(C/64)},programUniforms:$}),getShaderSource:P}}});var Ji,Eg,dd,eo=oe(()=>{"use strict";$e();Ee();pn();Te();Ft();Ji=(e,r,t,u,s=!1)=>{let f=e[0].dims,m=e[1].dims,d=f[f.length-2],y=m[m.length-1],w=f[f.length-1],C=Je(y),$=Je(w),T=Je(d),P=Q.size(t)/C/T,I=e.length>2,O=u?u.slice(0,-2):t.slice(0,-2),z=[Q.size(O),d,y],k=[{type:12,data:P},{type:12,data:d},{type:12,data:y},{type:12,data:w}];Ut(r,k),k.push(...se(O,f,m)),I&&k.push(...se(e[2].dims)),k.push(...se(z));let G=U=>{let q=ii("batch_dims",e[0].dataType,O.length),K=X("a",e[0].dataType,f.length,$),J=X("b",e[1].dataType,m.length,C),ie=ne("output",e[0].dataType,z.length,C),ge=He(ie.type.tensor),L=zt(r,ie.type.value,ge),ue=[K,J],je="";if(I){let Ie=s?C:1;ue.push(X("bias",e[2].dataType,e[2].dims.length,Ie)),je=`${s?`value += bias[col / ${Ie}];`:`value += ${ie.type.value}(bias[row + i]);`}`}let Ve=f.slice(0,-2),Ce=m.slice(0,-2),ae=Tr(Ve,O),ye=Tr(Ce,O),Me=[{name:"output_size",type:"u32"},{name:"M",type:"u32"},{name:"N",type:"u32"},{name:"K",type:"u32"}];jt(r,Me);let xe=(Ie,Pe)=>{let De=Ie.rank,Ye=Ie.name;if(De===2)return`var ${Ye}_indices = ${Ie.type.indices}(0u, 0u);`;let te=q.rank,fe=`var ${Ye}_indices: ${Ie.type.indices};`;for(let Se=De-2-1,st=te-1;Se>=0;Se--,st--)fe+=`\n${Ye}_indices[${Se}] = ${te>1?`batch_indices[${st}]`:"batch_indices"};`;return Pe.forEach(Se=>{fe+=`\n${Ye}_indices[${Se}] = 0;`}),fe+=`${Ye}_indices[${De-2}] = 0u;\n                     ${Ye}_indices[${De-1}] = 0u;`,fe},_e=()=>{let Ie=`var a_data: ${K.type.value};`;for(let Pe=0;Pe<$;Pe++)Ie+=`\n              let b_data${Pe} = b[(b_offset + (k + ${Pe}) * uniforms.N + col) / ${C}];`;for(let Pe=0;Pe<T;Pe++){Ie+=`a_data = a[(a_offset + (row + ${Pe}) * uniforms.K + k) / ${$}];`;for(let De=0;De<$;De++)Ie+=`\n            values[${Pe}] = fma(${J.type.value}(a_data${$===1?"":`[${De}]`}), b_data${De}, values[${Pe}]);\n`}return Ie};return`\n  ${U.registerUniforms(Me).registerInternalVariables(q).declareVariables(...ue,ie)}\n  ${U.mainStart()}\n    ${U.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n    let col = (global_idx % (uniforms.N / ${C})) * ${C};\n    var index1 = global_idx / (uniforms.N / ${C});\n    let stride1 = uniforms.M / ${T};\n    let row = (index1 % stride1) * ${T};\n    let batch = index1 / stride1;\n\n    ${t.length===2?"":`let batch_indices = ${q.offsetToIndices("batch")};`}\n    ${xe(K,ae)}\n    let a_offset = ${K.indicesToOffset("a_indices")};\n    ${xe(J,ye)}\n    let b_offset = ${J.indicesToOffset("b_indices")};\n    var values: array<${ie.type.value}, ${T}>;\n    for (var k: u32 = 0u; k < uniforms.K; k = k + ${$}) {\n      ${_e()}\n    }\n    for (var i = 0u; i < ${T}u; i++) {\n      var value = values[i];\n      ${je}\n      ${L}\n      let cur_indices = ${ie.type.indices}(batch, row + i, col);\n      let offset = ${ie.indicesToOffset("cur_indices")};\n      ${ie.setByOffset(`offset / ${C}`,"value")};\n    }\n  }\n  `};return{name:"MatMulNaive",shaderCache:{hint:`${r.activation};${C};${$};${T};${s}`,inputDependencies:I?["rank","rank","rank"]:["rank","rank"]},getRunData:()=>({outputs:[{dims:t,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(P/64)},programUniforms:k}),getShaderSource:G}},Eg=e=>{if(!e||e.length!==2)throw new Error("MatMul requires 2 inputs.");if(e[0].dims[e[0].dims.length-1]!==e[1].dims[e[1].dims.length-2])throw new Error("shared dimension does not match.")},dd=e=>{Eg(e.inputs);let r=Ot.calcShape(e.inputs[0].dims,e.inputs[1].dims,!0);if(!r)throw new Error("Can\'t use matmul on the given tensors");let t=r[r.length-1],u=e.inputs[0].dims[e.inputs[0].dims.length-1];t<8&&u<8?e.compute(Ji(e.inputs,{activation:""},r)):e.compute(hi(e.inputs,{activation:""},r))}});var Qi,cd,Pg,fd,to,Og,kg,ro,Xi=oe(()=>{"use strict";Ee();ud();pn();ld();Ft();eo();Er();Qi=(e,r,t,u,s,f)=>{let m=e[0],d=e.slice(f?1:2,f?3:4),y=d.length,w=r[0],$=r.slice(2).map((I,O)=>I+(I-1)*(t[O]-1)),P=d.map((I,O)=>I+u[O]+u[O+y]).map((I,O)=>Math.floor((I-$[O]+s[O])/s[O]));return P.splice(0,0,m),P.splice(f?3:1,0,w),P},cd=[2,3,1,0],Pg=(e,r)=>{if(!e||e.length!==2&&e.length!==3)throw new Error("Conv requires 2 or 3 inputs");if(e[0].dims.length!==4&&e[0].dims.length!==3)throw new Error("currently only support conv 1D and 2D");if(e[0].dims.length!==e[1].dims.length)throw new Error("filter does not have same dimension as input");let t=e[0].dims[r.format==="NHWC"?e[0].dims.length-1:1],u=e[1].dims[1]*r.group;if(t!==u)throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");if(e.length===3&&(e[2].dims.length!==1||e[1].dims[0]!==e[2].dims[0]))throw new Error("invalid bias");let s=e[0].dims.length-2;if(r.dilations.length!==s)throw new Error(`dilations should be ${s}D`);if(r.strides.length!==s)throw new Error(`strides should be ${s}D`);if(r.pads.length!==s*2)throw new Error(`pads should be ${s*2}D`);if(r.kernelShape.length!==0&&r.kernelShape.length!==e[1].dims.length-2)throw new Error("invalid kernel shape")},fd=(e,r)=>{let t=e.kernelShape.slice();for(let f=2;f<r[1].dims.length;++f)t[f-2]===0&&(t[f-2]=r[1].dims[f]);let u=e.pads.slice();sr.adjustPadsBasedOnAutoPad(r[0].dims,e.strides,e.dilations,t,u,e.format==="NHWC",e.autoPad);let s=Object.assign({},e);return Object.assign(s,{kernelShape:t,pads:u}),s},to=e=>{let r=ci(e),t=e.format,u=["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][e.auto_pad],s=e.dilations,f=e.group,m=e.kernel_shape,d=e.pads,y=e.strides,w=e.w_is_const();return{autoPad:u,format:t,dilations:s,group:f,kernelShape:m,pads:d,strides:y,wIsConst:w,...r,cacheKey:`${e.format};${r.activation};`}},Og=(e,r,t)=>{let u=fd(t,r),s=t.format==="NHWC";if(t.group!==1){e.compute(Zi(r,u));return}let f=r.length===3,m=r[0].dims[s?1:2],d=r[0].dims[s?2:3],y=r[0].dims[s?3:1],w=r[1].dims[2],C=r[1].dims[3],$=Qi(r[0].dims,r[1].dims,t.dilations,u.pads,t.strides,s),T=$[s?1:2],P=$[s?2:3],I=$[s?3:1],O=s&&w===m&&C===d&&t.pads[0]===0&&t.pads[1]===0;if(O||w===1&&C===1&&t.dilations[0]===1&&t.dilations[1]===1&&t.strides[0]===1&&t.strides[1]===1&&t.pads[0]===0&&t.pads[1]===0){let K=$[0],J,ie,ge,L=[];if(s){let Ve=e.kernelCustomData.wT??e.compute(xt(r[1],cd),{inputs:[1],outputs:[t.wIsConst?-2:-1]})[0];if(t.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=Ve),O){let Ce=m*d*y;J=r[0].reshape([1,K,Ce]),ie=Ve.reshape([1,Ce,I]),ge=[1,K,I]}else J=r[0].reshape([K,m*d,y]),ie=Ve.reshape([1,y,I]),ge=[K,T*P,I];L.push(J),L.push(ie)}else J=r[0].reshape([K,y,m*d]),ie=r[1].reshape([1,I,y]),ge=[K,I,T*P],L.push(ie),L.push(J);f&&L.push(r[2]);let ue=ge[2],je=L[0].dims[L[0].dims.length-1];ue<8&&je<8?e.compute(Ji(L,u,$,ge,s),{inputs:L}):e.compute(hi(L,u,$,ge,s),{inputs:L});return}let R=!0,z=e.kernelCustomData.wT??e.compute(xt(r[1],cd),{inputs:[1],outputs:[t.wIsConst?-2:-1]})[0];t.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=z);let k=[r[0],z];f&&k.push(r[2]);let G=s?T*P:I,U=s?I:T*P,q=w*C*y;e.compute(sd(k,u,$,G,U,q,f,R),{inputs:k})},kg=(e,r)=>{let t=r.format==="NHWC",u=[e.inputs[0].reshape(t?[e.inputs[0].dims[0],1,e.inputs[0].dims[1],e.inputs[0].dims[2]]:[e.inputs[0].dims[0],e.inputs[0].dims[1],1,e.inputs[0].dims[2]]),e.inputs[1].reshape([e.inputs[1].dims[0],e.inputs[1].dims[1],1,e.inputs[1].dims[2]])];e.inputs.length===3&&u.push(e.inputs[2]);let s=[0,r.pads[0],0,r.pads[1]],f=[1].concat(r.strides),m=[1].concat(r.dilations),d=[1].concat(r.kernelShape),y=fd({...r,pads:s,strides:f,dilations:m,kernelShape:d},u);e.compute(Zi(u,y,w=>t?[w[0],w[2],w[3]]:[]))},ro=(e,r)=>{Pg(e.inputs,r),e.inputs[0].dims.length===3?kg(e,r):Og(e,e.inputs,r)}});var Rg,pd,md=oe(()=>{"use strict";$e();Lt();Te();Ft();pi();Yi();pn();Rg=(e,r=!1,t,u=4)=>{let s=et(u,"f32"),f=z=>{switch(z){case 1:return"return w[getIndexFromCoords4D(coord, vec4<i32>(uniforms.w_shape))];";case 4:return`\n            let coord1 = vec4<i32>(coordX, coordY, col + 1, rowInner);\n            let coord2 = vec4<i32>(coordX, coordY, col + 2, rowInner);\n            let coord3 = vec4<i32>(coordX, coordY, col + 3, rowInner);\n            let v0 = w[getIndexFromCoords4D(coord, vec4<i32>(uniforms.w_shape))];\n            let v1 = w[getIndexFromCoords4D(coord1, vec4<i32>(uniforms.w_shape))];\n            let v2 = w[getIndexFromCoords4D(coord2, vec4<i32>(uniforms.w_shape))];\n            let v3 = w[getIndexFromCoords4D(coord3, vec4<i32>(uniforms.w_shape))];\n            return vec4<f32>(v0, v1, v2, v3);\n            `;default:throw new Error(`innerElementSize ${z} is not supported.`)}},m=e?`\n      let coord = vec4<i32>(batch, iXR, iXC, xCh);\n      `:`\n      let coord = vec4<i32>(batch, xCh, iXR, iXC);\n      `,d=e?`\n    let coords = vec4<i32>(\n      batch,\n      row / outWidth,\n      row % outWidth,\n      col);\n    `:`\n    let coords = vec4<i32>(\n      batch,\n      row,\n      col / outWidth,\n      col % outWidth);\n    `,y=e?"i32(uniforms.x_shape[1])":"i32(uniforms.x_shape[2])",w=e?"i32(uniforms.x_shape[2])":"i32(uniforms.x_shape[3])",C=e?"row":"col",$=e?"col":"row",T=`\n      let inChannels = ${e?"i32(uniforms.x_shape[3])":"i32(uniforms.x_shape[1])"};\n      let outWidth = ${e?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};\n      let outRow = ${C} / outWidth;\n      let outCol = ${C} % outWidth;\n\n      let WRow = ${$} / (uniforms.filter_dims[1] * inChannels);\n      let WCol = ${$} / inChannels % uniforms.filter_dims[1];\n      let xR = f32(outRow - uniforms.pads[0] + uniforms.dilations[0] * WRow) / f32(uniforms.strides[0]);\n      let xC = f32(outCol - uniforms.pads[1] + uniforms.dilations[1] * WCol) / f32(uniforms.strides[1]);\n      if (xR < 0.0 || xR >= f32(${y}) || fract(xR) > 0.0) {\n        return ${s}(0.0);\n      }\n      if (xC < 0.0 || xC >= f32(${w}) || fract(xC) > 0.0) {\n        return ${s}(0.0);\n      }\n      let iXR = i32(xR);\n      let iXC = i32(xC);\n      let xCh = ${$} % inChannels;\n      ${m}\n      return x[getIndexFromCoords4D(coord, vec4<i32>(uniforms.x_shape))/${u}];`,P=e?`\n      let col = colIn * ${u};\n      if (row < uniforms.dim_a_outer && col < uniforms.dim_inner) {\n        ${T}\n      }\n      return ${s}(0.0);`:`\n      let col = colIn * ${u};\n      if (row < uniforms.dim_inner && col < uniforms.dim_b_outer) {\n        ${T}\n      }\n      return ${s}(0.0);`,I=`\n      let col = colIn * ${u};\n      let inChannels = ${e?"i32(uniforms.x_shape[3])":"i32(uniforms.x_shape[1])"};\n      let coordX = uniforms.filter_dims[0] - 1 - row / (uniforms.filter_dims[1] * inChannels);\n      let coordY = uniforms.filter_dims[1] - 1 - (row / inChannels) % uniforms.filter_dims[1];\n      if (${e?"row < uniforms.dim_inner && col < uniforms.dim_b_outer":"row < uniforms.dim_inner && col < uniforms.dim_a_outer"}  && coordX >= 0 && coordY >= 0) {\n        let rowInner = row % inChannels;\n        let coord = vec4<i32>(coordX, coordY, col, rowInner);\n        ${f(u)}\n      }\n      return ${s}(0.0);\n      `,O=zt(t,s);return`\n  fn mm_readA(batch: i32, row : i32, colIn : i32) -> ${s} {\n    ${e?P:I}\n  }\n\n  fn mm_readB(batch: i32, row : i32, colIn : i32) -> ${s} {\n    ${e?I:P}\n  }\n\n  fn mm_write(batch: i32, row : i32, colIn : i32, valueInput : ${s}) {\n    let col = colIn * ${u};\n    if (row < uniforms.dim_a_outer && col < uniforms.dim_b_outer) {\n      var value = valueInput;\n      let outWidth = ${e?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};\n      ${d}\n      ${fi(r)}\n      ${O}\n      result[getIndexFromCoords4D(coords, vec4<i32>(uniforms.result_shape))/${u}] = value;\n    }\n  }`},pd=(e,r,t,u,s,f,m,d)=>{let y=r.format==="NHWC",w=y?e[0].dims[3]:e[0].dims[1],C=t[0],$=y?t[2]:t[3],T=y?t[1]:t[2],P=y?t[3]:t[1],I=y?w%4===0&&P%4===0:$%4===0&&P%4===0,O=y?P:$*T,R=y?$*T:P,z=I?[8,8,1]:[O<=4||R<=4?4:16,O>4&&R<=4?4:16,1],k=I?[4,4,1]:[O<=4?1:4,O>4&&R<=4?1:4,1],G=[Math.ceil(O/z[0]/k[0]),Math.ceil(R/z[1]/k[1]),Math.ceil(C/z[2]/k[2])];Ge("verbose",()=>`[conv_backprop_mm_webgpu] dispatch = ${G}`);let U=I?4:1,q=Math.max(z[0]*U,z[1]),K=I?4:1,J=[r.kernelShape[y?1:2],r.kernelShape[y?2:3]],ie=[J[0]+(r.dilations[0]<=1?0:(J[0]-1)*(r.dilations[0]-1)),J[1]+(r.dilations[1]<=1?0:(J[1]-1)*(r.dilations[1]-1))],ge=[ie[0]-1-Math.floor((r.pads[0]+r.pads[2])/2),ie[1]-1-Math.floor((r.pads[1]+r.pads[3])/2)],L=[{type:6,data:u},{type:6,data:s},{type:6,data:f},{type:6,data:r.strides},{type:6,data:r.dilations},{type:6,data:J},{type:6,data:ge}];Ut(r,L),L.push(...se(e[0].dims,e[1].dims));let ue=["rank","rank"];m&&(L.push(...se(e[2].dims)),ue.push("rank")),L.push(...se(t));let je=Ve=>{let Ce=X("x",e[0].dataType,e[0].dims.length,K),ae=X("w",e[1].dataType,e[1].dims.length,1),ye=ne("result",e[0].dataType,t.length,K),Me=[Ce,ae],xe="";if(m){let Ie=X("bias",e[2].dataType,e[2].dims.length,K);Me.push(Ie),xe+=`\n          fn getBiasByOutputCoords(coords : vec4<i32>) -> ${I?"vec4<f32>":"f32"} {\n            return bias[coords.${y?"w":"y"}${I?"/ 4":""}];\n          }`}let _e=[{name:"dim_a_outer",type:"i32"},{name:"dim_b_outer",type:"i32"},{name:"dim_inner",type:"i32"},{name:"strides",type:"i32",length:2},{name:"dilations",type:"i32",length:2},{name:"filter_dims",type:"i32",length:J.length},{name:"pads",type:"i32",length:ge.length}];return jt(r,_e),`\n        ${mi("uniforms.result_strides")}\n        ${Ve.registerUniforms(_e).declareVariables(...Me,ye)};\n        ${xe}\n        ${Rg(y,m,r,U)}\n        ${I?cn(k,z,"f32",void 0,!y,q):fn(k,z,"f32",void 0,!y,q,!1,void 0,d)}`};return{name:"Conv2DTransposeMatMul",shaderCache:{hint:`${r.cacheKey};${k};${z};${I}`,inputDependencies:ue},getRunData:()=>({outputs:[{dims:t,dataType:e[0].dataType}],dispatchGroup:{x:G[0],y:G[1],z:G[2]},programUniforms:L}),getShaderSource:je}}});var Dg,no,hd=oe(()=>{"use strict";$e();Lt();Ee();Te();Dg=(e,r,t,u,s,f=!1,m,d,y=!1)=>{let w=y?1:2,C=y?2:3,$=y?3:1,T=f?2:1,P=`\n  fn setOutputAtIndex(flatIndex : u32, value : ${f?`vec4<${m}>`:m}) {\n    result[flatIndex] = ${f?`vec4<${m}>`:m}(value);\n  }`;u&&(P+=`\n    fn getBiasByOutputCoords(coords : vec4<u32>) -> ${f?`vec4<${m}>`:m} {\n      return bias[coords.${y?"w":"y"}${f?"/ 4":""}];\n    }`);let I=f?4:1,O=X("W",r[1].dataType,r[1].dims.length,I),R=X("Dy",r[0].dataType,r[0].dims.length,I),z=[R,O];u&&z.push(X("bias",r[2].dataType,[t[$]].length,I));let k=ne("result",r[0].dataType,t.length,I),G=`{\n        let batch: u32 = ${s?"global_id.z":"workgroup_id.z"} / uniforms.result_shape[1];\n        let r = ${s?"global_id.z":"workgroup_id.z"} % uniforms.result_shape[1];\n        let c = ${s?"global_id.y":"workgroup_id.y"} * ${T};\n        let d1: u32 = ${s?"global_id.x":"workgroup_id.x"} * 4;\n\n        let dyCorner = vec2<i32>(i32(r), i32(c)) - vec2<i32>(uniforms.pads);\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        var dotProd: array<vec4<${m}>, ${T}>;\n        for (var i = 0; i < ${T}; i++) {\n          dotProd[i] = vec4<${m}>(0.0);\n        }\n        for (var wR: u32 = 0; wR < uniforms.filter_dims[0]; wR = wR + 1) {\n          var dyR = (${m}(dyCorner.x) + ${m}(wR)) / ${m}(uniforms.strides.x);\n          let wRPerm = uniforms.filter_dims[0] - 1 - wR;\n          if (dyR < 0.0 || dyR >= ${m}(uniforms.Dy_shape[1]) ||\n              fract(dyR) > 0.0 || wRPerm < 0) {\n            continue;\n          }\n          let idyR: u32 = u32(dyR);\n\n          for (var wC: u32 = 0; wC < uniforms.filter_dims[1]; wC = wC + 1) {\n            let dyC = (${m}(dyCorner.y) + ${m}(wC)) / ${m}(uniforms.strides.y);\n            let dyC2 = (${m}(dyCorner.y) + 1.0 + ${m}(wC)) / ${m}(uniforms.strides.y);\n            let wCPerm = uniforms.filter_dims[1] - 1 - wC;\n            if (wCPerm < 0) {\n              continue;\n            }\n            var bDyCVal = true;\n            var bDyCVal2 = true;\n            if (dyC < 0.0 || dyC >= ${m}(uniforms.Dy_shape[2]) ||\n                fract(dyC) > 0.0) {\n              bDyCVal = false;\n            }\n            if (dyC2 < 0.0 || dyC2 >= ${m}(uniforms.Dy_shape[2]) ||\n                fract(dyC2) > 0.0) {\n              bDyCVal2 = false;\n            }\n\n            let idyC: u32 = u32(dyC);\n            let idyC2: u32 = u32(dyC2);\n            if (bDyCVal && bDyCVal2) {\n              let d2Length = uniforms.Dy_shape[3];\n              for (var d2 :u32 = 0; d2 < d2Length; d2 = d2 + 4) {\n                let wValue0 = ${O.get("u32(wRPerm)","u32(wCPerm)","d1","d2")};\n                let wValue1 = ${O.get("u32(wRPerm)","u32(wCPerm)","d1 + 1","d2")};\n                let wValue2 = ${O.get("u32(wRPerm)","u32(wCPerm)","d1 + 2","d2")};\n                let wValue3 = ${O.get("u32(wRPerm)","u32(wCPerm)","d1 + 3","d2")};\n\n                var xValue = ${R.get("batch","idyR","idyC","d2")};\n                let tmpval = vec4<${m}>(dot(xValue, wValue0),\n                                      dot(xValue, wValue1),\n                                      dot(xValue, wValue2),\n                                      dot(xValue, wValue3));\n                dotProd[0] = dotProd[0] + tmpval;\n\n                xValue =  ${R.get("batch","idyR","idyC2","d2")};\n\n                dotProd[1] = dotProd[1] + vec4<${m}>(dot(xValue, wValue0),\n                                                    dot(xValue, wValue1),\n                                                    dot(xValue, wValue2),\n                                                    dot(xValue, wValue3));\n              }\n            } else if (bDyCVal) {\n              let d2Length = uniforms.Dy_shape[${$}];\n              for (var d2: u32 = 0; d2 < d2Length; d2 = d2 + 4) {\n                let wValue0 = ${O.get("u32(wRPerm)","u32(wCPerm)","d1","d2")};\n                let wValue1 = ${O.get("u32(wRPerm)","u32(wCPerm)","d1 + 1","d2")};\n                let wValue2 = ${O.get("u32(wRPerm)","u32(wCPerm)","d1 + 2","d2")};\n                let wValue3 = ${O.get("u32(wRPerm)","u32(wCPerm)","d1 + 3","d2")};\n\n                var xValue = ${R.get("batch","idyR","idyC","d2")};\n                let tmpval = vec4<${m}>(dot(xValue, wValue0),\n                                      dot(xValue, wValue1),\n                                      dot(xValue, wValue2),\n                                      dot(xValue, wValue3));\n                dotProd[0] = dotProd[0] + tmpval;\n              }\n            } else if (bDyCVal2) {\n              let d2Length = uniforms.Dy_shape[3];\n              for (var d2: u32 = 0; d2 < d2Length; d2 = d2 + 4) {\n                let wValue0 = ${O.get("u32(wRPerm)","u32(wCPerm)","d1","d2")};\n                let wValue1 = ${O.get("u32(wRPerm)","u32(wCPerm)","d1 + 1","d2")};\n                let wValue2 = ${O.get("u32(wRPerm)","u32(wCPerm)","d1 + 2","d2")};\n                let wValue3 = ${O.get("u32(wRPerm)","u32(wCPerm)","d1 + 3","d2")};\n\n                var xValue = ${R.get("batch","idyR","idyC2","d2")};\n                let tmpval = vec4<${m}>(dot(xValue, wValue0),\n                                      dot(xValue, wValue1),\n                                      dot(xValue, wValue2),\n                                      dot(xValue, wValue3));\n                dotProd[1] = dotProd[1] + tmpval;\n              }\n            }\n          }\n        }\n\n        for (var i: u32 = 0; i < ${T}; i = i + 1) {\n          let value = dotProd[i] + ${u?"bias[c+i]":`vec4<${m}>(0.0)`};\n          ${k.set("batch","r","c + i","d1","value")};\n        }\n      }`,U=`\n          let outputIndices = ${k.offsetToIndices("global_idx")};\n          let batch = ${k.indicesGet("outputIndices",0)};\n          let d1 = ${k.indicesGet("outputIndices",$)};\n          let r = ${k.indicesGet("outputIndices",w)};\n          let c = ${k.indicesGet("outputIndices",C)};\n          let dyCorner = vec2<i32>(i32(r), i32(c)) - uniforms.pads;\n          let dyRCorner = dyCorner.x;\n          let dyCCorner = dyCorner.y;\n          let groupId = d1 / uniforms.output_channels_per_group;\n          let wOutChannel = d1 - groupId * uniforms.output_channels_per_group;\n          // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n          // ? = to be determined. : = across all values in that axis.\n          var dotProd = ${m}(0.0);\n          for (var wR: u32 = 0; wR < uniforms.effective_filter_dims.x; wR = wR + 1) {\n            if (wR % uniforms.dilations.x != 0) {\n              continue;\n            }\n            let dyR = (${m}(dyRCorner) + ${m}(wR)) / ${m}(uniforms.strides[0]);\n            let wRPerm = uniforms.filter_dims.x - 1 - wR / uniforms.dilations.x;\n            if (dyR < 0.0 || dyR >= ${m}(uniforms.Dy_shape[${w}]) || fract(dyR) > 0.0 ||\n                wRPerm < 0) {\n              continue;\n            }\n            let idyR: u32 = u32(dyR);\n\n            for (var wC: u32 = 0; wC < uniforms.effective_filter_dims.y; wC = wC + 1) {\n              if (wC % uniforms.dilations.y != 0) {\n                continue;\n              }\n              let dyC = (${m}(dyCCorner) + ${m}(wC)) / ${m}(uniforms.strides.y);\n              let wCPerm = uniforms.filter_dims.y - 1 - wC / uniforms.dilations.y;\n              if (dyC < 0.0 || dyC >= ${m}(uniforms.Dy_shape[${C}]) ||\n                  fract(dyC) > 0.0 || wCPerm < 0) {\n                continue;\n              }\n              let idyC: u32 = u32(dyC);\n              var inputChannel = groupId * uniforms.input_channels_per_group;\n              for (var d2: u32 = 0; d2 < uniforms.input_channels_per_group; d2 = d2 + 1) {\n                let xValue = ${y?R.get("batch","idyR","idyC","inputChannel"):R.get("batch","inputChannel","idyR","idyC")};\n                let wValue = ${O.get("inputChannel","wOutChannel","u32(wRPerm)","u32(wCPerm)")};\n                dotProd = dotProd + xValue * wValue;\n                inputChannel = inputChannel + 1;\n              }\n            }\n          }\n          let value = dotProd + ${u?"bias[d1]":`${m}(0.0)`};\n          ${k.setByOffset("global_idx","value")};\n        `;return`\n  ${e.registerUniforms(d).declareVariables(...z,k)}\n  ${P}\n\n    ${e.mainStart()}\n    ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")};\n  ${f?G:U}}`},no=(e,r,t)=>{let u=e.length>2,s=r.outputShape,f=Q.size(s),m=[Math.ceil(f/64),1,1];Ge("verbose",()=>`[conv2d_backprop_webgpu] dispatch = ${m}`);let d=r.format==="NHWC",y=["rank","rank"],w=[r.strides[0],r.strides[1]],C=[r.kernelShape[d?1:2],r.kernelShape[d?2:3]],$=[r.dilations[0],r.dilations[1]],T=[C[0]+(r.dilations[0]<=1?0:(r.kernelShape[d?1:2]-1)*(r.dilations[0]-1)),C[1]+(r.dilations[1]<=1?0:(r.kernelShape[d?2:3]-1)*(r.dilations[1]-1))],P=[T[0]-1-Math.floor((r.pads[0]+r.pads[2])/2),T[1]-1-Math.floor(r.pads[1]+r.pads[3])/2],I=!1,O=r.group,R=e[1].dims,z=R[0]/O,k=R[1],G=[{type:6,data:f},{type:12,data:w},{type:12,data:C},{type:12,data:$},{type:12,data:T},{type:6,data:P},{type:12,data:z},{type:12,data:k},...se(e[0].dims,e[1].dims)];u&&(G.push(...se(e[2].dims)),y.push("rank")),G.push(...se(s));let U=m[1]===1&&m[2]===1,q=K=>{let J=[{name:"output_size",type:"u32"},{name:"strides",type:"u32",length:w.length},{name:"filter_dims",type:"u32",length:C.length},{name:"dilations",type:"u32",length:C.length},{name:"effective_filter_dims",type:"u32",length:T.length},{name:"pads",type:"i32",length:P.length},{name:"input_channels_per_group",type:"u32"},{name:"output_channels_per_group",type:"u32"}],ie=He(e[0].dataType);return`${Dg(K,e,s,u,U,I,ie,J,d)}`};return{name:"ConvTranspose2D",shaderCache:{hint:`${r.cacheKey};`,inputDependencies:y},getRunData:()=>({dispatchGroup:{x:m[0],y:m[1],z:m[2]},outputs:[{dims:t?t(s):s,dataType:e[0].dataType}],programUniforms:G}),getShaderSource:q}}});var Bg,Mg,zg,gd,yd,Ug,jg,Vg,Ng,bd,vd=oe(()=>{"use strict";md();hd();Ft();Er();Bg=(e,r,t,u,s,f)=>(e-1)*r+t+(u-1)*s+1-f,Mg=(e,r,t,u,s)=>{let f=Math.floor(e/2);r==="SAME_UPPER"?(t[u]=f,t[s]=e-f):r==="SAME_LOWER"&&(t[u]=e-f,t[s]=f)},zg=(e,r,t,u,s,f,m,d,y,w)=>{let C=e.length-2,$=w.length===0;if(y.length===0)for(let I=0;I<C;++I)y.push(0);let T=e[0],P=r[d?3:1]*s;for(let I=0,O=e.length-C-(d?1:0);I<C;++I,++O){let R=e[O],z=$?R*m[I]:w[I],k=Bg(R,m[I],f[I],r[O],t[I],z);Mg(k,u,f,I,I+C),$&&w.push(m[I]*(R-1)+y[I]+(r[O]-1)*t[I]+1-f[I]-f[I+C])}w.splice(0,0,T),w.splice(d?3:1,0,P)},gd=(e,r)=>{let t=e.kernelShape.slice();if(e.kernelShape.length===0||e.kernelShape.reduce(($,T)=>$*T,1)===0){t.length=0;for(let $=2;$<r[1].dims.length;++$)t.push(r[1].dims[$])}let u=e.format==="NHWC";t.splice(0,0,r[1].dims[0]),t.splice(u?3:1,0,r[1].dims[1]);let s=e.pads.slice(),f=e.outputShape.slice(),m=e.outputPadding.slice(),d=r[0].dims,y=e.dilations.slice();if(y.reduce(($,T)=>$+T,0)===0){let $=r[0].dims.length-2;y=new Array($).fill(1)}let w=e.strides.slice();if(w.reduce(($,T)=>$+T,0)===0){let $=r[0].dims.length-2;w=new Array($).fill(1)}zg(d,t,y,e.autoPad,e.group,s,w,u,m,f);let C=Object.assign({},e);return Object.assign(C,{kernelShape:t,pads:s,outputPadding:m,outputShape:f,dilations:y,strides:w}),C},yd=e=>{let r=ci(e),t=e.format,u=["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][typeof e.autoPad>"u"?0:e.autoPad],s=e.dilations,f=e.group,m=e.kernelShape,d=e.pads,y=e.strides,w=e.wIsConst(),C=e.outputPadding,$=e.outputShape;return{autoPad:u,format:t,dilations:s,group:f,kernelShape:m,outputPadding:C,outputShape:$,pads:d,strides:y,wIsConst:w,...r,cacheKey:`${e.format};${r.activation};`}},Ug=(e,r)=>{if(!e||e.length!==2&&e.length!==3)throw new Error("Conv requires 2 or 3 inputs");if(e[0].dims.length!==4&&e[0].dims.length!==3)throw new Error("currently only support 2-dimensional conv");if(e[0].dims.length!==e[1].dims.length)throw new Error("filter does not have same dimension as input");let t=e[0].dims[r.format==="NHWC"?e[0].dims.length-1:1],u=e[1].dims[0];if(t!==u)throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");let s=e[1].dims[1]*r.group;if(e.length===3&&(e[2].dims.length!==1||e[2].dims[0]!==s))throw new Error("invalid bias");let f=e[0].dims.length-2;if(r.dilations.reduce((C,$)=>C+$,0)>0&&r.dilations.length!==f)throw new Error(`dilations should be ${f}D`);if(r.strides.reduce((C,$)=>C+$,0)>0&&r.strides.length!==f)throw new Error(`strides should be ${f}D`);if(r.pads.reduce((C,$)=>C+$,0)>0&&r.pads.length!==f*2)throw new Error(`pads should be ${f*2}D`);if(r.outputPadding.length!==f&&r.outputPadding.length!==0)throw new Error(`output_padding should be ${f}D`);if(r.kernelShape.reduce((C,$)=>C+$,0)>0&&r.kernelShape.length!==0&&r.kernelShape.length!==e[1].dims.length-2)throw new Error("invalid kernel shape");if(r.outputShape.length!==0&&r.outputShape.length!==e[0].dims.length-2)throw new Error("invalid output shape")},jg=[2,3,1,0],Vg=(e,r,t)=>{let u=gd(t,r),s=t.format==="NHWC",f=u.outputShape,m=f[s?3:1],d=r[0].dims[s?3:1];if(u.group!==1||m===1&&d===1){e.compute(no(r,u));return}let y=f[s?1:2],w=f[s?2:3],C=r[1].dims[2],$=r[1].dims[3],T=s?y*w:m,P=s?m:y*w,I=C*$*d,O=!0,R=e.kernelCustomData.wT??e.compute(xt(r[1],jg),{inputs:[1],outputs:[t.wIsConst?-2:-1]})[0];t.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=R);let z=[r[0],R],k=r.length===3;k&&(!s&&r[2].dims.length===1?z.push(r[2].reshape([r[2].dims[0],1,1])):z.push(r[2])),e.compute(pd(z,u,f,T,P,I,k,O),{inputs:z})},Ng=(e,r)=>{let t=r.format==="NHWC",u=[e.inputs[0].reshape(t?[e.inputs[0].dims[0],1,e.inputs[0].dims[1],e.inputs[0].dims[2]]:[e.inputs[0].dims[0],e.inputs[0].dims[1],1,e.inputs[0].dims[2]]),e.inputs[1].reshape([e.inputs[1].dims[0],e.inputs[1].dims[1],1,e.inputs[1].dims[2]])];u.length===3&&u.push(e.inputs[2]);let s=r.kernelShape;(s.length===0||s[0]===0)&&(s=[e.inputs[1].dims[2]]);let f=r.dilations;(f.length===0||f[0]===0)&&(f=[1]);let m=r.strides;(m.length===0||m[0]===0)&&(m=[1]);let d=r.pads;d.length===0&&(d=[0,0]),d=[0,d[0],0,d[1]],m=[1].concat(m),f=[1].concat(f),s=[1].concat(s);let y=gd({...r,pads:d,strides:m,dilations:f,kernelShape:s},u);e.compute(no(u,y,w=>t?[w[0],w[2],w[3]]:[w[0],w[1],w[3]]))},bd=(e,r)=>{Ug(e.inputs,r),e.inputs[0].dims.length===3?Ng(e,r):Vg(e,e.inputs,r)}});var Wg,wd,_d,$d=oe(()=>{"use strict";$e();Ee();ot();Te();Wg=(e,r,t,u)=>{let s=Q.size(r),f=r.length,m=X("input",e,f),d=ne("output",e,f),y=t.dataType===6?t.getInt32Array()[0]:Number(t.getBigInt64Array()[0]),w=Q.normalizeAxis(y,f),C=$=>{let T=` i32(${m.indicesGet("inputIndices","uniforms.axis")}) `,P=ve("uniforms.input_shape","uniforms.axis",f),I=u.reverse?T+(u.exclusive?" + 1":""):"0",O=u.reverse?P:T+(u.exclusive?"":" + 1");return`\n                ${$.registerUniform("outputSize","u32").registerUniform("axis","u32").declareVariables(m,d)}\n                ${$.mainStart()}\n                  ${$.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n                  var inputIndices = ${d.offsetToIndices("global_idx")};\n                  var sum = ${d.type.value}(0);\n                  let first : i32 = ${I};\n                  let last : i32 = ${O};\n                  for (var i : i32 = first; i < last; i++) {\n                    ${m.indicesSet("inputIndices","uniforms.axis","u32(i)")};\n                    sum = sum + ${m.getByIndices("inputIndices")};\n                  }\n                  ${d.setByOffset("global_idx","sum")};\n                }`};return{name:"CumSum",shaderCache:{hint:u.cacheKey,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:r,dataType:e}],dispatchGroup:{x:Math.ceil(s/64)},programUniforms:[{type:12,data:s},{type:6,data:w},...se(r,r)]}),getShaderSource:C}},wd=(e,r)=>{let t=e.inputs[0].dims,u=e.inputs[0].dataType,s=e.inputs[1];e.compute(Wg(u,t,s,r),{inputs:[0]})},_d=e=>{let r=e.exclusive===1,t=e.reverse===1;return ke({exclusive:r,reverse:t})}});var io,gi,Cd,Gg,Hg,oo,ao,Sd,Lg,xd,Id,Ad=oe(()=>{"use strict";$e();Ee();ot();Te();io="[a-zA-Z]|\\\\.\\\\.\\\\.",gi="("+io+")+",Cd="^"+gi+"$",Gg="("+gi+",)*"+gi,Hg="^"+Gg+"$",oo=class{constructor(r=-1){this.symbolToIndices=new Map,this.inputIndex=r}addSymbol(r,t){let u=this.symbolToIndices.get(r);u===void 0?u=[t]:u.push(t),this.symbolToIndices.set(r,u)}},ao=class{constructor(r,t){this.equation=t;this.hasEllipsis=!1,this.symbolToInfo=new Map,this.lhs=new Array,this.outputDims=[];let[u,s]=t.includes("->")?t.split("->",2):[t,""];if(!u.match(RegExp(Hg)))throw new Error("Invalid LHS term");if(u.split(",").forEach((d,y)=>{let w=r[y].dims.slice();if(!d.match(RegExp(Cd)))throw new Error("Invalid LHS term");let C=this.processTerm(d,!0,w,y);this.lhs.push(C)}),s==="")s+=[...this.symbolToInfo.entries()].filter(([d,y])=>y.count===1||d==="...").map(([d])=>d).join("");else if(!s.match(RegExp(gi)))throw new Error("Invalid RHS");s.match(RegExp(io,"g"))?.forEach(d=>{if(d==="...")this.outputDims=this.outputDims.concat(this.ellipsisDims);else{let y=this.symbolToInfo.get(d);if(y===void 0)throw new Error("Invalid RHS symbol");this.outputDims.push(y.dimValue)}}),this.rhs=this.processTerm(s,!1,this.outputDims)}addSymbol(r,t,u){let s=this.symbolToInfo.get(r);if(s!==void 0){if(s.dimValue!==t&&s.count!==1)throw new Error("Dimension mismatch");s.count++,s.inputIndices.push(u)}else s={count:1,dimValue:t,inputIndices:[u]};this.symbolToInfo.set(r,s)}processTerm(r,t,u,s=-1){let f=u.length,m=!1,d=[],y=0;if(!r.match(RegExp(Cd))&&!t&&r!=="")throw new Error("Invalid LHS term");let w=r.match(RegExp(io,"g")),C=new oo(s);return w?.forEach(($,T)=>{if($==="..."){if(m)throw new Error("Only one ellipsis is allowed per input term");m=!0;let P=f-w.length+1;if(P<0)throw new Error("Ellipsis out of bounds");if(d=u.slice(y,y+P),this.hasEllipsis){if(this.ellipsisDims.length!==d.length||this.ellipsisDims.toString()!==d.toString())throw new Error("Ellipsis dimensions mismatch")}else if(t)this.hasEllipsis=!0,this.ellipsisDims=d;else throw new Error("Ellipsis must be specified in the LHS");for(let I=0;I<d.length;I++){let O=String.fromCharCode("0".charCodeAt(0)+I);C.addSymbol(O,T+I),this.addSymbol(O,u[y++],s)}}else C.addSymbol($,T+(this.hasEllipsis?this.ellipsisDims.length-1:0)),this.addSymbol($,u[y++],s)}),C}},Sd=e=>e+"_max",Lg=(e,r,t,u)=>{let f=e.map(C=>C.length).map((C,$)=>X(`input${$}`,r,C)),m=Q.size(u),d=ne("output",r,u.length),y=[...t.symbolToInfo.keys()].filter(C=>!t.rhs.symbolToIndices.has(C)),w=C=>{let $=[],T="var prod = 1.0;",P="var sum = 0.0;",I="sum += prod;",O=[],R=[],z=[],k=[],G=t.symbolToInfo.size===t.rhs.symbolToIndices.size;t.symbolToInfo.forEach((q,K)=>{if(t.rhs.symbolToIndices.has(K)){let J=t.rhs.symbolToIndices.get(K)?.[0];J!==void 0&&t.lhs.forEach((ie,ge)=>{if(q.inputIndices.includes(ge)){let L=ie.symbolToIndices.get(K);if(L===void 0)throw new Error("Invalid symbol error");L.forEach(ue=>{$.push(`${f[ge].indicesSet(`input${ge}Indices`,ue,d.indicesGet("outputIndices",J))}`)})}})}else t.lhs.forEach((J,ie)=>{if(q.inputIndices.includes(ie)){let ge=J.symbolToIndices.get(K);if(ge===void 0)throw new Error("Invalid symbol error");ge.forEach(L=>{O.push(`${f[ie].indicesSet(`input${ie}Indices`,L,`${K}`)}`)}),k.push(`prod *= ${f[ie].getByIndices(`input${ie}Indices`)};`)}}),R.push(`for(var ${K}: u32 = 0; ${K} < uniforms.${Sd(K)}; ${K}++) {`),z.push("}")});let U=G?[...$,`let sum = ${f.map((q,K)=>q.getByIndices(`input${K}Indices`)).join(" * ")};`]:[...$,P,...R,...O,T,...k,I,...z];return`\n            ${C.registerUniforms(y.map(q=>({name:`${Sd(q)}`,type:"u32"}))).registerUniform("outputSize","u32").declareVariables(...f,d)}\n\n            ${C.mainStart()}\n            ${C.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n            var outputIndices = ${d.offsetToIndices("global_idx")};\n            ${f.map((q,K)=>`var input${K}Indices: ${f[K].type.indices};`).join(`\n`)}\n            ${U.join(`\n`)};\n            ${d.setByOffset("global_idx","sum")};\n          }`};return{name:"Einsum",shaderCache:{hint:t.equation,inputDependencies:e.map(()=>"rank")},getRunData:()=>{let C=y.filter(T=>t.symbolToInfo.has(T)).map(T=>({type:12,data:t.symbolToInfo.get(T)?.dimValue||0}));C.push({type:12,data:m});let $=e.map((T,P)=>[...se(T)]).reduce((T,P)=>T.concat(P),C);return $.push(...se(u)),{outputs:[{dims:u,dataType:r}],dispatchGroup:{x:Math.ceil(m/64)},programUniforms:$}},getShaderSource:w}},xd=(e,r)=>{let t=new ao(e.inputs,r.equation),u=t.outputDims,s=e.inputs.map((f,m)=>f.dims);e.compute(Lg(s,e.inputs[0].dataType,t,u))},Id=e=>{let r=e.equation.replace(/\\s+/g,"");return ke({equation:r})}});var Fg,Td,qg,Kg,Ed,Pd=oe(()=>{"use strict";$e();Ee();Te();Fg=e=>{if(!e||e.length!==2)throw new Error("Expand requires 2 input.");let r=e[0].dims,t=Array.from(e[1].getBigInt64Array(),Number),u=t.length<r.length?0:t.length-r.length,s=r.length<t.length?0:r.length-t.length;for(;u<t.length&&s<r.length;++u,++s)if(t[u]!==r[s]&&t[u]!==1&&r[s]!==1)throw new Error("Expand requires shape to be broadcastable to input")},Td=(e,r)=>{let t=e.length-r.length,u=[];for(let s=0;s<t;++s)u.push(e[s]);for(let s=0;s<r.length;++s)u.push(r[s]===1?e[s+t]:r[s]);return u},qg=(e,r)=>e.length>r.length?Td(e,r):Td(r,e),Kg=e=>{let r=e[0].dims,t=Array.from(e[1].getBigInt64Array(),Number),u=qg(r,t),s=e[0].dataType,f=s===9?4:1,m=Math.ceil(Q.size(u)/f),d=w=>{let C=X("input",s,r.length,f),$=ne("output",s,u.length,f),T;if(s===9){let P=(I,O,R="")=>`\n          let outputIndices${O} = ${$.offsetToIndices(`outputOffset + ${O}u`)};\n          let offset${O} = ${C.broadcastedIndicesToOffset(`outputIndices${O}`,$)};\n          let index${O} = offset${O} / 4u;\n          let component${O} = offset${O} % 4u;\n          ${I}[${O}] = ${R}(${C.getByOffset(`index${O}`)}[component${O}]);\n        `;T=`\n        let outputOffset = global_idx * ${f};\n        var data = vec4<u32>(0);\n        ${P("data",0,"u32")}\n        ${P("data",1,"u32")}\n        ${P("data",2,"u32")}\n        ${P("data",3,"u32")}\n        ${$.setByOffset("global_idx","data")}\n      }`}else T=`\n        let outputIndices = ${$.offsetToIndices("global_idx")};\n        let inputOffset = ${C.broadcastedIndicesToOffset("outputIndices",$)};\n        ${$.setByOffset("global_idx",C.getByOffset("inputOffset"))}\n      }`;return`\n    ${w.registerUniform("vec_size","u32").declareVariables(C,$)}\n    ${w.mainStart()}\n    ${w.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}\n    ${T}`},y=[{type:12,data:m},...se(r,u)];return{name:"Expand",shaderCache:{hint:`${u.length}`,inputDependencies:["rank"]},getShaderSource:d,getRunData:()=>({outputs:[{dims:u,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(m/64)},programUniforms:y})}},Ed=e=>{Fg(e.inputs),e.compute(Kg(e.inputs),{inputs:[0]})}});var Yg,Od,kd=oe(()=>{"use strict";$e();Ee();Te();di();Yg=e=>{let r=e[0].dataType,t=Q.size(e[0].dims),u=Q.size(e[1].dims),s=u%4===0,f=m=>{let d=X("x",r,[1],4),y=X("bias",r,[1],4),w=ne("y",r,[1],4),C=[{name:"output_vec_size",type:"u32"},{name:"bias_size",type:"u32"}],$=P=>`\n      let bias${P}_offset: u32 = (global_idx * 4 + ${P}) % uniforms.bias_size;\n      let bias${P} = ${y.getByOffset(`bias${P}_offset / 4`)}[bias${P}_offset % 4];`,T=s?`\n      let bias = ${y.getByOffset("global_idx % (uniforms.bias_size / 4)")};`:`${$(0)}${$(1)}${$(2)}${$(3)}\n      let bias = ${d.type.value}(bias0, bias1, bias2, bias3);`;return`${m.registerUniforms(C).declareVariables(d,y,w)}\n\n    ${qi(ct(r))}\n\n    ${m.mainStart(ni)}\n      ${m.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_vec_size")}\n\n      let x = ${d.getByOffset("global_idx")};\n      ${T}\n      let x_in = x + bias;\n      ${w.setByOffset("global_idx",Ki("x_in"))}\n    }`};return{name:"FastGeluWithBias",shaderCache:{hint:`${s}`,inputDependencies:["type","type"]},getShaderSource:f,getRunData:m=>({outputs:[{dims:m[0].dims,dataType:m[0].dataType}],programUniforms:[{type:12,data:Math.ceil(t/4)},{type:12,data:u}],dispatchGroup:{x:Math.ceil(t/ni/4)}})}},Od=e=>{e.inputs.length<2||Q.size(e.inputs[1].dims)===0?Vl(e):e.compute(Yg(e.inputs))}});var Zg,Qg,Rd,Dd,Bd=oe(()=>{"use strict";$e();Ee();ot();Te();Zg=e=>{if(!e||e.length!==2)throw new Error("Gather requires 2 inputs.")},Qg=(e,r)=>{let t=e[0].dims,u=e[1].dims,s=t.length,f=Q.normalizeAxis(r.axis,s),m=t.slice(0);m.splice(f,1,...u);let d=t[f],y=e[0].dataType===9?4:1,w=Math.ceil(Q.size(m)/y),C=[{type:12,data:w},{type:6,data:d},{type:12,data:f},...se(e[0].dims,e[1].dims,m)],$=T=>{let P=X("data",e[0].dataType,e[0].dims.length,y),I=X("inputIndices",e[1].dataType,e[1].dims.length),O=ne("output",e[0].dataType,m.length,y),R=k=>{let G=u.length,U=`var indicesIndices${k}  = ${I.type.indices}(0);`;for(let q=0;q<G;q++)U+=`${G>1?`indicesIndices${k}[${q}]`:`indicesIndices${k}`} = ${m.length>1?`outputIndices${k}[uniforms.axis + ${q}]`:`outputIndices${k}`};`;U+=`\n          var idx${k} = ${I.getByIndices(`indicesIndices${k}`)};\n          if (idx${k} < 0) {\n            idx${k} = idx${k} + uniforms.axisDimLimit;\n          }\n          var dataIndices${k} = ${P.type.indices}(0);\n        `;for(let q=0,K=0;q<s;q++)q===f?(U+=`${s>1?`dataIndices${k}[${q}]`:`dataIndices${k}`} = u32(idx${k});`,K+=G):(U+=`${s>1?`dataIndices${k}[${q}]`:`dataIndices${k}`} = ${m.length>1?`outputIndices${k}[${K}]`:`outputIndices${k}`};`,K++);return U},z;if(e[0].dataType===9){let k=(G,U,q="")=>`\n          let outputIndices${U} = ${O.offsetToIndices(`outputOffset + ${U}u`)};\n          ${R(U)};\n          let offset${U} = ${P.indicesToOffset(`dataIndices${U}`)};\n          let index${U} = offset${U} / 4u;\n          let component${U} = offset${U} % 4u;\n          ${G}[${U}] = ${q}(${P.getByOffset(`index${U}`)}[component${U}]);\n        `;z=`\n        let outputOffset = global_idx * ${y};\n        var value = vec4<u32>(0);\n        ${k("value",0,"u32")}\n        ${k("value",1,"u32")}\n        ${k("value",2,"u32")}\n        ${k("value",3,"u32")}\n        ${O.setByOffset("global_idx","value")}\n      `}else z=`\n      let outputIndices = ${O.offsetToIndices("global_idx")};\n      ${R("")};\n      let value = ${P.getByIndices("dataIndices")};\n      ${O.setByOffset("global_idx","value")};\n      `;return`\n      ${T.registerUniform("outputSize","u32").registerUniform("axisDimLimit","i32").registerUniform("axis","u32").declareVariables(P,I,O)}\n      ${T.mainStart()}\n        ${T.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n        ${z}\n      }`};return{name:"Gather",shaderCache:{hint:r.cacheKey,inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:m,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(w/64)},programUniforms:C}),getShaderSource:$}},Rd=e=>ke({axis:e.axis}),Dd=(e,r)=>{let t=e.inputs;Zg(t),e.compute(Qg(e.inputs,r))}});var Xg,Jg,Md,zd,Ud=oe(()=>{"use strict";$e();Ee();ot();Te();Xg=e=>{if(!e||e.length!==2)throw new Error("GatherElements requires 2 inputs.");if(e[0].dims.length<1)throw new Error("GatherElements requires that the data input be rank >= 1.");if(e[0].dims.length!==e[1].dims.length)throw new Error(`GatherElements requires that the data input and\n                     indices input tensors be of same rank.`)},Jg=(e,r)=>{let t=e[0].dims,u=e[0].dataType,s=t.length,f=e[1].dims,m=e[1].dataType,d=Q.normalizeAxis(r.axis,s),y=t[d],w=f.slice(0),C=Q.size(w),$=X("input",u,s),T=X("indicesInput",m,f.length),P=ne("output",u,w.length),I=[{type:12,data:C},{type:6,data:y},{type:12,data:d}];return I.push(...se(t,f,w)),{name:"GatherElements",shaderCache:{inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:w,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(C/64)},programUniforms:I}),getShaderSource:z=>`\n      ${z.registerUniform("outputSize","u32").registerUniform("axisDimLimit","i32").registerUniform("axis","u32").declareVariables($,T,P)}\n      ${z.mainStart()}\n      ${z.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n\n      let outputIndices = ${P.offsetToIndices("global_idx")};\n\n      var idx = ${T.getByOffset("global_idx")};\n      if (idx < 0) {\n        idx = idx + uniforms.axisDimLimit;\n      }\n      var inputIndices = ${$.type.indices}(outputIndices);\n      ${$.indicesSet("inputIndices","uniforms.axis","u32(idx)")};\n      let value = ${$.getByIndices("inputIndices")};\n\n      ${P.setByOffset("global_idx","value")};\n  }`}},Md=e=>ke({axis:e.axis}),zd=(e,r)=>{let t=e.inputs;Xg(t),e.compute(Jg(e.inputs,r))}});var ey,ty,jd,Vd,Nd=oe(()=>{"use strict";$e();Ee();Te();ey=e=>{if(!e)throw new Error("Input is missing");if(e.length<2||e.length>3)throw new Error("Invaid input number.");if(e.length===3&&e[2].dims.length>2)throw new Error("Invalid input shape of C");if(e[0].dataType!==e[1].dataType||e.length===3&&e[0].dataType!==e[2].dataType)throw new Error("Input types are mismatched")},ty=(e,r)=>{let t=e[0].dims.slice(),u=e[1].dims.slice(),[s,f,m]=ei.getShapeOfGemmResult(t,r.transA,u,r.transB,e.length===3?e[2].dims:void 0),d=[s,f];if(!d)throw new Error("Can\'t use gemm on the given tensors");let y=Q.size(d),w=[{type:12,data:y},{type:12,data:s},{type:12,data:f},{type:12,data:m},{type:1,data:r.alpha},{type:1,data:r.beta}],C=["type","type"];e.length===3&&(w.push(...se(e[2].dims)),C.push("rank")),w.push(...se(d));let $=T=>{let P="";r.transA&&r.transB?P="value += a[k * uniforms.M + m] * b[n * uniforms.K + k];":r.transA&&!r.transB?P="value += a[k * uniforms.M + m] * b[k * uniforms.N + n];":!r.transA&&r.transB?P="value += a[m * uniforms.K + k] * b[n * uniforms.K + k];":!r.transA&&!r.transB&&(P="value += a[m * uniforms.K + k] * b[k * uniforms.N + n];");let I=r.alpha===1?"":"value *= uniforms.alpha;",O=X("a",e[0].dataType,e[0].dims),R=X("b",e[1].dataType,e[1].dims),z=O.type.value,k=null,G=[O,R];e.length===3&&(k=X("c",e[2].dataType,e[2].dims.length),G.push(k));let U=ne("output",e[0].dataType,d.length);G.push(U);let q=[{name:"output_size",type:"u32"},{name:"M",type:"u32"},{name:"N",type:"u32"},{name:"K",type:"u32"},{name:"alpha",type:"f32"},{name:"beta",type:"f32"}];return`\n  ${T.registerUniforms(q).declareVariables(...G)}\n\n  ${T.mainStart()}\n    ${T.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n\n    let m = global_idx / uniforms.N;\n    let n = global_idx % uniforms.N;\n\n    var value = ${z}(0);\n    for (var k: u32 = 0u; k < uniforms.K; k++) {\n      ${P}\n    }\n\n    ${I}\n    ${(()=>k!=null?`let cOffset = ${k.broadcastedIndicesToOffset("vec2(m, n)",U)}; value += ${z}(uniforms.beta) * ${k.getByOffset("cOffset")};`:"")()}\n    output[global_idx] = value;\n  }`};return{name:"Gemm",shaderCache:{hint:`${r.cacheKey}`,inputDependencies:C},getRunData:()=>({outputs:[{dims:d,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(y/64)},programUniforms:w}),getShaderSource:$}},jd=e=>{let r=e.transA,t=e.transB,u=e.alpha,s=e.beta;return{transA:r,transB:t,alpha:u,beta:s,cacheKey:`${e.transA};${e.transB};${e.alpha===1}`}},Vd=(e,r)=>{ey(e.inputs),e.compute(ty(e.inputs,r))}});var ry,ny,iy,Wd,Gd=oe(()=>{"use strict";$e();Ee();Te();ry=(e,r)=>{let t=e[0].dims,u=t,s=2,f=Q.sizeToDimension(t,s),m=Q.sizeFromDimension(t,s),d=Je(m),y=m/d,w=[t[0],t[1],y],C=["rank","type","type"],$=[{type:12,data:m},{type:12,data:y}];$.push(...se(w,w));let T=P=>{let I=X("x",e[0].dataType,w.length,d),O=X("scale",e[1].dataType,e[1].dims),R=X("bias",e[2].dataType,e[2].dims),z=ne("output",e[0].dataType,w.length,d),k=[I,O,R,z],G=I.type.value,U=d===1?"f32":`vec${d}<f32>`,q=64,K=[{name:"normSize",type:"u32"},{name:"normPackedSize",type:"u32"}];return`\n  var<workgroup> meanShared : f32;\n  var<workgroup> squaredNormShared : f32;\n  var<workgroup> workgroupShared : array<${U}, ${q}>;\n  const workgroupSize = ${q}u;\n  ${P.registerUniforms(K).declareVariables(...k)}\n  ${P.mainStart(q)}\n    let norm = global_idx / workgroupSize;\n    let batch = norm / uniforms.x_shape[1];\n    let channel = norm % uniforms.x_shape[1];\n    let localIndex = local_id.x;\n\n    // initialize workgroup memory\n    var initial = ${U}(0);\n    for (var h = localIndex; h < uniforms.normPackedSize; h += workgroupSize) {\n      initial = initial + ${U}(${I.get("batch","channel","h")});\n    }\n    workgroupShared[localIndex] = initial;\n    workgroupBarrier();\n\n    // Calculate the mean of current channel data.\n    for (var currSize = workgroupSize >> 1;  currSize > 0; currSize = currSize >> 1) {\n      if (localIndex < currSize) {\n        workgroupShared[localIndex] = workgroupShared[localIndex] + workgroupShared[localIndex + currSize];\n      }\n      workgroupBarrier();\n    }\n    if (localIndex == 0) {\n      meanShared = ${ft("workgroupShared[0]",d)} / f32(uniforms.normSize);\n    }\n    workgroupBarrier();\n\n    // reinitialize workgroup memory.\n    initial = ${U}(0);\n    for (var h = localIndex; h < uniforms.normPackedSize; h += workgroupSize) {\n      let deviation =  ${U}(${I.get("batch","channel","h")}) - ${U}(meanShared);\n      initial = initial + deviation * deviation;\n    }\n    workgroupShared[localIndex] = initial;\n    workgroupBarrier();\n\n    // Calculate the sum of square of deviation of current channel data.\n    for (var currSize = workgroupSize >> 1;  currSize > 0; currSize = currSize >> 1) {\n      if (localIndex < currSize) {\n        workgroupShared[localIndex] = workgroupShared[localIndex] + workgroupShared[localIndex + currSize];\n      }\n      workgroupBarrier();\n    }\n    if (localIndex == 0) {\n      squaredNormShared = ${ft("workgroupShared[0]",d)};\n    }\n    workgroupBarrier();\n\n    let invStdDev = inverseSqrt(squaredNormShared / f32(uniforms.normSize) + f32(${r.epsilon}));\n    let channelScale = invStdDev * f32(${O.getByOffset("channel")});\n    let channelShift = f32(${R.getByOffset("channel")}) - meanShared * channelScale;\n    for (var h = localIndex; h < uniforms.normPackedSize; h += workgroupSize) {\n      let value = ${I.get("batch","channel","h")} * ${G}(${U}(channelScale)) + ${G}(${U}(channelShift));\n      ${z.set("batch","channel","h","value")};\n    }\n  }`};return{name:"InstanceNormalization",shaderCache:{hint:`${r.epsilon};${d}`,inputDependencies:C},getRunData:()=>({outputs:[{dims:u,dataType:e[0].dataType}],dispatchGroup:{x:f},programUniforms:$}),getShaderSource:T}},ny=(e,r,t,u,s,f,m,d)=>{let y=Je(m),w=64,C=y===1?"vec2f":`mat2x${y}f`,$=y===1?"f32":`vec${y}f`,T=(K,J)=>`${C}(${K}, ${J})`,P=s*m/y,I=Math.ceil(f/w),O=["type"],R=[{type:12,data:I},{type:12,data:f},{type:12,data:Math.floor(m/y)},{type:12,data:Math.floor(f*m/y)}],z=K=>{let J=X("input",r.dataType,r.dims,y);return`\n  ${K.declareVariables(J)}\n  @group(0) @binding(1) var<storage, read_write> output : array<${C}>;\n  struct Uniforms {wg_size:u32, H:u32, C:u32, image_size:u32};\n  @group(0) @binding(2) var<uniform> uniforms: Uniforms;\n\n  ${K.mainStart(w)}\n    let currentImageNumber = global_idx / ${w} / uniforms.C;\n    let currentChannelNumber = (global_idx / ${w}) % uniforms.C;\n    let wgId = global_idx % ${w};\n    let wgOffset = wgId * uniforms.wg_size;\n    if (wgOffset >= uniforms.H) {\n        return;\n    }\n    let wgMax = min(wgOffset + uniforms.wg_size, uniforms.H);\n\n    let offset = currentImageNumber * uniforms.image_size + currentChannelNumber;\n    var sum = ${at("f32",y)};\n    var squaredSum = ${at("f32",y)};\n    for (var i: u32 = wgOffset; i < wgMax; i++) {\n        let value = ${$}(input[offset + i * uniforms.C]);\n        sum += value;\n        squaredSum += value * value;\n    }\n    output[global_idx] = ${T("sum","squaredSum")};\n  }`},k=e.compute({name:"InstanceNormComputeMean",shaderCache:{hint:`${y}`,inputDependencies:O},getRunData:()=>({outputs:[{dims:[s,m,w,2],dataType:1}],dispatchGroup:{x:s*m/y},programUniforms:R}),getShaderSource:z},{inputs:[r],outputs:[-1]})[0],G=[{type:12,data:P},{type:12,data:f},{type:12,data:Math.floor(m/y)},{type:12,data:Math.floor(w*m/y)}],U=["type","type","type"],q=K=>{let J=X("scale",t.dataType,t.dims,y),ie=X("bias",u.dataType,u.dims,y);return`\n  @group(0) @binding(0) var<storage, read> input : array<${C}>;\n  @group(0) @binding(1) var<storage, read> scale : array<${J.type.storage}>;\n  @group(0) @binding(2) var<storage, read> bias : array<${ie.type.storage}>;\n  @group(0) @binding(3) var<storage, read_write> output : array<${C}>;\n  struct Uniforms {units_of_work : u32, H: u32, C : u32, image_size : u32};\n  @group(0) @binding(4) var<uniform> uniforms: Uniforms;\n\n  ${K.mainStart()}\n    ${K.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.units_of_work")}\n    let currentImageNumber = global_idx / uniforms.C;\n    let currentChannelNumber = global_idx % uniforms.C;\n\n    let offset = currentImageNumber * uniforms.image_size;\n    var sum = ${at("f32",y)};\n    var squaredSum = ${at("f32",y)};\n    for (var i: u32 = 0; i < ${w}; i++) {\n        let value = input[offset + i + currentChannelNumber * ${w}];\n        sum += value[0];\n        squaredSum += value[1];\n    }\n    sum = sum / f32(uniforms.H);\n    squaredSum = squaredSum / f32(uniforms.H);\n    let invStdDev = inverseSqrt(squaredSum - sum * sum + f32(${d}));\n    let channelScale = invStdDev * ${$}(scale[currentChannelNumber]);\n    let channelShift = ${$}(bias[currentChannelNumber]) - sum * channelScale;\n\n    output[global_idx] = ${T("channelScale","channelShift")};\n  }`};return e.compute({name:"InstanceNormComputeChannelScaleShift",shaderCache:{hint:`${y};${d}`,inputDependencies:U},getRunData:()=>({outputs:[{dims:[s,m,2],dataType:1}],dispatchGroup:{x:Math.ceil(P/64)},programUniforms:G}),getShaderSource:q},{inputs:[k,t,u],outputs:[-1]})[0]},iy=(e,r,t)=>{let u=r[0].dims,s=u,f=u[0],m=u[u.length-1],d=Q.sizeFromDimension(u,1)/m,y=Je(m),w=Q.size(s)/y,C=[{type:12,data:d},{type:12,data:Math.floor(m/y)}],$=["type","type"],T=ny(e,r[0],r[1],r[2],f,d,m,t.epsilon),P=I=>{let O=He(r[0].dataType),R=y===1?"vec2f":`mat2x${y}f`,z=y===1?O:`vec${y}<${O}>`,k=X("input",r[0].dataType,r[0].dims,y),G=ne("output",r[0].dataType,s,y);return`\n  @group(0) @binding(0) var<storage, read> input : array<${k.type.storage}>;\n  @group(0) @binding(1) var<storage, read> scaleInput : array<${R}>;\n  @group(0) @binding(2) var<storage, read_write> output : array<${G.type.storage}>;\n  struct Uniforms {H: u32, C : u32};\n  @group(0) @binding(3) var<uniform> uniforms: Uniforms;\n\n  ${I.mainStart()}\n    let currentImageNumber = global_idx / (uniforms.C * uniforms.H);\n    let currentChannelNumber = global_idx % uniforms.C;\n\n    let scaleOffset = currentImageNumber * uniforms.C + currentChannelNumber;\n    let scale = scaleInput[scaleOffset];\n    output[global_idx] = fma(input[global_idx], ${z}(scale[0]), ${z}(scale[1]));\n  }`};e.compute({name:"InstanceNormalizationNHWC",shaderCache:{hint:`${y}`,inputDependencies:$},getRunData:()=>({outputs:[{dims:s,dataType:r[0].dataType}],dispatchGroup:{x:Math.ceil(w/64)},programUniforms:C}),getShaderSource:P},{inputs:[r[0],T]})},Wd=(e,r)=>{r.format==="NHWC"?iy(e,e.inputs,r):e.compute(ry(e.inputs,r))}});var oy,ay,Hd,Ld=oe(()=>{"use strict";$e();Ee();Te();oy=e=>{if(!e||e.length<2)throw new Error("layerNorm requires at least 2 inputs.")},ay=(e,r,t)=>{let u=e[0].dims,s=e[1],f=e[2],m=u,d=Q.normalizeAxis(r.axis,u.length),y=Q.sizeToDimension(u,d),w=Q.sizeFromDimension(u,d),C=Q.size(s.dims),$=f?Q.size(f.dims):0;if(C!==w||f&&$!==w)throw new Error(`Size of X.shape()[axis:] == ${w}.\n       Size of scale and bias (if provided) must match this.\n       Got scale size of ${C} and bias size of ${$}`);let T=[];for(let U=0;U<u.length;++U)U<d?T.push(u[U]):T.push(1);let P=Je(w),I=["type","type"],O=[{type:12,data:y},{type:1,data:w},{type:12,data:Math.floor(w/P)},{type:1,data:r.epsilon}];f&&I.push("type");let R=t>1,z=t>2,k=U=>{let q=He(e[0].dataType),K=[X("x",e[0].dataType,e[0].dims,P),X("scale",s.dataType,s.dims,P)];f&&K.push(X("bias",f.dataType,f.dims,P)),K.push(ne("output",e[0].dataType,m,P)),R&&K.push(ne("mean_data_output",1,T)),z&&K.push(ne("inv_std_output",1,T));let J=[{name:"norm_count",type:"u32"},{name:"norm_size",type:"f32"},{name:"norm_size_vectorized",type:"u32"},{name:"epsilon",type:"f32"}];return`\n  ${U.registerUniforms(J).declareVariables(...K)}\n  ${U.mainStart()}\n    ${U.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.norm_count")}\n    let offset = global_idx * uniforms.norm_size_vectorized;\n    var meanVector = ${at("f32",P)};\n    var meanSquareVector = ${at("f32",P)};\n\n    for (var h: u32 = 0u; h < uniforms.norm_size_vectorized; h++) {\n      let value = ${St(q,P,"x[h + offset]")};\n      meanVector += value;\n      meanSquareVector += value * value;\n    }\n    let mean = ${ft("meanVector",P)} / uniforms.norm_size;\n    let invStdDev =\n        inverseSqrt(${ft("meanSquareVector",P)} / uniforms.norm_size - mean * mean + uniforms.epsilon);\n\n    for (var j: u32 = 0; j < uniforms.norm_size_vectorized; j++) {\n      let f32input = ${St(q,P,"x[j + offset]")};\n      let f32scale = ${St(q,P,"scale[j]")};\n      output[j + offset] = ${K[0].type.value}((f32input - mean) * invStdDev * f32scale\n        ${f?`+ ${St(q,P,"bias[j]")}`:""}\n      );\n    }\n\n    ${R?"mean_data_output[global_idx] = mean":""};\n    ${z?"inv_std_output[global_idx] = invStdDev":""};\n  }`},G=[{dims:m,dataType:e[0].dataType}];return R&&G.push({dims:T,dataType:1}),z&&G.push({dims:T,dataType:1}),{name:"LayerNormalization",shaderCache:{hint:`${P};${t}`,inputDependencies:I},getRunData:()=>({outputs:G,dispatchGroup:{x:Math.ceil(y/64)},programUniforms:O}),getShaderSource:k}},Hd=(e,r)=>{oy(e.inputs),e.compute(ay(e.inputs,r,e.outputCount))}});var sy,uy,Fd,qd=oe(()=>{"use strict";$e();Ee();Te();sy=(e,r)=>{if(e.length<3||e.length>4)throw new Error("MatMulNBits requires 3 or 4 inputs");let t=e[0],u=t.dims.length;if(t.dims[u-1]!==r.k)throw new Error("The last dim of input shape does not match the k value");let s=Math.floor((r.k+r.blockSize-1)/r.blockSize),f=r.blockSize/8*r.bits,m=e[1];if(!Q.areEqual(m.dims,[r.n,s,f]))throw new Error("The second inputs must be 3D tensor with shape N X nBlocksPerCol X blobSize");let y=e[2].dims;if(Q.size(y)!==r.n*s)throw new Error("scales input size error.");if(e.length===4){let C=e[3].dims,$=r.bits>4?r.n*s:r.n*Math.floor((s+1)/2);if(Q.size(C)!==$)throw new Error("zeroPoints input size error.")}},uy=(e,r)=>{let t=e[0],u=e[1],s=e[2],f=t.dims.length,m=t.dims.slice(0,f-1).concat(r.n),d=Q.size(m),y=Math.floor((r.k+r.blockSize-1)/r.blockSize),w=r.blockSize/8*r.bits,C=[{type:12,data:d},{type:12,data:r.k},{type:12,data:r.n},{type:12,data:r.accuracyLevel},{type:12,data:r.bits},{type:12,data:r.blockSize},{type:12,data:y},{type:12,data:w}];C.push(...se(t.dims)),C.push(...se(Q.convertShape(u.dims))),C.push(...se(s.dims)),e.length===4&&C.push(...se(Q.convertShape(e[3].dims))),C.push(...se(m));let $=T=>{let P=X("a",e[0].dataType,e[0].dims.length),I=X("b",12,e[1].dims.length),O=X("scales",e[2].dataType,e[2].dims.length),R=[P,I,O],z=e.length===4?X("zero_points",12,e[3].dims.length):void 0;z&&R.push(z);let k=ne("output",e[0].dataType,m.length),G=[{name:"output_size",type:"u32"},{name:"k",type:"u32"},{name:"n",type:"u32"},{name:"accuracy_level",type:"u32"},{name:"bits",type:"u32"},{name:"block_size",type:"u32"},{name:"n_blocks_per_col",type:"u32"},{name:"blob_size",type:"u32"}],U=He(e[0].dataType);return`\n        fn ortUnpack8x4snorm(value: u32) -> array<${U}, 8>{\n          var result = array<${U}, 8>();\n          var offset: u32 = 0;\n          let count: u32 = 4;\n          for (var i: u32 = 0; i < 8u; i++) {\n            result[i] = ${U}(extractBits(value, offset, count));\n            offset += count;\n          }\n          return result;\n        }\n        ${T.registerUniforms(G).declareVariables(...R,k)}\n        ${T.mainStart()}\n          ${T.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n          var value: ${U} = 0.0;\n          let output_indices = ${k.offsetToIndices("global_idx")};\n          var a_indices: ${P.type.indices} = output_indices;\n          var n = ${k.indicesGet("output_indices",f-1)};\n          // Two zero points are packed into one byte because uniforms.bits <= 4.\n          // zero_point_offset is either 0 or 4. It is bit offset within one byte.\n          // TODO support zero_point_offset for bits > 4\n          ${z?`\n            var zero_point_index: u32 = n * ((uniforms.n_blocks_per_col + 1) / 2);\n            var zero_point_word: u32 = ${z.getByOffset("zero_point_index")};\n            var zero_point_offset: u32 = 0;`:""}\n          var scale_idex = n * uniforms.n_blocks_per_col;\n          for (var block: u32 = 0; block < uniforms.n_blocks_per_col; block++) {\n            var block_offset = block * uniforms.block_size;\n            // The scale and zero points are computed per block.\n            let scale = ${O.getByOffset("scale_idex")};\n            // The default zero point is 8 for unsigned 4-bit quantization.\n            let zero_point: ${U} = ${z?`${U}(extractBits(zero_point_word, zero_point_offset, 4))`:8};\n            for (var blob: u32 = 0; blob < uniforms.block_size/uniforms.blob_size; blob++) {\n              var blob_offset = blob * uniforms.blob_size;\n              var b_indices: ${I.type.indices};\n              ${I.indicesSet("b_indices","2","blob")};\n              ${I.indicesSet("b_indices","1","block")};\n              ${I.indicesSet("b_indices","0","n")};\n              let b_value = ${I.getByIndices("b_indices")};\n              let b_quantized_values: array<${U}, 8> = ortUnpack8x4snorm(b_value);\n              // Number of B elements per 32-bit word is 32/bits = 32/4 = 8\n              for (var i: u32 = 0; i < 8; i++) {\n                ${P.indicesSet("a_indices",f-1,"block_offset + blob_offset + i")};\n                let a_value = ${P.getByIndices("a_indices")};\n                let b_quantized_value = b_quantized_values[i];\n                let b_dequantized_value = (b_quantized_value - zero_point) * scale;\n                value += a_value * b_dequantized_value;\n              }\n            }\n            scale_idex++;\n            ${z?`\n            if (zero_point_offset == 28) {\n              zero_point_offset = 0;\n              zero_point_index++;\n              var zero_point_word = ${z.getByOffset("zero_point_index")};\n            } else {\n              zero_point_offset += 4;\n            }`:""}\n          }\n          ${k.setByOffset("global_idx","value")};\n        }\n        `};return{name:"MatMulNBits",shaderCache:{hint:r.cacheKey,inputDependencies:Array(e.length).fill("rank")},getRunData:()=>({outputs:[{dims:m,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(d/64)},programUniforms:C}),getShaderSource:$}},Fd=(e,r)=>{sy(e.inputs,r),e.compute(uy(e.inputs,r))}});var ly,Yd,Kd,dy,so,Zd,Qd=oe(()=>{"use strict";$e();Ee();ot();Xn();Fi();Te();Er();ly=(e,r)=>{let t=e[0],u=e[1],s=e[2],f=e[3],m=e[4],d=e[5],y=e[6],w=e[7];if(t.dims.length!==3&&t.dims.length!==5)throw new Error("Input query is expected to have 3 or 5 dimensions");let C=!1,$=t.dims[0],T=t.dims[1],P=t.dims.length===3?C?t.dims[2]/3:t.dims[2]:r.numHeads*t.dims[4],I=T,O=0,R=0,z=Math.floor(P/r.numHeads);if(y&&w){if(y.dims.length!==4)throw new Error(\'Input "past_key" is expected to have 4 dimensions\');if(w.dims.length!==4)throw new Error(\'Input "past_value" is expected to have 4 dimensions\');O=y.dims[2],R=y.dims[2]}else if(y||w)throw new Error(\'Input "past_key" and "past_value" shall be both present or both absent\');let k;if(u){if(t.dims.length!==3)throw new Error(\'Input "query" is expected to have 3 dimensions when key is given\');if(u.dims.length<3||u.dims.length>5)throw new Error(\'Input "key" is expected to have 3, 4, or 5 dimensions\');if(t.dims[0]!==u.dims[0])throw new Error(\'Input "query" and "key" shall have same dim 0 (batch size)\');if(u.dims.length===3){if(u.dims[2]!==t.dims[2])throw new Error(\'Input "query" and "key" shall have same dim 2 (hidden_size)\');k=2,I=u.dims[1]}else if(u.dims.length===5){if(u.dims[2]!==r.numHeads||u.dims[3]!==2||u.dims[4]!==z)throw new Error(\'Expect "key" shape (batch_size, kv_sequence_length, num_heads, 2, head_size) for packed kv\');if(s)throw new Error(\'Expect "value" be none when "key" has packed kv format.\');k=5,I=u.dims[1]}else{if(u.dims[1]!==r.numHeads||u.dims[3]!==z)throw new Error(\'Expect "key" shape (batch_size, num_heads, kv_sequence_length, head_size) for past_key\');k=0,I=u.dims[2]}}else{if(t.dims.length!==3&&t.dims.length!==5)throw new Error(\'Input "query" is expected to have 3 or 5 dimensions when key is empty\');if(t.dims.length===5&&(t.dims[2]!==r.numHeads||t.dims[3]!==3))throw new Error(\'Expect "query" shape (batch_size, kv_sequence_length, num_heads, 3, head_size) for packed kv\');k=3}if(f){if(f.dims.length!==1)throw new Error(\'Input "bias" is expected to have 1 dimension\');if(s&&t.dims.length===5&&t.dims[3]===2)throw new Error("bias is not allowed for packed kv.")}let G=0;if(m){G=8;let ie=m.dims;throw ie.length===1?ie[0]===$?G=1:ie[0]===3*$+2&&(G=3):ie.length===2&&ie[0]===$&&ie[1]===I&&(G=5),G===8?new Error(\'Input "key_padding_mask" shape shall be (batch_size) or (batch_size, kv_sequence_length)\'):new Error("Mask not supported")}let U=!1,q=P;if(s){if(s.dims.length!==3&&s.dims.length!==4)throw new Error(\'Input "value" is expected to have 3 or 4 dimensions\');if(t.dims[0]!==s.dims[0])throw new Error(\'Input "query" and "value" shall have same dim 0 (batch_size)\');if(s.dims.length===3){if(I!==s.dims[1])throw new Error(\'Input "key" and "value" shall have the same dim 1 (kv_sequence_length)\');q=s.dims[2]}else{if(I!==s.dims[2])throw new Error(\'Input "past_key" and "past_value" shall have the same dim 2 (kv_sequence_length)\');q=s.dims[1]*s.dims[3],U=!0}}let K=O+I,J=!1;if(m)throw new Error("Key padding mask is not supported");if(d)throw new Error("extraAddQk is not supported");if(y)throw new Error("pastKey is not supported");if(w)throw new Error("pastValue is not supported");return{batchSize:$,sequenceLength:T,pastSequenceLength:O,kvSequenceLength:I,totalSequenceLength:K,maxSequenceLength:R,inputHiddenSize:0,hiddenSize:P,vHiddenSize:q,headSize:z,vHeadSize:Math.floor(q/r.numHeads),numHeads:r.numHeads,isUnidirectional:!1,pastPresentShareBuffer:!1,maskFilterValue:r.maskFilterValue,maskType:G,scale:r.scale,broadcastResPosBias:J,passPastInKv:U,qkvFormat:k}},Yd=e=>ke({...e}),Kd=ke({perm:[0,2,1,3]}),dy=(e,r,t,u,s,f,m)=>{let d=[u,s,f],y=Q.size(d),w=[{type:12,data:y},{type:12,data:m},{type:12,data:f}],C=$=>{let T=ne("qkv_with_bias",r.dataType,d),P=X("qkv",r.dataType,d),I=X("bias",t.dataType,d),O=[{name:"output_size",type:"u32"},{name:"bias_offset",type:"u32"},{name:"hidden_size",type:"u32"}];return`\n  ${$.registerUniforms(O).declareVariables(P,I,T)}\n  ${$.mainStart()}\n    ${$.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n    let bias_offset_idx = (global_idx % uniforms.hidden_size) + uniforms.bias_offset;\n\n    qkv_with_bias[global_idx] = qkv[global_idx] + bias[bias_offset_idx];\n  }`};return e.compute({name:"MultiHeadAttentionAddBias",shaderCache:{inputDependencies:["type","type"]},getRunData:()=>({outputs:[{dims:d,dataType:r.dataType,gpuDataType:0}],dispatchGroup:{x:Math.ceil(y/64)},programUniforms:w}),getShaderSource:C},{inputs:[r,t],outputs:[-1]})[0]},so=(e,r,t,u,s,f,m,d)=>{let y=f;if(m){if(u===1)throw new Error("AddBiasReshape is not implemented. Please export your model with packed QKV or KV");return y=dy(e,f,m,r,u,t*s,d),y=y.reshape([r,u,t,s]),e.compute(xt(y,Kd.perm),{inputs:[y],outputs:[-1]})[0]}else return f.dims.length===3&&(y=f.reshape([r,u,t,s])),e.compute(xt(y,Kd.perm),{inputs:[y],outputs:[-1]})[0]},Zd=(e,r)=>{let t=ly(e.inputs,r);if(e.inputs[0].dims.length===5)throw new Error("Packed QKV is not implemented");if(e.inputs[1]?.dims.length===5)throw new Error("Packed KV is not implemented");let u=e.inputs[1]&&e.inputs[2]&&e.inputs[1].dims.length===4&&e.inputs[2].dims.length===4,s=so(e,t.batchSize,t.numHeads,t.sequenceLength,t.headSize,e.inputs[0],e.inputs[3],0);if(u)return si(e,s,e.inputs[1],e.inputs[2],e.inputs[4],void 0,void 0,void 0,e.inputs[5],t,r);let f=so(e,t.batchSize,t.numHeads,t.kvSequenceLength,t.headSize,e.inputs[1],e.inputs[3],t.hiddenSize),m=so(e,t.batchSize,t.numHeads,t.kvSequenceLength,t.vHeadSize,e.inputs[2],e.inputs[3],2*t.hiddenSize);si(e,s,f,m,e.inputs[4],void 0,e.inputs[6],e.inputs[7],e.inputs[5],t,r)}});var cy,fy,py,my,hy,gy,yy,by,Xd,Jd=oe(()=>{"use strict";$e();Ee();Te();cy=e=>{if(!e||e.length<1)throw new Error("Too few inputs");if(e[0].dataType!==1&&e[0].dataType!==10)throw new Error("Input type must be float or float16.");if(e.length>=2){let r=e[0].dims.length*2===e[1].dims[0];if(e.length===4&&(r=e[3].dims[0]*2===e[1].dims[0]),!r)throw new Error("The pads should be a 1D tensor of shape [2 * input_rank] or [2 * num_axes].")}},fy=(e,r,t)=>{let u="";for(let s=r-1;s>=0;--s)u+=`\n            k = i32(${e.indicesGet("indices",s)}) - ${ve("uniforms.pads",s,t)};\n            if (k < 0) {\n              break;\n            }\n            if (k >= i32(${ve("uniforms.x_shape",s,r)})) {\n              break;\n            }\n            offset += k * i32(${ve("uniforms.x_strides",s,r)});\n        `;return`\n          value = ${e.type.value}(uniforms.constant_value);\n          for (var i = 0; i < 1; i++) {\n            var offset = 0;\n            var k = 0;\n            ${u}\n            value = x[offset];\n          }\n      `},py=(e,r,t)=>{let u="";for(let s=r-1;s>=0;--s)u+=`\n                k = i32(${e.indicesGet("indices",s)}) - ${ve("uniforms.pads",s,t)};\n                if (k < 0) {\n                  k = -k;\n                }\n                {\n                  let _2n_1 = 2 * (i32(${ve("uniforms.x_shape",s,r)}) - 1);\n                  k = k % _2n_1;\n                  if(k >= i32(${ve("uniforms.x_shape",s,r)})) {\n                    k = _2n_1 - k;\n                  }\n                }\n                offset += k * i32(${ve("uniforms.x_strides",s,r)});\n            `;return`\n              var offset = 0;\n              var k = 0;\n              ${u}\n              value = x[offset];\n          `},my=(e,r,t)=>{let u="";for(let s=r-1;s>=0;--s)u+=`\n                k = i32(${e.indicesGet("indices",s)}) - ${ve("uniforms.pads",s,t)};\n                if (k < 0) {\n                  k = 0;\n                }\n                if (k >= i32(${ve("uniforms.x_shape",s,r)})) {\n                  k = i32(${ve("uniforms.x_shape",s,r)}) - 1;\n                }\n                offset += k * i32(${ve("uniforms.x_strides",s,r)});\n            `;return`\n              var offset = 0;\n              var k = 0;\n              ${u}\n              value = x[offset];\n          `},hy=(e,r,t)=>{let u="";for(let s=r-1;s>=0;--s)u+=`\n                k = i32(${e.indicesGet("indices",s)}) - ${ve("uniforms.pads",s,t)};\n                if (k < 0)  {\n                  k += i32(${ve("uniforms.x_shape",s,r)}]);\n                }\n                if (k >= i32(${ve("uniforms.x_shape",s,r)})) {\n                  k -= i32(${ve("uniforms.x_shape",s,r)});\n                }\n                offset += k * i32(${ve("uniforms.x_strides",s,r)});\n            `;return`\n              var offset = 0;\n              var k = 0;\n              ${u}\n              value = x[offset];\n          `},gy=(e,r,t)=>{switch(t.mode){case 0:return fy(e,r,t.pads.length);case 1:return py(e,r,t.pads.length);case 2:return my(e,r,t.pads.length);case 3:return hy(e,r,t.pads.length);default:throw new Error("Invalid mode")}},yy=(e,r)=>{let t=Q.padShape(e[0].dims.slice(),r.pads),u=e[0].dims,s=Q.size(t),f=[{type:12,data:s},{type:12,data:r.pads}];r.mode===0&&f.push({type:e[0].dataType,data:r.value}),f.push(...se(e[0].dims,t));let m=["rank"],d=y=>{let w=ne("output",e[0].dataType,t.length),C=X("x",e[0].dataType,u.length),$=C.type.value,T=gy(w,u.length,r),P=[{name:"output_size",type:"u32"},{name:"pads",type:"i32",length:r.pads.length}];return r.mode===0&&P.push({name:"constant_value",type:$}),`\n            ${y.registerUniforms(P).declareVariables(C,w)}\n            ${y.mainStart()}\n            ${y.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n\n            let indices = ${w.offsetToIndices("global_idx")};\n\n            var value = ${$}(0);\n            ${T}\n            output[global_idx] = value;\n        }`};return{name:"Pad",shaderCache:{hint:`${r.mode}`,inputDependencies:m},getRunData:()=>({outputs:[{dims:t,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(Q.size(t)/64)},programUniforms:f}),getShaderSource:d}},by=(e,r)=>{if(e.length>1){let t=e[1].getBigInt64Array(),u=e.length>=3&&e[2].data?e[2].getFloat32Array()[0]:0,s=e[0].dims.length,f=new Int32Array(2*s).fill(0);if(e.length>=4){let d=e[3].getBigInt64Array();for(let y=0;y<d.length;y++)f[Number(d[y])]=Number(t[y]),f[Number(d[y])+s]=Number(t[y+d.length])}else t.forEach((d,y)=>f[Number(y)]=Number(d));let m=[];return f.forEach(d=>m.push(d)),{mode:r.mode,value:u,pads:m}}else return r},Xd=(e,r)=>{cy(e.inputs);let t=by(e.inputs,r);e.compute(yy(e.inputs,t),{inputs:[0]})}});var yi,ec,tc,rc,nc,vy,wy,ic,oc,ac,sc,uc,lc,dc,cc,fc,pc,mc,hc,gc=oe(()=>{"use strict";Ar();$e();Ee();Te();yi=e=>{if(Ir.webgpu.validateInputContent&&(!e||e.length!==1))throw new Error("Pool ops requires 1 input.")},ec=(e,r,t)=>{let u=r.format==="NHWC",s=e.dims.slice();u&&s.splice(1,0,s.pop());let f=Object.hasOwnProperty.call(r,"dilations"),m=r.kernelShape.slice(),d=r.strides.slice(),y=f?r.dilations.slice():[],w=r.pads.slice();sr.adjustPoolAttributes(t,s,m,d,y,w);let C=sr.computePoolOutputShape(t,s,d,y,m,w,r.autoPad),$=Object.assign({},r);f?Object.assign($,{kernelShape:m,strides:d,pads:w,dilations:y,cacheKey:r.cacheKey}):Object.assign($,{kernelShape:m,strides:d,pads:w,cacheKey:r.cacheKey});let T=C.slice();return T.push(T.splice(1,1)[0]),[$,u?T:C]},tc=(e,r)=>{let t=r.format==="NHWC",u=Q.size(e),s=Q.size(r.kernelShape),f=[{type:12,data:u},{type:12,data:s}],m=[{name:"outputSize",type:"u32"},{name:"kernelSize",type:"u32"}];if(r.kernelShape.length<=2){let d=r.kernelShape[r.kernelShape.length-1],y=r.strides[r.strides.length-1],w=r.pads[r.pads.length/2-1],C=r.pads[r.pads.length-1],$=!!(w+C);f.push({type:12,data:d},{type:12,data:y},{type:12,data:w},{type:12,data:C}),m.push({name:"kw",type:"u32"},{name:"sw",type:"u32"},{name:"pwStart",type:"u32"},{name:"pwEnd",type:"u32"});let T=!1;if(r.kernelShape.length===2){let P=r.kernelShape[r.kernelShape.length-2],I=r.strides[r.strides.length-2],O=r.pads[r.pads.length/2-2],R=r.pads[r.pads.length-2];T=!!(O+R),f.push({type:12,data:P},{type:12,data:I},{type:12,data:O},{type:12,data:R}),m.push({name:"kh",type:"u32"},{name:"sh",type:"u32"},{name:"phStart",type:"u32"},{name:"phEnd",type:"u32"})}return[f,m,!0,$,T]}else{if(t)throw new Error("Pooling with kernelShape.length > 2 is not supported for NHWC format.");let d=Q.computeStrides(r.kernelShape);f.push({type:12,data:d},{type:12,data:r.pads},{type:12,data:r.strides}),m.push({name:"kernelStrides",type:"u32",length:d.length},{name:"pads",type:"u32",length:r.pads.length},{name:"strides",type:"u32",length:r.strides.length});let y=r.pads.reduce((w,C)=>w+C);return[f,m,!!y,!1,!1]}},rc=(e,r,t,u,s,f,m,d,y,w,C,$)=>{let T=s.format==="NHWC",P=r.type.value,I=ne("output",r.type.tensor,u);if(s.kernelShape.length<=2){let O="",R="",z="",k=t-(T?2:1);if(C?O=`\n                for (var i: u32 = 0u; i < uniforms.kw; i++) {\n                  xIndices[${k}] = indices[${k}] * uniforms.sw - uniforms.pwStart + i;\n                  if (xIndices[${k}] < 0 || xIndices[${k}]\n                      >= uniforms.x_shape[${k}]) {\n                    pad++;\n                    continue;\n                  }\n                  let x_val = x[${r.indicesToOffset("xIndices")}];\n                  ${f}\n                }`:O=`\n                for (var i: u32 = 0u; i < uniforms.kw; i++) {\n                  xIndices[${k}] = indices[${k}] * uniforms.sw - uniforms.pwStart + i;\n                  let x_val = x[${r.indicesToOffset("xIndices")}];\n                  ${f}\n                }`,s.kernelShape.length===2){let U=t-(T?3:2);$?R=`\n                for (var j: u32 = 0u; j < uniforms.kh; j++) {\n                  xIndices[${U}] = indices[${U}] * uniforms.sh - uniforms.phStart + j;\n                  if (xIndices[${U}] < 0 || xIndices[${U}] >= uniforms.x_shape[${U}]) {\n                    pad += i32(uniforms.kw);\n                    continue;\n                  }\n              `:R=`\n                for (var j: u32 = 0u; j < uniforms.kh; j++) {\n                  xIndices[${U}] = indices[${U}] * uniforms.sh - uniforms.phStart + j;\n                `,z=`\n              }\n            `}return`\n            ${e.registerUniforms(y).declareVariables(r,I)}\n\n            ${e.mainStart()}\n              ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n\n              let indices = ${I.offsetToIndices("global_idx")};\n              var xIndices = ${I.offsetToIndices("global_idx")};\n\n              var value = ${P}(${d});\n              var pad = 0;\n              ${R}\n              ${O}\n              ${z}\n              ${m}\n\n              output[global_idx] = value;\n            }`}else{if(T)throw new Error("Pooling with kernelShape.length > 2 is not supported for NHWC format.");let O=s.kernelShape.length,R=s.pads.length,z="";return w?z=`\n                if (xIndices[j] >= uniforms.x_shape[j]) {\n                  pad++;\n                  isPad = true;\n                  break;\n                }\n              }\n              if (!isPad) {\n                let x_val = x[${r.indicesToOffset("xIndices")}];\n                ${f}\n              }`:z=`\n              }\n              let x_val = x[${r.indicesToOffset("xIndices")}];\n              ${f}\n            `,`\n            ${e.registerUniforms(y).declareVariables(r,I)}\n\n            ${e.mainStart()}\n              ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n              let indices = ${I.offsetToIndices("global_idx")};\n              var xIndices = ${I.offsetToIndices("global_idx")};\n\n              var offsets: array<u32, ${O}>;\n\n              var value = ${P}(${d});\n              var pad = 0;\n              var isPad = false;\n\n              for (var i: u32 = 0u; i < uniforms.kernelSize; i++) {\n                var offset = i;\n                for (var j = 0u; j < ${O-1}u; j++) {\n                  offsets[j] = offset / ${ve("uniforms.kernelStrides","j",O)};\n                  offset -= offsets[j] * ${ve("uniforms.kernelStrides","j",O)};\n                }\n                offsets[${O-1}] = offset;\n\n                isPad = false;\n                for (var j = ${t-O}u; j < ${t}u; j++) {\n                  xIndices[j] = indices[j] * ${ve("uniforms.strides",`j - ${t-O}u`,O)}\n                    + offsets[j - ${t-O}u] - ${ve("uniforms.pads","j - 2u",R)};\n                  ${z}\n              }\n              ${m}\n\n              output[global_idx] = value;\n            }`}},nc=e=>`${e.format};${e.ceilMode};${e.autoPad};${e.kernelShape.length}`,vy=e=>`${nc(e)};${e.countIncludePad}`,wy=e=>`${nc(e)};${e.storageOrder};${e.dilations}`,ic=e=>({format:e.format,autoPad:["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][e.auto_pad],ceilMode:e.ceil_mode,kernelShape:e.kernel_shape,strides:e.strides,pads:e.pads}),oc=(e,r,t,u)=>{let[s,f]=ec(r,u,t),m=X("x",r.dataType,r.dims.length),d=m.type.value,y="value += x_val;",w="";s.countIncludePad?w+=`value /= ${d}(uniforms.kernelSize);`:w+=`value /= ${d}(i32(uniforms.kernelSize) - pad);`;let[C,$,T,P,I]=tc(f,s);C.push(...se(r.dims,f));let O=["rank"];return{name:e,shaderCache:{hint:`${u.cacheKey};${T};${P};${I}`,inputDependencies:O},getRunData:()=>({outputs:[{dims:f,dataType:r.dataType}],dispatchGroup:{x:Math.ceil(Q.size(f)/64)},programUniforms:C}),getShaderSource:R=>rc(R,m,r.dims.length,f.length,s,y,w,0,$,T,P,I)}},ac=e=>{let r=e.count_include_pad!==0,t=ic(e);if(t.ceilMode!==0)throw new Error("using ceil() in shape computation is not yet supported for AveragePool");let u={countIncludePad:r,...t,cacheKey:""};return{...u,cacheKey:vy(u)}},sc=(e,r)=>{yi(e.inputs),e.compute(oc("AveragePool",e.inputs[0],!1,r))},uc={autoPad:"",ceilMode:0,countIncludePad:!1,kernelShape:[],strides:[],pads:[],storageOrder:0,dilations:[]},lc=e=>{let r=e.format;return{format:r,...uc,cacheKey:r}},dc=(e,r)=>{yi(e.inputs),e.compute(oc("GlobalAveragePool",e.inputs[0],!0,r))},cc=(e,r,t,u)=>{let[s,f]=ec(r,u,t),m=`\n      value = max(x_val, value);\n    `,d="",y=X("x",r.dataType,r.dims.length),w=["rank"],[C,$,T,P,I]=tc(f,s);return C.push(...se(r.dims,f)),{name:e,shaderCache:{hint:`${u.cacheKey};${T};${P};${I}`,inputDependencies:w},getRunData:()=>({outputs:[{dims:f,dataType:r.dataType}],dispatchGroup:{x:Math.ceil(Q.size(f)/64)},programUniforms:C}),getShaderSource:O=>rc(O,y,r.dims.length,f.length,s,m,d,-1e5,$,T,P,I)}},fc=(e,r)=>{yi(e.inputs),e.compute(cc("MaxPool",e.inputs[0],!1,r))},pc=e=>{let r=e.storage_order,t=e.dilations,u=ic(e);if(r!==0)throw new Error("column major storage order is not yet supported for MaxPool");if(u.ceilMode!==0)throw new Error("using ceil() in shape computation is not yet supported for MaxPool");let s={storageOrder:r,dilations:t,...u,cacheKey:""};return{...s,cacheKey:wy(s)}},mc=e=>{let r=e.format;return{format:r,...uc,cacheKey:r}},hc=(e,r)=>{yi(e.inputs),e.compute(cc("GlobalMaxPool",e.inputs[0],!0,r))}});var $y,Cy,yc,bc=oe(()=>{"use strict";Ar();$e();Te();$y=(e,r,t)=>{let u=e===r,s=e<r&&t<0,f=e>r&&t>0;if(u||s||f)throw new Error("Range these inputs\' contents are invalid.")},Cy=(e,r,t,u)=>{let s=Math.abs(Math.ceil((r-e)/t)),f=[s],m=s,d=[{type:12,data:m},{type:u,data:e},{type:u,data:t},...se(f)],y=w=>{let C=ne("output",u,f.length),$=C.type.value,T=[{name:"outputSize",type:"u32"},{name:"start",type:$},{name:"delta",type:$}];return`\n        ${w.registerUniforms(T).declareVariables(C)}\n        ${w.mainStart()}\n        ${w.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n        output[global_idx] = uniforms.start + ${$}(global_idx) * uniforms.delta;\n      }`};return{name:"Range",shaderCache:{hint:`${u}`},getShaderSource:y,getRunData:()=>({outputs:[{dims:f,dataType:u}],dispatchGroup:{x:Math.ceil(m/64)},programUniforms:d})}},yc=e=>{let r=0,t=0,u=0;e.inputs[0].dataType===6?(r=e.inputs[0].getInt32Array()[0],t=e.inputs[1].getInt32Array()[0],u=e.inputs[2].getInt32Array()[0]):e.inputs[0].dataType===1&&(r=e.inputs[0].getFloat32Array()[0],t=e.inputs[1].getFloat32Array()[0],u=e.inputs[2].getFloat32Array()[0]),Ir.webgpu.validateInputContent&&$y(r,t,u),e.compute(Cy(r,t,u,e.inputs[0].dataType),{inputs:[]})}});var Sy,xy,Iy,Ay,Ty,Ey,Py,Oy,ky,Ry,Dy,vc,By,My,zy,Uy,jy,wc,_c,$c=oe(()=>{"use strict";$e();Ee();ot();Te();Sy=(e,r)=>{if(e.every(t=>t>0||(()=>{throw new Error("Resize requires scales input values to be positive")})),e.length>0){if(r.mode==="linear"){if(!(e.length===2||e.length===3||e.length===4&&e[0]===1&&e[1]===1||e.length===4&&e[0]===1&&e[3]===1||e.length===5&&e[0]===1&&e[1]===1))throw new Error(`For linear mode, Resize requires scales to be 2D, 3D, 4D with either two outermost or one innermost and\n            one outermost scale values equal to 1, or 5D with two outermost scale values equal to 1`)}else if(r.mode==="cubic"&&!(e.length===2||e.length===4&&e[0]===1&&e[1]===1||e.length===4&&e[0]===1&&e[3]===1))throw new Error("Resize requires scales input size to be 2 or 4 for cubic mode")}},xy=(e,r,t)=>{r.every(s=>s>=0&&s<t||(()=>{throw new Error("Resize requires axes input values to be positive and less than rank")}));let u=new Array(t).fill(1);return r.forEach((s,f)=>u[s]=e[f]),u},Iy=(e,r,t,u,s,f)=>{let[m,d,y]=t>10?[1,2,3]:[-1,e.length>1?1:-1,-1],w=e[0].dims.length;if(m>0&&e.length>m&&e[m].dims.length>0)e[m].getFloat32Array().forEach(C=>f.push(C));else if(r.coordinateTransformMode==="tf_crop_and_resize")throw new Error("Resize requires RoI input to be specified when coordinateTransformMode is tfCropAndResize");if(d>0&&e.length>d&&e[d].dims.length>0){if(e[d].getFloat32Array().forEach(C=>u.push(C)),u.length!==0&&u.length!==w&&t>=18&&u.length!==r.axes.length)throw new Error("Resize requires scales input size to be same as input rank or axes size for opset 18 and up");Sy(u,r),r.axes.length>0&&xy(u,r.axes,w).forEach((C,$)=>u[$]=C)}if(y>0&&e.length>y&&(e[y].getBigInt64Array().forEach(C=>s.push(Number(C))),s.length!==w||t>=18&&s.length===r.axes.length))throw new Error("Resize requires sizes input size to be same as input rank or axes size for opset 18 and up");if(r.axes.length>0){if(u.length!==r.axes.length)throw new Error(\'Resize requires "scales" input size to be of axes rank when axes attributes is specified\');if(s.length!==r.axes.length)throw new Error(\'Resize requires "sizes" input size to be of rank axes rank when axes attributes is specified\')}if(typeof u<"u"&&typeof s<"u"&&u.length>0&&s.length>w)throw new Error("Resize requires only of scales or sizes to be specified")},Ay=(e,r)=>`fn getOriginalCoordinateFromResizedCoordinate(xResized: u32, xScale: f32, lengthResized: u32,\n     lengthOriginal: u32, roiStart: f32, roiEnd: f32) -> ${r} { `+(()=>{switch(e){case"asymmetric":return`return ${r}(xResized) / ${r}(xScale);`;case"pytorch_half_pixel":return`if (lengthResized > 1) {\n                    return (${r}(xResized) + 0.5) / ${r}(xScale) - 0.5;\n                  } else {\n                    return 0.0;\n                  }`;case"tf_half_pixel_for_nn":return`return (${r}(xResized) + 0.5) / ${r}(xScale);`;case"align_corners":return`if (lengthResized == 1) {\n                    return 0.0;\n                  } else {\n                    // The whole part and the fractional part are calculated separately due to inaccuracy of floating\n                    // point division. As an example, f32(21) / f32(7) may evaluate to 2.99... instead of 3, causing an\n                    // offset-by-one error later in floor().\n                    let whole = ${r}(xResized * (lengthOriginal - 1) / (lengthResized - 1));\n                    let fract =\n                        ${r}(xResized * (lengthOriginal - 1) % (lengthResized - 1)) / ${r}(lengthResized - 1);\n                    return whole + fract;\n                  }`;case"tf_crop_and_resize":return`if (lengthResized > 1) {\n                    return ${r}(roiStart) * ${r}(lengthOriginal - 1) +\n                        (${r}(xResized) * ${r}(roiEnd - roiStart) * ${r}(lengthOriginal - 1)) /\n                        ${r}(lengthResized - 1);\n                  } else {\n                    return 0.5 * ${r}(roiStart + roiEnd) * ${r}(lengthOriginal - 1);\n                  }`;case"half_pixel_symmetric":return`const outputWidth = ${r}xScale * ${r}(lengthResized);\n                  const adjustment = ${r}(lengthResized) / outputWidth;\n                  const center = ${r}(lengthOriginal) / 2;\n                  const offset = center * (1 - adjustment);\n                  return offset + ((${r}(xResized) + 0.5) / ${r}(xScale)) - 0.5;`;case"half_pixel":return`return ((${r}(xResized) + 0.5) / ${r}(xScale)) - 0.5;`;default:throw new Error(`Coordinate transform mode ${e} is not supported`)}})()+"}",Ty=(e,r,t)=>`fn getNearestPixelFromOriginal(xOriginal: ${t}, isDownSample: bool) -> ${t} {`+(()=>{switch(e){case"round_prefer_ceil":return"if (fract(xOriginal) == 0.5) {             return ceil(xOriginal);           } else {             return round(xOriginal);           }";case"floor":return"return floor(xOriginal);";case"ceil":return"return ceil(xOriginal);";case"round_prefer_floor":return"if (fract(xOriginal) == 0.5) {                     return floor(xOriginal);                   } else {                     return round(xOriginal);                   }";case"simple":default:if(r<11)return"if (isDownSample)                     {                       return ceil(xOriginal);                     } else {                       return xOriginal;                     }";throw new Error(`Nearest mode ${e} is not supported`)}})()+"}",Ey=(e,r,t)=>{let u=new Array(t).fill(0).concat(new Array(t).fill(1)),s=e.length===0?u:e.slice();return r.length>0?(r.forEach((f,m)=>{u[f]=s[m],u[m+t]=s[r.length+m]}),u):s},Py=(e,r,t,u)=>{let s=[];if(t.length>0)if(u.length>0){if(e.forEach(f=>s.push(f)),Math.max(...u)>e.length)throw new Error("axes is out of bound");u.forEach((f,m)=>s[f]=t[m])}else t.forEach(f=>s.push(f));else{if(r.length===0)throw new Error("Resize requires either scales or sizes.");s=e.map((f,m)=>Math.round(f*r[m]))}return s},Oy=(e,r,t)=>{let u=(()=>{switch(t.keepAspectRatioPolicy){case"not_larger":return t.axes.length>0?Math.min(...t.axes.map(f=>r[f]),Number.MAX_VALUE):Math.min(...r,Number.MAX_VALUE);case"not_smaller":return t.axes.length>0?Math.max(...t.axes.map(f=>r[f]),Number.MIN_VALUE):Math.max(...r,Number.MIN_VALUE);default:throw new Error(`Keep aspect ratio policy ${t.keepAspectRatioPolicy} is not supported`)}})();r.fill(1,0,r.length);let s=e.slice();return t.axes.length>0?(t.axes.forEach(f=>r[f]=u),t.axes.forEach(f=>s[f]=Math.round(e[f]*r[f]))):(r.fill(u,0,r.length),s.forEach((f,m)=>s[m]=Math.round(f*r[m]))),s},ky=(e,r,t,u,s)=>`\n    fn calculateOriginalIndicesFromOutputIndices(output_indices: ${e.type.indices}) -> array<${e.type.value}, ${t.length}> {\n      var original_indices: array<${e.type.value}, ${t.length}>;\n      for (var i:u32 = 0; i < ${t.length}; i++) {\n        var output_index = ${e.indicesGet("output_indices","i")};\n        var scale = ${ve("uniforms.scales","i",u)};\n        var roi_low = ${ve("uniforms.roi","i",s)};\n        var roi_hi = ${ve("uniforms.roi",`i + ${r.length}`,s)};\n        if (scale == 1.0) {\n          original_indices[i] = ${e.type.value}(output_index);\n        } else {\n          var input_shape_i = ${ve("uniforms.input_shape","i",r.length)};\n          var output_shape_i = ${ve("uniforms.output_shape","i",t.length)};\n          original_indices[i] = getOriginalCoordinateFromResizedCoordinate(output_index, scale, output_shape_i,\n                                                                           input_shape_i, roi_low, roi_hi);\n        }\n      }\n      return original_indices;\n    }`,Ry=(e,r,t,u,s,f,m)=>`\n    fn calculateInputIndicesFromOutputIndices(output_indices: ${r.type.indices}) -> ${e.type.indices} {\n      var input_indices: ${e.type.indices};\n      for (var i:u32 = 0; i < ${u.length}; i++) {\n        var output_index = ${r.indicesGet("output_indices","i")};\n        var input_index: u32;\n        var scale = ${ve("uniforms.scales","i",s)};\n        if (scale == 1.0) {\n          input_index = output_index;\n        } else {\n          var roi_low = ${ve("uniforms.roi","i",f)};\n          var roi_hi = ${ve("uniforms.roi",`i + ${t.length}`,f)};\n          var input_shape_i = ${ve("uniforms.input_shape","i",t.length)};\n          var output_shape_i = ${ve("uniforms.output_shape","i",u.length)};\n          var original_idx = getOriginalCoordinateFromResizedCoordinate(output_index, scale, output_shape_i,\n                                                                        input_shape_i, roi_low, roi_hi);\n          if (!${m} || (original_idx >= 0 && original_idx < ${r.type.value}(input_shape_i))) {\n            if (original_idx < 0) {\n              input_index = 0;\n            } else if (original_idx > ${r.type.value}(input_shape_i - 1)) {\n              input_index = input_shape_i - 1;\n            } else {\n              input_index = u32(getNearestPixelFromOriginal(original_idx, scale < 1));\n            }\n          } else {\n            input_index = u32(original_idx);\n          }\n        }\n        ${e.indicesSet("input_indices","i"," input_index")}\n      }\n      return input_indices;\n    }`,Dy=(e,r)=>`\n    fn checkInputIndices(input_indices: ${e.type.indices}) -> bool {\n      for (var i:u32 = 0; i < ${r.length}; i++) {\n        var input_index = ${e.indicesGet("input_indices","i")};\n        if (input_index < 0 || input_index >= ${ve("uniforms.input_shape","i",r.length)}) {\n          return false;\n        }\n      }\n      return true;\n    }`,vc=(e,r,t,u)=>e.rank>u?`\n    ${e.indicesSet("input_indices",r,"channel")};\n    ${e.indicesSet("input_indices",t,"batch")};\n`:"",By=(e,r,t,u,s)=>{let[m,d,y,w]=t.length===2?[-1,0,1,-1]:[0,2,3,1],C=e.type.value;return`\n    fn getInputValue(batch: u32, channel: u32, row: u32, col: u32) -> ${C} {\n      var input_indices: ${e.type.indices};\n      ${e.indicesSet("input_indices",d,`max(0, min(row, ${t[d]} - 1))`)};\n      ${e.indicesSet("input_indices",y,`max(0, min(col, ${t[y]} - 1))`)};\n      ${vc(e,w,m,2)}\n      return ${e.getByIndices("input_indices")};\n    }\n\n    fn bilinearInterpolation(output_indices: ${r.type.indices}) -> ${C} {\n      var originalIndices = calculateOriginalIndicesFromOutputIndices(output_indices);\n      var row:${C} = originalIndices[${d}];\n      var col:${C} = originalIndices[${y}];\n      ${u?`if (row < 0 || row > (${t[d]} - 1) || col < 0 || col > (${t[y]} - 1)) {\n        return ${s};\n      }`:""};\n      row = max(0, min(row, ${t[d]} - 1));\n      col = max(0, min(col, ${t[y]} - 1));\n      var row1: u32 = u32(row);\n      var col1: u32 = u32(col);\n      var row2: u32 = u32(row + 1);\n      var col2: u32 = u32(col + 1);\n      var channel: u32 = ${t.length>2?`u32(originalIndices[${w}])`:"0"};\n      var batch: u32 =  ${t.length>2?`u32(originalIndices[${m}])`:"0"};\n      var x11: ${C} = getInputValue(batch, channel, row1, col1);\n      var x12: ${C} = getInputValue(batch, channel, row1, col2);\n      var x21: ${C} = getInputValue(batch, channel, row2, col1);\n      var x22: ${C} = getInputValue(batch, channel, row2, col2);\n      var dx1: ${C} = abs(row - ${C}(row1));\n      var dx2: ${C} = abs(${C}(row2) - row);\n      var dy1: ${C} = abs(col - ${C}(col1));\n      var dy2: ${C} = abs(${C}(col2) - col);\n      if (row1 == row2) {\n        dx1 = 0.5;\n        dx2 = 0.5;\n      }\n      if (col1 == col2) {\n        dy1 = 0.5;\n        dy2 = 0.5;\n      }\n      return (x11 * dx2 * dy2 + x12 * dx2 * dy1 + x21 * dx1 * dy2 + x22 * dx1 * dy1);\n    }`},My=(e,r,t,u,s,f,m,d,y,w)=>{let C=t.length===2,$=!0,[T,P]=C?[0,1]:$?[2,3]:[1,2],I=e.type.value,O=R=>{let z=R===T?"row":"col";return`\n      fn ${z}CubicInterpolation(input_indices: ${e.type.indices}, output_indices: ${r.type.indices}) -> ${I} {\n        var output_index = ${r.indicesGet("output_indices",R)};\n        var originalIdx: ${I} = getOriginalCoordinateFromResizedCoordinate(output_index, ${s[R]},\n        ${u[R]}, ${t[R]}, ${f[R]}, ${f[R]} + ${t.length});\n        var fractOriginalIdx: ${I} = originalIdx - floor(originalIdx);\n        var coefs = getCubicInterpolationCoefs(fractOriginalIdx);\n\n        if (${d} && (originalIdx < 0 || originalIdx > (${t[R]} - 1))) {\n          return ${y};\n        }\n        var data: array<${I}, 4> = array<${I}, 4>(0.0, 0.0, 0.0, 0.0);\n        for (var i: i32 = -1; i < 3; i++) {\n          var ${z}: ${I} = originalIdx + ${I}(i);\n          if (${z} < 0 || ${z} >= ${t[R]}) {\n            ${(()=>w?`coefs[i + 1] = 0.0;\n                        continue;`:d?`return ${y};`:`${z} = max(0, min(${z}, ${t[R]} - 1));`)()};\n          }\n        var input_indices_copy: ${e.type.indices} = input_indices;\n          ${e.indicesSet("input_indices_copy",R,`u32(${z})`)};\n          data[i + 1] = ${R===T?e.getByIndices("input_indices_copy"):"rowCubicInterpolation(input_indices_copy, output_indices)"};\n        }\n        return cubicInterpolation1D(data, coefs);\n      }`};return`\n    ${O(T)};\n    ${O(P)};\n  fn getCubicInterpolationCoefs(s: ${I}) -> array<${I}, 4> {\n    var absS = abs(s);\n    var coeffs: array<${I}, 4> = array<${I}, 4>(0.0, 0.0, 0.0, 0.0);\n    var oneMinusAbsS: ${I} = 1.0 - absS;\n    var twoMinusAbsS: ${I} = 2.0 - absS;\n    var onePlusAbsS: ${I} = 1.0 + absS;\n    coeffs[0] = ((${m} * onePlusAbsS - 5 * ${m}) * onePlusAbsS + 8 * ${m}) * onePlusAbsS - 4 * ${m};\n    coeffs[1] = ((${m} + 2) * absS - (${m} + 3)) * absS * absS + 1;\n    coeffs[2] = ((${m} + 2) * oneMinusAbsS - (${m} + 3)) * oneMinusAbsS * oneMinusAbsS + 1;\n    coeffs[3] = ((${m} * twoMinusAbsS - 5 * ${m}) * twoMinusAbsS + 8 * ${m}) * twoMinusAbsS - 4 * ${m};\n    return coeffs;\n  }\n\n  fn cubicInterpolation1D(x: array<${I}, 4>, coefs: array<${I}, 4>) -> ${I} {\n    var coefsSum: ${I} = coefs[0] + coefs[1] + coefs[2] + coefs[3];\n    return (x[0] * coefs[0] + x[1] * coefs[1]+ x[2] * coefs[2]+ x[3] * coefs[3]) / coefsSum;\n  }\n\n  fn bicubicInterpolation(output_indices: ${r.type.indices}) -> ${I} {\n    var input_indices: ${e.type.indices} = output_indices;\n    return colCubicInterpolation(input_indices, output_indices);\n  }\n    `},zy=(e,r,t,u,s)=>{let[m,d,y,w,C]=t.length===3?[-1,0,1,2,-1]:[0,2,3,4,1],$=e.type.value;return`\n    fn getInputValue(batch: u32, channel: u32, depth:u32, height: u32, width: u32) -> ${$} {\n      var input_indices: ${e.type.indices};\n      ${e.indicesSet("input_indices",d,`max(0, min(depth, ${t[d]} - 1))`)};\n      ${e.indicesSet("input_indices",y,`max(0, min(height, ${t[y]} - 1))`)};\n      ${e.indicesSet("input_indices",w,`max(0, min(width, ${t[w]} - 1))`)};\n      ${vc(e,C,m,3)}\n      return ${e.getByIndices("input_indices")};\n    }\n\n    fn trilinearInterpolation(output_indices: ${r.type.indices}) -> ${$} {\n      var originalIndices = calculateOriginalIndicesFromOutputIndices(output_indices);\n      var depth:${$} = originalIndices[${d}];\n      var height:${$} = originalIndices[${y}];\n      var width:${$} = originalIndices[${w}];\n      ${u?`if (depth < 0 || depth > (${t[d]} - 1) || height < 0 || height > (${t[y]} - 1) || width < 0 || (width > ${t[w]} - 1)) {\n      return ${s};\n        }`:""};\n\n    depth = max(0, min(depth, ${t[d]} - 1));\n      height = max(0, min(height, ${t[y]} - 1));\n      width = max(0, min(width, ${t[w]} - 1));\n      var depth1: u32 = u32(depth);\n      var height1: u32 = u32(height);\n      var width1: u32 = u32(width);\n      var depth2: u32 = u32(depth + 1);\n      var height2: u32 = u32(height + 1);\n      var width2: u32 = u32(width + 1);\n      var channel: u32 = ${t.length>3?`u32(originalIndices[${C}])`:"0"};\n      var batch: u32 =  ${t.length>3?`u32(originalIndices[${m}])`:"0"};\n\n      var x111: ${$} = getInputValue(batch, channel, depth1, height1, width1);\n      var x112: ${$} = getInputValue(batch, channel, depth1, height1, width2);\n      var x121: ${$} = getInputValue(batch, channel, depth1, height2, width1);\n      var x122: ${$} = getInputValue(batch, channel, depth1, height2, width2);\n      var x211: ${$} = getInputValue(batch, channel, depth2, height1, width1);\n      var x212: ${$} = getInputValue(batch, channel, depth2, height1, width2);\n      var x221: ${$} = getInputValue(batch, channel, depth2, height2, width1);\n      var x222: ${$} = getInputValue(batch, channel, depth2, height2, width2);\n      var dx1: ${$} = abs(depth - ${$}(depth1));\n      var dx2: ${$} = abs(${$}(depth2) - depth);\n      var dy1: ${$} = abs(height - ${$}(height1));\n      var dy2: ${$} = abs(${$}(height2) - height);\n      var dz1: ${$} = abs(width - ${$}(width1));\n      var dz2: ${$} = abs(${$}(width2) - width);\n      if (depth1 == depth2) {\n        dx1 = 0.5;\n        dx2 = 0.5;\n      }\n      if (height1 == height2) {\n        dy1 = 0.5;\n        dy2 = 0.5;\n      }\n      if (width1 == width2) {\n        dz1 = 0.5;\n        dz2 = 0.5;\n      }\n      return (x111 * dx2 * dy2 * dz2 + x112 * dx2 * dy2 * dz1 + x121 * dx2 * dy1 *dz2 + x122 * dx2 * dy1 * dz1 +\n              x211 * dx1 * dy2 * dz2 + x212 * dx1 * dy2 * dz1 + x221 * dx1 * dy1 *dz2 + x222 * dx1 * dy1 * dz1);\n    }`},Uy=(e,r,t,u,s,f)=>{let m=e.dims,d=Ey(f,r.axes,m.length),y=Py(m,u,s,r.axes),w=u.slice();u.length===0&&(w=m.map((k,G)=>k===0?1:y[G]/k),r.keepAspectRatioPolicy!=="stretch"&&(y=Oy(m,w,r)));let C=ne("output",e.dataType,y.length),$=X("input",e.dataType,m.length),T=Q.size(y),P=m.length===y.length&&m.every((k,G)=>k===y[G]),I=r.coordinateTransformMode==="tf_crop_and_resize",O=r.extrapolationValue,R=$.type.value,z=k=>`\n      ${P?"":`\n      ${Ay(r.coordinateTransformMode,R)};\n      ${(()=>{switch(r.mode){case"nearest":return`\n              ${Dy($,m)};\n              ${Ty(r.nearestMode,t,R)};\n              ${Ry($,C,m,y,w.length,d.length,I)};\n              `;case"linear":return`\n              ${ky(C,m,y,w.length,d.length)};\n              ${(()=>{if(m.length===2||m.length===4)return`${By($,C,m,I,O)}`;if(m.length===3||m.length===5)return`${zy($,C,m,I,O)}`;throw Error("Linear mode only supports input dims 2, 3, 4 and 5 are supported in linear mode.")})()};\n            `;case"cubic":return`\n            ${(()=>{if(m.length===2||m.length===4)return`${My($,C,m,y,w,d,r.cubicCoeffA,I,r.extrapolationValue,r.excludeOutside)}`;throw Error("Cubic mode only supports input dims 2 and 4 are supported in linear mode.")})()};\n            `;default:throw Error("Invalid resize mode")}})()};\n      `}\n      ${k.registerUniform("output_size","u32").registerUniform("scales","f32",w.length).registerUniform("roi","f32",d.length).declareVariables($,C)}\n      ${k.mainStart()}\n        ${k.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n        ${P?"output[global_idx] = input[global_idx];":`\n        let output_indices = ${C.offsetToIndices("global_idx")};\n        var input_indices: ${$.type.indices};\n        ${(()=>{switch(r.mode){case"nearest":return`input_indices = calculateInputIndicesFromOutputIndices(output_indices);\n                if (checkInputIndices(input_indices)) {\n                  output[global_idx] = ${$.getByIndices("input_indices")};\n                } else {\n                  output[global_idx] = ${r.extrapolationValue};\n                }`;case"linear":return`output[global_idx] = ${m.length===2||m.length===4?"bilinearInterpolation":"trilinearInterpolation"}(output_indices);`;case"cubic":return"output[global_idx] = bicubicInterpolation(output_indices);";default:throw Error(`Unsupported resize mode: ${r.mode}`)}})()};\n`}\n      }`;return{name:"Resize",shaderCache:{hint:`${r.cacheKey}|${t}|${w.length>0?w:""}|${s.length>0?s:""}|${d.length>0?d:""}|${P}|${m}`,inputDependencies:["rank"]},getShaderSource:z,getRunData:()=>({outputs:[{dims:y,dataType:e.dataType}],dispatchGroup:{x:Math.ceil(T/64)},programUniforms:[{type:12,data:T},{type:1,data:w},{type:1,data:d},...se(m,y)]})}},jy=e=>{let r=e.customDataBuffer;return new Uint32Array(r,r.byteOffset,1)[0]},wc=(e,r)=>{let t=[],u=[],s=[],f=jy(e);if(r.antialias!==0)throw Error("Only default value (0) for Antialias attribute is supported");Iy(e.inputs,r,f,t,u,s),e.compute(Uy(e.inputs[0],r,f,t,u,s),{inputs:[0]})},_c=e=>{let r=e.antialias,t=e.axes,u=e.coordinateTransformMode,s=e.cubicCoeffA,f=e.excludeOutside!==0,m=e.extrapolationValue,d=e.keepAspectRatioPolicy,y=e.mode,w=e.nearestMode===""?"simple":e.nearestMode;return ke({antialias:r,axes:t,coordinateTransformMode:u,cubicCoeffA:s,excludeOutside:f,extrapolationValue:m,keepAspectRatioPolicy:d,mode:y,nearestMode:w})}});var Vy,Ny,Cc,Sc=oe(()=>{"use strict";$e();Ee();Te();Vy=e=>{if(!e||e.length<3)throw new Error("layerNorm requires at least 3 inputs.");let r=e[0],t=e[1],u=e[2];if(r.dataType!==t.dataType||r.dataType!==u.dataType)throw new Error("All inputs must have the same data type");if(r.dims.length!==3&&r.dims.length!==2)throw new Error("Input must be 2D or 3D");if(t.dims.length!==3&&t.dims.length!==2)throw new Error("Skip must be 2D or 3D");let s=r.dims[r.dims.length-1],f=r.dims[r.dims.length-2];if(t.dims[t.dims.length-1]!==s)throw new Error("Skip must have the same hidden size as input");if(t.dims[t.dims.length-2]!==f)throw new Error("Skip must have the same sequence length as input");if(u.dims.length!==1)throw new Error("Gamma must be 1D");if(u.dims[u.dims.length-1]!==s)throw new Error("Gamma must have the same hidden size as input");if(e.length>3){let m=e[3];if(m.dims.length!==1)throw new Error("Beta must be 1D");if(m.dims[m.dims.length-1]!==s)throw new Error("Beta must have the same hidden size as input")}if(e.length>4){let m=e[4];if(m.dims.length!==1)throw new Error("Bias must be 1D");if(m.dims[m.dims.length-1]!==s)throw new Error("Bias must have the same hidden size as input")}},Ny=(e,r,t,u)=>{let s=e[0].dims,f=Q.size(s),m=s,d=f,y=s.slice(-1)[0],w=u?s.slice(0,-1).concat(1):[],C=e.length>3,$=e.length>4,T=u&&t>1,P=u&&t>2,I=t>3,O=Je(y),R=[{type:12,data:d},{type:12,data:O},{type:12,data:y},{type:1,data:r.epsilon}],z=G=>{let U=[{name:"output_size",type:"u32"},{name:"components",type:"u32"},{name:"hidden_size",type:"u32"},{name:"epsilon",type:"f32"}],q=[X("x",e[0].dataType,e[0].dims,O),X("skip",e[1].dataType,e[1].dims,O),X("gamma",e[2].dataType,e[2].dims,O)];C&&q.push(X("beta",e[3].dataType,e[3].dims,O)),$&&q.push(X("bias",e[4].dataType,e[4].dims,O)),q.push(ne("output",e[0].dataType,m,O)),T&&q.push(ne("mean_output",1,w)),P&&q.push(ne("inv_std_output",1,w)),I&&q.push(ne("input_skip_bias_sum",e[0].dataType,m,O));let K=He(e[0].dataType);return`\n\n      ${G.registerUniforms(U).declareVariables(...q)}\n\n      ${G.mainStart()}\n        ${G.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size / uniforms.hidden_size")}\n        let hidden_size_vectorized: u32 = uniforms.hidden_size / uniforms.components;\n        let offset = global_idx * hidden_size_vectorized;\n        var sum = ${at("f32",O)};\n        var squareSum = ${at("f32",O)};\n        for (var i: u32 = 0; i < hidden_size_vectorized; i++) {\n          let skip_value = skip[offset + i];\n          let bias_value = ${$?"bias[i]":"0.0"};\n          let input_value = x[offset + i];\n          let value = input_value + skip_value + bias_value;\n          ${I?"input_skip_bias_sum[offset + i] = value;":""}\n          output[offset + i] = value;\n          let f32_value = ${St(K,O,"value")};\n          sum += f32_value;\n          squareSum += f32_value * f32_value;\n        }\n        let mean = ${ft("sum",O)} / f32(uniforms.hidden_size);\n        let inv_std_dev = inverseSqrt(${ft("squareSum",O)} / f32(uniforms.hidden_size) - mean * mean + uniforms.epsilon);\n        ${T?"mean_output[global_idx] = mean;":""}\n        ${P?"inv_std_output[global_idx] = inv_std_dev;":""}\n        for (var i: u32 = 0; i < hidden_size_vectorized; i++) {\n          output[offset + i] = (output[offset + i] - ${K}(mean)) * ${K}(inv_std_dev) * gamma[i] + ${C?"beta[i]":"0.0"};\n        }\n      }`},k=[{dims:m,dataType:e[0].dataType}];return t>1&&k.push({dims:w,dataType:1}),t>2&&k.push({dims:w,dataType:1}),t>3&&k.push({dims:s,dataType:e[0].dataType}),{name:"SkipLayerNormalization",shaderCache:{hint:`${O};${T};${P};${I}`,inputDependencies:e.map((G,U)=>"type")},getShaderSource:z,getRunData:()=>({outputs:k,dispatchGroup:{x:Math.ceil(d/y/64)},programUniforms:R})}},Cc=(e,r)=>{Vy(e.inputs);let u=[0];e.outputCount>1&&u.push(-3),e.outputCount>2&&u.push(-3),e.outputCount>3&&u.push(3),e.compute(Ny(e.inputs,r,e.outputCount,!1),{outputs:u})}});var Wy,bi,Gy,xc,Hy,Ly,Ic,Ac,Tc=oe(()=>{"use strict";$e();Ee();ot();Te();Wy=(e,r)=>{if(!e||e.length<1)throw new Error("too few inputs");if(r.axes.length!==0){if(r.axes.length!==r.starts.length||r.axes.length!==r.ends.length)throw new Error("axes, starts and ends must have the same length")}else if(r.starts.length!==r.ends.length)throw new Error("starts and ends must have the same length");e.slice(1).forEach((t,u)=>{if(e[u+1].dataType!==6&&e[u+1].dataType!==7)throw new Error(`Input ${u} must be an array of int32 or int64`)})},bi=(e,r)=>{let t=[];if(e.length>r)if(e[r].dataType===7)e[r].getBigInt64Array().forEach(u=>t.push(Number(u)));else if(e[r].dataType===6)e[r].getInt32Array().forEach(u=>t.push(Number(u)));else throw new Error(`Input ${r} must be an array of int32 or int64`);return t},Gy=(e,r)=>{if(e.length>1){let t=bi(e,1),u=bi(e,2),s=bi(e,3);return s.length===0&&(s=[...Array(e[0].dims.length).keys()]),ke({starts:t,ends:u,axes:s})}else return r},xc=(e,r,t,u,s)=>{let f=e;return e<0&&(f+=t[u[r]]),s[r]<0?Math.max(0,Math.min(f,t[u[r]]-1)):Math.max(0,Math.min(f,t[u[r]]))},Hy=(e,r,t)=>`fn calculateInputIndices(output_indices: ${r.type.indices}) -> ${e.type.indices} {\n          var input_indices: ${e.type.indices};\n          var carry = 0u;\n          for (var i = ${t.length}; i >= 0; i--) {\n            let input_shape_i = ${ve("uniforms.input_shape","i",t.length)};\n            let steps_i = ${ve("uniforms.steps","i",t.length)};\n            let signs_i = ${ve("uniforms.signs","i",t.length)};\n            let starts_i = ${ve("uniforms.starts","i",t.length)};\n            var output_index = ${r.indicesGet("output_indices","i")};\n            var input_index = output_index * steps_i + starts_i + carry;\n            carry = input_index / input_shape_i;\n            input_index = input_index % input_shape_i;\n            if (signs_i < 0) {\n              input_index = input_shape_i - input_index - 1u + starts_i;\n            }\n            ${e.indicesSet("input_indices","i","input_index")};\n          }\n          return input_indices;\n      }`,Ly=(e,r)=>{let t=e[0].dims,u=Q.size(t),s=r.axes.length>0?Q.normalizeAxes(r.axes,t.length):[...Array(t.length).keys()],f=bi(e,4);f.forEach(z=>z!==0||(()=>{throw new Error("step cannot be 0")})),f.length===0&&(f=Array(s.length).fill(1));let m=r.starts.map((z,k)=>xc(z,k,t,s,f)),d=r.ends.map((z,k)=>xc(z,k,t,s,f));if(s.length!==m.length||s.length!==d.length)throw new Error("start, ends and axes should have the same number of elements");if(s.length!==t.length)for(let z=0;z<t.length;++z)s.includes(z)||(m.splice(z,0,0),d.splice(z,0,t[z]),f.splice(z,0,1));let y=f.map(z=>Math.sign(z));f.forEach((z,k,G)=>{if(z<0){let U=(d[k]-m[k])/z,q=m[k],K=q+U*f[k];m[k]=K,d[k]=q,G[k]=-z}});let w=t.slice(0);s.forEach((z,k)=>{w[z]=Math.ceil((d[z]-m[z])/f[z])});let C={dims:w,dataType:e[0].dataType},$=ne("output",e[0].dataType,w.length),T=X("input",e[0].dataType,e[0].dims.length),P=Q.size(w),I=[{name:"outputSize",type:"u32"},{name:"starts",type:"u32",length:m.length},{name:"signs",type:"i32",length:y.length},{name:"steps",type:"u32",length:f.length}],O=[{type:12,data:P},{type:12,data:m},{type:6,data:y},{type:12,data:f},...se(e[0].dims,w)],R=z=>`\n      ${z.registerUniforms(I).declareVariables(T,$)}\n        ${Hy(T,$,t)}\n        ${z.mainStart()}\n          ${z.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n          let output_indices = ${$.offsetToIndices("global_idx")};\n          let input_indices = calculateInputIndices(output_indices);\n          ${$.setByOffset("global_idx",T.getByIndices("input_indices"))}\n      }`;return{name:"Slice",shaderCache:{hint:`${y.length}_${m.length}_${f.length}`,inputDependencies:["rank"]},getShaderSource:R,getRunData:()=>({outputs:[C],dispatchGroup:{x:Math.ceil(u/64)},programUniforms:O})}},Ic=(e,r)=>{Wy(e.inputs,r);let t=Gy(e.inputs,r);e.compute(Ly(e.inputs,t),{inputs:[0]})},Ac=e=>{let r=e.starts,t=e.ends,u=e.axes;return ke({starts:r,ends:t,axes:u})}});var Fy,qy,Ec,Pc,Oc=oe(()=>{"use strict";$e();Ee();ot();Te();Fy=e=>{if(!e||e.length!==1)throw new Error("Softmax op requires 1 input.")},qy=(e,r)=>{let t=e.dims,u=Q.size(t),s=64,f=r.axis;if(f<0&&(f=t.length+f),f<t.length-1)throw new Error("softmax only supports last axis for now.");let m=t[f],d=u/m,y=Je(m),w=m/y,C=(R,z)=>z===4?`max(max(${R}.x, ${R}.y), max(${R}.z, ${R}.w))`:z===2?`max(${R}.x, ${R}.y)`:z===3?`max(max(${R}.x, ${R}.y), ${R}.z)`:R,$=X("x",e.dataType,e.dims,y),T=ne("result",e.dataType,e.dims,y),P=$.type.value,I=He(e.dataType)==="f32"?`var threadMax = ${P}(-3.402823e+38f);`:`var threadMax = ${P}(-65504.0h);`,O=R=>`\n      var<workgroup> rowMaxShared : ${P};\n      var<workgroup> rowSumShared : ${P};\n      var<workgroup> threadShared : array<${P}, ${s}>;\n\n      fn getValue(row: i32, col: i32, row_stride: i32) -> ${P} {\n        let index = row * row_stride + col;\n        return x[index];\n      }\n\n      fn setValue(row: i32, col: i32, row_stride: i32, value: ${P}) {\n        let index = row * row_stride + col;\n        result[index] = value;\n      }\n      ${R.registerUniform("packedCols","i32").declareVariables($,T)}\n      ${R.mainStart()}\n        let gindex = i32(global_idx);\n        let lindex = i32(local_idx);\n        const wg = ${s};\n        let row = gindex / wg;\n        let cols = uniforms.packedCols;\n        let row_stride : i32 = uniforms.packedCols;\n\n        // find the rows max\n        ${I}\n        for (var col = lindex; col < cols; col += wg) {\n          let value = getValue(row, col, row_stride);\n          threadMax = max(threadMax, value);\n        }\n        if (lindex < cols) {\n          threadShared[lindex] = threadMax;\n        }\n        workgroupBarrier();\n\n        var reduceSize = min(cols, wg);\n        for (var currSize = reduceSize >> 1;  currSize > 0; currSize = reduceSize >> 1) {\n          reduceSize = currSize + (reduceSize & 1);\n          if (lindex < currSize) {\n            threadShared[lindex] = max(threadShared[lindex], threadShared[lindex + reduceSize]);\n          }\n          workgroupBarrier();\n        }\n        if (lindex == 0) {\n          rowMaxShared = ${P}(${C("threadShared[0]",y)});\n        }\n        workgroupBarrier();\n\n        // find the rows sum\n        var threadSum = ${P}(0.0);\n        for (var col = lindex; col < cols; col += wg) {\n          let subExp = exp(getValue(row, col, row_stride) - rowMaxShared);\n          threadSum += subExp;\n        }\n        threadShared[lindex] = threadSum;\n        workgroupBarrier();\n\n        for (var currSize = wg >> 1;  currSize > 0; currSize = currSize >> 1) {\n          if (lindex < currSize) {\n            threadShared[lindex] = threadShared[lindex] + threadShared[lindex + currSize];\n          }\n          workgroupBarrier();\n        }\n        if (lindex == 0) {\n          rowSumShared = ${P}(${ft("threadShared[0]",y)});\n        }\n        workgroupBarrier();\n\n        // calculate final value for each element in the row\n        for (var col = lindex; col < cols; col += wg) {\n          let value = exp(getValue(row, col, row_stride) - rowMaxShared) / rowSumShared;\n          setValue(row, col, row_stride, value);\n        }\n      }`;return{name:"Softmax",shaderCache:{hint:`${y}`,inputDependencies:["type"]},getRunData:()=>({outputs:[{dims:t,dataType:e.dataType}],dispatchGroup:{x:d},programUniforms:[{type:12,data:w}]}),getShaderSource:O}},Ec=(e,r)=>{Fy(e.inputs),e.compute(qy(e.inputs[0],r))},Pc=e=>ke({axis:e.axis})});var Ky,Yy,Zy,Qy,Xy,kc,Rc,Dc=oe(()=>{"use strict";$e();Ee();ot();Te();Ky=e=>{if(!e||e.length<1)throw new Error("too few inputs")},Yy=(e,r)=>{let t=[],u=r.numOutputs;return e[1].dims[0]>0&&(e[1].getBigInt64Array().forEach(s=>t.push(Number(s))),u=t.length),ke({numOutputs:u,axis:r.axis,splitSizes:t})},Zy=e=>`\nfn calculateOutputIndex(index: u32) -> u32 {\n    for (var i: u32 = 0u; i < ${e}u; i += 1u ) {\n    if (index < ${ve("uniforms.size_in_split_axis","i",e)}) {\n        return i;\n    }\n    }\n    return ${e}u;\n}`,Qy=e=>{let r=e.length,t=[];for(let u=0;u<r;++u){let s=e[u].setByIndices("indices","input[global_idx]");r===1?t.push(s):u===0?t.push(`if (output_number == ${u}u) { ${s} }`):u===r-1?t.push(`else { ${s} }`):t.push(`else if (output_number == ${u}) { ${s} }`)}return`\n      fn writeBufferData(output_number: u32, indices: ${e[0].type.indices}, global_idx: u32) {\n        ${t.join(`\n`)}\n      }`},Xy=(e,r)=>{let t=e[0].dims,u=Q.size(t),s=e[0].dataType,f=Q.normalizeAxis(r.axis,t.length),m=new Array(r.numOutputs),d=X("input",s,t),y=new Array(r.numOutputs),w=[],C=[],$=0,T=[{type:12,data:u}];for(let I=0;I<r.numOutputs;I++){$+=r.splitSizes[I],y[I]=$;let O=t.slice();O[r.axis]=r.splitSizes[I],C.push(O),m[I]=ne(`output${I}`,s,O),w.push({dims:C[I],dataType:e[0].dataType})}T.push({type:12,data:y},...se(t,...C));let P=I=>`\n  ${I.registerUniform("input_size","u32").registerUniform("size_in_split_axis","u32",y.length).declareVariables(d,...m)}\n  ${Zy(y.length)}\n  ${Qy(m)}\n\n  ${I.mainStart()}\n    ${I.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.input_size")}\n\n    var indices = ${d.offsetToIndices("global_idx")};\n    var index = ${d.indicesGet("indices",f)};\n    let output_number = calculateOutputIndex(index);\n    if (output_number != 0) {\n      index -= ${ve("uniforms.size_in_split_axis","output_number - 1u",y.length)};\n      ${d.indicesSet("indices",f,"index")};\n    }\n    writeBufferData(output_number, indices, global_idx);\n  }`;return{name:"Split",shaderCache:{hint:r.cacheKey,inputDependencies:["rank"]},getShaderSource:P,getRunData:()=>({outputs:w,dispatchGroup:{x:Math.ceil(u/64)},programUniforms:T})}},kc=(e,r)=>{Ky(e.inputs);let t=e.inputs.length===1?r:Yy(e.inputs,r);e.compute(Xy(e.inputs,t),{inputs:[0]})},Rc=e=>{let r=e.axis,t=e.splitSizes,u=e.numOutputs<0?t.length:e.numOutputs;if(u!==t.length)throw new Error("numOutputs and splitSizes lengh must be equal");return ke({axis:r,numOutputs:u,splitSizes:t})}});var Bc,Jy,e0,t0,Mc,zc=oe(()=>{"use strict";$e();Ee();Te();Bc=e=>Array.from(e.getBigInt64Array(),Number),Jy=e=>{if(!e||e.length!==2)throw new Error("Tile requires 2 inputs.");if(e[0].dataType!==1&&e[0].dataType!==6&&e[0].dataType!==12)throw new Error("Tile only support float, int32, and uint32 data types");if(e[1].dataType!==7)throw new Error("Tile `repeats` input should be of int64 data type");if(e[1].dims.length!==1)throw new Error("Tile `repeats` input should be 1-D");if(Bc(e[1]).length!==e[0].dims.length)throw new Error("Tile `repeats` input should have same number of elements as rank of input data tensor")},e0=(e,r)=>{let t=[];for(let u=0;u<e.length;++u)t.push(e[u]*r[u]);return t},t0=e=>{let r=e[0].dims,t=Bc(e[1]),u=e0(r,t),s=Q.size(u),f=e[0].dataType,m=X("input",f,r.length),d=ne("output",f,u.length),y=w=>`\n      const inputShape = ${m.indices(...r)};\n      ${w.registerUniform("output_size","u32").declareVariables(m,d)}\n      ${w.mainStart()}\n      ${w.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n      let output_indices = ${d.offsetToIndices("global_idx")};\n      var input_indices: ${m.type.indices};\n      for (var i = 0; i < ${r.length}; i++) {\n        let input_dim_i = ${m.indicesGet("uniforms.input_shape","i")};\n        let input_dim_value = ${d.indicesGet("output_indices","i")}  % input_dim_i;\n\n        ${m.indicesSet("input_indices","i","input_dim_value")}\n      }\n      ${d.setByOffset("global_idx",m.getByIndices("input_indices"))}\n    }`;return{name:"Tile",shaderCache:{hint:`${t}`,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:u,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(s/64)},programUniforms:[{type:12,data:s},...se(e[0].dims,u)]}),getShaderSource:y}},Mc=e=>{Jy(e.inputs),e.compute(t0(e.inputs),{inputs:[0]})}});var r0,n0,Uc,jc=oe(()=>{"use strict";$e();Ee();Te();r0=(e,r,t,u,s)=>{let f=ne("output_data",s,t.length,4),m=X("a_data",r[1].dataType,r[1].dims.length,4),d=X("b_data",r[2].dataType,r[2].dims.length,4),y=X("c_data",r[0].dataType,r[0].dims.length,4),w,C=($,T,P)=>`select(${T}, ${$}, ${P})`;if(!u)w=f.setByOffset("global_idx",C(m.getByOffset("global_idx"),d.getByOffset("global_idx"),y.getByOffset("global_idx")));else{let $=(T,P,I="")=>{let O=`a_data[index_a${P}][component_a${P}]`,R=`b_data[index_b${P}][component_b${P}]`,z=`bool(c_data[index_c${P}] & ${4278190080>>>(3-P)*8}u)`;return`\n            let output_indices${P} = ${f.offsetToIndices(`global_idx * 4u + ${P}u`)};\n            let offset_a${P} = ${m.broadcastedIndicesToOffset(`output_indices${P}`,f)};\n            let offset_b${P} = ${d.broadcastedIndicesToOffset(`output_indices${P}`,f)};\n            let offset_c${P} = ${y.broadcastedIndicesToOffset(`output_indices${P}`,f)};\n            let index_a${P} = offset_a${P} / 4u;\n            let index_b${P} = offset_b${P} / 4u;\n            let index_c${P} = offset_c${P} / 4u;\n            let component_a${P} = offset_a${P} % 4u;\n            let component_b${P} = offset_b${P} % 4u;\n            ${T}[${P}] = ${I}(${C(O,R,z)});\n          `};s===9?w=`\n            var data = vec4<u32>(0);\n            ${$("data",0,"u32")}\n            ${$("data",1,"u32")}\n            ${$("data",2,"u32")}\n            ${$("data",3,"u32")}\n            output_data[global_idx] = dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(data));`:w=`\n            ${$("output_data[global_idx]",0)}\n            ${$("output_data[global_idx]",1)}\n            ${$("output_data[global_idx]",2)}\n            ${$("output_data[global_idx]",3)}\n          `}return`\n        ${e.registerUniform("vec_size","u32").declareVariables(y,m,d,f)}\n        ${e.mainStart()}\n        ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}\n        ${w}\n      }`},n0=e=>{let r=e[1].dims,t=e[2].dims,u=e[0].dims,s=e[1].dataType,f=!(Q.areEqual(r,t)&&Q.areEqual(t,u)),m=r,d=Q.size(r);if(f){let w=Ot.calcShape(Ot.calcShape(r,t,!1),u,!1);if(!w)throw new Error("Can\'t perform where op on the given tensors");m=w,d=Q.size(m)}let y=Math.ceil(d/4);return{name:"Where",shaderCache:{inputDependencies:["rank","rank","rank"]},getShaderSource:w=>r0(w,e,m,f,s),getRunData:()=>({outputs:[{dims:m,dataType:s}],dispatchGroup:{x:Math.ceil(d/64/4)},programUniforms:[{type:12,data:y},...se(u,r,t,m)]})}},Uc=e=>{e.compute(n0(e.inputs))}});var Vc,Nc=oe(()=>{"use strict";rl();Fi();ol();sl();Ll();rd();od();Xi();vd();$d();Ad();Pd();kd();Bd();Ud();Nd();Gd();Ld();eo();qd();Qd();Jd();gc();bc();oi();$c();Sc();Tc();Oc();Dc();zc();Er();di();jc();Vc=new Map([["Abs",[ul]],["Acos",[ll]],["Acosh",[dl]],["Add",[Fl]],["ArgMax",[tl,Li]],["ArgMin",[el,Li]],["Asin",[cl]],["Asinh",[fl]],["Atan",[pl]],["Atanh",[ml]],["Attention",[nl]],["AveragePool",[sc,ac]],["BatchNormalization",[il]],["BiasAdd",[al]],["BiasSplitGelu",[Hl]],["Cast",[gl,hl]],["Ceil",[bl]],["Clip",[yl]],["Concat",[nd,id]],["Conv",[ro,to]],["ConvTranspose",[bd,yd]],["Cos",[vl]],["Cosh",[wl]],["CumSum",[wd,_d]],["Div",[ql]],["Einsum",[xd,Id]],["Elu",[_l,ui]],["Equal",[Kl]],["Erf",[$l]],["Exp",[Cl]],["Expand",[Ed]],["FastGelu",[Od]],["Floor",[Sl]],["FusedConv",[ro,to]],["Gather",[Dd,Rd]],["GatherElements",[zd,Md]],["Gelu",[xl]],["Gemm",[Vd,jd]],["GlobalAveragePool",[dc,lc]],["GlobalMaxPool",[hc,mc]],["Greater",[Xl]],["GreaterOrEqual",[ed]],["HardSigmoid",[Rl,kl]],["InstanceNormalization",[Wd]],["LayerNormalization",[Hd]],["LeakyRelu",[Il,ui]],["Less",[Jl]],["LessOrEqual",[td]],["Log",[Wl]],["MatMul",[dd]],["MatMulNBits",[Fd]],["MaxPool",[fc,pc]],["Mul",[Yl]],["MultiHeadAttention",[Zd,Yd]],["Neg",[Tl]],["Not",[Al]],["Pad",[Xd]],["Pow",[Zl]],["Range",[yc]],["Reciprocal",[El]],["ReduceMin",[Ku]],["ReduceMean",[Gu]],["ReduceMax",[qu]],["ReduceSum",[Zu]],["ReduceProd",[Yu]],["ReduceL1",[Hu]],["ReduceL2",[Lu]],["ReduceLogSum",[Xu]],["ReduceLogSumExp",[Fu]],["ReduceSumSquare",[Qu]],["Relu",[Pl]],["Resize",[wc,_c]],["Sigmoid",[Ol]],["Sin",[Dl]],["Sinh",[Bl]],["Slice",[Ic,Ac]],["SkipLayerNormalization",[Cc]],["Split",[kc,Rc]],["Sqrt",[Ml]],["Softmax",[Ec,Pc]],["Sub",[Ql]],["Tan",[zl]],["Tanh",[jl]],["ThresholdedRelu",[Nl,ui]],["Tile",[Mc]],["Transpose",[Pu,Ou]],["Where",[Uc]]])});var vi,Wc=oe(()=>{"use strict";Ar();Lt();Te();vi=class{constructor(r){this.backend=r;this.repo=new Map,this.attributesBound=!1}getArtifact(r){return this.repo.get(r)}setArtifact(r,t){this.repo.set(r,t)}run(r,t,u,s,f){or(r.programInfo.name);let m=this.backend.device,d=this.backend.getComputePassEncoder();this.backend.writeTimestamp(this.backend.pendingDispatchNumber*2);let y=[];for(let C of t)y.push({binding:y.length,resource:{buffer:C.buffer}});for(let C of u)y.push({binding:y.length,resource:{buffer:C.buffer}});f&&y.push({binding:y.length,resource:f});let w=m.createBindGroup({layout:r.computePipeline.getBindGroupLayout(0),entries:y,label:r.programInfo.name});if(this.backend.sessionStatus==="capturing"){let C={kernelId:this.backend.currentKernelId,computePipeline:r.computePipeline,bindGroup:w,dispatchGroup:s};this.backend.capturedCommandList.get(this.backend.currentSessionId).push(C)}d.setPipeline(r.computePipeline),d.setBindGroup(0,w),d.dispatchWorkgroups(...s),this.backend.writeTimestamp(this.backend.pendingDispatchNumber*2+1),this.backend.pendingDispatchNumber++,(this.backend.pendingDispatchNumber>=this.backend.maxDispatchNumber||this.backend.queryType==="at-passes")&&this.backend.endComputePass(),this.backend.pendingDispatchNumber>=this.backend.maxDispatchNumber&&this.backend.flush(),ar(r.programInfo.name)}dispose(){}build(r,t){or(r.name);let u=this.backend.device,s=[];u.features.has("shader-f16")&&s.push("enable f16;");let f=Tu(t),m=r.getShaderSource(f),d=`${s.join(`\n`)}\n${f.additionalImplementations}\n${m}`,y=u.createShaderModule({code:d,label:r.name});Ge("verbose",()=>`[WebGPU] ${r.name} shader code: ${d}`);let w=u.createComputePipeline({compute:{module:y,entryPoint:"main"},layout:"auto",label:r.name});return ar(r.name),{programInfo:r,computePipeline:w}}normalizeDispatchGroupSize(r){let t=typeof r=="number"?r:r.x,u=typeof r=="number"?1:r.y||1,s=typeof r=="number"?1:r.z||1,f=this.backend.device.limits.maxComputeWorkgroupsPerDimension;if(t<=f&&u<=f&&s<=f)return[t,u,s];let m=t*u*s,d=Math.ceil(Math.sqrt(m));if(d>f){if(d=Math.ceil(Math.cbrt(m)),d>f)throw new Error("Total dispatch size exceeds WebGPU maximum.");return[d,d,d]}else return[d,d,1]}}});var i0,o0,wi,Gc=oe(()=>{"use strict";Ar();$e();Lt();Cu();Au();Nc();Wc();i0=(e,r)=>{if(r.length!==e.length)throw new Error(`inputDependencies length ${r.length} is not equal to inputTensors length ${e.length}.`);let t=[];for(let u=0;u<e.length;++u){let s=e[u].dataType;switch(r[u]){case"none":{t.push("");break}case"type":{t.push(`${s}`);break}case"rank":{let f=e[u].dims.length;t.push(`${s};${f}`);break}case"dims":{let f=e[u].dims.join(",");t.push(`${s};${f}`);break}default:throw new Error(`unsupported input dependency: ${r[u]}`)}}return t.join("|")},o0=(e,r,t)=>{let u=e.name;return e.shaderCache?.hint&&(u+="["+e.shaderCache.hint+"]"),u+=":"+t+`:${i0(r,e.shaderCache?.inputDependencies??new Array(r.length).fill("dims"))}`,u},wi=class{constructor(){this.currentSessionId=null;this.currentKernelId=null;this.commandEncoder=null;this.computePassEncoder=null;this.maxDispatchNumber=16;this.pendingDispatchNumber=0;this.pendingKernels=[];this.pendingQueries=new Map;this.sessionStatus="default";this.capturedCommandList=new Map;this.capturedPendingKernels=new Map;this.sessionExternalDataMapping=new Map}get currentKernelCustomData(){if(this.currentKernelId===null)throw new Error("currentKernelCustomData(): currentKernelId is null. (should not happen)");let r=this.kernelCustomData.get(this.currentKernelId);return r||(r={},this.kernelCustomData.set(this.currentKernelId,r)),r}async initialize(r,t){this.env=r;let u=[],s={requiredLimits:{maxComputeWorkgroupStorageSize:t.limits.maxComputeWorkgroupStorageSize,maxComputeWorkgroupsPerDimension:t.limits.maxComputeWorkgroupsPerDimension,maxStorageBufferBindingSize:t.limits.maxStorageBufferBindingSize,maxBufferSize:t.limits.maxBufferSize,maxComputeInvocationsPerWorkgroup:t.limits.maxComputeInvocationsPerWorkgroup,maxComputeWorkgroupSizeX:t.limits.maxComputeWorkgroupSizeX,maxComputeWorkgroupSizeY:t.limits.maxComputeWorkgroupSizeY,maxComputeWorkgroupSizeZ:t.limits.maxComputeWorkgroupSizeZ},requiredFeatures:u};t.features.has("chromium-experimental-timestamp-query-inside-passes")?u.push("chromium-experimental-timestamp-query-inside-passes"):t.features.has("timestamp-query")&&u.push("timestamp-query"),t.features.has("shader-f16")&&u.push("shader-f16"),this.device=await t.requestDevice(s),this.gpuDataManager=Iu(this),this.programManager=new vi(this),this.kernels=new Map,this.kernelPersistentData=new Map,this.kernelCustomData=new Map,_u(r.logLevel,!!r.debug),this.device.onuncapturederror=f=>{f.error instanceof GPUValidationError&&console.error(`An uncaught WebGPU validation error was raised: ${f.error.message}`)},Object.defineProperty(this.env.webgpu,"device",{value:this.device}),this.setQueryType()}dispose(){typeof this.querySet<"u"&&this.querySet.destroy(),this.gpuDataManager.dispose()}getCommandEncoder(){return this.commandEncoder||(this.commandEncoder=this.device.createCommandEncoder()),this.commandEncoder}getComputePassEncoder(){if(!this.computePassEncoder){let r=this.getCommandEncoder(),t={};this.queryType==="at-passes"&&(t.timestampWrites={querySet:this.querySet,beginningOfPassWriteIndex:this.pendingDispatchNumber*2,endOfPassWriteIndex:this.pendingDispatchNumber*2+1}),this.computePassEncoder=r.beginComputePass(t)}return this.computePassEncoder}endComputePass(){this.computePassEncoder&&(this.computePassEncoder.end(),this.computePassEncoder=null)}flush(){if(!this.commandEncoder)return;or(),this.endComputePass();let r;this.queryType!=="none"&&(this.commandEncoder.resolveQuerySet(this.querySet,0,this.pendingDispatchNumber*2,this.queryResolveBuffer,0),r=this.device.createBuffer({size:this.pendingDispatchNumber*2*8,usage:GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST}),this.pendingQueries.set(r,this.pendingKernels),this.pendingKernels=[],this.commandEncoder.copyBufferToBuffer(this.queryResolveBuffer,0,r,0,this.pendingDispatchNumber*2*8)),this.device.queue.submit([this.commandEncoder.finish()]),this.gpuDataManager.refreshPendingBuffers(),this.commandEncoder=null,this.pendingDispatchNumber=0,this.queryType!=="none"&&r.mapAsync(GPUMapMode.READ).then(()=>{let t=new BigUint64Array(r.getMappedRange()),u=this.pendingQueries.get(r);for(let s=0;s<t.length/2;s++){let f=u[s],m=f.kernelId,d=this.kernels.get(m),y=d.kernelType,w=d.kernelName,C=f.programName,$=f.inputTensorViews,T=f.outputTensorViews,P=t[s*2],I=t[s*2+1];typeof this.queryTimeBase>"u"&&(this.queryTimeBase=P);let O=Number(P-this.queryTimeBase),R=Number(I-this.queryTimeBase);if(!Number.isSafeInteger(O)||!Number.isSafeInteger(R))throw new RangeError("incorrect timestamp range");if(this.env.webgpu.profiling?.ondata)this.env.webgpu.profiling.ondata({version:1,inputsMetadata:$.map(z=>({dims:z.dims,dataType:Ht(z.dataType)})),outputsMetadata:T.map(z=>({dims:z.dims,dataType:Ht(z.dataType)})),kernelId:m,kernelType:y,kernelName:w,programName:C,startTime:O,endTime:R});else{let z="";$.forEach((G,U)=>{z+=`input[${U}]: [${G.dims}] | ${Ht(G.dataType)}, `});let k="";T.forEach((G,U)=>{k+=`output[${U}]: [${G.dims}] | ${Ht(G.dataType)}, `}),console.log(`[profiling] kernel "${m}|${y}|${w}|${C}" ${z}${k}execution time: ${R-O} ns`)}Bi("GPU",`${C}::${P}::${I}`)}r.unmap(),this.pendingQueries.delete(r)}),ar()}run(r,t,u,s,f){or(r.name);let m=[];for(let k=0;k<t.length;++k){let G=this.gpuDataManager.get(t[k].data);G?m[k]=G:m[k]=this.gpuDataManager.create(4)}let{outputs:d,dispatchGroup:y,programUniforms:w}=r.getRunData(t),C=u.length===0?d.map((k,G)=>G):u;if(C.length!==d.length)throw new Error(`Output size ${C.length} must be equal to ${d.length}.`);let $=[],T=[];for(let k=0;k<d.length;++k){if(!Number.isInteger(C[k])||C[k]<-3||C[k]>=d.length)throw new Error(`Invalid output index: ${C[k]}`);if(C[k]===-3)continue;let G=C[k]===-1,U=C[k]===-2,q=G||U?f(d[k].dataType,d[k].dims):s(C[k],d[k].dataType,d[k].dims),K=this.gpuDataManager.get(q.data);if(!K)throw new Error(`no GPU data for output: ${q.data}`);if(G&&this.temporaryData.push(K),U){let J=this.kernelPersistentData.get(this.currentKernelId);J||(J=[],this.kernelPersistentData.set(this.currentKernelId,J)),J.push(K)}$.push(q),T.push(K)}let P;if(w){let k=0,G=[];w.forEach(J=>{let ie=typeof J.data=="number"?[J.data]:J.data;if(ie.length===0)return;let ge=J.type===10?2:4,L,ue;J.type===10?(ue=ie.length>4?16:ie.length>2?8:ie.length*ge,L=ie.length>4?16:ge*ie.length):(ue=ie.length<=2?ie.length*ge:16,L=16),k=Math.ceil(k/ue)*ue,G.push(k);let je=J.type===10?8:4;k+=ie.length>4?Math.ceil(ie.length/je)*L:ie.length*ge});let U=16;k=Math.ceil(k/U)*U;let q=new ArrayBuffer(k);w.forEach((J,ie)=>{let ge=G[ie],L=typeof J.data=="number"?[J.data]:J.data;if(J.type===6)new Int32Array(q,ge,L.length).set(L);else if(J.type===12)new Uint32Array(q,ge,L.length).set(L);else if(J.type===10)new Uint16Array(q,ge,L.length).set(L);else if(J.type===1)new Float32Array(q,ge,L.length).set(L);else throw new Error(`Unsupported uniform type: ${Ht(J.type)}`)});let K=this.gpuDataManager.create(k,GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM);this.device.queue.writeBuffer(K.buffer,0,q,0,k),this.gpuDataManager.release(K.id),P={offset:0,size:k,buffer:K.buffer}}let I=this.programManager.normalizeDispatchGroupSize(y),O=I[1]===1&&I[2]===1,R=o0(r,t,O),z=this.programManager.getArtifact(R);if(z||(z=this.programManager.build(r,I),this.programManager.setArtifact(R,z),Ge("info",()=>`[artifact] key: ${R}, programName: ${r.name}`)),Ge("info",()=>`[ProgramManager] run "${r.name}" (key=${R}) with ${I[0]}x${I[1]}x${I[2]}`),this.queryType!=="none"||this.sessionStatus==="capturing"){let k={kernelId:this.currentKernelId,programName:z.programInfo.name,inputTensorViews:t,outputTensorViews:$};this.pendingKernels.push(k),this.sessionStatus==="capturing"&&this.capturedPendingKernels.get(this.currentSessionId).push(k)}return this.programManager.run(z,m,T,I,P),ar(r.name),$}upload(r,t){this.gpuDataManager.upload(r,t)}memcpy(r,t){this.gpuDataManager.memcpy(r,t)}async download(r,t){await this.gpuDataManager.download(r,t)}alloc(r){return this.gpuDataManager.create(r).id}free(r){return this.gpuDataManager.release(r)}createKernel(r,t,u,s){let f=Vc.get(r);if(!f)throw new Error(`kernel not implemented: ${r}`);let m={kernelType:r,kernelName:s,kernelEntry:f[0],attributes:[f[1],u]};this.kernels.set(t,m)}releaseKernel(r){let t=this.kernelPersistentData.get(r);if(t){for(let u of t)this.gpuDataManager.release(u.id);this.kernelPersistentData.delete(r)}this.kernelCustomData.delete(r),this.kernels.delete(r)}computeKernel(r,t,u){let s=this.kernels.get(r);if(!s)throw new Error(`kernel not created: ${r}`);let f=s.kernelType,m=s.kernelName,d=s.kernelEntry,y=s.attributes;if(this.currentKernelId!==null)throw new Error(`kernel "[${f}] ${m}" is not allowed to be called recursively`);this.currentKernelId=r,y[0]&&(y[1]=y[0](y[1]),y[0]=void 0),Ge("info",()=>`[WebGPU] Start to run kernel "[${f}] ${m}"...`);let w=this.env.debug;this.temporaryData=[];try{return w&&this.device.pushErrorScope("validation"),d(t,y[1]),0}catch(C){return u.push(Promise.resolve(`[WebGPU] Kernel "[${f}] ${m}" failed. ${C}`)),1}finally{w&&u.push(this.device.popErrorScope().then(C=>C?`GPU validation error for kernel "[${f}] ${m}": ${C.message}`:null));for(let C of this.temporaryData)this.gpuDataManager.release(C.id);this.temporaryData=[],this.currentKernelId=null}}registerBuffer(r,t,u,s){let f=this.sessionExternalDataMapping.get(r);f||(f=new Map,this.sessionExternalDataMapping.set(r,f));let m=f.get(t),d=this.gpuDataManager.registerExternalBuffer(u,s,m?.[1]);return f.set(t,[d,u]),d}unregisterBuffers(r){let t=this.sessionExternalDataMapping.get(r);t&&(t.forEach(u=>this.gpuDataManager.unregisterExternalBuffer(u[1])),this.sessionExternalDataMapping.delete(r))}getBuffer(r){let t=this.gpuDataManager.get(r);if(!t)throw new Error(`no GPU data for buffer: ${r}`);return t.buffer}createDownloader(r,t,u){return async()=>{let s=await Ui(this,r,t);return $u(s.buffer,u)}}writeTimestamp(r){this.queryType==="inside-passes"&&this.computePassEncoder.writeTimestamp(this.querySet,r)}setQueryType(){this.queryType="none",(this.env.webgpu.profiling?.mode==="default"||this.env.wasm.trace)&&(this.device.features.has("chromium-experimental-timestamp-query-inside-passes")?this.queryType="inside-passes":this.device.features.has("timestamp-query")&&(this.queryType="at-passes"),this.queryType!=="none"&&typeof this.querySet>"u"&&(this.querySet=this.device.createQuerySet({type:"timestamp",count:this.maxDispatchNumber*2}),this.queryResolveBuffer=this.device.createBuffer({size:this.maxDispatchNumber*2*8,usage:GPUBufferUsage.COPY_SRC|GPUBufferUsage.QUERY_RESOLVE})))}captureBegin(){Ge("info","captureBegin"),this.capturedCommandList.get(this.currentSessionId)||this.capturedCommandList.set(this.currentSessionId,[]),this.capturedPendingKernels.get(this.currentSessionId)||this.capturedPendingKernels.set(this.currentSessionId,[]),this.flush(),this.sessionStatus="capturing"}captureEnd(){Ge("info","captureEnd"),this.flush(),this.sessionStatus="default"}replay(){Ge("info","replay"),this.sessionStatus="replaying";let r=this.capturedCommandList.get(this.currentSessionId),t=this.capturedPendingKernels.get(this.currentSessionId),u=r.length;this.pendingKernels=[];for(let s=0;s<u;s++){let f=this.getComputePassEncoder(),m=r[s];this.writeTimestamp(this.pendingDispatchNumber*2),f.setPipeline(m.computePipeline),f.setBindGroup(0,m.bindGroup),f.dispatchWorkgroups(...m.dispatchGroup),this.writeTimestamp(this.pendingDispatchNumber*2+1),this.pendingDispatchNumber++,this.queryType!=="none"&&this.pendingKernels.push(t[s]),(this.pendingDispatchNumber>=this.maxDispatchNumber||this.queryType==="at-passes")&&this.endComputePass(),this.pendingDispatchNumber>=this.maxDispatchNumber&&this.flush()}this.flush(),this.sessionStatus="default"}onReleaseSession(r){this.unregisterBuffers(r),this.capturedCommandList.has(r)&&this.capturedCommandList.delete(r),this.capturedPendingKernels.has(r)&&this.capturedPendingKernels.delete(r),this.gpuDataManager.onReleaseSession(r)}onRunStart(r){this.currentSessionId=r,this.setQueryType()}}});var Hc={};Hn(Hc,{init:()=>a0});var mn,uo,a0,Lc=oe(()=>{"use strict";$e();Gc();Lt();Ee();mn=class e{constructor(r,t,u,s){this.module=r;this.dataType=t;this.data=u;this.dims=s}getFloat32Array(){if(this.dataType!==1)throw new Error("Invalid data type");let r=Q.size(this.dims);return r===0?new Float32Array:new Float32Array(this.module.HEAP8.buffer,this.data,r)}getBigInt64Array(){if(this.dataType!==7)throw new Error("Invalid data type");let r=Q.size(this.dims);return r===0?new BigInt64Array:new BigInt64Array(this.module.HEAP8.buffer,this.data,r)}getInt32Array(){if(this.dataType!==6)throw new Error("Invalid data type");let r=Q.size(this.dims);return r===0?new Int32Array:new Int32Array(this.module.HEAP8.buffer,this.data,r)}reshape(r){if(Q.size(r)!==Q.size(this.dims))throw new Error("Invalid new shape");return new e(this.module,this.dataType,this.data,r)}},uo=class{constructor(r,t,u){this.module=r;this.backend=t;this.customDataOffset=0;this.customDataSize=0;let s=r.HEAPU32,f=u>>>2;this.opKernelContext=s[f++];let m=s[f++];this.outputCount=s[f++],this.customDataOffset=s[f++],this.customDataSize=s[f++];let d=[];for(let y=0;y<m;y++){let w=s[f++],C=s[f++],$=s[f++],T=[];for(let P=0;P<$;P++)T.push(s[f++]);d.push(new mn(r,w,C,T))}this.inputs=d}get kernelCustomData(){return this.backend.currentKernelCustomData}get customDataBuffer(){return this.module.HEAPU8.subarray(this.customDataOffset,this.customDataOffset+this.customDataSize)}compute(r,t){let u=t?.inputs?.map(d=>typeof d=="number"?this.inputs[d]:d)??this.inputs,s=t?.outputs??[],f=(d,y,w)=>new mn(this.module,y,this.output(d,w),w),m=(d,y)=>{let w=ln(d);if(!w)throw new Error(`Unsupported data type: ${d}`);let C=w*Q.size(y);return new mn(this.module,d,this.backend.gpuDataManager.create(C).id,y)};return this.backend.run(r,u,s,f,m)}output(r,t){let u=this.module.stackSave();try{let s=this.module.stackAlloc((1+t.length)*4),f=s>>2;this.module.HEAPU32[f++]=t.length;for(let m=0;m<t.length;m++)this.module.HEAPU32[f++]=t[m];return this.module._JsepOutput(this.opKernelContext,r,s)}catch(s){throw new Error(`Failed to generate kernel\'s output[${r}] with dims [${t}]. If you are running with pre-allocated output, please make sure the output type/dims are correct. Error: ${s}`)}finally{this.module.stackRestore(u)}}},a0=async(e,r,t)=>{let u=e.jsepInit;if(!u)throw new Error("Failed to initialize JSEP. The WebAssembly module is not built with JSEP support.");let s=new wi;await s.initialize(r,t),u(s,f=>s.alloc(f),f=>s.free(f),(f,m,d,y=!1)=>{if(y)Ge("verbose",()=>`[WebGPU] jsepCopyGpuToGpu: src=${f}, dst=${m}, size=${d}`),s.memcpy(f,m);else{Ge("verbose",()=>`[WebGPU] jsepCopyCpuToGpu: dataOffset=${f}, gpuDataId=${m}, size=${d}`);let w=e.HEAPU8.subarray(f>>>0,(f>>>0)+d);s.upload(m,w)}},async(f,m,d)=>{Ge("verbose",()=>`[WebGPU] jsepCopyGpuToCpu: gpuDataId=${f}, dataOffset=${m}, size=${d}`),await s.download(f,()=>e.HEAPU8.subarray(m>>>0,(m>>>0)+d))},(f,m,d)=>s.createKernel(f,m,d,e.UTF8ToString(e._JsepGetNodeName(m))),f=>s.releaseKernel(f),(f,m,d,y)=>{Ge("verbose",()=>`[WebGPU] jsepRun: sessionHandle=${d}, kernel=${f}, contextDataOffset=${m}`);let w=new uo(e,s,m);return s.computeKernel(f,w,y)},()=>s.captureBegin(),()=>s.captureEnd(),()=>s.replay())}});var Qs;Qs=Ns();var vh=Ks(),Pi,Oi=!1,qn=!1,Zs=!1,wh=e=>{if(e===1)return!1;if(typeof SharedArrayBuffer>"u")return typeof self<"u"&&!self.crossOriginIsolated&&console.warn("env.wasm.numThreads is set to "+e+", but this will not work unless you enable crossOriginIsolated mode. See https://web.dev/cross-origin-isolation-guide/ for more info."),!1;typeof process<"u"&&process.versions&&process.versions.node&&console.warn("env.wasm.numThreads is set to "+e+", however, currently onnxruntime-web does not support multi-threads in Node.js. Please consider using onnxruntime-node for performance critical scenarios.");try{return typeof MessageChannel<"u"&&new MessageChannel().port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]))}catch{return!1}},_h=()=>{try{return WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,30,1,28,0,65,0,253,15,253,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,253,186,1,26,11]))}catch{return!1}},$h=(e,r)=>e?r?"ort-wasm-simd-threaded.wasm":"ort-wasm-simd.wasm":r?"ort-wasm-threaded.wasm":"ort-wasm.wasm",Xs=async e=>{if(Oi)return Promise.resolve();if(qn)throw new Error("multiple calls to \'initializeWebAssembly()\' detected.");if(Zs)throw new Error("previous call to \'initializeWebAssembly()\' failed.");qn=!0;let r=e.initTimeout,t=e.numThreads,u=e.simd,s=wh(t),f=u&&_h(),m=e.wasmPaths,d=typeof m=="string"?m:void 0,y=$h(f,s),w=typeof m=="object"?m[y]:void 0,C=!1,$=[];if(r>0&&$.push(new Promise(T=>{setTimeout(()=>{C=!0,T()},r)})),$.push(new Promise((T,P)=>{let I=s?vh:Qs,O={locateFile:(R,z)=>{if(s&&R.endsWith(".worker.js")&&typeof Blob<"u")return URL.createObjectURL(new Blob([Ys()],{type:"text/javascript"}));if(R.endsWith(".wasm")){if(w)return w;let k=d??z;return y==="ort-wasm-simd.wasm"?k+"ort-wasm-simd.jsep.wasm":y==="ort-wasm-simd-threaded.wasm"?k+"ort-wasm-simd-threaded.jsep.wasm":k+y}return z+R}};if(s)if(O.numThreads=t,typeof Blob>"u")O.mainScriptUrlOrBlob=(void 0)(__dirname,"ort-wasm-threaded.js");else{let R=`var ortWasmThreaded=${I.toString()};`;O.mainScriptUrlOrBlob=new Blob([R],{type:"text/javascript"})}I(O).then(R=>{qn=!1,Oi=!0,Pi=R,T()},R=>{qn=!1,Zs=!0,P(R)})})),await Promise.race($),C)throw new Error(`WebAssembly backend initializing failed due to timeout: ${r}ms`)},Ze=()=>{if(Oi&&Pi)return Pi;throw new Error("WebAssembly is not initialized yet.")};var Ke=(e,r)=>{let t=Ze(),u=t.lengthBytesUTF8(e)+1,s=t._malloc(u);return t.stringToUTF8(e,s,u),r.push(s),s},un=(e,r,t,u)=>{if(typeof e=="object"&&e!==null){if(t.has(e))throw new Error("Circular reference in options");t.add(e)}Object.entries(e).forEach(([s,f])=>{let m=r?r+s:s;if(typeof f=="object")un(f,m+".",t,u);else if(typeof f=="string"||typeof f=="number")u(m,f.toString());else if(typeof f=="boolean")u(m,f?"1":"0");else throw new Error(`Can\'t handle extra config type: ${typeof f}`)})},We=e=>{let r=Ze(),t=r.stackSave();try{let u=r.stackAlloc(8);r._OrtGetLastError(u,u+4);let s=r.HEAP32[u/4],f=r.HEAPU32[u/4+1],m=f?r.UTF8ToString(f):"";throw new Error(`${e} ERROR_CODE: ${s}, ERROR_MESSAGE: ${m}`)}finally{r.stackRestore(t)}};var Js=e=>{let r=Ze(),t=0,u=[],s=e||{};try{if(e?.logSeverityLevel===void 0)s.logSeverityLevel=2;else if(typeof e.logSeverityLevel!="number"||!Number.isInteger(e.logSeverityLevel)||e.logSeverityLevel<0||e.logSeverityLevel>4)throw new Error(`log serverity level is not valid: ${e.logSeverityLevel}`);if(e?.logVerbosityLevel===void 0)s.logVerbosityLevel=0;else if(typeof e.logVerbosityLevel!="number"||!Number.isInteger(e.logVerbosityLevel))throw new Error(`log verbosity level is not valid: ${e.logVerbosityLevel}`);e?.terminate===void 0&&(s.terminate=!1);let f=0;return e?.tag!==void 0&&(f=Ke(e.tag,u)),t=r._OrtCreateRunOptions(s.logSeverityLevel,s.logVerbosityLevel,!!s.terminate,f),t===0&&We("Can\'t create run options."),e?.extra!==void 0&&un(e.extra,"",new WeakSet,(m,d)=>{let y=Ke(m,u),w=Ke(d,u);r._OrtAddRunConfigEntry(t,y,w)!==0&&We(`Can\'t set a run config entry: ${m} - ${d}.`)}),[t,u]}catch(f){throw t!==0&&r._OrtReleaseRunOptions(t),u.forEach(m=>r._free(m)),f}};var Ch=e=>{switch(e){case"disabled":return 0;case"basic":return 1;case"extended":return 2;case"all":return 99;default:throw new Error(`unsupported graph optimization level: ${e}`)}},Sh=e=>{switch(e){case"sequential":return 0;case"parallel":return 1;default:throw new Error(`unsupported execution mode: ${e}`)}},xh=e=>{e.extra||(e.extra={}),e.extra.session||(e.extra.session={});let r=e.extra.session;r.use_ort_model_bytes_directly||(r.use_ort_model_bytes_directly="1"),e.executionProviders&&e.executionProviders.some(t=>(typeof t=="string"?t:t.name)==="webgpu")&&(e.enableMemPattern=!1)},Ih=(e,r,t)=>{for(let u of r){let s=typeof u=="string"?u:u.name;switch(s){case"webnn":if(s="WEBNN",typeof u!="string"){let m=u;if(m?.deviceType){let d=Ke("deviceType",t),y=Ke(m.deviceType,t);Ze()._OrtAddSessionConfigEntry(e,d,y)!==0&&We(`Can\'t set a session config entry: \'deviceType\' - ${m.deviceType}.`)}if(m?.numThreads){let d=m.numThreads;(typeof d!="number"||!Number.isInteger(d)||d<0)&&(d=0);let y=Ke("numThreads",t),w=Ke(d.toString(),t);Ze()._OrtAddSessionConfigEntry(e,y,w)!==0&&We(`Can\'t set a session config entry: \'numThreads\' - ${m.numThreads}.`)}if(m?.powerPreference){let d=Ke("powerPreference",t),y=Ke(m.powerPreference,t);Ze()._OrtAddSessionConfigEntry(e,d,y)!==0&&We(`Can\'t set a session config entry: \'powerPreference\' - ${m.powerPreference}.`)}}break;case"webgpu":if(s="JS",typeof u!="string"){let m=u;if(m?.preferredLayout){if(m.preferredLayout!=="NCHW"&&m.preferredLayout!=="NHWC")throw new Error(`preferredLayout must be either \'NCHW\' or \'NHWC\': ${m.preferredLayout}`);let d=Ke("preferredLayout",t),y=Ke(m.preferredLayout,t);Ze()._OrtAddSessionConfigEntry(e,d,y)!==0&&We(`Can\'t set a session config entry: \'preferredLayout\' - ${m.preferredLayout}.`)}}break;case"wasm":case"cpu":continue;default:throw new Error(`not supported execution provider: ${s}`)}let f=Ke(s,t);Ze()._OrtAppendExecutionProvider(e,f)!==0&&We(`Can\'t append execution provider: ${s}.`)}},eu=e=>{let r=Ze(),t=0,u=[],s=e||{};xh(s);try{let f=Ch(s.graphOptimizationLevel??"all"),m=Sh(s.executionMode??"sequential"),d=typeof s.logId=="string"?Ke(s.logId,u):0,y=s.logSeverityLevel??2;if(!Number.isInteger(y)||y<0||y>4)throw new Error(`log serverity level is not valid: ${y}`);let w=s.logVerbosityLevel??0;if(!Number.isInteger(w)||w<0||w>4)throw new Error(`log verbosity level is not valid: ${w}`);let C=typeof s.optimizedModelFilePath=="string"?Ke(s.optimizedModelFilePath,u):0;if(t=r._OrtCreateSessionOptions(f,!!s.enableCpuMemArena,!!s.enableMemPattern,m,!!s.enableProfiling,0,d,y,w,C),t===0&&We("Can\'t create session options."),s.executionProviders&&Ih(t,s.executionProviders,u),s.enableGraphCapture!==void 0){if(typeof s.enableGraphCapture!="boolean")throw new Error(`enableGraphCapture must be a boolean value: ${s.enableGraphCapture}`);let $=Ke("enableGraphCapture",u),T=Ke(s.enableGraphCapture.toString(),u);r._OrtAddSessionConfigEntry(t,$,T)!==0&&We(`Can\'t set a session config entry: \'enableGraphCapture\' - ${s.enableGraphCapture}.`)}if(s.freeDimensionOverrides)for(let[$,T]of Object.entries(s.freeDimensionOverrides)){if(typeof $!="string")throw new Error(`free dimension override name must be a string: ${$}`);if(typeof T!="number"||!Number.isInteger(T)||T<0)throw new Error(`free dimension override value must be a non-negative integer: ${T}`);let P=Ke($,u);r._OrtAddFreeDimensionOverride(t,P,T)!==0&&We(`Can\'t set a free dimension override: ${$} - ${T}.`)}return s.extra!==void 0&&un(s.extra,"",new WeakSet,($,T)=>{let P=Ke($,u),I=Ke(T,u);r._OrtAddSessionConfigEntry(t,P,I)!==0&&We(`Can\'t set a session config entry: ${$} - ${T}.`)}),[t,u]}catch(f){throw t!==0&&r._OrtReleaseSessionOptions(t),u.forEach(m=>r._free(m)),f}};$e();var ru=async e=>{if(typeof e=="string")if(typeof process<"u"&&process.versions&&process.versions.node)try{return new Uint8Array(await(void 0)(e))}catch(r){if(r.code==="ERR_FS_FILE_TOO_LARGE"){let t=(void 0)(e),u=[];for await(let s of t)u.push(s);return new Uint8Array(Buffer.concat(u))}throw r}else{let r=await fetch(e);if(!r.ok)throw new Error(`failed to load external data file: ${e}`);let t=r.headers.get("Content-Length"),u=t?parseInt(t,10):0;if(u<1073741824)return new Uint8Array(await r.arrayBuffer());{if(!r.body)throw new Error(`failed to load external data file: ${e}, no response body.`);let s=r.body.getReader(),f;try{f=new ArrayBuffer(u)}catch(d){if(d instanceof RangeError){let y=Math.ceil(u/65536);f=new WebAssembly.Memory({initial:y,maximum:y}).buffer}else throw d}let m=0;for(;;){let{done:d,value:y}=await s.read();if(d)break;let w=y.byteLength;new Uint8Array(f,m,w).set(y),m+=w}return new Uint8Array(f,0,u)}}else return e instanceof Blob?new Uint8Array(await e.arrayBuffer()):e instanceof Uint8Array?e:new Uint8Array(e)};var s0=(e,r)=>{Ze()._OrtInit(e,r)!==0&&We("Can\'t initialize onnxruntime.")},qc=async e=>{s0(e.wasm.numThreads,dn(e.logLevel))},Kc=async(e,r)=>{if(r==="webgpu"||r==="webnn"){if(typeof navigator>"u"||!navigator.gpu)throw new Error("WebGPU is not supported in current environment");let t=await navigator.gpu.requestAdapter();if(!t)throw new Error(\'Failed to get GPU adapter. You may need to enable flag "--enable-unsafe-webgpu" if you are using Chrome.\');if(!e.wasm.simd)throw new Error("Not supported for WebGPU=ON and SIMD=OFF. Please set `env.wasm.simd` to true when using `webgpu` EP");let u=(Lc(),nr(Hc)).init;await u(Ze(),e,t)}},ur=new Map,u0=e=>{let r=Ze(),t=r.stackSave();try{let u=r.stackAlloc(8);return r._OrtGetInputOutputCount(e,u,u+4)!==0&&We("Can\'t get session input/output count."),[r.HEAP32[u/4],r.HEAP32[u/4+1]]}finally{r.stackRestore(t)}},lo=e=>{let r=Ze(),t=r._malloc(e.byteLength);if(t===0)throw new Error(`Can\'t create a session. failed to allocate a buffer of size ${e.byteLength}.`);return r.HEAPU8.set(e,t),[t,e.byteLength]},Yc=async(e,r)=>{let t,u,s=Ze();Array.isArray(e)?[t,u]=e:e.buffer===s.HEAPU8.buffer?[t,u]=[e.byteOffset,e.byteLength]:[t,u]=lo(e);let f=0,m=0,d=0,y=[],w=[],C=[];try{if([m,y]=eu(r),r?.externalData&&s.mountExternalData){let k=[];for(let G of r.externalData){let U=typeof G=="string"?G:G.path;k.push(ru(typeof G=="string"?G:G.data).then(q=>{s.mountExternalData(U,q)}))}await Promise.all(k)}f=await s._OrtCreateSession(t,u,m),f===0&&We("Can\'t create a session.");let[$,T]=u0(f),P=!!r?.enableGraphCapture,I=[],O=[],R=[];for(let k=0;k<$;k++){let G=s._OrtGetInputName(f,k);G===0&&We("Can\'t get an input name."),w.push(G),I.push(s.UTF8ToString(G))}for(let k=0;k<T;k++){let G=s._OrtGetOutputName(f,k);G===0&&We("Can\'t get an output name."),C.push(G);let U=s.UTF8ToString(G);O.push(U);{if(P&&r?.preferredOutputLocation===void 0){R.push("gpu-buffer");continue}let q=typeof r?.preferredOutputLocation=="string"?r.preferredOutputLocation:r?.preferredOutputLocation?.[U]??"cpu";if(q!=="cpu"&&q!=="cpu-pinned"&&q!=="gpu-buffer")throw new Error(`Not supported preferred output location: ${q}.`);if(P&&q!=="gpu-buffer")throw new Error(`Not supported preferred output location: ${q}. Only \'gpu-buffer\' location is supported when enableGraphCapture is true.`);R.push(q)}}let z=null;return R.some(k=>k==="gpu-buffer")&&(d=s._OrtCreateBinding(f),d===0&&We("Can\'t create IO binding."),z={handle:d,outputPreferredLocations:R,outputPreferredLocationsEncoded:R.map(k=>Ri(k))}),ur.set(f,[f,w,C,z,P,!1]),[f,I,O]}catch($){throw w.forEach(T=>s._OrtFree(T)),C.forEach(T=>s._OrtFree(T)),d!==0&&s._OrtReleaseBinding(d),f!==0&&s._OrtReleaseSession(f),$}finally{s._free(t),m!==0&&s._OrtReleaseSessionOptions(m),y.forEach($=>s._free($)),s.unmountExternalData?.()}},Zc=e=>{let r=Ze(),t=ur.get(e);if(!t)throw new Error(`cannot release session. invalid session id: ${e}`);let[u,s,f,m,d]=t;m&&(d&&r._OrtClearBoundOutputs(m.handle),r._OrtReleaseBinding(m.handle)),r.jsepOnReleaseSession?.(e),s.forEach(y=>r._OrtFree(y)),f.forEach(y=>r._OrtFree(y)),r._OrtReleaseSession(u),ur.delete(e)},Fc=(e,r,t,u,s,f=!1)=>{if(!e){r.push(0);return}let m=Ze(),d=e[0],y=e[1],w=e[3],C,$;if(d==="string"&&w==="gpu-buffer")throw new Error("String tensor is not supported on GPU.");if(f&&w!=="gpu-buffer")throw new Error(`External buffer must be provided for input/output index ${s} when enableGraphCapture is true.`);if(w==="gpu-buffer"){let I=e[2].gpuBuffer,O=ln(ki(d));$=y.reduce((R,z)=>R*z,1)*O,C=m.jsepRegisterBuffer(u,s,I,$)}else{let I=e[2];if(Array.isArray(I)){$=4*I.length,C=m._malloc($),t.push(C);let O=C/4;for(let R=0;R<I.length;R++){if(typeof I[R]!="string")throw new TypeError(`tensor data at index ${R} is not a string`);m.HEAPU32[O++]=Ke(I[R],t)}}else $=I.byteLength,C=m._malloc($),t.push(C),m.HEAPU8.set(new Uint8Array(I.buffer,I.byteOffset,$),C)}let T=m.stackSave(),P=m.stackAlloc(4*y.length);try{let I=P/4;y.forEach(R=>m.HEAP32[I++]=R);let O=m._OrtCreateTensor(ki(d),C,$,P,y.length,Ri(w));O===0&&We(`Can\'t create tensor for input/output. session=${u}, index=${s}.`),r.push(O)}finally{m.stackRestore(T)}},Qc=async(e,r,t,u,s,f)=>{let m=Ze(),d=ur.get(e);if(!d)throw new Error(`cannot run inference. invalid session id: ${e}`);let y=d[0],w=d[1],C=d[2],$=d[3],T=d[4],P=d[5],I=r.length,O=u.length,R=0,z=[],k=[],G=[],U=[],q=m.stackSave(),K=m.stackAlloc(I*4),J=m.stackAlloc(I*4),ie=m.stackAlloc(O*4),ge=m.stackAlloc(O*4);try{[R,z]=Js(f);for(let ye=0;ye<I;ye++)Fc(t[ye],k,U,e,r[ye],T);for(let ye=0;ye<O;ye++)Fc(s[ye],G,U,e,I+u[ye],T);let L=K/4,ue=J/4,je=ie/4,Ve=ge/4;for(let ye=0;ye<I;ye++)m.HEAPU32[L++]=k[ye],m.HEAPU32[ue++]=w[r[ye]];for(let ye=0;ye<O;ye++)m.HEAPU32[je++]=G[ye],m.HEAPU32[Ve++]=C[u[ye]];if($&&!P){let{handle:ye,outputPreferredLocations:Me,outputPreferredLocationsEncoded:xe}=$;if(w.length!==I)throw new Error(`input count from feeds (${I}) is expected to be always equal to model\'s input count (${w.length}).`);for(let _e=0;_e<I;_e++){let Ie=r[_e];await m._OrtBindInput(ye,w[Ie],k[_e])!==0&&We(`Can\'t bind input[${_e}] for session=${e}.`)}for(let _e=0;_e<O;_e++){let Ie=u[_e];s[_e]?.[3]?m._OrtBindOutput(ye,C[Ie],G[_e],0)!==0&&We(`Can\'t bind pre-allocated output[${_e}] for session=${e}.`):m._OrtBindOutput(ye,C[Ie],0,xe[Ie])!==0&&We(`Can\'t bind output[${_e}] to ${Me[_e]} for session=${e}.`)}ur.set(e,[y,w,C,$,T,!0])}m.jsepOnRunStart?.(y);let Ce;$?Ce=await m._OrtRunWithBinding(y,$.handle,O,ie,R):Ce=await m._OrtRun(y,J,K,I,ge,O,ie,R),Ce!==0&&We("failed to call OrtRun().");let ae=[];for(let ye=0;ye<O;ye++){let Me=m.HEAPU32[ie/4+ye];if(Me===G[ye]){ae.push(s[ye]);continue}let xe=m.stackSave(),_e=m.stackAlloc(4*4),Ie=!1,Pe,De=0;try{m._OrtGetTensorData(Me,_e,_e+4,_e+8,_e+12)!==0&&We(`Can\'t access output tensor data on index ${ye}.`);let te=_e/4,fe=m.HEAPU32[te++];De=m.HEAPU32[te++];let Se=m.HEAPU32[te++],st=m.HEAPU32[te++],tt=[];for(let Fe=0;Fe<st;Fe++)tt.push(m.HEAPU32[Se/4+Fe]);m._OrtFree(Se);let lt=tt.reduce((Fe,Qe)=>Fe*Qe,1);Pe=Ht(fe);let It=$?.outputPreferredLocations[u[ye]];if(Pe==="string"){if(It==="gpu-buffer")throw new Error("String tensor is not supported on GPU.");let Fe=[],Qe=De/4;for(let pt=0;pt<lt;pt++){let At=m.HEAPU32[Qe++],Vt=pt===lt-1?void 0:m.HEAPU32[Qe]-At;Fe.push(m.UTF8ToString(At,Vt))}ae.push([Pe,tt,Fe,"cpu"])}else if(It==="gpu-buffer"&&lt>0){let Fe=m.jsepGetBuffer(De),Qe=ln(fe);if(Qe===void 0||!tu(Pe))throw new Error(`Unsupported data type: ${Pe}`);Ie=!0,ae.push([Pe,tt,{gpuBuffer:Fe,download:m.jsepCreateDownloader(Fe,lt*Qe,Pe),dispose:()=>{m._OrtReleaseTensor(Me)}},"gpu-buffer"])}else{let Fe=Kn(Pe),Qe=new Fe(lt);new Uint8Array(Qe.buffer,Qe.byteOffset,Qe.byteLength).set(m.HEAPU8.subarray(De,De+Qe.byteLength)),ae.push([Pe,tt,Qe,"cpu"])}}finally{m.stackRestore(xe),Pe==="string"&&De&&m._free(De),Ie||m._OrtReleaseTensor(Me)}}return $&&!T&&(m._OrtClearBoundOutputs($.handle),ur.set(e,[y,w,C,$,T,!1])),ae}finally{m.stackRestore(q),k.forEach(L=>m._OrtReleaseTensor(L)),G.forEach(L=>m._OrtReleaseTensor(L)),U.forEach(L=>m._free(L)),R!==0&&m._OrtReleaseRunOptions(R),z.forEach(L=>m._free(L))}},Xc=e=>{let r=Ze(),t=ur.get(e);if(!t)throw new Error("invalid session id");let u=t[0],s=r._OrtEndProfiling(u);s===0&&We("Can\'t get an profile file name."),r._OrtFree(s)},Jc=e=>{let r=[];for(let t of e){let u=t[2];!Array.isArray(u)&&"buffer"in u&&r.push(u.buffer)}return r};self.onmessage=e=>{let{type:r,in:t}=e.data;try{switch(r){case"init-wasm":Xs(t.wasm).then(()=>{qc(t).then(()=>{postMessage({type:r})},u=>{postMessage({type:r,err:u})})},u=>{postMessage({type:r,err:u})});break;case"init-ep":{let{epName:u,env:s}=t;Kc(s,u).then(()=>{postMessage({type:r})},f=>{postMessage({type:r,err:f})});break}case"copy-from":{let{buffer:u}=t,s=lo(u);postMessage({type:r,out:s});break}case"create":{let{model:u,options:s}=t;Yc(u,s).then(f=>{postMessage({type:r,out:f})},f=>{postMessage({type:r,err:f})});break}case"release":Zc(t),postMessage({type:r});break;case"run":{let{sessionId:u,inputIndices:s,inputs:f,outputIndices:m,options:d}=t;Qc(u,s,f,m,new Array(m.length).fill(null),d).then(y=>{y.some(w=>w[3]!=="cpu")?postMessage({type:r,err:"Proxy does not support non-cpu tensor location."}):postMessage({type:r,out:y},Jc(y))},y=>{postMessage({type:r,err:y})});break}case"end-profiling":Xc(t),postMessage({type:r});break;default:}}catch(u){postMessage({type:r,err:u})}};})();\n/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n'})),vu=j((()=>{se(),yu(),Mo(),Kl=()=>!!d.wasm.proxy&&typeof document<"u",Ql=!1,Xl=!1,Zl=!1,eu=new Map,tu=(e,t)=>{let n=eu.get(e);n?n.push(t):eu.set(e,[t])},nu=()=>{if(Ql||!Xl||Zl||!Yl)throw new Error("worker not ready")},ru=e=>{switch(e.data.type){case"init-wasm":Ql=!1,e.data.err?(Zl=!0,Jl[1](e.data.err)):(Xl=!0,Jl[0]());break;case"init-ep":case"copy-from":case"create":case"release":case"run":case"end-profiling":{let t=eu.get(e.data.type);e.data.err?t.shift()[1](e.data.err):t.shift()[0](e.data.out);break}}},iu=typeof document<"u"?document?.currentScript?.src:void 0,au=async()=>{if(!Xl){if(Ql)throw new Error("multiple calls to 'initWasm()' detected.");if(Zl)throw new Error("previous call to 'initWasm()' failed.");if(Ql=!0,Kl())return void 0===d.wasm.wasmPaths&&iu&&0!==iu.indexOf("blob:")&&(d.wasm.wasmPaths=iu.substr(0,+iu.lastIndexOf("/")+1)),new Promise(((e,t)=>{Yl?.terminate();let n=URL.createObjectURL(new Blob([wu()],{type:"text/javascript"}));(Yl=new Worker(n,{name:"ort-wasm-proxy-worker"})).onerror=e=>t(e),Yl.onmessage=ru,URL.revokeObjectURL(n),Jl=[e,t];let r={type:"init-wasm",in:d};Yl.postMessage(r)}));try{await Ee(d.wasm),await Fl(d),Xl=!0}catch(e){throw Zl=!0,e}finally{Ql=!1}}},su=async e=>{if(Kl())return nu(),new Promise(((t,n)=>{tu("init-ep",[t,n]);let r={type:"init-ep",in:{epName:e,env:d}};Yl.postMessage(r)}));await jl(d,e)},ou=async e=>Kl()?(nu(),new Promise(((t,n)=>{tu("copy-from",[t,n]);let r={type:"copy-from",in:{buffer:e}};Yl.postMessage(r,[e.buffer])}))):Nl(e),lu=async(e,t)=>{if(Kl()){if(t?.preferredOutputLocation)throw new Error('session option "preferredOutputLocation" is not supported for proxy.');return nu(),new Promise(((n,r)=>{tu("create",[n,r]);let i={type:"create",in:{model:e,options:t}},a=[];e instanceof Uint8Array&&a.push(e.buffer),Yl.postMessage(i,a)}))}return Wl(e,t)},uu=async e=>{if(Kl())return nu(),new Promise(((t,n)=>{tu("release",[t,n]);let r={type:"release",in:e};Yl.postMessage(r)}));Ul(e)},du=async(e,t,n,r,i,a)=>{if(Kl()){if(n.some((e=>"cpu"!==e[3])))throw new Error("input tensor on GPU is not supported for proxy.");if(i.some((e=>e)))throw new Error("pre-allocated output tensor is not supported for proxy.");return nu(),new Promise(((i,s)=>{tu("run",[i,s]);let o=n,l={type:"run",in:{sessionId:e,inputIndices:t,inputs:o,outputIndices:r,options:a}};Yl.postMessage(l,Hl(o))}))}return Gl(e,t,n,r,i,a)},cu=async e=>{if(Kl())return nu(),new Promise(((t,n)=>{tu("end-profiling",[t,n]);let r={type:"end-profiling",in:e};Yl.postMessage(r)}));ql(e)}})),bu=j((()=>{se(),vu(),Io(),Po(),hu=(e,t)=>{switch(e.location){case"cpu":return[e.type,e.dims,e.data,"cpu"];case"gpu-buffer":return[e.type,e.dims,{gpuBuffer:e.gpuBuffer},"gpu-buffer"];default:throw new Error(`invalid data location: ${e.location} for ${t()}`)}},pu=e=>{switch(e[3]){case"cpu":return new T(e[0],e[2],e[1]);case"gpu-buffer":{let t=e[0];if(!Ge(t))throw new Error(`not supported data type: ${t} for deserializing GPU tensor`);let{gpuBuffer:n,download:r,dispose:i}=e[2];return T.fromGpuBuffer(n,{dataType:t,dims:e[1],download:r,dispose:i})}default:throw new Error(`invalid data location: ${e[3]}`)}},fu=class{async fetchModelAndCopyToWasmMemory(e){return ou(await He(e))}async loadModel(e,t){let n;k(),n="string"==typeof e?typeof process<"u"&&process.versions&&process.versions.node?await He(e):await this.fetchModelAndCopyToWasmMemory(e):e,[this.sessionId,this.inputNames,this.outputNames]=await lu(n,t),E()}async dispose(){return uu(this.sessionId)}async run(e,t,n){k();let r=[],i=[];Object.entries(e).forEach((e=>{let t=e[0],n=e[1],a=this.inputNames.indexOf(t);if(-1===a)throw new Error(`invalid input '${t}'`);r.push(n),i.push(a)}));let a=[],s=[];Object.entries(t).forEach((e=>{let t=e[0],n=e[1],r=this.outputNames.indexOf(t);if(-1===r)throw new Error(`invalid output '${t}'`);a.push(n),s.push(r)}));let o=r.map(((e,t)=>hu(e,(()=>`input "${this.inputNames[i[t]]}"`)))),l=a.map(((e,t)=>e?hu(e,(()=>`output "${this.outputNames[s[t]]}"`)):null)),u=await du(this.sessionId,i,o,s,l,n),d={};for(let e=0;e<u.length;e++)d[this.outputNames[s[e]]]=a[e]??pu(u[e]);return E(),d}startProfiling(){}endProfiling(){cu(this.sessionId)}}})),$u=j((()=>{se(),vu(),bu(),mu=()=>{if(("number"!=typeof d.wasm.initTimeout||d.wasm.initTimeout<0)&&(d.wasm.initTimeout=0),"boolean"!=typeof d.wasm.simd&&(d.wasm.simd=!0),"boolean"!=typeof d.wasm.proxy&&(d.wasm.proxy=!1),"boolean"!=typeof d.wasm.trace&&(d.wasm.trace=!1),"number"!=typeof d.wasm.numThreads||!Number.isInteger(d.wasm.numThreads)||d.wasm.numThreads<=0){(typeof self<"u"&&!self.crossOriginIsolated||typeof process<"u"&&process.versions&&process.versions.node)&&(d.wasm.numThreads=1);let e=typeof navigator>"u"?(void 0)().length:navigator.hardwareConcurrency;d.wasm.numThreads=Math.min(4,Math.ceil((e||1)/2))}},gu=class{async init(e){mu(),await au(),await su(e)}async createInferenceSessionHandler(e,t){let n=new fu;return await n.loadModel(e,t),Promise.resolve(n)}}})),xu={};L(xu,{wasmBackend:()=>Cu});var Cu,Tu=j((()=>{$u(),Cu=new gu}));se(),se(),se();var Su=ae;{let e=(Tu(),N(xu)).wasmBackend;a("webgpu",e,5),a("webnn",e,5),a("cpu",e,10),a("wasm",e,10)}Object.defineProperty(d.versions,"web",{value:"1.18.0",enumerable:!0})}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */,"./node_modules/@huggingface/jinja/dist/index.js":
/*!*******************************************************!*\
  !*** ./node_modules/@huggingface/jinja/dist/index.js ***!
  \*******************************************************/(e,t,n)=>{n.r(t),n.d(t,{Environment:()=>D,Interpreter:()=>L,Template:()=>W,parse:()=>k,tokenize:()=>d});var r=Object.freeze({Text:"Text",NumericLiteral:"NumericLiteral",BooleanLiteral:"BooleanLiteral",StringLiteral:"StringLiteral",Identifier:"Identifier",Equals:"Equals",OpenParen:"OpenParen",CloseParen:"CloseParen",OpenStatement:"OpenStatement",CloseStatement:"CloseStatement",OpenExpression:"OpenExpression",CloseExpression:"CloseExpression",OpenSquareBracket:"OpenSquareBracket",CloseSquareBracket:"CloseSquareBracket",Comma:"Comma",Dot:"Dot",Colon:"Colon",Pipe:"Pipe",CallOperator:"CallOperator",AdditiveBinaryOperator:"AdditiveBinaryOperator",MultiplicativeBinaryOperator:"MultiplicativeBinaryOperator",ComparisonBinaryOperator:"ComparisonBinaryOperator",UnaryOperator:"UnaryOperator",Set:"Set",If:"If",For:"For",In:"In",NotIn:"NotIn",Else:"Else",EndIf:"EndIf",ElseIf:"ElseIf",EndFor:"EndFor",And:"And",Or:"Or",Not:"UnaryOperator"}),i=Object.freeze({set:r.Set,for:r.For,in:r.In,if:r.If,else:r.Else,endif:r.EndIf,elif:r.ElseIf,endfor:r.EndFor,and:r.And,or:r.Or,not:r.Not,"not in":r.NotIn,true:r.BooleanLiteral,false:r.BooleanLiteral}),a=class{constructor(e,t){this.value=e,this.type=t}};function s(e){return/\w/.test(e)}function o(e){return/[0-9]/.test(e)}var l=[["{%",r.OpenStatement],["%}",r.CloseStatement],["{{",r.OpenExpression],["}}",r.CloseExpression],["(",r.OpenParen],[")",r.CloseParen],["[",r.OpenSquareBracket],["]",r.CloseSquareBracket],[",",r.Comma],[".",r.Dot],[":",r.Colon],["|",r.Pipe],["<=",r.ComparisonBinaryOperator],[">=",r.ComparisonBinaryOperator],["==",r.ComparisonBinaryOperator],["!=",r.ComparisonBinaryOperator],["<",r.ComparisonBinaryOperator],[">",r.ComparisonBinaryOperator],["+",r.AdditiveBinaryOperator],["-",r.AdditiveBinaryOperator],["*",r.MultiplicativeBinaryOperator],["/",r.MultiplicativeBinaryOperator],["%",r.MultiplicativeBinaryOperator],["=",r.Equals]],u=new Map([["n","\n"],["t","\t"],["r","\r"],["b","\b"],["f","\f"],["v","\v"],["'","'"],['"','"'],["\\","\\"]]);function d(e){const t=[],n=e;let d=0;const c=e=>{let t="";for(;e(n[d]);)if("\\"!==n[d]){if(t+=n[d++],d>=n.length)throw new SyntaxError("Unexpected end of input")}else{if(++d,d>=n.length)throw new SyntaxError("Unexpected end of input");const e=n[d++],r=u.get(e);if(void 0===r)throw new SyntaxError(`Unexpected escaped character: ${e}`);t+=r}return t};e:for(;d<n.length;){const e=t.at(-1)?.type;if(void 0===e||e===r.CloseStatement||e===r.CloseExpression){let e="";for(;d<n.length&&("{"!==n[d]||"%"!==n[d+1]&&"{"!==n[d+1]);)e+=n[d++];if(e.length>0){t.push(new a(e,r.Text));continue}}c((e=>/\s/.test(e)));const u=n[d];if("-"===u||"+"===u){const e=t.at(-1)?.type;if(e===r.Text||void 0===e)throw new SyntaxError(`Unexpected character: ${u}`);switch(e){case r.Identifier:case r.NumericLiteral:case r.BooleanLiteral:case r.StringLiteral:case r.CloseParen:case r.CloseSquareBracket:break;default:{++d;const e=c(o);t.push(new a(`${u}${e}`,e.length>0?r.NumericLiteral:r.UnaryOperator));continue}}}for(const[e,r]of l){if(n.slice(d,d+e.length)===e){t.push(new a(e,r)),d+=e.length;continue e}}if("'"!==u)if(o(u)){const e=c(o);t.push(new a(e,r.NumericLiteral))}else{if(!s(u))throw new SyntaxError(`Unexpected character: ${u}`);{const e=c(s),n=Object.hasOwn(i,e)?i[e]:r.Identifier;n===r.In&&t.at(-1)?.type===r.Not?(t.pop(),t.push(new a("not in",r.NotIn))):t.push(new a(e,n))}}else{++d;const e=c((e=>"'"!==e));t.push(new a(e,r.StringLiteral)),++d}}return t}var c=class{type="Statement"},h=class extends c{constructor(e){super(),this.body=e}type="Program"},p=class extends c{constructor(e,t,n){super(),this.test=e,this.body=t,this.alternate=n}type="If"},f=class extends c{constructor(e,t,n){super(),this.loopvar=e,this.iterable=t,this.body=n}type="For"},m=class extends c{constructor(e,t){super(),this.assignee=e,this.value=t}type="Set"},g=class extends c{type="Expression"},_=class extends g{constructor(e,t,n){super(),this.object=e,this.property=t,this.computed=n}type="MemberExpression"},y=class extends g{constructor(e,t){super(),this.callee=e,this.args=t}type="CallExpression"},w=class extends g{constructor(e){super(),this.value=e}type="Identifier"},v=class extends g{constructor(e){super(),this.value=e}type="Literal"},b=class extends v{type="NumericLiteral"},$=class extends v{type="StringLiteral";constructor(e){super(e)}},x=class extends v{type="BooleanLiteral"},C=class extends g{constructor(e,t,n){super(),this.operator=e,this.left=t,this.right=n}type="BinaryExpression"},T=class extends g{constructor(e,t){super(),this.operand=e,this.filter=t}type="FilterExpression"},S=class extends g{constructor(e,t){super(),this.operator=e,this.argument=t}type="UnaryExpression"},M=class extends g{constructor(e=void 0,t=void 0,n=void 0){super(),this.start=e,this.stop=t,this.step=n}type="SliceExpression"};function k(e){const t=new h([]);let n=0;function i(t,r){const i=e[n++];if(!i||i.type!==t)throw new Error(`Parser Error: ${r}. ${i.type} !== ${t}.`);return i}function a(){switch(e[n].type){case r.Text:return new $(i(r.Text,"Expected text token").value);case r.OpenStatement:return function(){let t;switch(i(r.OpenStatement,"Expected opening statement token"),e[n].type){case r.Set:++n,t=l(),i(r.CloseStatement,"Expected closing statement token");break;case r.If:++n,t=u(),i(r.OpenStatement,"Expected {% token"),i(r.EndIf,"Expected endif token"),i(r.CloseStatement,"Expected %} token");break;case r.For:++n,t=function(){const e=O();if(!(e instanceof w))throw new SyntaxError("Expected identifier for the loop variable");i(r.In,"Expected `in` keyword following loop variable");const t=d();i(r.CloseStatement,"Expected closing statement token");const n=[];for(;s(r.OpenStatement,r.EndFor);)n.push(a());return new f(e,t,n)}(),i(r.OpenStatement,"Expected {% token"),i(r.EndFor,"Expected endfor token"),i(r.CloseStatement,"Expected %} token");break;default:throw new SyntaxError(`Unknown statement type: ${e[n].type}`)}return t}();case r.OpenExpression:return function(){i(r.OpenExpression,"Expected opening expression token");const e=d();return i(r.CloseExpression,"Expected closing expression token"),e}();default:throw new SyntaxError(`Unexpected token type: ${e[n].type}`)}}function s(...t){return n+t.length<=e.length&&t.some(((t,r)=>t!==e[n+r].type))}function o(...t){return n+t.length<=e.length&&t.every(((t,r)=>t===e[n+r].type))}function l(){const e=d();if(o(r.Equals)){++n;const t=l();return new m(e,t)}return e}function u(){const t=d();i(r.CloseStatement,"Expected closing statement token");const s=[],l=[];for(;e[n]?.type!==r.OpenStatement||e[n+1]?.type!==r.ElseIf&&e[n+1]?.type!==r.Else&&e[n+1]?.type!==r.EndIf;)s.push(a());if(e[n]?.type===r.OpenStatement&&e[n+1]?.type!==r.EndIf)if(++n,o(r.ElseIf))i(r.ElseIf,"Expected elseif token"),l.push(u());else for(i(r.Else,"Expected else token"),i(r.CloseStatement,"Expected closing statement token");e[n]?.type!==r.OpenStatement||e[n+1]?.type!==r.EndIf;)l.push(a());return new p(t,s,l)}function d(){return function(){let t=c();for(;o(r.Or);){const r=e[n];++n;const i=c();t=new C(r,t,i)}return t}()}function c(){let t=g();for(;o(r.And);){const r=e[n];++n;const i=g();t=new C(r,t,i)}return t}function g(){let t;for(;o(r.Not);){const r=e[n];++n;const i=g();t=new S(r,i)}return t??function(){let t=v();for(;o(r.ComparisonBinaryOperator)||o(r.In)||o(r.NotIn);){const r=e[n];++n;const i=v();t=new C(r,t,i)}return t}()}function v(){let t=I();for(;o(r.AdditiveBinaryOperator);){const r=e[n];++n;const i=I();t=new C(r,t,i)}return t}function k(){const t=function(){let t=O();for(;o(r.Dot)||o(r.OpenSquareBracket);){const a=e[n];let s;++n;const o=a.type!==r.Dot;if(o)s=A(),i(r.CloseSquareBracket,"Expected closing square bracket");else if(s=O(),"Identifier"!==s.type)throw new SyntaxError("Expected identifier following dot operator");t=new _(t,s,o)}return t}();return o(r.OpenParen)?E(t):t}function E(e){let t=new y(e,function(){i(r.OpenParen,"Expected opening parenthesis for arguments list");const e=o(r.CloseParen)?[]:function(){const e=[d()];for(;o(r.Comma);)++n,e.push(d());return e}();return i(r.CloseParen,"Expected closing parenthesis for arguments list"),e}());return o(r.OpenParen)&&(t=E(t)),t}function A(){const e=[];let t=!1;for(;!o(r.CloseSquareBracket);)o(r.Colon)?(e.push(void 0),++n,t=!0):(e.push(d()),o(r.Colon)&&(++n,t=!0));if(0===e.length)throw new SyntaxError("Expected at least one argument for member/slice expression");if(t){if(e.length>3)throw new SyntaxError("Expected 0-3 arguments for slice expression");return new M(...e)}return e[0]}function I(){let t=P();for(;o(r.MultiplicativeBinaryOperator);){const r=e[n];++n;const i=P();t=new C(r,t,i)}return t}function P(){let e=k();for(;o(r.Pipe);){++n;const t=O();if(!(t instanceof w))throw new SyntaxError("Expected identifier for the filter");e=new T(e,t)}return e}function O(){const t=e[n];switch(t.type){case r.NumericLiteral:return++n,new b(Number(t.value));case r.StringLiteral:return++n,new $(t.value);case r.BooleanLiteral:return++n,new x("true"===t.value);case r.Identifier:return++n,new w(t.value);case r.OpenParen:{++n;const t=d();if(e[n].type!==r.CloseParen)throw new SyntaxError("Expected closing parenthesis");return++n,t}default:throw new SyntaxError(`Unexpected token: ${t.type}`)}}for(;n<e.length;)t.body.push(a());return t}function E(e,t,n,r=1){const i=Math.sign(r);i>=0?(t=(t??=0)<0?Math.max(e.length+t,0):Math.min(t,e.length),n=(n??=e.length)<0?Math.max(e.length+n,0):Math.min(n,e.length)):(t=(t??=e.length-1)<0?Math.max(e.length+t,-1):Math.min(t,e.length-1),n=(n??=-1)<-1?Math.max(e.length+n,-1):Math.min(n,e.length-1));const a=[];for(let s=t;i*s<i*n;s+=r)a.push(e[s]);return a}var A=class{type="RuntimeValue";value;builtins=new Map;constructor(e=void 0){this.value=e}__bool__(){return new O(!!this.value)}},I=class extends A{type="NumericValue"},P=class extends A{type="StringValue";builtins=new Map([["upper",new R((()=>new P(this.value.toUpperCase())))],["lower",new R((()=>new P(this.value.toLowerCase())))],["strip",new R((()=>new P(this.value.trim())))],["length",new I(this.value.length)]])},O=class extends A{type="BooleanValue"},z=class extends A{type="ObjectValue";__bool__(){return new O(this.value.size>0)}},B=class extends A{type="ArrayValue";builtins=new Map([["length",new I(this.value.length)]]);__bool__(){return new O(this.value.length>0)}},R=class extends A{type="FunctionValue"},F=class extends A{type="NullValue"},j=class extends A{type="UndefinedValue"},D=class{constructor(e){this.parent=e}variables=new Map;set(e,t){return this.declareVariable(e,N(t))}declareVariable(e,t){if(this.variables.has(e))throw new SyntaxError(`Variable already declared: ${e}`);return this.variables.set(e,t),t}setVariable(e,t){let n;try{n=this.resolve(e)}catch{}return(n??this).variables.set(e,t),t}resolve(e){if(this.variables.has(e))return this;if(this.parent)return this.parent.resolve(e);throw new Error(`Unknown variable: ${e}`)}lookupVariable(e){return this.resolve(e).variables.get(e)??new F}},L=class{global;constructor(e){this.global=e??new D}run(e){return this.evaluate(e,this.global)}evaluateBinaryExpression(e,t){const n=this.evaluate(e.left,t),r=this.evaluate(e.right,t);switch(e.operator.value){case"==":return new O(n.value==r.value);case"!=":return new O(n.value!=r.value);case"and":return n.__bool__().value?r:n;case"or":return n.__bool__().value?n:r}if(n instanceof j||r instanceof j)throw new Error("Cannot perform operation on undefined values");if(n instanceof F||r instanceof F)throw new Error("Cannot perform operation on null values");if(n instanceof I&&r instanceof I)switch(e.operator.value){case"+":return new I(n.value+r.value);case"-":return new I(n.value-r.value);case"*":return new I(n.value*r.value);case"/":return new I(n.value/r.value);case"%":return new I(n.value%r.value);case"<":return new O(n.value<r.value);case">":return new O(n.value>r.value);case">=":return new O(n.value>=r.value);case"<=":return new O(n.value<=r.value)}else if(r instanceof B){const t=void 0!==r.value.find((e=>e.value===n.value));switch(e.operator.value){case"in":return new O(t);case"not in":return new O(!t)}}if((n instanceof P||r instanceof P)&&"+"===e.operator.value)return new P(n.value.toString()+r.value.toString());if(n instanceof P&&r instanceof P)switch(e.operator.value){case"in":return new O(r.value.includes(n.value));case"not in":return new O(!r.value.includes(n.value))}throw new SyntaxError(`Unknown operator "${e.operator.value}" between ${n.type} and ${r.type}`)}evaluateFilterExpression(e,t){const n=this.evaluate(e.operand,t);if(n instanceof B)switch(e.filter.value){case"first":return n.value[0];case"last":return n.value[n.value.length-1];case"length":return new I(n.value.length);case"reverse":return new B(n.value.reverse());case"sort":return new B(n.value.sort(((e,t)=>{if(e.type!==t.type)throw new Error(`Cannot compare different types: ${e.type} and ${t.type}`);switch(e.type){case"NumericValue":return e.value-t.value;case"StringValue":return e.value.localeCompare(t.value);default:throw new Error(`Cannot compare type: ${e.type}`)}})));default:throw new Error(`Unknown filter: ${e.filter.value}`)}throw new Error(`Cannot apply filter to type: ${n.type}`)}evaluateUnaryExpression(e,t){const n=this.evaluate(e.argument,t);if("not"===e.operator.value)return new O(!n.value);throw new SyntaxError(`Unknown operator: ${e.operator.value}`)}evalProgram(e,t){return this.evaluateBlock(e.body,t)}evaluateBlock(e,t){let n="";for(const r of e){const e=this.evaluate(r,t);"NullValue"!==e.type&&(n+=e.value)}return n=n.replace(/^\n/,""),new P(n)}evaluateIdentifier(e,t){return t.lookupVariable(e.value)}evaluateCallExpression(e,t){const n=e.args.map((e=>this.evaluate(e,t))),r=this.evaluate(e.callee,t);if("FunctionValue"!==r.type)throw new Error(`Cannot call something that is not a function: got ${r.type}`);return r.value(n,t)}evaluateSliceExpression(e,t,n){if(!(e instanceof B||e instanceof P))throw new Error("Slice object must be an array or string");const r=this.evaluate(t.start,n),i=this.evaluate(t.stop,n),a=this.evaluate(t.step,n);if(!(r instanceof I||r instanceof j))throw new Error("Slice start must be numeric or undefined");if(!(i instanceof I||i instanceof j))throw new Error("Slice stop must be numeric or undefined");if(!(a instanceof I||a instanceof j))throw new Error("Slice step must be numeric or undefined");return e instanceof B?new B(E(e.value,r.value,i.value,a.value)):new P(E(Array.from(e.value),r.value,i.value,a.value).join(""))}evaluateMemberExpression(e,t){const n=this.evaluate(e.object,t);let r,i;if(e.computed){if("SliceExpression"===e.property.type)return this.evaluateSliceExpression(n,e.property,t);r=this.evaluate(e.property,t)}else r=new P(e.property.value);if(n instanceof z){if(!(r instanceof P))throw new Error(`Cannot access property with non-string: got ${r.type}`);i=n.value.get(r.value)??n.builtins.get(r.value)}else if(n instanceof B||n instanceof P)if(r instanceof I)i=n.value.at(r.value),n instanceof P&&(i=new P(n.value.at(r.value)));else{if(!(r instanceof P))throw new Error(`Cannot access property with non-string/non-number: got ${r.type}`);i=n.builtins.get(r.value)}else{if(!(r instanceof P))throw new Error(`Cannot access property with non-string: got ${r.type}`);i=n.builtins.get(r.value)}if(!(i instanceof A))throw new Error(`${n.type} has no property '${r.value}'`);return i}evaluateSet(e,t){if("Identifier"!==e.assignee.type)throw new Error(`Invalid LHS inside assignment expression: ${JSON.stringify(e.assignee)}`);const n=e.assignee.value;return t.setVariable(n,this.evaluate(e.value,t)),new F}evaluateIf(e,t){const n=this.evaluate(e.test,t);return this.evaluateBlock(n.__bool__().value?e.body:e.alternate,t)}evaluateFor(e,t){const n=new D(t),r=this.evaluate(e.iterable,n);if(!(r instanceof B))throw new Error(`Expected iterable type in for loop: got ${r.type}`);let i="";for(let t=0;t<r.value.length;++t){n.setVariable("loop",new z(new Map([["index",new I(t+1)],["index0",new I(t)],["first",new O(0===t)],["last",new O(t===r.value.length-1)],["length",new I(r.value.length)]].map((([e,t])=>[e,t]))))),n.setVariable(e.loopvar.value,r.value[t]);i+=this.evaluateBlock(e.body,n).value}return new P(i)}evaluate(e,t){if(void 0===e)return new j;switch(e.type){case"Program":return this.evalProgram(e,t);case"Set":return this.evaluateSet(e,t);case"If":return this.evaluateIf(e,t);case"For":return this.evaluateFor(e,t);case"NumericLiteral":return new I(Number(e.value));case"StringLiteral":return new P(e.value);case"BooleanLiteral":return new O(e.value);case"Identifier":return this.evaluateIdentifier(e,t);case"CallExpression":return this.evaluateCallExpression(e,t);case"MemberExpression":return this.evaluateMemberExpression(e,t);case"UnaryExpression":return this.evaluateUnaryExpression(e,t);case"BinaryExpression":return this.evaluateBinaryExpression(e,t);case"FilterExpression":return this.evaluateFilterExpression(e,t);default:throw new SyntaxError(`Unknown node type: ${e.type}`)}}};function N(e){switch(typeof e){case"number":return new I(e);case"string":return new P(e);case"boolean":return new O(e);case"object":return null===e?new F:Array.isArray(e)?new B(e.map(N)):new z(new Map(Object.entries(e).map((([e,t])=>[e,N(t)]))));case"function":return new R(((t,n)=>N(e(...t.map((e=>e.value)))??null)));default:throw new Error(`Cannot convert to runtime value: ${e}`)}}var W=class{parsed;constructor(e){const t=d(e=e.replace(/%}\s+{%/g,"%}{%"));this.parsed=k(t)}render(e){const t=new D;t.set("false",!1),t.set("true",!0),t.set("raise_exception",(e=>{throw new Error(e)}));for(const[n,r]of Object.entries(e))t.set(n,r);return new L(t).run(this.parsed).value}}},"./src/backends/onnx.js":
/*!******************************!*\
  !*** ./src/backends/onnx.js ***!
  \******************************/(e,t,n)=>{var r;n.r(t),n.d(t,{ONNX:()=>s,executionProviders:()=>o});var i=n(/*! onnxruntime-node */"?2ce3"),a=n(/*! onnxruntime-web/webgpu */"../../../../../home/gs/onnxruntime/js/web/dist/esm/ort.webgpu.min.js");let s;const o=["wasm"];if("undefined"!=typeof process&&"node"===process?.release?.name)s=i??(r||(r=n.t(i,2))),o.unshift("cpu");else{s=a.default??a;"undefined"!=typeof navigator&&/iP(hone|od|ad).+16_4.+AppleWebKit/.test(navigator.userAgent)&&(s.env.wasm.simd=!1)}},"./src/configs.js":
/*!************************!*\
  !*** ./src/configs.js ***!
  \************************/(e,t,n)=>{n.r(t),n.d(t,{AutoConfig:()=>a,PretrainedConfig:()=>i});var r=n(/*! ./utils/hub.js */"./src/utils/hub.js");class i{constructor(e){this.model_type=null,this.is_encoder_decoder=!1,Object.assign(this,e)}static async from_pretrained(e,{progress_callback:t=null,config:n=null,cache_dir:i=null,local_files_only:a=!1,revision:s="main"}={}){let o=n??await async function(e,t){return await(0,r.getModelJSON)(e,"config.json",!0,t)}(e,{progress_callback:t,config:n,cache_dir:i,local_files_only:a,revision:s});return new this(o)}}class a{static async from_pretrained(...e){return i.from_pretrained(...e)}}},"./src/env.js":
/*!********************!*\
  !*** ./src/env.js ***!
  \********************/(e,t,n)=>{n.r(t),n.d(t,{env:()=>_});var r=n(/*! fs */"?569f"),i=n(/*! path */"?3f59"),a=n(/*! url */"?154a"),s=n(/*! ./backends/onnx.js */"./src/backends/onnx.js");const{env:o}=s.ONNX,l="2.15.0",u="undefined"!=typeof self&&"caches"in self,d=!y(r),c=!y(i),h=d&&c,p=h?i.dirname(i.dirname(a.fileURLToPath("file:///mnt/sdb/home/tf/transformers.js/src/env.js"))):"./",f=h?i.join(p,"/.cache/"):null,m="/models/",g=h?i.join(p,m):m;o.wasm.wasmPaths=h?i.join(p,"/dist/"):`https://cdn.jsdelivr.net/npm/@xenova/transformers@${l}/dist/`;const _={backends:{onnx:o,tfjs:{}},__dirname:p,version:l,allowRemoteModels:!0,remoteHost:"https://huggingface.co/",remotePathTemplate:"{model}/resolve/{revision}/",allowLocalModels:!0,localModelPath:g,useFS:d,useBrowserCache:u,useFSCache:d,cacheDir:f,useCustomCache:!1,customCache:null};function y(e){return 0===Object.keys(e).length}},"./src/models.js":
/*!***********************!*\
  !*** ./src/models.js ***!
  \***********************/(e,t,n)=>{n.r(t),n.d(t,{ASTForAudioClassification:()=>Xt,ASTModel:()=>Qt,ASTPreTrainedModel:()=>Yt,AlbertForMaskedLM:()=>st,AlbertForQuestionAnswering:()=>at,AlbertForSequenceClassification:()=>it,AlbertModel:()=>rt,AlbertPreTrainedModel:()=>nt,AutoModel:()=>ga,AutoModelForAudioClassification:()=>za,AutoModelForCTC:()=>Oa,AutoModelForCausalLM:()=>xa,AutoModelForDepthEstimation:()=>ja,AutoModelForDocumentQuestionAnswering:()=>Ba,AutoModelForImageClassification:()=>Ma,AutoModelForImageMatting:()=>Ra,AutoModelForImageSegmentation:()=>ka,AutoModelForImageToImage:()=>Fa,AutoModelForMaskGeneration:()=>Pa,AutoModelForMaskedLM:()=>Ca,AutoModelForObjectDetection:()=>Aa,AutoModelForQuestionAnswering:()=>Ta,AutoModelForSemanticSegmentation:()=>Ea,AutoModelForSeq2SeqLM:()=>wa,AutoModelForSequenceClassification:()=>_a,AutoModelForSpeechSeq2Seq:()=>va,AutoModelForTextToSpectrogram:()=>ba,AutoModelForTextToWaveform:()=>$a,AutoModelForTokenClassification:()=>ya,AutoModelForVision2Seq:()=>Sa,AutoModelForZeroShotObjectDetection:()=>Ia,BartForConditionalGeneration:()=>yt,BartForSequenceClassification:()=>wt,BartModel:()=>_t,BartPretrainedModel:()=>gt,BaseModelOutput:()=>L,BeitForImageClassification:()=>lr,BeitModel:()=>or,BeitPreTrainedModel:()=>sr,BertForMaskedLM:()=>U,BertForQuestionAnswering:()=>q,BertForSequenceClassification:()=>V,BertForTokenClassification:()=>G,BertModel:()=>W,BertPreTrainedModel:()=>N,BlenderbotForConditionalGeneration:()=>Mt,BlenderbotModel:()=>St,BlenderbotPreTrainedModel:()=>Tt,BlenderbotSmallForConditionalGeneration:()=>At,BlenderbotSmallModel:()=>Et,BlenderbotSmallPreTrainedModel:()=>kt,BloomForCausalLM:()=>Wn,BloomModel:()=>Nn,BloomPreTrainedModel:()=>Ln,CLIPModel:()=>rn,CLIPPreTrainedModel:()=>nn,CLIPSegForImageSegmentation:()=>mn,CLIPSegModel:()=>fn,CLIPSegPreTrainedModel:()=>pn,CLIPTextModelWithProjection:()=>an,CLIPVisionModelWithProjection:()=>sn,CamembertForMaskedLM:()=>pe,CamembertForQuestionAnswering:()=>ge,CamembertForSequenceClassification:()=>fe,CamembertForTokenClassification:()=>me,CamembertModel:()=>he,CamembertPreTrainedModel:()=>ce,CausalLMOutput:()=>Va,CausalLMOutputWithPast:()=>Ga,ChineseCLIPModel:()=>hn,ChineseCLIPPreTrainedModel:()=>cn,ClapAudioModelWithProjection:()=>Bi,ClapModel:()=>Oi,ClapPreTrainedModel:()=>Pi,ClapTextModelWithProjection:()=>zi,CodeGenForCausalLM:()=>On,CodeGenModel:()=>Pn,CodeGenPreTrainedModel:()=>In,ConvBertForMaskedLM:()=>te,ConvBertForQuestionAnswering:()=>ie,ConvBertForSequenceClassification:()=>ne,ConvBertForTokenClassification:()=>re,ConvBertModel:()=>ee,ConvBertPreTrainedModel:()=>J,ConvNextForImageClassification:()=>Nr,ConvNextModel:()=>Lr,ConvNextPreTrainedModel:()=>Dr,ConvNextV2ForImageClassification:()=>Vr,ConvNextV2Model:()=>Ur,ConvNextV2PreTrainedModel:()=>Wr,DPTForDepthEstimation:()=>Or,DPTModel:()=>Pr,DPTPreTrainedModel:()=>Ir,DebertaForMaskedLM:()=>we,DebertaForQuestionAnswering:()=>$e,DebertaForSequenceClassification:()=>ve,DebertaForTokenClassification:()=>be,DebertaModel:()=>ye,DebertaPreTrainedModel:()=>_e,DebertaV2ForMaskedLM:()=>Te,DebertaV2ForQuestionAnswering:()=>ke,DebertaV2ForSequenceClassification:()=>Se,DebertaV2ForTokenClassification:()=>Me,DebertaV2Model:()=>Ce,DebertaV2PreTrainedModel:()=>xe,DeiTForImageClassification:()=>br,DeiTModel:()=>vr,DeiTPreTrainedModel:()=>wr,DetrForObjectDetection:()=>cr,DetrForSegmentation:()=>hr,DetrModel:()=>dr,DetrObjectDetectionOutput:()=>pr,DetrPreTrainedModel:()=>ur,DetrSegmentationOutput:()=>fr,Dinov2ForImageClassification:()=>Hr,Dinov2Model:()=>qr,Dinov2PreTrainedModel:()=>Gr,DistilBertForMaskedLM:()=>ze,DistilBertForQuestionAnswering:()=>Oe,DistilBertForSequenceClassification:()=>Ie,DistilBertForTokenClassification:()=>Pe,DistilBertModel:()=>Ae,DistilBertPreTrainedModel:()=>Ee,DonutSwinModel:()=>jr,DonutSwinPreTrainedModel:()=>Fr,ElectraForMaskedLM:()=>oe,ElectraForQuestionAnswering:()=>de,ElectraForSequenceClassification:()=>le,ElectraForTokenClassification:()=>ue,ElectraModel:()=>se,ElectraPreTrainedModel:()=>ae,EsmForMaskedLM:()=>Fe,EsmForSequenceClassification:()=>je,EsmForTokenClassification:()=>De,EsmModel:()=>Re,EsmPreTrainedModel:()=>Be,FalconForCausalLM:()=>Ii,FalconModel:()=>Ai,FalconPreTrainedModel:()=>Ei,GLPNForDepthEstimation:()=>Rr,GLPNModel:()=>Br,GLPNPreTrainedModel:()=>zr,GPT2LMHeadModel:()=>yn,GPT2Model:()=>_n,GPT2PreTrainedModel:()=>gn,GPTBigCodeForCausalLM:()=>An,GPTBigCodeModel:()=>En,GPTBigCodePreTrainedModel:()=>kn,GPTJForCausalLM:()=>Mn,GPTJModel:()=>Sn,GPTJPreTrainedModel:()=>Tn,GPTNeoForCausalLM:()=>bn,GPTNeoModel:()=>vn,GPTNeoPreTrainedModel:()=>wn,GPTNeoXForCausalLM:()=>Cn,GPTNeoXModel:()=>xn,GPTNeoXPreTrainedModel:()=>$n,HubertForCTC:()=>pi,HubertForSequenceClassification:()=>fi,HubertModel:()=>hi,HubertPreTrainedModel:()=>ci,ImageMattingOutput:()=>qa,LlamaForCausalLM:()=>Rn,LlamaModel:()=>Bn,LlamaPreTrainedModel:()=>zn,LongT5ForConditionalGeneration:()=>ht,LongT5Model:()=>ct,LongT5PreTrainedModel:()=>dt,M2M100ForConditionalGeneration:()=>si,M2M100Model:()=>ai,M2M100PreTrainedModel:()=>ii,MBartForCausalLM:()=>Ct,MBartForConditionalGeneration:()=>$t,MBartForSequenceClassification:()=>xt,MBartModel:()=>bt,MBartPreTrainedModel:()=>vt,MPNetForMaskedLM:()=>He,MPNetForQuestionAnswering:()=>Qe,MPNetForSequenceClassification:()=>Ke,MPNetForTokenClassification:()=>Ye,MPNetModel:()=>qe,MPNetPreTrainedModel:()=>Ge,MT5ForConditionalGeneration:()=>mt,MT5Model:()=>ft,MT5PreTrainedModel:()=>pt,MarianMTModel:()=>ri,MarianModel:()=>ni,MarianPreTrainedModel:()=>ti,MaskedLMOutput:()=>Wa,MistralForCausalLM:()=>ki,MistralModel:()=>Mi,MistralPreTrainedModel:()=>Si,MobileBertForMaskedLM:()=>We,MobileBertForQuestionAnswering:()=>Ve,MobileBertForSequenceClassification:()=>Ue,MobileBertModel:()=>Ne,MobileBertPreTrainedModel:()=>Le,MobileViTForImageClassification:()=>nr,MobileViTModel:()=>tr,MobileViTPreTrainedModel:()=>er,ModelOutput:()=>D,MptForCausalLM:()=>Gn,MptModel:()=>Vn,MptPreTrainedModel:()=>Un,OPTForCausalLM:()=>Kn,OPTModel:()=>Hn,OPTPreTrainedModel:()=>qn,OwlViTForObjectDetection:()=>ar,OwlViTModel:()=>ir,OwlViTPreTrainedModel:()=>rr,PhiForCausalLM:()=>Dn,PhiModel:()=>jn,PhiPreTrainedModel:()=>Fn,PreTrainedModel:()=>j,PretrainedMixin:()=>Wi,QuestionAnsweringModelOutput:()=>Ua,ResNetForImageClassification:()=>Cr,ResNetModel:()=>xr,ResNetPreTrainedModel:()=>$r,RoFormerForMaskedLM:()=>Y,RoFormerForQuestionAnswering:()=>Z,RoFormerForSequenceClassification:()=>Q,RoFormerForTokenClassification:()=>X,RoFormerModel:()=>K,RoFormerPreTrainedModel:()=>H,RobertaForMaskedLM:()=>Ot,RobertaForQuestionAnswering:()=>Rt,RobertaForSequenceClassification:()=>zt,RobertaForTokenClassification:()=>Bt,RobertaModel:()=>Pt,RobertaPreTrainedModel:()=>It,SamImageSegmentationOutput:()=>ei,SamModel:()=>Jr,SamPreTrainedModel:()=>Zr,SegformerForImageClassification:()=>Li,SegformerForSemanticSegmentation:()=>Ni,SegformerModel:()=>Di,SegformerPreTrainedModel:()=>ji,Seq2SeqLMOutput:()=>Da,SequenceClassifierOutput:()=>La,SiglipModel:()=>ln,SiglipPreTrainedModel:()=>on,SiglipTextModel:()=>un,SiglipVisionModel:()=>dn,SpeechT5ForSpeechToText:()=>bi,SpeechT5ForTextToSpeech:()=>$i,SpeechT5HifiGan:()=>xi,SpeechT5Model:()=>vi,SpeechT5PreTrainedModel:()=>wi,SqueezeBertForMaskedLM:()=>Je,SqueezeBertForQuestionAnswering:()=>tt,SqueezeBertForSequenceClassification:()=>et,SqueezeBertModel:()=>Ze,SqueezeBertPreTrainedModel:()=>Xe,Swin2SRForImageSuperResolution:()=>Ar,Swin2SRModel:()=>Er,Swin2SRPreTrainedModel:()=>kr,SwinForImageClassification:()=>Mr,SwinModel:()=>Sr,SwinPreTrainedModel:()=>Tr,T5ForConditionalGeneration:()=>ut,T5Model:()=>lt,T5PreTrainedModel:()=>ot,TableTransformerForObjectDetection:()=>_r,TableTransformerModel:()=>gr,TableTransformerObjectDetectionOutput:()=>yr,TableTransformerPreTrainedModel:()=>mr,TokenClassifierOutput:()=>Na,TrOCRForCausalLM:()=>Ti,TrOCRPreTrainedModel:()=>Ci,ViTForImageClassification:()=>Xn,ViTModel:()=>Qn,ViTPreTrainedModel:()=>Yn,VisionEncoderDecoderModel:()=>tn,VitMatteForImageMatting:()=>Jn,VitMattePreTrainedModel:()=>Zn,VitsModel:()=>Fi,VitsModelOutput:()=>Ha,VitsPreTrainedModel:()=>Ri,Wav2Vec2ForCTC:()=>ui,Wav2Vec2ForSequenceClassification:()=>di,Wav2Vec2Model:()=>li,Wav2Vec2PreTrainedModel:()=>oi,WavLMForCTC:()=>_i,WavLMForSequenceClassification:()=>yi,WavLMModel:()=>gi,WavLMPreTrainedModel:()=>mi,WhisperForConditionalGeneration:()=>en,WhisperModel:()=>Jt,WhisperPreTrainedModel:()=>Zt,XLMForQuestionAnswering:()=>Wt,XLMForSequenceClassification:()=>Lt,XLMForTokenClassification:()=>Nt,XLMModel:()=>jt,XLMPreTrainedModel:()=>Ft,XLMRobertaForMaskedLM:()=>Gt,XLMRobertaForQuestionAnswering:()=>Kt,XLMRobertaForSequenceClassification:()=>qt,XLMRobertaForTokenClassification:()=>Ht,XLMRobertaModel:()=>Vt,XLMRobertaPreTrainedModel:()=>Ut,XLMWithLMHeadModel:()=>Dt,YolosForObjectDetection:()=>Qr,YolosModel:()=>Yr,YolosObjectDetectionOutput:()=>Xr,YolosPreTrainedModel:()=>Kr});var r=n(/*! ./configs.js */"./src/configs.js"),i=n(/*! ./utils/core.js */"./src/utils/core.js"),a=n(/*! ./utils/hub.js */"./src/utils/hub.js"),s=n(/*! ./utils/generation.js */"./src/utils/generation.js"),o=n(/*! ./utils/tensor.js */"./src/utils/tensor.js"),l=n(/*! ./backends/onnx.js */"./src/backends/onnx.js"),u=n(/*! ./transformers.js */"./src/transformers.js");const{InferenceSession:d,Tensor:c,env:h}=l.ONNX,p=0,f=1,m=2,g=3,_=4,y=5,w=new Map,v=new Map,b=new Map;async function $(e,t,n){let r=`onnx/${t}${n.quantized?"_quantized":""}.onnx`,i=await(0,a.getModelFile)(e,r,!0,n);try{let t=n.session_options;if(void 0===t.executionProviders&&(t.executionProviders=l.executionProviders),void 0!==t.externalData)for(let r=0;r<t.externalData.length;r++){const i=t.externalData[r];if("string"==typeof i.data){let t=await(0,a.getModelFile)(e,i.data,!0,n);i.data=t}}return await d.create(i,t)}catch(e){throw e}}async function x(e,t){const n=function(e,t){const n=Object.create(null),r=[];for(const i of e.inputNames){const e=t[i];e instanceof o.Tensor?n[i]=h.wasm.proxy?e.clone():e:r.push(i)}if(r.length>0)throw new Error(`An error occurred during model execution: "Missing the following inputs: ${r.join(", ")}.`);const i=Object.keys(t).length,a=e.inputNames.length;if(i>a){let n=Object.keys(t).filter((t=>!e.inputNames.includes(t)));console.warn(`WARNING: Too many inputs were provided (${i} > ${a}). The following inputs will be ignored: "${n.join(", ")}".`)}return n}(e,t);try{let t=await e.run(n);for(const[e,n]of Object.entries(t)){if("gpu-buffer"===n.location)continue;const t=n.cpuData;for(var r in t)if(isNaN(t[r])){console.log(`OUT: ${e}, NaN found`);break}}t=C(t);for(const[e,t]of Object.entries(n))"gpu-buffer"===t.location&&e.startsWith("past")&&t.ort_tensor.dispose();return t}catch(e){throw console.error(`An error occurred during model execution: "${e}".`),console.error("Inputs given to model:",n),e}}function C(e){for(let t in e)e[t]instanceof c?e[t]=new o.Tensor(e[t]):"object"==typeof e[t]&&C(e[t]);return e}function T(e){if(e instanceof o.Tensor)return e;if(0===e.length)throw Error("items must be non-empty");if(Array.isArray(e[0])){if(e.some((t=>t.length!==e[0].length)))throw Error("Unable to create tensor, you should probably activate truncation and/or padding with 'padding=True' and/or 'truncation=True' to have batched tensors with the same length.");return new o.Tensor("int64",BigInt64Array.from(e.flat().map((e=>BigInt(e)))),[e.length,e[0].length])}return new o.Tensor("int64",BigInt64Array.from(e.map((e=>BigInt(e)))),[1,e.length])}function S(e,t){let n=e.config.pad_token_id??null,r=e.config.eos_token_id??null;(0,i.isIntegralNumber)(r)&&(r=[r]);let a=-1!==t.indexOf(n),s=null===r||!r.includes(n);if(a&&s){let e=BigInt64Array.from(t.data.map((e=>e!=n)));return new o.Tensor("int64",e,t.dims)}return(0,o.ones_like)(t)}function M(e,t,n){if(!e.inputNames.includes("position_ids"))return;const r=new BigInt64Array(t.attention_mask.data.length);for(let e=0;e<t.attention_mask.dims[0];++e){let n=e*t.attention_mask.dims[1],i=BigInt(0);for(let e=0;e<t.attention_mask.dims[1];++e){const a=n+e;0n===t.attention_mask.data[a]?r[a]=BigInt(1):(r[a]=i,i+=t.attention_mask.data[a])}}t.position_ids=new o.Tensor("int64",r,t.attention_mask.dims),n&&(t.position_ids=t.position_ids.slice(null,-1).unsqueeze_(-1))}function k(e){return new o.Tensor("bool",[e],[1])}async function E(e,t){let{encoder_outputs:n,past_key_values:r}=t;n||(n=(await O(e,t)).last_hidden_state);let i={input_ids:t.decoder_input_ids,encoder_hidden_states:n};const a=!!r;e.decoder_merged_session.inputNames.includes("use_cache_branch")&&(i.use_cache_branch=k(a)),e.decoder_merged_session.inputNames.includes("encoder_attention_mask")&&(i.encoder_attention_mask=t.attention_mask),M(e.decoder_merged_session,i,a),e.addPastKeyValues(i,r);const s=await x(e.decoder_merged_session,i);let o=s.logits;r=e.getPastKeyValues(s,r);const l=e.getAttentions(s);return new Da({logits:o,past_key_values:r,encoder_outputs:n,...l})}function A(e,t,n,r){let i=[],a=0;const s=e.requires_attention_mask??!0;let l=n.decoder_input_ids??n.decoder_start_token_id??n.bos_token_id??n.eos_token_id;l instanceof o.Tensor?l=l.tolist().flat():Array.isArray(l)||(l=[l]);for(let n of t){n.dims=[1,...n.dims];let t={inputs:n,encoder_outputs:null,prev_model_outputs:null,output_token_ids:l,done:!1,score:0,id:a++};s&&(t.attention_mask=S(e,n)),i.push(t)}return i}async function I(e,t){const n=e.main_input_name;let r=t.output_token_ids;t.prev_model_outputs&&(r=r.slice(-1));let i={[n]:t.inputs,decoder_input_ids:T(r),encoder_outputs:t.encoder_outputs,past_key_values:t.prev_model_outputs?.past_key_values};t.attention_mask&&(i.attention_mask=t.attention_mask);let a=await e.forward(i);return t.prev_model_outputs=a,t.encoder_outputs=a.encoder_outputs,a}function P(e,t){e.output_token_ids=[...e.output_token_ids,t]}async function O(e,t){const n=Object.create(null);for(const r of e.session.inputNames)n[r]=t[r];return e.session.inputNames.includes("token_type_ids")&&!n.token_type_ids&&(n.token_type_ids=new o.Tensor("int64",new BigInt64Array(n.input_ids.data.length),n.input_ids.dims)),await x(e.session,n)}async function z(e,t){let{input_ids:n,past_key_values:r,attention_mask:i}=t,a={input_ids:n,attention_mask:i??S(e,n)};const s=!!r;e.session.inputNames.includes("use_cache_branch")&&(a.use_cache_branch=k(s)),M(e.session,a,s),e.addPastKeyValues(a,r);let o=await x(e.session,a),l=o.logits;return r=e.getPastKeyValues(o,r),{logits:l,past_key_values:r}}function B(e,t,n,r,i){let a=[],s=0;for(let n of t){let t,o=n.tolist().map(Number);n.dims=[1,...n.dims],i?(t=i[s],t.dims=[1,...t.dims]):t=S(e,n);let l={input:n,model_input_ids:n,attention_mask:t,prev_model_outputs:null,output_token_ids:o,num_output_tokens:r,done:!1,score:0,id:s++};a.push(l)}return a}async function R(e,t){let n=new BigInt64Array(t.output_token_ids.length).fill(1n),r={input_ids:t.model_input_ids,attention_mask:new o.Tensor("int64",n,[1,n.length]),past_key_values:t.prev_model_outputs?.past_key_values},i=await e.forward(r);return t.prev_model_outputs=i,i}function F(e,t){e.output_token_ids=[...e.output_token_ids,t],e.model_input_ids=new o.Tensor("int64",[BigInt(t)],[1,1])}class j extends i.Callable{main_input_name="input_ids";constructor(e,t){super(),this.config=e,this.session=t;const n=b.get(this.constructor),r=w.get(n);this.can_generate=!1,this._runBeam=null,this._getStartBeams=null,this._updateBeam=null,this._forward=null,r===_?(this.can_generate=!0,this._runBeam=R,this._getStartBeams=B,this._updateBeam=F,this._forward=z):r===m||r===g?(this.can_generate=!0,this._runBeam=I,this._getStartBeams=A,this._updateBeam=P,this._forward=E):this._forward=O}async dispose(){const e=[];for(let t of Object.keys(this)){const n=this[t];n instanceof d&&e.push(n.handler.dispose())}return await Promise.all(e)}static async from_pretrained(e,{quantized:t=!0,progress_callback:n=null,config:i=null,cache_dir:s=null,local_files_only:o=!1,revision:l="main",model_file_name:u=null,session_options:d={}}={}){let c={quantized:t,progress_callback:n,config:i,cache_dir:s,local_files_only:o,revision:l,model_file_name:u,session_options:d};const h=b.get(this),v=w.get(h);let x;return v===_?x=await Promise.all([r.AutoConfig.from_pretrained(e,c),$(e,c.model_file_name??"decoder_model_merged",c),(0,a.getModelJSON)(e,"generation_config.json",!1,c)]):v===m||v===g?x=await Promise.all([r.AutoConfig.from_pretrained(e,c),$(e,"encoder_model",c),$(e,"decoder_model_merged",c),(0,a.getModelJSON)(e,"generation_config.json",!1,c)]):v===y?x=await Promise.all([r.AutoConfig.from_pretrained(e,c),$(e,"vision_encoder",c),$(e,"prompt_encoder_mask_decoder",c)]):v===f?x=await Promise.all([r.AutoConfig.from_pretrained(e,c),$(e,"encoder_model",c),$(e,"decoder_model_merged",c)]):(v!==p&&console.warn(`Model type for '${h}' not found, assuming encoder-only architecture. Please report this at https://github.com/xenova/transformers.js/issues/new/choose.`),x=await Promise.all([r.AutoConfig.from_pretrained(e,c),$(e,c.model_file_name??"model",c)])),new this(...x)}async _call(e){return await this.forward(e)}async forward(e){return await this._forward(this,e)}_get_logits_processor(e,t,n=null){const r=new s.LogitsProcessorList;if(null!==e.repetition_penalty&&1!==e.repetition_penalty&&r.push(new s.RepetitionPenaltyLogitsProcessor(e.repetition_penalty)),null!==e.no_repeat_ngram_size&&e.no_repeat_ngram_size>0&&r.push(new s.NoRepeatNGramLogitsProcessor(e.no_repeat_ngram_size)),null!==e.bad_words_ids&&r.push(new s.NoBadWordsLogitsProcessor(e.bad_words_ids,e.eos_token_id)),null!==e.min_length&&null!==e.eos_token_id&&e.min_length>0&&r.push(new s.MinLengthLogitsProcessor(e.min_length,e.eos_token_id)),null!==e.min_new_tokens&&null!==e.eos_token_id&&e.min_new_tokens>0&&r.push(new s.MinNewTokensLengthLogitsProcessor(t,e.min_new_tokens,e.eos_token_id)),null!==e.forced_bos_token_id&&r.push(new s.ForcedBOSTokenLogitsProcessor(e.forced_bos_token_id)),null!==e.forced_eos_token_id&&r.push(new s.ForcedEOSTokenLogitsProcessor(e.max_length,e.forced_eos_token_id)),null!==e.begin_suppress_tokens){let n=t>1||null===e.forced_bos_token_id?t:t+1;null!==e.forced_decoder_ids&&(n+=e.forced_decoder_ids[e.forced_decoder_ids.length-1][0]),r.push(new s.SuppressTokensAtBeginLogitsProcessor(e.begin_suppress_tokens,n))}return null!==e.forced_decoder_ids&&r.push(new s.ForceTokensLogitsProcessor(e.forced_decoder_ids)),null!==n&&r.extend(n),r}_get_generation_config(e){let t=new s.GenerationConfig(this.config);return"generation_config"in this&&Object.assign(t,this.generation_config),null!==e&&Object.assign(t,e),t}async generate(e,t=null,n=null,{inputs_attention_mask:r=null}={}){if(!this.can_generate){let e=`The current model class (${b.get(this.constructor)}) is not compatible with \`.generate()\`, as it doesn't have a language model head.`;const t=this.config.model_type,n=Zi.get(t)??Xi.get(t)??qi.get(t)??ta.get(t);throw n&&(e+=` Please use the following class instead: '${n[0]}'`),Error(e)}if(!(e instanceof o.Tensor||(0,i.isTypedArray)(e)||Array.isArray(e)))throw Error(`\`inputs\` must be a Tensor, TypedArray, or Array, but is "${e.constructor.name}".`);let a;if(this.config.is_encoder_decoder)a=0;else if(a=e instanceof o.Tensor?e.dims.at(-1):e.length,0===a)throw Error("Must supply a non-empty array of input token ids.");t=this._get_generation_config(t),n=n??new s.LogitsProcessorList,n=this._get_logits_processor(t,a,n);let l=t.eos_token_id;null===l||Array.isArray(l)||(l=[l]);let u=1;const d=u+(t.max_new_tokens??1/0),c=Number.isInteger(t.max_length)&&null===(t.max_new_tokens??null);let h=s.Sampler.getSampler(t),p=this.getStartBeams(e,t,u,r);for(;p.some((e=>!e.done))&&u<d;){let e=[];for(let r of p){if(r.done){e.push(r);continue}if(c&&r.output_token_ids.length>=t.max_length){r.done=!0,e.push(r);continue}let i=await this.runBeam(r);t.output_attentions&&this.addAttentionsToBeam(r,i),t.output_scores;let a=i.logits.slice(null,-1,null);n(r.output_token_ids,a);let s=h(a);for(let[t,n]of s){let i={...r};this.updateBeam(i,t),i.score+=n,l&&l.includes(t)&&(i.done=!0),e.push(i)}}++u,e=this.groupBeams(e).map((e=>e.sort(((e,t)=>t.score-e.score)).slice(0,t.num_beams))),p=e.flat(),t.callback_function&&t.callback_function(p)}const f=this.groupBeams(p),m=e=>f.map((n=>t.num_return_sequences>1?n.slice(0,t.num_return_sequences).map((t=>t[e])):[n[0][e]])).flat(),g=m("output_token_ids");if(t.return_dict_in_generate){return{sequences:g,decoder_attentions:m("decoder_attentions"),cross_attentions:m("cross_attentions")}}return g}addAttentionsToBeam(e,t){if(this.config.is_encoder_decoder){if(!t.cross_attentions||0===t.cross_attentions.length)throw Error("`output_attentions` is true, but the model did not produce cross-attentions. This is most likely because the model was not exported with `output_attentions=True`.");e.cross_attentions||(e.cross_attentions=[]),e.cross_attentions.push(t.cross_attentions)}if(!t.decoder_attentions||0===t.decoder_attentions.length)throw Error("`output_attentions` is true, but the model did not produce decoder-attentions. This is most likely because the model was not exported with `output_attentions=True`.");e.decoder_attentions||(e.decoder_attentions=[]),e.decoder_attentions.push(t.decoder_attentions)}groupBeams(e){const t=Object.create(null);for(const n of e)void 0===t[n.id]?t[n.id]=[n]:t[n.id].push(n);return Object.values(t)}getPastKeyValues(e,t){const n=Object.create(null);for(const r in e)if(r.startsWith("present")){let i=r.replace("present","past_key_values");t&&r.includes("encoder")?n[i]=t[i]:n[i]=e[r]}return n}getAttentions(e){const t=Object.create(null);for(const n of["cross_attentions","decoder_attentions"]){const r=[];for(const t in e)if(t.startsWith(n)){r[t.split(".").pop()]=e[t]}t[n]=r}return t}addPastKeyValues(e,t){if(t)Object.assign(e,t);else{const t=1,n=this.config.precision||"float32",r="float16"===n?new Uint16Array:[];if(this.config.is_encoder_decoder&&(this.add_encoder_pkv??1)){let i=[t,this.num_encoder_heads,0,this.encoder_dim_kv],a=[t,this.num_decoder_heads,0,this.decoder_dim_kv];for(let t=0;t<this.num_decoder_layers;++t)e[`past_key_values.${t}.encoder.key`]=new o.Tensor(n,r,i),e[`past_key_values.${t}.encoder.value`]=new o.Tensor(n,r,i),e[`past_key_values.${t}.decoder.key`]=new o.Tensor(n,r,a),e[`past_key_values.${t}.decoder.value`]=new o.Tensor(n,r,a)}else if("falcon"===this.config.model_type){let i=[t*this.num_heads,0,this.dim_kv];for(let t=0;t<this.num_layers;++t)e[`past_key_values.${t}.key`]=new o.Tensor(n,r,i),e[`past_key_values.${t}.value`]=new o.Tensor(n,r,i)}else if(this.config.multi_query){let i=[t*this.num_heads,0,2*this.dim_kv];for(let t=0;t<this.num_layers;++t)e[`past_key_values.${t}.key_value`]=new o.Tensor(n,r,i)}else if("bloom"===this.config.model_type){let i=[t*this.num_heads,this.dim_kv,0],a=[t*this.num_heads,0,this.dim_kv];for(let t=0;t<this.num_layers;++t)e[`past_key_values.${t}.key`]=new o.Tensor(n,r,i),e[`past_key_values.${t}.value`]=new o.Tensor(n,r,a)}else{let i=[t,this.num_heads,0,this.dim_kv];for(let t=0;t<this.num_layers;++t)e[`past_key_values.${t}.key`]=new o.Tensor(n,r,i),e[`past_key_values.${t}.value`]=new o.Tensor(n,r,i)}}}getStartBeams(e,t,n,r){return this._getStartBeams(this,e,t,n,r)}async runBeam(e){return await this._runBeam(this,e)}updateBeam(e,t){return this._updateBeam(e,t)}}class D{}class L extends D{constructor({last_hidden_state:e,hidden_states:t=null,attentions:n=null}){super(),this.last_hidden_state=e,this.hidden_states=t,this.attentions=n}}class N extends j{}class W extends N{}class U extends N{async _call(e){return new Wa(await super._call(e))}}class V extends N{async _call(e){return new La(await super._call(e))}}class G extends N{async _call(e){return new Na(await super._call(e))}}class q extends N{async _call(e){return new Ua(await super._call(e))}}class H extends j{}class K extends H{}class Y extends H{async _call(e){return new Wa(await super._call(e))}}class Q extends H{async _call(e){return new La(await super._call(e))}}class X extends H{async _call(e){return new Na(await super._call(e))}}class Z extends H{async _call(e){return new Ua(await super._call(e))}}class J extends j{}class ee extends J{}class te extends J{async _call(e){return new Wa(await super._call(e))}}class ne extends J{async _call(e){return new La(await super._call(e))}}class re extends J{async _call(e){return new Na(await super._call(e))}}class ie extends J{async _call(e){return new Ua(await super._call(e))}}class ae extends j{}class se extends ae{}class oe extends ae{async _call(e){return new Wa(await super._call(e))}}class le extends ae{async _call(e){return new La(await super._call(e))}}class ue extends ae{async _call(e){return new Na(await super._call(e))}}class de extends ae{async _call(e){return new Ua(await super._call(e))}}class ce extends j{}class he extends ce{}class pe extends ce{async _call(e){return new Wa(await super._call(e))}}class fe extends ce{async _call(e){return new La(await super._call(e))}}class me extends ce{async _call(e){return new Na(await super._call(e))}}class ge extends ce{async _call(e){return new Ua(await super._call(e))}}class _e extends j{}class ye extends _e{}class we extends _e{async _call(e){return new Wa(await super._call(e))}}class ve extends _e{async _call(e){return new La(await super._call(e))}}class be extends _e{async _call(e){return new Na(await super._call(e))}}class $e extends _e{async _call(e){return new Ua(await super._call(e))}}class xe extends j{}class Ce extends xe{}class Te extends xe{async _call(e){return new Wa(await super._call(e))}}class Se extends xe{async _call(e){return new La(await super._call(e))}}class Me extends xe{async _call(e){return new Na(await super._call(e))}}class ke extends xe{async _call(e){return new Ua(await super._call(e))}}class Ee extends j{}class Ae extends Ee{}class Ie extends Ee{async _call(e){return new La(await super._call(e))}}class Pe extends Ee{async _call(e){return new Na(await super._call(e))}}class Oe extends Ee{async _call(e){return new Ua(await super._call(e))}}class ze extends Ee{async _call(e){return new Wa(await super._call(e))}}class Be extends j{}class Re extends Be{}class Fe extends Be{async _call(e){return new Wa(await super._call(e))}}class je extends Be{async _call(e){return new La(await super._call(e))}}class De extends Be{async _call(e){return new Na(await super._call(e))}}class Le extends j{}class Ne extends Le{}class We extends Le{async _call(e){return new Wa(await super._call(e))}}class Ue extends Le{async _call(e){return new La(await super._call(e))}}class Ve extends Le{async _call(e){return new Ua(await super._call(e))}}class Ge extends j{}class qe extends Ge{}class He extends Ge{async _call(e){return new Wa(await super._call(e))}}class Ke extends Ge{async _call(e){return new La(await super._call(e))}}class Ye extends Ge{async _call(e){return new Na(await super._call(e))}}class Qe extends Ge{async _call(e){return new Ua(await super._call(e))}}class Xe extends j{}class Ze extends Xe{}class Je extends Xe{async _call(e){return new Wa(await super._call(e))}}class et extends Xe{async _call(e){return new La(await super._call(e))}}class tt extends Xe{async _call(e){return new Ua(await super._call(e))}}class nt extends j{}class rt extends nt{}class it extends nt{async _call(e){return new La(await super._call(e))}}class at extends nt{async _call(e){return new Ua(await super._call(e))}}class st extends nt{async _call(e){return new Wa(await super._call(e))}}class ot extends j{}class lt extends ot{}class ut extends ot{constructor(e,t,n,r){super(e,t),this.decoder_merged_session=n,this.generation_config=r,this.num_decoder_layers=this.config.num_decoder_layers,this.num_decoder_heads=this.config.num_heads,this.decoder_dim_kv=this.config.d_kv,this.num_encoder_layers=this.config.num_layers,this.num_encoder_heads=this.config.num_heads,this.encoder_dim_kv=this.config.d_kv}}class dt extends j{}class ct extends dt{}class ht extends dt{constructor(e,t,n,r){super(e,t),this.decoder_merged_session=n,this.generation_config=r,this.num_decoder_layers=this.config.num_decoder_layers,this.num_decoder_heads=this.config.num_heads,this.decoder_dim_kv=this.config.d_kv,this.num_encoder_layers=this.config.num_layers,this.num_encoder_heads=this.config.num_heads,this.encoder_dim_kv=this.config.d_kv}}class pt extends j{}class ft extends pt{}class mt extends pt{constructor(e,t,n,r){super(e,t),this.decoder_merged_session=n,this.generation_config=r,this.num_decoder_layers=this.config.num_decoder_layers,this.num_decoder_heads=this.config.num_heads,this.decoder_dim_kv=this.config.d_kv,this.num_encoder_layers=this.config.num_layers,this.num_encoder_heads=this.config.num_heads,this.encoder_dim_kv=this.config.d_kv}}class gt extends j{}class _t extends gt{}class yt extends gt{constructor(e,t,n,r){super(e,t),this.decoder_merged_session=n,this.generation_config=r,this.num_decoder_layers=this.config.decoder_layers,this.num_decoder_heads=this.config.decoder_attention_heads,this.decoder_dim_kv=this.config.d_model/this.num_decoder_heads,this.num_encoder_layers=this.config.encoder_layers,this.num_encoder_heads=this.config.encoder_attention_heads,this.encoder_dim_kv=this.config.d_model/this.num_encoder_heads}}class wt extends gt{async _call(e){return new La(await super._call(e))}}class vt extends j{}class bt extends vt{}class $t extends vt{constructor(e,t,n,r){super(e,t),this.decoder_merged_session=n,this.generation_config=r,this.num_decoder_layers=this.config.decoder_layers,this.num_decoder_heads=this.config.decoder_attention_heads,this.decoder_dim_kv=this.config.d_model/this.num_decoder_heads,this.num_encoder_layers=this.config.encoder_layers,this.num_encoder_heads=this.config.encoder_attention_heads,this.encoder_dim_kv=this.config.d_model/this.num_encoder_heads}}class xt extends vt{async _call(e){return new La(await super._call(e))}}class Ct extends vt{constructor(e,t,n){super(e,t),this.generation_config=n,this.num_decoder_layers=this.config.decoder_layers,this.num_decoder_heads=this.config.decoder_attention_heads,this.decoder_dim_kv=this.config.d_model/this.num_decoder_heads,this.num_encoder_layers=this.config.encoder_layers,this.num_encoder_heads=this.config.encoder_attention_heads,this.encoder_dim_kv=this.config.d_model/this.num_encoder_heads}}class Tt extends j{}class St extends Tt{}class Mt extends Tt{constructor(e,t,n,r){super(e,t),this.decoder_merged_session=n,this.generation_config=r,this.num_decoder_layers=this.config.decoder_layers,this.num_decoder_heads=this.config.decoder_attention_heads,this.decoder_dim_kv=this.config.d_model/this.num_decoder_heads,this.num_encoder_layers=this.config.encoder_layers,this.num_encoder_heads=this.config.encoder_attention_heads,this.encoder_dim_kv=this.config.d_model/this.num_encoder_heads}}class kt extends j{}class Et extends kt{}class At extends kt{constructor(e,t,n,r){super(e,t),this.decoder_merged_session=n,this.generation_config=r,this.num_decoder_layers=this.config.decoder_layers,this.num_decoder_heads=this.config.decoder_attention_heads,this.decoder_dim_kv=this.config.d_model/this.num_decoder_heads,this.num_encoder_layers=this.config.encoder_layers,this.num_encoder_heads=this.config.encoder_attention_heads,this.encoder_dim_kv=this.config.d_model/this.num_encoder_heads}}class It extends j{}class Pt extends It{}class Ot extends It{async _call(e){return new Wa(await super._call(e))}}class zt extends It{async _call(e){return new La(await super._call(e))}}class Bt extends It{async _call(e){return new Na(await super._call(e))}}class Rt extends It{async _call(e){return new Ua(await super._call(e))}}class Ft extends j{}class jt extends Ft{}class Dt extends Ft{async _call(e){return new Wa(await super._call(e))}}class Lt extends Ft{async _call(e){return new La(await super._call(e))}}class Nt extends Ft{async _call(e){return new Na(await super._call(e))}}class Wt extends Ft{async _call(e){return new Ua(await super._call(e))}}class Ut extends j{}class Vt extends Ut{}class Gt extends Ut{async _call(e){return new Wa(await super._call(e))}}class qt extends Ut{async _call(e){return new La(await super._call(e))}}class Ht extends Ut{async _call(e){return new Na(await super._call(e))}}class Kt extends Ut{async _call(e){return new Ua(await super._call(e))}}class Yt extends j{}class Qt extends Yt{}class Xt extends Yt{}class Zt extends j{}class Jt extends Zt{}class en extends Zt{requires_attention_mask=!1;main_input_name="input_features";constructor(e,t,n,r){super(e,t),this.decoder_merged_session=n,this.generation_config=r,this.num_decoder_layers=this.config.decoder_layers,this.num_decoder_heads=this.config.decoder_attention_heads,this.decoder_dim_kv=this.config.d_model/this.num_decoder_heads,this.num_encoder_layers=this.config.encoder_layers,this.num_encoder_heads=this.config.encoder_attention_heads,this.encoder_dim_kv=this.config.d_model/this.num_encoder_heads}async generate(e,t=null,n=null){if(t=this._get_generation_config(t),t.return_timestamps??=!1,t.return_timestamps&&(n=[new s.WhisperTimeStampLogitsProcessor(t)]),t.return_token_timestamps&&(t.output_attentions=!0,t.return_dict_in_generate=!0,"translate"===t.task&&console.warn("Token-level timestamps may not be reliable for task 'translate'."),!t.alignment_heads))throw new Error("Model generation config has no `alignment_heads`, token-level timestamps not available. See https://gist.github.com/hollance/42e32852f24243b748ae6bc1f985b13a on how to add this property to the generation config.");const r=await super.generate(e,t,n);return t.return_token_timestamps&&t.alignment_heads&&(r.token_timestamps=this._extract_token_timestamps(r,t.alignment_heads,t.num_frames)),r}_extract_token_timestamps(e,t,n=null,r=.02){if(!e.cross_attentions)throw new Error("Model outputs must contain cross attentions to extract timestamps. This is most likely because the model was not exported with `output_attentions=True`.");let a=this.config.median_filter_width;void 0===a&&(console.warn("Model config has no `median_filter_width`, using default value of 7."),a=7);const s=e.cross_attentions.map((e=>{let r=Array.from({length:this.config.decoder_layers},((t,n)=>(0,o.cat)(e.map((e=>e[n])),2))),i=(0,o.stack)(t.map((([e,t])=>n?r[e].slice(null,t,null,[0,n]):r[e].slice(null,t))));i=i.transpose(1,0,2,3);let[s,l]=(0,o.std_mean)(i,-2,0,!0),d=i.clone();for(let e=0;e<d.dims[0];++e){let t=d[e];for(let n=0;n<t.dims[0];++n){let r=t[n];const i=s[e][n][0],o=l[e][n][0];for(let e=0;e<r.dims[0];++e){let t=r[e];for(let e=0;e<t.data.length;++e)t.data[e]=(t.data[e]-o.data[e])/i.data[e];t.data.set((0,u.medianFilter)(t.data,a))}}}return(0,o.mean)(d,1)})),l=[e.sequences.length,e.sequences[0].length],d=new o.Tensor("float32",new Float32Array(l[0]*l[1]),l);for(let e=0;e<l[0];++e){const t=s[e].neg().squeeze_(0);let[n,a]=(0,o.dynamicTimeWarping)(t),l=Array.from({length:n.length-1},((e,t)=>n[t+1]-n[t])),u=(0,i.mergeArrays)([1],l).map((e=>!!e)),c=[];for(let e=0;e<u.length;++e)u[e]&&c.push(a[e]*r);d[e].data.set(c,1)}return d}}class tn extends j{main_input_name="pixel_values";constructor(e,t,n,r){super(e,t),this.decoder_merged_session=n,this.generation_config=r;const i=this.config.encoder,a=this.config.decoder,s=i.model_type;(Ui.get(s)??Vi.get(s))||console.warn(`Model type for encoder '${s}' not found, assuming encoder-only architecture. Please report this at https://github.com/xenova/transformers.js/issues/new/choose.`);const o=Zi.get(a.model_type);if(!o)throw new Error(`Unable to construct \`VisionEncoderDecoder\` due to unsupported decoder: "${this.config.decoder.model_type}"`);const l=new(0,o[1])(a,n,r);this.add_encoder_pkv="num_decoder_layers"in l,this.add_encoder_pkv?(this.num_decoder_layers=l.num_decoder_layers,this.num_decoder_heads=l.num_decoder_heads,this.decoder_dim_kv=l.decoder_dim_kv,this.num_encoder_layers=l.num_encoder_layers,this.num_encoder_heads=l.num_encoder_heads,this.encoder_dim_kv=l.encoder_dim_kv):(this.num_layers=l.num_layers,this.num_heads=l.num_heads,this.dim_kv=l.dim_kv)}}class nn extends j{}class rn extends nn{}class an extends nn{static async from_pretrained(e,t={}){return t.model_file_name??="text_model",super.from_pretrained(e,t)}}class sn extends nn{static async from_pretrained(e,t={}){return t.model_file_name??="vision_model",super.from_pretrained(e,t)}}class on extends j{}class ln extends on{}class un extends on{static async from_pretrained(e,t={}){return t.model_file_name??="text_model",super.from_pretrained(e,t)}}class dn extends nn{static async from_pretrained(e,t={}){return t.model_file_name??="vision_model",super.from_pretrained(e,t)}}class cn extends j{}class hn extends cn{}class pn extends j{}class fn extends pn{}class mn extends pn{}class gn extends j{constructor(e,t,n){super(e,t),this.generation_config=n,this.config.pad_token_id=this.config.eos_token_id,this.num_heads=this.config.n_head,this.num_layers=this.config.n_layer,this.dim_kv=this.config.n_embd/this.num_heads}}class _n extends gn{}class yn extends gn{}class wn extends j{constructor(e,t,n){super(e,t),this.generation_config=n,this.config.pad_token_id=this.config.eos_token_id,this.num_heads=this.config.num_heads,this.num_layers=this.config.num_layers,this.dim_kv=this.config.hidden_size/this.num_heads}}class vn extends wn{}class bn extends wn{}class $n extends j{constructor(e,t,n){super(e,t),this.generation_config=n,this.config.pad_token_id=this.config.eos_token_id,this.num_heads=this.config.num_attention_heads,this.num_layers=this.config.num_hidden_layers,this.dim_kv=this.config.hidden_size/this.num_heads}}class xn extends $n{}class Cn extends $n{}class Tn extends j{constructor(e,t,n){super(e,t),this.generation_config=n,this.config.pad_token_id=this.config.eos_token_id,this.num_heads=this.config.n_head,this.num_layers=this.config.n_layer,this.dim_kv=this.config.n_embd/this.num_heads}}class Sn extends Tn{}class Mn extends Tn{}class kn extends j{constructor(e,t,n){super(e,t),this.generation_config=n,this.config.pad_token_id=this.config.eos_token_id,this.num_heads=this.config.n_head,this.num_layers=this.config.n_layer,this.dim_kv=this.config.n_embd/this.num_heads}}class En extends kn{}class An extends kn{}class In extends j{constructor(e,t,n){super(e,t),this.generation_config=n,this.config.pad_token_id=this.config.eos_token_id,this.num_heads=this.config.n_head,this.num_layers=this.config.n_layer,this.dim_kv=this.config.n_embd/this.num_heads}}class Pn extends In{}class On extends In{}class zn extends j{constructor(e,t,n){super(e,t),this.generation_config=n,this.config.pad_token_id=this.config.eos_token_id,this.num_heads=this.config.num_key_value_heads??this.config.num_attention_heads,this.num_layers=this.config.num_hidden_layers,this.dim_kv=this.config.hidden_size/this.config.num_attention_heads}}class Bn extends zn{}class Rn extends zn{}class Fn extends j{constructor(e,t,n){super(e,t),this.generation_config=n,this.config.pad_token_id=this.config.eos_token_id,this.num_heads=this.config.num_attention_heads,this.num_layers=this.config.num_hidden_layers,this.dim_kv=this.config.hidden_size/this.num_heads}}class jn extends Fn{}class Dn extends Fn{}class Ln extends j{constructor(e,t,n){super(e,t),this.generation_config=n,this.config.pad_token_id=this.config.eos_token_id,this.num_heads=this.config.n_head,this.num_layers=this.config.n_layer,this.dim_kv=this.config.hidden_size/this.num_heads}}class Nn extends Ln{}class Wn extends Ln{}class Un extends j{constructor(e,t,n){super(e,t),this.generation_config=n,this.config.pad_token_id=this.config.eos_token_id,this.num_heads=this.config.n_heads,this.num_layers=this.config.n_layers,this.dim_kv=this.config.d_model/this.num_heads}}class Vn extends Un{}class Gn extends Un{}class qn extends j{constructor(e,t,n){super(e,t),this.generation_config=n,this.config.pad_token_id=this.config.eos_token_id,this.num_heads=this.config.num_attention_heads,this.num_layers=this.config.num_hidden_layers,this.dim_kv=this.config.hidden_size/this.num_heads}}class Hn extends qn{}class Kn extends qn{}class Yn extends j{}class Qn extends Yn{}class Xn extends Yn{async _call(e){return new La(await super._call(e))}}class Zn extends j{}class Jn extends Zn{async _call(e){return new qa(await super._call(e))}}class er extends j{}class tr extends er{}class nr extends er{async _call(e){return new La(await super._call(e))}}class rr extends j{}class ir extends rr{}class ar extends rr{}class sr extends j{}class or extends sr{}class lr extends sr{async _call(e){return new La(await super._call(e))}}class ur extends j{}class dr extends ur{}class cr extends ur{async _call(e){return new pr(await super._call(e))}}class hr extends ur{async _call(e){return new fr(await super._call(e))}}class pr extends D{constructor({logits:e,pred_boxes:t}){super(),this.logits=e,this.pred_boxes=t}}class fr extends D{constructor({logits:e,pred_boxes:t,pred_masks:n}){super(),this.logits=e,this.pred_boxes=t,this.pred_masks=n}}class mr extends j{}class gr extends mr{}class _r extends mr{async _call(e){return new yr(await super._call(e))}}class yr extends pr{}class wr extends j{}class vr extends wr{}class br extends wr{async _call(e){return new La(await super._call(e))}}class $r extends j{}class xr extends $r{}class Cr extends $r{async _call(e){return new La(await super._call(e))}}class Tr extends j{}class Sr extends Tr{}class Mr extends Tr{async _call(e){return new La(await super._call(e))}}class kr extends j{}class Er extends kr{}class Ar extends kr{}class Ir extends j{}class Pr extends Ir{}class Or extends Ir{}class zr extends j{}class Br extends zr{}class Rr extends zr{}class Fr extends j{}class jr extends Fr{}class Dr extends j{}class Lr extends Dr{}class Nr extends Dr{async _call(e){return new La(await super._call(e))}}class Wr extends j{}class Ur extends Wr{}class Vr extends Wr{async _call(e){return new La(await super._call(e))}}class Gr extends j{}class qr extends Gr{}class Hr extends Gr{async _call(e){return new La(await super._call(e))}}class Kr extends j{}class Yr extends Kr{}class Qr extends Kr{async _call(e){return new Xr(await super._call(e))}}class Xr extends D{constructor({logits:e,pred_boxes:t}){super(),this.logits=e,this.pred_boxes=t}}class Zr extends j{}class Jr extends Zr{constructor(e,t,n){super(e,t),this.prompt_encoder_mask_decoder=n}async get_image_embeddings({pixel_values:e}){return await O(this,{pixel_values:e})}async forward(e){if(e.image_embeddings&&e.image_positional_embeddings||(e={...e,...await this.get_image_embeddings(e)}),!e.input_labels){const t=e.input_points.dims.slice(0,-1),n=t.reduce(((e,t)=>e*t),1);e.input_labels=new o.Tensor("int64",new BigInt64Array(n).fill(1n),t)}return await x(this.prompt_encoder_mask_decoder,{input_points:e.input_points,input_labels:e.input_labels,image_embeddings:e.image_embeddings,image_positional_embeddings:e.image_positional_embeddings})}async _call(e){return new ei(await super._call(e))}}class ei extends D{constructor({iou_scores:e,pred_masks:t}){super(),this.iou_scores=e,this.pred_masks=t}}class ti extends j{}class ni extends ti{}class ri extends ti{constructor(e,t,n,r){super(e,t),this.decoder_merged_session=n,this.generation_config=r,this.num_decoder_layers=this.config.decoder_layers,this.num_decoder_heads=this.config.decoder_attention_heads,this.decoder_dim_kv=this.config.d_model/this.num_decoder_heads,this.num_encoder_layers=this.config.encoder_layers,this.num_encoder_heads=this.config.encoder_attention_heads,this.encoder_dim_kv=this.config.d_model/this.num_encoder_heads}}class ii extends j{}class ai extends ii{}class si extends ii{constructor(e,t,n,r){super(e,t),this.decoder_merged_session=n,this.generation_config=r,this.num_decoder_layers=this.config.decoder_layers,this.num_decoder_heads=this.config.decoder_attention_heads,this.decoder_dim_kv=this.config.d_model/this.num_decoder_heads,this.num_encoder_layers=this.config.encoder_layers,this.num_encoder_heads=this.config.encoder_attention_heads,this.encoder_dim_kv=this.config.d_model/this.num_encoder_heads}}class oi extends j{}class li extends oi{}class ui extends oi{async _call(e){return new Va(await super._call(e))}}class di extends oi{async _call(e){return new La(await super._call(e))}}class ci extends j{}class hi extends oi{}class pi extends oi{async _call(e){return new Va(await super._call(e))}}class fi extends oi{async _call(e){return new La(await super._call(e))}}class mi extends j{}class gi extends mi{}class _i extends mi{async _call(e){return new Va(await super._call(e))}}class yi extends mi{async _call(e){return new La(await super._call(e))}}class wi extends j{}class vi extends wi{}class bi extends wi{}class $i extends wi{constructor(e,t,n,r){super(e,t),this.decoder_merged_session=n,this.generation_config=r,this.num_decoder_layers=this.config.decoder_layers,this.num_decoder_heads=this.config.decoder_attention_heads,this.decoder_dim_kv=this.config.hidden_size/this.num_decoder_heads,this.num_encoder_layers=this.config.encoder_layers,this.num_encoder_heads=this.config.encoder_attention_heads,this.encoder_dim_kv=this.config.hidden_size/this.num_encoder_heads}async generate_speech(e,t,{threshold:n=.5,minlenratio:r=0,maxlenratio:i=20,vocoder:a=null}={}){const s={input_ids:e},{encoder_outputs:l,encoder_attention_mask:u}=await O(this,s),d=l.dims[1]/this.config.reduction_factor,c=Math.floor(d*i),h=Math.floor(d*r),p=this.config.num_mel_bins;let f=[],m=null,g=null,_=0;for(;;){++_;const e=k(!!g);let r;r=g?g.output_sequence_out:new o.Tensor("float32",new Float32Array(p),[1,1,p]);let i={use_cache_branch:e,output_sequence:r,encoder_attention_mask:u,speaker_embeddings:t,encoder_hidden_states:l};this.addPastKeyValues(i,m),g=await x(this.decoder_merged_session,i),m=this.getPastKeyValues(g,m);const{prob:a,spectrum:s}=g;if(f.push(s),_>=h&&(Array.from(a.data).filter((e=>e>=n)).length>0||_>=c))break}const y=(0,o.cat)(f),{waveform:w}=await x(a.session,{spectrogram:y});return{spectrogram:y,waveform:w}}}class xi extends j{main_input_name="spectrogram"}class Ci extends j{constructor(e,t,n){super(e,t),this.generation_config=n,this.config.pad_token_id=this.config.eos_token_id,this.num_encoder_layers=this.num_decoder_layers=this.config.decoder_layers,this.num_encoder_heads=this.num_decoder_heads=this.config.decoder_attention_heads,this.encoder_dim_kv=this.decoder_dim_kv=this.config.d_model/this.num_decoder_heads}}class Ti extends Ci{}class Si extends j{constructor(e,t,n){super(e,t),this.generation_config=n,this.config.pad_token_id=this.config.eos_token_id,this.num_heads=this.config.num_key_value_heads,this.num_layers=this.config.num_hidden_layers,this.dim_kv=this.config.hidden_size/this.config.num_attention_heads}}class Mi extends Si{}class ki extends Si{}class Ei extends j{constructor(e,t,n){super(e,t),this.generation_config=n,this.config.pad_token_id=this.config.eos_token_id,this.num_heads=this.config.num_attention_heads,this.num_layers=this.config.num_hidden_layers,this.dim_kv=this.config.hidden_size/this.config.num_attention_heads}}class Ai extends Ei{}class Ii extends Ei{}class Pi extends j{}class Oi extends Pi{}class zi extends Pi{static async from_pretrained(e,t={}){return t.model_file_name??="text_model",super.from_pretrained(e,t)}}class Bi extends Pi{static async from_pretrained(e,t={}){return t.model_file_name??="audio_model",super.from_pretrained(e,t)}}class Ri extends j{}class Fi extends Ri{async _call(e){return new Ha(await super._call(e))}}class ji extends j{}class Di extends ji{}class Li extends ji{}class Ni extends ji{}class Wi{static MODEL_CLASS_MAPPINGS=null;static BASE_IF_FAIL=!1;static async from_pretrained(e,{quantized:t=!0,progress_callback:n=null,config:i=null,cache_dir:a=null,local_files_only:s=!1,revision:o="main",model_file_name:l=null,session_options:u={}}={}){let d={quantized:t,progress_callback:n,config:i,cache_dir:a,local_files_only:s,revision:o,model_file_name:l,session_options:u};if(i=await r.AutoConfig.from_pretrained(e,d),d.config||(d.config=i),!this.MODEL_CLASS_MAPPINGS)throw new Error("`MODEL_CLASS_MAPPINGS` not implemented for this type of `AutoClass`: "+this.name);for(let t of this.MODEL_CLASS_MAPPINGS){const n=t.get(i.model_type);if(n)return await n[1].from_pretrained(e,d)}if(this.BASE_IF_FAIL)return console.warn(`Unknown model class "${i.model_type}", attempting to construct from base class.`),await j.from_pretrained(e,d);throw Error(`Unsupported model type: ${i.model_type}`)}}const Ui=new Map([["bert",["BertModel",W]],["roformer",["RoFormerModel",K]],["electra",["ElectraModel",se]],["esm",["EsmModel",Re]],["convbert",["ConvBertModel",ee]],["camembert",["CamembertModel",he]],["deberta",["DebertaModel",ye]],["deberta-v2",["DebertaV2Model",Ce]],["mpnet",["MPNetModel",qe]],["albert",["AlbertModel",rt]],["distilbert",["DistilBertModel",Ae]],["roberta",["RobertaModel",Pt]],["xlm",["XLMModel",jt]],["xlm-roberta",["XLMRobertaModel",Vt]],["clap",["ClapModel",Oi]],["clip",["CLIPModel",rn]],["clipseg",["CLIPSegModel",fn]],["chinese_clip",["ChineseCLIPModel",hn]],["siglip",["SiglipModel",ln]],["mobilebert",["MobileBertModel",Ne]],["squeezebert",["SqueezeBertModel",Ze]],["wav2vec2",["Wav2Vec2Model",li]],["hubert",["HubertModel",hi]],["wavlm",["WavLMModel",gi]],["audio-spectrogram-transformer",["ASTModel",Qt]],["vits",["VitsModel",Fi]],["detr",["DetrModel",dr]],["table-transformer",["TableTransformerModel",gr]],["vit",["ViTModel",Qn]],["mobilevit",["MobileViTModel",tr]],["owlvit",["OwlViTModel",ir]],["beit",["BeitModel",or]],["deit",["DeiTModel",vr]],["convnext",["ConvNextModel",Lr]],["convnextv2",["ConvNextV2Model",Ur]],["dinov2",["Dinov2Model",qr]],["resnet",["ResNetModel",xr]],["swin",["SwinModel",Sr]],["swin2sr",["Swin2SRModel",Er]],["donut-swin",["DonutSwinModel",jr]],["yolos",["YolosModel",Yr]],["dpt",["DPTModel",Pr]],["glpn",["GLPNModel",Br]],["hifigan",["SpeechT5HifiGan",xi]]]),Vi=new Map([["t5",["T5Model",lt]],["longt5",["LongT5Model",ct]],["mt5",["MT5Model",ft]],["bart",["BartModel",_t]],["mbart",["MBartModel",bt]],["marian",["MarianModel",ni]],["whisper",["WhisperModel",Jt]],["m2m_100",["M2M100Model",ai]],["blenderbot",["BlenderbotModel",St]],["blenderbot-small",["BlenderbotSmallModel",Et]]]),Gi=new Map([["bloom",["BloomModel",Nn]],["gpt2",["GPT2Model",_n]],["gptj",["GPTJModel",Sn]],["gpt_bigcode",["GPTBigCodeModel",En]],["gpt_neo",["GPTNeoModel",vn]],["gpt_neox",["GPTNeoXModel",xn]],["codegen",["CodeGenModel",Pn]],["llama",["LlamaModel",Bn]],["phi",["PhiModel",jn]],["mpt",["MptModel",Vn]],["opt",["OPTModel",Hn]],["mistral",["MistralModel",Mi]],["falcon",["FalconModel",Ai]]]),qi=new Map([["speecht5",["SpeechT5ForSpeechToText",bi]],["whisper",["WhisperForConditionalGeneration",en]]]),Hi=new Map([["speecht5",["SpeechT5ForTextToSpeech",$i]]]),Ki=new Map([["vits",["VitsModel",Fi]]]),Yi=new Map([["bert",["BertForSequenceClassification",V]],["roformer",["RoFormerForSequenceClassification",Q]],["electra",["ElectraForSequenceClassification",le]],["esm",["EsmForSequenceClassification",je]],["convbert",["ConvBertForSequenceClassification",ne]],["camembert",["CamembertForSequenceClassification",fe]],["deberta",["DebertaForSequenceClassification",ve]],["deberta-v2",["DebertaV2ForSequenceClassification",Se]],["mpnet",["MPNetForSequenceClassification",Ke]],["albert",["AlbertForSequenceClassification",it]],["distilbert",["DistilBertForSequenceClassification",Ie]],["roberta",["RobertaForSequenceClassification",zt]],["xlm",["XLMForSequenceClassification",Lt]],["xlm-roberta",["XLMRobertaForSequenceClassification",qt]],["bart",["BartForSequenceClassification",wt]],["mbart",["MBartForSequenceClassification",xt]],["mobilebert",["MobileBertForSequenceClassification",Ue]],["squeezebert",["SqueezeBertForSequenceClassification",et]]]),Qi=new Map([["bert",["BertForTokenClassification",G]],["roformer",["RoFormerForTokenClassification",X]],["electra",["ElectraForTokenClassification",ue]],["esm",["EsmForTokenClassification",De]],["convbert",["ConvBertForTokenClassification",re]],["camembert",["CamembertForTokenClassification",me]],["deberta",["DebertaForTokenClassification",be]],["deberta-v2",["DebertaV2ForTokenClassification",Me]],["mpnet",["MPNetForTokenClassification",Ye]],["distilbert",["DistilBertForTokenClassification",Pe]],["roberta",["RobertaForTokenClassification",Bt]],["xlm",["XLMForTokenClassification",Nt]],["xlm-roberta",["XLMRobertaForTokenClassification",Ht]]]),Xi=new Map([["t5",["T5ForConditionalGeneration",ut]],["longt5",["LongT5ForConditionalGeneration",ht]],["mt5",["MT5ForConditionalGeneration",mt]],["bart",["BartForConditionalGeneration",yt]],["mbart",["MBartForConditionalGeneration",$t]],["marian",["MarianMTModel",ri]],["m2m_100",["M2M100ForConditionalGeneration",si]],["blenderbot",["BlenderbotForConditionalGeneration",Mt]],["blenderbot-small",["BlenderbotSmallForConditionalGeneration",At]]]),Zi=new Map([["bloom",["BloomForCausalLM",Wn]],["gpt2",["GPT2LMHeadModel",yn]],["gptj",["GPTJForCausalLM",Mn]],["gpt_bigcode",["GPTBigCodeForCausalLM",An]],["gpt_neo",["GPTNeoForCausalLM",bn]],["gpt_neox",["GPTNeoXForCausalLM",Cn]],["codegen",["CodeGenForCausalLM",On]],["llama",["LlamaForCausalLM",Rn]],["phi",["PhiForCausalLM",Dn]],["mpt",["MptForCausalLM",Gn]],["opt",["OPTForCausalLM",Kn]],["mbart",["MBartForCausalLM",Ct]],["mistral",["MistralForCausalLM",ki]],["falcon",["FalconForCausalLM",Ii]],["trocr",["TrOCRForCausalLM",Ti]]]),Ji=new Map([["bert",["BertForMaskedLM",U]],["roformer",["RoFormerForMaskedLM",Y]],["electra",["ElectraForMaskedLM",oe]],["esm",["EsmForMaskedLM",Fe]],["convbert",["ConvBertForMaskedLM",te]],["camembert",["CamembertForMaskedLM",pe]],["deberta",["DebertaForMaskedLM",we]],["deberta-v2",["DebertaV2ForMaskedLM",Te]],["mpnet",["MPNetForMaskedLM",He]],["albert",["AlbertForMaskedLM",st]],["distilbert",["DistilBertForMaskedLM",ze]],["roberta",["RobertaForMaskedLM",Ot]],["xlm",["XLMWithLMHeadModel",Dt]],["xlm-roberta",["XLMRobertaForMaskedLM",Gt]],["mobilebert",["MobileBertForMaskedLM",We]],["squeezebert",["SqueezeBertForMaskedLM",Je]]]),ea=new Map([["bert",["BertForQuestionAnswering",q]],["roformer",["RoFormerForQuestionAnswering",Z]],["electra",["ElectraForQuestionAnswering",de]],["convbert",["ConvBertForQuestionAnswering",ie]],["camembert",["CamembertForQuestionAnswering",ge]],["deberta",["DebertaForQuestionAnswering",$e]],["deberta-v2",["DebertaV2ForQuestionAnswering",ke]],["mpnet",["MPNetForQuestionAnswering",Qe]],["albert",["AlbertForQuestionAnswering",at]],["distilbert",["DistilBertForQuestionAnswering",Oe]],["roberta",["RobertaForQuestionAnswering",Rt]],["xlm",["XLMForQuestionAnswering",Wt]],["xlm-roberta",["XLMRobertaForQuestionAnswering",Kt]],["mobilebert",["MobileBertForQuestionAnswering",Ve]],["squeezebert",["SqueezeBertForQuestionAnswering",tt]]]),ta=new Map([["vision-encoder-decoder",["VisionEncoderDecoderModel",tn]]]),na=new Map([["vision-encoder-decoder",["VisionEncoderDecoderModel",tn]]]),ra=new Map([["vit",["ViTForImageClassification",Xn]],["mobilevit",["MobileViTForImageClassification",nr]],["beit",["BeitForImageClassification",lr]],["deit",["DeiTForImageClassification",br]],["convnext",["ConvNextForImageClassification",Nr]],["convnextv2",["ConvNextV2ForImageClassification",Vr]],["dinov2",["Dinov2ForImageClassification",Hr]],["resnet",["ResNetForImageClassification",Cr]],["swin",["SwinForImageClassification",Mr]],["segformer",["SegformerForImageClassification",Li]]]),ia=new Map([["detr",["DetrForObjectDetection",cr]],["table-transformer",["TableTransformerForObjectDetection",_r]],["yolos",["YolosForObjectDetection",Qr]]]),aa=new Map([["owlvit",["OwlViTForObjectDetection",ar]]]),sa=new Map([["detr",["DetrForSegmentation",hr]],["clipseg",["CLIPSegForImageSegmentation",mn]]]),oa=new Map([["segformer",["SegformerForSemanticSegmentation",Ni]]]),la=new Map([["sam",["SamModel",Jr]]]),ua=new Map([["wav2vec2",["Wav2Vec2ForCTC",ui]],["wavlm",["WavLMForCTC",_i]],["hubert",["HubertForCTC",pi]]]),da=new Map([["wav2vec2",["Wav2Vec2ForSequenceClassification",di]],["wavlm",["WavLMForSequenceClassification",yi]],["hubert",["HubertForSequenceClassification",fi]],["audio-spectrogram-transformer",["ASTForAudioClassification",Xt]]]),ca=new Map([["vitmatte",["VitMatteForImageMatting",Jn]]]),ha=new Map([["swin2sr",["Swin2SRForImageSuperResolution",Ar]]]),pa=new Map([["dpt",["DPTForDepthEstimation",Or]],["glpn",["GLPNForDepthEstimation",Rr]]]),fa=[[Ui,p],[Vi,f],[Gi,_],[Yi,p],[Qi,p],[Xi,m],[qi,m],[Zi,_],[Ji,p],[ea,p],[ta,g],[ra,p],[sa,p],[oa,p],[ca,p],[ha,p],[pa,p],[ia,p],[aa,p],[la,y],[ua,p],[da,p],[Hi,m],[Ki,p]];for(const[e,t]of fa)for(const[n,r]of e.values())w.set(n,t),b.set(r,n),v.set(n,r);const ma=[["CLIPTextModelWithProjection",an,p],["CLIPVisionModelWithProjection",sn,p],["SiglipTextModel",un,p],["SiglipVisionModel",dn,p],["ClapTextModelWithProjection",zi,p],["ClapAudioModelWithProjection",Bi,p]];for(const[e,t,n]of ma)w.set(e,n),b.set(t,e),v.set(e,t);class ga extends Wi{static MODEL_CLASS_MAPPINGS=fa.map((e=>e[0]));static BASE_IF_FAIL=!0}class _a extends Wi{static MODEL_CLASS_MAPPINGS=[Yi]}class ya extends Wi{static MODEL_CLASS_MAPPINGS=[Qi]}class wa extends Wi{static MODEL_CLASS_MAPPINGS=[Xi]}class va extends Wi{static MODEL_CLASS_MAPPINGS=[qi]}class ba extends Wi{static MODEL_CLASS_MAPPINGS=[Hi]}class $a extends Wi{static MODEL_CLASS_MAPPINGS=[Ki]}class xa extends Wi{static MODEL_CLASS_MAPPINGS=[Zi]}class Ca extends Wi{static MODEL_CLASS_MAPPINGS=[Ji]}class Ta extends Wi{static MODEL_CLASS_MAPPINGS=[ea]}class Sa extends Wi{static MODEL_CLASS_MAPPINGS=[ta]}class Ma extends Wi{static MODEL_CLASS_MAPPINGS=[ra]}class ka extends Wi{static MODEL_CLASS_MAPPINGS=[sa]}class Ea extends Wi{static MODEL_CLASS_MAPPINGS=[oa]}class Aa extends Wi{static MODEL_CLASS_MAPPINGS=[ia]}class Ia extends Wi{static MODEL_CLASS_MAPPINGS=[aa]}class Pa extends Wi{static MODEL_CLASS_MAPPINGS=[la]}class Oa extends Wi{static MODEL_CLASS_MAPPINGS=[ua]}class za extends Wi{static MODEL_CLASS_MAPPINGS=[da]}class Ba extends Wi{static MODEL_CLASS_MAPPINGS=[na]}class Ra extends Wi{static MODEL_CLASS_MAPPINGS=[ca]}class Fa extends Wi{static MODEL_CLASS_MAPPINGS=[ha]}class ja extends Wi{static MODEL_CLASS_MAPPINGS=[pa]}class Da extends D{constructor({logits:e,past_key_values:t,encoder_outputs:n,decoder_attentions:r=null,cross_attentions:i=null}){super(),this.logits=e,this.past_key_values=t,this.encoder_outputs=n,this.decoder_attentions=r,this.cross_attentions=i}}class La extends D{constructor({logits:e}){super(),this.logits=e}}class Na extends D{constructor({logits:e}){super(),this.logits=e}}class Wa extends D{constructor({logits:e}){super(),this.logits=e}}class Ua extends D{constructor({start_logits:e,end_logits:t}){super(),this.start_logits=e,this.end_logits=t}}class Va extends D{constructor({logits:e}){super(),this.logits=e}}class Ga extends D{constructor({logits:e,past_key_values:t}){super(),this.logits=e,this.past_key_values=t}}class qa extends D{constructor({alphas:e}){super(),this.alphas=e}}class Ha extends D{constructor({waveform:e,spectrogram:t}){super(),this.waveform=e,this.spectrogram=t}}},"./src/pipelines.js":
/*!**************************!*\
  !*** ./src/pipelines.js ***!
  \**************************/(e,t,n)=>{n.r(t),n.d(t,{AudioClassificationPipeline:()=>T,AutomaticSpeechRecognitionPipeline:()=>M,DepthEstimationPipeline:()=>F,DocumentQuestionAnsweringPipeline:()=>z,FeatureExtractionPipeline:()=>C,FillMaskPipeline:()=>y,ImageClassificationPipeline:()=>E,ImageSegmentationPipeline:()=>A,ImageToImagePipeline:()=>R,ImageToTextPipeline:()=>k,ObjectDetectionPipeline:()=>P,Pipeline:()=>f,QuestionAnsweringPipeline:()=>_,SummarizationPipeline:()=>v,Text2TextGenerationPipeline:()=>w,TextClassificationPipeline:()=>m,TextGenerationPipeline:()=>$,TextToAudioPipeline:()=>B,TokenClassificationPipeline:()=>g,TranslationPipeline:()=>b,ZeroShotAudioClassificationPipeline:()=>S,ZeroShotClassificationPipeline:()=>x,ZeroShotImageClassificationPipeline:()=>I,ZeroShotObjectDetectionPipeline:()=>O,pipeline:()=>L});var r=n(/*! ./tokenizers.js */"./src/tokenizers.js"),i=n(/*! ./models.js */"./src/models.js"),a=n(/*! ./processors.js */"./src/processors.js"),s=n(/*! ./utils/core.js */"./src/utils/core.js"),o=n(/*! ./utils/maths.js */"./src/utils/maths.js"),l=n(/*! ./utils/audio.js */"./src/utils/audio.js"),u=n(/*! ./utils/tensor.js */"./src/utils/tensor.js"),d=n(/*! ./utils/image.js */"./src/utils/image.js");async function c(e){return Array.isArray(e)||(e=[e]),await Promise.all(e.map((e=>d.RawImage.read(e))))}async function h(e,t){return Array.isArray(e)||(e=[e]),await Promise.all(e.map((e=>"string"==typeof e||e instanceof URL?(0,l.read_audio)(e,t):e instanceof Float64Array?new Float32Array(e):e)))}function p(e,t){t&&(e=e.map((e=>0|e)));const[n,r,i,a]=e;return{xmin:n,ymin:r,xmax:i,ymax:a}}class f extends s.Callable{constructor({task:e,model:t,tokenizer:n=null,processor:r=null}){super(),this.task=e,this.model=t,this.tokenizer=n,this.processor=r}async dispose(){await this.model.dispose()}}class m extends f{constructor(e){super(e)}async _call(e,{topk:t=1}={}){const n=this.tokenizer(e,{padding:!0,truncation:!0}),r=await this.model(n),i="multi_label_classification"===this.model.config.problem_type?e=>e.sigmoid().data:e=>(0,o.softmax)(e.data),a=this.model.config.id2label,s=[];for(const e of r.logits){const n=i(e),r=(0,o.getTopItems)(n,t).map((e=>({label:a[e[0]],score:e[1]})));1===t?s.push(...r):s.push(r)}return Array.isArray(e)||1===t?s:s[0]}}class g extends f{constructor(e){super(e)}async _call(e,{ignore_labels:t=["O"]}={}){const n=Array.isArray(e),r=this.tokenizer(n?e:[e],{padding:!0,truncation:!0}),i=(await this.model(r)).logits,a=this.model.config.id2label,s=[];for(let e=0;e<i.dims[0];++e){const n=r.input_ids[e],l=i[e],u=[];for(let e=0;e<l.dims[0];++e){const r=l[e],i=(0,o.max)(r.data)[1],s=a?a[i]:`LABEL_${i}`;if(t.includes(s))continue;const d=this.tokenizer.decode([n[e].item()],{skip_special_tokens:!0});if(""===d)continue;const c=(0,o.softmax)(r.data);u.push({entity:s,score:c[i],index:e,word:d,start:null,end:null})}s.push(u)}return n?s:s[0]}}class _ extends f{constructor(e){super(e)}async _call(e,t,{topk:n=1}={}){const r=this.tokenizer(e,{text_pair:t,padding:!0,truncation:!0}),i=await this.model(r),a=[];for(let e=0;e<i.start_logits.dims[0];++e){const t=r.input_ids[e],l=t.indexOf(this.tokenizer.sep_token_id),u=Array.from((0,o.softmax)(i.start_logits[e].data)).map(((e,t)=>[e,t])).filter((e=>e[1]>l)),d=Array.from((0,o.softmax)(i.end_logits[e].data)).map(((e,t)=>[e,t])).filter((e=>e[1]>l)),c=(0,s.product)(u,d).filter((e=>e[0][1]<=e[1][1])).map((e=>[e[0][1],e[1][1],e[0][0]*e[1][0]])).sort(((e,t)=>t[2]-e[2]));for(let e=0;e<Math.min(c.length,n);++e){const[n,r,i]=c[e],s=[...t].slice(n,r+1),o=this.tokenizer.decode(s,{skip_special_tokens:!0});a.push({answer:o,score:i})}}return 1===n?a[0]:a}}class y extends f{constructor(e){super(e)}async _call(e,{topk:t=5}={}){const n=this.tokenizer(e,{padding:!0,truncation:!0}),r=await this.model(n),i=[];for(let e=0;e<n.input_ids.dims[0];++e){const a=n.input_ids[e],s=a.indexOf(this.tokenizer.mask_token_id);if(-1===s)throw Error(`Mask token (${this.tokenizer.mask_token}) not found in text.`);const l=r.logits[e][s],u=(0,o.getTopItems)((0,o.softmax)(l.data),t);i.push(u.map((e=>{const t=[...a];return t[s]=e[0],{score:e[1],token:e[0],token_str:this.tokenizer.model.vocab[e[0]],sequence:this.tokenizer.decode(t,{skip_special_tokens:!0})}})))}return Array.isArray(e)?i:i[0]}}class w extends f{_key="generated_text";constructor(e){super(e)}async _call(e,t={}){Array.isArray(e)||(e=[e]),this.model.config.prefix&&(e=e.map((e=>this.model.config.prefix+e)));const n=this.model.config.task_specific_params;n&&n[this.task]&&n[this.task].prefix&&(e=e.map((e=>n[this.task].prefix+e)));const r=this.tokenizer,i={padding:!0,truncation:!0};let a;a=this instanceof b&&"_build_translation_inputs"in r?r._build_translation_inputs(e,i,t).input_ids:r(e,i).input_ids;const s=await this.model.generate(a,t);return r.batch_decode(s,{skip_special_tokens:!0}).map((e=>({[this._key]:e})))}}class v extends w{_key="summary_text";constructor(e){super(e)}}class b extends w{_key="translation_text";constructor(e){super(e)}}class $ extends f{constructor(e){super(e)}async _call(e,t={}){const n=Array.isArray(e);n||(e=[e]);const r=t.add_special_tokens??!1;this.tokenizer.padding_side="left";const{input_ids:i,attention_mask:a}=this.tokenizer(e,{add_special_tokens:r,padding:!0,truncation:!0}),s=await this.model.generate(i,t,null,{inputs_attention_mask:a}),o=this.tokenizer.batch_decode(s,{skip_special_tokens:!0}),l=Array.from({length:e.length},(e=>[]));for(let t=0;t<o.length;++t){l[Math.floor(t/s.length*e.length)].push({generated_text:o[t]})}return n||1!==l.length?l:l[0]}}class x extends f{constructor(e){super(e),this.label2id=Object.fromEntries(Object.entries(this.model.config.label2id).map((([e,t])=>[e.toLowerCase(),t]))),this.entailment_id=this.label2id.entailment,void 0===this.entailment_id&&(console.warn("Could not find 'entailment' in label2id mapping. Using 2 as entailment_id."),this.entailment_id=2),this.contradiction_id=this.label2id.contradiction??this.label2id.not_entailment,void 0===this.contradiction_id&&(console.warn("Could not find 'contradiction' in label2id mapping. Using 0 as contradiction_id."),this.contradiction_id=0)}async _call(e,t,{hypothesis_template:n="This example is {}.",multi_label:r=!1}={}){const i=Array.isArray(e);i||(e=[e]),Array.isArray(t)||(t=[t]);const a=t.map((e=>n.replace("{}",e))),s=r||1===t.length,l=[];for(const n of e){const e=[];for(const t of a){const r=this.tokenizer(n,{text_pair:t,padding:!0,truncation:!0}),i=await this.model(r);s?e.push([i.logits.data[this.contradiction_id],i.logits.data[this.entailment_id]]):e.push(i.logits.data[this.entailment_id])}const r=(s?e.map((e=>(0,o.softmax)(e)[1])):(0,o.softmax)(e)).map(((e,t)=>[e,t])).sort(((e,t)=>t[0]-e[0]));l.push({sequence:n,labels:r.map((e=>t[e[1]])),scores:r.map((e=>e[0]))})}return i?l:l[0]}}class C extends f{constructor(e){super(e)}async _call(e,{pooling:t="none",normalize:n=!1}={}){const r=this.tokenizer(e,{padding:!0,truncation:!0}),i=await this.model(r);let a=i.last_hidden_state??i.logits;if("none"===t);else if("mean"===t)a=(0,u.mean_pooling)(a,r.attention_mask);else{if("cls"!==t)throw Error(`Pooling method '${t}' not supported.`);a=a.slice(null,0)}return n&&(a=a.normalize(2,-1)),a}}class T extends f{constructor(e){super(e)}async _call(e,{topk:t=null}={}){const n=!Array.isArray(e),r=this.processor.feature_extractor.config.sampling_rate,i=await h(e,r),a=this.model.config.id2label,s=[];for(const e of i){const n=await this.processor(e),r=(await this.model(n)).logits[0],i=(0,o.getTopItems)((0,o.softmax)(r.data),t).map((e=>({label:a[e[0]],score:e[1]})));1===t?s.push(...i):s.push(i)}return n&&1!==t?s[0]:s}}class S extends f{constructor(e){super(e)}async _call(e,t,{hypothesis_template:n="This is a sound of {}."}={}){const r=!Array.isArray(e);r&&(e=[e]);const i=t.map((e=>n.replace("{}",e))),a=this.tokenizer(i,{padding:!0,truncation:!0}),s=this.processor.feature_extractor.config.sampling_rate,l=await h(e,s),u=[];for(const e of l){const n=await this.processor(e),r=await this.model({...a,...n}),i=(0,o.softmax)(r.logits_per_audio.data);u.push([...i].map(((e,n)=>({score:e,label:t[n]}))))}return r?u[0]:u}}class M extends f{constructor(e){super(e)}async _call(e,t={}){switch(this.model.config.model_type){case"whisper":return this._call_whisper(e,t);case"wav2vec2":case"wav2vec2-bert":case"hubert":return this._call_wav2vec2(e,t);default:throw new Error(`AutomaticSpeechRecognitionPipeline does not support model type '${this.model.config.model_type}'.`)}}async _call_wav2vec2(e,t={}){t.language&&console.warn('`language` parameter is not yet supported for `wav2vec2` models, defaulting to "English".'),t.task&&console.warn('`task` parameter is not yet supported for `wav2vec2` models, defaulting to "transcribe".');const n=!Array.isArray(e);n&&(e=[e]);const r=this.processor.feature_extractor.config.sampling_rate,i=await h(e,r),a=[];for(const e of i){const t=await this.processor(e),n=(await this.model(t)).logits[0],r=[];for(const e of n)r.push((0,o.max)(e.data)[1]);const i=this.tokenizer.decode(r);a.push({text:i})}return n?a[0]:a}async _call_whisper(e,t={}){const n=t.return_timestamps??!1,r=t.chunk_length_s??0,i=t.chunk_callback??null,a=t.force_full_sequences??!1;let l=t.stride_length_s??null;"word"===n&&(t.return_token_timestamps=!0);const u=(0,s.pop)(t,"language",null),d=(0,s.pop)(t,"task",null);if(u||d||n){if(t.forced_decoder_ids)throw new Error("Cannot specify `language`/`task`/`return_timestamps` and `forced_decoder_ids` at the same time.");const e=this.tokenizer.get_decoder_prompt_ids({language:u,task:d,no_timestamps:!n});e.length>0&&(t.forced_decoder_ids=e)}const c=!Array.isArray(e);c&&(e=[e]);const p=this.processor.feature_extractor.config.chunk_length/this.model.config.max_source_positions,f=this.processor.feature_extractor.config.hop_length,m=this.processor.feature_extractor.config.sampling_rate,g=await h(e,m),_=[];for(const e of g){let s=[];if(r>0){if(null===l)l=r/6;else if(r<=l)throw Error("`chunk_length_s` must be larger than `stride_length_s`.");const t=m*r,n=m*l,i=t-2*n;let a=0;for(;a<e.length;){const r=e.subarray(a,a+t),o=await this.processor(r),l=0===a,u=a+i>=e.length;s.push({stride:[r.length,l?0:n,u?0:n],input_features:o.input_features,is_last:u}),a+=i}}else s=[{stride:[e.length,0,0],input_features:(await this.processor(e)).input_features,is_last:!0}];for(const e of s){t.num_frames=Math.floor(e.stride[0]/f);const r=await this.model.generate(e.input_features,t);"word"===n?(e.tokens=r.sequences[0],e.token_timestamps=r.token_timestamps.tolist()[0].map((e=>(0,o.round)(e,2)))):e.tokens=r[0],e.stride=e.stride.map((e=>e/m)),null!==i&&i(e)}const[u,d]=this.tokenizer._decode_asr(s,{time_precision:p,return_timestamps:n,force_full_sequences:a});_.push({text:u,...d})}return c?_[0]:_}}class k extends f{constructor(e){super(e)}async _call(e,t={}){const n=Array.isArray(e),r=await c(e),{pixel_values:i}=await this.processor(r),a=[];for(const e of i){e.dims=[1,...e.dims];const n=await this.model.generate(e,t),r=this.tokenizer.batch_decode(n,{skip_special_tokens:!0}).map((e=>({generated_text:e.trim()})));a.push(r)}return n?a:a[0]}}class E extends f{constructor(e){super(e)}async _call(e,{topk:t=1}={}){const n=Array.isArray(e),r=await c(e),{pixel_values:i}=await this.processor(r),a=await this.model({pixel_values:i}),s=this.model.config.id2label,l=[];for(const e of a.logits){const n=(0,o.getTopItems)((0,o.softmax)(e.data),t).map((e=>({label:s[e[0]],score:e[1]})));1===t?l.push(...n):l.push(n)}return n||1===t?l:l[0]}}class A extends f{constructor(e){super(e),this.subtasks_mapping={panoptic:"post_process_panoptic_segmentation",instance:"post_process_instance_segmentation",semantic:"post_process_semantic_segmentation"}}async _call(e,{threshold:t=.5,mask_threshold:n=.5,overlap_mask_area_threshold:r=.8,label_ids_to_fuse:i=null,target_sizes:a=null,subtask:s=null}={}){if(Array.isArray(e)&&1!==e.length)throw Error("Image segmentation pipeline currently only supports a batch size of 1.");const o=await c(e),l=o.map((e=>[e.height,e.width])),{pixel_values:u,pixel_mask:h}=await this.processor(o),p=await this.model({pixel_values:u,pixel_mask:h});let f=null;if(null!==s)f=this.subtasks_mapping[s];else for(let[e,t]of Object.entries(this.subtasks_mapping))if(t in this.processor.feature_extractor){f=this.processor.feature_extractor[t].bind(this.processor.feature_extractor),s=e;break}const m=this.model.config.id2label,g=[];if("panoptic"===s||"instance"===s){const e=f(p,t,n,r,i,a??l)[0],s=e.segmentation;for(const t of e.segments_info){const e=new Uint8ClampedArray(s.data.length);for(let n=0;n<s.data.length;++n)s.data[n]===t.id&&(e[n]=255);const n=new d.RawImage(e,s.dims[1],s.dims[0],1);g.push({score:t.score,label:m[t.label_id],mask:n})}}else{if("semantic"!==s)throw Error(`Subtask ${s} not supported.`);{const{segmentation:e,labels:t}=f(p,a??l)[0];for(const n of t){const t=new Uint8ClampedArray(e.data.length);for(let r=0;r<e.data.length;++r)e.data[r]===n&&(t[r]=255);const r=new d.RawImage(t,e.dims[1],e.dims[0],1);g.push({score:null,label:m[n],mask:r})}}}return g}}class I extends f{constructor(e){super(e)}async _call(e,t,{hypothesis_template:n="This is a photo of {}"}={}){const r=Array.isArray(e),i=await c(e),a=t.map((e=>n.replace("{}",e))),s=this.tokenizer(a,{padding:"siglip"!==this.model.config.model_type||"max_length",truncation:!0}),{pixel_values:l}=await this.processor(i),u=await this.model({...s,pixel_values:l}),d="siglip"===this.model.config.model_type?e=>e.sigmoid().data:e=>(0,o.softmax)(e.data),h=[];for(const e of u.logits_per_image){const n=[...d(e)].map(((e,n)=>({score:e,label:t[n]})));n.sort(((e,t)=>t.score-e.score)),h.push(n)}return r?h:h[0]}}class P extends f{constructor(e){super(e)}async _call(e,{threshold:t=.9,percentage:n=!1}={}){const r=Array.isArray(e);if(r&&1!==e.length)throw Error("Object detection pipeline currently only supports a batch size of 1.");const i=await c(e),a=n?null:i.map((e=>[e.height,e.width])),{pixel_values:s,pixel_mask:o}=await this.processor(i),l=await this.model({pixel_values:s,pixel_mask:o}),u=this.processor.feature_extractor.post_process_object_detection(l,t,a),d=this.model.config.id2label,h=u.map((e=>e.boxes.map(((t,r)=>({score:e.scores[r],label:d[e.classes[r]],box:p(t,!n)})))));return r?h:h[0]}}class O extends f{constructor(e){super(e)}async _call(e,t,{threshold:n=.1,topk:r=null,percentage:i=!1}={}){const a=Array.isArray(e),s=await c(e),o=this.tokenizer(t,{padding:!0,truncation:!0}),l=await this.processor(s),u=[];for(let e=0;e<s.length;++e){const a=s[e],d=i?null:[[a.height,a.width]],c=l.pixel_values[e].unsqueeze_(0),h=await this.model({...o,pixel_values:c}),f=this.processor.feature_extractor.post_process_object_detection(h,n,d,!0)[0];let m=f.boxes.map(((e,n)=>({score:f.scores[n],label:t[f.classes[n]],box:p(e,!i)}))).sort(((e,t)=>t.score-e.score));null!==r&&(m=m.slice(0,r)),u.push(m)}return a?u:u[0]}}class z extends f{constructor(e){super(e)}async _call(e,t,n={}){const r=(await c(e))[0],{pixel_values:i}=await this.processor(r),a=`<s_docvqa><s_question>${t}</s_question><s_answer>`,s=this.tokenizer(a,{add_special_tokens:!1,padding:!0,truncation:!0}).input_ids,o=await this.model.generate(i,{...n,decoder_input_ids:s,max_length:this.model.config.decoder.max_position_embeddings}),l=this.tokenizer.batch_decode(o)[0].match(/<s_answer>(.*?)<\/s_answer>/);let u=null;return l&&l.length>=2&&(u=l[1].trim()),[{answer:u}]}}class B extends f{DEFAULT_VOCODER_ID="Xenova/speecht5_hifigan";constructor(e){super(e),this.vocoder=e.vocoder??null}async _call(e,{speaker_embeddings:t=null}={}){return this.processor?this._call_text_to_spectrogram(e,{speaker_embeddings:t}):this._call_text_to_waveform(e)}async _call_text_to_waveform(e){const t=this.tokenizer(e,{padding:!0,truncation:!0}),{waveform:n}=await this.model(t),r=this.model.config.sampling_rate;return{audio:n.data,sampling_rate:r}}async _call_text_to_spectrogram(e,{speaker_embeddings:t}){if(this.vocoder||(console.log("No vocoder specified, using default HifiGan vocoder."),this.vocoder=await i.AutoModel.from_pretrained(this.DEFAULT_VOCODER_ID,{quantized:!1})),("string"==typeof t||t instanceof URL)&&(t=new Float32Array(await(await fetch(t)).arrayBuffer())),t instanceof Float32Array)t=new u.Tensor("float32",t,[1,t.length]);else if(!(t instanceof u.Tensor))throw new Error("Speaker embeddings must be a `Tensor`, `Float32Array`, `string`, or `URL`.");const{input_ids:n}=this.tokenizer(e,{padding:!0,truncation:!0}),{waveform:r}=await this.model.generate_speech(n,t,{vocoder:this.vocoder}),a=this.processor.feature_extractor.config.sampling_rate;return{audio:r.data,sampling_rate:a}}}class R extends f{constructor(e){super(e)}async _call(e){const t=await c(e),n=await this.processor(t),r=await this.model(n),i=[];for(const e of r.reconstruction){const t=e.squeeze().clamp_(0,1).mul_(255).round_().to("uint8");i.push(d.RawImage.fromTensor(t))}return i.length>1?i:i[0]}}class F extends f{constructor(e){super(e)}async _call(e){const t=await c(e),n=await this.processor(t),{predicted_depth:r}=await this.model(n),i=[];for(let e=0;e<t.length;++e){const n=(0,u.interpolate)(r[e],t[e].size.reverse(),"bilinear",!1),a=n.mul_(255/(0,o.max)(n.data)[0]).to("uint8");i.push({predicted_depth:r[e],depth:d.RawImage.fromTensor(a)})}return i.length>1?i:i[0]}}const j=Object.freeze({"text-classification":{tokenizer:r.AutoTokenizer,pipeline:m,model:i.AutoModelForSequenceClassification,default:{model:"Xenova/distilbert-base-uncased-finetuned-sst-2-english"},type:"text"},"token-classification":{tokenizer:r.AutoTokenizer,pipeline:g,model:i.AutoModelForTokenClassification,default:{model:"Xenova/bert-base-multilingual-cased-ner-hrl"},type:"text"},"question-answering":{tokenizer:r.AutoTokenizer,pipeline:_,model:i.AutoModelForQuestionAnswering,default:{model:"Xenova/distilbert-base-cased-distilled-squad"},type:"text"},"fill-mask":{tokenizer:r.AutoTokenizer,pipeline:y,model:i.AutoModelForMaskedLM,default:{model:"Xenova/bert-base-uncased"},type:"text"},summarization:{tokenizer:r.AutoTokenizer,pipeline:v,model:i.AutoModelForSeq2SeqLM,default:{model:"Xenova/distilbart-cnn-6-6"},type:"text"},translation:{tokenizer:r.AutoTokenizer,pipeline:b,model:i.AutoModelForSeq2SeqLM,default:{model:"Xenova/t5-small"},type:"text"},"text2text-generation":{tokenizer:r.AutoTokenizer,pipeline:w,model:i.AutoModelForSeq2SeqLM,default:{model:"Xenova/flan-t5-small"},type:"text"},"text-generation":{tokenizer:r.AutoTokenizer,pipeline:$,model:i.AutoModelForCausalLM,default:{model:"Xenova/gpt2"},type:"text"},"zero-shot-classification":{tokenizer:r.AutoTokenizer,pipeline:x,model:i.AutoModelForSequenceClassification,default:{model:"Xenova/distilbert-base-uncased-mnli"},type:"text"},"audio-classification":{pipeline:T,model:i.AutoModelForAudioClassification,processor:a.AutoProcessor,default:{model:"Xenova/wav2vec2-base-superb-ks"},type:"audio"},"zero-shot-audio-classification":{tokenizer:r.AutoTokenizer,pipeline:S,model:i.AutoModel,processor:a.AutoProcessor,default:{model:"Xenova/clap-htsat-unfused"},type:"multimodal"},"automatic-speech-recognition":{tokenizer:r.AutoTokenizer,pipeline:M,model:[i.AutoModelForSpeechSeq2Seq,i.AutoModelForCTC],processor:a.AutoProcessor,default:{model:"Xenova/whisper-tiny.en"},type:"multimodal"},"text-to-audio":{tokenizer:r.AutoTokenizer,pipeline:B,model:[i.AutoModelForTextToWaveform,i.AutoModelForTextToSpectrogram],processor:[a.AutoProcessor,null],default:{model:"Xenova/speecht5_tts"},type:"text"},"image-to-text":{tokenizer:r.AutoTokenizer,pipeline:k,model:i.AutoModelForVision2Seq,processor:a.AutoProcessor,default:{model:"Xenova/vit-gpt2-image-captioning"},type:"multimodal"},"image-classification":{pipeline:E,model:i.AutoModelForImageClassification,processor:a.AutoProcessor,default:{model:"Xenova/vit-base-patch16-224"},type:"multimodal"},"image-segmentation":{pipeline:A,model:[i.AutoModelForImageSegmentation,i.AutoModelForSemanticSegmentation],processor:a.AutoProcessor,default:{model:"Xenova/detr-resnet-50-panoptic"},type:"multimodal"},"zero-shot-image-classification":{tokenizer:r.AutoTokenizer,pipeline:I,model:i.AutoModel,processor:a.AutoProcessor,default:{model:"Xenova/clip-vit-base-patch32"},type:"multimodal"},"object-detection":{pipeline:P,model:i.AutoModelForObjectDetection,processor:a.AutoProcessor,default:{model:"Xenova/detr-resnet-50"},type:"multimodal"},"zero-shot-object-detection":{tokenizer:r.AutoTokenizer,pipeline:O,model:i.AutoModelForZeroShotObjectDetection,processor:a.AutoProcessor,default:{model:"Xenova/owlvit-base-patch32"},type:"multimodal"},"document-question-answering":{tokenizer:r.AutoTokenizer,pipeline:z,model:i.AutoModelForDocumentQuestionAnswering,processor:a.AutoProcessor,default:{model:"Xenova/donut-base-finetuned-docvqa"},type:"multimodal"},"image-to-image":{pipeline:R,model:i.AutoModelForImageToImage,processor:a.AutoProcessor,default:{model:"Xenova/swin2SR-classical-sr-x2-64"},type:"image"},"depth-estimation":{pipeline:F,model:i.AutoModelForDepthEstimation,processor:a.AutoProcessor,default:{model:"Xenova/dpt-large"},type:"image"},"feature-extraction":{tokenizer:r.AutoTokenizer,pipeline:C,model:i.AutoModel,default:{model:"Xenova/all-MiniLM-L6-v2"},type:"text"}}),D=Object.freeze({"sentiment-analysis":"text-classification",ner:"token-classification",asr:"automatic-speech-recognition","text-to-speech":"text-to-audio",embeddings:"feature-extraction"});async function L(e,t=null,{quantized:n=!0,progress_callback:r=null,config:i=null,cache_dir:a=null,local_files_only:o=!1,revision:l="main",session_options:u={}}={}){e=D[e]??e;const d=j[e.split("_",1)[0]];if(!d)throw Error(`Unsupported pipeline: ${e}. Must be one of [${Object.keys(j)}]`);t||(t=d.default.model,console.log(`No model specified. Using default model: "${t}".`));const c={quantized:n,progress_callback:r,config:i,cache_dir:a,local_files_only:o,revision:l,session_options:u},h=new Map([["tokenizer",d.tokenizer],["model",d.model],["processor",d.processor]]),p=await async function(e,t,n){const r=Object.create(null),i=[];for(let[a,s]of e.entries()){if(!s)continue;let e;e=Array.isArray(s)?new Promise((async(e,r)=>{let i;for(let r of s){if(null===r)return void e(null);try{return void e(await r.from_pretrained(t,n))}catch(e){i=e}}r(i)})):s.from_pretrained(t,n),r[a]=e,i.push(e)}await Promise.all(i);for(let[e,t]of Object.entries(r))r[e]=await t;return r}(h,t,c);p.task=e,(0,s.dispatchCallback)(r,{status:"ready",task:e,model:t});return new(0,d.pipeline)(p)}},"./src/processors.js":
/*!***************************!*\
  !*** ./src/processors.js ***!
  \***************************/(e,t,n)=>{n.r(t),n.d(t,{ASTFeatureExtractor:()=>N,AutoProcessor:()=>Q,BeitFeatureExtractor:()=>A,BitImageProcessor:()=>_,CLIPFeatureExtractor:()=>v,ChineseCLIPFeatureExtractor:()=>b,ClapFeatureExtractor:()=>W,ConvNextFeatureExtractor:()=>x,ConvNextImageProcessor:()=>C,DPTFeatureExtractor:()=>y,DPTImageProcessor:()=>g,DeiTFeatureExtractor:()=>E,DetrFeatureExtractor:()=>O,DonutFeatureExtractor:()=>I,FeatureExtractor:()=>p,GLPNFeatureExtractor:()=>w,ImageFeatureExtractor:()=>f,MobileViTFeatureExtractor:()=>M,NougatImageProcessor:()=>P,OwlViTFeatureExtractor:()=>k,OwlViTProcessor:()=>Y,Processor:()=>V,SamImageProcessor:()=>B,SamProcessor:()=>G,SeamlessM4TFeatureExtractor:()=>L,SegformerFeatureExtractor:()=>m,SiglipImageProcessor:()=>$,SpeechT5FeatureExtractor:()=>U,SpeechT5Processor:()=>K,Swin2SRImageProcessor:()=>R,ViTFeatureExtractor:()=>T,ViTImageProcessor:()=>S,VitMatteImageProcessor:()=>F,Wav2Vec2FeatureExtractor:()=>D,Wav2Vec2ProcessorWithLM:()=>H,WhisperFeatureExtractor:()=>j,WhisperProcessor:()=>q,YolosFeatureExtractor:()=>z});var r=n(/*! ./utils/core.js */"./src/utils/core.js"),i=n(/*! ./utils/hub.js */"./src/utils/hub.js"),a=n(/*! ./utils/maths.js */"./src/utils/maths.js"),s=n(/*! ./utils/tensor.js */"./src/utils/tensor.js"),o=(n(/*! ./utils/image.js */"./src/utils/image.js"),n(/*! ./utils/audio.js */"./src/utils/audio.js"));function l([e,t,n,r]){return[e-n/2,t-r/2,e+n/2,t+r/2]}function u(e,t=.5,n=null,r=!1){const i=e.logits,s=e.pred_boxes,[o,u,d]=i.dims;if(null!==n&&n.length!==o)throw Error("Make sure that you pass in as many target sizes as the batch dimension of the logits");let c=[];for(let e=0;e<o;++e){let o=null!==n?n[e]:null,h={boxes:[],classes:[],scores:[]},p=i[e],f=s[e];for(let e=0;e<u;++e){let n,i=p[e],s=[];if(r){n=i.sigmoid().data;for(let e=0;e<n.length;++e)n[e]>t&&s.push(e)}else{let e=(0,a.max)(i.data)[1];if(e===d-1)continue;s.push(e),n=(0,a.softmax)(i.data)}for(const t of s){let r=f[e].data;r=l(r),null!==o&&(r=r.map(((e,t)=>e*o[(t+1)%2]))),h.boxes.push(r),h.classes.push(t),h.scores.push(n[t])}}c.push(h)}return c}function d(e,t){if(!(e instanceof Float32Array||e instanceof Float64Array))throw new Error(`${t} expects input to be a Float32Array or a Float64Array, but got ${e?.constructor?.name??typeof e} instead.If using the feature extractor directly, remember to use \`read_audio(url, sampling_rate)\` to obtain the raw audio data of the file/url.`)}function c(e,t,n=0,r=null){let i=Math.round(e/t)*t;return null!==r&&i>r&&(i=Math.floor(e/t)*t),i<n&&(i=Math.ceil(e/t)*t),i}function h([e,t],n){return[Math.floor(e/n)*n,Math.floor(t/n)*n]}class p extends r.Callable{constructor(e){super(),this.config=e}}class f extends p{constructor(e){super(e),this.image_mean=this.config.image_mean??this.config.mean,this.image_std=this.config.image_std??this.config.std,this.resample=this.config.resample??2,this.do_rescale=this.config.do_rescale??!0,this.rescale_factor=this.config.rescale_factor??1/255,this.do_normalize=this.config.do_normalize,this.do_resize=this.config.do_resize,this.do_thumbnail=this.config.do_thumbnail,this.size=this.config.size,this.size_divisibility=this.config.size_divisibility??this.config.size_divisor,this.do_center_crop=this.config.do_center_crop,this.crop_size=this.config.crop_size,this.do_convert_rgb=this.config.do_convert_rgb??!0,this.do_crop_margin=this.config.do_crop_margin,this.pad_size=this.config.pad_size,this.do_pad=this.config.do_pad,this.do_pad&&!this.pad_size&&this.size&&void 0!==this.size.width&&void 0!==this.size.height&&(this.pad_size=this.size)}async thumbnail(e,t,n=2){const r=e.height,i=e.width,a=t.height,s=t.width;let o=Math.min(r,a),l=Math.min(i,s);return o===r&&l===i?e:(r>i?l=Math.floor(i*o/r):i>r&&(o=Math.floor(r*l/i)),await e.resize(l,o,{resample:n}))}async crop_margin(e,t=200){const n=e.clone().grayscale(),r=(0,a.min)(n.data)[0],i=(0,a.max)(n.data)[0]-r;if(0===i)return e;const s=t/255;let o=n.width,l=n.height,u=0,d=0;for(let e=0;e<n.height;++e){const t=e*n.width;for(let a=0;a<n.width;++a)(n.data[t+a]-r)/i<s&&(o=Math.min(o,a),l=Math.min(l,e),u=Math.max(u,a),d=Math.max(d,e))}return e=await e.crop([o,l,u,d])}pad_image(e,t,n,{mode:i="constant",center:a=!1,constant_values:s=0}={}){const[o,l,u]=t;let d,c;if("number"==typeof n?(d=n,c=n):(d=n.width,c=n.height),d!==o||c!==l){const n=new Float32Array(d*c*u);if(Array.isArray(s))for(let e=0;e<n.length;++e)n[e]=s[e%u];else 0!==s&&n.fill(s);const[h,p]=a?[Math.floor((d-o)/2),Math.floor((c-l)/2)]:[0,0];for(let t=0;t<l;++t){const r=(t+p)*d,i=t*o;for(let t=0;t<o;++t){const a=(r+t+h)*u,s=(i+t)*u;for(let t=0;t<u;++t)n[a+t]=e[s+t]}}if("symmetric"===i){if(a)throw new Error("`center` padding is not supported when `mode` is set to `symmetric`.");const t=l-1,i=o-1;for(let a=0;a<c;++a){const s=a*d,c=(0,r.calculateReflectOffset)(a,t)*o;for(let t=0;t<d;++t){if(a<l&&t<o)continue;const d=(s+t)*u,h=(c+(0,r.calculateReflectOffset)(t,i))*u;for(let t=0;t<u;++t)n[d+t]=e[h+t]}}}e=n,t=[c,d,u]}return[e,t]}rescale(e){for(let t=0;t<e.length;++t)e[t]=this.rescale_factor*e[t]}get_resize_output_image_size(e,t){const[n,r]=e.size;let i,a;if(this.do_thumbnail){const{height:e,width:n}=t;i=Math.min(e,n)}else Number.isInteger(t)?(i=t,a=this.config.max_size??i):void 0!==t&&(i=t.shortest_edge,a=t.longest_edge);if(void 0!==i||void 0!==a){const e=void 0===i?1:Math.max(i/n,i/r),t=n*e,s=r*e,o=void 0===a?1:Math.min(a/t,a/s);let l=Math.floor(Number((t*o).toFixed(2))),u=Math.floor(Number((s*o).toFixed(2)));return void 0!==this.size_divisibility&&([l,u]=h([l,u],this.size_divisibility)),[l,u]}if(void 0!==t&&void 0!==t.width&&void 0!==t.height){let e=t.width,i=t.height;if(this.config.keep_aspect_ratio&&this.config.ensure_multiple_of){let a=t.height/r,s=t.width/n;Math.abs(1-s)<Math.abs(1-a)?a=s:s=a,i=c(a*r,this.config.ensure_multiple_of),e=c(s*n,this.config.ensure_multiple_of)}return[e,i]}if(void 0!==this.size_divisibility)return h([n,r],this.size_divisibility);throw new Error(`Could not resize image due to unsupported \`this.size\` option in config: ${JSON.stringify(t)}`)}async resize(e){const[t,n]=this.get_resize_output_image_size(e,this.size);return await e.resize(t,n,{resample:this.resample})}async preprocess(e,{do_normalize:t=null,do_pad:n=null,do_convert_rgb:r=null,do_convert_grayscale:i=null}={}){this.do_crop_margin&&(e=await this.crop_margin(e));const[a,o]=e.size;if(r??this.do_convert_rgb?e=e.rgb():i&&(e=e.grayscale()),this.do_resize&&(e=await this.resize(e)),this.do_thumbnail&&(e=await this.thumbnail(e,this.size,this.resample)),this.do_center_crop){let t,n;Number.isInteger(this.crop_size)?(t=this.crop_size,n=this.crop_size):(t=this.crop_size.width,n=this.crop_size.height),e=await e.center_crop(t,n)}const l=[e.height,e.width];let u=Float32Array.from(e.data),d=[e.height,e.width,e.channels];if(this.do_rescale&&this.rescale(u),t??this.do_normalize){let t=this.image_mean;Array.isArray(this.image_mean)||(t=new Array(e.channels).fill(t));let n=this.image_std;if(Array.isArray(this.image_std)||(n=new Array(e.channels).fill(t)),t.length!==e.channels||n.length!==e.channels)throw new Error(`When set to arrays, the length of \`image_mean\` (${t.length}) and \`image_std\` (${n.length}) must match the number of channels in the image (${e.channels}).`);for(let t=0;t<u.length;t+=e.channels)for(let n=0;n<e.channels;++n)u[t+n]=(u[t+n]-this.image_mean[n])/this.image_std[n]}if(n??(this.do_pad&&this.pad_size)){const t=this.pad_image(u,[e.width,e.height,e.channels],this.pad_size);[u,d]=t}const c=new s.Tensor("float32",u,d);return{original_size:[o,a],reshaped_input_size:l,pixel_values:(0,s.transpose)(c,[2,0,1])}}async _call(e,...t){Array.isArray(e)||(e=[e]);const n=await Promise.all(e.map((e=>this.preprocess(e))));return{pixel_values:(0,s.stack)(n.map((e=>e.pixel_values)),0),original_sizes:n.map((e=>e.original_size)),reshaped_input_sizes:n.map((e=>e.reshaped_input_size))}}}class m extends f{post_process_semantic_segmentation(e,t=null){const n=e.logits,r=n.dims[0];if(null!==t&&t.length!==r)throw Error("Make sure that you pass in as many target sizes as the batch dimension of the logits");const i=[];for(let e=0;e<r;++e){const r=null!==t?t[e]:null;let a=n[e];null!==r&&(a=(0,s.interpolate)(a,r,"bilinear",!1));const[o,l]=r??a.dims.slice(-2),u=new s.Tensor("int32",new Int32Array(o*l),[o,l]),d=a[0].data;for(let e=1;e<a.dims[0];++e){const t=a[e].data;for(let n=0;n<t.length;++n)t[n]>d[n]&&(d[n]=t[n],u.data[n]=e)}const c=new Array(a.dims[0]),h=u.data;for(let e=0;e<h.length;++e){const t=h[e];c[t]=t}const p=c.filter((e=>void 0!==e));i.push({segmentation:u,labels:p})}return i}}class g extends f{}class _ extends f{}class y extends f{}class w extends f{}class v extends f{}class b extends f{}class $ extends f{}class x extends f{constructor(e){super(e),this.crop_pct=this.config.crop_pct??.875}async resize(e){const t=this.size?.shortest_edge;if(void 0===t)throw new Error("Size dictionary must contain 'shortest_edge' key.");if(t<384){const n=Math.floor(t/this.crop_pct),[r,i]=this.get_resize_output_image_size(e,{shortest_edge:n});e=await e.resize(r,i,{resample:this.resample}),e=await e.center_crop(t,t)}else e=await e.resize(t,t,{resample:this.resample});return e}}class C extends x{}class T extends f{}class S extends f{}class M extends f{}class k extends f{post_process_object_detection(...e){return u(...e)}}class E extends f{}class A extends f{}class I extends f{pad_image(e,t,n,r={}){const[i,a,s]=t;let o=this.image_mean;Array.isArray(this.image_mean)||(o=new Array(s).fill(o));let l=this.image_std;Array.isArray(l)||(l=new Array(s).fill(o));const u=o.map(((e,t)=>-e/this.image_std[t]));return super.pad_image(e,t,n,{center:!0,constant_values:u,...r})}}class P extends I{}class O extends f{async _call(e){const t=await super._call(e),n=[t.pixel_values.dims[0],64,64],r=new s.Tensor("int64",new BigInt64Array(n.reduce(((e,t)=>e*t))).fill(1n),n);return{...t,pixel_mask:r}}post_process_object_detection(...e){return u(...e)}remove_low_and_no_objects(e,t,n,r){let i=[],s=[],o=[];for(let l=0;l<e.dims[0];++l){let u=e[l],d=t[l],c=(0,a.max)(u.data)[1];if(c===r)continue;let h=(0,a.softmax)(u.data)[c];h>n&&(i.push(d),s.push(h),o.push(c))}return[i,s,o]}check_segment_validity(e,t,n,r=.5,i=.8){let a=[],s=0,o=0;for(let i=0;i<e.length;++i)e[i]===n&&(a.push(i),++s),t[n].data[i]>=r&&++o;let l=s>0&&o>0;if(l){l=s/o>i}return[l,a]}compute_segments(e,t,n,r,i,a=null,o=null){let[l,u]=o??e[0].dims,d=new s.Tensor("int32",new Int32Array(l*u),[l,u]),c=[];if(null!==o)for(let t=0;t<e.length;++t)e[t]=(0,s.interpolate)(e[t],o,"bilinear",!1);let h=new Int32Array(e[0].data.length),p=new Float32Array(e[0].data.length);for(let n=0;n<e.length;++n){let r=t[n];for(let t=0;t<e[n].data.length;++t)e[n].data[t]*=r,e[n].data[t]>p[t]&&(h[t]=n,p[t]=e[n].data[t])}let f=0;for(let a=0;a<n.length;++a){let s=n[a],[o,l]=this.check_segment_validity(h,e,a,r,i);if(o){++f;for(let e of l)d.data[e]=f;c.push({id:f,label_id:s,score:t[a]})}}return[d,c]}post_process_panoptic_segmentation(e,t=.5,n=.5,r=.8,i=null,a=null){null===i&&(console.warn("`label_ids_to_fuse` unset. No instance will be fused."),i=new Set);const o=e.logits,l=e.pred_masks.sigmoid();let[u,d,c]=o.dims;if(c-=1,null!==a&&a.length!==u)throw Error("Make sure that you pass in as many target sizes as the batch dimension of the logits");let h=[];for(let e=0;e<u;++e){let u=null!==a?a[e]:null,d=o[e],p=l[e],[f,m,g]=this.remove_low_and_no_objects(d,p,t,c);if(0===g.length){let[e,t]=u??p.dims.slice(-2),n=new s.Tensor("int32",new Int32Array(e*t).fill(-1),[e,t]);h.push({segmentation:n,segments_info:[]});continue}let[_,y]=this.compute_segments(f,m,g,n,r,i,u);h.push({segmentation:_,segments_info:y})}return h}post_process_instance_segmentation(){throw Error("Not implemented yet")}}class z extends f{post_process_object_detection(...e){return u(...e)}}class B extends f{reshape_input_points(e,t,n){e=structuredClone(e);let i=(0,r.calculateDimensions)(e);if(3===i.length)i=[1,...i],e=[e];else if(4!==i.length)throw Error("The input_points must be a 4D tensor of shape `batch_size`, `point_batch_size`, `nb_points_per_image`, `2`.");for(let r=0;r<e.length;++r){let i=t[r],a=n[r],s=[a[0]/i[0],a[1]/i[1]];for(let t=0;t<e[r].length;++t)for(let n=0;n<e[r][t].length;++n)for(let i=0;i<e[r][t][n].length;++i)e[r][t][n][i]*=s[i]}return new s.Tensor("float32",Float32Array.from(e.flat(1/0)),i)}add_input_labels(e,t){let n=(0,r.calculateDimensions)(e);if(2===n.length)n=[1,...n],e=[e];else if(3!==n.length)throw Error("The input_points must be a 4D tensor of shape `batch_size`, `point_batch_size`, `nb_points_per_image`, `2`.");if(n.some(((e,n)=>e!==t.dims[n])))throw Error(`The first ${n.length} dimensions of 'input_points' and 'input_labels' must be the same.`);return new s.Tensor("int64",e.flat(1/0).map(BigInt),n)}async _call(e,t=null,n=null){const r=await super._call(e);if(t&&(r.input_points=this.reshape_input_points(t,r.original_sizes,r.reshaped_input_sizes)),n){if(!r.input_points)throw Error("`input_points` must be provided if `input_labels` are provided.");r.input_labels=this.add_input_labels(n,r.input_points)}return r}post_process_masks(e,t,n,{mask_threshold:r=0,binarize:i=!0,pad_size:a=null}={}){const o=[],l=[(a=a??this.pad_size).height,a.width];for(let a=0;a<t.length;++a){const u=t[a],d=n[a],c=e[a],h=[];for(let e=0;e<c.dims[0];++e){const t=c[e];let n=(0,s.interpolate)(t,l,"bilinear",!1);if(n=n.slice(null,[0,d[0]],[0,d[1]]),n=(0,s.interpolate)(n,u,"bilinear",!1),i){const e=new Uint8Array(n.data.length);for(let t=0;t<n.data.length;++t)n.data[t]>r&&(e[t]=1);n=new s.Tensor("bool",e,n.dims)}h.push(n)}o.push((0,s.stack)(h))}return o}}class R extends f{pad_image(e,t,n,r={}){const[i,a,s]=t;return super.pad_image(e,t,{width:i+(n-i%n)%n,height:a+(n-a%n)%n},{mode:"symmetric",center:!1,constant_values:-1,...r})}}class F extends f{async _call(e,t){Array.isArray(e)||(e=[e]),Array.isArray(t)||(t=[t]);const n=await Promise.all(e.map((e=>this.preprocess(e)))),r=await Promise.all(t.map((e=>this.preprocess(e,{do_normalize:!1,do_convert_rgb:!1,do_convert_grayscale:!0}))));return{pixel_values:(0,s.stack)(n.map(((e,t)=>(0,s.cat)([e.pixel_values,r[t].pixel_values],0))),0),original_sizes:n.map((e=>e.original_size)),reshaped_input_sizes:n.map((e=>e.reshaped_input_size))}}}class j extends p{constructor(e){super(e),this.config.mel_filters??=(0,o.mel_filter_bank)(Math.floor(1+this.config.n_fft/2),this.config.feature_size,0,8e3,this.config.sampling_rate,"slaney","slaney"),this.window=(0,o.window_function)(this.config.n_fft,"hann")}_extract_fbank_features(e){const{data:t,dims:n}=(0,o.spectrogram)(e,this.window,this.config.n_fft,this.config.hop_length,{power:2,mel_filters:this.config.mel_filters,log_mel:"log10",max_num_frames:this.config.nb_max_frames}),r=(0,a.max)(t)[0];for(let e=0;e<t.length;++e)t[e]=(Math.max(t[e],r-8)+4)/4;return{data:t,dims:n}}async _call(e){let t;d(e,"WhisperFeatureExtractor"),e.length>this.config.n_samples?(console.warn("Attempting to extract features for audio longer than 30 seconds. If using a pipeline to extract transcript from a long audio clip, remember to specify `chunk_length_s` and/or `stride_length_s`."),t=e.slice(0,this.config.n_samples)):(t=new Float32Array(this.config.n_samples),t.set(e));const{data:n,dims:r}=this._extract_fbank_features(t);return{input_features:new s.Tensor("float32",n,[1,...r])}}}class D extends p{_zero_mean_unit_var_norm(e){const t=e.reduce(((e,t)=>e+t),0)/e.length,n=e.reduce(((e,n)=>e+(n-t)**2),0)/e.length;return e.map((e=>(e-t)/Math.sqrt(n+1e-7)))}async _call(e){d(e,"Wav2Vec2FeatureExtractor"),e instanceof Float64Array&&(e=new Float32Array(e));let t=e;this.config.do_normalize&&(t=this._zero_mean_unit_var_norm(t));const n=[1,t.length];return{input_values:new s.Tensor("float32",t,n),attention_mask:new s.Tensor("int64",new BigInt64Array(t.length).fill(1n),n)}}}class L extends p{constructor(e){super(e);const t=this.config.sampling_rate,n=(0,o.mel_filter_bank)(256,this.config.num_mel_bins,20,Math.floor(t/2),t,null,"kaldi",!0);for(let e=0;e<n.length;++e)n[e].push(0);this.mel_filters=n,this.window=(0,o.window_function)(400,"povey",{periodic:!1})}_extract_fbank_features(e,t){return e=e.map((e=>32768*e)),(0,o.spectrogram)(e,this.window,400,160,{fft_length:512,power:2,center:!1,preemphasis:.97,mel_filters:this.mel_filters,log_mel:"log",mel_floor:1.192092955078125e-7,remove_dc_offset:!0,max_num_frames:t,transpose:!0})}async _call(e,{padding:t=!0,pad_to_multiple_of:n=2,do_normalize_per_mel_bins:r=!0,return_attention_mask:i=!0}={}){d(e,"SeamlessM4TFeatureExtractor");let a,o=this._extract_fbank_features(e,this.config.max_length);if(r){const[e,t]=o.dims;for(let n=0;n<t;++n){let r=0;for(let i=0;i<e;++i)r+=o.data[i*t+n];const i=r/e;let a=0;for(let r=0;r<e;++r)a+=(o.data[r*t+n]-i)**2;a/=e-1;const s=Math.sqrt(a+1e-7);for(let r=0;r<e;++r){const e=r*t+n;o.data[e]=(o.data[e]-i)/s}}}if(t){const[e,t]=o.dims,r=e%n;if(r>0){const n=new Float32Array(t*(e+r));n.set(o.data),n.fill(this.config.padding_value,o.data.length);const l=e+r;o={data:n,dims:[l,t]},i&&(a=new s.Tensor("int64",new BigInt64Array(l),[1,l]),a.data.fill(1n,0,e))}}const[l,u]=o.dims,c=this.config.stride;if(0!==l%c)throw new Error(`The number of frames (${l}) must be a multiple of the stride (${c}).`);const h=new s.Tensor("float32",o.data,o.dims).view(1,Math.floor(l/c),u*c),p={input_features:h};if(i){const e=h.dims[1],t=new s.Tensor("int64",new BigInt64Array(e),[1,e]);if(a)for(let e=1,n=0;e<l;e+=c,++n)t.data[n]=a.data[e];else t.data.fill(1n);p.attention_mask=t}return p}}class N extends p{constructor(e){super(e);const t=this.config.sampling_rate,n=(0,o.mel_filter_bank)(256,this.config.num_mel_bins,20,Math.floor(t/2),t,null,"kaldi",!0);for(let e=0;e<n.length;++e)n[e].push(0);this.mel_filters=n,this.window=(0,o.window_function)(400,"hann",{periodic:!1}),this.mean=this.config.mean,this.std=this.config.std}_extract_fbank_features(e,t){return(0,o.spectrogram)(e,this.window,400,160,{fft_length:512,power:2,center:!1,preemphasis:.97,mel_filters:this.mel_filters,log_mel:"log",mel_floor:1.192092955078125e-7,remove_dc_offset:!0,max_num_frames:t,transpose:!0})}async _call(e){d(e,"ASTFeatureExtractor");const t=this._extract_fbank_features(e,this.config.max_length);if(this.config.do_normalize){const e=2*this.std;for(let n=0;n<t.data.length;++n)t.data[n]=(t.data[n]-this.mean)/e}return{input_values:new s.Tensor("float32",t.data,[1,...t.dims])}}}class W extends p{constructor(e){super(e),this.mel_filters=(0,o.mel_filter_bank)(this.config.nb_frequency_bins,this.config.feature_size,this.config.frequency_min,this.config.frequency_max,this.config.sampling_rate,null,"htk"),this.mel_filters_slaney=(0,o.mel_filter_bank)(this.config.nb_frequency_bins,this.config.feature_size,this.config.frequency_min,this.config.frequency_max,this.config.sampling_rate,"slaney","slaney"),this.window=(0,o.window_function)(this.config.fft_window_size,"hann")}_get_input_mel(e,t,n,r){let i,a=!1;const s=e.length-t;if(s>0){if("rand_trunc"!==n)throw new Error(`Truncation strategy "${n}" not implemented`);{a=!0;const n=Math.floor(Math.random()*(s+1));e=e.subarray(n,n+t),i=this._extract_fbank_features(e,this.mel_filters_slaney,this.config.nb_max_samples),i.dims=[1,...i.dims]}}else{if(s<0){let n=new Float64Array(t);if(n.set(e),"repeat"===r)for(let r=e.length;r<t;r+=e.length)n.set(e.subarray(0,Math.min(e.length,t-r)),r);else if("repeatpad"===r)for(let t=e.length;t<-s;t+=e.length)n.set(e,t);e=n}if("fusion"===n)throw new Error(`Truncation strategy "${n}" not implemented`);i=this._extract_fbank_features(e,this.mel_filters_slaney,this.config.nb_max_samples),i.dims=[1,...i.dims]}return{...i,longer:a}}_extract_fbank_features(e,t,n=null){return(0,o.spectrogram)(e,this.window,this.config.fft_window_size,this.config.hop_length,{power:2,mel_filters:t,log_mel:"dB",max_num_frames:n,do_pad:!1,transpose:!0})}async _call(e,{max_length:t=null}={}){d(e,"ClapFeatureExtractor");const n=this._get_input_mel(e,t??this.config.nb_max_samples,this.config.truncation,this.config.padding);return{input_features:new s.Tensor("float32",n.data,[1,...n.dims])}}}class U extends p{}class V extends r.Callable{constructor(e){super(),this.feature_extractor=e}async _call(e,...t){return await this.feature_extractor(e,...t)}}class G extends V{async _call(...e){return await this.feature_extractor(...e)}post_process_masks(...e){return this.feature_extractor.post_process_masks(...e)}reshape_input_points(...e){return this.feature_extractor.reshape_input_points(...e)}}class q extends V{async _call(e){return await this.feature_extractor(e)}}class H extends V{async _call(e){return await this.feature_extractor(e)}}class K extends V{async _call(e){return await this.feature_extractor(e)}}class Y extends V{}class Q{static FEATURE_EXTRACTOR_CLASS_MAPPING={ImageFeatureExtractor:f,WhisperFeatureExtractor:j,ViTFeatureExtractor:T,MobileViTFeatureExtractor:M,OwlViTFeatureExtractor:k,CLIPFeatureExtractor:v,ChineseCLIPFeatureExtractor:b,SiglipImageProcessor:$,ConvNextFeatureExtractor:x,ConvNextImageProcessor:C,SegformerFeatureExtractor:m,BitImageProcessor:_,DPTImageProcessor:g,DPTFeatureExtractor:y,GLPNFeatureExtractor:w,BeitFeatureExtractor:A,DeiTFeatureExtractor:E,DetrFeatureExtractor:O,YolosFeatureExtractor:z,DonutFeatureExtractor:I,NougatImageProcessor:P,ViTImageProcessor:S,VitMatteImageProcessor:F,SamImageProcessor:B,Swin2SRImageProcessor:R,Wav2Vec2FeatureExtractor:D,SeamlessM4TFeatureExtractor:L,SpeechT5FeatureExtractor:U,ASTFeatureExtractor:N,ClapFeatureExtractor:W};static PROCESSOR_CLASS_MAPPING={WhisperProcessor:q,Wav2Vec2ProcessorWithLM:H,SamProcessor:G,SpeechT5Processor:K,OwlViTProcessor:Y};static async from_pretrained(e,{progress_callback:t=null,config:n=null,cache_dir:r=null,local_files_only:a=!1,revision:s="main"}={}){let o=n??await(0,i.getModelJSON)(e,"preprocessor_config.json",!0,{progress_callback:t,config:n,cache_dir:r,local_files_only:a,revision:s}),l=o.feature_extractor_type??o.image_processor_type,u=this.FEATURE_EXTRACTOR_CLASS_MAPPING[l];if(!u){if(void 0===o.size)throw new Error(`Unknown Feature Extractor type: ${l}`);console.warn(`Feature extractor type "${l}" not found, assuming ImageFeatureExtractor due to size parameter in config.`),u=f}return new(this.PROCESSOR_CLASS_MAPPING[o.processor_class]??V)(new u(o))}}},"./src/tokenizers.js":
/*!***************************!*\
  !*** ./src/tokenizers.js ***!
  \***************************/(e,t,n)=>{n.r(t),n.d(t,{AlbertTokenizer:()=>ge,AutoTokenizer:()=>ot,BartTokenizer:()=>Ae,BertTokenizer:()=>me,BlenderbotSmallTokenizer:()=>rt,BlenderbotTokenizer:()=>nt,BloomTokenizer:()=>ze,CLIPTokenizer:()=>Ze,CamembertTokenizer:()=>Te,CodeGenTokenizer:()=>Xe,CodeLlamaTokenizer:()=>Fe,ConvBertTokenizer:()=>$e,DebertaTokenizer:()=>we,DebertaV2Tokenizer:()=>ve,DistilBertTokenizer:()=>Ce,ElectraTokenizer:()=>Me,EsmTokenizer:()=>We,FalconTokenizer:()=>Le,GPT2Tokenizer:()=>Ee,GPTNeoXTokenizer:()=>Ne,HerbertTokenizer:()=>be,LlamaTokenizer:()=>Re,M2M100Tokenizer:()=>qe,MBart50Tokenizer:()=>Pe,MBartTokenizer:()=>Ie,MPNetTokenizer:()=>De,MarianTokenizer:()=>et,MobileBertTokenizer:()=>_e,NllbTokenizer:()=>Ge,NougatTokenizer:()=>at,PreTrainedTokenizer:()=>fe,Qwen2Tokenizer:()=>Ue,RoFormerTokenizer:()=>xe,RobertaTokenizer:()=>Oe,SiglipTokenizer:()=>Je,SpeechT5Tokenizer:()=>it,SqueezeBertTokenizer:()=>ye,T5Tokenizer:()=>ke,TokenizerModel:()=>y,VitsTokenizer:()=>st,Wav2Vec2CTCTokenizer:()=>tt,WhisperTokenizer:()=>Qe,XLMRobertaTokenizer:()=>je,XLMTokenizer:()=>Se});var r=n(/*! ./utils/core.js */"./src/utils/core.js"),i=n(/*! ./utils/hub.js */"./src/utils/hub.js"),a=n(/*! ./utils/maths.js */"./src/utils/maths.js"),s=n(/*! ./utils/tensor.js */"./src/utils/tensor.js"),o=n(/*! ./utils/data-structures.js */"./src/utils/data-structures.js"),l=n(/*! @huggingface/jinja */"./node_modules/@huggingface/jinja/dist/index.js");async function u(e,t){const n=await Promise.all([(0,i.getModelJSON)(e,"tokenizer.json",!0,t),(0,i.getModelJSON)(e,"tokenizer_config.json",!0,t)]);return null!==t.legacy&&(n[1].legacy=t.legacy),n}function d(e,t=!0){if(void 0!==e.Regex){let t=e.Regex.replace(/\\([#&~])/g,"$1");for(const[e,n]of g)t=t.replaceAll(e,n);return new RegExp(t,"gu")}if(void 0!==e.String){const n=(0,r.escapeRegExp)(e.String);return new RegExp(t?n:`(${n})`,"gu")}return console.warn("Unknown pattern type:",e),null}function c(e){return new Map(Object.entries(e))}function h(e){const t=e.dims;switch(t.length){case 1:return e.tolist();case 2:if(1!==t[0])throw new Error("Unable to decode tensor with `batch size !== 1`. Use `tokenizer.batch_decode(...)` for batched inputs.");return e.tolist()[0];default:throw new Error(`Expected tensor to have 1-2 dimensions, got ${t.length}.`)}}function p(e){return e.replace(/ \./g,".").replace(/ \?/g,"?").replace(/ \!/g,"!").replace(/ ,/g,",").replace(/ \' /g,"'").replace(/ n\'t/g,"n't").replace(/ \'m/g,"'m").replace(/ \'s/g,"'s").replace(/ \'ve/g,"'ve").replace(/ \'re/g,"'re")}function f(e){return e.replace(/[\u0300-\u036f]/g,"")}const m="\\p{P}\\u0021-\\u002F\\u003A-\\u0040\\u005B-\\u0060\\u007B-\\u007E",g=new Map([["(?i:'s|'t|'re|'ve|'m|'ll|'d)","(?:'([sS]|[tT]|[rR][eE]|[vV][eE]|[mM]|[lL][lL]|[dD]))"]]);class _{constructor(e){this.content=e.content,this.id=e.id,this.single_word=e.single_word??!1,this.lstrip=e.lstrip??!1,this.rstrip=e.rstrip??!1,this.special=e.special??!1,this.normalized=e.normalized??null}}class y extends r.Callable{constructor(e){super(),this.config=e,this.vocab=[],this.tokens_to_ids=new Map,this.unk_token_id=void 0,this.unk_token=void 0,this.end_of_word_suffix=void 0,this.fuse_unk=this.config.fuse_unk??!1}static fromConfig(e,...t){switch(e.type){case"WordPiece":return new w(e);case"Unigram":return new v(e,...t);case"BPE":return new x(e);default:if(e.vocab)return new C(e,...t);throw new Error(`Unknown TokenizerModel type: ${e.type}`)}}_call(e){let t=this.encode(e);return this.fuse_unk&&(t=function(e,t,n){const r=[];let i=0;for(;i<e.length;)if(r.push(e[i]),(n.get(e[i])??t)===t)for(;i<e.length&&(n.get(e[i])??t)===t;)++i;else++i;return r}(t,this.unk_token_id,this.tokens_to_ids)),t}encode(e){throw Error("encode should be implemented in subclass.")}convert_tokens_to_ids(e){return e.map((e=>this.tokens_to_ids.get(e)??this.unk_token_id))}convert_ids_to_tokens(e){return e.map((e=>this.vocab[e]??this.unk_token))}}class w extends y{constructor(e){super(e),this.tokens_to_ids=c(e.vocab),this.unk_token_id=this.tokens_to_ids.get(e.unk_token),this.unk_token=e.unk_token,this.max_input_chars_per_word=e.max_input_chars_per_word??100,this.vocab=new Array(this.tokens_to_ids.size);for(const[e,t]of this.tokens_to_ids)this.vocab[t]=e}encode(e){const t=[];for(const n of e){const e=[...n];if(e.length>this.max_input_chars_per_word){t.push(this.unk_token);continue}let r=!1,i=0;const a=[];for(;i<e.length;){let t=e.length,n=null;for(;i<t;){let r=e.slice(i,t).join("");if(i>0&&(r=this.config.continuing_subword_prefix+r),this.tokens_to_ids.has(r)){n=r;break}--t}if(null===n){r=!0;break}a.push(n),i=t}r?t.push(this.unk_token):t.push(...a)}return t}}class v extends y{constructor(e,t){super(e);const n=e.vocab.length;this.vocab=new Array(n),this.scores=new Array(n);for(let t=0;t<n;++t){const n=e.vocab[t];this.vocab[t]=n[0],this.scores[t]=n[1]}this.unk_token_id=e.unk_id,this.unk_token=this.vocab[e.unk_id],this.tokens_to_ids=new Map(this.vocab.map(((e,t)=>[e,t]))),this.bosToken=" ",this.bosTokenId=this.tokens_to_ids.get(this.bosToken),this.eosToken=t.eos_token,this.eosTokenId=this.tokens_to_ids.get(this.eosToken),this.unkToken=this.vocab[this.unk_token_id],this.minScore=(0,a.min)(this.scores)[0],this.unkScore=this.minScore-10,this.scores[this.unk_token_id]=this.unkScore,this.trie=new o.CharTrie,this.trie.extend(this.vocab),this.fuse_unk=!0}populateNodes(e){const t=e.sentence,n=t.length;let r=0;for(;r<n;){const n=1;let i=!1;const a=[];for(let s of this.trie.commonPrefixSearch(t.slice(r))){a.push(s);const t=this.tokens_to_ids.get(s),o=this.scores[t],l=s.length;e.insert(r,l,o,t),i||l!==n||(i=!0)}i||e.insert(r,n,this.unkScore,this.unk_token_id),r+=n}}tokenize(e){const t=new o.TokenLattice(e,this.bosTokenId,this.eosTokenId);return this.populateNodes(t),t.tokens()}encode(e){const t=[];for(const n of e){const e=this.tokenize(n);t.push(...e)}return t}}const b=(()=>{const e=[...Array.from({length:"~".charCodeAt(0)-"!".charCodeAt(0)+1},((e,t)=>t+"!".charCodeAt(0))),...Array.from({length:"¬".charCodeAt(0)-"¡".charCodeAt(0)+1},((e,t)=>t+"¡".charCodeAt(0))),...Array.from({length:"ÿ".charCodeAt(0)-"®".charCodeAt(0)+1},((e,t)=>t+"®".charCodeAt(0)))],t=e.slice();let n=0;for(let r=0;r<256;++r)e.includes(r)||(e.push(r),t.push(256+n),n+=1);const r=t.map((e=>String.fromCharCode(e)));return Object.fromEntries(e.map(((e,t)=>[e,r[t]])))})(),$=(0,r.reverseDictionary)(b);class x extends y{constructor(e){super(e),this.BPE_SPLIT_TOKEN=" ",this.tokens_to_ids=c(e.vocab),this.unk_token_id=this.tokens_to_ids.get(e.unk_token),this.unk_token=e.unk_token,this.vocab=new Array(this.tokens_to_ids.size);for(const[e,t]of this.tokens_to_ids)this.vocab[t]=e;this.bpe_ranks=new Map(e.merges.map(((e,t)=>[e,t]))),this.merges=e.merges.map((e=>e.split(this.BPE_SPLIT_TOKEN))),this.end_of_word_suffix=e.end_of_word_suffix,this.continuing_subword_suffix=e.continuing_subword_suffix??null,this.byte_fallback=this.config.byte_fallback??!1,this.byte_fallback&&(this.text_encoder=new TextEncoder),this.cache=new Map}bpe(e){if(0===e.length)return[];const t=this.cache.get(e);if(void 0!==t)return t;const n=Array.from(e);this.end_of_word_suffix&&(n[n.length-1]+=this.end_of_word_suffix);let r=[];if(n.length>1){const e=new o.PriorityQueue(((e,t)=>e.score<t.score));let t={token:n[0],bias:0,prev:null,next:null},i=t;for(let t=1;t<n.length;++t){const r={bias:t/n.length,token:n[t],prev:i,next:null};i.next=r,this._add_node(e,i),i=r}for(;!e.isEmpty();){const n=e.pop();if(n.deleted||!n.next||n.next.deleted)continue;if(n.deleted=!0,n.next.deleted=!0,n.prev){const e={...n.prev};n.prev.deleted=!0,n.prev=e,e.prev?e.prev.next=e:t=e}const r={token:n.token+n.next.token,bias:n.bias,prev:n.prev,next:n.next.next};r.prev?(r.prev.next=r,this._add_node(e,r.prev)):t=r,r.next&&(r.next.prev=r,this._add_node(e,r))}for(let e=t;null!==e;e=e.next)r.push(e.token)}else r=n;if(this.continuing_subword_suffix)for(let e=0;e<r.length-1;++e)r[e]+=this.continuing_subword_suffix;return this.cache.set(e,r),r}_add_node(e,t){const n=this.bpe_ranks.get(t.token+this.BPE_SPLIT_TOKEN+t.next.token);void 0!==n&&(t.score=n+t.bias,e.push(t))}encode(e){const t=[];for(const n of e){const e=this.bpe(n);for(const n of e)this.tokens_to_ids.has(n)?t.push(n):this.byte_fallback?t.push(...Array.from(this.text_encoder.encode(n)).map((e=>`<0x${e.toString(16).toUpperCase().padStart(2,"0")}>`))):t.push(this.unk_token)}return t}}class C extends y{constructor(e,t){super(e),this.tokens_to_ids=c(t.target_lang?e.vocab[t.target_lang]:e.vocab),this.bos_token=t.bos_token,this.bos_token_id=this.tokens_to_ids.get(this.bos_token),this.eos_token=t.eos_token,this.eos_token_id=this.tokens_to_ids.get(this.eos_token),this.pad_token=t.pad_token,this.pad_token_id=this.tokens_to_ids.get(this.pad_token),this.unk_token=t.unk_token,this.unk_token_id=this.tokens_to_ids.get(this.unk_token),this.vocab=new Array(this.tokens_to_ids.size);for(const[e,t]of this.tokens_to_ids)this.vocab[t]=e}encode(e){return e}}class T extends r.Callable{constructor(e){super(),this.config=e}static fromConfig(e){if(null===e)return null;switch(e.type){case"BertNormalizer":return new B(e);case"Precompiled":return new se(e);case"Sequence":return new z(e);case"Replace":return new S(e);case"NFC":return new M(e);case"NFKC":return new k(e);case"NFKD":return new E(e);case"Strip":return new A(e);case"StripAccents":return new I(e);case"Lowercase":return new P(e);case"Prepend":return new O(e);default:throw new Error(`Unknown Normalizer type: ${e.type}`)}}normalize(e){throw Error("normalize should be implemented in subclass.")}_call(e){return this.normalize(e)}}class S extends T{normalize(e){const t=d(this.config.pattern);return null===t?e:e.replaceAll(t,this.config.content)}}class M extends T{normalize(e){return e=e.normalize("NFC")}}class k extends T{normalize(e){return e=e.normalize("NFKC")}}class E extends T{normalize(e){return e=e.normalize("NFKD")}}class A extends T{normalize(e){return this.config.strip_left&&this.config.strip_right?e=e.trim():(this.config.strip_left&&(e=e.trimStart()),this.config.strip_right&&(e=e.trimEnd())),e}}class I extends T{normalize(e){return e=f(e)}}class P extends T{normalize(e){return e=e.toLowerCase()}}class O extends T{normalize(e){return e=this.config.prepend+e}}class z extends T{constructor(e){super(e),this.normalizers=e.normalizers.map((e=>T.fromConfig(e)))}normalize(e){return this.normalizers.reduce(((e,t)=>t.normalize(e)),e)}}class B extends T{_tokenize_chinese_chars(e){const t=[];for(let n=0;n<e.length;++n){const r=e[n],i=r.charCodeAt(0);this._is_chinese_char(i)?(t.push(" "),t.push(r),t.push(" ")):t.push(r)}return t.join("")}_is_chinese_char(e){return e>=19968&&e<=40959||e>=13312&&e<=19903||e>=131072&&e<=173791||e>=173824&&e<=177983||e>=177984&&e<=178207||e>=178208&&e<=183983||e>=63744&&e<=64255||e>=194560&&e<=195103}stripAccents(e){return e.normalize("NFD").replace(/[\u0300-\u036f]/g,"")}_is_control(e){switch(e){case"\t":case"\n":case"\r":return!1;default:return/^\p{Cc}|\p{Cf}|\p{Co}|\p{Cs}$/u.test(e)}}_clean_text(e){const t=[];for(const n of e){const e=n.charCodeAt(0);0===e||65533===e||this._is_control(n)||(/^\s$/.test(n)?t.push(" "):t.push(n))}return t.join("")}normalize(e){return this.config.clean_text&&(e=this._clean_text(e)),this.config.handle_chinese_chars&&(e=this._tokenize_chinese_chars(e)),this.config.lowercase?(e=e.toLowerCase(),!1!==this.config.strip_accents&&(e=this.stripAccents(e))):this.config.strip_accents&&(e=this.stripAccents(e)),e}}class R extends r.Callable{static fromConfig(e){if(null===e)return null;switch(e.type){case"BertPreTokenizer":return new F(e);case"Sequence":return new oe(e);case"Whitespace":return new le(e);case"WhitespaceSplit":return new ue(e);case"Metaspace":return new ie(e);case"ByteLevel":return new j(e);case"Split":return new D(e);case"Punctuation":return new L(e);case"Digits":return new N(e);case"Replace":return new de(e);default:throw new Error(`Unknown PreTokenizer type: ${e.type}`)}}pre_tokenize_text(e,t){throw Error("pre_tokenize_text should be implemented in subclass.")}pre_tokenize(e,t){return(Array.isArray(e)?e.map((e=>this.pre_tokenize_text(e,t))):this.pre_tokenize_text(e,t)).flat()}_call(e,t){return this.pre_tokenize(e,t)}}class F extends R{constructor(e){super(),this.pattern=new RegExp(`[^\\s${m}]+|[${m}]`,"gu")}pre_tokenize_text(e,t){return e.trim().match(this.pattern)||[]}}class j extends R{constructor(e){super(),this.config=e,this.add_prefix_space=this.config.add_prefix_space,this.trim_offsets=this.config.trim_offsets,this.use_regex=this.config.use_regex??!0,this.pattern=/'s|'t|'re|'ve|'m|'ll|'d| ?\p{L}+| ?\p{N}+| ?[^\s\p{L}\p{N}]+|\s+(?!\S)|\s+/gu,this.byte_encoder=b,this.text_encoder=new TextEncoder}pre_tokenize_text(e,t){this.add_prefix_space&&!e.startsWith(" ")&&(e=" "+e);return(this.use_regex?e.match(this.pattern)||[]:[e]).map((e=>Array.from(this.text_encoder.encode(e),(e=>this.byte_encoder[e])).join("")))}}class D extends R{constructor(e){super(),this.config=e,this.pattern=d(this.config.pattern,this.config.invert)}pre_tokenize_text(e,t){return null===this.pattern?[]:this.config.invert?e.match(this.pattern)||[]:function(e,t){const n=[];let r=0;for(const i of e.matchAll(t)){const t=i[0];r<i.index&&n.push(e.slice(r,i.index)),t.length>0&&n.push(t),r=i.index+t.length}return r<e.length&&n.push(e.slice(r)),n}(e,this.pattern)}}class L extends R{constructor(e){super(),this.config=e,this.pattern=new RegExp(`[^${m}]+|[${m}]+`,"gu")}pre_tokenize_text(e,t){return e.match(this.pattern)||[]}}class N extends R{constructor(e){super(),this.config=e;const t="[^\\d]+|\\d"+(this.config.individual_digits?"":"+");this.pattern=new RegExp(t,"gu")}pre_tokenize_text(e,t){return e.match(this.pattern)||[]}}class W extends r.Callable{constructor(e){super(),this.config=e}static fromConfig(e){if(null===e)return null;switch(e.type){case"TemplateProcessing":return new G(e);case"ByteLevel":return new q(e);case"RobertaProcessing":return new V(e);case"BertProcessing":return new U(e);default:throw new Error(`Unknown PostProcessor type: ${e.type}`)}}post_process(e,...t){throw Error("post_process should be implemented in subclass.")}_call(e,...t){return this.post_process(e,...t)}}class U extends W{constructor(e){super(e),this.cls=e.cls[0],this.sep=e.sep[0]}post_process(e,t=null,{add_special_tokens:n=!0}={}){n&&(e=(0,r.mergeArrays)([this.cls],e,[this.sep]));let i=new Array(e.length).fill(0);if(null!==t){const a=n&&this instanceof V?[this.sep]:[],s=n?[this.sep]:[];e=(0,r.mergeArrays)(e,a,t,s),i=(0,r.mergeArrays)(i,new Array(t.length+a.length+s.length).fill(1))}return{tokens:e,token_type_ids:i}}}class V extends U{}class G extends W{constructor(e){super(e),this.single=e.single,this.pair=e.pair}post_process(e,t=null,{add_special_tokens:n=!0}={}){const i=null===t?this.single:this.pair;let a=[],s=[];for(const o of i)"SpecialToken"in o?n&&(a.push(o.SpecialToken.id),s.push(o.SpecialToken.type_id)):"Sequence"in o&&("A"===o.Sequence.id?(a=(0,r.mergeArrays)(a,e),s=(0,r.mergeArrays)(s,new Array(e.length).fill(o.Sequence.type_id))):"B"===o.Sequence.id&&(a=(0,r.mergeArrays)(a,t),s=(0,r.mergeArrays)(s,new Array(t.length).fill(o.Sequence.type_id))));return{tokens:a,token_type_ids:s}}}class q extends W{post_process(e,t=null){return t&&(e=(0,r.mergeArrays)(e,t)),{tokens:e}}}class H extends r.Callable{constructor(e){super(),this.config=e,this.added_tokens=[],this.end_of_word_suffix=null,this.trim_offsets=e.trim_offsets}static fromConfig(e){if(null===e)return null;switch(e.type){case"WordPiece":return new Z(e);case"Metaspace":return new ae(e);case"ByteLevel":return new J(e);case"Replace":return new K(e);case"ByteFallback":return new Y(e);case"Fuse":return new Q(e);case"Strip":return new X(e);case"Sequence":return new te(e);case"CTC":return new ee(e);case"BPEDecoder":return new ne(e);default:throw new Error(`Unknown Decoder type: ${e.type}`)}}_call(e){return this.decode(e)}decode(e){return this.decode_chain(e).join("")}decode_chain(e){throw Error("`decode_chain` should be implemented in subclass.")}}class K extends H{decode_chain(e){const t=d(this.config.pattern);return null===t?e:e.map((e=>e.replaceAll(t,this.config.content)))}}class Y extends H{constructor(e){super(e),this.text_decoder=new TextDecoder}decode_chain(e){const t=[];let n=[];for(const r of e){let e=null;if(6===r.length&&r.startsWith("<0x")&&r.endsWith(">")){const t=parseInt(r.slice(3,5),16);isNaN(t)||(e=t)}if(null!==e)n.push(e);else{if(n.length>0){const e=this.text_decoder.decode(Uint8Array.from(n));t.push(e),n=[]}t.push(r)}}if(n.length>0){const e=this.text_decoder.decode(Uint8Array.from(n));t.push(e),n=[]}return t}}class Q extends H{decode_chain(e){return[e.join("")]}}class X extends H{constructor(e){super(e),this.content=this.config.content,this.start=this.config.start,this.stop=this.config.stop}decode_chain(e){return e.map((e=>{let t=0;for(let n=0;n<this.start&&e[n]===this.content;++n)t=n+1;let n=e.length;for(let t=0;t<this.stop;++t){const r=e.length-t-1;if(e[r]!==this.content)break;n=r}return e.slice(t,n)}))}}class Z extends H{constructor(e){super(e),this.cleanup=e.cleanup}decode_chain(e){return e.map(((e,t)=>(0!==t&&(e=e.startsWith(this.config.prefix)?e.replace(this.config.prefix,""):" "+e),this.cleanup&&(e=p(e)),e)))}}class J extends H{constructor(e){super(e),this.byte_decoder=$,this.text_decoder=new TextDecoder("utf-8",{fatal:!1,ignoreBOM:!0}),this.end_of_word_suffix=null}convert_tokens_to_string(e){const t=e.join(""),n=new Uint8Array([...t].map((e=>this.byte_decoder[e])));return this.text_decoder.decode(n)}decode_chain(e){const t=[];let n=[];for(const r of e)void 0!==this.added_tokens.find((e=>e.content===r))?(n.length>0&&(t.push(this.convert_tokens_to_string(n)),n=[]),t.push(r)):n.push(r);return n.length>0&&t.push(this.convert_tokens_to_string(n)),t}}class ee extends H{constructor(e){super(e),this.pad_token=this.config.pad_token,this.word_delimiter_token=this.config.word_delimiter_token,this.cleanup=this.config.cleanup}convert_tokens_to_string(e){if(0===e.length)return"";const t=[e[0]];for(let n=1;n<e.length;++n)e[n]!==t.at(-1)&&t.push(e[n]);let n=t.filter((e=>e!==this.pad_token)).join("");return this.cleanup&&(n=p(n).replaceAll(this.word_delimiter_token," ").trim()),n}decode_chain(e){return[this.convert_tokens_to_string(e)]}}class te extends H{constructor(e){super(e),this.decoders=e.decoders.map((e=>H.fromConfig(e)))}decode_chain(e){return this.decoders.reduce(((e,t)=>t.decode_chain(e)),e)}}class ne extends H{constructor(e){super(e),this.suffix=this.config.suffix}decode_chain(e){return e.map(((t,n)=>t.replaceAll(this.suffix,n===e.length-1?"":" ")))}}class re extends H{decode_chain(e){let t="";for(let n=1;n<e.length;n+=2)t+=e[n];return[t]}}class ie extends R{constructor(e){super(),this.addPrefixSpace=e.add_prefix_space,this.replacement=e.replacement,this.strRep=e.str_rep||this.replacement,this.prepend_scheme=e.prepend_scheme??"always"}pre_tokenize_text(e,{section_index:t}={}){let n=e.replaceAll(" ",this.strRep);return this.addPrefixSpace&&!n.startsWith(this.replacement)&&("always"===this.prepend_scheme||"first"===this.prepend_scheme&&0===t)&&(n=this.strRep+n),[n]}}class ae extends H{constructor(e){super(e),this.addPrefixSpace=e.add_prefix_space,this.replacement=e.replacement}decode_chain(e){const t=[];for(let n=0;n<e.length;++n){let r=e[n].replaceAll(this.replacement," ");this.addPrefixSpace&&0==n&&r.startsWith(" ")&&(r=r.substring(1)),t.push(r)}return t}}class se extends T{constructor(e){super(e),this.charsmap=e.precompiled_charsmap}normalize(e){if((e=(e=e.replace(/[\u0001-\u0008\u000B\u000E-\u001F\u007F\u008F\u009F]/gm,"")).replace(/[\u0009\u000A\u000C\u000D\u1680\u200B\u200C\u200E\u200F\u2028\u2029\u2581\uFEFF\uFFFD]/gm," ")).includes("～")){const t=e.split("～");e=t.map((e=>e.normalize("NFKC"))).join("～")}else e=e.normalize("NFKC");return e}}class oe extends R{constructor(e){super(),this.tokenizers=e.pretokenizers.map((e=>R.fromConfig(e)))}pre_tokenize_text(e,t){return this.tokenizers.reduce(((e,n)=>n.pre_tokenize(e,t)),[e])}}class le extends R{constructor(e){super()}pre_tokenize_text(e,t){return e.match(/\w+|[^\w\s]+/g)||[]}}class ue extends R{constructor(e){super()}pre_tokenize_text(e,t){return function(e){return e.match(/\S+/g)||[]}(e)}}class de extends R{constructor(e){super(),this.config=e,this.pattern=d(this.config.pattern),this.content=this.config.content}pre_tokenize_text(e,t){return null===this.pattern?[e]:[e.replaceAll(this.pattern,this.config.content)]}}const ce=["bos_token","eos_token","unk_token","sep_token","pad_token","cls_token","mask_token"];function he(e,t,n,i){for(const a of Object.keys(e)){const s=t-e[a].length,o=n(a),l=new Array(s).fill(o);e[a]="right"===i?(0,r.mergeArrays)(e[a],l):(0,r.mergeArrays)(l,e[a])}}function pe(e,t){for(const n of Object.keys(e))e[n].length=t}class fe extends r.Callable{return_token_type_ids=!1;_default_chat_template="{% for message in messages %}{{'<|im_start|>' + message['role'] + '\n' + message['content'] + '<|im_end|>' + '\n'}}{% endfor %}{% if add_generation_prompt %}{{ '<|im_start|>assistant\n' }}{% endif %}";constructor(e,t){super(),this._tokenizer_config=t,this.normalizer=T.fromConfig(e.normalizer),this.pre_tokenizer=R.fromConfig(e.pre_tokenizer),this.model=y.fromConfig(e.model,t),this.post_processor=W.fromConfig(e.post_processor),this.decoder=H.fromConfig(e.decoder),this.special_tokens=[],this.all_special_ids=[],this.added_tokens=[];for(const t of e.added_tokens){const e=new _(t);this.added_tokens.push(e),this.model.tokens_to_ids.set(e.content,e.id),this.model.vocab[e.id]=e.content,e.special&&(this.special_tokens.push(e.content),this.all_special_ids.push(e.id))}this.additional_special_tokens=t.additional_special_tokens??[],this.special_tokens.push(...this.additional_special_tokens),this.special_tokens=[...new Set(this.special_tokens)],this.decoder&&(this.decoder.added_tokens=this.added_tokens,this.decoder.end_of_word_suffix=this.model.end_of_word_suffix),this.added_tokens_regex=this.added_tokens.length>0?new RegExp(this.added_tokens.map((e=>`${e.lstrip?"\\s*":""}(${(0,r.escapeRegExp)(e.content)})${e.rstrip?"\\s*":""}`)).join("|")):null,this.mask_token=this.getToken("mask_token"),this.mask_token_id=this.model.tokens_to_ids.get(this.mask_token),this.pad_token=this.getToken("pad_token","eos_token"),this.pad_token_id=this.model.tokens_to_ids.get(this.pad_token),this.sep_token=this.getToken("sep_token"),this.sep_token_id=this.model.tokens_to_ids.get(this.sep_token),this.unk_token=this.getToken("unk_token"),this.unk_token_id=this.model.tokens_to_ids.get(this.unk_token),this.model_max_length=t.model_max_length,this.remove_space=t.remove_space,this.clean_up_tokenization_spaces=t.clean_up_tokenization_spaces??!0,this.do_lowercase_and_remove_accent=t.do_lowercase_and_remove_accent??!1,this.padding_side="right",this.legacy=!1,this.chat_template=t.chat_template??null,this._compiled_template_cache=new Map}getToken(...e){for(const t of e){const e=this._tokenizer_config[t];if(e){if("object"==typeof e){if("AddedToken"===e.__type)return e.content;throw Error(`Unknown token: ${e}`)}return e}}return null}static async from_pretrained(e,{progress_callback:t=null,config:n=null,cache_dir:r=null,local_files_only:i=!1,revision:a="main",legacy:s=null}={}){return new this(...await u(e,{progress_callback:t,config:n,cache_dir:r,local_files_only:i,revision:a,legacy:s}))}_call(e,{text_pair:t=null,add_special_tokens:n=!0,padding:r=!1,truncation:i=null,max_length:o=null,return_tensor:l=!0}={}){const u=Array.isArray(e);let d;if(u){if(0===e.length)throw Error("text array must be non-empty");if(null!==t){if(!Array.isArray(t))throw Error("text_pair must also be an array");if(e.length!==t.length)throw Error("text and text_pair must have the same length");d=e.map(((e,r)=>this._encode_plus(e,t[r],{add_special_tokens:n})))}else d=e.map((e=>this._encode_plus(e,null,{add_special_tokens:n})))}else{if(null===e)throw Error("text may not be null");if(Array.isArray(t))throw Error("When specifying `text_pair`, since `text` is a string, `text_pair` must also be a string (i.e., not an array).");d=[this._encode_plus(e,t,{add_special_tokens:n})]}if(null===o?o="max_length"===r?this.model_max_length:(0,a.max)(d.map((e=>e.input_ids.length)))[0]:i||console.warn("Truncation was not explicitly activated but `max_length` is provided a specific value, please use `truncation=true` to explicitly truncate examples to max length."),o=Math.min(o,this.model_max_length),r||i)for(let e=0;e<d.length;++e)d[e].input_ids.length!==o&&(d[e].input_ids.length>o?i&&pe(d[e],o):r&&he(d[e],o,(e=>"input_ids"===e?this.pad_token_id:0),this.padding_side));const c={};if(l){if((!r||!i)&&d.some((e=>{for(const t of Object.keys(e))if(e[t].length!==d[0][t]?.length)return!0;return!1})))throw Error("Unable to create tensor, you should probably activate truncation and/or padding with 'padding=true' and 'truncation=true' to have batched tensors with the same length.");const e=[d.length,d[0].input_ids.length];for(const t of Object.keys(d[0]))c[t]=new s.Tensor("int64",BigInt64Array.from(d.flatMap((e=>e[t])).map(BigInt)),e)}else{for(const e of Object.keys(d[0]))c[e]=d.map((t=>t[e]));if(!u)for(const e of Object.keys(c))c[e]=c[e][0]}return c}_encode_text(e){if(null===e)return null;const t=(this.added_tokens_regex?e.split(this.added_tokens_regex).filter((e=>e)):[e]).map(((e,t)=>{if(void 0!==this.added_tokens.find((t=>t.content===e)))return e;{if(!0===this.remove_space&&(e=e.trim().split(/\s+/).join(" ")),this.do_lowercase_and_remove_accent&&(e=function(e){return f(e.toLowerCase())}(e)),null!==this.normalizer&&(e=this.normalizer(e)),0===e.length)return[];const n=null!==this.pre_tokenizer?this.pre_tokenizer(e,{section_index:t}):[e];return this.model(n)}})).flat();return t}_encode_plus(e,t=null,{add_special_tokens:n=!0}={}){const i=this._encode_text(e),a=this._encode_text(t),s=this.post_processor?this.post_processor(i,a,{add_special_tokens:n}):{tokens:(0,r.mergeArrays)(i??[],a??[])},o=this.model.convert_tokens_to_ids(s.tokens),l={input_ids:o,attention_mask:new Array(o.length).fill(1)};return this.return_token_type_ids&&s.token_type_ids&&(l.token_type_ids=s.token_type_ids),l}encode(e,t=null,{add_special_tokens:n=!0}={}){const{input_ids:r}=this._encode_plus(e,t,{add_special_tokens:n});return r}batch_decode(e,t={}){return e instanceof s.Tensor&&(e=e.tolist()),e.map((e=>this.decode(e,t)))}decode(e,t={}){if(e instanceof s.Tensor&&(e=h(e)),!Array.isArray(e)||0===e.length||!(0,r.isIntegralNumber)(e[0]))throw Error("token_ids must be a non-empty array of integers.");return this.decode_single(e,t)}decode_single(e,{skip_special_tokens:t=!1,clean_up_tokenization_spaces:n=null}){let r=this.model.convert_ids_to_tokens(e);t&&(r=r.filter((e=>!this.special_tokens.includes(e))));let i=this.decoder?this.decoder(r):r.join(" ");return this.decoder&&this.decoder.end_of_word_suffix&&(i=i.replaceAll(this.decoder.end_of_word_suffix," "),t&&(i=i.trim())),(n??this.clean_up_tokenization_spaces)&&(i=p(i)),i}get default_chat_template(){return this._warned_about_chat_template||(console.warn("No chat template is defined for this tokenizer - using a default chat template that implements the ChatML format. If the default is not appropriate for your model, please set `tokenizer.chat_template` to an appropriate template. See https://huggingface.co/docs/transformers/main/chat_templating for more information."),this._warned_about_chat_template=!0),this._default_chat_template}apply_chat_template(e,{chat_template:t=null,add_generation_prompt:n=!1,tokenize:r=!0,padding:i=!1,truncation:a=!1,max_length:s=null,return_tensor:o=!0}={}){t??=this.chat_template??this.default_chat_template;let u=this._compiled_template_cache.get(t);void 0===u&&(u=new l.Template(t),this._compiled_template_cache.set(t,u));const d=Object.create(null);for(const e of ce){const t=this.getToken(e);t&&(d[e]=t)}const c=u.render({messages:e,add_generation_prompt:n,...d});return r?this._call(c,{add_special_tokens:!1,padding:i,truncation:a,max_length:s,return_tensor:o}).input_ids:c}}class me extends fe{return_token_type_ids=!0}class ge extends fe{return_token_type_ids=!0}class _e extends fe{return_token_type_ids=!0}class ye extends fe{return_token_type_ids=!0}class we extends fe{return_token_type_ids=!0}class ve extends fe{return_token_type_ids=!0}class be extends fe{return_token_type_ids=!0}class $e extends fe{return_token_type_ids=!0}class xe extends fe{return_token_type_ids=!0}class Ce extends fe{}class Te extends fe{}class Se extends fe{return_token_type_ids=!0;constructor(e,t){super(e,t),console.warn('WARNING: `XLMTokenizer` is not yet supported by Hugging Face\'s "fast" tokenizers library. Therefore, you may experience slightly inaccurate results.')}}class Me extends fe{return_token_type_ids=!0}class ke extends fe{}class Ee extends fe{_default_chat_template='{% for message in messages %}" "{{ message.content }}{{ eos_token }}" "{% endfor %}'}class Ae extends fe{}class Ie extends fe{constructor(e,t){super(e,t),this.languageRegex=/^[a-z]{2}_[A-Z]{2}$/,this.language_codes=this.special_tokens.filter((e=>this.languageRegex.test(e))),this.lang_to_token=e=>e}_build_translation_inputs(e,t,n){return Ve(this,e,t,n)}}class Pe extends Ie{}class Oe extends fe{}class ze extends Ee{constructor(e,t){const n=".,!?…。，、।۔،",r=e.pre_tokenizer?.pretokenizers[0]?.pattern;r&&r.Regex===` ?[^(\\s|[${n}])]+`&&(r.Regex=` ?[^\\s${n}]+`),super(e,t)}}const Be="▁";class Re extends fe{_default_chat_template="{% if messages[0]['role'] == 'system' %}{% set loop_messages = messages[1:] %}{% set system_message = messages[0]['content'] %}{% elif USE_DEFAULT_PROMPT == true and not '<<SYS>>' in messages[0]['content'] %}{% set loop_messages = messages %}{% set system_message = 'DEFAULT_SYSTEM_MESSAGE' %}{% else %}{% set loop_messages = messages %}{% set system_message = false %}{% endif %}{% for message in loop_messages %}{% if (message['role'] == 'user') != (loop.index0 % 2 == 0) %}{{ raise_exception('Conversation roles must alternate user/assistant/user/assistant/...') }}{% endif %}{% if loop.index0 == 0 and system_message != false %}{% set content = '<<SYS>>\n' + system_message + '\n<</SYS>>\n\n' + message['content'] %}{% else %}{% set content = message['content'] %}{% endif %}{% if message['role'] == 'user' %}{{ bos_token + '[INST] ' + content.strip() + ' [/INST]' }}{% elif message['role'] == 'system' %}{{ '<<SYS>>\n' + content.strip() + '\n<</SYS>>\n\n' }}{% elif message['role'] == 'assistant' %}{{ ' '  + content.strip() + ' ' + eos_token }}{% endif %}{% endfor %}";DEFAULT_SYSTEM_PROMPT="You are a helpful, respectful and honest assistant. Always answer as helpfully as possible, while being safe. Your answers should not include any harmful, unethical, racist, sexist, toxic, dangerous, or illegal content. Please ensure that your responses are socially unbiased and positive in nature.\n\nIf a question does not make any sense, or is not factually coherent, explain why instead of answering something not correct. If you don't know the answer to a question, please don't share false information.";constructor(e,t){super(e,t),this.use_default_system_prompt=t.use_default_system_prompt??!1,this.legacy=t.legacy??!0,this.legacy||(this.normalizer=null,this.pre_tokenizer=new ie({replacement:Be,add_prefix_space:!0,prepend_scheme:"first"}))}_encode_text(e){if(null===e)return null;if(this.legacy||0===e.length)return super._encode_text(e);let t=super._encode_text(Be+e.replaceAll(Be," "));return t.length>1&&t[0]===Be&&this.special_tokens.includes(t[1])&&(t=t.slice(1)),t}get default_chat_template(){return super.default_chat_template.replaceAll("USE_DEFAULT_PROMPT",this.use_default_system_prompt?"true":"false").replaceAll("DEFAULT_SYSTEM_MESSAGE",this.DEFAULT_SYSTEM_PROMPT.replaceAll("\n","\\n").replaceAll("'","\\'"))}}class Fe extends Re{}class je extends fe{}class De extends fe{}class Le extends fe{}class Ne extends fe{}class We extends fe{}class Ue extends fe{}function Ve(e,t,n,r){if(!("language_codes"in e)||!Array.isArray(e.language_codes))throw new Error("Tokenizer must have `language_codes` attribute set and it should be an array of language ids.");if(!("languageRegex"in e&&e.languageRegex instanceof RegExp))throw new Error("Tokenizer must have `languageRegex` attribute set and it should be a regular expression.");if(!("lang_to_token"in e)||"function"!=typeof e.lang_to_token)throw new Error("Tokenizer must have `lang_to_token` attribute set and it should be a function.");const i=r.src_lang,a=r.tgt_lang;if(!e.language_codes.includes(a))throw new Error(`Target language code "${a}" is not valid. Must be one of: {${e.language_codes.join(", ")}}`);if(void 0!==i){if(!e.language_codes.includes(i))throw new Error(`Source language code "${i}" is not valid. Must be one of: {${e.language_codes.join(", ")}}`);for(const t of e.post_processor.config.single)if("SpecialToken"in t&&e.languageRegex.test(t.SpecialToken.id)){t.SpecialToken.id=e.lang_to_token(i);break}}return r.forced_bos_token_id=e.model.convert_tokens_to_ids([e.lang_to_token(a)])[0],e._call(t,n)}class Ge extends fe{constructor(e,t){super(e,t),this.languageRegex=/^[a-z]{3}_[A-Z][a-z]{3}$/,this.language_codes=this.special_tokens.filter((e=>this.languageRegex.test(e))),this.lang_to_token=e=>e}_build_translation_inputs(e,t,n){return Ve(this,e,t,n)}}class qe extends fe{constructor(e,t){super(e,t),this.languageRegex=/^__[a-z]{2,3}__$/,this.language_codes=this.special_tokens.filter((e=>this.languageRegex.test(e))).map((e=>e.slice(2,-2))),this.lang_to_token=e=>`__${e}__`}_build_translation_inputs(e,t,n){return Ve(this,e,t,n)}}const He=[["en","english"],["zh","chinese"],["de","german"],["es","spanish"],["ru","russian"],["ko","korean"],["fr","french"],["ja","japanese"],["pt","portuguese"],["tr","turkish"],["pl","polish"],["ca","catalan"],["nl","dutch"],["ar","arabic"],["sv","swedish"],["it","italian"],["id","indonesian"],["hi","hindi"],["fi","finnish"],["vi","vietnamese"],["he","hebrew"],["uk","ukrainian"],["el","greek"],["ms","malay"],["cs","czech"],["ro","romanian"],["da","danish"],["hu","hungarian"],["ta","tamil"],["no","norwegian"],["th","thai"],["ur","urdu"],["hr","croatian"],["bg","bulgarian"],["lt","lithuanian"],["la","latin"],["mi","maori"],["ml","malayalam"],["cy","welsh"],["sk","slovak"],["te","telugu"],["fa","persian"],["lv","latvian"],["bn","bengali"],["sr","serbian"],["az","azerbaijani"],["sl","slovenian"],["kn","kannada"],["et","estonian"],["mk","macedonian"],["br","breton"],["eu","basque"],["is","icelandic"],["hy","armenian"],["ne","nepali"],["mn","mongolian"],["bs","bosnian"],["kk","kazakh"],["sq","albanian"],["sw","swahili"],["gl","galician"],["mr","marathi"],["pa","punjabi"],["si","sinhala"],["km","khmer"],["sn","shona"],["yo","yoruba"],["so","somali"],["af","afrikaans"],["oc","occitan"],["ka","georgian"],["be","belarusian"],["tg","tajik"],["sd","sindhi"],["gu","gujarati"],["am","amharic"],["yi","yiddish"],["lo","lao"],["uz","uzbek"],["fo","faroese"],["ht","haitian creole"],["ps","pashto"],["tk","turkmen"],["nn","nynorsk"],["mt","maltese"],["sa","sanskrit"],["lb","luxembourgish"],["my","myanmar"],["bo","tibetan"],["tl","tagalog"],["mg","malagasy"],["as","assamese"],["tt","tatar"],["haw","hawaiian"],["ln","lingala"],["ha","hausa"],["ba","bashkir"],["jw","javanese"],["su","sundanese"]],Ke=new Map(He),Ye=new Map([...He.map((([e,t])=>[t,e])),["burmese","my"],["valencian","ca"],["flemish","nl"],["haitian","ht"],["letzeburgesch","lb"],["pushto","ps"],["panjabi","pa"],["moldavian","ro"],["moldovan","ro"],["sinhalese","si"],["castilian","es"]]);class Qe extends fe{_default_chat_template='{% for message in messages %}" "{{ message.content }}{{ eos_token }}" "{% endfor %}';_decode_asr(e,{return_timestamps:t=!1,return_language:n=!1,time_precision:r=null,force_full_sequences:i=!0}={}){if(null===r)throw Error("Must specify time_precision");let s=null;const o="word"===t;function l(){return{language:s,timestamp:[null,null],text:""}}const u=[];let d=l(),c=0;const h=this.model.convert_tokens_to_ids(["<|notimestamps|>"])[0]+1;let p=[],f=[],m=!1,g=null;const _=new Set(this.all_special_ids);for(const n of e){const e=n.tokens,i=o?n.token_timestamps:null;let y=null,w=h;if("stride"in n){const[t,i,a]=n.stride;if(c-=i,g=t-a,i&&(w=i/r+h),a)for(let t=e.length-1;t>=0;--t){const n=e[t];if(n>=h){if(null!==y&&(n-h)*r<g)break;y=n}}}let v=[],b=[];for(let n=0;n<e.length;++n){const g=e[n];if(_.has(g)){const e=this.decode([g]),n=Ke.get(e.slice(2,-2));if(void 0!==n){if(null!==s&&n!==s&&!t){p.push(v);const e=this.findLongestCommonSequence(p)[0],t=this.decode(e);d.text=t,u.push(d),p=[],v=[],d=l()}s=d.language=n}}else if(g>=h){const e=(g-h)*r+c,t=(0,a.round)(e,2);if(null!==y&&g>=y)m=!0;else if(m||p.length>0&&g<w)m=!1;else if(null===d.timestamp[0])d.timestamp[0]=t;else if(t===d.timestamp[0]);else{d.timestamp[1]=t,p.push(v),o&&f.push(b);const[e,n]=this.findLongestCommonSequence(p,f),r=this.decode(e);d.text=r,o&&(d.words=this.collateWordTimestamps(e,n,s)),u.push(d),p=[],v=[],f=[],b=[],d=l()}}else if(v.push(g),o){let e,t=(0,a.round)(i[n]+c,2);e=n+1<i.length?(0,a.round)(i[n+1]+c,2):null,b.push([t,e])}}if("stride"in n){const[e,t,r]=n.stride;c+=e-r}v.length>0?(p.push(v),o&&f.push(b)):p.every((e=>0===e.length))&&(d=l(),p=[],v=[],f=[],b=[])}if(p.length>0){if(i&&t)throw new Error("Whisper did not predict an ending timestamp, which can happen if audio is cut off in the middle of a word. Also make sure WhisperTimeStampLogitsProcessor was used during generation.");const[e,n]=this.findLongestCommonSequence(p,f),r=this.decode(e);d.text=r,o&&(d.words=this.collateWordTimestamps(e,n,s)),u.push(d)}let y=Object.create(null);const w=u.map((e=>e.text)).join("");if(t||n){for(let e=0;e<u.length;++e){const r=u[e];t||delete r.timestamp,n||delete r.language}if(o){const e=[];for(const t of u)for(const n of t.words)e.push(n);y={chunks:e}}else y={chunks:u}}return[w,y]}findLongestCommonSequence(e,t=null){let n=e[0],r=n.length,i=[];const a=Array.isArray(t)&&t.length>0;let s=a?[]:null,o=a?t[0]:null;for(let l=1;l<e.length;++l){const u=e[l];let d=0,c=[r,r,0,0];const h=u.length;for(let e=1;e<r+h;++e){const t=e/1e4,i=Math.max(0,r-e),a=Math.min(r,r+h-e),s=n.slice(i,a),o=Math.max(0,e-r),l=Math.min(h,e),p=u.slice(o,l);if(s.length!==p.length)throw new Error("There is a bug within whisper `decode_asr` function, please report it. Dropping to prevent bad inference.");const f=s.filter(((e,t)=>e===p[t])).length,m=f/e+t;f>1&&m>d&&(d=m,c=[i,a,o,l])}const[p,f,m,g]=c,_=Math.floor((f+p)/2),y=Math.floor((g+m)/2);i.push(...n.slice(0,_)),n=u.slice(y),r=n.length,a&&(s.push(...o.slice(0,_)),o=t[l].slice(y))}return i.push(...n),a?(s.push(...o),[i,s]):[i,[]]}collateWordTimestamps(e,t,n){const[r,i,a]=this.combineTokensIntoWords(e,n),s=[];for(let e=0;e<r.length;++e){const n=a[e];s.push({text:r[e],timestamp:[t[n.at(0)][0],t[n.at(-1)][1]]})}return s}combineTokensIntoWords(e,t,n="\"'“¡¿([{-",r="\"'.。,，!！?？:：”)]}、"){let i,a,s;return["chinese","japanese","thai","lao","myanmar"].includes(t=t??"english")?[i,a,s]=this.splitTokensOnUnicode(e):[i,a,s]=this.splitTokensOnSpaces(e),this.mergePunctuations(i,a,s,n,r)}decode(e,t){let n;return t&&t.decode_with_timestamps?(e instanceof s.Tensor&&(e=h(e)),n=this.decodeWithTimestamps(e,t)):n=super.decode(e,t),n}decodeWithTimestamps(e,t){const n=t?.time_precision??.02,r=Array.from(this.all_special_ids).at(-1)+1;let i=[[]];for(const t of e)if(t>=r){const e=(0,a.round)((t-r)*n,2);i.push(`<|${e}|>`),i.push([])}else i[i.length-1].push(t);return i=i.map((e=>"string"==typeof e?e:super.decode(e,t))),i.join("")}splitTokensOnUnicode(e){const t=this.decode(e,{decode_with_timestamps:!0}),n=[],r=[],i=[];let a=[],s=[],o=0;for(let l=0;l<e.length;++l){const u=e[l];a.push(u),s.push(l);const d=this.decode(a,{decode_with_timestamps:!0});d.includes("�")&&"�"!==t[o+d.indexOf("�")]||(n.push(d),r.push(a),i.push(s),a=[],s=[],o+=d.length)}return[n,r,i]}splitTokensOnSpaces(e){const[t,n,r]=this.splitTokensOnUnicode(e),i=[],a=[],s=[],o=new RegExp(`^[${m}]$`,"gu");for(let e=0;e<t.length;++e){const l=t[e],u=n[e],d=r[e],c=u[0]>=this.model.tokens_to_ids.get("<|endoftext|>"),h=l.startsWith(" "),p=l.trim(),f=o.test(p);if(c||h||f||0===i.length)i.push(l),a.push(u),s.push(d);else{const e=i.length-1;i[e]+=l,a[e].push(...u),s[e].push(...d)}}return[i,a,s]}mergePunctuations(e,t,n,i,a){const s=structuredClone(e),o=structuredClone(t),l=structuredClone(n);let u=s.length-2,d=s.length-1;for(;u>=0;)s[u].startsWith(" ")&&i.includes(s[u].trim())?(s[d]=s[u]+s[d],o[d]=(0,r.mergeArrays)(o[u],o[d]),l[d]=(0,r.mergeArrays)(l[u],l[d]),s[u]="",o[u]=[],l[u]=[]):d=u,--u;for(u=0,d=1;d<s.length;)!s[u].endsWith(" ")&&a.includes(s[d])?(s[u]+=s[d],o[u]=(0,r.mergeArrays)(o[u],o[d]),l[u]=(0,r.mergeArrays)(l[u],l[d]),s[d]="",o[d]=[],l[d]=[]):u=d,++d;return[s.filter((e=>e)),o.filter((e=>e.length>0)),l.filter((e=>e.length>0))]}get_decoder_prompt_ids({language:e=null,task:t=null,no_timestamps:n=!0}={}){const r=[];if(e){e=e.toLowerCase();let t=Ye.get(e);if(void 0===t){if(!Ke.has(e)){const t=2===e.length?Ke.keys():Ke.values();throw new Error(`Language "${e}" is not supported. Must be one of: ${JSON.stringify(t)}`)}t=e}const n=this.model.tokens_to_ids.get(`<|${t}|>`);if(void 0===n)throw new Error(`Unable to find language "${t}" in model vocabulary. Please report this issue at https://github.com/xenova/transformers.js/issues/new/choose.`);r.push(n)}else r.push(null);if(t){if("transcribe"!==(t=t.toLowerCase())&&"translate"!==t)throw new Error(`Task "${t}" is not supported. Must be one of: ["transcribe", "translate"]`);const e=this.model.tokens_to_ids.get(`<|${t}|>`);if(void 0===e)throw new Error(`Unable to find task "${t}" in model vocabulary. Please report this issue at https://github.com/xenova/transformers.js/issues/new/choose.`);r.push(e)}else r.push(null);if(n){const e=this.model.tokens_to_ids.get("<|notimestamps|>");if(void 0===e)throw new Error('Unable to find "<|notimestamps|>" in model vocabulary. Please report this issue at https://github.com/xenova/transformers.js/issues/new/choose.');r.push(e)}return r.map(((e,t)=>[t+1,e])).filter((e=>null!==e[1]))}}class Xe extends fe{}class Ze extends fe{}class Je extends fe{}class et extends fe{constructor(e,t){super(e,t),this.languageRegex=/^(>>\w+<<)\s*/g,this.supported_language_codes=this.model.vocab.filter((e=>this.languageRegex.test(e))),console.warn('WARNING: `MarianTokenizer` is not yet supported by Hugging Face\'s "fast" tokenizers library. Therefore, you may experience slightly inaccurate results.')}_encode_text(e){if(null===e)return null;const[t,...n]=e.trim().split(this.languageRegex);if(0===n.length)return super._encode_text(t);if(2===n.length){const[e,t]=n;return this.supported_language_codes.includes(e)||console.warn(`Unsupported language code "${e}" detected, which may lead to unexpected behavior. Should be one of: ${JSON.stringify(this.supported_language_codes)}`),(0,r.mergeArrays)([e],super._encode_text(t))}}}class tt extends fe{}class nt extends fe{_default_chat_template="{% for message in messages %}{% if message['role'] == 'user' %}{{ ' ' }}{% endif %}{{ message['content'] }}{% if not loop.last %}{{ '  ' }}{% endif %}{% endfor %}{{ eos_token }}"}class rt extends nt{}class it extends fe{}class at extends fe{}class st extends fe{constructor(e,t){super(e,t),this.decoder=new re({})}}class ot{static TOKENIZER_CLASS_MAPPING={T5Tokenizer:ke,DistilBertTokenizer:Ce,CamembertTokenizer:Te,DebertaTokenizer:we,DebertaV2Tokenizer:ve,BertTokenizer:me,HerbertTokenizer:be,ConvBertTokenizer:$e,RoFormerTokenizer:xe,XLMTokenizer:Se,ElectraTokenizer:Me,MobileBertTokenizer:_e,SqueezeBertTokenizer:ye,AlbertTokenizer:ge,GPT2Tokenizer:Ee,BartTokenizer:Ae,MBartTokenizer:Ie,MBart50Tokenizer:Pe,RobertaTokenizer:Oe,WhisperTokenizer:Qe,CodeGenTokenizer:Xe,CLIPTokenizer:Ze,SiglipTokenizer:Je,MarianTokenizer:et,BloomTokenizer:ze,NllbTokenizer:Ge,M2M100Tokenizer:qe,LlamaTokenizer:Re,CodeLlamaTokenizer:Fe,XLMRobertaTokenizer:je,MPNetTokenizer:De,FalconTokenizer:Le,GPTNeoXTokenizer:Ne,EsmTokenizer:We,Wav2Vec2CTCTokenizer:tt,BlenderbotTokenizer:nt,BlenderbotSmallTokenizer:rt,SpeechT5Tokenizer:it,NougatTokenizer:at,VitsTokenizer:st,Qwen2Tokenizer:Ue,PreTrainedTokenizer:fe};static async from_pretrained(e,{quantized:t=!0,progress_callback:n=null,config:r=null,cache_dir:i=null,local_files_only:a=!1,revision:s="main",legacy:o=null}={}){const[l,d]=await u(e,{quantized:t,progress_callback:n,config:r,cache_dir:i,local_files_only:a,revision:s,legacy:o}),c=d.tokenizer_class?.replace(/Fast$/,"")??"PreTrainedTokenizer";let h=this.TOKENIZER_CLASS_MAPPING[c];return h||(console.warn(`Unknown tokenizer class "${c}", attempting to construct from base class.`),h=fe),new h(l,d)}}},"./src/transformers.js":
/*!*****************************!*\
  !*** ./src/transformers.js ***!
  \*****************************/(e,t,n)=>{n.r(t),n.d(t,{ASTFeatureExtractor:()=>o.ASTFeatureExtractor,ASTForAudioClassification:()=>a.ASTForAudioClassification,ASTModel:()=>a.ASTModel,ASTPreTrainedModel:()=>a.ASTPreTrainedModel,AlbertForMaskedLM:()=>a.AlbertForMaskedLM,AlbertForQuestionAnswering:()=>a.AlbertForQuestionAnswering,AlbertForSequenceClassification:()=>a.AlbertForSequenceClassification,AlbertModel:()=>a.AlbertModel,AlbertPreTrainedModel:()=>a.AlbertPreTrainedModel,AlbertTokenizer:()=>s.AlbertTokenizer,AudioClassificationPipeline:()=>r.AudioClassificationPipeline,AutoConfig:()=>l.AutoConfig,AutoModel:()=>a.AutoModel,AutoModelForAudioClassification:()=>a.AutoModelForAudioClassification,AutoModelForCTC:()=>a.AutoModelForCTC,AutoModelForCausalLM:()=>a.AutoModelForCausalLM,AutoModelForDepthEstimation:()=>a.AutoModelForDepthEstimation,AutoModelForDocumentQuestionAnswering:()=>a.AutoModelForDocumentQuestionAnswering,AutoModelForImageClassification:()=>a.AutoModelForImageClassification,AutoModelForImageMatting:()=>a.AutoModelForImageMatting,AutoModelForImageSegmentation:()=>a.AutoModelForImageSegmentation,AutoModelForImageToImage:()=>a.AutoModelForImageToImage,AutoModelForMaskGeneration:()=>a.AutoModelForMaskGeneration,AutoModelForMaskedLM:()=>a.AutoModelForMaskedLM,AutoModelForObjectDetection:()=>a.AutoModelForObjectDetection,AutoModelForQuestionAnswering:()=>a.AutoModelForQuestionAnswering,AutoModelForSemanticSegmentation:()=>a.AutoModelForSemanticSegmentation,AutoModelForSeq2SeqLM:()=>a.AutoModelForSeq2SeqLM,AutoModelForSequenceClassification:()=>a.AutoModelForSequenceClassification,AutoModelForSpeechSeq2Seq:()=>a.AutoModelForSpeechSeq2Seq,AutoModelForTextToSpectrogram:()=>a.AutoModelForTextToSpectrogram,AutoModelForTextToWaveform:()=>a.AutoModelForTextToWaveform,AutoModelForTokenClassification:()=>a.AutoModelForTokenClassification,AutoModelForVision2Seq:()=>a.AutoModelForVision2Seq,AutoModelForZeroShotObjectDetection:()=>a.AutoModelForZeroShotObjectDetection,AutoProcessor:()=>o.AutoProcessor,AutoTokenizer:()=>s.AutoTokenizer,AutomaticSpeechRecognitionPipeline:()=>r.AutomaticSpeechRecognitionPipeline,BartForConditionalGeneration:()=>a.BartForConditionalGeneration,BartForSequenceClassification:()=>a.BartForSequenceClassification,BartModel:()=>a.BartModel,BartPretrainedModel:()=>a.BartPretrainedModel,BartTokenizer:()=>s.BartTokenizer,BaseModelOutput:()=>a.BaseModelOutput,BeitFeatureExtractor:()=>o.BeitFeatureExtractor,BeitForImageClassification:()=>a.BeitForImageClassification,BeitModel:()=>a.BeitModel,BeitPreTrainedModel:()=>a.BeitPreTrainedModel,BertForMaskedLM:()=>a.BertForMaskedLM,BertForQuestionAnswering:()=>a.BertForQuestionAnswering,BertForSequenceClassification:()=>a.BertForSequenceClassification,BertForTokenClassification:()=>a.BertForTokenClassification,BertModel:()=>a.BertModel,BertPreTrainedModel:()=>a.BertPreTrainedModel,BertTokenizer:()=>s.BertTokenizer,BitImageProcessor:()=>o.BitImageProcessor,BlenderbotForConditionalGeneration:()=>a.BlenderbotForConditionalGeneration,BlenderbotModel:()=>a.BlenderbotModel,BlenderbotPreTrainedModel:()=>a.BlenderbotPreTrainedModel,BlenderbotSmallForConditionalGeneration:()=>a.BlenderbotSmallForConditionalGeneration,BlenderbotSmallModel:()=>a.BlenderbotSmallModel,BlenderbotSmallPreTrainedModel:()=>a.BlenderbotSmallPreTrainedModel,BlenderbotSmallTokenizer:()=>s.BlenderbotSmallTokenizer,BlenderbotTokenizer:()=>s.BlenderbotTokenizer,BloomForCausalLM:()=>a.BloomForCausalLM,BloomModel:()=>a.BloomModel,BloomPreTrainedModel:()=>a.BloomPreTrainedModel,BloomTokenizer:()=>s.BloomTokenizer,CLIPFeatureExtractor:()=>o.CLIPFeatureExtractor,CLIPModel:()=>a.CLIPModel,CLIPPreTrainedModel:()=>a.CLIPPreTrainedModel,CLIPSegForImageSegmentation:()=>a.CLIPSegForImageSegmentation,CLIPSegModel:()=>a.CLIPSegModel,CLIPSegPreTrainedModel:()=>a.CLIPSegPreTrainedModel,CLIPTextModelWithProjection:()=>a.CLIPTextModelWithProjection,CLIPTokenizer:()=>s.CLIPTokenizer,CLIPVisionModelWithProjection:()=>a.CLIPVisionModelWithProjection,CamembertForMaskedLM:()=>a.CamembertForMaskedLM,CamembertForQuestionAnswering:()=>a.CamembertForQuestionAnswering,CamembertForSequenceClassification:()=>a.CamembertForSequenceClassification,CamembertForTokenClassification:()=>a.CamembertForTokenClassification,CamembertModel:()=>a.CamembertModel,CamembertPreTrainedModel:()=>a.CamembertPreTrainedModel,CamembertTokenizer:()=>s.CamembertTokenizer,CausalLMOutput:()=>a.CausalLMOutput,CausalLMOutputWithPast:()=>a.CausalLMOutputWithPast,ChineseCLIPFeatureExtractor:()=>o.ChineseCLIPFeatureExtractor,ChineseCLIPModel:()=>a.ChineseCLIPModel,ChineseCLIPPreTrainedModel:()=>a.ChineseCLIPPreTrainedModel,ClapAudioModelWithProjection:()=>a.ClapAudioModelWithProjection,ClapFeatureExtractor:()=>o.ClapFeatureExtractor,ClapModel:()=>a.ClapModel,ClapPreTrainedModel:()=>a.ClapPreTrainedModel,ClapTextModelWithProjection:()=>a.ClapTextModelWithProjection,CodeGenForCausalLM:()=>a.CodeGenForCausalLM,CodeGenModel:()=>a.CodeGenModel,CodeGenPreTrainedModel:()=>a.CodeGenPreTrainedModel,CodeGenTokenizer:()=>s.CodeGenTokenizer,CodeLlamaTokenizer:()=>s.CodeLlamaTokenizer,ConvBertForMaskedLM:()=>a.ConvBertForMaskedLM,ConvBertForQuestionAnswering:()=>a.ConvBertForQuestionAnswering,ConvBertForSequenceClassification:()=>a.ConvBertForSequenceClassification,ConvBertForTokenClassification:()=>a.ConvBertForTokenClassification,ConvBertModel:()=>a.ConvBertModel,ConvBertPreTrainedModel:()=>a.ConvBertPreTrainedModel,ConvBertTokenizer:()=>s.ConvBertTokenizer,ConvNextFeatureExtractor:()=>o.ConvNextFeatureExtractor,ConvNextForImageClassification:()=>a.ConvNextForImageClassification,ConvNextImageProcessor:()=>o.ConvNextImageProcessor,ConvNextModel:()=>a.ConvNextModel,ConvNextPreTrainedModel:()=>a.ConvNextPreTrainedModel,ConvNextV2ForImageClassification:()=>a.ConvNextV2ForImageClassification,ConvNextV2Model:()=>a.ConvNextV2Model,ConvNextV2PreTrainedModel:()=>a.ConvNextV2PreTrainedModel,DPTFeatureExtractor:()=>o.DPTFeatureExtractor,DPTForDepthEstimation:()=>a.DPTForDepthEstimation,DPTImageProcessor:()=>o.DPTImageProcessor,DPTModel:()=>a.DPTModel,DPTPreTrainedModel:()=>a.DPTPreTrainedModel,DebertaForMaskedLM:()=>a.DebertaForMaskedLM,DebertaForQuestionAnswering:()=>a.DebertaForQuestionAnswering,DebertaForSequenceClassification:()=>a.DebertaForSequenceClassification,DebertaForTokenClassification:()=>a.DebertaForTokenClassification,DebertaModel:()=>a.DebertaModel,DebertaPreTrainedModel:()=>a.DebertaPreTrainedModel,DebertaTokenizer:()=>s.DebertaTokenizer,DebertaV2ForMaskedLM:()=>a.DebertaV2ForMaskedLM,DebertaV2ForQuestionAnswering:()=>a.DebertaV2ForQuestionAnswering,DebertaV2ForSequenceClassification:()=>a.DebertaV2ForSequenceClassification,DebertaV2ForTokenClassification:()=>a.DebertaV2ForTokenClassification,DebertaV2Model:()=>a.DebertaV2Model,DebertaV2PreTrainedModel:()=>a.DebertaV2PreTrainedModel,DebertaV2Tokenizer:()=>s.DebertaV2Tokenizer,DeiTFeatureExtractor:()=>o.DeiTFeatureExtractor,DeiTForImageClassification:()=>a.DeiTForImageClassification,DeiTModel:()=>a.DeiTModel,DeiTPreTrainedModel:()=>a.DeiTPreTrainedModel,DepthEstimationPipeline:()=>r.DepthEstimationPipeline,DetrFeatureExtractor:()=>o.DetrFeatureExtractor,DetrForObjectDetection:()=>a.DetrForObjectDetection,DetrForSegmentation:()=>a.DetrForSegmentation,DetrModel:()=>a.DetrModel,DetrObjectDetectionOutput:()=>a.DetrObjectDetectionOutput,DetrPreTrainedModel:()=>a.DetrPreTrainedModel,DetrSegmentationOutput:()=>a.DetrSegmentationOutput,Dinov2ForImageClassification:()=>a.Dinov2ForImageClassification,Dinov2Model:()=>a.Dinov2Model,Dinov2PreTrainedModel:()=>a.Dinov2PreTrainedModel,DistilBertForMaskedLM:()=>a.DistilBertForMaskedLM,DistilBertForQuestionAnswering:()=>a.DistilBertForQuestionAnswering,DistilBertForSequenceClassification:()=>a.DistilBertForSequenceClassification,DistilBertForTokenClassification:()=>a.DistilBertForTokenClassification,DistilBertModel:()=>a.DistilBertModel,DistilBertPreTrainedModel:()=>a.DistilBertPreTrainedModel,DistilBertTokenizer:()=>s.DistilBertTokenizer,DocumentQuestionAnsweringPipeline:()=>r.DocumentQuestionAnsweringPipeline,DonutFeatureExtractor:()=>o.DonutFeatureExtractor,DonutSwinModel:()=>a.DonutSwinModel,DonutSwinPreTrainedModel:()=>a.DonutSwinPreTrainedModel,ElectraForMaskedLM:()=>a.ElectraForMaskedLM,ElectraForQuestionAnswering:()=>a.ElectraForQuestionAnswering,ElectraForSequenceClassification:()=>a.ElectraForSequenceClassification,ElectraForTokenClassification:()=>a.ElectraForTokenClassification,ElectraModel:()=>a.ElectraModel,ElectraPreTrainedModel:()=>a.ElectraPreTrainedModel,ElectraTokenizer:()=>s.ElectraTokenizer,EsmForMaskedLM:()=>a.EsmForMaskedLM,EsmForSequenceClassification:()=>a.EsmForSequenceClassification,EsmForTokenClassification:()=>a.EsmForTokenClassification,EsmModel:()=>a.EsmModel,EsmPreTrainedModel:()=>a.EsmPreTrainedModel,EsmTokenizer:()=>s.EsmTokenizer,FFT:()=>h.FFT,FalconForCausalLM:()=>a.FalconForCausalLM,FalconModel:()=>a.FalconModel,FalconPreTrainedModel:()=>a.FalconPreTrainedModel,FalconTokenizer:()=>s.FalconTokenizer,FeatureExtractionPipeline:()=>r.FeatureExtractionPipeline,FeatureExtractor:()=>o.FeatureExtractor,FillMaskPipeline:()=>r.FillMaskPipeline,GLPNFeatureExtractor:()=>o.GLPNFeatureExtractor,GLPNForDepthEstimation:()=>a.GLPNForDepthEstimation,GLPNModel:()=>a.GLPNModel,GLPNPreTrainedModel:()=>a.GLPNPreTrainedModel,GPT2LMHeadModel:()=>a.GPT2LMHeadModel,GPT2Model:()=>a.GPT2Model,GPT2PreTrainedModel:()=>a.GPT2PreTrainedModel,GPT2Tokenizer:()=>s.GPT2Tokenizer,GPTBigCodeForCausalLM:()=>a.GPTBigCodeForCausalLM,GPTBigCodeModel:()=>a.GPTBigCodeModel,GPTBigCodePreTrainedModel:()=>a.GPTBigCodePreTrainedModel,GPTJForCausalLM:()=>a.GPTJForCausalLM,GPTJModel:()=>a.GPTJModel,GPTJPreTrainedModel:()=>a.GPTJPreTrainedModel,GPTNeoForCausalLM:()=>a.GPTNeoForCausalLM,GPTNeoModel:()=>a.GPTNeoModel,GPTNeoPreTrainedModel:()=>a.GPTNeoPreTrainedModel,GPTNeoXForCausalLM:()=>a.GPTNeoXForCausalLM,GPTNeoXModel:()=>a.GPTNeoXModel,GPTNeoXPreTrainedModel:()=>a.GPTNeoXPreTrainedModel,GPTNeoXTokenizer:()=>s.GPTNeoXTokenizer,HerbertTokenizer:()=>s.HerbertTokenizer,HubertForCTC:()=>a.HubertForCTC,HubertForSequenceClassification:()=>a.HubertForSequenceClassification,HubertModel:()=>a.HubertModel,HubertPreTrainedModel:()=>a.HubertPreTrainedModel,ImageClassificationPipeline:()=>r.ImageClassificationPipeline,ImageFeatureExtractor:()=>o.ImageFeatureExtractor,ImageMattingOutput:()=>a.ImageMattingOutput,ImageSegmentationPipeline:()=>r.ImageSegmentationPipeline,ImageToImagePipeline:()=>r.ImageToImagePipeline,ImageToTextPipeline:()=>r.ImageToTextPipeline,LlamaForCausalLM:()=>a.LlamaForCausalLM,LlamaModel:()=>a.LlamaModel,LlamaPreTrainedModel:()=>a.LlamaPreTrainedModel,LlamaTokenizer:()=>s.LlamaTokenizer,LongT5ForConditionalGeneration:()=>a.LongT5ForConditionalGeneration,LongT5Model:()=>a.LongT5Model,LongT5PreTrainedModel:()=>a.LongT5PreTrainedModel,M2M100ForConditionalGeneration:()=>a.M2M100ForConditionalGeneration,M2M100Model:()=>a.M2M100Model,M2M100PreTrainedModel:()=>a.M2M100PreTrainedModel,M2M100Tokenizer:()=>s.M2M100Tokenizer,MBart50Tokenizer:()=>s.MBart50Tokenizer,MBartForCausalLM:()=>a.MBartForCausalLM,MBartForConditionalGeneration:()=>a.MBartForConditionalGeneration,MBartForSequenceClassification:()=>a.MBartForSequenceClassification,MBartModel:()=>a.MBartModel,MBartPreTrainedModel:()=>a.MBartPreTrainedModel,MBartTokenizer:()=>s.MBartTokenizer,MPNetForMaskedLM:()=>a.MPNetForMaskedLM,MPNetForQuestionAnswering:()=>a.MPNetForQuestionAnswering,MPNetForSequenceClassification:()=>a.MPNetForSequenceClassification,MPNetForTokenClassification:()=>a.MPNetForTokenClassification,MPNetModel:()=>a.MPNetModel,MPNetPreTrainedModel:()=>a.MPNetPreTrainedModel,MPNetTokenizer:()=>s.MPNetTokenizer,MT5ForConditionalGeneration:()=>a.MT5ForConditionalGeneration,MT5Model:()=>a.MT5Model,MT5PreTrainedModel:()=>a.MT5PreTrainedModel,MarianMTModel:()=>a.MarianMTModel,MarianModel:()=>a.MarianModel,MarianPreTrainedModel:()=>a.MarianPreTrainedModel,MarianTokenizer:()=>s.MarianTokenizer,MaskedLMOutput:()=>a.MaskedLMOutput,MistralForCausalLM:()=>a.MistralForCausalLM,MistralModel:()=>a.MistralModel,MistralPreTrainedModel:()=>a.MistralPreTrainedModel,MobileBertForMaskedLM:()=>a.MobileBertForMaskedLM,MobileBertForQuestionAnswering:()=>a.MobileBertForQuestionAnswering,MobileBertForSequenceClassification:()=>a.MobileBertForSequenceClassification,MobileBertModel:()=>a.MobileBertModel,MobileBertPreTrainedModel:()=>a.MobileBertPreTrainedModel,MobileBertTokenizer:()=>s.MobileBertTokenizer,MobileViTFeatureExtractor:()=>o.MobileViTFeatureExtractor,MobileViTForImageClassification:()=>a.MobileViTForImageClassification,MobileViTModel:()=>a.MobileViTModel,MobileViTPreTrainedModel:()=>a.MobileViTPreTrainedModel,ModelOutput:()=>a.ModelOutput,MptForCausalLM:()=>a.MptForCausalLM,MptModel:()=>a.MptModel,MptPreTrainedModel:()=>a.MptPreTrainedModel,NllbTokenizer:()=>s.NllbTokenizer,NougatImageProcessor:()=>o.NougatImageProcessor,NougatTokenizer:()=>s.NougatTokenizer,OPTForCausalLM:()=>a.OPTForCausalLM,OPTModel:()=>a.OPTModel,OPTPreTrainedModel:()=>a.OPTPreTrainedModel,ObjectDetectionPipeline:()=>r.ObjectDetectionPipeline,OwlViTFeatureExtractor:()=>o.OwlViTFeatureExtractor,OwlViTForObjectDetection:()=>a.OwlViTForObjectDetection,OwlViTModel:()=>a.OwlViTModel,OwlViTPreTrainedModel:()=>a.OwlViTPreTrainedModel,OwlViTProcessor:()=>o.OwlViTProcessor,PhiForCausalLM:()=>a.PhiForCausalLM,PhiModel:()=>a.PhiModel,PhiPreTrainedModel:()=>a.PhiPreTrainedModel,Pipeline:()=>r.Pipeline,PreTrainedModel:()=>a.PreTrainedModel,PreTrainedTokenizer:()=>s.PreTrainedTokenizer,PretrainedConfig:()=>l.PretrainedConfig,PretrainedMixin:()=>a.PretrainedMixin,Processor:()=>o.Processor,QuestionAnsweringModelOutput:()=>a.QuestionAnsweringModelOutput,QuestionAnsweringPipeline:()=>r.QuestionAnsweringPipeline,Qwen2Tokenizer:()=>s.Qwen2Tokenizer,RawImage:()=>d.RawImage,ResNetForImageClassification:()=>a.ResNetForImageClassification,ResNetModel:()=>a.ResNetModel,ResNetPreTrainedModel:()=>a.ResNetPreTrainedModel,RoFormerForMaskedLM:()=>a.RoFormerForMaskedLM,RoFormerForQuestionAnswering:()=>a.RoFormerForQuestionAnswering,RoFormerForSequenceClassification:()=>a.RoFormerForSequenceClassification,RoFormerForTokenClassification:()=>a.RoFormerForTokenClassification,RoFormerModel:()=>a.RoFormerModel,RoFormerPreTrainedModel:()=>a.RoFormerPreTrainedModel,RoFormerTokenizer:()=>s.RoFormerTokenizer,RobertaForMaskedLM:()=>a.RobertaForMaskedLM,RobertaForQuestionAnswering:()=>a.RobertaForQuestionAnswering,RobertaForSequenceClassification:()=>a.RobertaForSequenceClassification,RobertaForTokenClassification:()=>a.RobertaForTokenClassification,RobertaModel:()=>a.RobertaModel,RobertaPreTrainedModel:()=>a.RobertaPreTrainedModel,RobertaTokenizer:()=>s.RobertaTokenizer,SamImageProcessor:()=>o.SamImageProcessor,SamImageSegmentationOutput:()=>a.SamImageSegmentationOutput,SamModel:()=>a.SamModel,SamPreTrainedModel:()=>a.SamPreTrainedModel,SamProcessor:()=>o.SamProcessor,SeamlessM4TFeatureExtractor:()=>o.SeamlessM4TFeatureExtractor,SegformerFeatureExtractor:()=>o.SegformerFeatureExtractor,SegformerForImageClassification:()=>a.SegformerForImageClassification,SegformerForSemanticSegmentation:()=>a.SegformerForSemanticSegmentation,SegformerModel:()=>a.SegformerModel,SegformerPreTrainedModel:()=>a.SegformerPreTrainedModel,Seq2SeqLMOutput:()=>a.Seq2SeqLMOutput,SequenceClassifierOutput:()=>a.SequenceClassifierOutput,SiglipImageProcessor:()=>o.SiglipImageProcessor,SiglipModel:()=>a.SiglipModel,SiglipPreTrainedModel:()=>a.SiglipPreTrainedModel,SiglipTextModel:()=>a.SiglipTextModel,SiglipTokenizer:()=>s.SiglipTokenizer,SiglipVisionModel:()=>a.SiglipVisionModel,SpeechT5FeatureExtractor:()=>o.SpeechT5FeatureExtractor,SpeechT5ForSpeechToText:()=>a.SpeechT5ForSpeechToText,SpeechT5ForTextToSpeech:()=>a.SpeechT5ForTextToSpeech,SpeechT5HifiGan:()=>a.SpeechT5HifiGan,SpeechT5Model:()=>a.SpeechT5Model,SpeechT5PreTrainedModel:()=>a.SpeechT5PreTrainedModel,SpeechT5Processor:()=>o.SpeechT5Processor,SpeechT5Tokenizer:()=>s.SpeechT5Tokenizer,SqueezeBertForMaskedLM:()=>a.SqueezeBertForMaskedLM,SqueezeBertForQuestionAnswering:()=>a.SqueezeBertForQuestionAnswering,SqueezeBertForSequenceClassification:()=>a.SqueezeBertForSequenceClassification,SqueezeBertModel:()=>a.SqueezeBertModel,SqueezeBertPreTrainedModel:()=>a.SqueezeBertPreTrainedModel,SqueezeBertTokenizer:()=>s.SqueezeBertTokenizer,SummarizationPipeline:()=>r.SummarizationPipeline,Swin2SRForImageSuperResolution:()=>a.Swin2SRForImageSuperResolution,Swin2SRImageProcessor:()=>o.Swin2SRImageProcessor,Swin2SRModel:()=>a.Swin2SRModel,Swin2SRPreTrainedModel:()=>a.Swin2SRPreTrainedModel,SwinForImageClassification:()=>a.SwinForImageClassification,SwinModel:()=>a.SwinModel,SwinPreTrainedModel:()=>a.SwinPreTrainedModel,T5ForConditionalGeneration:()=>a.T5ForConditionalGeneration,T5Model:()=>a.T5Model,T5PreTrainedModel:()=>a.T5PreTrainedModel,T5Tokenizer:()=>s.T5Tokenizer,TableTransformerForObjectDetection:()=>a.TableTransformerForObjectDetection,TableTransformerModel:()=>a.TableTransformerModel,TableTransformerObjectDetectionOutput:()=>a.TableTransformerObjectDetectionOutput,TableTransformerPreTrainedModel:()=>a.TableTransformerPreTrainedModel,Tensor:()=>c.Tensor,Text2TextGenerationPipeline:()=>r.Text2TextGenerationPipeline,TextClassificationPipeline:()=>r.TextClassificationPipeline,TextGenerationPipeline:()=>r.TextGenerationPipeline,TextToAudioPipeline:()=>r.TextToAudioPipeline,TokenClassificationPipeline:()=>r.TokenClassificationPipeline,TokenClassifierOutput:()=>a.TokenClassifierOutput,TokenizerModel:()=>s.TokenizerModel,TrOCRForCausalLM:()=>a.TrOCRForCausalLM,TrOCRPreTrainedModel:()=>a.TrOCRPreTrainedModel,TranslationPipeline:()=>r.TranslationPipeline,ViTFeatureExtractor:()=>o.ViTFeatureExtractor,ViTForImageClassification:()=>a.ViTForImageClassification,ViTImageProcessor:()=>o.ViTImageProcessor,ViTModel:()=>a.ViTModel,ViTPreTrainedModel:()=>a.ViTPreTrainedModel,VisionEncoderDecoderModel:()=>a.VisionEncoderDecoderModel,VitMatteForImageMatting:()=>a.VitMatteForImageMatting,VitMatteImageProcessor:()=>o.VitMatteImageProcessor,VitMattePreTrainedModel:()=>a.VitMattePreTrainedModel,VitsModel:()=>a.VitsModel,VitsModelOutput:()=>a.VitsModelOutput,VitsPreTrainedModel:()=>a.VitsPreTrainedModel,VitsTokenizer:()=>s.VitsTokenizer,Wav2Vec2CTCTokenizer:()=>s.Wav2Vec2CTCTokenizer,Wav2Vec2FeatureExtractor:()=>o.Wav2Vec2FeatureExtractor,Wav2Vec2ForCTC:()=>a.Wav2Vec2ForCTC,Wav2Vec2ForSequenceClassification:()=>a.Wav2Vec2ForSequenceClassification,Wav2Vec2Model:()=>a.Wav2Vec2Model,Wav2Vec2PreTrainedModel:()=>a.Wav2Vec2PreTrainedModel,Wav2Vec2ProcessorWithLM:()=>o.Wav2Vec2ProcessorWithLM,WavLMForCTC:()=>a.WavLMForCTC,WavLMForSequenceClassification:()=>a.WavLMForSequenceClassification,WavLMModel:()=>a.WavLMModel,WavLMPreTrainedModel:()=>a.WavLMPreTrainedModel,WhisperFeatureExtractor:()=>o.WhisperFeatureExtractor,WhisperForConditionalGeneration:()=>a.WhisperForConditionalGeneration,WhisperModel:()=>a.WhisperModel,WhisperPreTrainedModel:()=>a.WhisperPreTrainedModel,WhisperProcessor:()=>o.WhisperProcessor,WhisperTokenizer:()=>s.WhisperTokenizer,XLMForQuestionAnswering:()=>a.XLMForQuestionAnswering,XLMForSequenceClassification:()=>a.XLMForSequenceClassification,XLMForTokenClassification:()=>a.XLMForTokenClassification,XLMModel:()=>a.XLMModel,XLMPreTrainedModel:()=>a.XLMPreTrainedModel,XLMRobertaForMaskedLM:()=>a.XLMRobertaForMaskedLM,XLMRobertaForQuestionAnswering:()=>a.XLMRobertaForQuestionAnswering,XLMRobertaForSequenceClassification:()=>a.XLMRobertaForSequenceClassification,XLMRobertaForTokenClassification:()=>a.XLMRobertaForTokenClassification,XLMRobertaModel:()=>a.XLMRobertaModel,XLMRobertaPreTrainedModel:()=>a.XLMRobertaPreTrainedModel,XLMRobertaTokenizer:()=>s.XLMRobertaTokenizer,XLMTokenizer:()=>s.XLMTokenizer,XLMWithLMHeadModel:()=>a.XLMWithLMHeadModel,YolosFeatureExtractor:()=>o.YolosFeatureExtractor,YolosForObjectDetection:()=>a.YolosForObjectDetection,YolosModel:()=>a.YolosModel,YolosObjectDetectionOutput:()=>a.YolosObjectDetectionOutput,YolosPreTrainedModel:()=>a.YolosPreTrainedModel,ZeroShotAudioClassificationPipeline:()=>r.ZeroShotAudioClassificationPipeline,ZeroShotClassificationPipeline:()=>r.ZeroShotClassificationPipeline,ZeroShotImageClassificationPipeline:()=>r.ZeroShotImageClassificationPipeline,ZeroShotObjectDetectionPipeline:()=>r.ZeroShotObjectDetectionPipeline,cat:()=>c.cat,cos_sim:()=>h.cos_sim,dot:()=>h.dot,dynamicTimeWarping:()=>c.dynamicTimeWarping,env:()=>i.env,getTopItems:()=>h.getTopItems,hanning:()=>u.hanning,interpolate:()=>c.interpolate,interpolate_data:()=>h.interpolate_data,log_softmax:()=>h.log_softmax,magnitude:()=>h.magnitude,max:()=>h.max,mean:()=>c.mean,mean_pooling:()=>c.mean_pooling,medianFilter:()=>h.medianFilter,mel_filter_bank:()=>u.mel_filter_bank,min:()=>h.min,ones:()=>c.ones,ones_like:()=>c.ones_like,pipeline:()=>r.pipeline,read_audio:()=>u.read_audio,round:()=>h.round,softmax:()=>h.softmax,spectrogram:()=>u.spectrogram,stack:()=>c.stack,std_mean:()=>c.std_mean,transpose:()=>c.transpose,transpose_data:()=>h.transpose_data,window_function:()=>u.window_function});var r=n(/*! ./pipelines.js */"./src/pipelines.js"),i=n(/*! ./env.js */"./src/env.js"),a=n(/*! ./models.js */"./src/models.js"),s=n(/*! ./tokenizers.js */"./src/tokenizers.js"),o=n(/*! ./processors.js */"./src/processors.js"),l=n(/*! ./configs.js */"./src/configs.js"),u=n(/*! ./utils/audio.js */"./src/utils/audio.js"),d=n(/*! ./utils/image.js */"./src/utils/image.js"),c=n(/*! ./utils/tensor.js */"./src/utils/tensor.js"),h=n(/*! ./utils/maths.js */"./src/utils/maths.js")},"./src/utils/audio.js":
/*!****************************!*\
  !*** ./src/utils/audio.js ***!
  \****************************/(e,t,n)=>{n.r(t),n.d(t,{hanning:()=>o,mel_filter_bank:()=>h,read_audio:()=>s,spectrogram:()=>f,window_function:()=>m});var r=n(/*! ./hub.js */"./src/utils/hub.js"),i=n(/*! ./maths.js */"./src/utils/maths.js"),a=n(/*! ./core.js */"./src/utils/core.js");async function s(e,t){if("undefined"==typeof AudioContext)throw Error("Unable to load audio from path/URL since `AudioContext` is not available in your environment. Instead, audio data should be passed directly to the pipeline/processor. For more information and some example code, see https://huggingface.co/docs/transformers.js/guides/node-audio-processing.");const n=await(await(0,r.getFile)(e)).arrayBuffer(),i=new AudioContext({sampleRate:t});void 0===t&&console.warn(`No sampling rate provided, using default of ${i.sampleRate}Hz.`);const a=await i.decodeAudioData(n);let s;if(2===a.numberOfChannels){const e=Math.sqrt(2),t=a.getChannelData(0),n=a.getChannelData(1);s=new Float32Array(t.length);for(let r=0;r<a.length;++r)s[r]=e*(t[r]+n[r])/2}else s=a.getChannelData(0);return s}function o(e){if(e<1)return new Float64Array;if(1===e)return new Float64Array([1]);const t=e-1,n=Math.PI/t,r=new Float64Array(e);for(let i=0;i<e;++i){const e=2*i-t;r[i]=.5+.5*Math.cos(n*e)}return r}const l={htk:e=>2595*Math.log10(1+e/700),kaldi:e=>1127*Math.log(1+e/700),slaney:(e,t=1e3,n=15,r=27/Math.log(6.4))=>e>=t?n+Math.log(e/t)*r:3*e/200};function u(e,t="htk"){const n=l[t];if(!n)throw new Error('mel_scale should be one of "htk", "slaney" or "kaldi".');return"number"==typeof e?n(e):e.map((e=>n(e)))}const d={htk:e=>700*(10**(e/2595)-1),kaldi:e=>700*(Math.exp(e/1127)-1),slaney:(e,t=1e3,n=15,r=Math.log(6.4)/27)=>e>=n?t*Math.exp(r*(e-n)):200*e/3};function c(e,t,n){const r=(t-e)/(n-1);return Float64Array.from({length:n},((t,n)=>e+r*n))}function h(e,t,n,r,i,a=null,s="htk",o=!1){if(null!==a&&"slaney"!==a)throw new Error('norm must be one of null or "slaney"');const l=c(u(n,s),u(r,s),t+2);let h,p=function(e,t="htk"){const n=d[t];if(!n)throw new Error('mel_scale should be one of "htk", "slaney" or "kaldi".');return"number"==typeof e?n(e):e.map((e=>n(e)))}(l,s);if(o){const t=i/(2*e);h=u(Float64Array.from({length:e},((e,n)=>n*t)),s),p=l}else h=c(0,Math.floor(i/2),e);const f=function(e,t){const n=Float64Array.from({length:t.length-1},((e,n)=>t[n+1]-t[n])),r=Array.from({length:e.length},(()=>new Array(t.length)));for(let n=0;n<e.length;++n){const i=r[n];for(let r=0;r<t.length;++r)i[r]=t[r]-e[n]}const i=t.length-2,a=Array.from({length:i},(()=>new Array(e.length)));for(let t=0;t<e.length;++t){const e=r[t];for(let r=0;r<i;++r){const i=-e[r]/n[r],s=e[r+2]/n[r+1];a[r][t]=Math.max(0,Math.min(i,s))}}return a}(h,p);if(null!==a&&"slaney"===a)for(let n=0;n<t;++n){const t=f[n],r=2/(p[n+2]-p[n]);for(let n=0;n<e;++n)t[n]*=r}return f}function p(e,t,n,r,a){if(n<=0)throw new Error("reference must be greater than zero");if(r<=0)throw new Error("min_value must be greater than zero");n=Math.max(r,n);const s=Math.log10(n);for(let n=0;n<e.length;++n)e[n]=t*Math.log10(Math.max(r,e[n])-s);if(null!==a){if(a<=0)throw new Error("db_range must be greater than zero");const t=(0,i.max)(e)[0]-a;for(let n=0;n<e.length;++n)e[n]=Math.max(e[n],t)}return e}function f(e,t,n,r,{fft_length:s=null,power:o=1,center:l=!0,pad_mode:u="reflect",onesided:d=!0,preemphasis:c=null,mel_filters:h=null,mel_floor:f=1e-10,log_mel:m=null,reference:g=1,min_value:_=1e-10,db_range:y=null,remove_dc_offset:w=null,max_num_frames:v=null,do_pad:b=!0,transpose:$=!1}={}){const x=t.length;if(null===s&&(s=n),n>s)throw Error(`frame_length (${n}) may not be larger than fft_length (${s})`);if(x!==n)throw new Error(`Length of the window (${x}) must equal frame_length (${n})`);if(r<=0)throw new Error("hop_length must be greater than zero");if(l){if("reflect"!==u)throw new Error(`pad_mode="${u}" not implemented yet.`);const t=Math.floor((s-1)/2)+1;e=function(e,t,n){const r=new e.constructor(e.length+t+n),i=e.length-1;for(let n=0;n<e.length;++n)r[t+n]=e[n];for(let n=1;n<=t;++n)r[t-n]=e[(0,a.calculateReflectOffset)(n,i)];for(let s=1;s<=n;++s)r[i+t+s]=e[(0,a.calculateReflectOffset)(i-s,i)];return r}(e,t,t)}const C=Math.floor(1+Math.floor((e.length-n)/r)),T=d?Math.floor(s/2)+1:s;let S=C,M=C;null!==v&&(v>C?b&&(M=v):M=S=v);const k=new i.FFT(s),E=new Float64Array(s),A=new Float64Array(k.outputBufferSize),I=new Array(S);for(let i=0;i<S;++i){const a=i*r;for(let t=0;t<n;++t)E[t]=e[a+t];if(w){let e=0;for(let t=0;t<n;++t)e+=E[t];const t=e/n;for(let e=0;e<n;++e)E[e]-=t}if(null!==c){for(let e=n-1;e>=1;--e)E[e]-=c*E[e-1];E[0]*=1-c}for(let e=0;e<t.length;++e)E[e]*=t[e];k.realTransform(A,E);const s=new Array(T);for(let e=0;e<s.length;++e){const t=e<<1;s[e]=A[t]**2+A[t+1]**2}I[i]=s}if(null!==o&&2!==o){const e=2/o;for(let t=0;t<I.length;++t){const n=I[t];for(let t=0;t<n.length;++t)n[t]**=e}}const P=h.length,O=new Float32Array(P*M),z=$?[M,P]:[P,M];for(let e=0;e<P;++e){const t=h[e];for(let n=0;n<S;++n){const r=I[n];let i=0;for(let e=0;e<T;++e)i+=t[e]*r[e];O[$?n*P+e:e*S+n]=Math.max(f,i)}}if(null!==o&&null!==m){const e=Math.min(O.length,S*P);switch(m){case"log":for(let t=0;t<e;++t)O[t]=Math.log(O[t]);break;case"log10":for(let t=0;t<e;++t)O[t]=Math.log10(O[t]);break;case"dB":if(1===o)!function(e,t=1,n=1e-5,r=null){p(e,20,t,n,r)}(O,g,_,y);else{if(2!==o)throw new Error(`Cannot use log_mel option '${m}' with power ${o}`);!function(e,t=1,n=1e-10,r=null){p(e,10,t,n,r)}(O,g,_,y)}break;default:throw new Error(`log_mel must be one of null, 'log', 'log10' or 'dB'. Got '${m}'`)}}return{data:O,dims:z}}function m(e,t,{periodic:n=!0,frame_length:r=null,center:i=!0}={}){const a=n?e+1:e;let s;switch(t){case"boxcar":s=new Float64Array(a).fill(1);break;case"hann":case"hann_window":s=o(a);break;case"povey":s=o(a).map((e=>Math.pow(e,.85)));break;default:throw new Error(`Unknown window type ${t}.`)}if(n&&(s=s.subarray(0,e)),null===r)return s;if(e>r)throw new Error(`Length of the window (${e}) may not be larger than frame_length (${r})`);return s}},"./src/utils/core.js":
/*!***************************!*\
  !*** ./src/utils/core.js ***!
  \***************************/(e,t,n)=>{function r(e,t){e&&e(t)}function i(e){return Object.fromEntries(Object.entries(e).map((([e,t])=>[t,e])))}function a(e){return e.replace(/[.*+?^${}()|[\]\\]/g,"\\$&")}n.r(t),n.d(t,{Callable:()=>s,calculateDimensions:()=>d,calculateReflectOffset:()=>f,dispatchCallback:()=>r,escapeRegExp:()=>a,exists:()=>u,isIntegralNumber:()=>l,isTypedArray:()=>o,mergeArrays:()=>h,pop:()=>c,product:()=>p,reverseDictionary:()=>i});const s=class{constructor(){let e=function(...t){return e._call(...t)};return Object.setPrototypeOf(e,new.target.prototype)}_call(...e){throw Error("Must implement _call method in subclass")}};function o(e){return"TypedArray"===e?.prototype?.__proto__?.constructor?.name}function l(e){return Number.isInteger(e)||"bigint"==typeof e}function u(e){return null!=e}function d(e){const t=[];let n=e;for(;Array.isArray(n);)t.push(n.length),n=n[0];return t}function c(e,t,n=void 0){const r=e[t];if(void 0!==r)return delete e[t],r;if(void 0===n)throw Error(`Key ${t} does not exist in object.`);return n}function h(...e){return Array.prototype.concat.apply([],e)}function p(...e){return e.reduce(((e,t)=>e.flatMap((e=>t.map((t=>[e,t]))))))}function f(e,t){return Math.abs((e+t)%(2*t)-t)}},"./src/utils/data-structures.js":
/*!**************************************!*\
  !*** ./src/utils/data-structures.js ***!
  \**************************************/(e,t,n)=>{n.r(t),n.d(t,{CharTrie:()=>i,PriorityQueue:()=>r,TokenLattice:()=>s});class r{constructor(e=((e,t)=>e>t)){this._heap=[],this._comparator=e}get size(){return this._heap.length}isEmpty(){return 0===this.size}peek(){return this._heap[0]}push(...e){return this.extend(e)}extend(e){for(const t of e)this._heap.push(t),this._siftUp();return this.size}pop(){const e=this.peek(),t=this.size-1;return t>0&&this._swap(0,t),this._heap.pop(),this._siftDown(),e}replace(e){const t=this.peek();return this._heap[0]=e,this._siftDown(),t}_parent(e){return(e+1>>>1)-1}_left(e){return 1+(e<<1)}_right(e){return e+1<<1}_greater(e,t){return this._comparator(this._heap[e],this._heap[t])}_swap(e,t){const n=this._heap[e];this._heap[e]=this._heap[t],this._heap[t]=n}_siftUp(){let e=this.size-1;for(;e>0&&this._greater(e,this._parent(e));)this._swap(e,this._parent(e)),e=this._parent(e)}_siftDown(){let e=0;for(;this._left(e)<this.size&&this._greater(this._left(e),e)||this._right(e)<this.size&&this._greater(this._right(e),e);){const t=this._right(e)<this.size&&this._greater(this._right(e),this._left(e))?this._right(e):this._left(e);this._swap(e,t),e=t}}}class i{constructor(){this.root=a.default()}extend(e){for(let t of e)this.push(t)}push(e){let t=this.root;for(let n of e){let e=t.children.get(n);void 0===e&&(e=a.default(),t.children.set(n,e)),t=e}t.isLeaf=!0}*commonPrefixSearch(e){let t=this.root,n="";for(let r=0;r<e.length&&void 0!==t;++r){const i=e[r];n+=i,t=t.children.get(i),void 0!==t&&t.isLeaf&&(yield n)}}}class a{constructor(e,t){this.isLeaf=e,this.children=t}static default(){return new a(!1,new Map)}}class s{constructor(e,t,n){this.sentence=e,this.len=e.length,this.bosTokenId=t,this.eosTokenId=n,this.nodes=[],this.beginNodes=Array.from({length:this.len+1},(()=>[])),this.endNodes=Array.from({length:this.len+1},(()=>[]));const r=new o(this.bosTokenId,0,0,0,0),i=new o(this.eosTokenId,1,this.len,0,0);this.nodes.push(r.clone()),this.nodes.push(i.clone()),this.beginNodes[this.len].push(i),this.endNodes[0].push(r)}insert(e,t,n,r){const i=this.nodes.length,a=new o(r,i,e,t,n);this.beginNodes[e].push(a),this.endNodes[e+t].push(a),this.nodes.push(a)}viterbi(){const e=this.len;let t=0;for(;t<=e;){if(0==this.beginNodes[t].length)return[];for(let e of this.beginNodes[t]){e.prev=null;let n=0,r=null;for(let i of this.endNodes[t]){const t=i.backtraceScore+e.score;(null===r||t>n)&&(r=i.clone(),n=t)}if(null===r)return[];e.prev=r,e.backtraceScore=n}++t}const n=[],r=this.beginNodes[e][0].prev;if(null===r)return[];let i=r.clone();for(;null!==i.prev;){n.push(i.clone());const e=i.clone();i=e.prev.clone()}return n.reverse(),n}piece(e){return this.sentence.slice(e.pos,e.pos+e.length)}tokens(){return this.viterbi().map((e=>this.piece(e)))}tokenIds(){return this.viterbi().map((e=>e.tokenId))}}class o{constructor(e,t,n,r,i){this.tokenId=e,this.nodeId=t,this.pos=n,this.length=r,this.score=i,this.prev=null,this.backtraceScore=0}clone(){const e=new o(this.tokenId,this.nodeId,this.pos,this.length,this.score);return e.prev=this.prev,e.backtraceScore=this.backtraceScore,e}}},"./src/utils/generation.js":
/*!*********************************!*\
  !*** ./src/utils/generation.js ***!
  \*********************************/(e,t,n)=>{n.r(t),n.d(t,{ForceTokensLogitsProcessor:()=>o,ForcedBOSTokenLogitsProcessor:()=>l,ForcedEOSTokenLogitsProcessor:()=>u,GenerationConfig:()=>_,LogitsProcessor:()=>s,LogitsProcessorList:()=>a,MinLengthLogitsProcessor:()=>f,MinNewTokensLengthLogitsProcessor:()=>m,NoBadWordsLogitsProcessor:()=>g,NoRepeatNGramLogitsProcessor:()=>h,RepetitionPenaltyLogitsProcessor:()=>p,Sampler:()=>y,SuppressTokensAtBeginLogitsProcessor:()=>d,WhisperTimeStampLogitsProcessor:()=>c});n(/*! ./tensor.js */"./src/utils/tensor.js");var r=n(/*! ./core.js */"./src/utils/core.js"),i=n(/*! ./maths.js */"./src/utils/maths.js");class a extends r.Callable{constructor(){super(),this.processors=[]}push(e){this.processors.push(e)}extend(e){this.processors.push(...e)}_call(e,t){for(let n of t)this.processors.forEach((t=>t(e,n)))}[Symbol.iterator](){return this.processors.values()}}class s extends r.Callable{_call(e,t){throw Error("`_call` should be implemented in a subclass")}}class o extends s{constructor(e){super(),this.force_token_map=Object.fromEntries(e??[])}_call(e,t){let n=this.force_token_map[e.length];return(0,r.exists)(n)&&(t.data.fill(-1/0),t.data[n]=0),t}}class l extends s{constructor(e){super(),this.bos_token_id=e}_call(e,t){return 1===e.length&&(t.data.fill(-1/0),t.data[this.bos_token_id]=0),t}}class u extends s{constructor(e,t){super(),this.max_length=e,this.forced_eos_token_id=t}_call(e,t){}}class d extends s{constructor(e,t){super(),this.begin_suppress_tokens=e,this.begin_index=t}_call(e,t){if(e.length===this.begin_index)for(let e of this.begin_suppress_tokens)t.data[e]=-1/0;return t}}class c extends s{constructor(e){super(),this.eos_token_id=e.eos_token_id,this.no_timestamps_token_id=e.no_timestamps_token_id,this.timestamp_begin=this.no_timestamps_token_id+1,this.begin_index=(e.forced_decoder_ids||[]).length+2,e.forced_decoder_ids.slice(-1)[0][1]===this.no_timestamps_token_id&&(this.begin_index-=1),this.max_initial_timestamp_index=e.max_initial_timestamp_index}_call(e,t){const n=t.data;if(n[this.no_timestamps_token_id]=-1/0,e.length===this.begin_index-1)return n.fill(-1/0),n[this.timestamp_begin]=0,t;const r=e.slice(this.begin_index),a=r.length>=1&&r[r.length-1]>=this.timestamp_begin,s=r.length<2||r[r.length-2]>=this.timestamp_begin;if(a&&(s?n.subarray(this.timestamp_begin).fill(-1/0):n.subarray(0,this.eos_token_id).fill(-1/0)),e.length===this.begin_index&&null!==this.max_initial_timestamp_index){const e=this.timestamp_begin+this.max_initial_timestamp_index;n.subarray(e+1).fill(-1/0)}const o=(0,i.log_softmax)(n);return Math.log(o.subarray(this.timestamp_begin).map(Math.exp).reduce(((e,t)=>e+t)))>(0,i.max)(o.subarray(0,this.timestamp_begin))[0]&&n.subarray(0,this.timestamp_begin).fill(-1/0),t}}class h extends s{constructor(e){super(),this.no_repeat_ngram_size=e}getNgrams(e){const t=e.length,n=[];for(let r=0;r<t+1-this.no_repeat_ngram_size;++r){const t=[];for(let n=0;n<this.no_repeat_ngram_size;++n)t.push(e[r+n]);n.push(t)}const r=new Map;for(const e of n){const t=e.slice(0,e.length-1),n=JSON.stringify(t),i=r.get(n)??[];i.push(e[e.length-1]),r.set(n,i)}return r}getGeneratedNgrams(e,t){const n=t.slice(t.length+1-this.no_repeat_ngram_size,t.length);return e.get(JSON.stringify(n))??[]}calcBannedNgramTokens(e){const t=[];if(e.length+1<this.no_repeat_ngram_size)return t;{const t=this.getNgrams(e);return this.getGeneratedNgrams(t,e)}}_call(e,t){const n=this.calcBannedNgramTokens(e);for(const e of n)t.data[e]=-1/0;return t}}class p extends s{constructor(e){super(),this.penalty=e}_call(e,t){for(const n of e)t.data[n]<0?t.data[n]*=this.penalty:t.data[n]/=this.penalty;return t}}class f extends s{constructor(e,t){super(),this.min_length=e,this.eos_token_id=Array.isArray(t)?t:[t]}_call(e,t){if(e.length<this.min_length)for(const e of this.eos_token_id)t.data[e]=-1/0;return t}}class m extends s{constructor(e,t,n){super(),this.prompt_length_to_skip=e,this.min_new_tokens=t,this.eos_token_id=Array.isArray(n)?n:[n]}_call(e,t){if(e.length-this.prompt_length_to_skip<this.min_new_tokens)for(const e of this.eos_token_id)t.data[e]=-1/0;return t}}class g extends s{constructor(e,t){super(),this.bad_words_ids=e,this.eos_token_id=Array.isArray(t)?t:[t]}_call(e,t){for(const n of this.bad_words_ids){let r=!0;for(let t=1;t<=n.length-1&&n.length<e.length;++t)if(n.at(-t-1)!==e.at(-t)){r=!1;break}r&&(t.data[n.at(-1)]=-1/0)}return t}}const _=class{constructor(e={}){this.max_length=e.max_length??20,this.max_new_tokens=e.max_new_tokens??null,this.min_length=e.min_length??0,this.min_new_tokens=e.min_new_tokens??null,this.early_stopping=e.early_stopping??!1,this.max_time=e.max_time??null,this.do_sample=e.do_sample??!1,this.num_beams=e.num_beams??1,this.num_beam_groups=e.num_beam_groups??1,this.penalty_alpha=e.penalty_alpha??null,this.use_cache=e.use_cache??!0,this.temperature=e.temperature??1,this.top_k=e.top_k??50,this.top_p=e.top_p??1,this.typical_p=e.typical_p??1,this.epsilon_cutoff=e.epsilon_cutoff??0,this.eta_cutoff=e.eta_cutoff??0,this.diversity_penalty=e.diversity_penalty??0,this.repetition_penalty=e.repetition_penalty??1,this.encoder_repetition_penalty=e.encoder_repetition_penalty??1,this.length_penalty=e.length_penalty??1,this.no_repeat_ngram_size=e.no_repeat_ngram_size??0,this.bad_words_ids=e.bad_words_ids??null,this.force_words_ids=e.force_words_ids??null,this.renormalize_logits=e.renormalize_logits??!1,this.constraints=e.constraints??null,this.forced_bos_token_id=e.forced_bos_token_id??null,this.forced_eos_token_id=e.forced_eos_token_id??null,this.remove_invalid_values=e.remove_invalid_values??!1,this.exponential_decay_length_penalty=e.exponential_decay_length_penalty??null,this.suppress_tokens=e.suppress_tokens??null,this.begin_suppress_tokens=e.begin_suppress_tokens??null,this.forced_decoder_ids=e.forced_decoder_ids??null,this.num_return_sequences=e.num_return_sequences??1,this.output_attentions=e.output_attentions??!1,this.output_hidden_states=e.output_hidden_states??!1,this.output_scores=e.output_scores??!1,this.return_dict_in_generate=e.return_dict_in_generate??!1,this.pad_token_id=e.pad_token_id??null,this.bos_token_id=e.bos_token_id??null,this.eos_token_id=e.eos_token_id??null,this.encoder_no_repeat_ngram_size=e.encoder_no_repeat_ngram_size??0,this.decoder_start_token_id=e.decoder_start_token_id??null,this.generation_kwargs=e.generation_kwargs??{}}};class y extends r.Callable{constructor(e){super(),this.generation_config=e}_call(e,t=-1){return this.sample(e,t)}sample(e,t){throw Error("sample should be implemented in subclasses.")}getLogits(e,t){let n=e.dims.at(-1),r=e.data;if(-1===t)r=r.slice(-n);else{let e=t*n;r=r.slice(e,e+n)}return this.generation_config.temperature>0&&(r=r.map((e=>e/this.generation_config.temperature))),r}randomSelect(e){let t=e.reduce(((e,t)=>e+t),0),n=Math.random()*t;for(let t=0;t<e.length;++t)if(n-=e[t],n<=0)return t;return 0}static getSampler(e){if(e.do_sample)return new v(e);if(e.num_beams>1)return new b(e);if(e.num_return_sequences>1)throw Error(`num_return_sequences has to be 1 when doing greedy search, but is ${e.num_return_sequences}.`);return new w(e)}}class w extends y{sample(e,t=-1){let n=this.getLogits(e,t);return[[(0,i.max)(n)[1],0]]}}class v extends y{sample(e,t=-1){let n=e.dims.at(-1);this.generation_config.top_k>0&&(n=Math.min(this.generation_config.top_k,n));const r=this.getLogits(e,t),a=(0,i.getTopItems)(r,n),s=(0,i.softmax)(a.map((e=>e[1])));return Array.from({length:this.generation_config.num_beams},(()=>{const e=this.randomSelect(s);return[a[e][0],Math.log(s[e])]}))}}class b extends y{sample(e,t=-1){let n=e.dims.at(-1);this.generation_config.top_k>0&&(n=Math.min(this.generation_config.top_k,n));const r=this.getLogits(e,t),a=(0,i.getTopItems)(r,n),s=(0,i.softmax)(a.map((e=>e[1])));return Array.from({length:this.generation_config.num_beams},((e,t)=>[a[t][0],Math.log(s[t])]))}}},"./src/utils/hub.js":
/*!**************************!*\
  !*** ./src/utils/hub.js ***!
  \**************************/(e,t,n)=>{n.r(t),n.d(t,{getFile:()=>d,getModelFile:()=>p,getModelJSON:()=>f});var r=n(/*! fs */"?7a2c"),i=n(/*! path */"?a42a"),a=n(/*! stream/web */"?e65c"),s=n(/*! ../env.js */"./src/env.js"),o=n(/*! ./core.js */"./src/utils/core.js");globalThis.ReadableStream||(globalThis.ReadableStream=a.ReadableStream);class l{_CONTENT_TYPE_MAP={txt:"text/plain",html:"text/html",css:"text/css",js:"text/javascript",json:"application/json",png:"image/png",jpg:"image/jpeg",jpeg:"image/jpeg",gif:"image/gif"};constructor(e){if(this.filePath=e,this.headers=new Headers,this.exists=r.existsSync(e),this.exists){this.status=200,this.statusText="OK";let t=r.statSync(e);this.headers.set("content-length",t.size.toString()),this.updateContentType();let n=this;this.body=new ReadableStream({start(e){n.arrayBuffer().then((t=>{e.enqueue(new Uint8Array(t)),e.close()}))}})}else this.status=404,this.statusText="Not Found",this.body=null}updateContentType(){const e=this.filePath.toString().split(".").pop().toLowerCase();this.headers.set("content-type",this._CONTENT_TYPE_MAP[e]??"application/octet-stream")}clone(){let e=new l(this.filePath);return e.exists=this.exists,e.status=this.status,e.statusText=this.statusText,e.headers=new Headers(this.headers),e}async arrayBuffer(){return(await r.promises.readFile(this.filePath)).buffer}async blob(){const e=await r.promises.readFile(this.filePath);return new Blob([e],{type:this.headers.get("content-type")})}async text(){return await r.promises.readFile(this.filePath,"utf8")}async json(){return JSON.parse(await this.text())}}function u(e,t=null){let n;try{n=new URL(e)}catch(e){return!1}return!(t&&!t.includes(n.hostname))&&("http:"===n.protocol||"https:"===n.protocol)}async function d(e){if(s.env.useFS&&!u(e))return new l(e);if("undefined"!=typeof process&&"node"===process?.release?.name){const t=!!process.env?.TESTING_REMOTELY,n=s.env.version,r=new Headers;r.set("User-Agent",`transformers.js/${n}; is_ci/${t};`);if(u(e,["huggingface.co","hf.co"])){const e=process.env?.HF_TOKEN??process.env?.HF_ACCESS_TOKEN;e&&r.set("Authorization",`Bearer ${e}`)}return fetch(e,{headers:r})}return fetch(e)}const c={400:"Bad request error occurred while trying to load file",401:"Unauthorized access to file",403:"Forbidden access to file",404:"Could not locate file",408:"Request timeout error occurred while trying to load file",500:"Internal server error error occurred while trying to load file",502:"Bad gateway error occurred while trying to load file",503:"Service unavailable error occurred while trying to load file",504:"Gateway timeout error occurred while trying to load file"};class h{constructor(e){this.path=e}async match(e){let t=i.join(this.path,e),n=new l(t);return n.exists?n:void 0}async put(e,t){const n=Buffer.from(await t.arrayBuffer());let a=i.join(this.path,e);try{await r.promises.mkdir(i.dirname(a),{recursive:!0}),await r.promises.writeFile(a,n)}catch(e){console.warn("An error occurred while writing the file to cache:",e)}}}async function p(e,t,n=!0,r={}){if(!s.env.allowLocalModels){if(r.local_files_only)throw Error("Invalid configuration detected: local models are disabled (`env.allowLocalModels=false`) but you have requested to only use local models (`local_files_only=true`).");if(!s.env.allowRemoteModels)throw Error("Invalid configuration detected: both local and remote models are disabled. Fix by setting `env.allowLocalModels` or `env.allowRemoteModels` to `true`.")}let i;if((0,o.dispatchCallback)(r.progress_callback,{status:"initiate",name:e,file:t}),!i&&s.env.useBrowserCache){if("undefined"==typeof caches)throw Error("Browser cache is not available in this environment.");try{i=await caches.open("transformers-cache")}catch(e){console.warn("An error occurred while opening the browser cache:",e)}}if(!i&&s.env.useFSCache&&(i=new h(r.cache_dir??s.env.cacheDir)),!i&&s.env.useCustomCache){if(!s.env.customCache)throw Error("`env.useCustomCache=true`, but `env.customCache` is not defined.");if(!s.env.customCache.match||!s.env.customCache.put)throw new Error("`env.customCache` must be an object which implements the `match` and `put` functions of the Web Cache API. For more information, see https://developer.mozilla.org/en-US/docs/Web/API/Cache");i=s.env.customCache}const a=r.revision??"main";let l,p,f=m(e,t),g=m(s.env.localModelPath,f),_=m(s.env.remoteHost,s.env.remotePathTemplate.replaceAll("{model}",e).replaceAll("{revision}",encodeURIComponent(a)),t),y="main"===a?f:m(e,a,t),w=i instanceof h?y:_,v=!1;i&&(p=await async function(e,...t){for(let n of t)try{let t=await e.match(n);if(t)return t}catch(e){continue}}(i,g,w));const b=void 0!==p;if(void 0===p){if(s.env.allowLocalModels){if(u(f)){if(r.local_files_only)throw new Error(`\`local_files_only=true\`, but attempted to load a remote file from: ${f}.`);if(!s.env.allowRemoteModels)throw new Error(`\`env.allowRemoteModels=false\`, but attempted to load a remote file from: ${f}.`)}else try{p=await d(g),l=g}catch(e){console.warn(`Unable to load from local path "${g}": "${e}"`)}}if(void 0===p||404===p.status){if(r.local_files_only||!s.env.allowRemoteModels){if(n)throw Error(`\`local_files_only=true\` or \`env.allowRemoteModels=false\` and file was not found locally at "${g}".`);return null}if(p=await d(_),200!==p.status)return function(e,t,n){if(!n)return null;const r=c[e]??`Error (${e}) occurred while trying to load file`;throw Error(`${r}: "${t}".`)}(p.status,_,n);l=w}v=i&&"undefined"!=typeof Response&&p instanceof Response&&200===p.status}(0,o.dispatchCallback)(r.progress_callback,{status:"download",name:e,file:t});const $={status:"progress",name:e,file:t};let x;return r.progress_callback?b&&"undefined"!=typeof navigator&&/firefox/i.test(navigator.userAgent)?(x=new Uint8Array(await p.arrayBuffer()),(0,o.dispatchCallback)(r.progress_callback,{...$,progress:100,loaded:x.length,total:x.length})):x=await async function(e,t){const n=e.headers.get("Content-Length");null===n&&console.warn("Unable to determine content-length from response headers. Will expand buffer when needed.");let r=parseInt(n??"0"),i=new Uint8Array(r),a=0;const s=e.body.getReader();async function o(){const{done:e,value:n}=await s.read();if(e)return;let l=a+n.length;if(l>r){r=l;let e=new Uint8Array(r);e.set(i),i=e}i.set(n,a),a=l;return t({progress:a/r*100,loaded:a,total:r}),o()}return await o(),i}(p,(e=>{(0,o.dispatchCallback)(r.progress_callback,{...$,...e})})):x=new Uint8Array(await p.arrayBuffer()),v&&l&&void 0===await i.match(l)&&await i.put(l,new Response(x,{headers:p.headers})).catch((e=>{console.warn(`Unable to add response to browser cache: ${e}.`)})),(0,o.dispatchCallback)(r.progress_callback,{status:"done",name:e,file:t}),x}async function f(e,t,n=!0,r={}){let i=await p(e,t,n,r);if(null===i)return{};let a=new TextDecoder("utf-8").decode(i);return JSON.parse(a)}function m(...e){return(e=e.map(((t,n)=>(n&&(t=t.replace(new RegExp("^/"),"")),n!==e.length-1&&(t=t.replace(new RegExp("/$"),"")),t)))).join("/")}},"./src/utils/image.js":
/*!****************************!*\
  !*** ./src/utils/image.js ***!
  \****************************/(e,t,n)=>{n.r(t),n.d(t,{RawImage:()=>p});var r=n(/*! ./hub.js */"./src/utils/hub.js"),i=n(/*! ../env.js */"./src/env.js"),a=n(/*! sharp */"?2b25");const s="undefined"!=typeof self,o=s&&"DedicatedWorkerGlobalScope"===self.constructor.name;let l,u,d;if(s)l=(e,t)=>{if(!self.OffscreenCanvas)throw new Error("OffscreenCanvas not supported by this browser.");return new self.OffscreenCanvas(e,t)},d=self.createImageBitmap,u=self.ImageData;else{if(!a)throw new Error("Unable to load image processing library.");d=async e=>{const t=(await e.metadata()).channels;let{data:n,info:r}=await e.raw().toBuffer({resolveWithObject:!0});const i=new p(new Uint8ClampedArray(n),r.width,r.height,r.channels);return void 0!==t&&t!==r.channels&&i.convert(t),i}}const c={0:"nearest",1:"lanczos",2:"bilinear",3:"bicubic",4:"box",5:"hamming"},h=new Map([["png","image/png"],["jpg","image/jpeg"],["jpeg","image/jpeg"],["gif","image/gif"]]);class p{constructor(e,t,n,r){this.data=e,this.width=t,this.height=n,this.channels=r}get size(){return[this.width,this.height]}static async read(e){if(e instanceof p)return e;if("string"==typeof e||e instanceof URL)return await this.fromURL(e);throw new Error("Unsupported input type: "+typeof e)}static async fromURL(e){let t=await(0,r.getFile)(e);if(200!==t.status)throw new Error(`Unable to read image from "${e}" (${t.status} ${t.statusText})`);let n=await t.blob();return this.fromBlob(n)}static async fromBlob(e){if(s){let t=await d(e);const n=l(t.width,t.height).getContext("2d");return n.drawImage(t,0,0),new this(n.getImageData(0,0,t.width,t.height).data,t.width,t.height,4)}{let t=a(await e.arrayBuffer());return await d(t)}}static fromTensor(e,t="CHW"){if(3!==e.dims.length)throw new Error(`Tensor should have 3 dimensions, but has ${e.dims.length} dimensions.`);if("CHW"===t)e=e.transpose(1,2,0);else if("HWC"!==t)throw new Error(`Unsupported channel format: ${t}`);if(!(e.data instanceof Uint8ClampedArray||e.data instanceof Uint8Array))throw new Error(`Unsupported tensor type: ${e.type}`);switch(e.dims[2]){case 1:case 2:case 3:case 4:return new p(e.data,e.dims[1],e.dims[0],e.dims[2]);default:throw new Error(`Unsupported number of channels: ${e.dims[2]}`)}}grayscale(){if(1===this.channels)return this;let e=new Uint8ClampedArray(this.width*this.height*1);switch(this.channels){case 3:case 4:for(let t=0,n=0;t<this.data.length;t+=this.channels){const r=this.data[t],i=this.data[t+1],a=this.data[t+2];e[n++]=Math.round(.2989*r+.587*i+.114*a)}break;default:throw new Error(`Conversion failed due to unsupported number of channels: ${this.channels}`)}return this._update(e,this.width,this.height,1)}rgb(){if(3===this.channels)return this;let e=new Uint8ClampedArray(this.width*this.height*3);switch(this.channels){case 1:for(let t=0,n=0;t<this.data.length;++t)e[n++]=this.data[t],e[n++]=this.data[t],e[n++]=this.data[t];break;case 4:for(let t=0,n=0;t<this.data.length;t+=4)e[n++]=this.data[t],e[n++]=this.data[t+1],e[n++]=this.data[t+2];break;default:throw new Error(`Conversion failed due to unsupported number of channels: ${this.channels}`)}return this._update(e,this.width,this.height,3)}rgba(){if(4===this.channels)return this;let e=new Uint8ClampedArray(this.width*this.height*4);switch(this.channels){case 1:for(let t=0,n=0;t<this.data.length;++t)e[n++]=this.data[t],e[n++]=this.data[t],e[n++]=this.data[t],e[n++]=255;break;case 3:for(let t=0,n=0;t<this.data.length;t+=3)e[n++]=this.data[t],e[n++]=this.data[t+1],e[n++]=this.data[t+2],e[n++]=255;break;default:throw new Error(`Conversion failed due to unsupported number of channels: ${this.channels}`)}return this._update(e,this.width,this.height,4)}async resize(e,t,{resample:n=2}={}){let r=c[n]??n;if(s){let n=this.channels,r=this.toCanvas();const i=l(e,t).getContext("2d");return i.drawImage(r,0,0,e,t),new p(i.getImageData(0,0,e,t).data,e,t,4).convert(n)}{let n=this.toSharp();switch(r){case"box":case"hamming":"box"!==r&&"hamming"!==r||(console.warn(`Resampling method ${r} is not yet supported. Using bilinear instead.`),r="bilinear");case"nearest":case"bilinear":case"bicubic":n=n.affine([e/this.width,0,0,t/this.height],{interpolator:r});break;case"lanczos":n=n.resize({width:e,height:t,fit:"fill",kernel:"lanczos3"});break;default:throw new Error(`Resampling method ${r} is not supported.`)}return await d(n)}}async pad([e,t,n,r]){if(e=Math.max(e,0),t=Math.max(t,0),n=Math.max(n,0),r=Math.max(r,0),0===e&&0===t&&0===n&&0===r)return this;if(s){let i=this.channels,a=this.toCanvas(),s=this.width+e+t,o=this.height+n+r;const u=l(s,o).getContext("2d");return u.drawImage(a,0,0,this.width,this.height,e,n,s,o),new p(u.getImageData(0,0,s,o).data,s,o,4).convert(i)}{let i=this.toSharp().extend({left:e,right:t,top:n,bottom:r});return await d(i)}}async crop([e,t,n,r]){if(e=Math.max(e,0),t=Math.max(t,0),n=Math.min(n,this.width-1),r=Math.min(r,this.height-1),0===e&&0===t&&n===this.width-1&&r===this.height-1)return this;const i=n-e+1,a=r-t+1;if(s){const n=this.channels,r=this.toCanvas(),s=l(i,a).getContext("2d");s.drawImage(r,e,t,i,a,0,0,i,a);return new p(s.getImageData(0,0,i,a).data,i,a,4).convert(n)}{const n=this.toSharp().extract({left:e,top:t,width:i,height:a});return await d(n)}}async center_crop(e,t){if(this.width===e&&this.height===t)return this;let n=(this.width-e)/2,r=(this.height-t)/2;if(s){let i=this.channels,a=this.toCanvas();const s=l(e,t).getContext("2d");let o=0,u=0,d=0,c=0;return n>=0?o=n:d=-n,r>=0?u=r:c=-r,s.drawImage(a,o,u,e,t,d,c,e,t),new p(s.getImageData(0,0,e,t).data,e,t,4).convert(i)}{let i=this.toSharp();if(n>=0&&r>=0)i=i.extract({left:Math.floor(n),top:Math.floor(r),width:e,height:t});else if(n<=0&&r<=0){let a=Math.floor(-r),s=Math.floor(-n);i=i.extend({top:a,left:s,right:e-this.width-s,bottom:t-this.height-a})}else{let a=[0,0],s=0;r<0?(a[0]=Math.floor(-r),a[1]=t-this.height-a[0]):s=Math.floor(r);let o=[0,0],l=0;n<0?(o[0]=Math.floor(-n),o[1]=e-this.width-o[0]):l=Math.floor(n),i=i.extend({top:a[0],bottom:a[1],left:o[0],right:o[1]}).extract({left:l,top:s,width:e,height:t})}return await d(i)}}async toBlob(e="image/png",t=1){if(!s)throw new Error("toBlob() is only supported in browser environments.");const n=this.toCanvas();return await n.convertToBlob({type:e,quality:t})}toCanvas(){if(!s)throw new Error("toCanvas() is only supported in browser environments.");let e=this.clone().rgba(),t=l(e.width,e.height),n=new u(e.data,e.width,e.height);return t.getContext("2d").putImageData(n,0,0),t}_update(e,t,n,r=null){return this.data=e,this.width=t,this.height=n,null!==r&&(this.channels=r),this}clone(){return new p(this.data.slice(),this.width,this.height,this.channels)}convert(e){if(this.channels===e)return this;switch(e){case 1:this.grayscale();break;case 3:this.rgb();break;case 4:this.rgba();break;default:throw new Error(`Conversion failed due to unsupported number of channels: ${this.channels}`)}return this}async save(e){if(!s){if(i.env.useFS){const t=this.toSharp();return await t.toFile(e)}throw new Error("Unable to save the image because filesystem is disabled in this environment.")}{if(o)throw new Error("Unable to save an image from a Web Worker.");const t=e.split(".").pop().toLowerCase(),n=h.get(t)??"image/png",r=await this.toBlob(n),i=URL.createObjectURL(r),a=document.createElement("a");a.href=i,a.download=e,a.click(),a.remove()}}toSharp(){if(s)throw new Error("toSharp() is only supported in server-side environments.");return a(this.data,{raw:{width:this.width,height:this.height,channels:this.channels}})}}},"./src/utils/maths.js":
/*!****************************!*\
  !*** ./src/utils/maths.js ***!
  \****************************/(e,t,n)=>{function r(e,[t,n,r],[i,a],s="bilinear",o=!1){const l=a/r,u=i/n,d=new e.constructor(i*a*t),c=n*r,h=i*a;for(let s=0;s<i;++s)for(let i=0;i<a;++i){const o=s*a+i,p=(i+.5)/l-.5,f=(s+.5)/u-.5;let m=Math.floor(p),g=Math.floor(f);const _=Math.min(m+1,r-1),y=Math.min(g+1,n-1);m=Math.max(m,0),g=Math.max(g,0);const w=p-m,v=f-g,b=(1-w)*(1-v),$=w*(1-v),x=(1-w)*v,C=w*v,T=g*r,S=y*r,M=T+m,k=T+_,E=S+m,A=S+_;for(let n=0;n<t;++n){const t=n*c;d[n*h+o]=b*e[t+M]+$*e[t+k]+x*e[t+E]+C*e[t+A]}}return d}function i(e,t,n){const r=new Array(n.length),i=new Array(n.length);for(let e=n.length-1,a=1;e>=0;--e)i[e]=a,r[e]=t[n[e]],a*=r[e];const a=n.map(((e,t)=>i[n.indexOf(t)])),s=new e.constructor(e.length);for(let n=0;n<e.length;++n){let r=0;for(let e=t.length-1,i=n;e>=0;--e)r+=i%t[e]*a[e],i=Math.floor(i/t[e]);s[r]=e[n]}return[s,r]}function a(e){const t=h(e)[0],n=e.map((e=>Math.exp(e-t))),r=n.reduce(((e,t)=>e+t),0);return n.map((e=>e/r))}function s(e){return a(e).map((e=>Math.log(e)))}function o(e,t){return e.reduce(((e,n,r)=>e+n*t[r]),0)}function l(e,t=0){return e=Array.from(e).map(((e,t)=>[t,e])).sort(((e,t)=>t[1]-e[1])),null!==t&&t>0&&(e=e.slice(0,t)),e}function u(e,t){return o(e,t)/(d(e)*d(t))}function d(e){return Math.sqrt(e.reduce(((e,t)=>e+t*t),0))}function c(e){if(0===e.length)throw Error("Array must not be empty");let t=e[0],n=0;for(let r=1;r<e.length;++r)e[r]<t&&(t=e[r],n=r);return[t,n]}function h(e){if(0===e.length)throw Error("Array must not be empty");let t=e[0],n=0;for(let r=1;r<e.length;++r)e[r]>t&&(t=e[r],n=r);return[Number(t),n]}function p(e){return e>0&&0==(e&e-1)}n.r(t),n.d(t,{FFT:()=>g,cos_sim:()=>u,dot:()=>o,getTopItems:()=>l,interpolate_data:()=>r,log_softmax:()=>s,magnitude:()=>d,max:()=>h,medianFilter:()=>_,min:()=>c,round:()=>y,softmax:()=>a,transpose_data:()=>i});class f{constructor(e){if(this.size=0|e,this.size<=1||!p(this.size))throw new Error("FFT size must be a power of two larger than 1");this._csize=e<<1,this.table=new Float64Array(2*this.size);for(let e=0;e<this.table.length;e+=2){const t=Math.PI*e/this.size;this.table[e]=Math.cos(t),this.table[e+1]=-Math.sin(t)}let t=0;for(let e=1;this.size>e;e<<=1)++t;this._width=t%2==0?t-1:t,this._bitrev=new Int32Array(1<<this._width);for(let e=0;e<this._bitrev.length;++e){this._bitrev[e]=0;for(let t=0;t<this._width;t+=2){const n=this._width-t-2;this._bitrev[e]|=(e>>>t&3)<<n}}}createComplexArray(){return new Float64Array(this._csize)}fromComplexArray(e,t){const n=t||new Array(e.length>>>1);for(let t=0;t<e.length;t+=2)n[t>>>1]=e[t];return n}toComplexArray(e,t){const n=t||this.createComplexArray();for(let t=0;t<n.length;t+=2)n[t]=e[t>>>1],n[t+1]=0;return n}completeSpectrum(e){const t=this._csize,n=t>>>1;for(let r=2;r<n;r+=2)e[t-r]=e[r],e[t-r+1]=-e[r+1]}transform(e,t){if(e===t)throw new Error("Input and output buffers must be different");this._transform4(e,t,1)}realTransform(e,t){if(e===t)throw new Error("Input and output buffers must be different");this._realTransform4(e,t,1)}inverseTransform(e,t){if(e===t)throw new Error("Input and output buffers must be different");this._transform4(e,t,-1);for(let t=0;t<e.length;++t)e[t]/=this.size}_transform4(e,t,n){const r=this._csize;let i,a,s=1<<this._width,o=r/s<<1;const l=this._bitrev;if(4===o)for(i=0,a=0;i<r;i+=o,++a){const n=l[a];this._singleTransform2(t,e,i,n,s)}else for(i=0,a=0;i<r;i+=o,++a){const r=l[a];this._singleTransform4(t,e,i,r,s,n)}for(s>>=2;s>=2;s>>=2){o=r/s<<1;const t=o>>>2;for(i=0;i<r;i+=o){const r=i+t-1;for(let a=i,o=0;a<r;a+=2,o+=s){const r=a,i=r+t,s=i+t,l=s+t,u=e[r],d=e[r+1],c=e[i],h=e[i+1],p=e[s],f=e[s+1],m=e[l],g=e[l+1],_=this.table[o],y=n*this.table[o+1],w=c*_-h*y,v=c*y+h*_,b=this.table[2*o],$=n*this.table[2*o+1],x=p*b-f*$,C=p*$+f*b,T=this.table[3*o],S=n*this.table[3*o+1],M=m*T-g*S,k=m*S+g*T,E=u+x,A=d+C,I=u-x,P=d-C,O=w+M,z=v+k,B=n*(w-M),R=n*(v-k);e[r]=E+O,e[r+1]=A+z,e[i]=I+R,e[i+1]=P-B,e[s]=E-O,e[s+1]=A-z,e[l]=I-R,e[l+1]=P+B}}}}_singleTransform2(e,t,n,r,i){const a=e[r],s=e[r+1],o=e[r+i],l=e[r+i+1];t[n]=a+o,t[n+1]=s+l,t[n+2]=a-o,t[n+3]=s-l}_singleTransform4(e,t,n,r,i,a){const s=2*i,o=3*i,l=e[r],u=e[r+1],d=e[r+i],c=e[r+i+1],h=e[r+s],p=e[r+s+1],f=e[r+o],m=e[r+o+1],g=l+h,_=u+p,y=l-h,w=u-p,v=d+f,b=c+m,$=a*(d-f),x=a*(c-m);t[n]=g+v,t[n+1]=_+b,t[n+2]=y+x,t[n+3]=w-$,t[n+4]=g-v,t[n+5]=_-b,t[n+6]=y-x,t[n+7]=w+$}_realTransform4(e,t,n){const r=this._csize;let i,a,s=1<<this._width,o=r/s<<1;const l=this._bitrev;if(4===o)for(i=0,a=0;i<r;i+=o,++a){const n=l[a];this._singleRealTransform2(t,e,i,n>>>1,s>>>1)}else for(i=0,a=0;i<r;i+=o,++a){const r=l[a];this._singleRealTransform4(t,e,i,r>>>1,s>>>1,n)}for(s>>=2;s>=2;s>>=2){o=r/s<<1;const t=o>>>2;for(i=0;i<r;i+=o){const r=i+t-1;for(let a=i,o=0;a<r;a+=2,o+=s){const r=a,i=r+t,s=i+t,l=s+t,u=e[r],d=e[r+1],c=e[i],h=e[i+1],p=e[s],f=e[s+1],m=e[l],g=e[l+1],_=this.table[o],y=n*this.table[o+1],w=c*_-h*y,v=c*y+h*_,b=this.table[2*o],$=n*this.table[2*o+1],x=p*b-f*$,C=p*$+f*b,T=this.table[3*o],S=n*this.table[3*o+1],M=m*T-g*S,k=m*S+g*T,E=u+x,A=d+C,I=u-x,P=d-C,O=w+M,z=v+k,B=n*(w-M),R=n*(v-k);e[r]=E+O,e[r+1]=A+z,e[i]=I+R,e[i+1]=P-B,e[s]=E-O,e[s+1]=A-z,e[l]=I-R,e[l+1]=P+B}}}}_singleRealTransform2(e,t,n,r,i){const a=e[r],s=e[r+i];t[n]=a+s,t[n+1]=0,t[n+2]=a-s,t[n+3]=0}_singleRealTransform4(e,t,n,r,i,a){const s=2*i,o=3*i,l=e[r],u=e[r+i],d=e[r+s],c=e[r+o],h=l+d,p=l-d,f=u+c,m=a*(u-c);t[n]=h+f,t[n+1]=0,t[n+2]=p,t[n+3]=-m,t[n+4]=h-f,t[n+5]=0,t[n+6]=p,t[n+7]=m}}class m{constructor(e){const t=2*(e-1),n=2*(2*e-1),r=2**Math.ceil(Math.log2(n));this.bufferSize=r,this._a=t;const i=new Float64Array(n),a=new Float64Array(r);this._chirpBuffer=new Float64Array(r),this._buffer1=new Float64Array(r),this._buffer2=new Float64Array(r),this._outBuffer1=new Float64Array(r),this._outBuffer2=new Float64Array(r);const s=-2*Math.PI/e,o=Math.cos(s),l=Math.sin(s);for(let t=0;t<n>>1;++t){const n=(t+1-e)**2/2,r=Math.sqrt(o**2+l**2)**n,s=n*Math.atan2(l,o),u=2*t;i[u]=r*Math.cos(s),i[u+1]=r*Math.sin(s),a[u]=i[u],a[u+1]=-i[u+1]}this._slicedChirpBuffer=i.subarray(t,n),this._f=new f(r>>1),this._f.transform(this._chirpBuffer,a)}_transform(e,t,n){const r=this._buffer1,i=this._buffer2,a=this._outBuffer1,s=this._outBuffer2,o=this._chirpBuffer,l=this._slicedChirpBuffer,u=this._a;if(n)for(let e=0;e<l.length;e+=2){const n=e+1,i=t[e>>1];r[e]=i*l[e],r[n]=i*l[n]}else for(let e=0;e<l.length;e+=2){const n=e+1;r[e]=t[e]*l[e]-t[n]*l[n],r[n]=t[e]*l[n]+t[n]*l[e]}this._f.transform(a,r);for(let e=0;e<o.length;e+=2){const t=e+1;i[e]=a[e]*o[e]-a[t]*o[t],i[t]=a[e]*o[t]+a[t]*o[e]}this._f.inverseTransform(s,i);for(let t=0;t<s.length;t+=2){const n=s[t+u],r=s[t+u+1],i=l[t],a=l[t+1];e[t]=n*i-r*a,e[t+1]=n*a+r*i}}transform(e,t){this._transform(e,t,!1)}realTransform(e,t){this._transform(e,t,!0)}}class g{constructor(e){this.fft_length=e,this.isPowerOfTwo=p(e),this.isPowerOfTwo?(this.fft=new f(e),this.outputBufferSize=2*e):(this.fft=new m(e),this.outputBufferSize=this.fft.bufferSize)}realTransform(e,t){this.fft.realTransform(e,t)}transform(e,t){this.fft.transform(e,t)}}function _(e,t){if(t%2==0||t<=0)throw new Error("Window size must be a positive odd number");const n=new e.constructor(e.length),r=new e.constructor(t),i=Math.floor(t/2);for(let t=0;t<e.length;++t){let a=0;for(let n=-i;n<=i;++n){let i=t+n;i<0?i=Math.abs(i):i>=e.length&&(i=2*(e.length-1)-i),r[a++]=e[i]}r.sort(),n[t]=r[i]}return n}function y(e,t){const n=Math.pow(10,t);return Math.round(e*n)/n}},"./src/utils/tensor.js":
/*!*****************************!*\
  !*** ./src/utils/tensor.js ***!
  \*****************************/(e,t,n)=>{n.r(t),n.d(t,{Tensor:()=>o,cat:()=>f,dynamicTimeWarping:()=>y,interpolate:()=>u,mean:()=>_,mean_pooling:()=>d,ones:()=>w,ones_like:()=>v,stack:()=>m,std_mean:()=>g,transpose:()=>l});var r=n(/*! ../backends/onnx.js */"./src/backends/onnx.js"),i=n(/*! ./maths.js */"./src/utils/maths.js");const a=Object.freeze({float32:Float32Array,float16:Uint16Array,float64:Float64Array,string:Array,int8:Int8Array,uint8:Uint8Array,int16:Int16Array,uint16:Uint16Array,int32:Int32Array,uint32:Uint32Array,int64:BigInt64Array,uint64:BigUint64Array,bool:Uint8Array}),s=r.ONNX.Tensor;class o{get dims(){return this.ort_tensor.dims}set dims(e){this.ort_tensor.dims=e}get type(){return this.ort_tensor.type}get data(){return this.ort_tensor.data}get size(){return this.ort_tensor.size}get dataLocation(){return this.ort_tensor.dataLocation}get cpuData(){return this.ort_tensor.cpuData}get location(){return this.ort_tensor.dataLocation}get gpuBuffer(){return this.ort_tensor.gpuBufferData}async getData(e){return this.ort_tensor.getData(e)}constructor(...e){if(e[0]instanceof s)this.ort_tensor=e[0];else{const t=new s(e[0],e[1],e[2]);this.ort_tensor=t}return new Proxy(this,{get:(e,t)=>{if("string"==typeof t){let n=Number(t);if(Number.isInteger(n))return e._getitem(n)}return e[t]},set:(e,t,n)=>e[t]=n})}*[Symbol.iterator](){const[e,...t]=this.dims;if(t.length>0){const n=t.reduce(((e,t)=>e*t));for(let r=0;r<e;++r)yield this._subarray(r,n,t)}else yield*this.data}_getitem(e){const[t,...n]=this.dims;if(e=p(e,t),n.length>0){const t=n.reduce(((e,t)=>e*t));return this._subarray(e,t,n)}return new o(this.type,[this.data[e]],n)}indexOf(e){for(let t=0;t<this.data.length;++t)if(this.data[t]==e)return t;return-1}_subarray(e,t,n){const r=e*t,i=(e+1)*t,a="subarray"in this.data?this.data.subarray(r,i):this.data.slice(r,i);return new o(this.type,a,n)}item(){if(1!==this.data.length)throw new Error(`a Tensor with ${this.data.length} elements cannot be converted to Scalar`);return this.data[0]}tolist(){return function(e,t){const n=e.length,r=t.reduce(((e,t)=>e*t));if(n!==r)throw Error(`cannot reshape array of size ${n} into shape (${t})`);let i=e;for(let e=t.length-1;e>=0;e--)i=i.reduce(((n,r)=>{let i=n[n.length-1];return i.length<t[e]?i.push(r):n.push([r]),n}),[[]]);return i[0]}(this.data,this.dims)}sigmoid(){return this.clone().sigmoid_()}sigmoid_(){for(let e=0;e<this.data.length;++e)this.data[e]=1/(1+Math.exp(-this.data[e]));return this}mul(e){return this.clone().mul_(e)}mul_(e){for(let t=0;t<this.data.length;++t)this.data[t]*=e;return this}add(e){return this.clone().add_(e)}add_(e){for(let t=0;t<this.data.length;++t)this.data[t]+=e;return this}clone(){return new o(this.type,this.data.slice(),this.dims.slice())}slice(...e){let t=[],n=[];for(let r=0;r<this.dims.length;++r){let i=e[r];if(null==i)n.push([0,this.dims[r]]),t.push(this.dims[r]);else if("number"==typeof i)i=p(i,this.dims[r],r),n.push([i,i+1]);else{if(!Array.isArray(i)||2!==i.length)throw new Error(`Invalid slice: ${i}`);{if(i[0]>i[1])throw new Error(`Invalid slice: ${i}`);let e=[Math.max(i[0],0),Math.min(i[1],this.dims[r])];n.push(e),t.push(e[1]-e[0])}}}let r=n.map((([e,t])=>t-e)),i=r.reduce(((e,t)=>e*t)),a=new this.data.constructor(i);const s=this.stride();for(let e=0;e<i;++e){let t=0;for(let i=r.length-1,a=e;i>=0;--i){const e=r[i];t+=(a%e+n[i][0])*s[i],a=Math.floor(a/e)}a[e]=this.data[t]}return new o(this.type,a,t)}transpose(...e){return l(this,e)}sum(e=null,t=!1){return this.norm(1,e,t)}norm(e="fro",t=null,n=!1){if("fro"===e)e=2;else if("string"==typeof e)throw Error(`Unsupported norm: ${e}`);if(null===t){let t=this.data.reduce(((t,n)=>t+n**e),0)**(1/e);return new o(this.type,[t],[])}t=p(t,this.dims.length);const r=this.dims.slice();r[t]=1;const i=new this.data.constructor(this.data.length/this.dims[t]);for(let n=0;n<this.data.length;++n){let a=0;for(let e=this.dims.length-1,i=n,s=1;e>=0;--e){const n=this.dims[e];if(e!==t){a+=i%n*s,s*=r[e]}i=Math.floor(i/n)}i[a]+=this.data[n]**e}if(1!==e)for(let t=0;t<i.length;++t)i[t]=i[t]**(1/e);return n||r.splice(t,1),new o(this.type,i,r)}normalize_(e=2,t=1){t=p(t,this.dims.length);const n=this.norm(e,t,!0);for(let e=0;e<this.data.length;++e){let r=0;for(let n=this.dims.length-1,i=e,a=1;n>=0;--n){const e=this.dims[n];if(n!==t){r+=i%e*a,a*=this.dims[n]}i=Math.floor(i/e)}this.data[e]/=n.data[r]}return this}normalize(e=2,t=1){return this.clone().normalize_(e,t)}stride(){return function(e){const t=new Array(e.length);for(let n=e.length-1,r=1;n>=0;--n)t[n]=r,r*=e[n];return t}(this.dims)}squeeze(e=null){return new o(this.type,this.data,c(this.dims,e))}squeeze_(e=null){return this.dims=c(this.dims,e),this}unsqueeze(e=null){return new o(this.type,this.data,h(this.dims,e))}unsqueeze_(e=null){return this.dims=h(this.dims,e),this}flatten_(e=0,t=-1){t=(t+this.dims.length)%this.dims.length;let n=this.dims.slice(0,e),r=this.dims.slice(e,t+1),i=this.dims.slice(t+1);return this.dims=[...n,r.reduce(((e,t)=>e*t),1),...i],this}flatten(e=0,t=-1){return this.clone().flatten_(e,t)}view(...e){let t=-1;for(let n=0;n<e.length;++n)if(-1===e[n]){if(-1!==t)throw new Error("Only one dimension can be inferred");t=n}if(-1!==t){const n=e.reduce(((e,n,r)=>r!==t?e*n:e),1);e[t]=this.data.length/n}return new o(this.type,this.data,e)}neg_(){for(let e=0;e<this.data.length;++e)this.data[e]=-this.data[e];return this}neg(){return this.clone().neg_()}clamp_(e,t){for(let n=0;n<this.data.length;++n)this.data[n]=Math.min(Math.max(this.data[n],e),t);return this}clamp(e,t){return this.clone().clamp_(e,t)}round_(){for(let e=0;e<this.data.length;++e)this.data[e]=Math.round(this.data[e]);return this}round(){return this.clone().round_()}to(e){if(this.type===e)return this;if(!a.hasOwnProperty(e))throw new Error(`Unsupported type: ${e}`);return new o(e,a[e].from(this.data),this.dims)}}function l(e,t){const[n,r]=(0,i.transpose_data)(e.data,e.dims,t);return new o(e.type,n,r)}function u(e,[t,n],r="bilinear",a=!1){const s=e.dims.at(-3)??1,l=e.dims.at(-2),u=e.dims.at(-1);let d=(0,i.interpolate_data)(e.data,[s,l,u],[t,n],r,a);return new o(e.type,d,[s,t,n])}function d(e,t){let n=[e.dims[0],e.dims[2]],r=new e.data.constructor(n[0]*n[1]),[i,a,s]=e.dims,l=0;for(let n=0;n<i;++n){let i=n*s*a;for(let o=0;o<s;++o){let u=0,d=0,c=n*a,h=i+o;for(let n=0;n<a;++n){let r=Number(t.data[c+n]);d+=r,u+=e.data[h+n*s]*r}let p=u/d;r[l++]=p}}return new o(e.type,r,n)}function c(e,t){return e=e.slice(),null===t?e=e.filter((e=>1!==e)):"number"==typeof t?1===e[t]&&e.splice(t,1):Array.isArray(t)&&(e=e.filter(((e,n)=>1!==e||!t.includes(n)))),e}function h(e,t){return t=p(t,e.length+1),(e=e.slice()).splice(t,0,1),e}function p(e,t,n=null){if(e<-t||e>=t)throw new Error(`IndexError: index ${e} is out of bounds for dimension${null===n?"":" "+n} with size ${t}`);return e<0&&(e=(e%t+t)%t),e}function f(e,t=0){t=p(t,e[0].dims.length);const n=e[0].dims.slice();n[t]=e.reduce(((e,n)=>e+n.dims[t]),0);const r=n.reduce(((e,t)=>e*t),1),i=new e[0].data.constructor(r),a=e[0].type;if(0===t){let t=0;for(let n of e)i.set(n.data,t),t+=n.data.length}else{let r=0;for(let a=0;a<e.length;++a){let s=e[a];for(let e=0;e<s.data.length;++e){let a=0;for(let i=s.dims.length-1,o=e,l=1;i>=0;--i){const e=s.dims[i];let u=o%e;i===t&&(u+=r),a+=u*l,l*=n[i],o=Math.floor(o/e)}i[a]=s.data[e]}r+=s.dims[t]}}return new o(a,i,n)}function m(e,t=0){return f(e.map((e=>e.unsqueeze(t))),t)}function g(e,t=null,n=1,r=!1){if(null===t){const t=e.data.reduce(((e,t)=>e+t),0)/e.data.length,r=Math.sqrt(e.data.reduce(((e,n)=>e+(n-t)**2),0)/(e.data.length-n)),i=new o(e.type,[t],[]);return[new o(e.type,[r],[]),i]}const i=_(e,t=p(t,e.dims.length),r),a=e.dims.slice();a[t]=1;const s=new e.data.constructor(e.data.length/e.dims[t]);for(let n=0;n<e.data.length;++n){let r=0;for(let i=e.dims.length-1,s=n,o=1;i>=0;--i){const n=e.dims[i];if(i!==t){r+=s%n*o,o*=a[i]}s=Math.floor(s/n)}s[r]+=(e.data[n]-i.data[r])**2}for(let r=0;r<s.length;++r)s[r]=Math.sqrt(s[r]/(e.dims[t]-n));r||a.splice(t,1);return[new o(e.type,s,a),i]}function _(e,t=null,n=!1){if(null===t){let t=e.data.reduce(((e,t)=>e+t),0);return new o(e.type,[t/e.data.length],[])}t=p(t,e.dims.length);const r=e.dims.slice();r[t]=1;const i=new e.data.constructor(e.data.length/e.dims[t]);for(let n=0;n<e.data.length;++n){let a=0;for(let i=e.dims.length-1,s=n,o=1;i>=0;--i){const n=e.dims[i];if(i!==t){a+=s%n*o,o*=r[i]}s=Math.floor(s/n)}i[a]+=e.data[n]}if(1!==e.dims[t])for(let n=0;n<i.length;++n)i[n]=i[n]/e.dims[t];return n||r.splice(t,1),new o(e.type,i,r)}function y(e){const[t,n]=e.dims,r=[t+1,n+1],i=new o("float32",new Float32Array(r[0]*r[1]).fill(1/0),r),a=new o("float32",new Float32Array(r[0]*r[1]).fill(-1),r);i[0].data[0]=0;for(let r=1;r<n+1;++r)for(let n=1;n<t+1;++n){const t=i[n-1][r-1].item(),s=i[n-1][r].item(),o=i[n][r-1].item();let l,u;t<s&&t<o?(l=t,u=0):s<t&&s<o?(l=s,u=1):(l=o,u=2),i[n].data[r]=e[n-1][r-1].item()+l,a[n].data[r]=u}let s=t,l=n;a.data.fill(2,0,r[1]);for(let e=0;e<r[0];++e)a[e].data[0]=1;let u=[],d=[];for(;s>0||l>0;){u.push(s-1),d.push(l-1);switch(a[s][l].item()){case 0:--s,--l;break;case 1:--s;break;case 2:--l;break;default:throw new Error(`Internal error in dynamic time warping. Unexpected trace[${s}, ${l}]. Please file a bug report.`)}}return u.reverse(),d.reverse(),[u,d]}function w(e){const t=e.reduce(((e,t)=>e*t),1);return new o("int64",new BigInt64Array(t).fill(1n),e)}function v(e){return w(e.dims)}}},r={};function i(e){var t=r[e];if(void 0!==t)return t.exports;var a=r[e]={exports:{}};return n[e](a,a.exports,i),a.exports}t=Object.getPrototypeOf?e=>Object.getPrototypeOf(e):e=>e.__proto__,i.t=function(n,r){if(1&r&&(n=this(n)),8&r)return n;if("object"==typeof n&&n){if(4&r&&n.__esModule)return n;if(16&r&&"function"==typeof n.then)return n}var a=Object.create(null);i.r(a);var s={};e=e||[null,t({}),t([]),t(t)];for(var o=2&r&&n;"object"==typeof o&&!~e.indexOf(o);o=t(o))Object.getOwnPropertyNames(o).forEach((e=>s[e]=()=>n[e]));return s.default=()=>n,i.d(a,s),a},i.d=(e,t)=>{for(var n in t)i.o(t,n)&&!i.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},i.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),i.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var a=i("./src/transformers.js"),s=a.ASTFeatureExtractor,o=a.ASTForAudioClassification,l=a.ASTModel,u=a.ASTPreTrainedModel,d=a.AlbertForMaskedLM,c=a.AlbertForQuestionAnswering,h=a.AlbertForSequenceClassification,p=a.AlbertModel,f=a.AlbertPreTrainedModel,m=a.AlbertTokenizer,g=a.AudioClassificationPipeline,_=a.AutoConfig,y=a.AutoModel,w=a.AutoModelForAudioClassification,v=a.AutoModelForCTC,b=a.AutoModelForCausalLM,$=a.AutoModelForDepthEstimation,x=a.AutoModelForDocumentQuestionAnswering,C=a.AutoModelForImageClassification,T=a.AutoModelForImageMatting,S=a.AutoModelForImageSegmentation,M=a.AutoModelForImageToImage,k=a.AutoModelForMaskGeneration,E=a.AutoModelForMaskedLM,A=a.AutoModelForObjectDetection,I=a.AutoModelForQuestionAnswering,P=a.AutoModelForSemanticSegmentation,O=a.AutoModelForSeq2SeqLM,z=a.AutoModelForSequenceClassification,B=a.AutoModelForSpeechSeq2Seq,R=a.AutoModelForTextToSpectrogram,F=a.AutoModelForTextToWaveform,j=a.AutoModelForTokenClassification,D=a.AutoModelForVision2Seq,L=a.AutoModelForZeroShotObjectDetection,N=a.AutoProcessor,W=a.AutoTokenizer,U=a.AutomaticSpeechRecognitionPipeline,V=a.BartForConditionalGeneration,G=a.BartForSequenceClassification,q=a.BartModel,H=a.BartPretrainedModel,K=a.BartTokenizer,Y=a.BaseModelOutput,Q=a.BeitFeatureExtractor,X=a.BeitForImageClassification,Z=a.BeitModel,J=a.BeitPreTrainedModel,ee=a.BertForMaskedLM,te=a.BertForQuestionAnswering,ne=a.BertForSequenceClassification,re=a.BertForTokenClassification,ie=a.BertModel,ae=a.BertPreTrainedModel,se=a.BertTokenizer,oe=a.BitImageProcessor,le=a.BlenderbotForConditionalGeneration,ue=a.BlenderbotModel,de=a.BlenderbotPreTrainedModel,ce=a.BlenderbotSmallForConditionalGeneration,he=a.BlenderbotSmallModel,pe=a.BlenderbotSmallPreTrainedModel,fe=a.BlenderbotSmallTokenizer,me=a.BlenderbotTokenizer,ge=a.BloomForCausalLM,_e=a.BloomModel,ye=a.BloomPreTrainedModel,we=a.BloomTokenizer,ve=a.CLIPFeatureExtractor,be=a.CLIPModel,$e=a.CLIPPreTrainedModel,xe=a.CLIPSegForImageSegmentation,Ce=a.CLIPSegModel,Te=a.CLIPSegPreTrainedModel,Se=a.CLIPTextModelWithProjection,Me=a.CLIPTokenizer,ke=a.CLIPVisionModelWithProjection,Ee=a.CamembertForMaskedLM,Ae=a.CamembertForQuestionAnswering,Ie=a.CamembertForSequenceClassification,Pe=a.CamembertForTokenClassification,Oe=a.CamembertModel,ze=a.CamembertPreTrainedModel,Be=a.CamembertTokenizer,Re=a.CausalLMOutput,Fe=a.CausalLMOutputWithPast,je=a.ChineseCLIPFeatureExtractor,De=a.ChineseCLIPModel,Le=a.ChineseCLIPPreTrainedModel,Ne=a.ClapAudioModelWithProjection,We=a.ClapFeatureExtractor,Ue=a.ClapModel,Ve=a.ClapPreTrainedModel,Ge=a.ClapTextModelWithProjection,qe=a.CodeGenForCausalLM,He=a.CodeGenModel,Ke=a.CodeGenPreTrainedModel,Ye=a.CodeGenTokenizer,Qe=a.CodeLlamaTokenizer,Xe=a.ConvBertForMaskedLM,Ze=a.ConvBertForQuestionAnswering,Je=a.ConvBertForSequenceClassification,et=a.ConvBertForTokenClassification,tt=a.ConvBertModel,nt=a.ConvBertPreTrainedModel,rt=a.ConvBertTokenizer,it=a.ConvNextFeatureExtractor,at=a.ConvNextForImageClassification,st=a.ConvNextImageProcessor,ot=a.ConvNextModel,lt=a.ConvNextPreTrainedModel,ut=a.ConvNextV2ForImageClassification,dt=a.ConvNextV2Model,ct=a.ConvNextV2PreTrainedModel,ht=a.DPTFeatureExtractor,pt=a.DPTForDepthEstimation,ft=a.DPTImageProcessor,mt=a.DPTModel,gt=a.DPTPreTrainedModel,_t=a.DebertaForMaskedLM,yt=a.DebertaForQuestionAnswering,wt=a.DebertaForSequenceClassification,vt=a.DebertaForTokenClassification,bt=a.DebertaModel,$t=a.DebertaPreTrainedModel,xt=a.DebertaTokenizer,Ct=a.DebertaV2ForMaskedLM,Tt=a.DebertaV2ForQuestionAnswering,St=a.DebertaV2ForSequenceClassification,Mt=a.DebertaV2ForTokenClassification,kt=a.DebertaV2Model,Et=a.DebertaV2PreTrainedModel,At=a.DebertaV2Tokenizer,It=a.DeiTFeatureExtractor,Pt=a.DeiTForImageClassification,Ot=a.DeiTModel,zt=a.DeiTPreTrainedModel,Bt=a.DepthEstimationPipeline,Rt=a.DetrFeatureExtractor,Ft=a.DetrForObjectDetection,jt=a.DetrForSegmentation,Dt=a.DetrModel,Lt=a.DetrObjectDetectionOutput,Nt=a.DetrPreTrainedModel,Wt=a.DetrSegmentationOutput,Ut=a.Dinov2ForImageClassification,Vt=a.Dinov2Model,Gt=a.Dinov2PreTrainedModel,qt=a.DistilBertForMaskedLM,Ht=a.DistilBertForQuestionAnswering,Kt=a.DistilBertForSequenceClassification,Yt=a.DistilBertForTokenClassification,Qt=a.DistilBertModel,Xt=a.DistilBertPreTrainedModel,Zt=a.DistilBertTokenizer,Jt=a.DocumentQuestionAnsweringPipeline,en=a.DonutFeatureExtractor,tn=a.DonutSwinModel,nn=a.DonutSwinPreTrainedModel,rn=a.ElectraForMaskedLM,an=a.ElectraForQuestionAnswering,sn=a.ElectraForSequenceClassification,on=a.ElectraForTokenClassification,ln=a.ElectraModel,un=a.ElectraPreTrainedModel,dn=a.ElectraTokenizer,cn=a.EsmForMaskedLM,hn=a.EsmForSequenceClassification,pn=a.EsmForTokenClassification,fn=a.EsmModel,mn=a.EsmPreTrainedModel,gn=a.EsmTokenizer,_n=a.FFT,yn=a.FalconForCausalLM,wn=a.FalconModel,vn=a.FalconPreTrainedModel,bn=a.FalconTokenizer,$n=a.FeatureExtractionPipeline,xn=a.FeatureExtractor,Cn=a.FillMaskPipeline,Tn=a.GLPNFeatureExtractor,Sn=a.GLPNForDepthEstimation,Mn=a.GLPNModel,kn=a.GLPNPreTrainedModel,En=a.GPT2LMHeadModel,An=a.GPT2Model,In=a.GPT2PreTrainedModel,Pn=a.GPT2Tokenizer,On=a.GPTBigCodeForCausalLM,zn=a.GPTBigCodeModel,Bn=a.GPTBigCodePreTrainedModel,Rn=a.GPTJForCausalLM,Fn=a.GPTJModel,jn=a.GPTJPreTrainedModel,Dn=a.GPTNeoForCausalLM,Ln=a.GPTNeoModel,Nn=a.GPTNeoPreTrainedModel,Wn=a.GPTNeoXForCausalLM,Un=a.GPTNeoXModel,Vn=a.GPTNeoXPreTrainedModel,Gn=a.GPTNeoXTokenizer,qn=a.HerbertTokenizer,Hn=a.HubertForCTC,Kn=a.HubertForSequenceClassification,Yn=a.HubertModel,Qn=a.HubertPreTrainedModel,Xn=a.ImageClassificationPipeline,Zn=a.ImageFeatureExtractor,Jn=a.ImageMattingOutput,er=a.ImageSegmentationPipeline,tr=a.ImageToImagePipeline,nr=a.ImageToTextPipeline,rr=a.LlamaForCausalLM,ir=a.LlamaModel,ar=a.LlamaPreTrainedModel,sr=a.LlamaTokenizer,or=a.LongT5ForConditionalGeneration,lr=a.LongT5Model,ur=a.LongT5PreTrainedModel,dr=a.M2M100ForConditionalGeneration,cr=a.M2M100Model,hr=a.M2M100PreTrainedModel,pr=a.M2M100Tokenizer,fr=a.MBart50Tokenizer,mr=a.MBartForCausalLM,gr=a.MBartForConditionalGeneration,_r=a.MBartForSequenceClassification,yr=a.MBartModel,wr=a.MBartPreTrainedModel,vr=a.MBartTokenizer,br=a.MPNetForMaskedLM,$r=a.MPNetForQuestionAnswering,xr=a.MPNetForSequenceClassification,Cr=a.MPNetForTokenClassification,Tr=a.MPNetModel,Sr=a.MPNetPreTrainedModel,Mr=a.MPNetTokenizer,kr=a.MT5ForConditionalGeneration,Er=a.MT5Model,Ar=a.MT5PreTrainedModel,Ir=a.MarianMTModel,Pr=a.MarianModel,Or=a.MarianPreTrainedModel,zr=a.MarianTokenizer,Br=a.MaskedLMOutput,Rr=a.MistralForCausalLM,Fr=a.MistralModel,jr=a.MistralPreTrainedModel,Dr=a.MobileBertForMaskedLM,Lr=a.MobileBertForQuestionAnswering,Nr=a.MobileBertForSequenceClassification,Wr=a.MobileBertModel,Ur=a.MobileBertPreTrainedModel,Vr=a.MobileBertTokenizer,Gr=a.MobileViTFeatureExtractor,qr=a.MobileViTForImageClassification,Hr=a.MobileViTModel,Kr=a.MobileViTPreTrainedModel,Yr=a.ModelOutput,Qr=a.MptForCausalLM,Xr=a.MptModel,Zr=a.MptPreTrainedModel,Jr=a.NllbTokenizer,ei=a.NougatImageProcessor,ti=a.NougatTokenizer,ni=a.OPTForCausalLM,ri=a.OPTModel,ii=a.OPTPreTrainedModel,ai=a.ObjectDetectionPipeline,si=a.OwlViTFeatureExtractor,oi=a.OwlViTForObjectDetection,li=a.OwlViTModel,ui=a.OwlViTPreTrainedModel,di=a.OwlViTProcessor,ci=a.PhiForCausalLM,hi=a.PhiModel,pi=a.PhiPreTrainedModel,fi=a.Pipeline,mi=a.PreTrainedModel,gi=a.PreTrainedTokenizer,_i=a.PretrainedConfig,yi=a.PretrainedMixin,wi=a.Processor,vi=a.QuestionAnsweringModelOutput,bi=a.QuestionAnsweringPipeline,$i=a.Qwen2Tokenizer,xi=a.RawImage,Ci=a.ResNetForImageClassification,Ti=a.ResNetModel,Si=a.ResNetPreTrainedModel,Mi=a.RoFormerForMaskedLM,ki=a.RoFormerForQuestionAnswering,Ei=a.RoFormerForSequenceClassification,Ai=a.RoFormerForTokenClassification,Ii=a.RoFormerModel,Pi=a.RoFormerPreTrainedModel,Oi=a.RoFormerTokenizer,zi=a.RobertaForMaskedLM,Bi=a.RobertaForQuestionAnswering,Ri=a.RobertaForSequenceClassification,Fi=a.RobertaForTokenClassification,ji=a.RobertaModel,Di=a.RobertaPreTrainedModel,Li=a.RobertaTokenizer,Ni=a.SamImageProcessor,Wi=a.SamImageSegmentationOutput,Ui=a.SamModel,Vi=a.SamPreTrainedModel,Gi=a.SamProcessor,qi=a.SeamlessM4TFeatureExtractor,Hi=a.SegformerFeatureExtractor,Ki=a.SegformerForImageClassification,Yi=a.SegformerForSemanticSegmentation,Qi=a.SegformerModel,Xi=a.SegformerPreTrainedModel,Zi=a.Seq2SeqLMOutput,Ji=a.SequenceClassifierOutput,ea=a.SiglipImageProcessor,ta=a.SiglipModel,na=a.SiglipPreTrainedModel,ra=a.SiglipTextModel,ia=a.SiglipTokenizer,aa=a.SiglipVisionModel,sa=a.SpeechT5FeatureExtractor,oa=a.SpeechT5ForSpeechToText,la=a.SpeechT5ForTextToSpeech,ua=a.SpeechT5HifiGan,da=a.SpeechT5Model,ca=a.SpeechT5PreTrainedModel,ha=a.SpeechT5Processor,pa=a.SpeechT5Tokenizer,fa=a.SqueezeBertForMaskedLM,ma=a.SqueezeBertForQuestionAnswering,ga=a.SqueezeBertForSequenceClassification,_a=a.SqueezeBertModel,ya=a.SqueezeBertPreTrainedModel,wa=a.SqueezeBertTokenizer,va=a.SummarizationPipeline,ba=a.Swin2SRForImageSuperResolution,$a=a.Swin2SRImageProcessor,xa=a.Swin2SRModel,Ca=a.Swin2SRPreTrainedModel,Ta=a.SwinForImageClassification,Sa=a.SwinModel,Ma=a.SwinPreTrainedModel,ka=a.T5ForConditionalGeneration,Ea=a.T5Model,Aa=a.T5PreTrainedModel,Ia=a.T5Tokenizer,Pa=a.TableTransformerForObjectDetection,Oa=a.TableTransformerModel,za=a.TableTransformerObjectDetectionOutput,Ba=a.TableTransformerPreTrainedModel,Ra=a.Tensor,Fa=a.Text2TextGenerationPipeline,ja=a.TextClassificationPipeline,Da=a.TextGenerationPipeline,La=a.TextToAudioPipeline,Na=a.TokenClassificationPipeline,Wa=a.TokenClassifierOutput,Ua=a.TokenizerModel,Va=a.TrOCRForCausalLM,Ga=a.TrOCRPreTrainedModel,qa=a.TranslationPipeline,Ha=a.ViTFeatureExtractor,Ka=a.ViTForImageClassification,Ya=a.ViTImageProcessor,Qa=a.ViTModel,Xa=a.ViTPreTrainedModel,Za=a.VisionEncoderDecoderModel,Ja=a.VitMatteForImageMatting,es=a.VitMatteImageProcessor,ts=a.VitMattePreTrainedModel,ns=a.VitsModel,rs=a.VitsModelOutput,is=a.VitsPreTrainedModel,as=a.VitsTokenizer,ss=a.Wav2Vec2CTCTokenizer,os=a.Wav2Vec2FeatureExtractor,ls=a.Wav2Vec2ForCTC,us=a.Wav2Vec2ForSequenceClassification,ds=a.Wav2Vec2Model,cs=a.Wav2Vec2PreTrainedModel,hs=a.Wav2Vec2ProcessorWithLM,ps=a.WavLMForCTC,fs=a.WavLMForSequenceClassification,ms=a.WavLMModel,gs=a.WavLMPreTrainedModel,_s=a.WhisperFeatureExtractor,ys=a.WhisperForConditionalGeneration,ws=a.WhisperModel,vs=a.WhisperPreTrainedModel,bs=a.WhisperProcessor,$s=a.WhisperTokenizer,xs=a.XLMForQuestionAnswering,Cs=a.XLMForSequenceClassification,Ts=a.XLMForTokenClassification,Ss=a.XLMModel,Ms=a.XLMPreTrainedModel,ks=a.XLMRobertaForMaskedLM,Es=a.XLMRobertaForQuestionAnswering,As=a.XLMRobertaForSequenceClassification,Is=a.XLMRobertaForTokenClassification,Ps=a.XLMRobertaModel,Os=a.XLMRobertaPreTrainedModel,zs=a.XLMRobertaTokenizer,Bs=a.XLMTokenizer,Rs=a.XLMWithLMHeadModel,Fs=a.YolosFeatureExtractor,js=a.YolosForObjectDetection,Ds=a.YolosModel,Ls=a.YolosObjectDetectionOutput,Ns=a.YolosPreTrainedModel,Ws=a.ZeroShotAudioClassificationPipeline,Us=a.ZeroShotClassificationPipeline,Vs=a.ZeroShotImageClassificationPipeline,Gs=a.ZeroShotObjectDetectionPipeline,qs=a.cat,Hs=a.cos_sim,Ks=a.dot,Ys=a.dynamicTimeWarping,Qs=a.env,Xs=a.getTopItems,Zs=a.hanning,Js=a.interpolate,eo=a.interpolate_data,to=a.log_softmax,no=a.magnitude,ro=a.max,io=a.mean,ao=a.mean_pooling,so=a.medianFilter,oo=a.mel_filter_bank,lo=a.min,uo=a.ones,co=a.ones_like,ho=a.pipeline,po=a.read_audio,fo=a.round,mo=a.softmax,go=a.spectrogram,_o=a.stack,yo=a.std_mean,wo=a.transpose,vo=a.transpose_data,bo=a.window_function;export{s as ASTFeatureExtractor,o as ASTForAudioClassification,l as ASTModel,u as ASTPreTrainedModel,d as AlbertForMaskedLM,c as AlbertForQuestionAnswering,h as AlbertForSequenceClassification,p as AlbertModel,f as AlbertPreTrainedModel,m as AlbertTokenizer,g as AudioClassificationPipeline,_ as AutoConfig,y as AutoModel,w as AutoModelForAudioClassification,v as AutoModelForCTC,b as AutoModelForCausalLM,$ as AutoModelForDepthEstimation,x as AutoModelForDocumentQuestionAnswering,C as AutoModelForImageClassification,T as AutoModelForImageMatting,S as AutoModelForImageSegmentation,M as AutoModelForImageToImage,k as AutoModelForMaskGeneration,E as AutoModelForMaskedLM,A as AutoModelForObjectDetection,I as AutoModelForQuestionAnswering,P as AutoModelForSemanticSegmentation,O as AutoModelForSeq2SeqLM,z as AutoModelForSequenceClassification,B as AutoModelForSpeechSeq2Seq,R as AutoModelForTextToSpectrogram,F as AutoModelForTextToWaveform,j as AutoModelForTokenClassification,D as AutoModelForVision2Seq,L as AutoModelForZeroShotObjectDetection,N as AutoProcessor,W as AutoTokenizer,U as AutomaticSpeechRecognitionPipeline,V as BartForConditionalGeneration,G as BartForSequenceClassification,q as BartModel,H as BartPretrainedModel,K as BartTokenizer,Y as BaseModelOutput,Q as BeitFeatureExtractor,X as BeitForImageClassification,Z as BeitModel,J as BeitPreTrainedModel,ee as BertForMaskedLM,te as BertForQuestionAnswering,ne as BertForSequenceClassification,re as BertForTokenClassification,ie as BertModel,ae as BertPreTrainedModel,se as BertTokenizer,oe as BitImageProcessor,le as BlenderbotForConditionalGeneration,ue as BlenderbotModel,de as BlenderbotPreTrainedModel,ce as BlenderbotSmallForConditionalGeneration,he as BlenderbotSmallModel,pe as BlenderbotSmallPreTrainedModel,fe as BlenderbotSmallTokenizer,me as BlenderbotTokenizer,ge as BloomForCausalLM,_e as BloomModel,ye as BloomPreTrainedModel,we as BloomTokenizer,ve as CLIPFeatureExtractor,be as CLIPModel,$e as CLIPPreTrainedModel,xe as CLIPSegForImageSegmentation,Ce as CLIPSegModel,Te as CLIPSegPreTrainedModel,Se as CLIPTextModelWithProjection,Me as CLIPTokenizer,ke as CLIPVisionModelWithProjection,Ee as CamembertForMaskedLM,Ae as CamembertForQuestionAnswering,Ie as CamembertForSequenceClassification,Pe as CamembertForTokenClassification,Oe as CamembertModel,ze as CamembertPreTrainedModel,Be as CamembertTokenizer,Re as CausalLMOutput,Fe as CausalLMOutputWithPast,je as ChineseCLIPFeatureExtractor,De as ChineseCLIPModel,Le as ChineseCLIPPreTrainedModel,Ne as ClapAudioModelWithProjection,We as ClapFeatureExtractor,Ue as ClapModel,Ve as ClapPreTrainedModel,Ge as ClapTextModelWithProjection,qe as CodeGenForCausalLM,He as CodeGenModel,Ke as CodeGenPreTrainedModel,Ye as CodeGenTokenizer,Qe as CodeLlamaTokenizer,Xe as ConvBertForMaskedLM,Ze as ConvBertForQuestionAnswering,Je as ConvBertForSequenceClassification,et as ConvBertForTokenClassification,tt as ConvBertModel,nt as ConvBertPreTrainedModel,rt as ConvBertTokenizer,it as ConvNextFeatureExtractor,at as ConvNextForImageClassification,st as ConvNextImageProcessor,ot as ConvNextModel,lt as ConvNextPreTrainedModel,ut as ConvNextV2ForImageClassification,dt as ConvNextV2Model,ct as ConvNextV2PreTrainedModel,ht as DPTFeatureExtractor,pt as DPTForDepthEstimation,ft as DPTImageProcessor,mt as DPTModel,gt as DPTPreTrainedModel,_t as DebertaForMaskedLM,yt as DebertaForQuestionAnswering,wt as DebertaForSequenceClassification,vt as DebertaForTokenClassification,bt as DebertaModel,$t as DebertaPreTrainedModel,xt as DebertaTokenizer,Ct as DebertaV2ForMaskedLM,Tt as DebertaV2ForQuestionAnswering,St as DebertaV2ForSequenceClassification,Mt as DebertaV2ForTokenClassification,kt as DebertaV2Model,Et as DebertaV2PreTrainedModel,At as DebertaV2Tokenizer,It as DeiTFeatureExtractor,Pt as DeiTForImageClassification,Ot as DeiTModel,zt as DeiTPreTrainedModel,Bt as DepthEstimationPipeline,Rt as DetrFeatureExtractor,Ft as DetrForObjectDetection,jt as DetrForSegmentation,Dt as DetrModel,Lt as DetrObjectDetectionOutput,Nt as DetrPreTrainedModel,Wt as DetrSegmentationOutput,Ut as Dinov2ForImageClassification,Vt as Dinov2Model,Gt as Dinov2PreTrainedModel,qt as DistilBertForMaskedLM,Ht as DistilBertForQuestionAnswering,Kt as DistilBertForSequenceClassification,Yt as DistilBertForTokenClassification,Qt as DistilBertModel,Xt as DistilBertPreTrainedModel,Zt as DistilBertTokenizer,Jt as DocumentQuestionAnsweringPipeline,en as DonutFeatureExtractor,tn as DonutSwinModel,nn as DonutSwinPreTrainedModel,rn as ElectraForMaskedLM,an as ElectraForQuestionAnswering,sn as ElectraForSequenceClassification,on as ElectraForTokenClassification,ln as ElectraModel,un as ElectraPreTrainedModel,dn as ElectraTokenizer,cn as EsmForMaskedLM,hn as EsmForSequenceClassification,pn as EsmForTokenClassification,fn as EsmModel,mn as EsmPreTrainedModel,gn as EsmTokenizer,_n as FFT,yn as FalconForCausalLM,wn as FalconModel,vn as FalconPreTrainedModel,bn as FalconTokenizer,$n as FeatureExtractionPipeline,xn as FeatureExtractor,Cn as FillMaskPipeline,Tn as GLPNFeatureExtractor,Sn as GLPNForDepthEstimation,Mn as GLPNModel,kn as GLPNPreTrainedModel,En as GPT2LMHeadModel,An as GPT2Model,In as GPT2PreTrainedModel,Pn as GPT2Tokenizer,On as GPTBigCodeForCausalLM,zn as GPTBigCodeModel,Bn as GPTBigCodePreTrainedModel,Rn as GPTJForCausalLM,Fn as GPTJModel,jn as GPTJPreTrainedModel,Dn as GPTNeoForCausalLM,Ln as GPTNeoModel,Nn as GPTNeoPreTrainedModel,Wn as GPTNeoXForCausalLM,Un as GPTNeoXModel,Vn as GPTNeoXPreTrainedModel,Gn as GPTNeoXTokenizer,qn as HerbertTokenizer,Hn as HubertForCTC,Kn as HubertForSequenceClassification,Yn as HubertModel,Qn as HubertPreTrainedModel,Xn as ImageClassificationPipeline,Zn as ImageFeatureExtractor,Jn as ImageMattingOutput,er as ImageSegmentationPipeline,tr as ImageToImagePipeline,nr as ImageToTextPipeline,rr as LlamaForCausalLM,ir as LlamaModel,ar as LlamaPreTrainedModel,sr as LlamaTokenizer,or as LongT5ForConditionalGeneration,lr as LongT5Model,ur as LongT5PreTrainedModel,dr as M2M100ForConditionalGeneration,cr as M2M100Model,hr as M2M100PreTrainedModel,pr as M2M100Tokenizer,fr as MBart50Tokenizer,mr as MBartForCausalLM,gr as MBartForConditionalGeneration,_r as MBartForSequenceClassification,yr as MBartModel,wr as MBartPreTrainedModel,vr as MBartTokenizer,br as MPNetForMaskedLM,$r as MPNetForQuestionAnswering,xr as MPNetForSequenceClassification,Cr as MPNetForTokenClassification,Tr as MPNetModel,Sr as MPNetPreTrainedModel,Mr as MPNetTokenizer,kr as MT5ForConditionalGeneration,Er as MT5Model,Ar as MT5PreTrainedModel,Ir as MarianMTModel,Pr as MarianModel,Or as MarianPreTrainedModel,zr as MarianTokenizer,Br as MaskedLMOutput,Rr as MistralForCausalLM,Fr as MistralModel,jr as MistralPreTrainedModel,Dr as MobileBertForMaskedLM,Lr as MobileBertForQuestionAnswering,Nr as MobileBertForSequenceClassification,Wr as MobileBertModel,Ur as MobileBertPreTrainedModel,Vr as MobileBertTokenizer,Gr as MobileViTFeatureExtractor,qr as MobileViTForImageClassification,Hr as MobileViTModel,Kr as MobileViTPreTrainedModel,Yr as ModelOutput,Qr as MptForCausalLM,Xr as MptModel,Zr as MptPreTrainedModel,Jr as NllbTokenizer,ei as NougatImageProcessor,ti as NougatTokenizer,ni as OPTForCausalLM,ri as OPTModel,ii as OPTPreTrainedModel,ai as ObjectDetectionPipeline,si as OwlViTFeatureExtractor,oi as OwlViTForObjectDetection,li as OwlViTModel,ui as OwlViTPreTrainedModel,di as OwlViTProcessor,ci as PhiForCausalLM,hi as PhiModel,pi as PhiPreTrainedModel,fi as Pipeline,mi as PreTrainedModel,gi as PreTrainedTokenizer,_i as PretrainedConfig,yi as PretrainedMixin,wi as Processor,vi as QuestionAnsweringModelOutput,bi as QuestionAnsweringPipeline,$i as Qwen2Tokenizer,xi as RawImage,Ci as ResNetForImageClassification,Ti as ResNetModel,Si as ResNetPreTrainedModel,Mi as RoFormerForMaskedLM,ki as RoFormerForQuestionAnswering,Ei as RoFormerForSequenceClassification,Ai as RoFormerForTokenClassification,Ii as RoFormerModel,Pi as RoFormerPreTrainedModel,Oi as RoFormerTokenizer,zi as RobertaForMaskedLM,Bi as RobertaForQuestionAnswering,Ri as RobertaForSequenceClassification,Fi as RobertaForTokenClassification,ji as RobertaModel,Di as RobertaPreTrainedModel,Li as RobertaTokenizer,Ni as SamImageProcessor,Wi as SamImageSegmentationOutput,Ui as SamModel,Vi as SamPreTrainedModel,Gi as SamProcessor,qi as SeamlessM4TFeatureExtractor,Hi as SegformerFeatureExtractor,Ki as SegformerForImageClassification,Yi as SegformerForSemanticSegmentation,Qi as SegformerModel,Xi as SegformerPreTrainedModel,Zi as Seq2SeqLMOutput,Ji as SequenceClassifierOutput,ea as SiglipImageProcessor,ta as SiglipModel,na as SiglipPreTrainedModel,ra as SiglipTextModel,ia as SiglipTokenizer,aa as SiglipVisionModel,sa as SpeechT5FeatureExtractor,oa as SpeechT5ForSpeechToText,la as SpeechT5ForTextToSpeech,ua as SpeechT5HifiGan,da as SpeechT5Model,ca as SpeechT5PreTrainedModel,ha as SpeechT5Processor,pa as SpeechT5Tokenizer,fa as SqueezeBertForMaskedLM,ma as SqueezeBertForQuestionAnswering,ga as SqueezeBertForSequenceClassification,_a as SqueezeBertModel,ya as SqueezeBertPreTrainedModel,wa as SqueezeBertTokenizer,va as SummarizationPipeline,ba as Swin2SRForImageSuperResolution,$a as Swin2SRImageProcessor,xa as Swin2SRModel,Ca as Swin2SRPreTrainedModel,Ta as SwinForImageClassification,Sa as SwinModel,Ma as SwinPreTrainedModel,ka as T5ForConditionalGeneration,Ea as T5Model,Aa as T5PreTrainedModel,Ia as T5Tokenizer,Pa as TableTransformerForObjectDetection,Oa as TableTransformerModel,za as TableTransformerObjectDetectionOutput,Ba as TableTransformerPreTrainedModel,Ra as Tensor,Fa as Text2TextGenerationPipeline,ja as TextClassificationPipeline,Da as TextGenerationPipeline,La as TextToAudioPipeline,Na as TokenClassificationPipeline,Wa as TokenClassifierOutput,Ua as TokenizerModel,Va as TrOCRForCausalLM,Ga as TrOCRPreTrainedModel,qa as TranslationPipeline,Ha as ViTFeatureExtractor,Ka as ViTForImageClassification,Ya as ViTImageProcessor,Qa as ViTModel,Xa as ViTPreTrainedModel,Za as VisionEncoderDecoderModel,Ja as VitMatteForImageMatting,es as VitMatteImageProcessor,ts as VitMattePreTrainedModel,ns as VitsModel,rs as VitsModelOutput,is as VitsPreTrainedModel,as as VitsTokenizer,ss as Wav2Vec2CTCTokenizer,os as Wav2Vec2FeatureExtractor,ls as Wav2Vec2ForCTC,us as Wav2Vec2ForSequenceClassification,ds as Wav2Vec2Model,cs as Wav2Vec2PreTrainedModel,hs as Wav2Vec2ProcessorWithLM,ps as WavLMForCTC,fs as WavLMForSequenceClassification,ms as WavLMModel,gs as WavLMPreTrainedModel,_s as WhisperFeatureExtractor,ys as WhisperForConditionalGeneration,ws as WhisperModel,vs as WhisperPreTrainedModel,bs as WhisperProcessor,$s as WhisperTokenizer,xs as XLMForQuestionAnswering,Cs as XLMForSequenceClassification,Ts as XLMForTokenClassification,Ss as XLMModel,Ms as XLMPreTrainedModel,ks as XLMRobertaForMaskedLM,Es as XLMRobertaForQuestionAnswering,As as XLMRobertaForSequenceClassification,Is as XLMRobertaForTokenClassification,Ps as XLMRobertaModel,Os as XLMRobertaPreTrainedModel,zs as XLMRobertaTokenizer,Bs as XLMTokenizer,Rs as XLMWithLMHeadModel,Fs as YolosFeatureExtractor,js as YolosForObjectDetection,Ds as YolosModel,Ls as YolosObjectDetectionOutput,Ns as YolosPreTrainedModel,Ws as ZeroShotAudioClassificationPipeline,Us as ZeroShotClassificationPipeline,Vs as ZeroShotImageClassificationPipeline,Gs as ZeroShotObjectDetectionPipeline,qs as cat,Hs as cos_sim,Ks as dot,Ys as dynamicTimeWarping,Qs as env,Xs as getTopItems,Zs as hanning,Js as interpolate,eo as interpolate_data,to as log_softmax,no as magnitude,ro as max,io as mean,ao as mean_pooling,so as medianFilter,oo as mel_filter_bank,lo as min,uo as ones,co as ones_like,ho as pipeline,po as read_audio,fo as round,mo as softmax,go as spectrogram,_o as stack,yo as std_mean,wo as transpose,vo as transpose_data,bo as window_function};
//# sourceMappingURL=transformers.min.js.map